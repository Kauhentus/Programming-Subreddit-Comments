SQL light is just a very small relational database it is stored in an single file and does not be hosted on an server. It can be stored locally, for the use of your program this would be a nice approche.
&gt;Do you mean they might stop making .NET Framework after 4.8? Maybe not after 4.8, but yes, eventually. There haven't been significant runtime improvements in a while (while there _have_ been for .NET Core), and they're generally on a path away from the monolithic, GAC, etc. nature of .NET Framework towards more self-contained stuff like NuGet.
&gt;Hey! It looks like you're trying to write a ~~function~~program! You can download that program here! 
&gt;the communication was such that we didn't see it that way Not long ago, there was some sort of announcement from .Core about a bunch of stuff that wouldn't work in a upcoming version of the framework. In my head, it confirmed my choice to not use .Core for a green field project. I was going to throw away the bits I had written and use .Net Then Miguel de Icaza announced (on twitter?) that they were wrong and that the stuff would work. I can't remember the wording (or find a link) but it really made me feel like "the adults have entered the room". By the time I got back to the green field project, I had changed my mind and decided to keep it in core. 
&gt; basically data-driven decision making in this case from what I can tell... Is that really AI? Yes, anything that uses machine learning tends to be called AI. &gt; I never understood why intellisense couldn't make somewhat smarter suggestions just based on context. Why do we need AI to guess that a `Length` property is probably a good fit for a `length` parameter? Do you want to write hundreds of rules about what should be suggested when? Or do you let the computer figure that out on its own, possibly better than you ever could? &gt; just simple matching of types would go a long way I agree that that's useful and ReSharper already can do that. 
&gt; Do you want to write hundreds of rules about what should be suggested when? Or do you let the computer figure that out on its own, possibly better than you ever could? The latter obviously, I'm just saying we don't need machine learning for that. A fuzzy-string matching algorithm would go a long way.
Sources needed. I don't see why is a mistake. They are adding a lot more APIs on .NET Core 3, and because of that, EF6 should work. Simple as that. 
No. .NET Core 3 still is cross-platform. WPF != .NET Core 3. Just because WPF will run on .NET Core 3, doesn't make .NET Core 3 itself WPF... 
If you are still searching, you may be interested in a mono\-wasm framework I've started, [Frogui](https://www.lesarde.com/frogui). It has a console class that emulates .NET's System.Console. I'd be happy to add whatever improvements you'd need to get your project rolling. One idea for porting is the popular [Gui.cs](https://github.com/migueldeicaza/gui.cs) project. I have an existing task in frogui's repo [here](https://github.com/lesarde-co/frogui/issues/6).
A machine learning algorithm has the potential to evolve and become more and more useful over time. A fuzzy-string algorithm that's "pretty good but could use improvement" will never be any better than that.
I'm not sure it isn't a misapplication of machine learning, to be honest. Yes, the machine learning algo will fit the average case better than a string match; but be potentially less predictable and worse outside of the average case. I guess it remains to be seen.
[Azure IoT hub](https://azure.microsoft.com/en-gb/services/iot-hub/) might be a good candidate for a project like that.
The "big thing" in .Net Core 3.0 is Windows-specific yes. But that doesn't mean it won't include other things too, including things usable from other OSes.
&gt; Doesn't that defeat the cross platform bit?? No?
How exactly would you expect *.Net* to increase support for Electron?
I am torn between awesome and no way. If .net core stays cross-platform and desktop stuff does not break cross-platform-ness of libraries and nugets then it is great but if we get into some weird dependency nightmare where command line app requires WPF to resize bitmap in memory then I am not a fan. 
&gt;Edit project files in Visual Studio without unloading About bloody time
Over the years I noticed that some people really hate things they do not understand. It can be the best algorithm ever but if results cannot be explained and if that algorithm screws-up even once then it is viewed with suspicion. In some sense it is natural. Magic boxes sometimes explode.
Sure but xeno’s observations are fair. The performance is inherently less reliable than for a hard coded algorithm. We just need to see how it goes.
You probably want the Arduino to listen for commands through serial port. Then you would made your desktop C# application to find the right serial port and send some commands through motor control. This isn't exactly trivial if you are new to this, because you basically need some kind of communication protocol. I think Firmata is what you might want to run on arduino instead of writing your own, custom code- it let's you control an arduino through serial
Pluralsight is a goldmine. It's paid but worth it. 
What I mean is nothing that competes with it on the basis of taking a web application(HTML and Javascript) and turning it into a desktop app. If you read the whole comment you would see I was differentiating between native apps like QT, Cocoa, WPF, etc. Most applications today start out as SPAs that can be accessed via the web and then electron is brought in to make a desktop app. Where I work we develop web applications and sometimes we distribute them via electron to customers that don't have modern browsers.
I work on a UWP app as part of my day-job - seems fine, but not buying an island any time soon. Also got an app on the store, but it's super nice and free :) I would say that only since november, after .Net Standard 2.0 became available in UWP apps, do we get a good enough api surface and choice of libraries. 
If you have any power to alter the database, you may consider creating a calculated column that concatenates the other columns and then just do a .Where(x =&gt; x.Concatenation.Contains(query))
This is like [https://www.deepcode.ai/](https://www.deepcode.ai/) , but with a Visual Studio requirement \+ C#\-only focus. Wish it could be used in VS Code; or they could team up with the DeepCode folks...
Cross platform UI has always been wonky at best. Either you create native-looking applications from the same code and risk breaking the UI on some platform (wrong alignment/padding/event handlers) or use one HTML/CSS/Fancy custom UI that is the same on every OS.
Thanks. I Implemented this is a sort of silly way... but it did speed up processing very much. Instead of HashSet hash=new HashSet(); hash.Add(obj); hash.Add(obj); it's now Dictionary&lt;BaseEntity, BaseEntity&gt;() hash = new Dictionary&lt;BaseEntity,BaseEntity&gt;(); hash.Add(obj,obj); then when it's time for look up. If (results.ContainsKey(GetType(Parent))) Then Dim parentHashObtainer = New Parent() parentHashObtainer("KeyID") = Me.DataAs(Of Integer)("KeyId") BasePkg = results.Results_Dict(GetType(Parent))(bPkgHashObtainer) End If but since I was creating a unique list, I had already been using a hashset. Since I had already been using a HashSet the base entity object already had to override the GetHashCode() function to calculate a hashcode based only on the values of the key columns. So.. Since a dictionary inserts by hash first, and if it hits a duplicate uses the Equals member (Which had also already been overridden to check key values only) and the hashset simply discards matching hashes... this both speeds up the processing and makes it slightly sturdier against arbitrary hash collisions right? Thanks. Lol, this has been an issue at the back of my mind for a couple years now... nice to get a decent speed up for small change. 
That is absolutely incredible integration for VS2017. Thanks for the link!
Heh. Possibly an element of 'shiny new thing' too. But I have an open mind. If it turns out to be a good idea I'll happily eat my words.
Something nobody has explained is that it kind of doesn't makes sense to “add Electron support to .NET Core” when the whole point of Electron is cross platform apps using *JavaScript*, not .NET . Regardless of the hate Electron gets, the idea can't work to begin with.
Okay, I give in. I've not played with Docker, but I've been seeing it mentioned all over the internet. What is it? A library, a container, and a vm?
Yah, I've hit the path limit a few times in the past, but not lately.. Really annoying, consider it's supposed to be able to handle 32k characters on NTFS. (I think)
Should really benchmark via the StopWatch class imo
Didn't try, but the video definitely showed some stutters.
Just announced at Build 2018. A version of this framework has been used internally to Microsoft for a few years now and they have finally created a version available to the public. 
The performance is not less reliable because it's machine learning. The entire point of it is it will train in the background, the model it creates already knows the expectation of what it's going to give you based on some input, I can "almost" guarantee it's going to be much faster, it's not doing comparisons to figure anything out, that's what the trainer is for. In ML, if you ask for a hamburger, you get a hamburger. With a ton of checks, you would see is this a taco? How about a hotdog? Etc, until you figure out it's a hamburger.
It's an ever evolving model that the computer trains itself on. This is more AI than any "ai" we've ever had (regarding all ML, not just this scenario.)
That's a file for continuous integration automated builds, namely Travis. It requires it to be at root, otherwise I would stick it in the build folder (so annoying).
Yes, my point exactly. ML is meant to emulate human learning on a far better scale. The question is: Is this a problem where learning will provide an optimal solution? I'm not convinced.
Fully standalone WPF apps (with no dependency on a specific version of the .NET framework being installed on the client) are a big improvement, even if they remain Windows-only. Nobody wants to ship an app with a dependency that requires admin rights to install so it gets written off as an option right from the get go. To be honest I think Electron has already won this war but I think we might at least see an uptick in the number of WPF apps that in the wild. It’s crazy how vanishing small the number of open source WPF apps is.
Judging by the example at the "Get Started" link, seems you can use it locally.
Is that true though? Or do I just not know something? Windows 7 will be supported for 11 years (ends in 2020). Are there any other OS that give support for that long?
ok.. so xml is a containerized data source where the containers are blocks of xml represented &lt;NameHere&gt;&lt;/NameHere&gt; now these block can have other nested blocks within them.. &lt;NameHere&gt;&lt;FirstName&gt;Testing&lt;/FirstName&gt;&lt;LastName&gt;Tester&lt;/LastName&gt;&lt;/NameHere&gt; so knowing these basic things by simply observer what it looks like you can analyze it. for instance say you wanted to just get the start tags and the data out. var getStartTagsAndData = from tagData in File.ReadAllText(filepath).Split("&lt;/")?[0] select tagData;
Yeah, to OP’s sentiments... whoopty do. 
That would be tough, they’re taking the easy pah
Yep, exactly. Weak sauce.
Dropping support is not the same as stopping development. 
I prefer to deserialize the XML into a generated class structure then use LINQ to objects to query it. Google: generate classes for xml. Copy paste the C# into a separate class library. Use an xml serializer (again, Google is your friend) to initialize the object model. From there, it's standard C# with objects and lists.
There will be packages that depend on .net core and Windows. The cross platformness of core will not change. The cross platformness of winforms apps will not change. A winform app will just be able to target core while remaining on Windows. 
Aye, most likely all the windows platforms but but not necessarily Mac and Linux. 
From the github: &gt; ML.NET runs on Windows, Linux, and macOS - any platform where 64 bit .NET Core or later is available. I'm not aware of any other restrictions on where it can run. 
Nope.
I personally like David Fowler’s [.Net Project Structure proposal](https://gist.github.com/davidfowl/ed7564297c61fe9ab814) as I feel it’s aligned with what we commonly see in open source projects, most of which seem to be influenced (or developed) on Linux or *nixes.
After reading some comments I think there is something being lost in translation. These are not being added to .Net Core. What they are doing is making them compatible with .Net Core. They are just going to be sitting on top of .Net Core separate from .Net Core.
Maybe too early to ask, but out of curiosity does anyone have comments comparing this to Accord.NET ?
Didn’t they add support for this a while back? You can edit the newer project formats without reloading. Or is this for _all_ project formats?
You're looking for [Avalonia](https://github.com/AvaloniaUI/Avalonia) -- it's currently in beta.
That's not a bad format. Thank you for telling me about it.
Part of the criticism of Electron doesn't concern its concrete implementation, but the concept. You're wrapping HTML (which is intended for writing hypertext, not applications, and is a poor fit for them only being used as an accident in history), CSS and JS (hardly the cleanest language to develop apps with) in an engine that you then only use for a single app. So you have impedance mismatch and inefficiency out of the box, no matter whether you go with Electron (Chromium Embedded Framework) or something else.
This is a pretty big topic, but there are plenty of resources available online. Search for tutorials or code related to XDocument and/or XElement to learn how to load/query xml with linq expressions. Here is a quick &amp; dirty solution to your problem, for inspiration: https://dotnetfiddle.net/SZdWMM
I'm not sure, don't think it's possible in VS2015 but I haven't tried 2017 yet.
Aahh okay. Thanks for clarifying. I was almost scared that it would become less cross platform. 😁 started learning C# for dotnet core recently so still quite new to the whole eco system. 
WPF/WinForms will never come to .NET Standard. If you develop against that interface, you will remain cross-platform.
You can say the concept is bad but it doesn't change the fact that the world of user interfaces is on the web. That fact won't change and web isn't going away. I think a great number of people that hate electron hate it because they are clinging to native ui applications and don't want to embrace the web world. Don't get me wrong there is a lot to I hate about the web SPA world but I won't deny that it appears to be here to stay. Since I have web interfaces and web engineers I need a way to distribute that to desktop people. Hence Electron. People get angry at Electron but what they are really angry about is not electron but the whole web SPA industry. To those people its time to get over it and just accept that web is here and its the new way to deliver clients/user interfaces to customers. Given that give me a solution like electron but better? There is none so we can't really complain. 
Ah. That makes more sense!
So, isn’t this another case of ‘oh we’re microsoft, ML? We can do that too.’ Except that the state of the art in ML is with TensorFlow, with hardware acceleration, libraries for running and training models on mobile devices, a great deal of pre-trained models, etc... and even azure services plugging into this ecosystem I’m not saying that MS can’t have their own ML libraries, and granted, maybe it all fits in — though i don’t see mention of that in the readme... so if it’s something different, why wouldn’t they rather be part of one of the existing ML frameworks (TF/Caffe/etc) than throwing out something new... Or at least support Miguel’s TensorFlowSharp project..... hopefully this is that in some rebranded form...
Thank you. I was thinking along those lines. Slightly concerned about lag, but probably wont be too bad and I can delay game events anyway. 
Fair, thanks for the explination
Practice and experience. It takes time.
I'm not convinced this muddies the waters. A true cross platform will allow you to drop to targeting a single platform when you need to, while still utilizing the best of the cross platform platform otherwise. Core \+ WPF for example is no different to me than Xamarin.Ios or Xamarin.Android
Yes, it got a lot better. I think the early days they were prioritising the most commonly used API's because there's only so much time in a day. Then later the Standard 2 announcement came along, although there was no time scale for it at the time, then eventually it got sorted. I like Miguel. 
Don't use string manipulation to parse XML under any circumstances.
It takes time. Work on a small feature and you'll start to see how it all fits together. Talk to your team to find out how stuff works, they don't bite (probably, some of them might). Enterprise code is often messy as hell, it's that way because the people who came before you also had stuff to learn, or had learned it but had time pressures that were unrealistic. So as AngularBeginner says, practice, experience and I'll chuck in patience and utilising your team as mentors. 
Does the wcf service talk soap? That would be a lot of work for a poor microcontroller.
Accord was pretty comprehensive 
I fail to understand how this works. Do I need to develop my SignalR project as a microservice and deploy it as a separate Azure item? What if I have a SignalR part in my normal web app that also serves normal web pages and I maybe share a cache?
Ooh - cross platform WPF! No wait, its Windows only. HTML it is.
I didn't
Yeah but my point is again for a lot of enterprise apps cross platform isn't an issue. I'm not choosing a framework because its cross platform if I'm developing for Windows. I feel like your intentionally missing my point now.
Removed: Rule 4.
Finally. I have been looking to do sentiment analysis in .Net for a while now. I really wish Pythons NLTK could get ported over, but now it looks like that won't be needed. 
TO be honest, I didn’t use the confit subsystem either :-)
RHEL is the only one I can think about
Or [Eto](https://github.com/picoe/Eto) which also supports mobile clients.
I forgot nothing!
&gt;overwhelmed by the amount of code, the complex structure of code and many other things typical of corporate development. Totally normal! That is how coding is. Just gotta push through. 
newbie here, are there more resources i could look into aside from the [MSDN ](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/sentiment-analysis)to start learning this framework?
I believe it is called Core because the idea was that it would represent the core of the .NET platform. All other versions being a superset. It has slowly become more important than orginally intended, since the main goal was to support ASP officially on many platforms with ASP Core. Though maybe that wasn't an official stance.
Not just different API, things like project.json that made it incompatible with existing tools. 
&gt; It's just so different compared to what I saw and did when following C# code in tutorials, books and courses. Problems presented in coursework and instructional materials tend to be somewhat contrived and simplistic, because they're about demonstrating or exercising particular skills or principles. Reality isn't so constrained. This is normal. &gt; How should one get accustomed to the real work environment? Not really practical to do except by doing. Ask questions of your seniors when you run into things you don't understand, pay attention to the answers you receive, and try not to spin your wheels too long on something you don't understand.
https://www.youtube.com/watch?v=r-60NkfM8js
Thank you once again, you are full of knowledge! I have spent some time going through Akka docs, and a little bit at Orleans. They both actually look pretty awesome, but I'm now thinking perhaps a little out of my ball park in terms of resources to get things done \(i'm just a lone umm bbgun\)....so I am going to try and stick to a non\-distributed system for the moment.... I've managed to get a half baked singleton version working as per the initial plan above. I think it will work ok with some compromises... Still going to return to understand the Disruptor, but I haven't had time yet....I think you are possibly right that this looks probably the most promising for my circumstance. Really do appreciate your advice, I now know where I have to head should things not work out with my halfbake. Wishing you the very best, and thank you one more time for your help.
Wow, that's weird. I'm studying for this exam now. Rob Miles taught me programming at university. Weird that I might be reading his study material again.
Whelp, I still code for windows, wpf and winforms so I'm happy. Would it be nice if core had cross platform UI? Yes. But I'm thankful I'll be able to use core with wpf/winforms. 
I use ZetPDF.com. Works perfectly for me. Best regards Addison Ervis
As i understand it it is more of a "wrapper" for ML and DL like Entity Framework is for databases. &gt; Over time, ML.NET will enable other ML scenarios like recommendation systems, anomaly detection, and other approaches, like deep learning, by leveraging popular deep learning libraries like TensorFlow, Caffe2, and CNTK, and general machine learning libraries like Accord.NET. https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/
Sometimes I find it helpful to use the step into start option rather then the run start option and then step through all the initialization code. Often you can find a lot of information about what a program does and how it does it through it's initialization code.
Removed: Rule 4. Please post the relevant portions of code, what you tried, and how it isn't working. If you are receiving error message, please include the full message and stacktrace. From the post title, if the code is in Visual Basic, please post it to /r/visualbasic/ as this subreddit is for C#.
Hang on... never used even AppSettings?
Hi what is it?
I also wish we didn’t have to use the ridiculous interface of developercommunity (seriously, has anyone successfully entered sample code in there? Is this a Safari-specific issue?) when GitHub‘s is so much nicer.
https://developercommunity.visualstudio.com/content/problem/172701/file-copied-to-output-dir-is-deleted-when-debuggin.html 
Interesting, that blog post is much better than the linked readme. Thanks.
Yea I think this is the direction I will end up going. Kind of a bummer though. 
Check my reply in the down-voted thread :)
All i have been able to find so far, new framwork so dont think there is much out there yet :) https://blogs.msdn.microsoft.com/dotnet/2018/05/07/introducing-ml-net-cross-platform-proven-and-open-source-machine-learning-framework/
One of my PCs was ~5GB another ~1GB. I guess it depends on what features you have installed. 
I would avoid XML except for legacy interop scenarios. The best/fastest/easiest approach to interop is Newtonsoft.JSON.
That depends on whether or not you were using product X when support for it gets dropped. If you are, it certainly feels the same.
I agree. Not an xml fan at all. I am connecting to amazon apis though and have no choice. In the past I have written kludgy xml read forward stuff and it works fine. Wanted to learn how to do it the right way this time. 
Looking at it... you didn't upload any example (because apparently you can't reproduce it besides a single project), and the last thing on your post was "Please upload your project to OneDrive and share the link here. Then I will download it immediately. And then I can try reproduce your problem in my side." which either was never followed up on or you didn't actually do it. I would try again at recreating it.
Yeah same here, I’m definitely going to have a feature cull. I’ve definitely downloaded a few GB too many... still seems like large downloads though even without many features enabled just for an update. 
Maybe try using OBS Studio to record the issue instead of the potato. https://obsproject.com/
&gt; because apparently you can't reproduce it besides a single project What factual information do you have that supports that statement? It's not necessary to post it here because it is irrelevant. That fact that visual studio is broken for the project I use every day and that is sufficient to justify my request. &gt; "Please upload your project to OneDrive and share the link here. Then I will download it immediately. And then I can try reproduce your problem in my side." Where did this text come from? It has been two and a half years and NOW I'm being asked for a project? What work has been done in the last two and half years? Why don't you put some effort into solving the problem and prove it does not exist. I can reproduce this issue at will. Others on Stackoverflow have confirmed the problem exists also. 
/u/the_other_sam I'm not sure you realize how much credibility you lose when you say things like "I dont want to install any spamware screen cap software on my development machine, sorry." Without knowing anything about the bug, it's hard to take it seriously when it comes from someone with this mindset. This is basically: "Hello, Volvo support!" "Yes, my car won't start." "OK, what happens when you put the key in the ignition?" "LOOK I don't know all these technical terms like KEYS. I just want car to go." "OK, we'll look into it. Thanks for calling!"
Thanks for the link. I guess it should work better than the potato.
Did you not see the video I posted of me recreating the bug? 
What the fuck? You literally posted in that thread you couldn't reproduce it in a new project, and that wuote is from your original thread, the guy trying to help fix it
You mean employment/freelancing jobs?
I'm beginning to see why your issue wasn't ever addressed, lol. Now, I want you to go back and read my post REAL CAREFUL NOW.. and pay special attention to this part: &gt; Without knowing anything about the bug Are there any words there you need me to define?
this one? https://www.reddit.com/r/csharp/comments/8g60pg/come_discuss_your_side_projects_may_2018/ 
I want the copy paste bug fixed! And I’ll be at 100% satisfaction. 
I gave it a try but I encountered a similar problem to that when i tried to use a webClient. I think the problem is that the request returns an empty shell of what I want since the actual information is only available when I'm logged in yet the address remains the same. Sorry for your time I should probably state that in the main post. Precisely what i got compared to the above snippet from browser console: &lt;div class="lagmeter"&gt;
I don't even remember ever seeing that request I guess that is my bad. Unfortunately I cant upload the project because of confidentiality which I didn't consider. For the record this issue persists across multiple physical machines multiple versions of VS. I did not put a lot of effort into reproducing the issue in a new project since that is not what my clients pay me to spend time on. I can repro the issue at will for the project I work on and others have confirmed having the same issue.
Yah, like I people to do small jobs. 😁
Use Htmlagilitypack. Has been asked many times before
There's a monthly job/hiring sticky posted mid-month (the 16th) you can post them in. Otherwise it's a violation of Rule 1. There are some job subreddits, perhaps /r/forhire or check out /r/freelance for other resources.
Removed: Rule 1.
yis, darn, I was hoping someone jumped on an alpha release and was knocking out some cool stuff
Visual Studio has bloated. It's just so freaking slow all the time. (I have 32 gigs of ram thanks for asking). It's probably our teams fault for putting solutions with huge # of projects and going to a micro-service architecture has helped a TON. But overall I still find the VS experience sluggish for anything non-rudimentary. 
Try not to understand entire files. Focus on a single flow of the application.
Hi, job title of junior c# developer here, but learning really. England. 
holy crap this might be what caused a release build of our windows forms app for me to fail today. 
I would advice you to get on the C# Discord group (Link is in the description of this channel) and ask there. You'll get responses more quickly then. :) 
VS Setup dev here. It really depends on what you have installed and which pieces have revved. Sorry it took so long though! Xamarin pulls in a lot of Android packages that are ... large.
Version 15.7.1 is now live shortly after 15.7, but I can't find any release note for this one....
That's the thing, how would I know what tools I never use unless I dug through hall the menus, features, components to find them. If I was required to add what I needed I'm sure I'd have a complete list of 'what I do use'. Anyway, it was just one suggestion on reducing the bloat of VS to maybe help with performance a little.
you wouldn't of hit debug if it was a release build, so sorry, it wasn't.
For the login part (since that seems to be your issue), the easiest way is to hardcode your session cookie (don't give this to someone else then, though). Some sites also require a user-agent to be set. You can get the session cookie by copying it from your browsers developer console (F12 key for Chrome/Firefox)
Some websites may not load everything until the Javascript executes. You may want to look into using selenium if this is the case. It'll load a browser, navigate to the page, and find the div based on your search parameters, once found you can pull any info from it you like.
 Your factory runs a build, then hits F5 inside of visual studio to start debugging before it does a release build? That's what his issue.
no worries. it runs the build in debug mode, and the failure case is that it can't find the one file i have added which is set to "copy to output directory: always". 
Perhaps it'll be easier to make a copy of the existing failing project, and just start stripping away confidential elements en masse, until either you find the offending part of the project or you have removed all confidential content. If these issues affect you _daily_, and you've been dealing with it for _two and half years_, maybe it's time to finally [put the time in](https://xkcd.com/1205/) to figuring it out.
Do you have JavaScript experience? Chances are, anything you do involving a website will be made much easier with JavaScript. Naudio seems to be a way of playing audio locally; having Naudio in the web server code is not going to help you play audio on client machines connecting to that server. [Depending on the constraints you're under, this may or may not be possible](https://xkcd.com/1425/) Naudio seems to have the ability to download audio from a website and play it locally. You could create an executable that does the music playing and visualization by accessing your website using hardcoded or configured URLs. You could even add an endpoint for downloading the compiled executable from the website. What would be extremely difficult would be creating a music player/visualizer within the browser (using Naudio as a C# package). That's something much more doable with JavaScript or (as another commenter mentioned) existing html5 media players.
Maybe I’ll try html5 then. I’m sure my professor won’t mind me using JavaScript. but since I’m in a C# class I don’t want to put the effort into it and get a bad grade due to me using a language that the class isn’t about.
That's the recommendation i was given by multiple people. I'll put some time into researching how to do it with HTML5. :) At least the music player portion. I'll work out how to make a visualizer once i at least get that done.
Check out the library HtmlAgilityPack.
You can PM me with any specific questions-- I'm a .net core, js, sql guy.
If you mean the razor copy/paste issue, it is actually fixed in this release https://developercommunity.visualstudio.com/content/problem/169910/razor-cshtml-bad-automatic-formatting.html
This is exactly what they did with VS 2017. What you asked for is literally already in place. When you first install VS 2017, it gives you a whole bunch of options to install only what you actually use. I don't do mobile development on my personal machine, for example, so I simply didn't check that box when I installed VS. So... yeah. Take a look at VS 2017 since apparently you haven't yet.
As a follow up, I went to a few more sessions today and yes I can confirm it's entirely local ML. Once the model is trained, you can save it to a zip file and load it right into your app, so you can train on one set of hardware and then apply the model locally on your application server.
I'm not a huge fan of Electron but why is it a hard no?
Yeah, killed my afternoon. Fortunately I had some Pluralsight videos I needed to watch still.
Support, patching, and resources. Something like GTK and WinForms (for example) will be considered first as it's already in the OS and patched and supported. Also It's just not worth a gig or more of ram so you can use HTML to make a UI. And it needs to be considered if it can be supported with no major over-hall updates in 5-10 years. Almost all Electron apps you see are consumer and home users. Nothing wrong with that. But if you have to buy extra ram for 200 workstations to support a chat app, you're going to either let the users suffer or use a different app.
Gotcha, that makes sense. Thanks!
Nice. Unfortunately I just rolled off a project that could have used it. 
I have vs 2017. It is faster then 2015, praise Roslyn, but I still want more. I installed it a few years ago so maybe I don't remember all the options.
Looks very nice! I think that horizontal and vertical options for the svg should be helpful, wold be cool to have icons on top and text on bottom, or any other desired positions easily. Is there any plans for Xamarin forms? 🙄😬
Nicely done!
I'm, um, not sure how to put this. pns:ItsFromTheLibraryName psn:NoReallyIUnderstand pns:ButTheNAndTheSharpAreRedundant psn:TheyBothMeanThisIsALibraryForTheDotNetEcosystem pns:AndItLeadsToThisUnfortunatePrefix
If it's about web stuff though chances are that the course will progress into asp, which makes frequent use of JavaScript. While I'm primarily a C# developer, I spend some days working mostly on JavaScript. You shouldn't get marked down for it unless the prof is a right numpty. 
Why do you think enterprise software vendors are ditching their WinForms / WPF apps and going for cloud/HTML? To quote you: "god, I hope so".. It's so they don't have to maintain different versions of enterprise apps for Windows, Mac and mobile. It's so they can upgrade once and everyone gets the latest version. It's so they don't have to ship boxed software. I build, sell and support enterprise software. Believe me, if you're writing WPF now, you will have a bright future in packaging upgrades and failing to up-sell it. If you are writing Web apps, you will have a bright future in selling subscriptions and incrementally improving it.
I'm in
&gt; please don't quote me Guy at Microsoft
Please change the license to at least LGPL. GPL is unusable for closed source projects, like most commercial projects. Thank you. 
The demand surprised me as well but it kept me going for 10 years. Its an interesting niche where I worked on anything from production planning tools through to a project looking after $500m of hedge funds. But this is where most of my business came from; In a lot of large companies, if someone wants a bit of software developing they have to go through a very long internal processes that can take years to complete. Specs have to be agreed, budgets approved, IT departments sign offs, testing etc etc. This was a problem faced by anyone from team managers through to CEOs of global corporations. Alternatively they would come to me and get a tool developed in Excel. It by passes all of the internal processes and can often be paid for out of day to day budgets.
I hadnt really thought of Discord as a learning platform - the only time I really use Discord is to play games. I shall look in to it thanks
Thanks - I might just take you up on that.
Thanks everyone for the comments and PMs - I'm a bit surprised by the number of people interested. I will look in to finding some sort of platform we can keep in touch with (A Facebook group or similar)
What did you guys do? Why can't I open any Xamarin iOS or Android projects andmore after this update? They are all marked "incompatible". This update totally breaks Xamarin development! [Screenshots](https://imgur.com/a/FWW7I0L)
You should report that either using the "Send Feedback → Report a Problem" menu or at https://developercommunity.visualstudio.com/.
It needs a predicate, a function that returns a bool FindIndex(x =&gt; x==Convert.ToInt32(YourText) +1);
Introducing new tech for the purpose of it being ‘the microsoft way’ when the industry is using proven solutions isn’t innovation or progress. Without a clear definition of the advantages that an alternative solution brings to the table, it smacks of ‘me too-ism’ — and Microsoft is known for doing this, many times abandoning that tech down the line when it fails to gain sufficient traction as it was introduced to the market too late to pick up a sufficient share. In marketing, the leading cause of product failure is the inability of a product to differentiate itself from others already in the market. I get your point, but others have pointed out through blog posts that ML.Net is an extensible framework and will bring existing ML libraries to the reach of .net developers — which is actually great.
[I don't stay anonymous on this account] (https://twitter.com/camsoper/status/963534774701842439?s=19). 
Is already reported there and seems to be a broader problem. [Link on Dev Community](https://developercommunity.visualstudio.com/content/problem/246920/unable-to-load-android-and-ios-projects-needs-migr.html) [Link on Xamarin Forums](https://forums.xamarin.com/discussion/126346/updating-vs-2017-to-version-15-7-0-results-in-several-of-the-projects-to-be-labeled-incompatible#latest). And no one seems to have any solution other then completely uninstall VS and install an older version using really inconvinient direct download (basically costing half a work day I assume). This doesn't seem good. Shouldn't be 15.7 be pulled until this is fixed before it affects too many people?
Hahahaha you've made my day. I hadn't thought about this but I think you've convinced me: I'll keep the documentation as is **😂**
Holy shit. Didn't expect hat.
I've built a very similar set of controls for Xamarin.Forms, however it's for work so I can't share the source. As a concept I am using SkiaSharp to render the SVG data cross platform, then use a PlatformEffect on each platform to grab the click, move, etc events through to a base control that then handles the highlighting of the control. Take a look at fontawesome as a library for the source SVG images, all of the icons are published as SVG as well as fonts and gives a great library of usable icons, also MetroStudio by SyncFusion. Also, can you look at publishing this as a NuGet package please? You'd shorten your install instructions dramatically :) 
Thanks a lot for your feed back. You are getting to a lot of interesting things: - I will look into fontawesome as it sounds like a good complementary library PrettyNSharp users could rely on to get new SVGs. - you’re the second person to talk cross platform, and I’ll probably direct my effort in that direction next - NugGet support is a great idea as well. Seems like there is a lot to do 😅 Thanks again! 
It sounds like it was a bad idea. I’m sure you can probably do something with commands to build etc but I prefer to keep my projects separate for source control , build pipeline etc etc 
just rechange the name to RTDDPNS (Real Time Data Distribution Pretty N Sharp)
Yeah, what's the point?
Nah, the commercial projects should change to a Free Software license. You can still sell it, you just let the user control the program instead of it (and you) controlling the user.
So..... Clearly if you are creating commercial software then you have the time to make this sort of thing yourself.... This is what does fuck me off about people, oh open source lets use that. Well cool but what are you putting back in, someone mentioned a few ideas above, are you going to make the changes and commit them ? Love opensource try to add bits where I can, but companies that assume opensource = free are wrong, it has taken people time and energy to create these things
Completely agree mate 
One option is to detach the debugger, build, then reattach the debugger. But usually I have one side running without debugging at any given time.
You can do that, and there is good reason to, but you lose the ability to step through the layers. Having the debugger go from one side of the WCF call to the other is a huge help at times. (When it works.)
So someone I assume /u/LittleCodingFox is the one downvoting all the comments that tells him/her they are being unreasonable lol
&gt; ButTheNAndTheSharpAreRedundant I thought it was meant to be read like "pretty and sharp".
I would appreciate it if you didn't accuse me of anything without proof. That's a very poor attitude. 
Removed: Rule 3, spam. This subreddit is for C#, not C++. Try /r/cpp instead.
Twilio supports SIP. Though I haven't used it myself
Assuming you want threading would be bad in most cases. It's easier to make it async yourself when you don't care about order than to stop it being async when you do.
[This](https://github.com/MahApps/MahApps.Metro.IconPacks) might be helpful aswell.
I’d like to point out that the “pns” prefix is totally arbitrary. The users can chose whatever they want when they make the PrettyNSharp namespace mapping declaration. You could turn it into &lt;foo:SharpButton/&gt; if you want. Obvisouly I can either change my doc to be &lt;ps:SharpButton /&gt; or think about changing the name of my project. I liked the “pretty and sharp” name because it was sort of a play on words around the fact that it’s not only pretty but also “smart” (but also sharp, and also for Csharp).
&gt;-Change the code so that the first time a tile is clicked its letter is added to the current word but if that tile is clicked again it is ignored (it is not added to the current word). Add an 'IsClicked' bool property to the Tile class that defaults to false, check it alongside t.Contains(), and set it when you add t.Letter. Reset all tiles' IsClicked to false in ClearCurrentWord() &gt;-In the real game of boggle, you can choose any tile for the first tile but each tile chosen after that must be touching the previous tile (left, right, up, down + the 4 diagonals). Add a MostRecentTile property to the board, set it when you add the tile's Letter to mCurrentWord, and if it's not null, check that the X and Y values of the MostRecentTile are no more than 1 different from t alongside the t.Contains check.
I've found the discord group in the sidebar to be my #1 community. always thought about trying Stack Overflows C# group too for questions and stuff 
In your tile class you can add a boolean, "Inword"... then in HandleClick when you do mCurrentWord+=t.Letter; you can also do t.Letter.InWord=true. And the if statement can be if (!t.InWord &amp; t.Contains(....)) Also, you can/should keep track of the tile location of the last tile they clicked.. something like Point LastClickedTile = new Point(t.Letter.X, t.Letter.Y) and add a function in tile NextTo(location) So in the handle click it ends up being if (!t.InWord &amp; t.NextTo(lastLocation) &amp; t.COntains(e.X,e.Y)) { mCurrentWord+=t.Letter; lastLocation = new Point(t.Leter.X, t.Letter.Y); t.InWord=true; doRefersh = true; } 
If you are unable to debug successfully or easily with the current setup, then do yourself a favor and untangle the Client and Server aspects of the system.
You cannot step-through but you can set a breakpoint at the entry point on the service side. One other advantage of it being separate is that the Diagnostic Window can work like you want. Microsoft (even after years) hasn't gotten around to getting it to support multiple projects or even choosing the project you want to profile.
I keep multiple solution files for this and open as needed. If I need to debug client and server I have the client solution open in one vs and the server solution open in another. I also have a combined solution that is mainly for writing tests and simplifying some deployment scripts. The same project can be open in multiple VS instances, just dont try to attach the debugger 2x to the same thing.
[I love code](I love code https://imgur.com/gallery/qdMdQ3s)
I expect a scrollview :)
I'm not familiar with MassTransit, so I wonder, can you compare it to Azure Service Fabric? It works on Linux and can be used on-premise.
I have used WebSocketSharp to code apps for several crypto exchanges and the apps were processing hundreds of messages per second without any issues. I guess it really depends on what you do with the messages; I was keeping them in a data table in memory, making sure that the table remains of certain size to cap the memory usage. 
The language and frameworks themselves tend to be fairly straight forward and easy to understand. It's usually the design and implementation that makes a code base confusing.
I dont know if it's just me, but «pretty sharp» Rolls better off the tounge :)
Good. Really good. 2019 is ok as long as they're dropping previews before then and have learned from the transition problems and backtracks of early Core. My expectations are muted still but long term this has to be a good thing. Next step will be unified XAML applications compiled across platforms including WebAssembly? (Don't forget people who don't want to live in a sandbox).
MassTransit isn't directly comparable with Azure Service Fabric - it is modestly comparable with Azure Service Bus, insofar as it is a wrapper around Azure Service Bus (and other messaging technologies.) It doesn't replace the messaging infrastructure, you still need Azure Service Bus or RabbitMQ to take advantage of it. Instead, it's a library that makes publishing and consuming messages quick, easy, and consistent. It also provides additional tooling that you'd expect from an ESB (though the devs don't consider it an ESB), such as automatic retrying and message scheduling. We've only recently dipped our toes into Azure - we've been (very slowly) prototyping our services to be moved to Azure, but most of our legacy code has too many dependencies to be easily converted to pure MSA (i.e. many of them share the same database or cache storage, rather than maintaining their own storage.) So to this end, historically all of our services are on-premise, but only some of them are suitable to operating in a cloud environment right now. We are working on prototyping one of our services in Azure. MassTransit is amazing for this, especially for a transitioning legacy system like ours, because MassTransit can maintain an endpoint in RabbitMQ on-premise, as well as an endpoint in Azure Service Bus. So we have a WebAPI service hosted in Azure. The API would perform work, and publish event messages via MassTransit to Azure Service Bus. Then on-premise, we have another MassTransit consumer subscribed to that Azure Service Bus, performing work on the events, as well as publishing additional messages to our RabbitMQ queues. This makes transitioning our service layer to Azure much smoother, since we can slowly push our existing services into the cloud without worrying about losing compatibility with our existing codebase.
Beautiful! 
The reason I didn’t go for that option is because there already exist a few repos with that name. I would agree «Pretty Sharp» sounds better 
The issue is when you want to modify the services separately from the UI. You can rebuild/re-run one without stopping all of them, rebuilding, re-running all at the same time. It just saves time doing this separately as you would if you had two instances of VS going.
Go to Build-&gt;Publish {ProjectName}, then follow the steps. The installer will be in the target directory.
Are you using WinForms? If so, ComboBox.Text is a String property, so it doesn't support rich text. A better approach to this problem is to have a variable that contains your text, then set the ComboBox to a substring of that variable. private string myText { get; set; } private void SetComboBoxText() { ComboBox1.Text = myText.SubString(0, 3); } Since it's a combobox, it's more likely that the source data will need to be in a string array, but without knowing your use case I'm not sure how it would look.
Thanks. I think i can do the varible. Its wpf. Its when a user chooses a broker. The combo box displays all the different locations for that broker. I need the location id and the address in the same varible since im using the location id to query contacts per address. Location id is the index. And passing sql bombs out when you have special characters. 
Blame the person that developed your app, not the OP who actually used code tags.
You can right click on any project in the solution, Debug -&gt; Start new instance, then F5 to start the declared startup project. Or you can leave a shell window open to the bin/debug folder and call the executable if that is applicable. Or you can have a build event publish the service side to your local IIS instance (not IIS express the debugger spawns).
Let's dive into this a little. For a given broker, you have multiple locations. Each location (if I understand correctly) is a Key/Value Pair. The Key is the location Id, and the Value is the location address. Luckily, ComboBoxes are equipped to have complex objects in them. ComboBox.Items is an an ObjectCollection, so it can contain literally anything. For each item in the collection, the ComboBox tracks two things: the "Value" and the "Display". That's perfect! The value can be your ID, and the Display can be your Address! To do that, you can't add a string to the combobox items; you have to add an object that has both values. For example: //The Id is 1, the address is "This Address" var kvm = new KeyValuePair&lt;int, string&gt;(1, "This Address"); And you can add it to a combobox easily: ComboBox1.Items.Add(kvm); But wait! How does the combobox know which property of your object to display, and which to return as a value? The answer is the DisplayMember and ValueMember properties of the ComboBox. Set them like this: comboBox1.DisplayMember = "Value"; comboBox1.ValueMember = "Key"; Now, the ComboBox knows to display and what to return when you're looking for a value. To get the value, just go like this: int currentVal = (int)comboBox1.SelectedValue; And you can always get the text like this: string currentText = comboBox1.SelectedText; The best part is that you don't even need to add all the key value pairs to the combobox yourself; you can just use data binding. List&lt;MyObjects&gt; srcData; //this is some SQL data you pulled, I think //turn it into a dictionary Dictionary&lt;int, string&gt; data = srcData.ToDictionary(d =&gt; d.Id, d =&gt; d.Address); //bind the dictionary to your combobox comboBox1.DataSource = new BindingSource(data, null); //tell the combobox which properties to use comboBox1.DisplayMember = "Value"; comboBox1.ValueMember = "Key"; This setup should be a lot more flexible and require a lot less code. Hope this helps!
What's the harm in letting both projects startup again? Unless the apps are huge, I can't imagine it takes too much time. If it's really that monolithic that starting both takes too long, you probably should be working on the services/UI apps in a bit more of a "decoupled" state. For example, maybe don't start the real service layer when working on the web side of things (inject mock services).
 thanks man. I wasnt expecting someone to actually give me feedback. I will try tomorrow when im back at work. 
No problem! Hit me up if you get stuck..
Is it possible your friend doesn't have the .NET framework installed? What error are they getting when they try to run your app?
That's the problem. You're trying to keep all the branches in your head. Only focus on the one branch that's being executed in a scenario and things get easier. 
Sorry, but I have not blamed anyone. I just expressed that the code looked nice on mobile.
I understood your point, sorry for the down votes. People on here are quick to down vote everything to feel like they know something about programming.
I did not mean to either harm anybody or give any opinion about the OP or others. I thought the code looked cool, and posted it how I saw it.
It's a struggle, for sure. Try have less files open at once, and unload projects you aren't using, and make sure your VS and VS solutions are on a SSD. That's about it, realistically. They are finally working on running it out of process, but that might be months or years away.
Sorry, I did not mean that this was a problem for anyone. I did not have any issue with this post, and I posted this picture just cause it looked cool, no harm intended.
I mean it's additional 10 or 20 seconds. Other than that though it's nice to maintain state on the UI while putting a small fix on the services.
I wish to know this as well. I am on the edge of throwing resharper out. Great for small projects but for bigger solutions it is pretty bad. VS stops responding for a few seconds quite frequently. 
Something is fundamentally wrong with resharper. Multiple cores, SSD and insane amounts of RAM does not seem to help. We have too much computing power and still wait for a effing text editor to unfreeze after typing few chars. It is a joke.
In old days Visual Studio used to have Setup projects. It was easy but then project type was discarded and developers were encouraged to use Wix installer http://wixtoolset.org/ instead. It works. Not as easy as old setup projects were but OK-ish. Too complex for simple installations though.
I uninstalled resharper a long time ago and I'm a better developer for it. Depending on this intrusive bloatware encourages you to be lazy. It was only really useful for spotting unused variables and that's about it.
Do you plan to add download in background that would not kill VS? I would also like to know approximately how much time that setup requires. Sometimes it takes 5 minutes and other times like this time it was more than an hour. Estimation does not have to be very exact but it would be helpful to know if I have enough time for coffee break or vacation.
Nice idea but sometimes small things like common data structures can keep two projects "tangled". Untangling them may cause more problems somewhere else. 
Yes, it's called CodeRush.
I don't see how that will help unless the problem is its crashing VS. It will still consume just as much CPU, RAM, and disk bandwidth. They should just follow CodeRush and port their stuff to run on the Roslyn engine.
It doesn't solve your question about VS.... But if you like ReSharper, try using Rider. ReSharper built in and significantly faster than VS. I switched and have never used VS unless absolutely required. VS is just as much a part of the problem as ReSharper, adding most any extension to VS results in a poor user experience. Isn't limited to ReSharper, sadly. 
It will help by not locking up the main Visual Studio process for long periods of time. This means Visual Studio becomes much more responsive since it isn't waiting for Resharper all the time before it can do anything. Sure, the Resharper functionality itself probably won't be any quicker because it's still all the same code, but it means VS doesn't lock up any more.
It seemed like for a while there if you disabled solution wide mode it made it usable, but lately it seems totally unusable no matter what to me. I cancelled my subscription and uninstalled it. It took a solid month to re-learn things to get back up to speed through other means but I'd say I'm about there now.
Nope...
How big is your solution (in number of projects / files)? I find that too big solutions just cause Resharper to go belly-up, if you have solution wide analysis enabled. So if you can remove some projects from it that could help. Also as others have said, disable everything else that you don't use. A last resort workaround that is still a step before throwing it out completely, is to disable solution-wide analysis and for example put some dedicated clean-up time somewhere in your commit cycle where you enable it just for that.
That's an interesting way of doing things. Do you just RDP in and program via that? What made you think of trying that abs what's the experience like (and the cost?)
I use Microsoft RDP client on a mac mini and macbook pro. With dual 27" Screens it is surprisingly responsive, even with Australia's terrible internet. The VM is in the Australia East data center but I have used it from the remote border between Thailand and Cambodia and it worked fine. Occasionally there is a tiny lag but it is amazing how your cognitive perception compensates once you are used to it. It is about $200 a month at the moment so not cheap at all but the startup I work for has a massive azure credit at the moment (yes I tried crypto mining to try to use it up but Azure caught it pretty quick.). I originally tried it because I work on my desktop at home and had to go into a coworking space once a week and wanted to keep the same work environment on the laptop. But now it has made me wonder if I could get away with an rdp client on a raspberry pi. I don't think raspberry pi does dual screen unfortunatly otherwise I would.
It won't fight VS for resources and it won't block any VS UI interaction as the extension API has its own limitations.
I have a 1.5m+ line codebase solution with 40 projects. Resharpher works just fine.
I have disabled the code analysis on JS/CSS/CSHTML files. That helped out alot for me. Some packages such as Kendo can add hundreds of files to your project so it is good to tell R# to ignore them
I am not familiar with this TBH.
I have probably 10 or so extensions on VS and I've never had even a single issue on 2017. 2015 and earlier was a disaster, but 2017 works like a dream for me.
Interesting! I haven't used VS much since 2015, maybe I'll give it another try with 2017. 
I'm a massive Resharper fanboy, but I've now had enough. I have about 7 plugins that together provide pretty much the same experience, in most cases better, in some cases not *quite* as nice, but close enough, and much, MUCH faster. Key amongst these is Roslynator. Also, try out VS's built in Alt+Return (ctrl+.) - it's pretty good these days.
The out of the box ones should be OK. Just don't try to configure the Xml yourself unless you have reached level 7 MSI guru status.
Alright, I ended up updating the documentation so that no more "pns" can be seen on my read me page. 😅 
We had to abandon it at my company for this reason
With the latest improvements to VS 2017 along with some great extensions like Rosylynator, I just don't see the point in Resharper anymore.
Roslynator has done the job for me too, gives me 90&amp;#37; of what I used Resharper for, but without the bloat.
I honestly don't know what happens behind the scenes. I would assume it recompiles whatever assemblies have been changed. Give it a shot - set a breakpoint, edit some code after (simple code - don't change anything LINQ queries or anything), hit save, and then continue. You can usually step through what you changed, then right-click/set next statement back to before your change and make additional edits.
When Roslyn came out, with its API for accessing the compilation process, both JetBrains (Resharper) and DevExpress (CodeRush) had a decision to make - either drop their custom code parsing and hook into the VS pipeline, or keep their own. JetBrains kept their own.
&gt;I don't see how that will help unless the problem is its crashing VS. It does that too.
Lots of RAM and everything on SSDs
/u/ [Diab0Br](https://www.reddit.com/user/Diab0Br), I have made changes so that now the content can easily be moved to the desired position \(left, right, top, or bottom\). I have also updated the readme to show an example. You can check it out [here](https://github.com/MarkoPaul0/PrettyNSharp/blob/master/README.md#a-neat-feature-of-sharpbutton-content-display-manipulation).
You shouldn't need a separate process for that. Not running CPU-intensive code on the UI thread should be enough.
Thanks for the benchmark. hundreds or even thousands per second sounds reasonable based on my experience too. In my case however, theres not much I can do to speed things up as I'm making calls to a service. 
&gt; Thanks for your reply. I do understand that MVC/MVVM/MVP are just design/architectural patterns, all of which are derived from Fowler's Presentation Model. I should have asked "What is the difference between how a WPF app would implement MVVM and how a Winforms app would implement MVP" in order to be more clear (and accurate) with my meaning. The big difference is, in MVVM your ViewModel should implement INotifyPropertyChanged interface and your view (Window) should add the binding to ViewModel's properties, in MVP your view (form) should implement an interface that your presenter will use. I don't know if this help you. &gt; Would you agree that, whatever the model is to the developer (service class, DTO, etc), it should be part of the business/service layer or another "lower" layer such that the model is a reusable component regardless of the UI technology being used? In other words, is it the case that, if a "model" object is being used, that object should be able to be used in multiple apps and should not depend on the UI layer that is using it? For example, a MyLoggingService "model" class should be able to be used in a WPF, Winform, MVC Web app, WebAPI, or WCF service. Opinion? As I said, the model can be an object used in several projects, or an object specific to your app. Sometimes I don't use a "model" (like a separated class), I just the ViewModel like the model. It depends on your application needs. The view is agnostic to the model, the model is used by the ViewModel (if needed). For services like logging, you can use DI. &gt; Is MVVM, as a pattern, possible with Winforms without having write a large UI architecture to support it? It seems that changing a few concepts would be sufficient. For example, forms/user controls (views) in Winforms would now know about its view model but the view model doesn't know about its view at all. The view would receive its VM either through DI or instantiate it itself and would then would use winform databinding to bind to it. Yes, you don't need to write an UI arquitecture, just use the common forms/controls. As I said, I use ReactiveUI, it has an interface called IViewFor&lt;T&gt; that your view should implement, and T is the ViewModel type for that view. With my views implementing that interface I can use a ViewLocator object for found the View for a ViewModel. &gt; It would also subscribe to events that the VM exposes if applicable. You can use events but there are other ways. Generally the VM will not "communicate" with the view, you use the binding, VM properties to control's properties and VM commands to buttons. The idea is to do all the presentation logic (app logic) in the VM, and the view will only do view things, like controls initialization, binding, or some controls events (for example datagridview selection). &gt; The communication between the VM and model would remain the same. Isn't this a simple MVVM implementation? If so, all we've done is changed who knows about what between the view and the VM/presenter. We also wouldn't need interfaces for the views, at least for this usage. Thoughts? Yes, each pattern implement the communication between the Model, the View and the ViewModel/Presenter in different ways, but the responsibility is basically the same. 
Thanks for sharing! I took a quick look. How mature would you say it is? Are there nasty bugs hiding in the edge cases?
Yes. I work on software for a specific kind of business and our entire Windows product is Windows Forms and runs on Windows Client PCs. There are back-burner plans to consider or developer aspects in new toolsets, primarily to address customer wants for things like tablets and apps for specific purposes. But when you have 5 developers who do all the bug-fixing on the old mainframe product, the new Windows product, adding features to the latter, and also do a bit of support and much of the IT/deployment, it's not like the man-hours grow on trees. And the only reason it is even for consideration is because customers mentioned it. I highly doubt our situation is unique. You are going to find a lot of products written against Windows Forms that have stayed there, often for many of the same reasons. And when those efforts to bring things forward do materialize, knowing the old stuff is going to make you a lot more useful. One of the reasons I was hired was because in addition to knowing the "newer" technologies (WinForms in this case) I recognized and could read the VAX-11 dialect of BASIC used for the Mainframe software... and didn't go "ew gross I'm not touching that it's not XAML and Entity framework". Which isn't to suggest you should only learn the older one. Just that the UI framework you use isn't mutually exclusive. 
If you have power commands installed try uninstalling...it did help me a bit but not completely...i ended up uninstalling it
Pretty mature, I use it in production in a few pieces of software, and I've worked with a few other developers that have used it. Let me know if any issues!
We just last year stopped using it just because of that. Every couple of days, VS' memory usage would start ballooning up to ~ 4G, then crash hard. We now use Roslynator and don't regret R# for a second.
Curious, what are your specs? I was running 8 GB ram, 2.9 gzh i7, on SSD and was slowish with my biggest solution. With 16GM ram, 3.1gzh, really no issues. However our offshore's old systems were 4gb ram, and it was literally impossible to run tests with or without Resharper.
&gt;Rosylynator Do you mind sharing what plugins you are using?
&gt;Rosylynator Do you mind sharing what plugins you are using? 
That's it. It's incredibly comprehensive and VS 2017 includes enough refactor tools out of the box to get me the rest of the way.
What does resharper even do? I've been using C# for years without it.
Provides a better intellisense (in that it’s more customizable and gives more suggestions). So like Intellisense may suggest you use proper case/pascal for a method name, while Resharper might suggest removing the curly braces for one-liner conditionals 
Awesome! Just perfect, thanks a lot for doing it. Just for curiosity, is it hard to make it a nuget packet of it? Would be way easier and probably would reach a lot more devs. I will definitely play with it tomorrow 😁😁 Thanks again. 
Disabling codelens helps a lot.
If you send him the exe, required dlls, and other required files, and they exist in the correct hierarchy, it should work, provided your friend has the correct .NET Framework installed, which he should be prompted to get if he doesn't already have it. In terms of installers, there aren't many options. WIX does everything, but it's a little complex. After learning to use it, I quite like it, because it has a lot of features. I used to use Visual Studio Setup Projects, but they failed me for one of my projects. I think it failed to install 64 bit dlls, so that's when I learnt WIX.
It just depends on what the application is doing. If it's bogged down at 10 requests, then sending 100 will probably add significant overhead and make it much slower than just sending at most 10 at a time.
Congratulations to the most useless comment of the year
I work on something similar in loc, but across fewer projects, and ReSharper is unusable. 
Do you need VS specific features ? If no then try Rider
VS is slow even without extensions. I have a 16 thread intel machine with 64gb RAM and fast SSD and still it hangs and takes ages to process things. And my favourite popup window saying “waiting for background op to finish” blocking the whole UI appears often.
Do you have solution wide analysis turned off? 
Visual Studio is practically single threaded. One of the big performance changes they (MS) made years ago was to shift lots of bits into their own processes to allow them to run in parallel. If you ever look at your processor usage while VS is freezing the processor will be running at 100/cores.
Here is a few that i use that helped me to leave Resharper behind: [TAB AutoCall](https://marketplace.visualstudio.com/items?itemName=RamonFMendes.TABAutoCall) &gt; Press TAB after a function call and it will insert () and automatically show signature help. Example: Console.WriteLine -&gt; TAB -&gt; Console.WriteLine(|) -&gt; cursor in middle of parenthesis and signature help popup shown. [RevDeBug Prompter](https://marketplace.visualstudio.com/items?itemName=RevDeBug.RevDeBugPrompter) &gt; RevDeBug Prompter is a light and easy way for faster debugging. It allows you to see values right in your code. [Roslynator](https://www.nuget.org/packages/Roslynator.CSharp/) &gt; A collection of 190+ analyzers and 190+ refactorings for C#, powered by Roslyn. [IntelliSense Extender](https://marketplace.visualstudio.com/items?itemName=Dreamescaper.IntelliSenseExtender) &gt; Provide IntelliSense completions not only for imported types, but for all available in current solution and referenced assemblies. *Basically ReShaper's auto import feature which i really missed*
A new process does not share resources with the VS instance. A new process can be 64 bit.
Are you guys using single core machines with 4gb of ram? Resharper runs well on my old 2013 macbook pro, on my home Spectre x360 from 2016 and on my newer ryzen machine. :/ Not meaning to sound like and asshole, but I've heard a lot of times that resharper makes vs slow but haven't experienced it a single time. 😅
What I often observe while working on a giant solution with R# turned on - the size of devenv.exe's workset gets close to 2Gb, and it starts spending a lot of time collecting garbage. Sometimes GC time takes about 90% for several minutes. From this perspective running R# in a separate process would definitely help. 
just use [roslynator](https://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator2017) along with [productivity power tools](https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.ProductivityPowerPack2017) and you won't need anything else (maybe [intellicode](https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.VSIntelliCode))
The problem is VS is running in a 32 bit process, and R# hogs so much of its memory on large solutions everything just hangs. So yes, a separate process would be lovely. I've been saying this for years.
What I miss is intllisense across name spaces I haven't referenced yet. For example if I start typing WebC it will suggest WebClient in system.net and reference it in the file Does it do that yet? 
A couple others I find useful: [Supercharger](https://marketplace.visualstudio.com/items?itemName=MichaelKissBG8.Supercharger) &gt; AutoText, CodeMAP, Intelligent Code Flow Lines, Code Highlighters, Rich Code, Magic Comments, Phrasing Review, Spellist, SuperFind, Statistics etc. [CodeMaid](https://marketplace.visualstudio.com/items?itemName=SteveCadwallader.CodeMaid) &gt; CodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding. [Fix Mixed Tabs](https://marketplace.visualstudio.com/items?itemName=VisualStudioProductTeam.FixMixedTabs) &gt; Detects when you have mixed tabs and spaces and offers to fix them for you automatically. And of course, Power Commands and Productivity Power Tools.
Don't think so \(happy to be wrong\), yeah I think that's the remaining 10&amp;#37; that I do miss from Resharper :\) I find using the Go\-To All feature provides \*some\* of the functionality, doesn't work through .NET libraries, but at least indexes your own code which is not imported into the current file.
Amazing that last one looks like what I was missing. But also the test runner allows you to debug the project and the test at the same time, do you have an alternative for that? 
Another use suggested something in here if you look! Sounds like it does the job. It's then just the test runner I need to find an alternative for 
Quick tip: you should hide the node_modules map (make it a hidden folder in explorer) or ReSharper will try to index everything in it and will slow everything down to a crawl. Doesn't fix all performance problems, but it's a noticeable difference. Putting both VS, RS and your project on an SSD, and getting a decent CPU also helps.
thanks, found it \[Intellisense Extender\]
Not really answering OP's question, but if anyone can link me an alternative to ReSharper's [Postfix Templates](https://www.jetbrains.com/help/resharper/Postfix_Templates.html) that works the same way, I would be eternally grateful.
There's a few things you can do: * Disable CodeLens * Disable XAML Designer * Add Windows Defender exclusions for: * Your repo * R# Cache * VS processes * R# processes We've got a large solution, 200+ projects by now (started splitting it up now). Memory usage spikes immediately, causing everything to slow to a crawl. Splitting the solution and exposing those parts as NuGet packages seems to help, extracted about 40 common projects recently, now I can go about half a day without restarting VS. Specs of my machine, for those interested: i7-7700K, 16GB RAM, Samsung 960 Pro NVMe M.2.
But how big are your solutions? 20-30 projects works, but when you reach 100+, resharper is impossible to use. 
Wow, I've never worked with a solution with 100 projects. 😐
These will make your life better: * GitFlow for Visual Studio 2017 * Multiline Search and Replace * Open Command Line * Visual Studio Spell Checker (VS2017 and Later) * Regular Expression Tester Extension * Match Margin * Time Stamp Margin * RemoveTrailingWhitespaces * Trailing Whitespace Visualizer * VSColorOutput * Power Commands for Visual Studio * Add New Files * Visual Studio IntelliCode - Preview * ASP.NET Core Blazor Language Services * Git Diff Margin * Roslyn Interactive Components * Roslyn Language Services * Roslyn Expression Evaluators * Roslynator 2017 * Roslynator Refactorings 2017 * Markdown Editor * Solution Error Visualizer
What are the specs of your machine? ReSharper hums on my machine, which is specced for dev work: 32GB of RAM (mostly for VMs, ReSharper isn't particularly RAM-intensive), i7 quad core processor, and two SSDs. Nothing crazy overkill for a dev machine, but if you're not prepared to waste your expensive time waiting for a computer then it's a must-have. As far as configuration goes, make sure you have the latest version. Last year (or earlier this year, I can't quite remember) they introduced a performance optimisation feature which suggests ways to improve your IDE's performance. Other than that, your only other best bet would be to set your ReSharper cache directory to a separate drive.
This is coming soon to native IntelliSense, see here: https://docs.microsoft.com/en-us/visualstudio/productinfo/vs2018-roadmap (#11 under 2018-Q3)
First, I don't think it is good idea to pass BinaryReader to a triangle object. Triangle constructor should take 3 vertices, that's it. Your function to parse STL file should do the checking if it's EOF, and take care of it. Same way should be writing back values. Take a look at File class, it has WriteAllText I think, takes input as a string.
Oh I 100% agree
Thanks. That's long overdue! 
* Nullability of reference types tracked by type system. * Python\-like slices \(arr\[1..\^1\]\). * Better pattern matching: recursive &amp; no curly braces. * Async disposables. * Async enumerables. * Default interface members. * Records.
No mention of Shapes (for types) and Extension-everything. Was really looking forward to these two. Ranges are really nice though!
So looking into this a little further I'd come across the HTML tag &lt;base href=""/&gt; which changes the base URL address to whatever you want it to be. Good for loading resources. However the issue then came about that all of our API calls were failing because the URL was pointing towards our CDN - Shame. This would have been an easy quick win. Right now I'm manually changing everything to see what it looks like. I'm thinking that maybe I'll have to go with choice one. 
Have you tried intellicode extension from Microsoft?
&gt; Records. I'll believe it when I see it. I feel like they've been saying this for a decade now.
I wish at some point in the future we will see "from version X of C# you will be able to create constrains on generics" (a.k.a. [http://en.cppreference.com/w/cpp/language/constraints](concepts) ). Currently, this is the thing that I miss the most* in this already sexy language. All those changes are for now "meh" for me except default interface members. This feature is imo completely bad and should not be granted access to language. I really hope they will reject this feature, for people who are interested in discussion about this topic [here is the link](https://github.com/dotnet/csharplang/issues/52). * actually, expanding templates in any direction would be great.
Here is an article describing a lot of settings for both, ReSharper and VisualStudio to improve performance: https://www.jetbrains.com/help/resharper/Speeding_Up_ReSharper.html
Also; fundamentally GC pauses \(and general overhead\) scales with heap size: so it's attractive to have multiple small heaps rather than one large one, when you can. And the assumption would be that plugins would be quite likely to be relatively dependency unentangled compared to core code, so they're an obvious candidate for keeping out\-of\-process. Even if VS were 64\-bit \(which it should be, at this point\) \- it would still make sense to split large chunks into a separate process.
NugGet package is next on my list. I haven’t done this in forever, but I don’t remember it being complicated. Keep the good feedback coming once you’ve tried it 🙂 Thanks!
I feel like the list here is a little misleading. Most items are likely for 8.0, but the last two were mentioned in the talk near the end. For records in particular, they were very vague about the syntax (they even said something along the lines of "we might add a 'record' keyword here"), so I think the idea is that records in particular probably won't make it for 8.0.
Default interface members has bothered me. It's like a zombie axe for code construction. It'll work but if you need to enforce a default implementation, why not use a base or abstract class. Even using weavers with INotifyPropertyChanged seems more pure to "code to the interface"
I found mine on stackoverflow.com/jobs
What I meant was something more advanced than this. Constraint on interface or class/struct is very poor. This is why I mentioned concepts. For example what I'm missing in templates is constraint on specific operator (like +), template specialization or even non type parameters. 
&gt; why not use a base or abstract class If I remember correctly [this](http://scg.unibe.ch/archive/papers/Scha03aTraits.pdf) paper explains why "traits" (a.k.a. pure methods) were introduced and [this](https://github.com/dotnet/csharplang/blob/master/proposals/default-interface-methods.md) why they think they will help the language. Additionally, [this SO answer](https://stackoverflow.com/a/19998827/3809977) explains why Java people think this approach is good. It states: &gt;The constraint on the default method is that it can be implemented only in the terms of calls to other interface methods, with no reference to a particular implementation's state. So the main use case is higher-level and convenience methods. I think you can relate this argumentation to C# as well. P.S. I hate this idea as well.
Thank you so much for the start. I will say I hate data binding, even though it is probably the best way to do this. I am trying to use the first example you gave me and I am close. 2 issues. 1) My address is displayed vertically in the combobox. 2) I using a for each in datarow, since there can be multiple address, however my code is just adding the last address in the datarow. It seems it replaces the current address stored in the KeyValue pair. string query = (select broker id, broker address "too long to put in reply") var accessUpdateCommand = new OleDbCommand(query, cn); oleCmd = new OleDbCommand(query, cn); DBDA = new OleDbDataAdapter(oleCmd); RecordCount = DBDA.Fill(DBDT); var kvm = new KeyValuePair&lt;int, string&gt;(); foreach (DataRow dr in DBDT.Rows) { int id = Convert.ToInt32(dr.ItemArray[0]); string address = dr.ItemArray[1].ToString(); kvm = new KeyValuePair&lt;int, string&gt;(id, address); cbx_Broker_Address.Items.Add(kvm); } cbx_Broker_Address.ItemsSource = null; cbx_Broker_Address.Items.Clear(); // cbx_Broker_Address.DisplayMemberPath = kvm.Value; cbx_Broker_Address.ItemsSource = kvm.Value; // cbx_Broker_Address.SelectedIndex = 0; this is a wpf combox .diplaymember was not avalible. Thanks for your help man, I really appreciate it. I was not expecting someone to actually answer and I hate coming back with more questions. I usually just research the shit of of an issue. 
Well, I do not recommend it. But, that's the enterprise world...
&gt; I hate this idea as well. It might be seen as hackyway to go around multiple inheritance The only issue with multiple inheritance is shared state. But default interface implementation does not support state. Interfaces will continue to be exactly what they're now: A contract without any state.
Streamlined/simple syntax for declaring immutable [POCO objects](https://en.wikipedia.org/wiki/Plain_old_CLR_object) with a few convenience features implemented, similar to working with anonymous types. The example given in the talk was: class Person(string First, string last); Compiles to: class Person : IEquatable&lt;Person&gt; { public string First { get; } public string Last { get; } public Person(string First, string Last) =&gt; (this.First, this.Last) = (First, Last); public void Deconstruct(out string First, out string Last) =&gt; (First, Last) = (this.First, this.Last); public bool Equals(Person other) =&gt; other != null &amp;&amp; First == other.First &amp;&amp; Last == other.Last; public override bool Equals(object obj) =&gt; obj is Person other ? Equals(other) : false; public override int GetHashCode() =&gt; GreatHashFunction(First, Last); } So it's nice if you want to declare these POCO objects, or use small, nicely named/typed/handled private objects as helpers in class or method implementations. Lets you skip the boilerplate/clutter of having these private nested classes mucking up your main class/method implementations.
Despite YouTube being, well, not a very nice company, at least their videos load noticeably faster than they did on C9's own system.
How about a HtmlHelper? You could pass in the name of the file to resolve, and the HtmlHelper could read (and potentially cache) the base URL from your Web.config's appSettings. The method would return the full path to the script.
wait a second!!! I think I got it. cbx_Broker_Address.Items.Add(kvm.Value); instead of cbx_Broker_Address.Items.Add(kvm); int id = Convert.ToInt32(dr.ItemArray[0]); string address = dr.ItemArray[1].ToString(); kvm = new KeyValuePair&lt;int, string&gt;(id, address); cbx_Broker_Address.Items.Add(kvm.Value);
That is true, especially that proposal states that there is no way that you can implement two interfaces with the same method when they are default (a.k.a. The most specific override rule). However, in terms of semantics I believe default methods will imply that interfaces are not a contract anymore. While they will be "without any state" the implementation is there. On the other hand, you can argue that contract is from user perspective and this perspective will remain unchanged. I come from C++ environment so this is hard to comprehend for me why would you have not pure abstract methods in interface but I guess it strongly depends on how you see interfaces. To finish referencing your comment: I believe your argument is valid and I think it convinced me that default implementation is not bad at all.
Try different versions. We had to use VS2015 at work, and I only had a ReSharper 9/10 license. Studio was incredibly slow until I upgraded ReSharper to the latest version. Nice and quick again.
Any alternative to the test explorer / test session windows?
[Exploration: Shapes and Extension Everything](https://github.com/dotnet/csharplang/issues/164)
Ahhh thank you, that makes sense. I think I confused them with structs a bit initially.
If you want to stick with a FileStream instead of using the File class, you can get the bytes from a string like this: `var bytes = Encoding.ASCII.GetBytes(myString)`
ok so I am able to pull in the address but having difficulty setting the selectedvaluepath. which would be the ID. It sets to whatever the last address is. //int id = Convert.ToInt32(dr.ItemArray[0]); string id = dr.ItemArray[0].ToString(); string address = dr.ItemArray[1].ToString(); kvm = new KeyValuePair&lt;string, string&gt;(id, address); cbx_Broker_Address.Items.Add(kvm.Value); // cbx_Broker_Address.SelectedValuePath = kvm.Key; } // cbx_Broker_Address.DisplayMemberPath = kvm.Value; cbx_Broker_Address.SelectedValuePath = kvm.Key; cbx_Broker_Address.SelectedIndex = 0;
&gt; They should just follow CodeRush and port their stuff to run on the Roslyn engine. How will that help them sell Rider? :P
I would say it depends on what you are building: - Desktop Apps, you should be in Windows with VS2017. - Web Apps with .Net Framework 4.7.2 or below, you should be in Windows with VS2017. - Web Apps with .Net Core, you can do with VSCode on the Mac side I'm curious why you are "...rewriting a bunch of UI code..."
The non-nullable shit is clearly exciting and anticipated but can I just say how lovely the new `switch` expression &amp; recursive patterns seem? Can't wait to abuse those. Ranges also seem cool. I know people have mixed feelings on default interface implementations but no matter how bad they are, as long as they add a default `IEnumerator IEnumerable.GetEnumerator() =&gt; GetEnumerator();` it is all worth it.
&gt; if you need to enforce a default implementation, why not use a base or abstract class If I were designing the LINQ-to-Objects group of methods in a world with default interface implementations, I would strongly consider putting the new methods onto `IEnumerable&lt;T&gt;`. - `IEnumerable&lt;T&gt;` would have the least-common-denominator things the way you'd expect. - `Any()` would be `GetEnumerator().MoveNext()` (in a `using` scope of course) - `Count()` would loop and increment as you'd expect. - `ElementAt(int)` would loop through, skip the first however-many, and return the next one. - `ICollection&lt;T&gt;` could override the default-default `Count()` to return the value of their own `Count` property, and the default-default `Any()` could just return true if their own `Count` property is non-zero. - `IList&lt;T&gt;` could override the default-default `ElementAt(int)` to use its indexer. This is already really compelling to me: `System.Collections.Generic.IEnumerable&lt;T&gt;` had already shipped, and you could add this behavior straight onto the interface... but there's more you can do, because implementations would be free to implement specific operators more efficiently. - Maybe you have some weird list-looking type that slowly computes chunks of 512 items on-demand, so it would be advantageous for your type to make `Skip(5120)` actually legit skip producing the first 10 chunks. - Maybe the implementation happens to have an internal table that it can use for `Contains(T)`, but falls short of being able to implement other operations for any other well-known interface. - Maybe some of the aggregating extension methods could be implemented to do caching (or maybe the implementation already has it aggregated for other reasons). - So many more possibilities that I'm not typing here because I'm out of time. The important part is that `System.Collections.Generic.IEnumerable&lt;T&gt;` has already shipped, and this would still let the developers add more functionality to it without breaking existing implementations. IMO, it's a feature that has **high** value for framework and library developers, and **low-to-moderate** value for application developers.
Do I understand correctly that it was proposed nearly 2 years ago?
It's a pretty old proposal, yeah. It's also super complicated.
Looks like you're close! Here's the problem in your original code: in your loop, you're adding "kvm", which is a instance of the class "KeyValuePair". When you add a class to a collection, it adds a reference to that object--not the object itself. So every time you change the "kvm" object, you're actually changing the object you added previously. You can fix it a couple ways, but the easiest is to delete this line: var kvm = new KeyValuePair&lt;int, string&gt;(); and update this line: kvm = new KeyValuePair&lt;int, string&gt;(id, address); to this: var kvm = new KeyValuePair&lt;int, string&gt;(id, address); Because this is WPF (and not WinForms like I thought), you'll need to update your XAML for the combobox with these values: SelectedValuePath="Key" DisplayMemberPath="Value" Alternately, all the code related to the loop could be replaced with a little LINQ. //make a helper function to convert datarows into KVMs KeyValuePair&lt;int, string&gt; DataRowToKVM(DataRow dr) =&gt; new KeyValuePair&lt;int, string&gt;(Convert.ToInt32(dr.ItemArray[0]), dr.ItemArray[1].ToString()); (from DataRow dr in DBDT.Rows select DataRowToKVM(dr)).ToList() //convert the entire list into KVMs .ForEach(kvm =&gt; cbx_Broker_Address.Items.Add(kvm)); //then add them to the combobox Let me know how that goes.
There has been discussion of this type having "with"ers. An example implementation using the syntax I've suggested: partial class Person { public Person With(bool bFirst = default, string sFirst = default, bool bLast = default, string sLast = default) =&gt; new Person(bfirst ? sFirst : First, bLast ? sLast : Last); } used as: var mary = new Person("Mary", "Smith"); var frank = mary with { First = "Frank" }; //compiles as: // var frank = mary.With(bFirst: true, sFirst: "Frank"); // ... aka // var frank = mary.With(true, "Frank", false, null); Assert.Equal("Mary", mary.First); Assert.Equal("Smith", mary.Last); Assert.Equal("Frank", frank.First); Assert.Equal("Smith", frank.Last); Several alternative implementations exist, each with upsides and downsides.
Thank you!
The records proposal includes structs as well: struct Person(string First, string last); would be a struct instead of a class.
I'm not saying it doesn't have value or that it's a bad thing. But I think it adds functionality to things that traditionally did not. A lot of rethinking on how this affects design patterns. Of course, one doesn't have to use it so I'm ok with it and who knows, it may introduce a new pattern. I feel like it's a more of a new code smell but that's just me.
brooooooo you are a genius!!!!! I got it working. Well you got it working, See below.So question, I have to replicate this with the contact name combo box. When you select a name, the id is used to query the name's information, ie phone, email etc. Also same exact thing for Carrier dropdowns. I would just change all the XMAL to SelectedValuePath = "Key" and DisplayMemberPath = "Value", and then have different Keyvalue pairs for each. Thank you so much. I could have jerry rigged a roundabout way, but this is legit man. I will absolutely read that article. Just for quick reference, I am self taught, starting my carrier doing excel vba, now Csharp and I love it. var accessUpdateCommand = new OleDbCommand\(query, cn\);oleCmd = new OleDbCommand\(query, cn\);DBDA = new OleDbDataAdapter\(oleCmd\);RecordCount = DBDA.Fill\(DBDT\);ArrayList locations = new ArrayList\(\);KeyValuePair\&lt;int, string\&gt; DataRowToKVM\(DataRow dr\) =\&gt; new KeyValuePair\&lt;int, string\&gt;\(Convert.ToInt32\(dr.ItemArray\[0\]\), dr.ItemArray\[1\].ToString\(\)\);\(from DataRow dr in DBDT.Rows select DataRowToKVM\(dr\)\).ToList\(\) //convert the entire list into KVMs.ForEach\(kvm =\&gt; cbx\_Broker\_Address.Items.Add\(kvm\)\); //then add them to the combobox cbx\_Broker\_Address.SelectedIndex = 0;
haha im a nerd, I get so excited with coding, I just think this is cool. haha
You got it! :) I'm self-taught as well, and also have a long history with VBA. C# is an incredible language; I love it to death. Feel free to use me as a resource, I'm always psyched to help people learn my favorite language.
For writing to ascii files more easily using(StreamWriter wtr = new StreamWriter(File.Open("OutFile",FileMode.Open)) { wtr.WriteLine("Writing a String"); } &gt;do I just throw it in a try/catch block and have my constructor return false if it fails and exit the loop? Try to avoid throwing exceptions in constructors. So, try to avoid any operation that has a chance of failing in constructors. But other then that, just put it in a try catch because it isn't your applications responsibility to correct invalid data. 
Yeah that is how things go in C#, it takes a long time to move on a language change. Consider the bits discussed in the video: * non-nullable reference types has entered in and out of discussion since 2010 or so that I can remember (there was for a while a discussion about this stemming from code contracts wrt some sort of constrained type system) * Range (January 2015) https://github.com/dotnet/roslyn/issues/120 and probably earlier * Records were discussed in the old codeplex forums pre-roslyn (then as a concept of "primary constructors")
Thanks for all of your replies. Would you consider ReactiveUI a tool such that any future WPF apps you write would use it? Like, how valuable is it and how does it improve the workflow? That chart you linked me in your first reply looks extremely complicated, though I think it is because of my lack of experience with WPF. Can you elaborate on what it is showing, exactly? Finally, do you have any tips/tricks for achieving "docking" and "anchoring" UI control behavior in WPF? This is always a painful area for me every time I mess around with WPF. Winforms makes it really easy but it feels like WPF has made these behaviors more complicated than necessary. Thanks again! 
A project can be included into multiple solutions. So, lets say I make a logging library. I can create MyLogLib.Sln which contains MyLogLib.proj and MyLogLibTests.proj and MyLogLibHarness.proj where MyLogLib produces the assembly, MyLogLibTests holds the unit testing and MyLogLibHarness is a little stand alone application that test/uses the lib in non unit tests. Then, I can create a second library. MyORM.sln which MyORM.Proj, MyORMTests.Proj and MyOrmHarness.Proj. When I want to create a project that utilizes both solutions, I create a new third solution MyProject.sln which contains project references to MyORM.proj, MyLog.proj and MyProject.proj. Now, when you work on MyProject.sln and make a change to MyLog.proj... those changes will still be in place if you close visual studios and open MyLog.sln instead. If you have both MyLog.sln and MyProject.sln open simultaniously and you edit a file in MyLog.proj from the MyProject.sln then when you focus onto the instance of visual studio editing MyLog.sln there will be a pop up that says some files have changed, do you want to reload... 
its usually a better overall experience, but you might give VSCode + the C# plugin a try. 
Could they use it to make implementing INotifyPropertyChanged less of a boilerplate as well?
AGPL makes me nervous, as it usually means there's a hidden catch. There also doesn't seem to be any clarification on the licenses in the different parts of the project, and links to licence clarification are dead \(old website?\)
If you're doing anything that requires full framework, yes. If you're doing things that can be on .NET Core (and unless you're writing a Windows-specific app, like something that interacts with AD or something, you should be targeting .NET Core for new development) you can use VS Code for free. It's passable. Or you can use JetBrains Rider, which is very good, and cross platform.
If you have some spare time, consider creating a new solution and trying to implement Entity Framework. The idea of EF is that your data is automatically converted into classes. For example, let's say you have three SQL tables: a Broker table, a Carrier table, and a Contact table. And let's assume that each Broker is assigned to a carrier. So your Broker table contains: * Id * CompanyName * ContactId (Contact info for this Broker) * CarrierId Your Carrier table contains the columns: * Id * Name * Address * ContactId (to hold the main contact person for that carrier). Contact table contains: * Id * Name * Address * Phone Entity Framework will create a "context" class which represents your entire database: public class MyContext : DbContext { //a "DbSet" is a type of collection and behaves a lot like a list public DbSet&lt;Carrier&gt; Carriers { get; set; } public DbSet&lt;Broker&gt; Brokers { get; set; } public DbSet&lt;Contact&gt; Contacts { get; set; } } It also creates objects with all the database fields and "navigation properties": public class Carrier { public int Id { get; set; } public string Name { get; set; } public string Address { get; set; } public int ContactId { get; set; } //these are "navigation properties" which can be populated based on SQL relationships that already exist between objects public Contact Contact { get; set; } //this is here because there's a reference to a Contact object public List&lt;Broker&gt; Brokers { get; set; } //this is here because multiple brokers can have the same carrier } public class Broker { public int Id { get; set; } public string CompanyName { get; set; } public int ContactId { get; set; } public int CarrierId { get; set; } public Contact Contact { get; set; } //this is here because there's a reference to a Contact object public Carrier Carrier { get; set; } //this is here because there's a reference to a Carrier object } public class Contact { public int Id { get; set; } public string Name { get; set; } public string Address { get; set; } public string Phone { get; set; } } *Quick note: you can also start by writing classes and EF will actually create the database for you based on those classes; this is actually the preferred way of doing it, but it's better for your first time to start with a database so you get used to how your classes need to look so that EF makes the database you wanted.* Now that you have a database, a context, and your objects, you can write code like this: //create an instance of your context MyContext db = new MyContext(); //get carrier Id 933 Carrier myCarrier = db.Carriers.First(c =&gt; c.Id == 933); //update the name of the carrier and save the changes to the database myCarrier.Name = "New Carrier Name"; db.SaveChanges(); //the SQL to update the database is automatically written and executed here //get carriers with a contact with a contact named "John Wimbleton" var carriers = db.Carriers.Where(c =&gt; c.Contact.Name == "John Wimbleton"); //get a dictionary with Id and Names of all brokers in the database var brokerDictioanry = db.Brokers.ToDictionary(b =&gt; b.Id, b =&gt; b.Contact.Name); //get a list of just the names of every contact var contactNames = db.Contacts.Select(c =&gt; c.Name); //get a list of brokers that belong to carriers with a name that starts with "Bankers" var brokers = db.Carriers.Where(c =&gt; c.Name.StartsWith("Bankers")) .SelectMany(c =&gt; c.Brokers); EF automatically turns your code into a SQL statement, runs the SQL statement, then assigns all the values to your objects. It's pretty great. It's not without quirks, but it makes working with data much easier than always referred to the index of DataRow objects. Getting started is pretty easy. The basic steps: 1. Install Entity Framework (Project-&gt;Manage Nuget Packages-&gt;Browse-&gt;[Search] EntityFramework-&gt;Install) 2. Add a connection to your database (Access, SQL, whatever) (View-&gt;Server Explorer-&gt;Connect to Database-&gt;Follow the wizard) 3. Follow the Entity Data Model Wizard (Project-&gt;Add Item-&gt;ADO.Net Entity Data Model) Getting familiar with this tool should make it a lot easier to jump-start projects that require lots of data manipulation.
Why they did not talk about "extension everything" 🤔
Visual Studio proper is *way* better than Xamarin Studio/Visual Studio for Mac, for me my favorite versus by far my least favorite IDE (with mostly IntelliJ/Android Studio and Xcode in between) I have a boot camp windows installation that I can also boot in VMWare. Works really well.
Would be nice to have options, INotifyPropertyChanged perhaps? I can live without, I know it's not really the target for these.
First major refactoring makes such split painful. Simple name change now requires updates to several separate projects. 
You can still download without a browser extension from the above so that's good :) Good on them to be honest. People will find the video easier if it's on YouTube plus they save a heap on the streaming costs.
I can see times where it will be really handy, but every time I work on, ... let's just say, certain areas of the code blob at work, I think "Don't give them any more tools to try and hurt me with". I think I'm fine with it, I've learned how to reflect their efforts back at them. Sometimes I hear the screams. 
You're not wrong, but you can't "have your cake and eat it too" all the time. If you want stuff to be decoupled, you have to deal with the downsides. In an ideal state, you wouldn't be refactoring the "core" DLL too often. If you distribute via nuget, it makes things quite a bit nicer when you do have to make changes.
Ha, sounds like an adventure! I absolutely hear you. No need to jump in to EF on your first foray. I do strongly recommend, however, that you abstract away the uglier bits of your code. So for example, instead of creating your KVMs directly from a SQL query, create Carrier/Broker classes and write code that populates those classes with data. That way, if you change the backend, it doesn't change the code that interacts with your user interface. This is *really* important for maintainability and the ability to make changes quickly. A basic example would be something like this: public class Broker { public int Id { get; set; } public string Name { get; set; } public string Address { get; set; } public Broker() { } //this is just here so you can make a blank broker object if you need to public Broker(DataRow dr) //make a broker object from a datarow { Id = Convert.ToInt32(dr.ItemArray[0]); Name = dr.ItemArray[1].ToString(); Address = dr.ItemArray[2].ToString(); } } That way you can run your SQL query, then do something like this: var brokerList = from DataRow dr in DBDT.Rows select new Broker(dr); Now, you have a list of objects instead of a bunch of unstructured data. And if you ever change your SQL query, you only have to update the change in one place.
😂😂😂😂😂😂😜😜😜😜😜😂😂😂😜
The Unit Testing tools are really why I like ReSharper
Not sure what you expect the answer to be here... That a company's product for the competitor's platform on the competitor's operating system is just as feature-complete and polished as the one for the company's platform on the company's OS? Visual Studio Community/Pro/Enterprise is an incredibly powerful and rich tool. Comparing it to VS Code, is akin to comparing the Adobe Suite to, idk, Gimp or something. Sure, you can get work done, but it'll be at a far greater cost to time and effort. As for the frontend UI, why shouldn't you use HTML and JS? You're not bound to Razor templates or WPF forms, I've developed fully fledged web applications on Visual Studio with the front-end built on various JS frameworks. 
So my workaround is this: one giant solution that I can easily refactor and if I have to debug "two sides" like client and server I just clone repository and have two independent pieces that I can debug and modify at run time. Cloning is cheap. Splitting solution and maintaining separate components is quite expensive. 
The server is licensed as AGPL while the client libraries are Apache 2.0. Thus your own application will only have to comply to Apache 2.0 and not AGPL. Thanks for telling about the license link. I'll fix it.
If you want to be able to build/run anything .NET then you need windows. If you are sticking to newer .NET Core stuff you have more flexibility. 
I'm not 100% sure what you're trying to accomplish, but there are definitely a few issues I see. First of all, let's touch on syntax. &gt;broker1 = new Broker; "broker1" isn't declared yet. At the very least you'll need a "var" at the beginning of this line. "new Broker" is declaring a new instance of a class, which always required parenthesis. I *think* what you wanted here was &gt;var broker1 = new Broker(); The problem with that is that it just creates an empty Broker object ("empty" meaning that each property would be set to its default value: 0 for integers, null for strings). So you really don't want that at all. When you create a new instance of a class like this ("new Broker()"), what you're saying is: "Make me a new Broker object, and I'm not giving any information about it". That's what the empty parenthesis means. On the next line, you have: &gt;broker1.Broker("the data row) = DBDT.Rows; "broker1.Broker" is a reference to the "Broker" property of the "broker1" object (which is of type Broker). But the Broker object doesn't have a "Broker" property (unless you made one). I *think* what you meant was: var broker1 = new Broker("the data row"); Or something like that. That works, but only gets us a single broker. Let's step back and talk about what we want to accomplish. Our input is a collection of DataRow objects (DBDT.Rows). Our output is supposed to be a collection of Broker objects. So how do we get from one to the other? We do a "transformation". Transformations take every object in a collection and turn them into a collection of something else. A simple example of a transformation is to turn a list of numbers into strings. var stringList = intList.Select(i =&gt; i.ToString()); This accomplishes: 1 =&gt; "1" 45 =&gt; "45" 6 =&gt; "6" 491 =&gt; "491" And so forth. The code can be read in English like this: for each integer in intList, transform the integer (i) into i.ToString() and store the results in the enumerable collection stringList. The "=&gt;" symbol is usually read as "goes to", but can also be read as "transforms into". In this scenario, var stringList = intList.Select(i =&gt; i.ToString()); is equivalent to: List&lt;string&gt; stringList = new List(); foreach (int i in intList) { stringList.Add(i.ToString()); } But this is way shorter and easier. :) We want to do the same thing, except the transformation needs to be from DataRow to Broker. Unlike int-&gt;string, there's no built in conversion between DataRow and your custom Broker class. We could build one like this: public Broker DataRowToBroker(DataRow dr) //make a broker object from a datarow { Broker newBroker = new Broker(); newBroker.Id = Convert.ToInt32(dr.ItemArray[0]); newBroker.Name = dr.ItemArray[1].ToString(); newBroker.Address = dr.ItemArray[2].ToString(); return newBroker; } But it's easier to just add a new constructor to the "Broker" object. A constructor is a method that runs when you create a new copy of the object. The default constructor looks like this: public Broker() { } That means, "when you create a new Broker and don't pass any information, just set all the properties and fields to their default values and return the new Broker". If you wanted to make a small change--like, for example, you want the name to default to "No Name", you could change that here like this: public Broker() { Name = "No Name"; } That means, "when you create a new Broker and don't pass any information, set all the properties and fields to their default values, set Name to "No Name", and return the new Broker". You might have noticed that I keep starting the description with, "when you create a new Broker and don't pass any information". That's because you can have multiple constructors, and when you create a new object the constructor is chosen based on what information you pass (its "signature"). So you might have all these constructors: public Broker() { } //make a blank broker public Broker(int id) //create a broker with a specific Id { Id = id; } public Broker(string name) //create a broker with a specific name { Name = name; } public Broker(int id, string name) //create a broker with a specific name and Id { Id = id; Name = name; } Those could all be in the same object. If you call "new Broker("Bob Hayworth")", it will look for the constructor that accepts a string and run it with that input. If you call "new Broker(4, "Jimmy Dalton")", it will look for a constructor that accepts an integer and a string (in that order). You CANNOT have two constructors with matching signatures: public Broker(string name) //create a broker with a specific name { Name = name; } public Broker(string address) //create a broker with a specific name { Address = address; } That will throw an error because when you call "new Broker("Bob Hayworth")", it doesn't know whether to call the address one or the name one. In our case, we want to convert a DataRow into a Broker, and the easiest way to do that is to create a constructor for our Broker object that accepts a DataRow, like this: public Broker(DataRow dr) //make a broker object from a datarow { Id = Convert.ToInt32(dr.ItemArray[0]); Name = dr.ItemArray[1].ToString(); Address = dr.ItemArray[2].ToString(); } Now we need to combine our new concepts. We have a constructor, but that only converts ONE DataRow into ONE broker, not a collection of DataRows to a collection of Brokers. For that part, we need transformation. For most collections, this is really easy. You'd do something like this: var brokerList = DBDT.Rows.Select(dr =&gt; new Broker(dr)); This means, "For each DataRow(dr) in DBDT.Rows, transform dr into a new Broker, providing DataRow dr as a constructor parameter; the results to be stored in brokerList". Unfortunately, the Ole data functionality doesn't support the .Select() method, so we have to write a LINQ expression that means the same thing: var brokerList = from DataRow dr in DBDT.Rows select new Broker(dr); This is literally the exact same meaning. The only difference is that this syntax is supported by this kind of collection. By the way, this is why I almost never interact with data this way; it gets too damn complicated. Sorry this is so long, but it seems like you are missing a few fundamentals and I promise they'll be extremely useful as you continue to explore c#. Let me know if you have any questions.
If your exchange with Kafka is simple then it may make sense to make a simple interface that you could replace with a stub in test project. 
Same! Ironically with the latest VS 15.7 update the unit test explorer and runner (I use the NUNIT extension) is finally reliable enough to be on par with Resharper's.
 &gt;Any good resources for learning the basics of WPF that uses MVVM examples where relevant? https://github.com/MahApps/MahApps.Metro https://github.com/ButchersBoy/MaterialDesignInXamlToolkit https://github.com/lbugnion/mvvmlight the awesome https://github.com/BornToBeRoot/NETworkManager &gt;Within WPF, what is the normal way to change the content of a screen? Do you use a UserControl and just clear the controls of the master window and then add the new user control? And is this normally done by some "application controller" class or something else? I'm not sure to get what you mean but usually you bind the content of a control to a viewmodel and control which viewmodel and how is displayed on the screen via a message bus or some logic in the main viewmodel. &gt;I've read enough to know that it is possible (and preferred) to avoid the code-behind. What are some things that, on balance, using the code-behind would be preferred over pure XAML? Code-behind is for view logic only. It's not bad to use it in an MVVM application, sometimes the view requires it. &gt;Tips for themes/skins for WPF app? https://github.com/ButchersBoy/MaterialDesignInXamlToolkit &gt;I am not sure I understand DependencyProperties very well, though I do understand their purpose. There seems to be a lot of boilerplate for them. Any tips, tricks or advice here? Why not just use regular properties with the "normal" INotifyPropertyChanged logic? https://kent-boogaart.com/blog/view-models-pocos-versus-dependencyobjects
Swift has default implementations and uses them heavily for a similar purpose, I.e. to provide the collection library. 
&gt;Nullability of reference types tracked by type system. You're not going to mention the new "dammit" operator?
I already have an interface to Consume and other to produce messages. And i use Moq to do test to dont need comunicate with an real kafka queue. But now, i want to test de workflow that i produce an message and check if is consumed by my consumer. I dont understand very well your answers, with this new details you can explain better your point?
Do you have resharper installed? Uninstall it. Do you have other plugins installed? remove suspicious ones until problem is fixed. What kind of solution are you working on, is it huge? How much ram do you have? I wrote up some tips for disabling unecessary visual clutter, some of this may reduce resource use a bit as well: https://jackmott.github.io/programming/tools/editor/ide/visual/studio/2016/07/11/decruft-visual-studio.html 
One feature I do miss from ReSharper is going right to a view/partial view in ASP MVC projects when you press F12 aka something like ` @Html.Partial("~/Views/Site/_Map.cshtml")` would take you to the partial view source code, not a dump of the String class :(
&gt;you can use VS Code for free. It's passable. I think that's underselling it somewhat. VS Code is a lot more than just "passable". It's had almost universal praise since it was first launched and won the most popular IDE/Editor category in the 2018 Stack Overflow survey.
The thing with the `FileStream` class is that it performs pretty much all of its operations on the binary level. That being said even though you converted your output into ASCII, in order to write that data to its new home you have to convert it back to a binary byte array to transfer it. Now there are 2 ways around this from what I can see, the first option is you use the `FileStream` to copy the contents of the STLB file verbatim into the new STLA file and then run your Bin2ASCII conversion over it. The second option, if you prefer to convert your Bin2ASCII before creating the new file, rather than using the `FileStream` use the `System.IO` `File` class. This way you can create your new STLA file (Given a valid file path) and then write the contents of your output to your file in ASCII format directly. On a small side note, I'm not entirely sure how efficient it is to convert your Binary to ASCII using a string builder. You may want to look into the `Encoding` Classes as it may provide you with a more efficient way to convert your output. The simplest way to confirm the accuracy of your ASCII output compared to the Binary values would probably be to run a CheckSum(Hash Algorithm) function over the raw binary contents of the files. If the CheckSums don't match then something went wrong, if they do then all is good in the digital world. As for your binary reader there is a better way to check if you have reached the end of the byte array. Try something like this instead of what you have; int Array_Length = (int)Math.Pow(2,19); //This is our read buffer size, its currently set to 524,288 Bytes so adjust it accoringly byte[] DataArray = new byte[Array_Length]; //this byte array will contain the data we read from the BinStream //We first access the file using a FileStream so we can prevent it from being opened elsewhere and only allow reading of data using(FileStream fsRead = new FileStream(FilePath, FileMode.Open, FileAccess.Read, FileShare.None, Array_Length) { //Next we create a binary reader with the FileStream as its source to access the raw Bin Data using(BinaryReader brRead = new BinaryReader(fsRead) { for( ; ; ) // Initialize an infinite for loop, Note the only way this loop will end is if you call break { int read = brRead.Read(DataArray, 0, Array_Length); //The value read will contain the number of bytes read by the reader //brRead.Read() takes in our Byte[] for storing the read data, 0 is the index to read from, and Aray_Length is how much to read if(read == 0) //When we have read all the data from the BinReader read will return a 0 { break; //Allowing us to break from the loop knowing we have read all of the data in the reader } //If read != 0 Do Work Here } } }
Put some computer specs in your file from DxDiag please
* Async disposables. * Async enumerables. Async constructors please!
visual studio has one built in, and it is configurable. does it not suit your needs? 
You can't do that. Vs runs as a 32bit app, so it's limited on the memory it uses. For R# I disable EVERYTHING except the unit test and build. As without the build part my companies solution compiles in about 20mins.
&gt; Don't miss #build2018 stay tuned for what Progress/Telerik have to say about blazor Haven't seen anything yet other than the markdown blog post but that was way back in April; what exactly were you referring to?
Normal ish sized solutions, nothing incredible. Like 30 classes. No extensions. 16gb
Download in the background is definitely something we're considering for the future. We want to continue to improve the update experience and keep making it simpler, while giving you more information and control. Install times are a different beast entirely. Your experience with installing a certain package isn't going to match someone else's unfortunately. I know we want to give more information here, particularly in the longer running packages, but an overall install time would fluctuate so much that I don't think you or others would trust what it's saying (That's the real issue, being wrong or wildly wrong there erodes trust in the product too much). We are thinking about ways to make this better though.
This may be a long shot but have you considered looking into the Skype for Business API? If you are only concerned with making internal calls then it may be a good solution. It may be possible to combine the Skype API with some Active Directory programming to accomplish the same thing.
if you're not using a ton of plugins/extensions in Visual Studio either your hard drive is messed up (ie damaged) and you might have to replace that. maybe reinstall Visual Studio?
I thought the same thing, but before I started using it I had a fairly massive amount of experience with C#. We started using it for a new project at my company and another (very experienced) developer with no C# experience was finding C# very hard to work with... until he switched to Rider. VS Code is a really great IDE, but you have to keep in mind your relative experience. I don't mean to poopoo VS Code, it's great and I've written entire systems with it in C# and other langauges, but compared to VS proper or Rider, it's just passable.
 - class Person(string First, string last); + class Person(string First, string Last); 
best guess is you have some extension of plugin that is causing problems. or some other process on your computer is hogging resources. 
maybe do a complete sweep for .NET SDKs and remove those. idk.
Personalized content using ajax seems reasonable, what platform are you using?
Latest visual studio supports .editorconfig ( as well as R# moving to this format too) that allow you to share formatting style with your team. Another option ( commit hooks anyone ?) is Code Formatter tool from Roslyn team. Fork, adjust to your team style and use in CI. Unfortunately there is no built in tool in 'dotnet' like 'go fmt' maybe one day...
In Python this is called [data classes](https://www.python.org/dev/peps/pep-0557/) and was added to Python 3.7. I keep feeling that C# is just copying Python's ideas...
.net 4.6.1
I'm partial to Selenium, just because its easy.
&gt; You make a pretty big assumption LOLOL A bug... in VS..... nooooo You make it sound like I'm questioning the validity of odd numbers :)
Perhaps use something like Funnel that lets you filter out projects that are not relevant to your current task.
Well, I don't know how long Python has been discussing records design, but I know the C# design team has been discussing on and off the syntax, design, and behaviour of records for many years now. If anything, I would say probably a major impetus/inspiration for the feature is coming from [F# records](https://docs.microsoft.com/en-us/dotnet/fsharp/language-reference/records) which have been around since F#1.0 in 2005. F# language design and features tend to influence C# features, probably moreso than Python (though I fully expect the C# language designers to research and gather ideas from any number of languages, including Python). Probably in part because they're both running on the same CLR so there's already some level of compiling parity/proof-of-concept there. It's also not rare to have .NET developers who switch-hit between C# and F#.
Copying Python? lol, check F# record types.
&gt; why not use a base or abstract class You use base/abstract class to provide default behavior across classes that share an inheritance chain. You would use Interfaces to provide default behavior across classes that do not share an inheritance chain.
I was listening to dotnetrocks podcast "1539 Blazor and WebAssembly with Rocky Lhotka". They seemed to have some insider info that Telerik will start working on Blazor components. To be honest I've expected to see a lot more about Blazor in build2018. Anyway I am currently waiting on NDC Minessota to be uploaded in youtube. Steve Sanderson has given a great talk there.
I run into plenty of VS bugs. It doesn't follow at all that every build process bug I encounter is on VS.
Really nice, my workflow for this has been to download the SVG, rework it using Inkscape, then save as a XAML resource. Definitely will check this out!
MVC?
Resharper was not impressed with my SSD and 32 GB of RAM. 
Shit. What kind of solutions do you work on?
Not really, you should use npm, imports, and bundler like webpack.
&gt; Copying Python? lol, check F# record types. On the sense of the easily one liners. If we go the way of check some other language then we end up arguing that C has structs. &gt; Or better, check all the F# sintaxis. Also, I think that F# is a functional language so not _really_ comparable
The actual design of the SVG is outside of the scope of my project. So you still have to “download and rework” if that’s how you do it. What it really changes is how you can use that resource inside of very easy to use/customize controls, taking away the pain of dealing with the SVG resource directly. Glad you want to check it out. Please feel free to get back to me with any request when you do!
I'm guessing you haven't used F#.
If you have a small list and you are using it for a simple query, /u/ihaxr's comment should suffice. If you are doing some sort of processing on this data you might desire using some sort of batch query table like this: http://danpincas.com/2013/03/16/entity-framework-dealing-with-large-where-in-statements.html 
F#s inspiration for most things comes from Haskell or OCaml. F# brings in as many FP concepts that it can, and the C# team is trying to capitalize on the benefits that those patterns (can) allow 
I don’t believe it was mentioned in the video at all.
This really depends on the service you are hitting. Recently, I was tasked with determining if one of our services would handle a certain workload. Using Visual Studio's load test tools, I found it would only allow 10-20 concurrent requests before running out of CPU. It started out fine, but then seemed to load up, so to speak, and would stop performing at all. After some investigation, I found our logging service was logging everything. I turned the level down to Errors only and I was then able to make 400 concurrent requests without any issues. I believe CPU utilization was at about 40%. I didn't push it any further because our network admins start getting twitchy when we bog the corporate network with test traffic during the day. Each request was a set of two posts consisting of header information of about 30 string fields and a corresponding financial statement with 1000 numeric values.
What? None of those do anything the same reason as a CDN. A CDN insures speeds no matter the distance, sure libraries can be installed locally, but there is a ton of info that should always be on a CDN unless you don't care about speeds outside of wherever your original data center is. /u/ToMissTheMarc2 I didn't know Microsoft even had a CDN, but yes, CDN's will always be used, they allow, especially things such as pictures, to be downloaded fast no matter where in the world you are. That is their main point. Cloudflare is one of (if not the absolute best) CDN networks that is used by millions of websites. All content saved to a CDN is redistribute to all other nodes across the world, so no matter where you are, you still get fast speeds (instead of waiting seconds to download an image from some other data server.)
You guess right. I don't like functional.
 Ok? I don't see what the purpose of this is But to critique the code, there are no using statements on either filestream, why is it setting the fout length to 0, it's grabbing the length of a stream that hasn't been read, I'm not sure what rdlen is for (why would you have a read length?), why is there a long rdlen, and an int len, why is there a class name called DES_CSP, and finally why is it trying to open a file (instead of createnew) if it's trying to set it's length to write to?
The C in POCO seems redundant. We should be calling them POOs.
From the name of the method, it seems like there might not be a way to handle exceptions. Meaning if an exception is thrown, there's no way to recover.
We use Azure to manage our CDN. Really this service is using Verizon or Akamai CDN and you're having Azure mange it for you. We Azure Blob Storage to host the images, then use the CDN to deliver them. Our users primarily are from the US, but there are options to cache files globally. Performance and cost are great. Our images are freely available on the internet, so we don't really have any security concerns using the CDN.
Ctrl+K,D for the shortcut. The Edit &gt; Advanced &gt; Format Document lists it as Ctrl+E,D but that has never worked for me in any VS version.
&gt; On the sense of the easily one liners. If we go the way of check some other language then we end up arguing that C has structs lol, is it just because you don't like .net or because Python "copied" another language? &gt; Also, I think that F# is a functional language so not really comparable Why? F# and C# are multiparadigm languages, c# has some functional features, f# has some object orientes features.
Microsoft just added an option to use their own cdn as a 3rd alternative to Verizon and Akamai
Why are you even engaged in a discussion regarding C#'s influences of you aren't even familiar with C#'s sibling language? Doesn't that seem like a glaringly obvious potential influence?
I didn't realize they had their own! We currently use Verizon. Time to run some tests on this new Azure CDN.
We use Microsoft CDN for a few reasons. One big one is to control the cache TTL on the big image/JavaScript/css assets. Only having to download jQuery once a year is pretty great for performance 🙂 Bundling has always felt like a workaround for dealing with a lack of defer support in IE. Now that we are moving beyond that limitation we have removed a lot of our bundling in favor of a CDN. 
It's `youtube-nocookie.com`, which looks like it's still run by Google.
On the flip side I'm desperately wanting Rider's solution model to more closely match Visual Studio so I can move back to my favorite platform. Resharper feels like a crap cut-down version of IntelliJ's inspections, so if programming the IDE in java alongside their other products is more likely to get some of those inspections ported across, I'm 100% in support of them. However their are a few tiny bugs with their model of solutions + projects + project references that make it unusable for me currently.
I know right? It's also *perfect* for Entity Framework, because entities are basically just records. 
I meant the naming standard of the class :)
keep in mind that episode aired in 2003, so they would have been on a really early version of c#
Thanks for the answer! It looks simple enough and i'll give it a try. 
Install Power Tools and you can set it to format on save. Much more convenient.
Instead of All use Count with the same lambda and check for &lt;= 4
But it's realistic! IME, this kind of programming deficiency is quite common in scientists. They're really smart and experts in some field, but they're not software engineers. They can hack something to get it working. They may even be able to performance tune it way better than you or I! But it won't be stable and maintainable.
Is it possible that the extra characters are actually present in the Azure storage, that is, might the problem be on the upload side?
Well, that explains why the Stargate always acted funky on Earth side. (I'm a SG nerd, don't mind me)
`IDisposable` goes back to .NET 1.1, if MSDN is to be believed, and the `using` statement is part of the C# 1.0 spec from 2002, defined around 'IDisposable`. While I think u/RiPont's justification is a *reasonable* explanation, it appears to be pulled from the listed website's [example code for data decryption](http://www.java2s.com/Code/CSharp/Development-Class/Decryptingdata.htm), which looks kind of ... bad. 
It's not currently targeted for C# 8.0, for one thing.
You can also use Fody.PropertyChanged, which doesn't even need an attribute :)
Great stuff, thanks man.
How would you add any meaningful exception handling to this method?
Nah, that is because they created their own sequencing program and they're actively overriding over a hundred safety mechanisms of the Stargate.
If start with the filestream in. Add logging or an alert to the user if it's not accessible.
That should not be part of this method. This method has a clear responsibility, don't mudder the waters.
Cool! Thanks. Yeah, that was the answer I ended up with. :D
Being tired of writing boilerplate code, that is indeed amazing. Wishing it was that easy with other languages too...
What is wrong with htmlagilitypack? 
I'm using a lot htmlagilitypack and it is just fine. No problems with it (some memory leak's on .net core but we solved it by removing all nodes on loaded document after it's no longer needed).
AngleSharp does not even released stable version... is it useable enough?
You do realize this is Pseudo-Code right? I write out code like this all the time when trying to plan out a function or method and I while I follow the general syntactic structure of the language, very rarely will I write absolutely everything out, it's time consuming and inefficient. This same general argument can be applied to the nonsense values you see stuck in the functions consider them placeholders when you don't know your actual values. The DES_CSP class you mention actually exists. DES is a now depricated encryption standard that was widely used in the 1990s and early 2000s when this show was filmed. The appended CSP stands for Cryptographic Service Provider. This is how you accessed crypto methods back in the day. The reason it's trying to open a file, if you bothered to watch the episode before posting this, is because they are attempting to encrypt the source code of the "avenger" virus that they will be uploading into the gate system. This also answers your question "why do you need a read length" because we need to know much much data will be read into the buffer so they can pass the proper value into the encryption method. Why have a long and an int value for lengths? If the read length is greater than the max int32 value (which when working with binary this can happen real fast) you need a bigger storage space. Why not just store it in a long to begin with? Efficiency, processors can handle an int faster than a long. Compared to many Sci-fi shows, Stargate went out of its way to keep as much real world in their show as possible. Almost all of the physics, science, math and other references are accurate real world information that was thoroughly researched and fact checked before being put in the script. The only creative liberties come in with the clearly theoretical or obviously made up stuff. All of Stargate SG-1 and Stargate Atlantis are on Hulu. If you've got it check it out. Start with the movie first though or you will probably be confused at the start. 
Dont forget that replicators are coded in javascript
Cool, so they could run node.
TBF Shepard went forward during a transfer between two Pegasus gates, both of them running vanilla Lantean firmware. It's possible that the patch blocking transtemporal wormholes was only developed and added to the Milky Way gates after the Lanteans returned to Earth.
Actually Rodney admitted that Shepard jumping in time was a direct result of him and Zulenka making modifications to the dialing program to make it faster. Gates only fail when we try to play with them lol. 
They were coming *back* from a mission. Unless they were remotely messing with the DHD on M4S-587, I doubt their modifications could have caused the time travel.
 This is not pseudo code. This, is pseudo code: http://www.unf.edu/~broggio/cop2221/2221pseu.htm DES_CSP has never been a class. I have no idea where you got that from. Is there something called DES? Yes, no one is arguing that, DES_CSP is not a class. DES, is the class. https://msdn.microsoft.com/en-us/library/system.security.cryptography.des(v=vs.110).aspx No, they do not need a readlength. They make sure that the amount they have read isn't more than the total length. Here is an extremely simplified version: byte[] bin = new byte[4096]; int len; while ((len = fin.Read(bin, 0, bin.Length)) &gt; 0) { fout.Write(bin, 0, len); } None of what you posted is needed, and it would be even easier if you just used a streamreader / writer instead of a direct filestream :) However, I have never seen Stargate. Did not realize it was an old episode and on top of all of that, I am flabbergasted that the .Length line before it even reads the file actually returns something, which to me sounds inaccurate (unless I guess encodings don't matter since it's binary data?)
First off your one example of pseudo code makes no sense. Pseudocode is an informal high-level description of the operating principle of a computer program or other algorithm. As the name suggests, pseudocode generally does not actually obey the syntax rules of any particular language; there is no systematic standard form, although any particular writer will generally borrow style and syntax; (SIC [Wikipedia](https://en.m.wikipedia.org/wiki/Pseudocode) ) That definition invalidates your statement and your reference. Second I have no clue what that second paragraph or link is about... Third the link you gave me regarding DES is from the current version of .NET not the version they would have been running in the 90s and early 2000s. Not only that but the code example on the current version page uses the TripleDES algorithm rather than standard des. I refer you to this page about DES as it relates to .NET 1.1 https://msdn.microsoft.com/en-us/library/system.security.cryptography.des(v=vs.71).aspx As you can see earlier versions of accessing the class were quite verbose. It's possible to consider that in the using statement that calls the crypto namespace they renamed it to something more user friendly? Fourth: ` //Create variables to help with read and write. byte[] bin = new byte[100]; //This is intermediate storage for the encryption. long rdlen = 0; //This is the total number of bytes written. long totlen = fin.Length; //This is the total length of the input file. int len; ` This is an excerpt from the page I just linked you about initializing the des class. Please note the comment regarding rdlen before telling me a read length is not required. Fifth Your simplified code examples also hold little weight here because again it's written in current .NET syntax not legacy which was again much more verbose. Sixth I refer you again to the legacy code sample. Do you see the use of a stream reader/writer? I don't because that's not how it was done. Again you are thinking of current syntax, not legacy. Seventh obviously everything I posted was needed. Eighth when working with a FileStream most of the operations performed are on the binary level. The FS doesn't care about the ASCII representation of data all it sees and deals with is 1s and 0s assembled in byte arrays. So yes when looking at the raw binary you can get the .Length() which returns its value in bytes. 
Non-Mobile link: https://en.wikipedia.org/wiki/Pseudocode *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^180846
Why do you think they tried to take over the world..... think about it the original replicator block is vanilla JS. Every upgrade from there can be thought of as a new framework. Right up until you reach Human Form Replicators that run on Node.JS.
Depends on what you plan on doing with it I guess. I've used it for scraping in personal projects several times now and had no real issues. For a production environment you'd usually want to go with something that has a stable release.
In the anglesharp wiki there is a small comparison: https://github.com/AngleSharp/AngleSharp/wiki/Performance#comparison-with-the-htmlagilitypack
&gt; First off ... You literally proved my point. Scroll to the bottom of my reference. It is the code, that they used in SG, the one you're arguing for, that is, to you, pseudo code. You just said yourself, it is not pseudo code, you just proved my point lol. The link to java2s is literally the code in Stargate. &gt; Third ... Your link still supports there never has been a class named DES_CSP. I'm confused why you linked that. &gt; Fourth: I showed you an example of how you can do it perfectly fine without it... what... &gt; Fifth There is nothing I used that's not in .net 1.1... what are you talking about &gt; Sixth https://msdn.microsoft.com/en-us/library/system.io.streamreader(v=vs.71).aspx Streamreader, once again, has existed since .net 1.1. I have no idea what you're going on about. 
K. You win. 
They removed that ! Suffix operator. Now every thing will be not nullable
&gt; The advantage over similar libraries like HtmlAgilityPack is that the exposed DOM is using the official W3C specified API, i.e., that even things like querySelectorAll are available in AngleSharp. Also the parser uses the HTML 5.1 specification, which defines error handling and element correction. The AngleSharp library focuses on standards compliance, interactivity, and extensibility. It is therefore giving web developers working with C# all possibilities as they know from using the DOM in any modern browser. &gt; The performance of AngleSharp is quite close to the performance of browsers. Even very large pages can be processed within milliseconds. AngleSharp tries to minimize memory allocations and reuses elements internally to avoid unnecessary object creation.
A character in Stargate SG-1, a show that ended 11 years ago.
https://youtu.be/p6fgZP7jP4o?t=32
Override the ToString() method of the Tea class
How the hell did I not think about this... Thanks, I'll give it a try as soon as I get to my PC again.
I was gonna check if C# existed when that episode aired. Turns out it did. S07E09 aired on August 8, 2003, according to [this](https://www.imdb.com/title/tt0118480/episodes?season=7&amp;ref_=tt_eps_sn_7) C# first appeared in 2000 according to [this](https://en.wikipedia.org/wiki/C_Sharp_(programming_language\)) 
Since when? You must be talking literally in the past couple days, because azure didn't have any options besides Verizon and Akamai earlier this week when I was in the cdn config blade.
Your missing the point of using Microsoft's JS CDN, versus your own, which is that many sites might use it and your visitors are more likely to already have, say, jQuery from Microsoft's CDN cached in their browser.
I reccomend posting to their support and reading their docs. hage you installed yet? the process is simply including g your assemblies and pointing to a config file, it's even got a wizard. the biggest hurdle is the actual sonnevtion setup, which has a wizard. its hard to walk you through it because it highly depends on you data access method. side note, this is how we give access to so.e of our power users to do reporting. linqpad has been designed to fo this. I've even built an "installer" for new clients that runs linqpad though their commandline tool, lupron. 
It's an extremely well known show amongst tech-orientated people. It's like asking what the "Enterprise" is.
Default interface implementation bothers me a *little* at a gut level, but the only thing that I find genuinely troubling is the apparent ability for interfaces to have public, non-virtual members. If nothing else, that's going to be a royal pain for some unit testing work, sooner or later.
Not even close.
Its possible that whatever Rodney did to make the gate dial faster accidentally changed some part of the "receiving" code. Just means Rodney didn't write any unit tests.
With all these comments about the code itself, why is no\-one asking the real question here: "How on earth is he going to compile that from the whiteboard?"
Awww... I liked that. Oh well.
I don't think the shapes/extension everywhere proposals currently have a targeted release. Certainly not targeted for C# 8. They could be dependent on seeing how default interface implementations shake out, or on enhancements tied to implementing record types. Or just be way down the list.
That's my primary concern, is that an implementation will get buried and it correcting it or testing will be a nightmare. But as I get more feedback, I'm growing less concerned. I'm exposed to a lot of devs who do things because they can, not because they should and that tends to shape my bias
I used to follow a tumblr, IIRC it was called movie code, where it would find the source of all the random code on screens in movies. Usually it was stuff from popular github repos.
I completely agree with u/americo. I've used linqpad for a very long time, and most of it's features I've had to tease out through use. It's probably the best C# scratchpad out there.
I don't think it's an unreasonable concern, really, but I've had similar-ish experiences. I think it weakens the 'pit of success' idea, and it eradicates a pretty valuable assumption about interfaces as pure virtual types.
Damn, it's been 11 years? I miss that show, although they kinda went downhill with the whole Ori plot.
I believe the large part of the difference between these methods will be in how sql server will cache query plans for the versions. With the `Contains` version the server should prepare and cache a different version of the query for each count of parameters (so you would have a dozen different queries as far as the server was concerned if you have up to a dozen parameters). On the other hand the `Join` version would only prepare the join query once. For us we had to change from a number of queries using a dynamically generated query with `in` expressions to a join table like this because our queries were filling up a cache on the server causing everything to have lower perf (in our case we had multiple parameters with different length lists easily with thousands of different parameter combinations per query).
I tried it out too and also liked it. Also discovered form that post. Performs well, made some nice suggestions.
Huh, funny :) Literally in the past couple days.
So the show was almost cutting edge!
Thanks for info. I will surely check it out in free time :-)
I recently (amongst other things because I probably skipped a few episodes back then and also because I watched it in German) rewatched all of SG-1. I must say it aged pretty well :)
:(
CMS systems are an abomination that should be destroyed. That said, non-technical people love them because it's a tool that does much of their job for them and bypasses all of the technical stuff that they don't know. (In doing so, it becomes an abomination *because* it glosses over technical stuff. There's a reason technology is complicated, and CMSes will only ever reach that "good enough" stage.) If you've hired a Wordpress guy, let him do Wordpress. But keep your back-end safe (CYA?) by hiding it behind a well-secured API. Wordpress, as a CMS, is well-known and well-supported. That's a huge advantage over a better-fit but lesser-known CMS, since you *will* need the support, but you can *easily* work around the interface by publishing an API. So... Option 1 would be my recommendation. Option 2 is probably going to end in tears due to some unforeseen issue that nobody will know how to solve without a complete rearchitecture of both the CMS and the customizations you made. Option 3 is pie-in-the-sky, because of course you'd love to build it without a god-forsaken CMS, but non-technical people will be too dumb to use it and too lazy to learn. (An attitude I find contemptible, but there are a hell of a lot of people that have it. Sometimes you have to pick your battles...) I speak from experience, BTW. I opted for Option 2 and used DNN. Now I routinely have to tell the client that "X can't be done because the DNN UI is terrible", and constantly have to try to convince them to allow us to build a custom interface (a CMS just won't cut it at all for their needs, and DNN is proof of that).
I agree, this does seem possible.
Have you looked at comprehensive platforms like EpiServer or SiteCore? 
Writing and maintaining a proper HTML site is not a trivial thing to do. Expecting people whose role is not technical to do it and calling them lazy for not doing it is a pretty arrogant thing to do. That's why CMS systems exist. Stop being an arse.
Using a database will probably be your best approach. You can build a WinForms interface to enter the required information that defines the coin. This will keep you from needing to make code changes whenever you wish to add a new coin. The way the code is structured now, every time you wish to add a new coin, you will need to edit the Coin enum and CoinPairs class. With the database, you will have a common interface that will allow you to retrieve all of your coins and iterate through them.
You should be able to find documentation about what the products do, but getting a price will require speaking to them. 
I second this. At my last job we had resharper licenses and when I took a new job I couldn't seem to generate any interest in getting some despite me being heavily reliant on resharper previously. CodeMaid is very acceptable substitute and the price is right. 
Orchard.NET isn't bad, although it isn't as polished as some of the other options. It has the advantage of using MVC. OrchardCore should be out of beta fairly soon. There are a few e-commerce plugins available if you look around.
Now I think r/debugstargate needs to be a thing.
It's not lazy to not write code. It's lazy to demand that you be allowed to do updates to it without learning how. If you want to do content layouts and have a developer make them, then that's not lazy at all. If you want to use a CMS and it fits your usage well and you don't demand features that don't work well with it, that's not lazy either. But if you want to demand a CMS be used as a shortcut to getting a site up and running, then gripe because the system doesn't make *every* complex task into a single button-click and have perfect flexibility to instantly and effortlessly add new (and poorly-designed) features at your whims, then make conflicting exceptions to every business rule and complain when the system barfs them up on your shoes, then you're lazy and you deserve my scorn. This is *by far* the most common user type, and *I hate them and want them to die in a fire*. I'll stop being an asshole when users stop being assholes. (So, approximately never.)
&gt;DNN I know they've rewritten it, so maybe its better now, but it was junk for a long time.
I lean toward using a repository or other intermediary pattern mainly so I have "one neck to grab" with regards to where all the query statements are and how they are being used. This becomes incredibly useful when you need to optimize as LINQ does support things like lazy loading data. While you can easily query the data context anywhere this just becomes a maintainability nightmare in my experience. Further if the app is going to live for more than 3 years it will likely have some other data system or API applied to it in the future. By encapsulating your query code in one place you make that easier to do. There are some other advanced patterns you can consider though I tend to lean toward GoF patterns and other common patterns unless I intend on writing the needed docs to explain my odd pattern to a newcomer.
The bummer with this approach is that you lose edit and continue - which for some workloads is a killer.
So, if I'm understanding you correctly, you're kind of talking a middle ground of what I was thinking? Have a repository class with all of the queries inside it, that uses the data context, but have them return the models from the dbml? To me this makes sense, and I'd be fine with that. It's /slightly/ more overhead (depending on implementation) but I can see the benefit. 
&gt; It has mixed results in what respect? Compilation? Behaviour? Performance? All of them?
Look up "self-contained deployment" for .NET Core.
[https://umbraco.com/tour/](https://umbraco.com/tour/) Gonna try and keep this brief as .NET Based CMS vs Any Other CMS often produces some kinda contrived arguments turn threads like this into a subjective minefield \(similar to my chosen language \&gt; your chosen language\). Sounds like your have to gonna commit to something, so if that's SiteCore and it's $40K license before you start, or taking a punt on the shiney new OrchardCore, you'll have to weigh up what's \*really\* important. Pros; * Free, open source with a core team based out of Odense, Denmark. They've been hiring \*a lot\* recently. So, yeah, open source \- but with pro support / commercial interest if you have the cash. * Editor experience \(for your marketing team\) is similar to Wordpress and it's easy. You enter stuff in boxes on tabs, rather than 'edit\-in\-place'. Training none technical clients \(content editors, marketing\) how to enter data, preview and publish has been fairly straight forward. Need to lock down the CMS to prevent idiots deleting stuff they shouldn't? No worries with the user management. * Developer experience \(for your existing .NET devs\) is easy to grasp \(MVC\). There are plenty of extension points for integrations. Need a funky integration with your custom back office CRM, DB or API? No worries. Need to present custom content on 'virtual' pages? Routing and content finders got you covered. Don't see an Umbraco package \('WP plug\-in' equivalent\) you need? Go ahead and roll your own \(Angular\). Need a custom members section? Yes bro, it's in there. * Designer experience \(for your existing design team, if you have one\). There are no templates. It's a blank template. You make the templates. Or you cheat and get yourself to Themeforest or similar. * Community experience \(for dev / designers\) is great. Very friendly. Loads of meet ups with the biggest in Copenhagen every year \(CodeGarden\). Cons; * There have been several versions of this CMS. 4.x, 5 \(well, it didn't fly so they don't talk about that\), 6.x, 7.x with 8.x touted for next year. Older versions sucked in different ways. The latest version of 7.x is excellent, but there's a fair bit of legacy to this CMS so you may find that some ways of doing things are a bit strange. * Documentation hasn't been the greatest for any of version \(it's ok nowadays, but lacks real world examples\) * There is \*still\* no real best practice guide on how to build sites \(there are often many different ways of achieving the same thing in Umbraco\). There's the starter package and a few open source examples, these share some similarities but aren't particular heavyweight \- like a full 'bootstrap' or 'foundation' version. You'll be on your own to figure out the best way for yourself \- what works for you, your team and clients. * You'll pay a lot for their proprietary cloud offering, or becoming a gold partner, or even for some basic functionality \(Umbraco Forms, Courier\) or support. * Similarly, HQ switched up the 'certifications' so you can become an 'Umbraco Certified Master'. It's prohibitively expensive for small agencies * There's a few heavyweight packages for e\-commerce \- free like Merchello, or 'paid for' Tea Commerce. Whatever your trying to do, YMMV, but you can always try 'roll\-your\-own' if you have enough time/resource. I hope this helps. 
Doesn't that result in a script that just invokes a copy of the runtime? I don't think it creates an ELF file does it?
I appreciate the feedback, I know MVC is a web framework as I've used Laravel, Yii, Zend and Zend Expressive in PHP. What I meant by "hung up" was they never used these LINQ to SQL classes and would do database handling manually with queries through a repo class. To me, there is very little harm in writing these two lines of code customer.firstName = "Dave"; dataContext.SubmitChanges(); There are no queries. I get throwing it in another class to pull the logic out of the controllers, and keep your writes/reads in one place. The thing I get out of the database models with the LINQ to SQL stuff is, passing customers, I automatically get it linked to all models that share foreign keys. IE: customer.Request.Details.Description; as an example. Feeding all of these db models into new models just for the sake of not using the db models seems like overkill to me. Or is there a really easy way to do this I haven't found yet? 
Should clarify, writes have no real queries as they would be db classes that are tracked and then modified via the data context. Gets would obviously use LINQ queries.
Indeed.
why not just get [SSMS](https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-2017) and learn some basic SQL? its free although LINQ to SQL is sexy. however free linqpad does not include intellisense so not having that and not knowing the depths of LINQ/lambda land its hard for a newbie to C# IMO
I know sql and still prefer it. It's worth the money to buy it IMHO. 
Yes
No. 
Essentially yes, you can even return the collections that come out of your queries, done right you still wont take the performance hit until the first iteration of the collection. I tried going without some kind of DAL once and it just made troubleshooting and optimization more of a pain than it needed to be.
Removed: Rule 4. Check out the [`Directory.GetFiles(string, string)`](https://msdn.microsoft.com/en-us/library/wz42302f%28v=vs.110%29.aspx) method. That will let you find all PDFs in a directory. Once you have those, you can use standard string concatenation/building methods. Dive in and give it a shot.
Thanks for the thoughtful response it sounds like you have some good experience with it. I'll give this another change, I think we might have had a demo on this briefly but I'm not sure if I tried setting up a test site on it yet. I think one of my problems is I tried doing too many demos all at once and the whole time I was like, I fucking hate this, I know marketing is going to hate this, I can just build my own etc.
MVC =&gt; Model View Controller != ASP.NET MVC which Implements the model view controller pattern. Note that even when using a framework enforced pattern like MVC or MVVM that you should not put everything under that pattern. You should seriously consider your choice to be your "top layer" pattern. Underneath that you may have actors, repositories or a number of other patterns that work better to solve your backend challenges. Very rarely does your top level pattern fill all your needs. In most applications expect to use 3-5 major patterns over and over. If you try to make everything fit in one you will hurt. 
Thanks for the reply, really. I'll be looking into all these. If we do go this route I'm not terribly worried about our team's lack of php experience, worst case we can always bring in some contract help. One curse/blessing we have is that a lot of our transactional business logic stuff like, placing a bid, creating a lead, etc. are all in stored procedures so we won't need to reimplement this huge C# service layer in php, it would just be invoking SPs with the right parameters and reading out of the database. And this would only be a concern if we're doing it server-side inside the WordPress backed app and not hitting a separate API to invoke these calls. It's funny I think the guy on the team with probably the most experience is our DBA from his personal blogging experience.
I searched high and low for a replacement however my favorite CMS remains.... Visual Studio. 
I'll have to check it out. I think whatever solution we go with we're still going to build the e-commerce section ourselves and let marketing handle the mostly static stuff, home page, landing pages, articles etc. We don't sell traditional skus with a quantity etc. we host auctions, do negotiated sales/take bids etc. etc. I think trying to wedge that into vendor's e-commerce solution is going to be hell. My dream honestly would be like, marketing set up WordPress, do your thing, keep us out of it. We'll host the e-commerce section on our own .NET backed site in an iframe :p
It's interesting that you mention MVC. It seems like with Orchard and a lot of the vendors we talked to, they're still mostly stuck in WebForms mode with some sort of partial support for MVC. I'm guessing their install base is so invested in the WebForms and can't justify a rewrite that the vendors have to give much of their attention to WebForms as well. Honestly though, with the way that some of these CMS' are implemented like SiteFinity and Kentico, you kind of nod your head along and say oh yeah WebForms kind of makes sense, since it was built for drag and drop originally, and in the CMS it's just done through a web interface and saving controls in the database.
I like your reply. Yeah I mean, if all that mattered was developer satisfaction I wouldn't touch a CMS. I'd File -&gt; New &gt; dotnet core 2.1 Razor Pages project and be on my way and deliver a totally satisfactory product. The problem is we're a small team with other projects to maintain and we'd be bolting on half-baked CMS features as marketing's needs change on short notice. So that's why we want the CMS up front even if it's just fantasy and might end up being a nightmare.
Haven't heard it referred to as EF so I'm not sure. Here is a bit of documentation: https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/linq/typical-steps-for-using-linq-to-sql
No problem. I think that if you use *any* out\-of\-the\-box CMS with plug\-ins, you will probably get quite far to completing your goal / project. Eventually though, you're going to hit that last task or feature and end up trying bend the CMS to try and do something it can't. This is where Umbraco get's out your way. Any CMS based site is only going to be as good as the team that built it. I've seen some \(and built\) horrendous features because I didn't do enough BA upfront or we ran out of time. Remember that whatever you choose, you will support it and iron out most issues... and then probably move on to a new project. However, the client \(content editors / marketing\) is probably be stuck with it for good few years. Whatever CMS you choose, if you mess up the editor experience, you'll never really be forgiven. Do let us know what you chose. Good luck. 
He? Did you not know Sam's reproductive organs are on the inside?
Collection initializers are your friend. public static class CoinPairs { //Binance coin pairs public static CoinPair TRX_DOGE_Binance = new CoinPair(Coin.TRX, Coin.DOGE, Exchange.Binance, 1, 1); public static CoinPair TRX_BCC_Binance = new CoinPair(Coin.TRX, Coin.BCC, Exchange.Binance, 1, 1); public static CoinPair XVG_TRX_Binance = new CoinPair(Coin.XVG, Coin.TRX, Exchange.Binance, 1, 1); //Cryptopia coin pairs public static CoinPair TRX_DOGE_Cryptopia = new CoinPair(Coin.TRX, Coin.DOGE, Exchange.Cryptopia, 1, 1); public static CoinPair TRX_BCC_Cryptopia = new CoinPair(Coin.TRX, Coin.BCC, Exchange.Cryptopia, 1, 1); public static CoinPair XVG_TRX_Cryptopia = new CoinPair(Coin.XVG, Coin.TRX, Exchange.Cryptopia, 1, 1); public static List&lt;CoinPair&gt; binanceCoinPairs = new List&lt;CoinPair&gt;() { TRX_DOGE_Binance, TRX_BCC_Binance, XVG_TRX_Binance }; public static List&lt;CoinPair&gt; cryptopiaCoinPairs = new List&lt;CoinPair&gt;() { TRX_DOGE_Cryptopia TRX_BCC_Cryptopia XVG_TRX_Cryptopia }; public static List&lt;ConPair&gt; allCoinPairs = new List&lt;CoinPair&gt;(binanceCoinPairs.concat(cryptopiaCoinPairs)); } But yeah, a database or reading from a configuration file on startup would be a much better method than hardcoding everything. Also, you should probably use an Exchange struct or class in addition to your CoinPair class. I also question the value of using enums in this case; enums are generally most useful when you have different code paths for different values of the enum. It might be better to use raw strings instead. Then you would have things that look more like: public static class CoinPairs { //Binance coin pairs public static Enchange Binance = new Exchange( nameof(Binance), new List&lt;CoinPair&gt;() { new CoinPair("TRX", "DOGE", 1, 1), new CoinPair("TRX", "BCC", 1, 1), new CoinPair("XVG", "TRX", 1, 1) } ); //Cryptopia coin pairs public static Enchange Cryptopia = new Exchange( nameof(Cryptopia), new List&lt;CoinPair&gt;() { new CoinPair("TRX", "DOGE", 1, 1), new CoinPair("TRX", "BCC", 1, 1), new CoinPair("XVG", "TRX", 1, 1) } ); public static List&lt;ConPair&gt; allCoinPairs = new List&lt;CoinPair&gt;(Binance.CoinPairs.concat(Cryptopia.CoinPairs)); } Going deeper, you may want to change CoinPair to encapsulate just the mapping from one coin to another and create a separate ExchangeRate class. Then the CoinPairs list in Exchange could become an ExchangeRateLookup Dictionary&lt;CoinPair, ExchangeRate&gt;. Depending on what sorts of lookups you want to optimize for, it may even be better to have the ExchangeRateLookup be a Dictionary&lt;Coin, Dictionary&lt;Coin, ExchangeRate&gt;&gt; and abandon the CoinPair class entirely.
Dear GOD ALL THE STUFF THAT'S WRONG! Also could still be C++
I didn't. Post updated!
Wow, you're really using LinqToSql.
Sitecore sucks but have amazing salespeople. 
It packages the CoreCLR, and creates a native bootstrapper that hosts the CoreCLR and loads the compiled (portable) MSIL DLL.
What's your budget? Doesn't need to be specific but are we talking 10s of 1000s or 100s of 1000s. Lowe budget I'd got with DotNetNuke and smith cart all the way. You can get the source and then modify as desired. At my last job we probably ran a half a dozen CMS/Ecommerce sites with it, and while it's not perfect, for out of the box plug and play crap, it's pretty powerful. If you've got a huge budget then you could look into the more expensive players. 
If feel the need for async constructors, you might want to consider a an async factory method.
Use a database man. Save yourself a tonne of hassle.
For the love of god, whatever you do, do not invest in Sitefinity. It is a heaping pile of garbage riddled with bugs and gotchas all over the place. Things are so unnecessarily complicated. I’ve spent the past 2 years as the technical owner of Sitefinity at my client and I wish I had recommended to just throw it away when I came out.
Yeah Orchard is definitely a more developer oriented design compared to some other options. I guess it depends what your needs are. It does have some workflow capabilities to do visual programming, but in general if you need something custom you have to do some fairly advanced development.
Linq To Sql has been dead for nearly a decade, so it's a bit of a weird choice to adopt at this point. EF has all but completely displaced it. Plausible alternatives are nHibernate or micro-orms like dapper.
Working with Umbraco (partner) and it's a good cms (only tested ver 6 and later) One good thing is that it's separating the views/design and the models in a good way so you can have any design you like. You also get good structure of the data/fields, as long as you don't get into the new grids. Grids have potentials but I feel like you put too much design and must know to the editor, or have to do a lot of work. I've used sitefinity long ago, and the problem I was feeling was that all front end generated with sitefinity classes, so when you designed you either have to rework all user controls, write your own or adopt your design to the generated code. But as I said, long time ago and that might have changed Love Umbraco, give it a chance
This is clearly the XY problem and no one seems to be answering it. I assume this is to run it on Linux? In which case you don't need to, just use .NET Core or Mono.
Do not go with Sitecore, it is development hell. Consider looking into Kentico, they are moving towards headless CMS. They currently support web forms or MVC.
That's what we currently do. Plenty of patterns available to get around it, but I'd prefer a simple one line native solution over more abstractions. Just a simple "var myObject = await new MyClass()".
.RemoveRange maybe? 
You can use GroupBy: https://stackoverflow.com/questions/7325278/group-by-in-linq Group the list by the result property.
You should seriously move to EF. By and large, most things will remain the same for you. But the tooling has come a long way.
**Kre!**
Well - in all honesty, especially in a web context where you aren’t holding onto a single datacontext for a long time and relying on its change-tracking, etc... a SaveCustomer(customer) method in the DAL is just cleaner and better. You can still leverage the datacontext and all the various “related objects” goodness underneath, easy queries, one-line saves of the entire graph, etc without spreading details of the data implementation all through your project. As for the other part of your problem - Entity Framework is designed to work with POCO objects for models and no dependencies, which makes those particular architectural concerns less of a worry. 
As far as I can tell, there is not at-rest saving of these settings - they can be set at runtime, but not saved.
&gt; a native bootstrapper that hosts the CoreCLR For extra clarity -- this is an ELF executable file.
Look at some of the examples included with [AdaptiveClient](https://github.com/leaderanalytics/adaptiveclient)
What about two statements? var trueList = sourceList.Where(x =&gt; something); var falseList = sourceList.Where(x =&gt; !something); With C#7 (and valuetuple) you can use tuple deconstructor: public static (List&lt;T&gt;, List&lt;T&gt;) Split&lt;T&gt;(this List&lt;T&gt; source, Func&lt;T, bool&gt; predicate) { var trueList = source.Where(predicate).ToList(); var falseList = source.Where(x =&gt; !predicate(x)).ToList(); return (trueList, falseList); } Usage: var (trueList, falseList) = sourceList.Split(x =&gt; something);
Check Linq2Db, it is faster and easier to implement than EF (or worse, Linq to Sql, really old).
The main con is: Umbraco Courier sucks hard. As a developer that made custom code for it for 5 years, I strongly advise to look at orchard at least.
Thanks for the heads up - I've heard of Linq2Db but I have not had an opportunity to really test it in a real application. Have you used it at in an app where its limitations are tested?
Why? Just because a Type has a contract that it CAN do something doesnt imply that it has to have its own unique implementation. This could partially be implemented with extension method already. Just didn't allow for overideability, which means this is an improvement.
People tend to way over-engineer this stuff. Lots of code in the controller? Who cares, it doesn't matter. At all. Code has to live somewhere. Just put it where it needs to do work. Don't worry about all the fancy design patterns -- they rarely actually help and only serve to confuse people and start religious style wars. As proof -- I built from the ground up a system in asp.net mvc that uses linqtosql, does over $1,000,000 in hardware sales a month (we are at around $60,000,000 in sales, now), integrates with several other 3rd party software packages, list goes on and on. It's lightning fast, easy to understand, all the moving parts are in essentially one place (the controller, for the most part.) You just really don't need to get fancy at all -- and any ORM will do, pretty much. 
To be completely honest -- just build the whole thing yourselves, from scratch using something like asp.net mvc and an ORM for underlying framework. As someone who has tried going the "lets customize an existing CMS or e-commerce package" for many years, with many clients, trust me. The time you spend building it from scratch for your *exact* needs will be far less trying trying to fit a square peg in a round hole.
I've used it and think it is pretty underrated. It doesn't handle migrations and it doesn't handle change tracking so the EF comparison isn't quite apt in my opinion. I'd say it is more like a type safe Dapper written in LINQ. I believe the performance is pretty comparable to Dapper too. There are really only two limitations that spring to mind. First, it is not meant to do everything EF does. Not a big deal in my mind but it could be confusing if the user didn't realize its purpose. The second limitation is that you have to be cognizant of where queries will be executed in some cases. A different sequence of operators can be the difference between returning a few fields from your tables or returning the entire data set and selecting in code. They make it pretty clear but it does take a bit of diligence. 
Upvote for Umbraco. I manage about 5 sites at my job all running on Umbraco. It's pretty easy to set up, I'd actually suggest you go with Umbraco Cloud because they handle the upgrades themselves which can be a pain in the ass process (merging config files makes me want to rip my eyes out). There are tons of 3rd party packages for it, most are pretty simple to use. The possibilities of what you can do with an Umbraco site are pretty much endless. The learning curve is not steep at all (I barely knew any C# and had never heard of Umbraco when I started my job and I converted a static HTML site to a fully functional site on Umbraco in about a week.
You probably need to access the camera through DirectShow. Don't know if there are any good C# bindings around.
Take a look at NopCommerce
Or you could shut your mouth and either do what your paid for or quit. Paying someone to write all your content as a raw web page is not remotely practical. Companies do not buy products to make you happy. They do not run to make you happy. They pay you so they can run.
&gt; There's a library by newtonsoft that turns c# classes into json schema You should mention that this library is not free.
There's really no need to iterate the source list twice..
This is what T4 templates are used for but they can be a bit of a nightmare. They basically allow you to run C# code to generate files. You would have to use some pretty heavy reflection but it's totally doable. There used to be a program called scripty that did it better but don't know if it is still around.
I love linq as much as the next guy but this would be so easy to just do in a loop. Foreach(...) { if(predicate) add to trueList else add to falseList } then just make it an extension method that returns a tuple and you can use it like any other linq method.
You should just loop the list IMHO. Your iterating it twice to save writing a very simple loop.
Sitefinity now has frontend resource packages so you don't have to use their built in Sitefinity classes. It comes with bootstrap out of box and when using the package it will utilize bootstrap css classes on the grid layout.
Typewriter is pretty good https://frhagn.github.io/Typewriter/index.html
&gt; Do you have resharper installed? Uninstall it. Do you have other plugins installed? remove suspicious ones until problem is fixed. Without resharper VS runs so well for me. Solutions are open and usable within seconds. It's around a minute (or more) with Resharper. I'm ditching resharper as a result.
GroupBy would split your list based on the given key or keys.
It’s hard to say fully without knowing what those 10 lines are and where they go, but look into `#if` statements with a compile time flag to decide if those lines are included or not. 
I convinced work to move to NSubstitute and Autofixture for our new project. Holy shit is Autofixture amazing! I've rewritten all tests in it now and cut out literally 100s of lines of arrange code. Plus with NSubstitute's Received and Shouldly the asserts are now so simple and beautiful. Just wanted to say thanks for telling me about them :)
Just off the top of my head but have a look at preprocessor directives to control the flow of the code based on its build config. It’s like making your own #if DEBUG statements but you could have two projects where one includes a directive and another doesn’t to make the same project behave differently depending on the build type. E.g #if BuildType_Java Library.BuiltForJava = true; #endif
Can two projects in a single solution work off the same "physical" files? i.e. so if I make a change in "foo.src" both projects receive it. Can it work that way? If so, I'll have to look into compile #if flags because that seems like the best answer.
The way I would do it is do a for loop compare each character when I find a difference store it in a start variable then the next time I find one the same work out the length if its the smallest length found save it in a result variable. Start with result = int.Max so the first one is always smaller and start as -1 that way you know if you already have a start. Reset them start -1 once you find an end aswell. Hope that makes sense. If you need I can try and knock up an example next time I'm at my pc.
Msbuild and t4 templates are your friend here. I generate 3 dynamic code filed on build. All specific to the target deployment using them
[removed]
&gt; Collection initializers are your friend. Didn't even know about this, seems very usefull in this case. &gt; But yeah, a database or reading from a configuration file on startup would be a much better method than &gt; hardcoding everything. Since you and 2 others recommened to use a database, it seems more handy. I've tried setting up a database but it seems to much of a hassle right now. Though I"m going to take some time real soon and will replace it with a db. &gt; enums are generally most useful when you have different code paths for different values of the enum. I don't really understand what you're trying to tell. What do you mean by different code paths? Like alot of if/else statements? Thanks for the help, appreciate it.
The 10 lines of code just cause the program to barf out a hundred lines of internally calculated statistics data 20 times a second instead of a couple times a minute at a human-readable pace. It's a terrible kludge but there's no better workaround since I don't have control over the way the java binary works.
A database seems very usefull, didn't think of that, you and two others recommended it. For now I'll stick to an easier 'fix'. But soon I'll take some time to learn more about setting up a database. Thanks for the help. 
&gt;Can two projects in a single solution work off the same "physical" files? you, you can make links to physical files to do that, "add file as link" I think is the command/term you are looking for. #if flags is the best way to do this though 
Going to expound on this a bit. After adding in the #if code then you can write a powershell script that calls the devenv.exe com wrapper and I'm 90% certain you can pass flags telling it degug/release (can't look up right now) in the cli. You should then be able to set this script up as a build script in visual studio and the entire process is automated on build.
Two projects can certainly use the same physical files. You can add them as a link into each project. Or - and I suggest this is the better way - you could put your shared logic into a third project which gets built as a Library (ie a .dll). You then reference this project from your executable projects. If you don't want to distribute your application as an exe + dll, I'm fairly sure there's a way to configure the build to bundle it all into a single exe but I haven't looked into that for a long time. 
If you go to project settings-&gt;publish you can create a ClickOnce installer. Depending on the complexity of your app this can work really well and allows users to install your application by clicking a link (edge) or downloading a small setup application (other browsers) which will then download and install the .NET framework and your application. It is easy to get started with and it actually supports a great number of scenarios For example you can declare file groups so that users only download the parts of the app they need and can automatically download other parts when needed. The apps also get installed on a per user / per machine basis so you can avoid needing administrator access and different users on a single system can use different versions of your app. It also supports automatic upgrades (and downgrades in case of issues). Many have complained about it before, but if you get to know it and if you sign your assemblies (which you should) it actually works quite well these days. If you want to have even more control, at the cost of some complexity, you can look at https://github.com/Squirrel/Squirrel.Windows (Which is what the Slack desktop client for Windows is using) If you just want to copy the app to your users (and let them handle .net installation) you can take a look at `Fody.Costura` (available as a NuGet package). Costura is a plugin for Fody which, when added to your project using NuGet, will automatically embed all dependencies into your main assembly (exe file). That means that if you app references 10 external assemblies (dll files) they will be embedded into your exe file and all you have to do is send that single exe file (probably archived) to your customer. (Note that they still need the .NET framework that you target, but if you target 4.5 or 4.6, an up to date Windows 8/10 should already have it) If you do not need a UI, you can look at .NET core and build a standalone app that does not require any framework (the core framework will be embedded in the app) With .NET Core 3 you will be able to do that with a WPF app ass well (but that is for 2019) Side note: if you use .NET to build MacOS app, your entire app can be bundled with the Mono framework so that your user just needs a single pkg file and does not require an installed version of Mono either. In summary: - Look at ClickOnce - Look at Squirrel - Consider targeting .NET core (if you do not need a UI) 
Why wouldn't you just have 3 projects as part of the same solution. Put your common code in a project with an output type of dll and the different code in two projects with an output type of exe?
Why don't you pass some argument to the exe and change behavior as intended ?
Why not use the same artifact but use an input variable to define the behaviour? Sounds too much of a hassle for something that simple
You can use project configurations to change the list of defines. Then you wouldn’t need a separate project that has to be kept in sync; you could just choose one configuration, build, choose the next, build. You could even script the build (don’t know if you could integrate that into VS in a nice way though, it might have to be a script sitting somewhere).
This java application, it sounds like it can run your application, so can it pass a parameter to your application as well? If so you can pass a flag to your application that runs that 10 lines instead of what it's supposed to run. How is your open source application organized? You may also be able to just break it into libraries with two console/Gui/whatever applications that implement these libraries. Hard to give exact advice without seeing the code though. Can you link your code since it's open source?
You've got three options: either generate two otherwise identical exes with compiler flags to produce the differences, move the shared logic into a Class Library with two Console applications handling your two different use cases (I guess the Class Library is strictly not necessary as you can reference exes like you do dlls, but you did ask for best practice), or generate one exe with a shim (like a batch file, powershell script or whatever that converts the command line arguments from the java application into whatever your console app expects) to be called by java. I'd be most tempted by a shim myself and I'd probably knock up a quick batch file to do it, but what methods are open to you depends on what environment this is all going to run in and how the java application runs this program.
Yes! The java program sends a unique (enough) command line argument to the .exe so I can jerryrig something up easily! Thank you for this creative solution, it's the first thing I'm going to implement tonight. I'm also going to work on getting the #if flags working as a second step, because the group consensus has rapidly coalesced around that as the proper best practice for this kind of use case.
Thanks I'm going to try it when I have a chance.
Just an #if def will do the job.
I, too, have this question and came to the comments hoping it was explained. 
&gt; Since you and 2 others recommened to use a database, it seems more handy. I've tried setting up a database but it seems to much of a hassle right now. Though I"m going to take some time real soon and will replace it with a db. Databases can be extremely useful, but they can also be overkill for some situations. If you're not going to be changing what coins and coin pairs you're looking at while the program is running, it can be just as effective to read them at application start from a configuration text file that you keep in source control rather than a database. That said, database skills are very valuable because of the power and flexibility of modern databases, so it's definitely a good muscle to flex. I don't really understand what you're trying to tell. What do you mean by different code paths? Like alot of if/else statements? Yes, or switch statements. If different code runs for different coins, use an enum. If the same code runs and you're just using the enum to do lookups in a dictionary or to have a property that tells you what coin the current structure is for, it might as well be a string (though enums will have a slight performance advantage for lookups). Enums help you do fancy things, but if you don't take advantage of that, they're just a list of possible values for a variable that you hardcode. Avoid hardcoding when you don't get much advantage out of it.
&gt; Databases can be extremely useful, but they can also be overkill for some situations. That's what I was thinking about for this specific program, but as you said it's a valuable skill to learn. I'm going to look at using a config text file to store my values. And the enum-part is clear now aswell. Thanks for your time, appreciate it!
...aaaaand that's the beauty of conditional compilation. Java is hating life right now.
I’m a freelance C# dev and I’ve came across a lot of .Net CMS. In my honest opinion they are all night mares. The code bloat is insane, and all of them make it very challenging to implement good design and SEO. I do agree with others that Umbraco is the least worst CMS, but if I were you I would check out a headless CMS. With a headless CMS have full control over everything. You do all of the structure yourself and call an API for the content that could change. I’d be happy to give you some advice, shoot me a PM. 
Build one exe that accepts command-line switch. It is painfully obvious.
It is true. It is deprecated and entity framework gets all the love these days. As a note do make sure you use entity framework code first (even if it is database first.. the name is a misnomer here) not the EDMX data model bullshit. 
&gt; People tend to way over-engineer this stuff. Lots of code in the controller? Who cares, it doesn't matter. At all. Code has to live somewhere. That's such a poor attitude. It most certainly does not live in the controller. Why? Keeping it separate helps maintain SOLID and just a clear separation of concerns and allows easier testing. Not only that but the controller is an MVC specific implementation detail. If you keep it separate and have your controllers only orchestrate and delegate calls then you can consume those same claysses elsewhere if need be. I've recently worked on a project where people had this attitude and honestly it's difficult to tell what's going on sometimes. A single block of code might be trying to do multiple things and it's difficult to work out what is what.
In general, always consider the `[Conditional("DEBUG_OR_OTHER_FLAG")]` attribute instead of `#IF` when using C#. // some code DumpExtraInfo(); // more code [Conditional("DIAGNOSTIC")] private void DumpExtraInfo() { // dump a bunch of diagnostic info } It turns a function into a no-op unless the flag is set. The big advantage is that the compiler will always check the code in your conditional function, even if it's going to turn it into a no-op. If you use `#IF`, then the compiler ignores that code completely unless the flag is set, which can lead to code that doesn't compile properly when the flag is set because you refactored something somewhere else without the flag being turned on. The disadvantage is that it still has to calculate the parameters to the function. So if you had something like `DumpExtraInfo(GetExtremelyLargeAmountsOfData())`, then it would still pay the price for `GetExtremelyLargeAmountsOfData()`
Well, Microsoft is weirdly cagey about these things sometimes, it keeps all of us second-guessing. But the big hint is in the documentation. &gt; LINQ to SQL is a component of .NET Framework *version* **3.5** The whole hoopla became an issue a decade ago, when Microsoft started making moves that L2S was going to be supported but not improved, with all of the attention going to EF. https://www.infoq.com/news/2008/11/DLINQ-Future &gt; Back in July we reported that LINQ to SQL was transferred to the SQL Data Programmability team. This event raised a lot of concern in the developer community, who worried that work on LINQ to SQL would halt in favor of ADO.NET Entity Framework. A recent announcement by Tim Mallalieu, Program Manager of both LINQ to SQL and Entity Framework, has exacerbated those concerns. &gt; &gt; We’re making significant investments in the Entity Framework such that as of .NET 4.0 the Entity Framework will be our recommended data access solution for LINQ to relational scenarios. We are listening to customers regarding LINQ to SQL and will continue to evolve the product based on feedback we receive from the community as well. &gt; If you read this literally, it merely says that Entity Framework will get more development resources than LINQ to SQL. The problem is Microsoft has a long history of deprecating data access technology without outright saying it is no longer supported. The whole article includes some fun background on the tech. &gt; Before we get too far into the future of LINQ to SQL, let's take a moment to consider its past. In The Origin of LINQ to SQL, Matt Warren describes his project as something that "was never even supposed to exist." Essentially, it was just supposed to be stand-in to help them develop LINQ until the real ORM was ready. But that project, along with the larger WinFS project, seems to have gone down the rabbit hole never to return. Needing something, the decision was made to start the process of making LINQ to SQL a shippable product. And has a follow up statement from the (then) manager of both programs. &gt; We will continue make some investments in LINQ to SQL based on customer feedback. This post was about making our intentions for future innovation clear and to call out the fact that as of .NET 4.0, LINQ to Entities will be the recommended data access solution for LINQ to relational scenarios. Now they did continue to support the product and kept it ticking over - for people who were using it already, mostly. That's how Microsoft rolls. But at this point you're really not meant to be using it. This more akin to software archeology now :)
So wait I’m a bit confused. You have your API running locally and your database currently on Azure and what you’re trying to do is get your API to communicate with your database on Azure? So for the login example you’re essentially trying to send the username and password(hashed hopefully) to the DB to compare the values? 
My ignorance is very much showing right now. So, I found this tutorial where this guy sets up a local database on his computer. Then he created a general API. If it helps: https://www.youtube.com/watch?v=nFkwRuTG8eM&amp;list=PLV916idiqLvcKS1JY3S3jHWx9ELGJ1cJB&amp;index=4 --- sets up the local database https://www.youtube.com/watch?v=bXnEaHtPN48&amp;index=5&amp;list=PLV916idiqLvcKS1JY3S3jHWx9ELGJ1cJB ---- creates the REST api I followed the latter, but I didn't do the one before then because I wasn't sure it was relevant. My goal is to do what you said. Compare the values. From there, I think I will be able to understand enough so that if someone wants to "post" (register) I can get a communication from the app to the server without having to beg Reddit or Stack Overflow for help. I am not sure what hashed means, but I did use something called json.deserialize... is that the same thing (obviously we care about privacy)?
You are declaring a new local instance of `solutionLength` within `Main`. This means that when you're setting `solutionLength` within the context of `Main`, you are only setting the local variable and not the class-level variable, which always remains at 0.
All good. I assume you have access to the Azure account? If so you'll have to go into it and navigate to your database instance and get the connection string. They should have connection strings already created that you can use. Are you using a SQL Database? I guess it's hard to say specifically what you'll need since I don't know too in-depth about your application but I would look into using SqlConnection class: https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlconnection(v=vs.110).aspx . You can use that and use the connection string to connect and read/send values to your DB. Yeah i would definitely be looking into using a secure hashing algorithm for your passwords. Store the hashed value in the database and salt it as well. The can just compare the user input after you hash and the current hashed value in the database to grant access. Would definitely read up on salting and hashing. Here's the Wiki links about them but there's also a bunch of specific C# stuff you can look up that should help. SALT: https://en.wikipedia.org/wiki/Salt_(cryptography) HASHING: https://en.wikipedia.org/wiki/Hash_function . As far as JSON Deserialize: JSON is just a data encoding format that enables fast exchange of data. So deserializing that is just decoding it so you can use it more easily in your application. I hope this helps a little. Also if anyone notices something wrong I mentioned feel free to add on and correct it! 
java sucks
Linq2DB is indeed very fast. One of the more bizarre gripes I have is the way it can wind up (not) parameterize primitives. If I do: db.Product.Where(p=&gt;p.ProductId == 25).ToList(); I'll wind up getting select &lt;columns&gt; from product where ProductId=25; If you do it as: var productId = 25; db.Product.Where(p=&gt;p.ProductId == productId).ToList(); You'll get a parameterized query. The library *does* handle escaping for strings when you do this, but it could still wind up alarming a zealous DBA.
Thanks, I really appreciate the help! I'll see what I can do with the SQL class
No problem! Good luck! 
 &gt;If you don't want to distribute your application as an exe + dll, I'm fairly sure there's a way to configure the build to bundle it all into a single exe [Fody Weavers](https://github.com/Fody/Fody)
It's what the exception says. You're trying to get a property of an object, but you're looking at an array ( denoted by `[...]` in the JSON) instead of a single object.
Oh, I didn't even think of that! With a little fiddling I got it working, had to do [`jsonData.weather`](https://jsonData.weather)`[0].id` \(as supposed to [`jsonData.weather.id`](https://jsonData.weather.id)\). Any idea why it is an array of it's own, though? \(The array only contains the weather data hence \[0\] in the above method\). The other info I accessed \(humidity, etc.\) are not in an array.
Well spotted \- thanks a lot! :\)
I'm not familiar with this API, but I assume there can be multiple weather statuses for a single forecast, e.g. rain plus fog.
Looks like I tried this a couple years back and got bored of it... but coming back to it today, wouldn't this algorithm work? I have to leave soon, so I don't have time to test this approach, so this is entirely a shot in the dark. 1. Buffer the first sequence 2. Scan the second sequence until you see the first mismatch. 3. Start buffering the second sequence starting from the first mismatch. 4. Once you buffer the rest of the second sequence to the end, the result is the length of your buffered second sequence minus however many characters match from the end.
Java?? More like JavUGH. Get it?!?! ... I'll show myself out.
Need a bit more information. If you are using Winforms text boxes then there is a field in the design panel named text which lets you enter a default value. 
In the method you use to make the DataGridView (or a DataTable you bind to the dgv), I'd put a thing inside the loop that makes your rows like this: // (some for loop to go through the data that needs to be put into the datagridview contains this bit): if (listBox1.SelectedIndex != -1) { if (myValueForColumn3.ToString().ToLower() != listBox1.SelectedItem.ToString().ToLower()) { // Skip this row, don't put it in the table. continue; } } // Row gets added. // Loop back up to the next potential item until we run out. // Somewhere after this loop the datatable is bound to the datagridview and you can only see the items that passed in the check above. Then in your listbox, you add an event for SelectedIndexChanged on it, and the event firing calls the method that draws the datagridview over again, which contains that check on column 3. If your form starts with nothing selected in the listbox, then the datagridview shows everything. Then as soon as something in the listbox is selected, the datagridview gets re-made based on what got selected. You may or may not need to try to control whether that fires or not with a flag of some kind, depending on what else you're doing in all this.
Just an FYI, don’t host your API on the same server as your database. Makes a hacker/investor way more curious...
It is a property, and can be used in code behind: textBox.Text = "0";
He's hosting it in Azure, a completely common thing to do.
If someone gains access to the server you’re hosting your API on, they gain access to your database brother. Separate the two and open a port for communication, you know, like a penetration testing team would suggest. 
Thanks for that! Do you have any advice on my original post? Would you add anything to the suggestion of the previous poster? He suggests the SQL Connection class and the tutorial told me to use Net.Http.. But I really don't know which is better. Does the SQL Connection class automatically create a token and have functions that you can use for posting and getting?
Neat, thanks. And you've reminded me that we were actually using SmartAssembly to achieve that functionality. It wasn't actually a feature built into VS. It's been awhile since I've distributed a desktop app. 
The original post shows your current understanding of web APIs and networking, so I would not change it. Your program should be the one creating the token for your web API (if it requires one, and it should, or some type of validation: not your SQL server) The system.data class does not require tokenized validation. Does that answer your question ?
Okay, yeah, I think it does. Thanks!
Have you tried setting the value of the "Text" property in the xaml? &lt;Listbox Text="0" /&gt;
Java is bad, but Eclipse is worse.
To be fair, I think much of the talk about best practices here was framed by your initial stated requirement to build separate executables. This could be necessary if you don't want the excluded logic to appear in the output binaries at all. But if you just need the ability to make the application behave differently, then a command-line parameter is perfectly appropriate. 
Good. "Taking issue" sometimes helps to remember things ;)
in natural language processing there is an algorithm used to solve minimum edit distances. It might be what your looking for. Heres a link to the lecture and the explanation of the algorithm. https://web.stanford.edu/class/cs124/lec/med.pdf
You learn c# basics by googling, you actually learn c# by reading books, you actually become good at c# after about 3 years of experience, and you actually know exactly what your doing after about 5-6 years of experience
&gt;hat helped me out when I was first starting to learning programming were the For Dummies books. I found them really useful. I would suggest buying them used if you can find them, as a new book can be very cos the reason i suggested new book is because im not sure if there would be outdated infomation or not as technology is contently changing 
im assuming this obviously applys to all programming languages as well not just C#
This seems like a better approach. Another one might be a configuration in an app.conig file
Try this too :) Console.WriteLine("Status: " + ((jsonData.weather.Count() &gt; 1) ? string.Join(", ", jsonData.weather) : jsonData.weather[0].main);
I’m really confused by some of the people responding here, while they are right that you don’t want to host an api on the same server as your database, that’s not what he’s doing here. You can easily host a database and your api in Azure without that risk. You would even include them in the same resource group... one would be a sql server set up in azure and then your api would be an app service in azure.
Do you just want it automated or are you concerned about doubling the build times?
Oracle should resurrect J# to make Java at least half decent, why would you use it otherwise?
Hire someone who has already done their 10,000 hours, and soon. There is currently nothing for your investors to invest in. This is not something you're going to learn from a single response on Reddit.
Yes I would say it does, I know a few and c# is very forgiving. It’s a great language to learn and as the other person says, start out by googling everything, if you need to read it over and over then that’s fine! Once you know the basics, books are the step forward, and always continue to make whatever you can in c# to keep your knowledge fresh. Google “project ideas in c#” and give some of them a go etc etc, it will take a long time; people have 10+ years experience and still find themselves googling things that’s they have forgot lol, just keep at it and you will do great!
Thank you very much :)
Cheers material This helped alot
Thank you very much :)
What have you tried?
I don't thinn the virus removes anythig just inserts. But that doesnt work here...
This is the the answer. Great pseudo
"...A single, consecutive piece of DNA might also have been removed from the same position in the sequence as DNA was inserted..."
The core concepts are the same. The newer versions of the language just add new features. But if you want the latest it's on C# 7 currently.
I personally don't learn well from books. I learn by doing. I would follow a beginner tutorial all the way through. There are so many out there, try and find one that matches your learning style, for me it's one that has lots of examples rather than just explaining it. Once you know the core concepts (variables, if, loops etc) the next thing to do is choose a project. It can be anything you want. Break it down into logical steps. This is a huge part of programming. Once it's broken down figure out how to do each step, learn how to Google effectively to find what you need. I spend at least 60 percent of my time googling how to do things. So say you want to create an address book. Step 1 you need a class to hold contact info. Then you need to be able to save and load a list of these to file. Then you need to provide a way for the user to enter details of contacts and add to the list. Then the user needs to be able to add, edit and delete them. Each step is fairly simple and when linked together give you a full application.
You är correct :)
I personally don't learn well from books. I learn by doing. I would follow a beginner tutorial all the way through. There are so many out there, try and find one that matches your learning style, for me it's one that has lots of examples rather than just explaining it. Once you know the core concepts (variables, if, loops etc) the next thing to do is choose a project. It can be anything you want. Break it down into logical steps. This is a huge part of programming. Once it's broken down figure out how to do each step, learn how to Google effectively to find what you need. I spend at least 60 percent of my time googling how to do things. So say you want to create an address book. Step 1 you need a class to hold contact info. Then you need to be able to save and load a list of these to file. Then you need to provide a way for the user to enter details of contacts and add to the list. Then the user needs to be able to add, edit and delete them. Each step is fairly simple and when linked together give you a full application.
Just a thought wouldn't it be easier to use a string. You can access a single character by doing string[i] so you could just do a for loop and do if(input[i] == answer[i]) black++ else if (answer.Contains(input[i])) white++ could simplify the while thing.
It's great. I also have it set to run on save. So when I save it formats and organises my code.
In comparison to System.Random: * Faster. All methods are faster to varying degrees. NextBytes() in particular is about 50 times faster. * NextDouble() generates values in the interval [0,1) with 53 bits of randomness. System.Random uses only 32 bits. * NextDouble() is unbiased/uniform. There is some degree of bias in System.Random.NextDouble(), e.g. see [Random deviates from standard algortihm](https://github.com/dotnet/corefx/issues/23298) Feedback welcome.
&gt; But there will be a mysterious ~8 pixel gap on the left and right. That is the resize border of the window, which is invisible save for the one pixel border in newer versions of Windows. In Windows 7 (non-aero/old themes) and lower you could even change the window/resize border width, which would change the mysterious 8 pixels to something else. There is an api to retrieve the border width I think.
You should read the error. They have super valuable information in them. Not trying to be a smartass even, reading and interpreting errors is a vital skill in development. And if anyone is going to help you debug they will also want that error information.
Yea I’ve read it I’m just really unsure what I’m doing. I’m just gonna move onto the next one and ask my teacher when I see them. 
What is the error? I can see if I can guide you into the right direction?
Honestly it really just is resharper. How do you deal with running tests though? The resharper test runner is actually pretty good! (Maybe I can disable everything else except this actually).
I will defer to the master on this :) http://csharpindepth.com/Articles/Chapter2/Events.aspx
Removed: Rule 4.
EXACTLY. Very well put.
Hello mechanic - this car was being maintained by a qualified mechanic, but he left. In the meantime, we've let the accountant strip it down and make some modifications. It's all yours... We need to be race ready in a week. Whatever the company does, it should note the commit so that the new guy can revert back to the untouched version. 
All those lists could be IEnumerables to be more flexible and you can remove the ToList()
Record a macro of you setting them using autohotkey and run it when you want to use them will be easy and fast to do. 
I did something very similar [over here](https://github.com/airbreather/AirBreather.Common/tree/master/Source/AirBreather.Common/AirBreather.Common/Random). One idea I'd like to suggest is that a method like `NextBytes()` really ought to accept `Span&lt;byte&gt;` these days. You can still do all the same pointer stuff, just `fixed (byte* pBuffer = buffer)` would turn into `fixed (byte* pBuffer = &amp;MemoryMarshal.GetReference(span))`
The browser is executing Javascript when the page load and the javascript is probably injecting the mp4 link dynamically. I haven't checked but I would bet that a web service is returning the link to the page. If you open up your dev tools in your faveorite browser (f12) you can view the network activity. If you can find the web service call you can probably just hit that url and extract the URL from that.
I certainly have - the successful ones had developers doing development and economists doing finance. OP is struggling to get basic user registration working. OP should have spend this time hiring a full stack developer.
Your colleague has a good approach, providing that you use AutoMapper or similar... Personally, for smaller projects, I generally omit this layer... As you state, it can be a pain to maintain.
Customers want LOB applications to either 1) still work on their plentiful Windows 7 machines, or 2) to work on multiple platforms, especially mobile ones. This achieves neither. You could, of course, have a cross-platform base library and then a UWP GUI (as well as additional ones for other platforms), but I'd guess you'll be hard-pressed to find the budget for that.
You can implement MVVM, and use Xamarin Forms for mobile apps (including UWP) and a WPF application for W7 desktops.
Yes, but if I'm already writing a WPF application for Windows 7 anyway, why bother with UWP?
if i focus on c# would i be able to get a job i havent looked to see how much c# is in demand or not because i know the 2 most famous languages are C\+\+ and java 
because users of tablets? Also, with MVVM you can write the presentation logic once and use it on several platforms. 
Can you really write once? I'm not a desktop app dev, but this seems to be a pipe dream that never actually comes true.
Yes, don't expect you to rework the images automatically! No, I meant that I HAVE to use Inkscape to convert to XAML and the export isn't alway something clean. The majority if stuff I just want to d/l a SVG and add it as a resource.
Yes, obviously you need to write your presentation logic using code that can be used on all platforms (for example, using an multiplatform orm ). Just create your ViewModels (the presentation logic) inside portable class libraries.
Xamarin Forms supports a lot of platforms, including UWP and Mac. 
Yeh I've read an intro on Span&lt;T&gt; and it does look like a good fit. The part I'm not sure about is - I'm currently targeting dotnet standard 2.0, so will I need to wait for Span&lt;T&gt; support in a new standard, or can I do this now?
&gt; I'm currently targeting dotnet standard 2.0, so will I need to wait for Span&lt;T&gt; support in a new standard, or can I do this now? You can add a dependency on the [`System.Memory`](https://www.nuget.org/packages/System.Memory) package to use it now.
Thanks. I will look into it.
[Extension methods](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/extension-methods).
Yes I see your point. Some counterpoints and thoughts... System.Random has its own PRNG state and relatively expensive state initialisation routine. Any sub-type can't escape this, i.e. will be layering on additional state, and overriding methods to completely replace the System.Random PRNG. So (A) we lose the fast initialisation/construction, and (B) I see this as not in the spirit of OO and inheritance, i.e. we're not extending existing behaviour and functionality, but completely replacing it. It's like we're using a concrete type as an interface. As an alternative it is possible to use an interface and then a class that sub-classes or contains/wraps System.Random to implement that interface. In fact this is the appraoch of Math.NET and I think this is a reasonable solution. As it happens Xorshori256StarStar.cs has recently been merged into Math.NET, so one option is to adopt the Math.NET interface rather than mine.
Ah! Whew! So it is misleading. The makes sense, because it didn't make sense to me at all. So would you say the first argument in the bracket should be there? I'm asking because, I'm of the impression having that first 'this IEnumerable&lt;TSource&gt; source' is wrong. The bracket should only have 'Func&lt;TSource, bool&gt; predicate&gt;.
The wrapper class to implement `IRandom` is exactly the approach I eschewed. I realized that every single project that uses different random sources ends up creating their own interface, which is pretty painful when trying to get them to work together. However, startup performance was never my explicit goal. My goal is to provide unbiased crypto-based implementations usable in any place that the System.Random class could be used, and these tend to have hefty startup times compared to System.Random anyways. Clearly, the best approach would be for .NET to include an interface. Please at least consider providing a wrapper of your interface in your project to allow interoperability.
I guess by far the most common scenario would be a code base that is based on System.Random, and at some point there's a requirement to swap that out for an alternative (for whatever reason). These days I'm seeing a lot of people using IoC principles and interfaces everywhere, and with no IRandom in the dotnet framework there will inevitably be a proliferation of competing IRandom(s), but I imagine there is still a lot of code out there that will and does use System.Random as **the** abstraction for PRNGs. So I guess a sub-class of System.Random that is a wrapper around an IRandomSource would be useful, albeit a slightly hacky pattern, at least it keeps the new PRNGs completely separate from System.Random. 
It's not wrong. It's simply one way to display the function signature. Misleading? Sure if you don't know how extension functions work, but not wrong.
I think you arrived at the ideal solution, but since it sounds like you're wanting to learn things I figured I'd offer another suggestion for you to keep in your back pocket: You can use application-style assemblies as references in C#. This is basically the same as the suggestions to make two applications that consume a class library with one less assembly. The extra assembly isn't exactly a problem, but this solution reduces clutter caused by your weird Java version. ----- I've made a tiny example program demonstrating this: [AlternateVersionApp](https://github.com/PathogenPlayground/AlternateVersionApp) `MyApp` prints out data slow, `MyAppAlternateVersion` is the "Java" version that prints out quickly. If you look at the references list of `MyAppAlternateVersion`, you can see it [consumes `MyApp` as a project reference](https://github.com/PathogenPlayground/AlternateVersionApp/blob/master/MyAppAlternateVersion/MyAppAlternateVersion.csproj#L47-L50).
What about Dictionary&lt;string, List&lt;string&gt;&gt;
Okay so what did that site give you? Can you post your JSON somewhere too?
Dictionary&lt;string, string[]&gt; perhaps? You can use array index to pick specific elements. Might need to see an example of your json to ensure we know what you're really dealing with. I would not trust that you are going to deserialize in precisely the same order as your serialized file, no matter what type you use. It *probably* will, but I wouldn't trust that this won't break suddenly due to a change in Newtonsoft Json. I would consider it improper to do so, but I suppose if you are getting these files from a third party and have no control then you are just stuck. It still should be communicated that the schema is broken the order of items in an array is itself trying to communicate information so when it breaks at least you warned about it.
I had put in an edit to my reply to you. I think I can just use the class created to be able to get the individual items, by putting them into a list. But what I got from the site was: `public class App {` `public string ProcessName {get; set;}` `public string Key {get; set;}` `public string SysKey {get;set;}` `public string Exec {get; set}` `}` So just deserialize to a list of them, loop over the list, and call the specific properties. I was just being an idiot, as I figured. Thanks for your help.
From what I can see from the Console, a request is made to: https://clips.twitch.tv/api/v2/clips/BigWittyOstrichAsianGlow/status Which returns a JSON body, with multiple sources. Example 1080p: https://clips-media-assets2.twitch.tv/vod-259265858-offset-3978.mp4
Off topic slightly, but why are you mixing VB.Net and C#?
So, can you please explain how it's right? Or please point me to any reading materials. Only asking because I've never really been able to translate the tip intellisense provides. And if this is mis-leading, I'll rather have something else clearer (don't see why it should be). If I could understand it, that will be great. So, any chance you could explain how it's right?
Didn't now about the first one you suggested. But it was definitely the second one I was expecting. Everywhere I look online, it's the second option I see.
Couldn't you just make a class from the properties of the JSON file and then deserialize it to that class?
It doesn't suggest the latter though as it has this in front of the first argument. It could be a bit more beginner friendly, but it's not really misleading or wrong. 
.NET Core does not currently support desktop applications. That support will be coming available when .NET Core 3 is released, which is expected to release sometime in 2019.
So their are no packages available that might add this functionality? i'm just completely screwed for a year? Or maybe my question was misunderstood. I don't want a desktop application, I want a web application, I'm just trying to learn how to update a property without refreshing the web page.
You're looking for single-page applications. Start googling there.
Yes, and I was, I was just being an idiot and didn't think about the fact I could use put that in a list and then loop over that.
Oh, I misread and thought you were converting from desktop app over to a desktop app. You'll want to look into doing a single page application then and go that route. You might be able to convert some of the code over that way (classes and what not).
Still extremely new to this. when I read single page application I assume that means I can only have one page? what if I need multiple pages with this functionality? or am I understand it incorrectly and its a single page application with multiple views?
For the simplest implementation use a little bit of JavaScript and Ajax requests to update the values every 3 seconds (polling). It really depends on your use case how complex it needs to be.
Also depending on how the application works with updating values to the user, you might look into using SignalR as well. I’m not sure if all your users see the same values though or just that user?
i looked into signal R but the users will see different values based on the queue they enter. So some users will see the same data and others will see different data. I wasn't sure i would be able to do this with signal R or not yet. I have 800\+ queues and the data is fed into the application view a messager service.
You want to use asp-route and asp-route-&lt;Parameter Name&gt;. &lt;code&gt; &lt;a asp-route=“CustomerContractRoute” asp-route-id=“@Model.id"&gt; &lt;/code&gt;
Use Dotnetify, you can reuse your MVVM code (I guess you implement MVVM in your app). You can create a SPA using Dotnetify, your ViewModels live in the server (in c#), and your views in the web browser using html and javascript.
dont use an static class with mutable fields, that's really wrong way. Implement the Redux design, it is a much beter way to implement static state.
&gt; You just need to be careful not to fall into the Service Locator anti pattern There is nothing wrong with Service Locator, it depends on how, where and when you use it. People tend to exaggerate about the "it is an anti-pattern". ReactiveUI uses a Service Locator and it works great.
I completely agree. And I think Mark addresses this, but the service locator should stay in your composition root. I mean hell, DI containers are basically service locators by nature.
Here's how I use Splat (a Service Locator): public class SomeClass { private ISomeDependency dependency; public SomeClass(ISomeDependency dependency) { this.dependency = dependency ?? Locator.Current.GetService&lt;ISomeDependency&gt;(); } Also, it is really fast.
So, purely curious here, in what situation would ISomeDependency not be injected into the constructor? Do you create an instance of SomeClass manually somewhere in the application?
Generally I use it for things like ViewModel navigation, thats way I can Inject an object if I need it, or use the default implementation (the one from the SL).
This is a pretty good use case for `dynamic `
Can you show a real-world concrete example of a case where that would be necessary?
Expando Object! I've used it a few times for weird cases like this. https://msdn.microsoft.com/en-us/library/system.dynamic.expandoobject(v=vs.110).aspx
I think I am going to use that also. I ended up just using an class property structure and create a list of that. But Expando Object might have flexibility.
Whoever told you that is delusional or out of touch with reality. Yes many businesses still use C#. 
I'd argue a majority of all businesses are utilizing C# in some fashion. It's supported by Microsoft, fairly easy to learn, and widely applicable.
It depends on your area, but C# is still in use by many, many businesses. Its primary competition is usually Java.
I hope so, that's what I've been paid to do since 2000.
I’m not sure how much has changed, but I didn’t enjoy my experience with EpiServer one bit. This was a few years ago now, so hopefully things have changed. SiteCore has made some pretty good strides in the last four years, but might be overkill for your needs. 
&gt;I was told that this language is obsolete for employers. You would do well to ignore any future advice you receive from the person who told you this.
My wrk still uses C# and I do t think there's any reason to stop. Matter of fact we are converting old apps from other langs to strictly C#
&gt;I don't have any stats on what languages employers are actually using. Here is the \[TIOBE index\]\([https://www.tiobe.com/tiobe\-index/](https://www.tiobe.com/tiobe-index/)\), showing C# steady in 5th place, with about 1/4 of the market share of java, 1/3 of C's market. The top 5 are java, C, C\+\+, Python, C#. TIOBE is not specifically business\-related. \&gt; The TIOBE Programming Community index is an indicator of the popularity of programming languages. The index is updated once a month. The ratings are based on the number of skilled engineers world\-wide, courses and third party vendors. Popular search engines such as Google, Bing, Yahoo!, Wikipedia, Amazon, YouTube and Baidu are used to calculate the ratings. It is important to note that the TIOBE index is not about the *best* programming language or the language in whic*h most lines of co*de have been written. 
Lol, thanks. Redditors are so inaccurate sometimes.
yes. examples: thomson reuters spacex thousands of gamedev studios pokemon go stackoverflow.com 
There's nothing wrong with writing a website in C#. If you use ASP.Net Core, you're not tied to Windows. It will natively run on Mac and Linux as well. 
Back when I messed around with it mono was super buggy and crashed a lot. Lol.. I guess they have come a long way? Because for me wine claimed that all directx9 games worked and I tried some and they didn't lol. But I guess things have come a long way now. 
 public SuspensionHost(ISuspensionDriver driver = null) { driver = driver ?? Locator.Current.GetService&lt;ISuspensionDriver&gt;(); }
There are a lot of good resources in the sidebar
If i understand you right... Here, take a look: `string new_date = dateTextBox.Text;`You always parse data from 'dateTextBox' control. Here is the mistake. You need to parse data from 'sender' parameter. So, make something this kind: `string new_date = (TextBox)sender.Text;` or `string new_date = (sender as TextBox).Text;`
I'll take that as a no.
Not sure why you were downvoted, this is the correct answer.
I personally don’t think USP/modern/metro/whatever looks good in any environment. 
It shows it as an extensions method and includes the word “this” in front of the first parameter. I don’t see how it’s misleading. 
Because it suggests there are two arguments to pass.
It doesn't suggest the bottom one at all. It's not a method defined in the type that o is, no? Then why would you assume that?
Because I'm already passing `o` to the left of the Method, thus making the first argument in the popup redundant and misleading. And VS's own IntelliSense _doesn't_ do this; it correctly _hides_ the `this` argument when the method is called as an instance method, so I don't understand how we're even having this discussion.
C and C# are very different languages, so C# is not a good place to start if learning C is what you're after. C# is much closer to Java than C. If it's merely a naming confusion on your part, and C# is what you're looking to learn, just look for resources in the sidebar here.
Could you show me the difference? The only thing I see is that VS draws its own nonclient area, but this shouldn't affect the sizing.
Refer to my other reply to you. Method definition is just that -- it shows how the method is actually defined.
This will be my reply to both of your replies to both of my replies: It uses a different icon for extension methods vs regular methods. When viewing the tooltip for a method, it will show the full method definition. Depending on how you call the method, it will show the arguments that will get it to compile properly. If you call it via the static class it is define in, you will have to pass the this parameter explicitly, and IntelliSense will show you that. You should see the "this" keyword, realize you don't know what it means, figure out about extension methods, and then this is a non-issue. Calling something misleading because you don't understand it is hardly fair. That's like someone assuming the var keyword works like dynamic without knowing either and calling it misleading because it's actually strongly typed.
Have you looked into Selenium? It might be overkill if you are only looking to solve one single thing, but since you talked about automation it might be worth it down the road.
Has the person who told you this ever held down a job? I've never come across a company that didn't use either C# or Java for its enterprise applications. Of course, you can find startups that use anything, but once they become established, they usually switch to one of these two languages.
&gt; If you call it via the static class it is defined in, you will have to pass the this parameter explicitly, and IntelliSense will show you that. So far, so good. &gt;You should see the "this" keyword, realize you don't know what it means, figure out about extension methods, and then this is a non-issue. If the tooltip already _recognizes_ that it's an extension method (which it clearly does from the icon), it shouldn't make it look as though you need to pass the instance _again_ as an argument. &gt;That's like someone assuming the var keyword works like dynamic without knowing either and calling it misleading because it's actually strongly typed, but called "var" for variable? No it isn't, because treating `var` as weakly typed, while a bad idea, doesn't lead to compile errors.
What market would that be if i may ask?
I've worked on large projects with his mediatr library it works really well, I don't quite sturucture it how he does with every entity related thing in a folder. I find onion architecture has too many levels of abstraction and gets hard to follow on large projects.
Optometry.
I do have some plug-ins installed. But, the only one I'm thinking that could change the intellisense is resharper. But the others might to. Will confirm now.
Of course .NET Core 3 doesn't exist yet, so you're not gonna be modernizing anything today.
It is a single page, but the routing is handled by the framework in the browser, so the user can go to different "pages" without having to reload the page. I would use Vue.js if I were you. It's one of the easiest frameworks, but it definitely offers a lot. I use it for big projects at work.
Thanks. I'll check it out
Love the name
That is a real code, I can use the default implementation of a suspension driver or a mockup for testing.
If I got `ArgumentNullException` with `ParamName` of "source" on the calling line, I would want to be able to hover over the name of the method being called and see a parameter named `source`.
No. CacheCow now would know if the cache gets invalidated by a call in another action or even a non\-HTTP modifiction \(import in the back\-end\). This is essentially the major change in the new CacheCow.Server.
ASP.NET Core's caching is not true HTTP since the data gets cached on the server not client.
var x = "Hello World"; x = 1; You're saying that compiles? And no, it doesn't make it look as though you need to pass the instance again. It clearly mentions the first parameter is a this parameter, so there necessity of it's inclusion depends on how you call it.
Yeah that has changed. I just got to this part of the article after writing my comment.
I agree, a simple change like the one you mentioned is manageable. And I agree, it does seem like overkill. There is a way to easier map DB models -&gt; business entities -&gt; https://github.com/AutoMapper/AutoMapper Again, I think the real benefit is merely to have a well-defined convention around where database related access goes, business logic goes, etc. With a team of multiple developers, this really helps once the project starts to get larger. Each way of doing this has trade-offs and might have more or less overhead than other alternatives. Personally, from my experience as a Senior Dev having worked on large projects for insurance companies, massive financial analytics platforms, and some smaller web systems, they all (pre-existing systems) have suffered from a lack of organization at their core. So, in the end, I'd be willing to give up a smaller detail like "repo vs. no repo" and focus on organizing the structure of the app into clearly defined features that don't bleed into each other (as far as possible). I would fight for this as a non-negotiable. Let me know what you think!
I think you should consider heading back to Xamarin.Forms, Ionic is not native and Xamarin.Forms targets a wider range of devices. Just Go through my post and follow the links which I mention in the post, I think you will head back to Xamarin.Forms, at least you wouldn't be subscribed to this subreddit if you had completely lost hope of really getting your hands dirty with Xamarin.Forms so just give it a try again.
I think what /u/Thornsten is saying is the way you have it organized, it's fully possible for it to end up null if GetService&lt;T&gt; returns it null. Using nullable properties in a constructor implies you don't actually need the dependencies your injecting. It seems like you're only doing that out of laziness and not wanting to have to pass all the dependencies each time. 
&gt;You're saying that compiles? No. Congrats for finding a contrived example. &gt;Again, IntelliSense will, once you've actually started calling a method and aren't still picking a method (ie in the parentheses of the method) show exactly what you need to provide, depending on how you're calling it. This VS extension does _not_, however, which is the whole raison d'être for the entire thread.
Sorry, the project is in VB, but I prefer C# and there is a VB equiv for pretty much any c#... sorry forgot to translate it
 What do you mean xamarin.forms can be on a wider range of devices? And this isn't the xamarin.forms subreddit, just because you love C# doesn't mean you love every tool used by it. I don't hate Xamarin.Forms, but it's lacking in ways that ionic isn't. The speed of creating an app with ionic in terms of UI is off the charts (even though xamarin forms is getting their with their previewer now, but that thing still breaks quite often), and ionic allows for things that xamarin will never allow, like in app replacement. You can completely replace the internals of an ionic app without a user ever having to update in the app store, pushing vital updates. It also allows your website developers to do what they do best. However, I've for the most part given up both, and gone into full PWA's :)
 dynamic foo = new Bar(); foo.Jiggle(); var foo = new Bar(); foo.Jiggle(); If the latter works, so will the former. Understanding the difference is obviously important, but the entire point of something like IntelliSense is to be helpful. Showing an argument that has already been provided elsewhere if the opposite of helpful.
It doesn't show an argument that has already been provided. It shows the method definition, and shows that it's an extension method. It's not misleading if you understand it *in the slightest.* Have a good afternoon.
Uh... yea. Is that a joke?
Nah it's just a keylogger they're using to steal our code. M$ is collecting info to sell to the feds, i can't disable it, I can't see what it is, o no ! /s as well, lol... looking forward to playing with it.
lol right! the title is based on comments by a co worker. I thought it was funny, but the tech is really cool.
another link for you bro https://www.youtube.com/watch?v=OhCysVU5RDA
Indianapolis
Removed: Rule 4. Feel free to repost, but please include the code you have.
Try `a.ToString()` rather than `a.Name`.
Your submission got caught by the spam filter. Probably would have removed it under Rule 4 anyway.
Wizard a race? o_O
Good point, but I decide on this. ;-)
Actually that would be the final goal, will take some time though. 
Didn't work how? Can you post the code of your attempt using `OrderBy(a =&gt; a.ToString()`? It might be a small, slightly-unrelated issue.
Columns are fields, in c# you cannot have two fields with the same name.
Ok, You have your reasons which are clear and true, but every tool has something which another doesn't so... we can disscus about it for a life time... so its ok.
So ideally the solution looks like this - http://b1-herocards-exercise.azurewebsites.net/. If you scroll to the bottom, you can see that the races are in alphabetical order. &amp;nbsp; My own solution (http://prntscr.com/jht240) currently isn't alphabetical (Wizard is in the wrong position). If I add the ToString() part, nothing changes to the order. You can see the updated code here - https://pastebin.com/vhwuHn3G &amp;nbsp; The thing that especially confuses me is that the GetRaces() fetches those Enum values and then puts them in a IEnumerable&lt;Race&gt; as Enum values? I don't get it. Sorry if this doesn't make sense.
Don't get me wrong, I think it's a fantastic idea, I just find the execution lacking. You should never be able to start a template, and then not be able to run it without fixing things. I would love for my WPF world to work in Mobile but I just don't think it's there yet
You are looping through your IEnumerable, but you aren't actually using the value. You are using the counter. Change your code to this: &lt;h6 class="title"&gt;@race&lt;/h6&gt;
Ahh, I see it now. You're not doing anything with the `race` variable in your `foreach` loop. You're outputting based on: @((Race)counter) Where `counter` is just an integer incrementing each loop. Each enum value has a backing value, by default it starts at `0` and increments. So your `enum Race` is equivalent to: public enum Race { Dwarf = 0, Elf = 1, Halfling = 2, Wizard = 3, Human = 4 } In turn, you can cast the integer values to an enum via an explicit cast, which you are doing here: (Race)counter So you're outputting in your loop basically: @((Race)0) //Dwarf @((Race)1) //Elf @((Race)2) //Halfling @((Race)3) //Wizard @((Race)4) //Human Because you're using this `counter`, you're ignoring the ordering you intended to do above. You don't need to do the counting anymore (or you can keep it if you need it for other ancillary purposes). Because the `foreach` loop is getting you the casted `Race` value for you, you can simply change your output to be: @(race) 
Oh god, I overlooked that. Now it works. I'm extremely grateful!
C# and business go together like peanut butter and jelly.
Not sure what you are trying to set up. Consuming the WCF on the server? Use "Add Service Reference" If you need a js client, you can try SvcUtil. It has a language option for javascript (I've never used it) https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/generating-a-wcf-client-from-service-metadata If you are only building a service in your site to serve the front-end, you should simply use the basic web api stuff and return json instead of WCF/Soap 
i dont either but its been awhile since i tried again im more mature then i was before and im willing to take risks 
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/enumeration-types#using-the-systemenum-methods-to-discover-and-manipulate-enum-values If you have an IEnumerable enumerationOfFantasyRaces of an enum type called FantasyRace, you can change it to an IEnumerable of string by doing enumerationOfFantasyRaces.Select(value =&gt; Enum.GetName(typeof(FantasyRace), value))
Remindme! 1 week
I will be messaging you on [**2018-05-21 19:50:29 UTC**](http://www.wolframalpha.com/input/?i=2018-05-21 19:50:29 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/8jb6xk/http_caching_in_net_cachecow_20_is_here_now/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/8jb6xk/http_caching_in_net_cachecow_20_is_here_now/]%0A%0ARemindMe! 1 week) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
RemindMe! 1 week
any good tutorials you can recommend ive watched several so far but they didnt help or explain much it really came down to me just copying their code which didnt help \(obviously\) 
Redditors are just strangers on the internet, spouting whatever bullshit they want. Maybe you heard it from someone that was joking, but was lost on you since you are new. At anyrate, thats why I kinda miss forum based reps so you can sorta see trolly behavior before you get conned.
Ok thanks. I'm new to [ASP.NET](https://ASP.NET) and C# but where I work they use WCF services and they get called from .NET MVC apps and then send data to the client in the form of JSON. I just wanted to build something from scratch to get a better idea of how it all works together.
Implementations of ITimedETagQueryProvider query the back\-end stores probing for change. There are less efficient implementations too \- checkout the docs on github or stay tuned for the next posts.
that is primitive stuff. Setting Cache\-Control headers to what CacheCow does is miles of difference. Also show me some RFC that the cache can be stored on the origin server. 
You could create custom User Controls for each individual tab--thereby scoping the column fields to the Control, instead of the Form.
Just checking, but have you looked at [Blittable and Non-Blittable Types](https://docs.microsoft.com/en-us/dotnet/framework/interop/blittable-and-non-blittable-types) in the .NET docs?
Maybe you can add/use JSON result in your mvc project instead of creating another application just to pass through the data. https://forums.asp.net/t/2131725.aspx?How+to+get+a+json+result+response+at+View+ 
Here is what I follow for file structure, which is a little different than program structure addressed by some other comments: [https://gist.github.com/davidfowl/ed7564297c61fe9ab814](https://gist.github.com/davidfowl/ed7564297c61fe9ab814)
It's a good article as long as you're a mockist not a classicist. I'm a classicist so I'd be advising your juniors the exact opposite to what you're telling them ;) It does provide good insights for people who want to follow the mockist traditions. I have good reasons not to follow that school of thought, but I deal with mockists who produce perfectly good, well tested code all the time, so there's clearly a large degree of personal preference involved too.
&gt; classicist Not familiar with this, you mean you create fakes? The main reason I don't like this is because 9 times out of 10 someone comes along, adds a method to an interface, and then just makes the fake throw a NotImplemented() exception (Similar to how extending the constructor just gets filled with nulls). I know that all that points to is that they aren't writing unit tests for the code they just wrote, but it seems to happen often enough that I stray away from them. 
I would do that, but it's a work requirement to have the WCF service consumed by the MVC project.
Ah fair enough. Was just curious. C# is life! I once did VB.Net but transitioned to C#
Have you tried adding [StructLayout(LayoutKind.Sequential)] to S in the external code? Have you tried doing this all in the same assembly rather than using externs and seeing if you get the same behavior?
What benefits do you see from mediatr? I know some people rave about it but I've yet to see the benefit 
It's easy to unit test, it's very clear what dependencies are used by a command or a query, it allows you to nicely isolate cross cutting concerns. 
https://www.thoughtworks.com/insights/blog/mockists-are-dead-long-live-classicists
1. To what can it be exported? 2. Use [this](https://github.com/github/gitignore/blob/master/VisualStudio.gitignore) .gitignore file. the .vs, bin and obj folders (and other folders that include binary or personal config stuff) should not be included in your repo
I agree that according to the documentation, your struct should be blittable and the array should be able to be pinned. However, the exact behavior of the marshaller has always been a bit of a mystery to me. Trying to read the CLR source can be a bit of a nightmare. For what it's worth, the observed behavior is not *wrong*, even if it's not ideal. Arrays are marshalled as `[In]` by default, and the pinning optimization *may* make them appear as `[In, Out]` but is not guaranteed. For correctness sake you should be specifying `[In, Out]` anyway (even for `int[]`) in which case the method behaves correctly (even though it will be slower due to copying). If you're looking to optimize performance and are not simply asking out of curiosity, the easiest workaround would be to declare your imported method argument as `S*` and just pin the array yourself.
Sequential is the default layout in C#, so that shouldn't matter.
&gt; What do you mean xamarin.forms can be on a wider range of devices? I guess he means: - iOS devices - Android devices - Mac OS - Windows 10 UWP - Tizen - Linux (preview)
Ionic supports all of those as well
I’d personally just handle it I’m the controller/view like you normally are, the service itself shouldn’t care about permissions. You already have to do a check in the controller/view for UI purposes like redirecting to a login page or hiding features in the view. Having the services themselves aware of the user is just going to crap up your API, make it annoying to change when the permissions on your app change, I’d hate to have to be changing service code instead of being able to just take the attribute off the controller.
\+
Interesting thought. I'll keep it in mind. Thanks.
Yeah if you were to do it that way for sure abstract it into some IAuthorizationService and inject it. If unauthorized would you throw from within the service?
So that didn't really explain it that much. Just that mocking on a weak typed language could be dangerous. A secondary point that it sort of touched on was that you could setup a bunch of mocks that over time, the class doesn't actually use, but you would never know because your code is so isolated from each other. But... &gt;The main issues emerge when we isolate our code from our own code. Not sure I agree with this. But then again... &gt; “Object-oriented design tends to treat a class as the unit, procedural or functional approaches might consider a single function as a unit”, when the unit is actually a behavior I tend to agree with this. But at the same time, each test is usually trying to test a single decision tree. So for me (And I would expect many others), a unit test is testing a single decision within that method. If you are seeing it as an overall behaviour, you are probably testing multiple decisions at once that output a "happy path" or unhappy. 
Great article. My favorite thing about using this sort of system is that it helps avoid training developers to see tests as "Things we have to mindlessly fix whenever we change stuff." Most of the junior devs I've worked with over the years have just seen tests that way. "Oops, I guess I have to update all those tests because I changed constructor params." This mindset trickles throughout a shop, and even guys who swear by TDD in a vacuum just never seem to write tests, or at least very good ones. I'm actually preparing to teach a few lunch-n-learn sessions at my job on unit testing. I'll certainly fiddle with this setup and see if it's something I could introduce to the gang.
I'm afraid we're wasting our time. /u/Ronald_Me appears to be Dunning-Kruger personified.
Using mocks and only mocks is a fantastic way to miss issues because you're only testing in isolation. But how are you testing that Class A and Class B interact properly? Ideally you should be able to create a test that feeds all implementations of interface B into tests for Class A and all the tests pass. You shouldn't test Class A with only mocks and Class B with only mocks and call it a day. You should test actual Class A with actual Class B as well. 
Fantastic article! I am going to explore this some more tomorrow at work. Thanks for the post!
Interesting. We have implemented a somewhat similar system at our company that's stylistically similar to Fluent Assertions.
For the sake of anyone who has to maintain and troubleshoot this code, please avoid it unless it's absolutely necessary.
Yep I know it's bad. Will give Redux a look, thanks!
Thanks for all the feedback! &gt; Is Database the TVDb access class?) Database class is the class between app the my local database - like user info, what series are linked to what users, etc &gt; Going back to Configuration I had config for a generic error message once but removed it at some point and couldn't remember how I did it. Will give this a look. &gt; ... but if you're working with WPF, I would strongly recommend checking out Caliburn.Micro I've made a new project completely to test different things so I'll give it a look - but what makes it awesome? Have you used any others? At what point would solve the problem of a model class (Show) trying to access a setting property, as seen in the 2nd picture of OP?
This looks like a really bad idea to me - as long as you are about writing unit tests! If we talk about integration tests, that advice might sound good. As implementations of B might deal with IO, the general advice isn't good! Within my unit test environment I don't want any IO to happen, as this is slow, unsafe and might be complicated to setup. But even if that's not the case those tests sound kinda redundant and misleading in an error case. I need to figure out then, if the reason lies in A or in some specific B. This contradicts one intention of unit tests: locating the error fast and easily because of a limited code base as possible source. If you follow the Liskovs substitution principle I further don't see the need to couple depending classes within unit tests. The mocked class couldn't change anything at all then. So of course a unit test isn't limited strictly towards a public method within a class based OOP language. Often it is, but sometimes the scope could be larger. As always it depends on the specific code! But the idea to sacrifice isolation sounds weird to me. 
Hmmm. But assuming that you test that Class B is returning the right data. And that Class A, when given that data that is output from ClassB, handles it correctly. Is there any need to connect them? I guess it's kind of like. If you know an Oven heats to 180 degrees successfully and can hold it there. And you know that a Pie, cooked at 180 degrees for 30 minutes is ready to eat. Do you need to know that the pie, inside that particular oven at 180 degrees for 30 minutes cooks fine? 
That was my first intro to unit tests too. "OK so when we modify this class, just make sure the unit tests don't break, and if they do break heavily enough, unload the project". 
I see a big **no-go** in the article: [Multiple Asserts](http://osherove.com/blog/2006/10/3/avoid-multiple-asserts-in-a-single-unit-test-revisited.html)!
Learn python instead. 
I think this is a very common problem when you are trying to learn programming, finding stuff to make. And it is also hard for others to help you with finding projects you would enjoy working on, so i am afraid you will properly have a very hard time to get help with that. About online resources, I have really enjoyed the videos from Tim Corey, he has this video series where he makes an entire application that you might enjoy following. [Creating a Complete C# Application from Start to Finish](https://www.youtube.com/watch?v=HalXZUHfKLA&amp;list=PLLWMQd6PeGY3t63w-8MMIjIyYS7MsFcCi) 
sweet. thank you, with this i should be able to build something to fix this
sweet. thank you, with this is should be able to fix it
You're personal opinions don't matter to anyone but you.
Find a problem that you want/need to solve, and solve it by writing an application that solves it. That's how I learn. 
Rows[i] instead of Rows[0]
Not to toot my own horn too much :D, but you can achieve something similar today using my library, ValueOf - `class Person : ValueOf&lt;(string First, String Last), Person&gt;{}`
The crux is that you may have no fast failure when you change the behaviour of A or B such that the unit tests still pass, but in a way that would cause an integration problem. You can counter this by saying that the tests for A or B in isolation are insufficient. However, in some scenarios it's more pragmatic to test A and B as a unit than exhaustively to test A and B independently. From a higher level, we can test a single user action that passes through several services, all in a fast-running unit test. Then we have a huge amount of code coverage like a traditional integration test, but without the difficulties of an integration test (e.g. a database, multiple processes and so on).
&gt; As implementations of B might deal with IO, the general advice isn't good! Within my unit test environment I don't want any IO to happen, as this is slow, unsafe and might be complicated to setup. Segregate IO and logic and this isn't a problem. I realize that's not always possible or practical, but it's often doable. When you can't cleanly separate them, another approach I like is when there's a test for Class A that uses a mocked B, you take the arguments passed to that mock and pass them to B. I'm not saying fine grained unit tests are useless, they're really useful for testing edge cases that are hard to reproduce. &gt; If you follow the Liskovs substitution principle I further don't see the need to couple depending classes within unit tests. That's the idea behind feeding all implementations of B into tests for A. With C# this isn't an impossible task since iterating over assemblies and yanking out things that implement a specific interface isn't hard
If you’re learning C# I’d recommend you learn it with MVC as this is a requirement of most of the jobs on the market at the moment.
&gt; Segregate IO and logic and this isn't a problem. I realize that's not always possible or practical, but it's often doable. You have not understood, what I was saying! The B **could be** the segregation! For example A is some kind of domain class and B is an interface to a repository or a service something similar. So lots of implementations of B are IO *polluted*, as that's their *primary* purpose. (Not considering some kind of decorators or stuff like that) &gt; That's the idea behind feeding all implementations of B into tests for A. How does this relate to what I was saying?: &gt; If you follow the Liskovs substitution principle I further don't see the need to couple depending classes within unit tests. Have you really understood the LSP? Your claim makes me doubt!
Check out the resources available at /r/learnprogramming, particularly: https://www.reddit.com/r/learnprogramming/wiki/faq#wiki_where_can_i_find_practice_exercises_and_project_ideas.3F
&gt; You have not understood, what I was saying! The B could be the segregation! I haven't explained myself clearly. What I mean by this is IO lives at a different layer whenever possible. Rather than injecting IO into a class, your logic classes are completely stateless. When the two need to interact, there's someone with that responsibility: class Foo reads from Bar and passes to Qux, takes output from Qux and writes to Bar. Like I said before, this isn't always doable in a clean way, sometimes you need to get a little dirty in your logic classes but a lot of the time binding IO and logic is boring glue code. &gt; Have you really understood the LSP? Your claim makes me doubt! I think I've also explained myself poorly here. Some interfaces only exist because it's convenient for testing - consider context classes generated by EF. If you use the fake context for some tests, you should have the real context responding to the same inputs as the fake. There are very real differences between the fake context and the real context, I've not caught a bug or performance issue because of how they act. The other part of it is that if you have a class that uses Interface B and that might be one of many implementations at runtime, why would you not want to test each possible combination to ensure they behave correctly together? You're not binding to a particular implementation, you're binding to *all* possible implementations.
As everyone here said, the column's name is form scoped, not element scoped. A cool trick could be to add dynamic names to the columns so you don't have to type like crazy. Something like this: https://stackoverflow.com/questions/20857773/create-dynamic-variable-name
You can do the courses on the 70-483 certification. 
Linqpad is amazing (if you get the paid for version) - I think if MS gave it away with Windows csharp would rocket in popularity.
Best of luck to you. Once you know the core concepts and the way of thinking about problems it becomes much easier. I remember how it was when I first started, it can be super frustrating but stick with it :)
I'm afraid I can't. I haven't really used any in 10 or so years. There's nothing wrong with copying code as long as you understand it. Anything you don't understand, like specific terminology, Google that specifically.
&gt; OOP Thanks for your content! (although this is written like a massive run-on sentence)
Do this!!! I have like 3 books, an Udemy account, and developer friends i pest all the time, but this guy on YT really helped me. You'll see someone go through something from start to finish and find out all the things you don't know. Then, you can google those things, or read about them, or just play with them. 
Hacker rank website isn’t a bad place to start. 
What technology are you using for your local database? Is it SQLite? And how are you accessing it? Do you open a connection and run commands, or do you have an ORM? As for caliburn, it has a lot of QOL aspects that I've found really speed up my workflow. Just follow the quickstart and you can have a convention based app with automatic view binding in under an hour. I initially started learning WPF with MVVM light and I guess it just felt like i was spending way too much time trying to contort my work to follow "best practices". Now that's not an issue with mvvmlight, I was new and trying not to do something I would kick myself for later. Caliburn handles most of the tiny technical stuff for you (there's a better term for that I'm blanking on), so you can focus on building your app and let convention come naturally. It also supports both view-first and viewmodel-first development, so you never really get stuck feeling like you're developing backwards. The action and property binding it provides is probably the best part though. If your show class is truly a model, it should have little to no logic in it. Model classes are almost always POCOs with auto-properties. You'll have another class that is responsible for creating these and setting those properties. That other service class will be the one with access to the configuration values, and would live in the domain layer that I talked about before. "Show" could live in a couple places depending on what kind of model it is. If it represents a table in your database, I would put it in the data layer. If it's a DTO, put it in the domain layer.
Yes! I'm currently doing this course as well and it is absolutely love it, it is so well made! Tim Corey is a rising star as far as teaching C# on youtube is concerned, his other videos besides this course are excellent, as well. 
Oh sorry, English isn't my mother language, and you will find my comment isn't well structured and lack to some phrases, Thx for telling, 
No it's fine my friend! I appreciated your effort, you did very well to convey ideas and finer points for not speaking English as your first language. :)
You can try setting `Window.ShowActivated = true` prior to running `.Show()`, but `Window.Activate()` should work as well... what event are you using to show the window (eg: `Button_Click`)?
Yes, I have list from which double clicked item UserControl is loaded in new window. I will try your suggestion
Didn't work out sadly :/
Just got suggestion in other forum, in new window constructor I should have Topmost value set to True. Work out flawlessly!! :))
Yeah, what happens is the new Window is shown prior to the second click registering on the form... so: Click =&gt; Sets focus to Win1 DoubleClick =&gt; Win2 is shown Click =&gt; Sets focus back to Win1 Looks like if you just add `e.handled = true;` to the start of the event, it works fine: private void Button_DoubleClick(object sender, RoutedEventArgs e) { e.Handled = true; Window2 win2 = new Window2(); win2.Show(); win2.Activate(); }
Actually the default is Automatic (fields may be reordered for maximum space), and i did try both Sequential and Explicit, didn't matter. In same assembly, arrays are reference types and thus passed by reference, so the changes would be visible
The thing you posted talks about Arrays of NON-blittable types. "Combining the InAttribute and OutAttribute is particularly useful when applied to arrays and formatted, non-blittable types. Callers see the changes a callee makes to these types only when you apply both attributes." And yes, my struct S should definitely blittable, it uses Sequential/Explicit layout and only has a single (definitely blittable) field, and I'm not aware of anything else I could do
It was mainly out of curiousity, thank you for the detailed answer. This may actually be the first instance of 'undefined' behaviour in C# :p
Yup! Sender is always going to be the control that raises the attached event. Another thing to think about is Type Casting. Think about this example. What if instead of a textBox you had a button: Button eventCreateBtn = new Button(); Controls.Add(eventCreateBtn); eventCreateBtn.Location = new Point(261, yPosition); eventCreateBtn.Size = new Size(67, 20); eventCreateBtn.Name = "dateButton"; eventCreateBtn.KeyDown += new KeyEventHandler(dateTextBox_KeyDown_1); This code is the exact same, just replacing textBox with Button, and we're still attaching the same event handler. What will happen? When the key down is pressed, the button will fire the "dateTextBox_KeyDown_1" event and execute the code inside. Our code will have an exception as soon as it gets to this line: string new_date = (sender as TextBox).Text; Why? Because our "sender" is now a button, not a TextBox. This is where Type Checking is useful, you can check to make sure that the "sender" is the correct type before executing the rest of the code. If it's not the right type, you can exit cleanly by returning. if (sender is TextBox) { TextBox tb = (TextBox)sender; //The rest of your code here } or TextBox sent = (TextBox)sender; if (sent != null) { TextBox tb = (TextBox)sender; //The rest of your code here } both of the above are functionally equivalent. 
if I were you I would go to Pluralsight and use the 10 day free trial. I find that their videos are pretty concise and easy to follow
Before I give you my answer, I feel like I should comment about these kinds of posts. I see a new "how do I learn C#" post about 3-4 times a week. Up front, let me say that I am OK with these kinds of posts because it invites discussion, even if these discussions have been had enumerably on this sub. However, I feel lile we should have a permanent sticky post for C# learning resources that is maintained and updated with the "best" resources available. I know our current sticky has a section for this, but given the frequency of these posts, it might behoove us to sticky a post for this explicitly. Anyway, let me tell you how I learned. I picked a project that I knew I'd stay interested in long enough to complete as well as projects that were *just barely* outside of my current comfort zone. Each project I made had one or more things that would inevitably encourage me to learn new things *and* improve the things I *thought* I knew how to do. In my intro programming course in college, nearly every program was fun and interesting to me to write but the "hello worlds" and "simple add/sub/mult/divide calculators" quickly became boring. I am a gamer, so I started making games. At some point, I transitioned to "full stack" applications (ui front end, services and databases on the backend) . Anyway, here are some suggestions for your first few projects: * Trivia game (console app) - Ask questions related to C# and programming in general and provide multiple choice answers * A chat service (console app) - Use WCF for comms. * Pong (Winforms) * Tetris (Winforms) * Tetris (XNA/Monogame) * WPF app with WCF service and database * MVC Webapp with WCF service and database * WebApi with database * etc. Once you get going, you'll have a better idea of what projects you want to do. Hope this helps.
I did that exam and about 50% of it involved things I've never used in approx. 15 years as a developer. If it hadn't been for the prep courses I never would have passed.
[edx.org](https://edx.org) and its free
You are right, what I am trying to say is, add a json controller in your MVC project which is already using WCF contracts and publish the new json controller as end point to your client who wants json endpoints. That way you can use all your models and logic from already existing mvc application.
OR you could just use Visual Studio, you know without having to powershell every command. It also comes with some handy refactoring tools. Don't get me wrong vs code is great for client side apps, but visual studio is the only thing I need for server. 
It's much simpler to use the `-n` flag to generate projects and use a globbing pattern to add them to your solution: dotnet new console -n CSharpWithVSCode.ConsoleApp dotnet new console -n CSharpWithVSCode.ClassLib dotnet new sln add **/*.csproj
I found programming very hard when I started. I tried with a book and CD ROM back in the 2000s trying to program some 3D simple games. It takes a lot of time and effort, I still don't really believe people that are like "yeah omg programming is easy check out this program I made" are the same type of people that trace or steal other peoples art. I'd recommend buckling down and shilling out some money to Udemy or other paid resources. Free stuff can only go so far. On Udemy I like Mosh Hadermi? Anyways His first name is Mosh.
Well with this whole .NET Core thing that some of use aren't using Windows. 😄
I've somewhat recently hopped over from IT to development focussing on .net (C# and VB). I TRIED to learn python doing learn python the hard way and automate the boring things. Neither of them really kept me hooked but that comes from self motivation. Pluralsight is **REALLY GOOD** and well worth its cost. There are lessons on everything under the sun on that website. I think a good starting point is udemy w/bob tabor. After you finish a section try to change it around or make your own from scratch. Even if you think something is useless, do it. Udemy is completely free and should give you a decent grounding to be able to start making small projects w/the help of some strong googlefu. best of luck!
Do you have kerberos delegation enabled in ad? This sounds like a double-hop scenario. 
It works on dotnet core. Ninject will create mocks for you on the fly if it’s able to (I.e. constructor arguments or if you setup bindings). You still need to create backings for methods you intend to use though.
The only major concept missing in 3.x is async/await. It should be easy to catch up with the new features added in later versions as they don't really introduce new concepts aside from async/await. https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history
Hey OP, you might want to separate the commands with line breaks, it's pretty difficult to read them
Yeah, you're right. Done! 
Well, you learn something new every day. Thanks! I'll take a look at this and update my post accordingly
This to me works out ok on small scale stuff but later you end up with calls where permission is checked and then you have a special case where it shouldn’t be checked etc etc . The entry point for the call should implement the check not chain after as originally suggested 
so i only have experience passing around `IPrincipal` objects (referenced in `HttpContext.Current.User.Identity`, or `Thread.CurrentPrincipal`) between services but i believe making this call using `DefaultNetworkCredentials` is just going to pass your iis threadpoolidentity user. i haven't used `WebClient` before but you likely want to pass an identity to that explicitly, not rely on defaults.
That's how I've done it in the past. Eric Lippert has a writeup on the pattern here: https://blogs.msdn.microsoft.com/ericlippert/2011/02/03/curiouser-and-curiouser/ If you like, you could create a constructor on `AbstractBaseClass&lt;T&gt;` that can check (at runtime) that the pattern was implemented correctly and not full of lies as in your `DerivedClass2` example: public abstract class AbstractBaseClass&lt;DerivedType&gt; where DerivedType : AbstractBaseClass&lt;DerivedType&gt; { protected AbstractBaseClass() { if (!(this is DerivedType)) throw new InvalidOperationException("The implemented class must be of type " + typeof(DerivedType).FullName); } } You could probably offload this to some static one-time check (to avoid repeated calls/checks for each instantiation), but I don't have the time at the moment to do so. Maybe some determination about how you want to deal with inheritance (up to you). Regardless, it wouldn't enforce _compile time_ checking of the pattern, but it'll crash and burn immediately the first time the developer tried to use it otherwise.
Yeah, this is true enough, and I'd probably go for VS every time in my day job still. I wrote this post when I was collaborating on a non-work project with a few friends, with a mix of OS preferences. And.. I know it's a bit more hassle doing a lot of the setup on the command line, but I kinda like doing it that way. 
 If it's 3.x C#, it's probably an old version of .Net and methodologies too. Sure, C# features can be new, but .net framework completely changes how we do things on updates.
Depends on whether you see a use in the future for fields your not currently utilising. If you only need a subset, only create the object for the fields you need, otherwise take the pain early and handle all fields. Newtonsoft should disregard fields without a property on the object.
They both work and each has advantages and disadvantages. An object that has only the properties you use is best at communicating your intent to future developers. An object that has every property available makes it easier to extend the functionality of the app later. Also, if the API you're using was created by someone else, they may have published a nuget package or some other code that has response deserialization objects already, so look for that option before trying to roll your own object for that purpose.
Good luck trying that on a cheap x86 tablet - [debugging isn't gonna work](https://github.com/OmniSharp/omnisharp-vscode/issues/1716).
My issue with C# development and vs code is how often code lens and omnisharp crashing. I don't know how frequently I've had to hit F1 and type "Restart Omnisharp"
The strange things I noticed : if I open a browser on my server (the one running IIS) and browse the swagger page and call my B api it works like a charm. If I do the same test on a computer in the network I got an 401 Unauthorized ... it makes me think the Kerberos setup is all right no ?
Ah ok, thanks I will give that a shot.
I read on several sites that impersonating the user in the first api , the DefaultNetworkCredentials should use the impersonated user and not the thread pool identity 
What browser are you using? Your browser has to be configured to use integrated security instead of NTLM
I have a dream to work in my million line work code base in vscode. Seems plausible.
Too new to be awesome. I'd love an old copy of Visual Basic 6 though, get some of my old code running again just for fun.
Probably not. When you're logged onto your server, the kerberos ticket you have is issued to that machine. So when you open the browser, and connect to the API on the same machine, there's no hop. But when you go from that API to another (presumably on a different machine) you have a single hop, and the ticket is validated (b/c that machine can obviously give it's own ticket away for validation). When you are not on your server, your kerberos ticket is issued for the machine you are on (which your browser accesses). That ticket is then handed to your back end api on your server (1 hop) and works. If/When your api calls API 2 (2nd hop) the ticket invalidates since delegation doesn't seem to be set up properly in your Active Directory, because your server isn't allowed to hand the ticket from your machine to another machine and claim to be you. Here's maybe a better break down: http://www.roguelynn.com/words/explain-like-im-5-kerberos/
Definitely appreciate the fact that you created a tutorial w/ the lib and console apps in separate projects, as well as including instructions on adding unit testing. Most tutorials aren't as comprehensive!
WinForms is alive and well in VS 2017
Why is mac horrible? The VS IDE for it was shit last time I checked it out, and VS Code works very nicely.
I went full core with code on MacOS 6 months ago. Never looked back.
Msdn has it. Hell, they have QB45 and MASM still on there
We use MASM during our final year of uni. :P
I still have that somewhere. I graduated in 2004. 
Thanks! Much appreciated!
Thanks
One thing I realized about PowerShell: instead of `mkdir directory; cd directory`, you can write just `cd (mkdir directory)`.
I've never experienced that. Have you reported the crash?
It's still bigger and has a longer startup time then VS Code and since when I code at home I always code a front end I already have VS Code installed. Why install a second IDE if I don't need it?
That's awesome! I didn't know that. My PowerShell skills are basically just out of date dos skills from many moons ago... 
I would invite you to look at how the languages are used and where the growth opportunity lies. You can land a pretty sweet C# gig, but there aren't as many as Python. Imho, (in the web services world), this is because Python shops are usually using a large array of open source tech, like Hadoop, Kafka, etc and python is a glue for microservice work. C# is different in that it is usually used by Azure shops and the work tends to be monolithic.
that's a good point. I'll make sure to only use this reference to learn the basic syntax/semantics, and i'll make sure to use an up-to-date reference when I move onto the latest c#/.net Framework.
The answer to the question in the subject is; Yes. ‘this.GetType()’ will give you the concrete runtime type in a base class. You don’t actually want the runtime type though, you want the derived type at compile time so use genetics as suggesties above. 
The problem is that I don't know if it is actually a crash. I don't see anything in the output window or problems window. Just Code lens and intelli-sense stops working. I then have to either restart omnisharp (Fixes it sometimes) or restart visual studio code totally. So it'd be tough to report something, that I'm not sure exactly what is happening.
Yeah, I think 2003 is not really lost to the sands of time just yet... Go back to MS-C and CodeView, then we're talking.
WPF too? there is a project that add support to Winforms too.
Metric asston of legacy code and no clean upgrade path from WinForm to WPF
It depends why I'm using the service locator. If I'm using null in the constructor it is because I only pass the dependency if I need a new implementation, not the current \(provided by ReactiveUI\) implementation. Generally for testing.
We are debating, no? I'm just trying to explain how I use the framework, there is not need to insult.
The constructor is ok, as I said, I'm using the default implementation provided by ReactiveUI. The framework provide default implementations for all the framework interfaces, GetService will not return null because the framework already supplied instances for that interfaces. If I pass a null value to ctor, GetService will return the default \(not null\) instance.
Yes, but they doesn't make then bad. 
Ah that's makes sense then, the module is only a starter to programming 
YouTube
This seems to answer my question really well. I will definitely implement the runtime check in static constructor.
It's actually better to learn Winforms first before WPF imho. It is much more straight forward to learn and similar to other UI toolkits. Then jump into WPF. 👍
Don't do what /u/FizixMan is suggesting because it breaks the [Liskov substitution principle](https://en.wikipedia.org/wiki/Liskov_substitution_principle). You shouldn't be checking for a specific type in this manner. If a parameter is of type `MyType`, anything that inherits from that should be an acceptable type, period. If you start doing things like "yeah, it is a MyType object, but is it the *specific* type?", you need to take a step back and figure out what you are really trying to accomplish. If you want `ClassA` to only be able to add specific types of your choosing, then have `ClassA` implement an interface similar to the following: public interface IAdd&lt;TResult, TValue&gt; { TResult Add(TValue value); } public class MyOtherValueType { public int Value { get; set; } public MyOtherValueType(){} } public class ClassA : IAdd&lt;ClassA, int&gt;, IAdd&lt;ClassA, MyOtherValueType&gt; { private int Value { get; set } public ClassA(int defaultValue = 0) { Value = defaultValue; } public ClassA Add(int value) { //if you want a new object instance: return new ClassA(this.Value + value); //if you want the same object instance: //this.Value += value; //return this; } public ClassA Add(MyOtherValueType value) { //if you want a new object instance: return new ClassA(this.Value + value.Value); //if you want the same object instance: //this.Value += value.Value; //return this; } } Usage: class Program { public static void Main(string[] args) { int value = 7; var otherValue = new MyOtherValueType(); otherValue.Value = 10; var classA = new ClassA(42); var result1 = classA.Add(value); //42 + 7 = 49 var result2 = result1.Add(otherValue); //49 + 10 = 59 Console.Write(result2.Value); } } Output: 59 Now, if you want your type to be able to add itself with other types, just throw on another `IAdd&lt;,&gt;` interface and implement the method. If you want this kind of behavior (because you used the 'Add' method as an example): if (MyTypeA + MyTypeB == 42) { ... } ... then let me know. That requires overriding some operators. If I knew what you were trying to do exactly I could mock up something a lot better than the above. What, exactly, are you trying to accomplish? A real-world example, if you don't mind.
`dotnet new winformsapp` Note: requires .Net Core 3.0 (and a time machine)
What kind of UI?
*Plenty* of businesses still utilizing winforms applications.
 You get access for hardware through cordova (what phonegap and ionic are built on top of), you can add any plugin for cordova you want if you need something OS specific, and they're very easy to make. And yes, by default all ionic controls will go to the native look of the platform, or you can use base html and css to make platform agnostic components, it's however you want to build it :)
What's WPF? 
Windows Presentation Foundation. It's basically WinForms but much more optimized, customizable and is easier to do what you want it to; but harder to work with.
Its outdated because it hasn't been significantly improved or updated in quite some time. You can find jobs that use it, but probably not for any new projects.
&gt;It's actually better to learn Winforms first before WPF imho. It is much more straight forward to learn and similar to other UI toolkits. Then jump into WPF. 👍 It's like winforms, but has hardware acceleration, an expressive markup based UI language, and generally is more up\-to\-date...but is known for being more difficult and time consuming to use properly.
I am building a very long response to a SOAP request from a vendor and have found that I can just use some templating to do that. DotLiquid is so easy to use and would make your life much easier. [http://dotliquidmarkup.org/](http://dotliquidmarkup.org/)
They haven't written a Blazor book yet ;\) In all honesty, it really matters which UI framework you want to use, they are all fairly different from each other.
Every technology that people actually use is "dated". Winforms aren't the framework of choice for the majority of new development (nor would I recommend that they be), but they are in extensive use for existing codebases and are often used to develop prototype applications. They (or something like them) will be something you come across, and as a UI paradigm they are pretty "flat" and easy to understand: there aren't multiple layers of code or abstractions that you have to wire together.
This is a myth that gets dragged out *every time* Winforms Vs WPF is brought up and it's a flat out lie. You can use WPF in exactly the same way as Winforms, using click events and a designer. Anyone who tells you that "you must start with MVVM" is obviously misguided. And please do yourself a favour, don't start with Winforms. It's really outdated tech and has hardcoded problems WPF has solved for you such as UI virtualization and no hard limit on the amount of controls you can have.
How exactly does an interface solve the problem of getting the type of the deriving class? And other then that, I must use an abstract class to enable abstract properties.
Lol our office has tons of it
The box says it can target "mobile devices", so sounds pretty modern to me. :)
By that logic shouldnt we be skipping WPF and going straight to UWP? It streamlined a lot of stuff... Anyway, learning Winforms is not a waste of time for similar reasons that learning standard C is not a waste of time. If you are doing software for a living just assume to always be learning new APIs and being exposed to different approaches to a solution. 👍👍👍
The one most oreintated for Rapid Application Design
So here is exactly what I am trying to achieve: I am working on a math library and I wanna model [mathematical fields](https://en.wikipedia.org/wiki/Field_(mathematics)). My concept was to have an abstract class named 'Field' which has methods for addition, multiplication, subtraction, division, and a couple of utilities. Then, every implementer of 'Field' would basically represent an element of the field that it implements. For example, There is a class named 'Real' that represents real numbers. The 'Real' class can be instantiated, and then instances can be added together to produce a new 'Real' instance. &amp;nbsp; Since mathematical fields require the closure property, I need to ensure that addition of real takes two real numbers, and returns a real number. Hence the need for the type of the derived class: Every implementer of the 'Field' class should accept and return it's own type on arithmetic operations. If you are interested, my current implementation can be found on [github](https://github.com/RedMindZ/RedMath/blob/master/RedMath/Structures/Field.cs). (As side note, you may notice some naming inconsistencies within the class: that is because the library is still early in development and refactoring didn't take place yet.)
You cannot “delete” an object in C# (are you coming from a C++ background?). The object would eventually get garbage-collected. Except, as you suspect, it likely won’t: if a subscribes to an event of b, then neither a nor b can get garbage-collected until a unsubscribes, because they strongly reference each other. There are mitigations to this like weak references, Observable, etc., but you probably want to simply explicitly unsubscribe. I’ve found that .NET Memory Profiler detects and explains this type of leak well. Alas, it seems to have issues in Win10 v1803.
&gt; because it hasn't been significantly improved or updated in quite some time. For a large part because after fifteen years of UI/UX investment, there wasn't much left that needed doing. In a lot of ways WPF and ASPX still lag behind what Winforms can do easily. 
What happens when you change struct to class? Difference is explained here : https://docs.microsoft.com/en-us/dotnet/framework/interop/default-marshaling-behavior#cpcondefaultmarshalingforvaluetypesanchor2 You are passing a copy?
Since Photoshop is still figuring this out, I don't really feel so bad about that.
In what way is it harder to work with? Is it not the same, drag'n'drop controls into your form etc., like in WinForms? :0
I mean an interface like IAddable&lt;T&gt; with an Add method. Why does inheritance need to be involved at all?
It's outdated because it's mentally painful.
To be more specific, object T has a List\&lt;S\&gt; and it subscribes to an event inside each object S within that list which signals the object's destroyal \(GameObject.Destroy\(...\) from Unity engine\) and subsequently removes that object from the list In this scenario it's still mandatory to unsubscribe the event handler from object S ?
I did a small project last year, about 6 weeks, where the client insisted that it had to be done in WinForms because that's what their internal coders know.
I have intellisense problems after opening large json files (5MB+).
You can throw a custom NoPermission exception that the controller or a filter action can catch and respond accordingly.
So when you break this out into a WCF service or a mobile app or WPF, you want to duplicate the permission logic every place that needs it at the source? or maybe a call need permission x but the data it accesses needs x and y, the UI would be wrong and now you have an issue.
Also if it is a special case it is a different call or endpoint probably.
It doesn’t matter what is consuming the api as long as they are authenticated your controller doesn’t change because of wpf or anything else 
Yeah, for me it’s not even that much. It’s like 300 line cs files. 
If you have a repository (I call them services in my context) that is like orders maybe you only want admins able to do it.. you don’t put the check in your repo method otherwise in 6 months comes in where module x is going to create orders as a “side effect” both endpoints have their own permission but both can call the method without changes to your repository 
Just because you are authenticated doesn't mean you have access. Just because you have access to an endpoint doesn't mean you have access to that data. If I have access to bank acct # 1234, I shouldn't be able to change the request to #1235 and get that data. Though, you could argue you should return a 404 instead there, but you get the point.
Let's look at how this "debate" unfolded. The OP asked for help structuring projects in general. Someone gave the OP some good advice about how to do that and tossed in a warning about the service locator anti-pattern. You chime in to mention that in one specific instance with one specific framework you have been able to use the service locator anti-pattern in a very limited way and haven't had any problems, yet. Then when the more experienced developers who HAVE felt the pain of that anti-pattern start pointing out the well-known problems you ARE going to run into eventually with the anti-pattern you hand-wave them away. Do you see why you're wrong yet or should I keep going?
The first version of Windows that doesn't run WinForms or VB6 will be the first version of Windows the enterprise customers refuse to upgrade to.
What would your feelings be on using "IsAssignableFrom" instead of equality in the reflection example posted earlier? In theory that would solve the LSP issue too, wouldn't it?
I worked with Winforms for 4 years and with WPF for 3. There are a couple things you can do quickly with Winforms that take a bit of manual work to do in WPF, but there are quite a few things you can do in WPF that can feel impossible to do in Winforms \(smooth animations, hardware acceleration, deeply nested complex layouts, control styling, vector graphics\). The things they added to WPF were the things they saw as the primary failings of Winforms. ASPX is the file extension for Webforms pages. Those are also considered outdated in the same way as Winforms. A modern comparison would be [ASP.NET](https://ASP.NET) Core with a React/Angular/Vue front end, or an [Electron.NET](https://Electron.NET) application \(like Visual Studio Code, or Microsoft Teams\).
When did SLNs come into core? I had to use some weird stuff before to have that sort of structure and to reference sibbling projects@
Python. The language where spaces and new lines will ruin your life
I've read that too, but I'll admit that I've never gotten it to work as I'd expect/hope. I've gotten around this in the past by using JWT for API-&gt;API calls. The JWT is signed such that all APIs are able to validate the token, and said Token is generated with the Username of `HttpContext.Current.User.Identity`. When the other API gets the credentials and validates in the Filter, it sets the Identity based on the username of the token. It's a little bit of work, but has some other advantages, namely you're less tied to windows authentication once implemented, easier reasoning about code in windows services/jobs that have to authenticate to APIs, and it's a step towards SSO.
I agree. I'm just learning, but his videos are probably my favorite ones I found so far. 
I have been using Visual Studio Code as a VS replacement for the last two months at my work. Here are my impressions: * Learning the command line commands to begin with is annoying * Learning the Visual Studio Code task file is even more annoying * The C# support is decent enough to use as a daily editor, but I'd still prefer VS with ReSharper for refactoring namespaces, and extracting methods. * The text editor shell is nicer than VS. Its not cluttered with menus and toolbars and the layout looks like it was actually designed for writing code and editing text. * It loads much, much faster than VS \(even if you don't have ReSharper\) * If you work with Angular, React, Vue, NPM, Nodejs, JavaScript, or TypeScript then the experience for those things is usually superior in VS Code * Its poor for editing Razor files. You don't really get any C# support in Razor files * I think the git support feels better integrated for VS Code. Being able to pull and rebase at the same time is useful and the tab for git is prominent and easy to find and it is always easy to see if you have modified files * Test explorer extensions exist, but are kind of weak and annoying to use compared to the VS test explorer. * Its possible to debug, but VS has many more debugging features. Typically I rely on simple breakpoints and logging when debugging from VS Code. * Learning the command line commands will make you more confident setting up your CI builds and deployments, as everything you learn to do with the dotnet command translates perfectly to server builds / deployments.
I would just combine that into one test. Having lots and lots of tiny tests just makes it harder to understand what's actually going on. And add some comments! [TestMethod] public void DFS_1() { //What's so special about this particular graph? Loops? Bi-directional paths? Tree-like? Fan-out then fan-in? D1.AutoCreateGraph_02_Directed_int(gr_int); //These paths should be valid Assert.AreEqual(A1.HasPathDFS(gr_int, 1, 5), true); Assert.AreEqual(A1.HasPathDFS(gr_int, 1, 2), true); Assert.AreEqual(A1.HasPathDFS(gr_int, 6, 3), true); Assert.AreEqual(A1.HasPathDFS(gr_int, 8, 2), true); Assert.AreEqual(A1.HasPathDFS(gr_int, 7, 4), true); Assert.AreEqual(A1.HasPathDFS(gr_int, 7, 5), true); //These paths should be invalid Assert.AreEqual(A1.HasPathDFS(gr_int, 2, 8), false); Assert.AreEqual(A1.HasPathDFS(gr_int, 4, 8), false); Assert.AreEqual(A1.HasPathDFS(gr_int, 5, 7), false); Assert.AreEqual(A1.HasPathDFS(gr_int, 3, 1), false); Assert.AreEqual(A1.HasPathDFS(gr_int, 3, 5), false); } 
Everyone learns different. I learned by reverse engineering existing systems. I then apply what I learned to my own stuff. Just take whatever path comes natural -- try as many diffferent ways to learn as you can. You'll find a method that works for you.
&gt;but probably not for any new projects. Unless the application needs to be very touch screen focused, you're almost guaranteed to be writing a WinForms app in industry in 2018. They're stupidly quick and dirty to write.
Ctrl-R ".Caption" -&gt; ".Text"
OP is clearly a fellow of culture.
One test per use case, happy path. Lots of asserts. One test per failure case. (They're harder to understand.) In this example, each type of graph would be a use case.
Pluralsight
Events are just callbacks, basically. An event subscription includes a reference from the publisher of the event to the subscriber of the event, but not the other way around.
I get it might still be useful for a quick and dirty project, but what kind of company is hiring developers for a new Winforms based product?
Thanks a lot for clarifying, I'll check if it works the same on unity