Ah makes sense, also is there any articles or forums you could suggest for me to read up on? 
http://lmgtfy.com/?q=Writing+a+reticle+app+cheat
Removed: Rule 3.
Maybe a `SemaphoreSlim` would help.
Removed: Rule 4.
Right on. A lot of people have no idea how much creativity goes into programming.
Hey, at least you'll still regularly find that experience useful as a programmer. In retrospect i'm glad I studied network engineering and not programming despite not enjoying it as a career, I would never have found the motivation to learn it on my own time and that experience is *constantly* useful, especially in the last couple years with devops, containerisation, services and CI/CD becoming more prominent.
Yes.
We wrote a few variations of some data stores on a project I worked on recently, searching for the best performance and cost mix for our business case. Table, blob, and docdb specifically on Azure. We ended up using different stores for different parts of the model, using blob for cheap storage and table for pointer/lookup data. As someone else pointed out in another comment, people probably don't bother swapping out data stores because they cannot easily do so due to past architect decision (i.e. technical debt), but also due to lack of knowledge and experience with other store types like blobs, files, tables, documents, etc. It's a lot easier if you are in a green field in the cloud. The store code was not really that heavy given what Azure SDK provides. 
Ok I will give it a shot. Thank you very much for responding!
You will need to add the following at the top of the page: using System.Collections.Generic; &amp;#x200B;
&gt; What I want is a struct attribute that says "All fields in this structure should be padded to 16 bytes" Generally speaking, that’s not what you want. GLSL vec3’s are 16-byte aligned despite their size, but they are an oddity compared to other types and user defined types. For example, a vec2 has 8-byte size and alignment, and you wouldn’t want to pad them out to 16 bytes. In my experience, adding explicit padding fields (which should be floats, NOT bytes) is better, and using them to store actual data is better. It’s also good to note that the alignment rules for vec3 are actually more complicated in some cases (depends on which layout qualifier you have specified), and even worse, some vendors have incorrectly implemented the alignment rules on some platforms. It’s not the worst idea to just avoid vec3’s altogether.
I have a responsibility. Response ability. I see problems that I have the ability to respond to that no one else has the ability to respond to (no one at my workplace). I use that ability. 
Worked like a charm! Thanks again to both of you!
On your startInfo, you need to set the RedirectStandardInput and RedirectStandardOutput flags. Then you can call proc.StandardInput.WriteLine("string"); and read from the StandardOutput stream.
I'm actually amazed at how dumb I am right now. Here I was so certain that `CreateNoWindow` was solely for suppressing the creation of a new terminal window. I guess it's true what they say when you assume. Thanks for the help.
As anomalousBits mentioned you need to redirect your IO. However depending on your use case you may not want to redirect input. With `RedirectStandardInput = true`, your host process will have to marshal input from itself to the child. This is great if you want your program to specify the input to child processes. But if you want your user to be interactive with the child (like a shell) you want to leave `RedirectStandardInput = false` (the default). This automatically forwards the stdin from your host process to the child process. `RedirectStandardOutput` should be true when you want the child process to output to the console window. If you wanted to implement IO piping such as `echo 'Hello World' &gt; out.txt` your shell would have to implement `RedirectStandardOutput` dynamically based on the IO pipe operations defined by your user. static void Main(string[] args) { ProcessStartInfo psi = new ProcessStartInfo { UseShellExecute = false, RedirectStandardOutput = true, FileName = "cmd.exe" }; var p = Process.Start(psi); while (!p.StandardOutput.EndOfStream) Console.Write((char)p.StandardOutput.Read()); p.WaitForExit(); }
Yes. Look into the [modulo operator](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/remainder-operator).
This is a classic db problem of how to represent a many-to-many relationship. Working without EF Core, we would normally define what's called a relationship or link table. This table would have two columns, Post_Id and Tag_Id. Each row represents one link from a post to a tag and vice versa. With EF, you should be able to do this implicitly by having Post.Tags and Tag.Posts defined in your model. Otherwise, I would say implement a PostTagLink class in your model and add it to EF. You should also go read the much more in depth explanation of relationships on the EF Core documentation. Just search for EF Core Docs.
Thanks, this is really useful stuff I didn't know before. I think I've run into the XY problem here, I'll be more explicit about my problem in the future.
Oh... I've just found the same issue on github: [https://github.com/aspnet/EntityFrameworkCore/issues/1368](https://github.com/aspnet/EntityFrameworkCore/issues/1368) &amp;#x200B; Even examples are almost the same... Thank you for your time, I think my question can be closed.
As someone currently trying to convince management to pick any db solution at all, why are you moving away from SQL server?
A pivot table? I thought that was some Excel thing. I've always used cross reference table. 
I'm sure you can call it what you like. I've also seen it called a join table.
Right. So why would anyone target `win7-x64` (a legal target) over `win-x64`?
Beats me. It should be discussed in the documentation, I'd look there first.
This ticket has been resolved. 
&gt; Tag.Posts defined in your model OP doesn't want this. &gt; how can I achieve situation where single Post refers to multiple tags but tags are not aware of Posts at all (because why would they? they are only tags, tags can be attached to anything) OP, you're looking for the override of `WithOne` that takes an optional relationship name, and you want to leave that null or not present to configure no other side of the relationship.
You could try MonoGame or FNA, they're both reimplementation of Microsoft's discontinued XNA Framework. Don't know about FNA, but MonoGame Supports DirectX and OpenGL.
Off topic here but did you manage rendering Text with OpenTK? I struggled with that for a long time but I could never figure out how it works. (Partly the reason why I'm using MonoGame now)
VS is a fully-fledged IDE. It'll be much easier to do anything in that.
If you're interested in libraries on the level of OpenGL, then take a look at \[Veldrid\]([https://github.com/mellinoe/Veldrid](https://github.com/mellinoe/Veldrid)). It's a portable graphics library that supports several different graphics API's (Vulkan, Metal, Direct3D, OpenGL), and has a modern design that's very similar to current-gen API's. It's a bit lower-level than alternatives like XNA/MonoGame, but it will also give you access to more modern features and rendering techniques.
Respectfully I see it a little differently. This definitely a very programmer focused view and as a programmer I understand. But the key thing is that devops is not about making the programmer do more. In fact there is no such thing as DevOps role, or technical aspect of DevOps. True DevOps is a culture that embodies certain beliefs such as shared ownership of the code and automation to remove any manual intervention. &gt;so they created the "DevOps" position because they didn't see the value in QA and since the CS person can do everyone else's job and they're "wasting" their time creating languages. In a true DevOps environment the team removes barriers such as "this is my code", "that is your tests". It's all about everyone contributing to ensure the end product is of high quality. It's also about removing mundane steps that a human has to perform. By writing code to automate that we achieve a much more stable system. While I realize some companies use DevOps as a buzzword to make programmers do more for less pay, but I assure you that isn't DevOps, it's just exploitation. True DevOps is a culture that ensures everyone works fairly and that change is driven by code , not by clicking buttons or typing commands into a shell when needed. 
I actually never got that far with OpenTK. When I was learning it I used ThinMatrix' Youtube series and he managed to get text rendering with OpenGL in Java with a text atlas and rendering the parts of the text atlas to a quad. [His video](https://www.youtube.com/watch?v=mnIQEQoHHCU&amp;t=414s)
You can't compile macOS, iOS, UWP or WPF/WinForms projects on Linux - the tooling doesn't exist, or the support is poor. So the answer is no, because the app you'll develop won't be cross platform. At best, you can get [Android](https://github.com/0xFireball/xamarin-android-linux) and [GTK#](https://forums.xamarin.com/discussion/137067/gtk-support-on-linux) compilation. 
No benefit really. I believe that the win8/win10 targets are meant to help diffrentiate between AOT (with -aot suffix) and non-AOT for UWP packages, and are generally not used for desktop .NET Core apps or packages. For publishing Linux applications, you'd target a specific platform. &gt; If I'm distributing binaries, do I lose anything by targeting only win-x64 (and maybe win-x86)? You lose all the benefits of a 64-bit application. 
What algorithm type is certPrivateKeyData using?
I've tried it on my local machine and a Server 2016 machine i can remote desktop in to, both give the same error. The base library I'm using is from [CodeProject - Licensing Solution](https://www.codeproject.com/Articles/996001/A-Ready-To-Use-Software-Licensing-Solution-in-Csha)
Yeah I'll probably end up running windows in a vm. Thank you.
Is this a question or a statement? 
it's a question. i'm looking for the shortcut.
I did this for a project I am working on at the moment where explicit declarations are a big part of it. They are implemented on model classes. The design decision behind this was that I wanted to define an interface of not only the services, but the data that is returned. The idea was that going forward our API could be implemented in many other languages (not just c#) and would not require an interop layer to c#. The developer could just translate our interfaces into their code base and work with our data regardless of whether the language supported things like generics. My colleagues were not fond of the design as it made writing code for it confusing, but after I completed the implementation library it made more sense to them. The code base is now capable of doing anything we need by just adding more interfaces and therefore not getting any breaking changes in our releases. We needed to be dynamic in our approach as the application needed to be as dynamic as possible. Tldr: it is a design decision to use explicit declarations and as long as you have a reason to back up your choice then I cannot see a problem with it.
Ok, now it seems to be working. I fixed it through Preferences &gt; Key Bindings and then I chose the Windows schema and there the short cut was \[ctrl + k, ctrl + d\].
Unity (engine) Monogame (framework) OpenTK - opengl bindings &amp;#x200B; That would be in order of increasing difficulty and control. &amp;#x200B; You can use vscode to edit your code with any of those options. &amp;#x200B;
It appears that this will not configure the desired many-to-many relationship. Can you explain how it might?
I'm assuming that by "3d environment" you mean something like a game engine? If so then Unity is probably the way to go. But if you're interested in generating 3d models and using code to programmatically help create the designs and geometry you should take a look at Rhino (cad program) + Grasshopper. It's an add-on that could be considered a "visual programming language", but it also has the option to open up a C# or python component and start writing code to process/manipulate the geometry right there inside the design window. Grasshopper and programs like it are having quite an effect on the architecture industry right now. 
Look for things that use a lot memory, use a lot of cpu, etc, during a performance evaluation.
I hope to solve 99% of the user's needs via this form style and the 1% writing completely custom forms. For your specific scenario this looks like it can be answered by this (options change based on your selection): https://jsonform.github.io/jsonform/playground/index.html?example=fields-selectfieldset The application that I plan to use this in is for hospital contracts. Basically we sell services to hospitals and the sales team tends to get creative. Now they really can, as anything new I can name the feature and then quickly create a form to store the data.
SharpDX, includes all the libraries needed for 2D and 3D work and also input devices.
Awesome! Just tested in a smallish solution and it just works. Thanks for this!
"use Java to make Java" lol. I could pick apart everything else you've said but I wont waste my time further with you so I just chose my favourite 
&gt; VSCode is FREE As is VS Community
Can confirm this. here its like 9/10 is java jobs. rest is c++ / .net etc. 
I would normally address things point by point, but its not really needed here. Everything posted is exaggerated, arbitrary, or based on what they have read without actually using .Net. For example: Yes Maven is more mature, but that doesn't make it better; dependency hell happens all the same. They take personal preference as evidence, and it doesn't work that way. Java is an awesome language, but it isn't better than something else because it's what they are used to or ignorant of.
Even then csproj files are not necessary for builds. csproj files are specific to Visual Studio's IDE and VS's build process. csc.exe (the csharp compiler command line) can build essentially any file(s) in whatever way you want, IIRC.
- Run a profiler over the thing. - Install ReSharper ultimate - see what it's static analysis says of the codebase - fix obvious bugs - Run dotMemory + dotPerformance over the test suite if there is one. If it's a web-thing - using gattling or jmeter over some user journeys with a profiler (again, dotMemory and / or dotPerformance are a good place to start). 
Somewhat inaccurate. Project files are for MSBuild *first* and VS second. VS does hook into .*proj files and does a bunch of things automatically concerning MSBuild, project files and target/prop files. I believe VS used "VSBuild" which is basically a wrapper around MSBuild. MSBuild can be extended to wrap a whole bunch of things through target and props file -- in fact, it is a certain set of target and props files that build C# projects using the csc.exe, VB projects using vbc.exe, etc. Basically, you can think of .*proj, target and props files as extensions to MSBuild.
&gt; And it will be years, if ever, before it handles automatic escape analysis. The initial implementation of [object stack allocation](https://github.com/dotnet/coreclr/issues/20253) will appear in .Net Core 3.0, with most of the key pieces in place before the end of this year.
even then, though, it is just a configuration for how to build a collection of .net source files, which is essentially a make file. MS just happens to use .\*proj files to also drive what parts of a project are in the VS IDE.
Thanks this is what I was looking for, will have a look at these!
.NET or .NET Core? They both offer code analysis tools, but you configure them differently.
.net already does some escape analysis, starting about a year ago. and with value types, there is less need of it. &amp;#x200B;
&gt; But that requires a lot of work by the developer and is rarely suitable for public classes in reusable libraries. is completely false. Bullshit. Pick damn near any library and you'll find that the vast of cases they don't have any value types exposed in the public API. And because of the copy semantics, you really do need to think carefully about how you design a value type. Hence the design rules such as don't make them mutable or larger than a certain size.
&gt; Java streams does perform better than LINQ, LINQ is more complex thing that can do more. This probably won't be true once .NET Core fully implements devirtualization. With that, we can inline those "expensive" delegate calls. I put that in quotes because using LINQ with a `.Where` call is faster than using an `if` statement when the variable is an `IEnumerable&lt;T&gt;` and the actual type is a `List&lt;T&gt;`. 
I think the real difference is function inlining. There are a lot of machine code instructions involved in a function call that the compiler can eliminate. Rerun your benchmarks with an `IEnumerable&lt;T&gt;` instead of a `List&lt;T&gt;` and you should see what I mean.
Java's alternative to LINQ isn't Streams; it's QueryDSL.
Ok maybe it's language barrier and I may have misunderstood, I'm not native english speaker. But that says `for public classes` not `as public classes` and I tought that means that they (user defined value types/ structs) are rarely used in public classes.
Ah yes, one of the many ways English is ambiguous. 
Is this on GitHub?
Nuget is way easier to use than Maven/Ant/Gradle/whatever else you need in Java. Out variables are useful if you need to return more than just one value from a method. Maybe you have a main result that most people care about, but occasionally you want to also return some side data that gets computed in the process of reaching your main result. I must admit, I don't use them very much at all.
https://github.com/ppumkin/PrestoCoverage
You won't find any of the features you're looking for, but VS code is legit for core projects and the extensions are top notch. You might want to check that out instead. 
The TryGet... methods are great example. They allow a simple boolean check in an if statement OR tertiary operator, while still getting the results of the TryGet... operation. With declared out params, you can do this with one line of code now. Now this is preference, in my opinion. Some people rather make an output type with a "Success" property and the "Value" property. Call the the equivalent of the TryGet..., return result object into a variable, check the Success property and then do something with result (Value property). If that is your cup of tea, I guess C# is not for you :)
The IDE doens't really create the projects/classes/do package management natively. Well...maybe VS does have a package manager, but it's better to learn how to do that from the command line. The .NET command line interface (CLI) is a very powerful and flexible tool that lets you get up and running with just about any kind of .NET project you want, including MVC. Make sure you have the .NET CLI installed, then make a new folder, open a terminal in that folder, and do `dotnet new mvc` or whatever kind of project you want. Then type `code.` and it will open up VS code for you. VS code has a built in terminal as well, so you can manage your packages that way. It's as simple as doing something like `dotnet add package dapper` or whatever packages you want/need. I develop on a Mac, and all I use is VS Code. I have a windows VM if I REALLY need to get at something in full blown visual studio, but the more I use vs code, the less I have needed to do that. 
Just off the top of my head it sounds like you might need to write some views in your database, keep the joins out of your C# codebase. 
 Sounds like your view does more than it should, and can probably be broken down into smaller parts, but anyway, the two main things I would think of is if you can just write multiple queries, and call the correct one based on configuration. Have one IQueryable main query, then just build filters and joins off of it. The other option would just be to write manual sql and replace the parts as needed. Entity Framework can be called by context.Table.FromSql($"select \* ...//");
Looks interesting. Out of curiosity, how to you handle if statements with multiple conditions? Is one condition enough to mark the line as covered? or all conditions are needed?
&gt;Just off the top of my head it sounds like you might need to write some views in your database, keep the joins out of your C# codebase. And how can I do that? &gt;As far as the controller receiving too many values, I am not sure that I understand that you're talking about. Controller actions should be able to accept upwards of 100 parameters. My problem is not the number. It's the fact that my code is becoming something like this, but WAY worse List&lt;MyModel&gt; myList = null; if(value1) { if(value2 &gt; 0) { myList = (from b in ......).Where(x=&gt;x.Field2==value2); } else if(value3 &gt; 0 &amp;&amp; value4 != "") { myList = (from b in ......).Where(x=&gt;x.Field3==value3).OrderBy(x=&gt;x.Field3); } else if(value3 &gt; 0 &amp;&amp; value4 == "") { myList = (from b in ......).Where(x=&gt;x.Field5==value3); } } else { ... } 
Yeah that doesn't look like any fun. What Dispersia said makes a lot of sense. Sidenote, please make sure you're putting your code in properly formatted blocks. It makes it much more readable. 
With .net core, dotnet add package Roslynator.CodeFixes dotnet add package Roslynator.Analyzers dotnet add package StyleCop.Analyzers dotnet add package xunit.analyzers (if using xunit for testing) &amp;#x200B; then checkout CodeAnalysis.ruleset, .editorconfig, and stylecop.json to configure them all... 
This is my next feature. I’m gonna try tonight to add a menu and some options. Thanks for letting me know how important that is to you. 
Yes, the book is pretty good. It also has a chapter dedicated to Razor. I will try to stick to .NET core from now on and not depend on .NET framework. I will also keep your advice on Javascript in mind. I have spent some time with it but due to a lack of JS projects, I haven't learnt much. So your suggestion is to switch to VS Code and use the CLI to run the commands and install packages, I reckon. If you do not mind, I have two final questions before I let you go: 1. Does VS Code provide comfortable packages for unit testing as well as mocking? 2. On which occasions do you decide to build a feature on *Vue.js*? Do you use it to build GUI and if not, apart from ASP bootstraps and layouts, how do you build your non-Web user interfaces? &amp;#x200B;
That is called branching. And this is the nicest feature of Coverlet that analyses the code visits. It shows which condition was run and which one not. 
I appreciate your time and comments!
Do you have access to the database? If so write a stored procedure that takes the inputs and handles the heavy lifting.
It kind of depends on how much you've covered in your class so far. Has the instructor covered "collections"? If so, that's where you should be looking.
Nope, have not gotten into collections. We have covered the very basics so far. We're getting into arrays soon, so maybe that tells you how advanced we are???
But that wouldn't work since the number and names of cars will vary each time the program is run, so in order to create an object, you must know that information beforehand. I hope what I'm saying makes sense lol.
Specified by user input?
Yes, the user decides how many cars and the types of cars they want for the program.
Here's the lowdown on collections: Arrays are OK, but they have a fixed number of data pieces. Collections are declared like List&lt;string&gt; modelList = new List&lt;string&gt;; Then use modelList.Add("Toyota Sienna"); They can index values like the first is modelList[0] (arrays start at 0) and you can use a foreach loop to iterate through or a for loop
See my reply on collections.
Ok cool, something I'm gonna have to look into. We have not touched on this yet, so it's a little confusing. Thank you
Just did :) Thanks
Recommendation: Let me DM you two c# books, they're how I learned in ~ 1 month (with previous Python experience)
Absolutely! Thanks man
Yeah, I don't know how your instructor expects you to store data without using arrays or collections. Some of the stuff can be done without storing any data: you can get the best MPG and the best MPG trip just by storing that information in variables and updating the values when you find a "better" value. But the total for each vehicle means you're going to have to store that information somewhere.
 public List&lt;StuffClass&gt; stuffs; public List&lt;StuffClass&gt; Stuffs =&gt; stuffs ?? (stuffs = QueryStuffs()); &amp;#x200B;
I mean I've done it both ways to meet the needs and it works amazing and scales. So people can downvote me all they want. If you don't need sessions and all that fancy stuff and you're just trying to spread load onto servers, you absolutely can do it client side. 
If you're trying to get something as simple as a full name, I would just use a getter-only property over a method. You CAN use either one and it is technically fine to do so, but if you have a very simple calculation that has both no input parameters and no long-running processes with in it, a property is much more understandable from the class consumer's standpoint. When I see a method, I assume something is going to happen to the state of my assembly. If I see a property, I generally feel safe that all I'm doing is getting some data and nothing else will be modified in the process. In addition to that, you can simply your getter-only property like this: public string FullName =&gt; $"{this.FirstName} {this.LastName}";
There's really no right or wrong here, it's opinion-based and it can change depending on the problem being solved. Generally I think methods should describe behavior and not values. Getting the fullname, eh, might as well make it a get only property. I wouldn't want setting a property affecting other things though - if I could set FullName and it would change First/LastName then I'd make it a method `SetFullName(string firstName, string lastName);` or something. It's too contrived, but avoid unexpected changes - a "set method" makes it clear that it will change something.
I am aware of the return expression, but I find it sometimes (e.g. in this case) easier to comprehend like I‘ve done. but thx 
Yes, a Property has the same cost as a method call so performance isn't a factor. I think the most important thing is the semantic difference. Getter Properties are for accessing the state of the object *without modifying it*. If a method meets this criteria, it should be a Property so that everyone is aware that it's safe to call. Note that many reflection libraries and even the debugger will access all public Properties of an object without fear that they might alter the objects state or need to be intialized in a specific order. If you use a Getter Method instead, you make no guarantees that the operation is idempotent.
and that's fine too
Mostly because it is dynamically typed (which has performance and correctness downsides) without some of the productivity benefits that you (might) get from Python or Ruby or a Lisp. All the languages mentioned are multi-paradigm these days. They are all more or less equally OO and functional. &amp;#x200B; Or if you think of it this way, if you don't mind typing out the types some of the time (function signatures) you do more or less exactly the same kind of code and syntax in java and c# and get a bit better performance, and compile time checking, and functions are more clear because the types are specified. So why not do that? &amp;#x200B; &amp;#x200B;
Dynamic typing is terrible for performance. JS is way too loose on what code is acceptable. C++ isn't even as strict on conversions as C#, but makes most things safe. JS does just about nothing, so you have to mess about with ===, and I didn't even learn about this until a while after I started with JS. I was just wondering why things were acting up. It's ok if you have a good linter, but the fucking linter shows me about 8 million errors from the third party JS files I include in my projects, which is annoying.
It's not even the dynamic typing or the performance or the weird consistency issues. It's these damned kids and their damned wheel-reinventing. Keep it off my lawn. Joking aside, it does seem that it's "cool" to do things that us "fogeys" did years ago, all while crapping all over the methods and means that were used back then without understanding the reasons for the compromises and design choices that they made. All the talk of "hipsters" and "Javascript idiots" and "unicorn startup dipshits" and whatever are really based around that stereotype of the ungrateful "kid" developer thinking he's better than he really is. That stereotype represents an affront to a long-standing meritocratic ideal that most techies share. I, personally, see it as a sign that the "immune system" that our kind generally maintain against entitlement is still functioning correctly. And I'm not even that old. There are several generations of "fogeys" that are even fogier(?) than me. A word of advice to all of the young, idealistic devs out there: go figure out how they used to do things and why. You'll become a better developer for it. You might even end up agreeing with the older generations about some of it (but never all of it!) once you realize that you're standing on the shoulders of giants.
That's really unfortunate. However, have you tried the most recent 15.8 update of VS - a bunch of these issues have been addressed. I'd file issues on [developer community](http://developercommunity.visualstudio.com/) for any such nuances and get them addressed!
Some of this is driven by NIST which mandates that all changes must take at least 5,000 people to implement, because you cannot trust a developer or IT person. They might go rogue! You want to debug that in production? Tough shit! You’ll need 16 people with an actual security clearance and if anyone sees any PII OMFG we’re going to have to shoot all of you! Some slight exaggeration...
Thank you for the quick reply! I think your comment and the one within the original thread answered my question. I was quite annoyed by the simplicity of my solution. Couldn't figure out why I couldn't just reference the .dll and as a result my namespace wasn't working. It seems like a great idea, but I get the vibe a lot of C# users are struggling to understand all the benefits and differences between [ASP.NET](https://ASP.NET) versions. The naming conventions they have been using really throw me off.
Ahah yes I know its called branching (no offense taken, I just found it funny :) What I wanted to know is if I have something like this: ``` if(a == true || (b == false &amp;&amp; c == true) { ... } ``` and write a test that sets a = true, is that enough to consider the whole line as covered? If not, will it tell me if "b" and/or "c" conditions (but not "a") need to be covered? I'm asking because I've used a few coverage tools in the past and none do that (as far as I know). They never report which exact conditions still need to be covered. This is probably a silly question but I knnow nothing about Coverlet and I'll probably only have time to play with this in the weekend :S
Visual studio enterprise edition has a great code coverage tool. But you have to have enterprise.
Hopefully, this isn't the kind of professor that docks points for people using concepts not yet covered in class. This is the only other way I can think to do it at the moment that doesn't involve collections: https://dotnetfiddle.net/ZRA8MC You should be able to extend that to take in trip length and gas used data and do the calculations to determine MPG for each car. 
First of all, the speed of dynamically types languages ain’t as much of an issue as you think, especially for Javascript. Thanks to the the V8 JIT compiler, well optimized Javascript code can reach similar benchmark to code written in Java and C#. Some other languages like Python also have JIT Compiler that boosts its performance, ie. PyPy. Second, the problem with Javascript’s type system isn’t dynamic typing, but weak typing, and theres a difference between the 2 terms Weakly typed languages like Javascript and PHP usually do implicit type conversions that give you loads of surprises and hard to detect bugs. Many coders don’t understand the difference between dynamic typing and weak typing, and this is an unfortunate truth of the IT industry. 
Duh. That's why I said to get both.
I'm pretty sure the 2 are identical.
I actually like a ton of the innovation that comes from JavaScript frameworks and communities, but they are reinventing the wheel a bit, I'm just too young to realize a lot of it. What I can't stand are languages that act inconsistently, there are too many WAT? moments in the language for me to ever feel comfortable programming in it, and most dynamic languages have sub-par IDE tools and refactoring due to their nature, their dynamic and interpreted, and I can't give that advantage up for anything. It's too late to replace JavaScript head-on, but it might come through a side channel like web-asm, or cross compilers, hell a ton of sites are already using Typescript. I just wish that ECMA-Script had an official compile-able alternative that had buy in from the community / standards guys, so that the the static, AOT, language could maintain lockstep in features with 'make-the-monkey-dance' JavaScript, and that impact of future changes would be considered for both, rather then as an afterthought.
&gt; I just wish that ECMA-Script had an official compile-able alternative that had buy in from the community / standards guys, so that the the static, AOT, language could maintain lockstep in features with 'make-the-monkey-dance' JavaScript, and that impact of future changes would be considered for both, rather then as an afterthought. That's more or less what Typescript is.
This is really what I came to say. Javascript is dynamically typed and it has some quirkiness....but as a language I could probably get on board. &amp;#x200B; The real problem I have with Javascript is my experiences with it's ecosystem. It always feels rough and unfinished to me. It feels like whatever it is I just learned how to do is no longer the right way to do it. There are competing frameworks and libraries and what flavor of the month changes almost monthly (or so it feels). &amp;#x200B; Now, maybe this is just me, maybe I'm a bad developer, maybe I have bad projects. I don't know. But whenever I do anything with Javascript it feels like I'm literally do the same thing I've done 30 times before, but each time it's a different way. Some company wants some website that does something basic like "Let's users submit a form" and have some dynamic feedback. And I'm doing that same thing again, but each time, it's different. &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 18 times before, but this time let me learn how to do it with LiquidLava" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 18 times before, but this time let me learn how to do it with spine.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 19 times before, but this time let me learn how to do it with meteor.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 20 times before, but this time let me learn how to do it with vue.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 21 times before, but this time let me learn how to do it with backbone.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 22 times before, but this time let me learn how to do it with ember.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 23 times before, but this time let me learn how to do it with knockout.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 24 times before, but this time let me learn how to do it with angular.js" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 25 times before, but this time let me learn how to do it with angular 2-6" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 28 times before, but this time let me learn how to do it with react.js/reactive native, react fiber" &amp;#x200B; "Awesome - let's learn how to make the same god damn form we've made 30 times before, but this time let me learn how to do it with Meteor" &amp;#x200B; etc...etc...etc... &amp;#x200B;
Given that you haven't learned collections yet, my guess is the teacher doesn't expect you to store *any* of the vehicles long term. Looking at the requirements, would it not be enough to simply print each vehicle's MPG as you go? Example: &gt; Vehicle? sedan &gt; Miles? 10 &gt; Gallons? 1 MPG = 10 &gt; Miles? 3 &gt; Gallons? 1 MPG = 3 &gt; Miles? -1 Total MPG = 7 Best MPG = 10 Vehicle? done Then you can simply store one running total per vehicle and reuse the same variables for the next vehicle.
This is pretty neat! A nice return to the fundamentals of how the language works what is behind all the syntactical sugar, and the opportunities that offers. Definitely the `IEnumerable` flattening strikes me as the most useful.
Isn't coding the best? 
Thank God I'm not the only one who doesn't use the sql like syntax. I always felt the way you do but i never put the time to congeal it into a coherent thought. When people ask me if I use it, I'd get that gnawing feeling of, uhhh should I? Because I don't like it but I will if I have to
For as long as I've worked with C#, It's nice to learn something new. 
Yes, I think you are correct. Still having trouble piecing the program together, gonna have to work on it more tomorrow.
wow this is actually something i have never seen before. i wasn't aware that the dictionary initialization syntax was generallizable. cool. 
In California, very few of the tech companies I know follow NIST. &gt; which mandates that all changes must take at least 5,000 people to implement, because you cannot trust a developer or IT person This goes against the DevOps culture which is to increase trust and communication. In a true devops sense, it's about shared responsibility and getting things done. If that means a developer can do something great, if it means another person is best for it, they should do it. &gt;I also see that DevOps is supposed to be what you are saying, and some places can't do it 100%, mostly because it's new and it really enforces the entire process and project management. Something most companies short-circuit. Yes I agree, but many places do it well and it's not really that new anymore. Lots of technology companies have adopted great devops practices. I do see it lagging in non tech companies and more enterprise environments.
The task wrapper isn't doing your code any favors. I'm not sure I see this as a good idea. Task.FromResult should be avoided in production code whenever possible (it may be inevitable for unit tests). Even if you must you should do this only once at the point of intersection of your async code. This technique seems to encourage littering a Task wrapper all over your runtime. The examples are extra trivial and shouldn't be wrapped at all (awaiting a string or int, wtf?), but even if they were nontrivial it seems like a poor thing to have there as you'll end up using it as a crutch. 
and typescript adoption is pretty large, angular is typescript these days, it's on the vue roadmap to rewrite in ts. react even has flow, which is a movement towards typing. turns out types are a good idea. 
I find it useful for linq joins tho, as the extension method arguments are pretty overloaded and obtuse. I started getting used to it recently tho. Also, I rarely do linq joins.
This looks like a really cool idea especially when trying out TDD.
For your example I think the property getter is fine and probably what I'd do. If I knew it was likely going to change to a call to another class to do something like run business rules on name concatenation logic (ex. culture variant logic to concatenate or calculate the full name) I'd use the method so I didn't have to break the interface later. You could always change it and fix, but in larger systems using your nuget Person package that could be painful. I doubt this is a concern for you, though.
I think it's important to avoid performance tuning on code that isn't performance sensitive. If you have a tight loop copying data, by all memory use `memcpy` and `cpyblk`, but business logic that is written outside of tight loops should be written with readability and maintainability as the #1 priority.
Yeah that was the joining was the only time I've ever experienced a need for it. Coincidentally, that's the only time I've ever used it also lol
OP had a setter on his FirstName and LastName properties, so this sort of lazy loading would break expected behavior. 
Use the following variables and then tie the correct logic. Current vehicle Miles traveled Gallons Used Total MPG Best MPG Best vehicle Collections aren’t needed at all for this problem.
I'm not calling for anything resembling premature performance tuning here. This is simply bad practice right at the start. Don't do this! It's bad code. I was trying not to be a jerk in my post above, but it's really an indefensible technique.
The example for passing by value uses an int[], and arrays are reference types.
He wasn't recommending techniques, he was showing how understanding the mechanics behind syntactical sugar can open the doorway to interesting and unexpected capabilities in the language. 
All of this code is terrible performance from the start. It isn’t even pre-tuning code, this is pre-detuning code.
Coming from C# JS feels like an absolute mess. Data structures that can mutate, functions that can be assigned to fields or WTF that is. Then add on the top some crazy framework with custom tags embedded in bizarre HTML embedded in JS and top it off with some ultra-weird package manager and command line. It feels like a dumpster.
Great article, I learned quite a bit.
This was a great read! I love to see this type of stuff. You never know when having some of these tricks in mind could help you.
For my applications, I'll have the paging/sorting but also at the very beginning, an option to download the data as CSV. I allow them to request a total number of rows (usually 500--&gt;5000 depending on file size. For applications that may require more rows, I create a background job to create a blob of the data and store it in Azure storage (can be anywhere) and email them a link.
I think the point of this article is wooshing eveyone. It's just experimentation..not a best practice article.
You again! Please stop trolling!
Thats a valid point but I didn't give that example for the first name last name thing. In my context that pretty much cannot happen.
Yes but his version is shorter.
I’ll some tests on this. I’m curious my self. 
Hence the first like of my description. “Not an enterprise?” ... is a direct attack at test coverage being a VS only or paid for feature when really it should have at least basic functionality from Community ! 
Exactly. The width of these modules can vary, but they should be as independent as possible from the rest, and should own their own data. E.g. two modules shouldn’t read or write to each other’s tables. Instead should they communicate with each other through some defined interface. 
[https://github.com/tangarm/Tangram/raw/master/Assets/Tangram%20Concept.png](https://github.com/tangarm/Tangram/raw/master/Assets/Tangram%20Concept.png)
Yes LINQ query syntax is awful, fluent is the way to go. Mostly because lot of the times you still need to use an LINQ extension methods with it. If I remember correctly I watched video once where Mads Torgersen (current C# language design lead) said that it was mistake to add it to the language.
[https://github.com/tangarm/Tangram](https://github.com/tangarm/Tangram) &amp;#x200B; Tangram is a desktop software glue. Unlike traditional programming language bridges, it focuses on connections at the graphical interface layer. Tangram can only be used in the Windows desktop environment, but this limitation may be broken in the future. Tangram is aware of a common scenario in Windows development. A pair of size-associated windows, the size of the child window is only controlled by the parent window. At this point, Tangram can add new elements to the program by changing the relationship between the windows. And it all happens at runtime. This turns a program that could only be modified at compile time into a container that can be changed at any time.
While you can have dynamic typing without weak typing (Python does for instance), you can't have weak typing without dynamic typing.
That's another thing, even pure JS has changed over the years, in part because there were things that the standard didn't cover and as such, each JS implementation did its own thing. There's a reason why up to maybe 5 years, everyone used jQuery.
I hope it helps you out. This is what annoys me that people want to learn testing but then they have nothing in the IDE to help them identify coverage. Increasing coverage is also a very valuable skill and it helps you write better code later. Anyway, please consider rating my extension on the marketplace if you can. I am working on more, better features.. let me know if you have any issues at all.
v 1.16 (coming soon) will have options menu added where you can select the colours. If it all works well for you please consider rating my extension on the marketplace if you can.
Please consider rating my extension on the marketplace if you can. It would really make my day to see 5 star ratings. If you think its not 5 star please let me know why and I will gladly try and sort that out.
&gt;Hence the first like of my description. “Not an enterprise?” ... is a direct attack at test coverage being a VS Enterprise only or paid for feature when really it should have at least basic functionality from Community ! &amp;#x200B;
`Task.Run` uses the thread pool, so it doesn't have to start a brand new thread every time. There is still some slight overhead and delay, though. The exact timing depends on how busy the thread pool is and what the rest of the system is up to. Usually you can expect it to be near-instant, but in high load scenarios it could be arbitrarily delayed. There is no guarantee in what order the tasks will run.
Web API runs within a web server. That's why the tutorial you followed uses JavaScript as a client - the Web API is not actually an application itself, but it allows other applications, typically web applications, to access data. So, to deploy it, you need a web server. I believe most web servers support Web API, but Microsoft IIS is the obvious choice. Depending what version of Windows you have, the installation of IIS might be as simple as choosing to install it from the Program And Features section of Control Panel. Once you've installed IIS, [this guide](https://docs.microsoft.com/en-us/aspnet/web-forms/overview/deployment/visual-studio-web-deployment/deploying-to-iis) will talk you through how to deploy your application to IIS.
I might see your problem now. &gt; interfaces are not supposed to imply any implementation specifics Means that interface shouldn't tell you **how** to do it, but we still need to agree **what** to do. &amp;#x200B; IShortestPathAlgorithm.FindShortestPath(...) - I don't care if you implement Dijkstra, Bellmann-Ford or A\* but it is pretty obvious that I want you to give me the shortest path. &amp;#x200B;
How does this play with visual studio? &amp;#x200B; We currently using Xunit to do the testing with Moq to mock stuff. I am using the standard "Test Explorer" window within visual studio to run our tests locally. but most of our projects are .Net Framework. &amp;#x200B; Am I right in thinking this is only really for .Net Core? I did installing it but then on running my tests in my framework project it broke the tests. &amp;#x200B; **Shorten error as I have since uninstalled it** *Could not load file or assembly "Moq" Strong name signature could not be verified. The assembly may have been tampered with, or it was delay signed but not fully signed with the correct private key* &amp;#x200B; Any of my tests which was using Moq was then failing with the above error. So I think you need to fix this bug so that if it cannot work with framework project (or is it Moq that is the issue?) that it doesn't break these other projects and simple doesn't run. 
Thank you. &amp;#x200B; I originally started out with ASP.NET Core, however I needed the [ServiceController](https://docs.microsoft.com/en-us/dotnet/api/system.serviceprocess.servicecontroller?view=netframework-4.7.2) class, which looked like it was not fully supported in [ASP.NET](https://ASP.NET) Core, thus I switched back to [ASP.NET](https://ASP.NET). &amp;#x200B; Could you tell whether I'm right or wrong on this (regarding the support)? Can I somewhere check which methods of a class are supported by [ASP.NET](https://ASP.NET) Core?
Removed: Rule 3, Rule 7, spam.
AMAZING...
Hi This does work with Xunit, NET 4.5+ and Core 2.0+ The way Coverlet.Core works though, is that is changes the DLL to be able to add instrumentation code so that it can work out which parts of the DLL correspond with the source code. This is the same limitation as we cannot gather line coverage during Debug with Coverlet because Visual Studio says that the source has changed and no symbols could be loaded. That was an easy fix to not track visits during debug.. it was pointless any way. It seems like Moq does some checks to the DLL to make sure its not been changed? I am not sure but it does not like whatever Coverlet.Core is doing. **I have a bad feeling that Moq will be in the Not Supported list with this coverage solution. ** When I get some time I will look into whats going on but it also greatly depends on the author of Coverlet.Core and how it is that users from his repository have not run into this problem
ServiceController is a part of .NET Framework and not ASP.NET. I believe that .NET Core supports ServiceController (on Windows only, will fail on other OSes) so ASP.NET Core should have access to it if you import the [Nuget package](https://www.nuget.org/packages/System.ServiceProcess.ServiceController/ ) 
The important part was having buy-in from the ECMA community / standards. If that's TypeScript then I wasn't aware.
Not sure about the other extensions, but I'll definitely use `IEnumerable` flattening. It's very useful in JavaScript (`[a, b, ...getMore(), d]` and I've been lamenting the fact, lately, that I couldn't do the same in C#.
Make sure you include action in your route definition
Have you tried googling C# interactive tutorial? I came across [this one](https://www.learncs.org/), among others, which [appear to closely mimic](https://www.codecademy.com/learn/learn-python) the CodeAcademy format. Given, they are free variants, so the quality likely isn't as good.
If you're already a competent coder and just want a quick overview on the syntax, then I can recommend the [x in y minutes csharp guide](https://learnxinyminutes.com/docs/csharp/) which is essentially one massive commented example.
Second Bob Tabor's course. It's well broken down so when you get to the section that's like "Let's learn the difference between int and long" you can just skip those basic sections and move on to more engaging topics.
What do you use for your background jobs? Do I need a queue and a separate worker or can I simplify that?
I've been writing C# a long time, but not keeping up with new features. Looking at "x in y etc" was illuminating, thanks!
Is something preventing you from skipping ahead in the tutorial past the stuff you already know?
Just read the programming guide if you want a proper understanding of the language without having to dig through a bunch of tutorial fluff.
Do you know any other languages? Try googling "C# for _ programmers". These guides are often way more sparse as they understand that you don't need the basics of programming.
Your code does not even compile. Line two is invalid. Assuming you wanted to write: int? a = 3; int? b = 4; var c = a ?? b; Then `c` being of type `Nullable&lt;int&gt;` is just logical. After all the content of `b` could be `null`, so using `int` would be invalid. The compiler does not change the type based on compile-time knowledge.
Aside from the time it takes to find the right starting point, the more "advanced" parts of the tutorial are still going to spend more time explaining the concept when you just need the syntax and language-specific quirks.
Because `GetType()` gets type of T in Nullable&lt;T&gt;. If you try to use `GetType` for `a` in `int? a = null` `NullReferenceException` is thrown.
No offense but it sounds a bit lazy to me. Just scroll around the videos until you get the parts you need. &amp;#x200B;
UP UR BUTT
channel9 is prob the best way to keep up with the headlines and get some meat as the industry changes.
Oh Bob. The guy cracks me up. He's like the Mr. Rodgers of coding. I've never seen the guy anything but pumped to be teaching you today.
I use a queue for it because it allows me to keep track of its progress as it goes. I’m sure you could spawn itself off on its own thread as a background worker but I allow someone else to handle all that management — if I’m using Azure (which is most cases), I will use Azure Web Jobs or Azure Functions to trigger off the enqueuing of the message. If I am using on-premise, I have had great luck with Hangfire. Quartz.Net is very popular as well so could be worth investigation over Hangfire. Hope that helps
Thanks, that made me go back and change my comment to say "fluent interface" instead of "fluid interface", which I have no idea why i typed that originally. My brain: "fluent" - my fingers "fluid" \*shrugs\*
Pluralsight 
He's like a dad who's excited his kids finally got into the same hobby he's into. He doesn't want to scare you away, but he's gotta cover the basics
There’s plenty of good books on amazon. Seriously, if you’re investing the time, do so with quality materials.
It sounds like you'd be better of with a book or a webpage than a video.
My question is how does compiler deduces the type to "int" in the second case.
C# is great but it’s even better when used with a Design Pattern. Try and search for C# design patterns and maybe some code kata 
Because many people who want a tutorial haven't programmed before or did so in a language with dynamic typing?
The channel9 videos are also a great source of nerdcringe. Whenever my girl comments I say “you’re watching the MOST normal of us.”
Give us the whole listing. There is no obvious reason for this behavior.
Because the result of the expression can never ever be `null`. If the first argument is `null` then the second argument is used, and the type of that is `int`.
Overall, that's pretty good. But all the "static" keywords made me shudder in horror. One might think from this example that using static classes and methods is encouraged. At my current job, almost every serious bug that caused us headaches and lost revenue was due to some programmer creating a not thread safe usage of static.
You have two different classes and each have their own instance variables derived from `C_Game`. Meaning both `Character` and `History` have different life, name, etc. What you want is to make your variables static. But this isn't what inheritance or abstract classes are for at all, if you want a bunch of globals either make `Game` a static class or a singleton. And drop the C_ prefixes.
This is pretty dang cool. Looks like my code coverage is actually pretty good, but there's a few things I should add.
If it's a pure method static is fine. Think about Math.Min etc. Problem is that unexperienced developers make things static that shouldn't be
Thenewboston 
And you can get 3 months for free with a visual studio account 
Make sure to use the CsvHelper library.
Put it in the body of your request and use FromBody instead. Also, if you're only accepting https connections, the URL should only be available to you and the client. There's a common misconception that URLs are able to be sniffed by 3rd parties even when using https.
Why would a History object have a life total? Is every Character a Game? Is every History a Game? It looks like you're applying inheritance when you should be applying composition. A game class with a character property and a history property makes a lot more sense out of context (I don't have any of the details of your design, of course).
Pay attention to ArmDot. Great tool I do not think that it is advisable to write the generator manually. This can take a long time and not bring the desired benefits. But you decide &amp;#x200B;
oh i read it incorrectly. of course its obvious. they are two separate instances! two completely separate objects! if you declare the variables with keyword static, all instances will share them, so you will achieve what you wanted. its, however, seldom used practice for very special cases.
I have no idea offhand, but I do know how you can cheat off the compiler: Write some basic C# code that includes a method with an out and/or ref parameter, compile it to IL, and then use [ildasm](https://docs.microsoft.com/en-us/dotnet/framework/tools/ildasm-exe-il-disassembler) to read the IL that's emitted by the compiler for a method with an out/ref parameter.
 public abstract class FooBase { public int whatever; public static int whatever2; } public class FooA : FooBase { } public class FooB : FooBase { } public class Program { void Main(string[] args) { FooA a = new FooA(); FooB b = new FooB(); a.whatever = 1; a.whatever2 = 2; b.whatever = 3; b.whatever2 = 4; Console.WriteLine(a.whatever.ToString()); // displays "1" Console.WriteLine(a.whatever2.ToString()); // **displays "4"** Console.WriteLine(b.whatever.ToString()); // displays "3" Console.WriteLine(b.whatever2.ToString()); // displays "4" } } Make your abstract base class fields static and it will solve your issue. Learn when to use `static` and when not to. There's a reason why Visual Basic calls them `Shared`. I don't often praise VB due to its annoyingly verbose syntax, but Shared is one of those things that I think it actually got right.
I'm just trying to make sure I do things in secure manner. So essentially I want to hide it from prying eyes.
The word "nerdcringe" is also a great source of nerdcringe.
&gt;x in y minutes csharp guide long time C# dev--never knew about that site. thanks!
I like the ones that do that but then start using advanced frameworks and shit without skipping a beat or providing context.
Thanks for the explanation
My vote is go to YT and look up Derek Banas. He has a bunch of "Learn in one video" things. C# one of them. Takes about an hour and some change.
Your output in that case, assuming you're using `Console.WriteLine()` should be: JohnGreen With no extra white space. I assume your _actual_ code is different than what you posted, though... string firstName = "John"; string lastName = "Green"; string fullName = firstName + " " + lastName; Console.WriteLine(fullName); Console.WriteLine("next line"); This outputs: John Green next line So I'm not sure what your actual issue is.
Double checked locking. What else is there?
He doesn't mention `GetType` anywhere. I'm certain he asks about the compile-time type, not the run-time type information.
I forgot to say it's an model object.
Recursive nerdcringe even
This is actually why I hate video tutorials. Traversing the videos to find the right spot is so much more difficult than just skimming an article.
Furthermore, this is part of why mutex(es?) and atomic variables are necessary
Its not a tutorial, but I would recommend buying C# \*.0 in a Nutshell. This is just a reference book, but it gives a great overview of everything you can do with C# without getting into painstaking detail. Really, I would just recommend picking a personal project to create using C# and just using that book and a search engine to figure it out as you go. If you are coming from another C family language you really shouldn't need much to get going.
I made the mistake of installing this while reorganizing my solution. That's 100% on me but I wanted to let you know that [code coverage tools](https://github.com/nunit/nunit3-vs-adapter/issues/519) break NUnit. Spent a while troubleshooting that one... I was getting the "System.Security.VerificationException" when running tests.
gr8 website
Yup, thank you all it was the static thing, my programming teacher already explained that to me. 
Search “Chris Lewis” on YouTube - you should find him easily, and he has tutorials on building a social media website using c#, among other things! He also live streams all his lessons (he’s a teacher) and quite a few are programming!
 string fullName = (firstName + lastName).Trim();
Why would people downvote so much and not say why ? Seems a bit demotivating ;( 
There's bit of outdated, not accurate, info in there. For example Xamarin releases platform level features almost the same day as they're available in the native SDK because they get internal dev previews and write the bindings ahead of time.
Get an actual book. Don't rely on tutorials, they are in general pure garbage.
With reflection you can access attributes programmatically and treat properties/classes/methods differently based on the presence or absence of an attribute. Programmatically accessible metadata is a completely different thing from code comments.
So if you have two separate character objects, you want them to have the same life total?
What have you tried? Can you post your code so the community can help you out give you some pushes in the right direction?
I'd love to see it! It's always good to show your existing code.
Pastebin okay?
You betcha. 
Alrighty, [here it is](https://pastebin.com/d0dThx8m) Like I said, I'm pretty darn lost and probably not even close, so don't poke fun! haha Ok, sooo I know that I need to ask for type of car, miles driven per trip, and gallons of fuel used. If the user enters "done" for car, then they are done with everything and I need to print out the car with the best overall MPG and the car with the best trip MPG. If they don't enter "done" then I keep asking for more cars and trips while also returning MPG for each trip entered. Now if they enter a negative number for miles in a trip, then that just ends that specific car and moves on to the next vehicle. 
In the second example, which he asked about, the variable is non-nullable. So even with multithreaded code it will never be null.
No actually there al thing here is that there is a class that generates a Life to the character and there is another class that makes the fighting with a monster happen I needed to be able to subtract some of the Character life when a monster strikes him, and also make sure that the character didn't die
Will do!
Okay that makes sense. A few notes: - You have the variable names there, bestCar/bestMpg, so you would want to compare one of those variables for EVERY user entry to see if it is in fact the BEST of all the entered variables. - If the user will be entering in different car names, put in some validation after entering in a trip asking "Would you like to add another trip" if yes, continue with the same car, if no ask them "Would you like to add a different car?" if yes, take them back to the beginning and then the user can enter a new car. If no, then with the data collected it can figure out the bestCar/bestMpg - Lastly, what is exactly is running miles for? How come you are adding count?
SLC Utah as well :) Looking for c# developers to help develop our systems management tool called Cloud Management Suite. We use C#, Sql Server, WiseJ, Dotnet core for our cross-platform agent, [asp.net](https://asp.net) webapi, websockets, WebRTC, tons of cool tech like an a remote control tool like Teamviewer that works pretty much any browser.
I am sorry but I am not sure why you are getting that error. I just added a variety of basic tests targeting 4.5 to Core 2.1 and they all seem to run. The \`security.verficiation\` sounds like some signing problem maybe? If your DLL is signed.. Coverlet changes it so it wont match anymore and it wont run. Do you employ anything like that?
Oh yea, forgot to mention. Once the user is done entering trips for each car and they enter a negative value to move on to the next vehicle, we're supposed to print out the overall mpg for that car. So the running miles is to calculate the total mileage for all trips and the count is there to count the number of trips so then I could calculate the car's mpg. 
OHHHHH OKAY. Hahahah alright I see the problem with that now. You have 'runningMiles' = 'miles'(Miles for that trip) + 'count'(Total trips). Essentially what you are doing is overwriting 'runningMiles' every time, you aren't adding stuff to it. Question: - Why don't you have a variable that is adding up all the miles for reach trip? - Why not a variable that adds up the MPG every time it is entered in? (Ex. int TotalMPG += mpg ~~~ This adds mpg to TotalMPG every time it is entered in.) 
It is complete nonsense. If you need to return a task as per the interface, but don't need to do it async, **don't** make the method async, use FromResult. This is exactly why `async` is an implementation detail.
Well, let's see. - If you are trying to get Average Miles Per Car, you would to runningMiles += miles, then if they do a number below 0 it would be runningMiles/count. - If you are trying to get Average MPG Per Car, you would want runningMPG += mpg, then if they do a number below 0 it would be runningMPG/count. 
So let’s say I have a command console that invokes methods from a user input string. Let’s say each method has a description attribute. For example: [ConVarDesc(“Allow rendering of 2D elements”)] public static void Draw2D { // Implementation } The command would be *cg_draw2D*. It’s acceptable to use attributes for setting each commands description which is shown when the user types the command? Would this be a good way of using attributes?
Yea not really sure. That is what I have and not getting any exception like that. You are running VS 15.8+ ? Is it VS Pro or Community? Very strange issue
For some reason this feels like r/restofthefuckingowl material. 
Sweet, I forgot about those types of attributes, especially in Unity. But wouldn’t a simple if statement that checks the strings length be more than sufficient especially since it doesn’t need to use reflection?
Do you have an example on how that would be structured? I’m always open to learning new and better ways.
Yes, but then you would have to implement those validation rules in all the places you wanted to that validation, or have a custom validation library for your specific rules. Multiple parts of the .net framework (like [ASP.net](https://ASP.net)) use DataAnnotations too, so models you write for you WPF application can be used in an [ASP.net](https://ASP.net) application and it will automatically provide a validation framework. Another common use for attribute is for Unit Tests, many unit test libraries have been known to use the same attribute to identify which methods in a class do initialization, which ones are tests/facts, etc. As for the reflection, usually a good library will only reflect everything it needs once and cache it in an internal data store. So yeah, it may be more efficient to write an if statement, is it so more efficient that it outweighs a framework that does it for you with just metadata on your properties?
VS Pro, v15.8.6 So weird. It was definitely some interaction happening between your extension and NUnit. I can investigate further at a later date since its easy for me to replicate. Gotta get down to crunching out a bit of work though.
You can't hide something that is in the browser from the eyes of the browser user unless you encrypt it, but that means you are using it like a cookie which is very restrictive.
Yes. Now I'm trying to send the data to a PDF file with MigraDoc &amp; PDFSharp. 
Thank you! I'm using MigraDoc &amp; PDFSharp but I'll try this solution as well.
So I guess if we're really concerned we just run it through our encryption algorithms.
Different folks have different learning styles. Plus, text articles can have the same problems. Gotta dig through a bunch of paragraphs of unnecessary explanations. Maybe a number of different pages, and so on. On an anecdotal note: I have recently been assigned to a project involving some legacy technologies. And the only tutorials I can find on them are video tutorials. It's like no one ever bothered *writing* about these technologies. I *do* prefer written tutorials, but I have to take what I can get.
Hi v.1.16.2 is now out. You can set colours using alpha hexadecimal **Tools &gt; Options &gt; PrestoCoverage** Just plop your colour in, if it the box on the right updates.. It is saved and applied. (Partial Coverage not implemented yet.. coming soon!) I wanted to add a Colour Picker... but yea. WPF.. thats asking tooo much you won't believe what a nightmare it is working with Colours and WPF.. Enjoy!
&gt; I needed to be able to subtract some of the Character life when a monster strikes him Why would you need a static property for that? Don't you have a character object in whatever context you're doing that operation in? &gt;and also make sure that the character didn't die You can either do this every place you change the character's life total, or you can have a single method on the character class that sets the life total and does the death check. The latter is usually less likely to result in bugs.
Hey, so I am running into an issue, maybe you could help. So when you enter a negative number for miles in a trip, the program is supposed to stop with that car, print out that car's overall mpg and then move onto the next car. That is not the case though. Even when I enter a negative number, it just moves on to ask how many gallons of fuel used and it does not continue on to ask you to enter another vehicle.... 
I'd use LINQPad personally, a bit easier.
In your current code with what you posted. The order of operation is the following: 1.) Ask for MILES 2a.) Ask for FUEL 2b.) Calculate MPG (MILES/FUEL) 3.) Print out MPG for that trip. 4.) Check to see if MILES is negative. You have to change your order of operations around so your issue doesn't happen :)
 public class CommandLineOperation { public string Name {get;set;} public string Description {get;set;} public function&lt;string[], string&gt; DelegateToInvoke {get;set;} // This would probably end up in a different class public static List&lt;CommandLineOperation&gt; AvailableOperations { get; } = new List&lt;CommandLineOperation&gt;() { new CommandLineOperation() { Name = "draw2d", Description = "Allow rendering of 2D elements", DelegateToInvoke = (args) =&gt; { // Implementation: parse args, return result } } } } public static class CLI { public static string AcceptCommand(string enteredCommand) { string[] commandTokens = enteredCommand.Split(' '); string commandName = commandTokens[0]; CommandLineOperation operation = CommandLineOperation .AvailableOperations .FirstOrDefault(op =&gt; op.name == commandName); if(operation is null) return $"{commandName} is not a valid command"; var argsArray = new string[commandTokens.Length - 1]; Array.Copy(commandTokens, 1, argsArray, 0, argsArray.Length); return operation.DelegateToInvoke(argsArray); } } Something like that.
I pretty much use only the MS docs these days.
I’m an experienced dev but didn’t know anything about C#. C# In a Nutshell from OReilly did a great job explaining things without stuff like “here is how an if statement works”. 
Removed: Rule 4. You'll probably have to do a better job of describing the behaviour you want; it sounds a bit ambiguous as it is. It would be best if you made an attempt as well, include your relevant code, and explain in what way it's not working.
Awesome! :-D
Removed: Rule 4. Please include the platform you're using, how you're outputting the text (what control or styling you're using), and ideally a minimal program with which we can reproduce the issue ourselves. At the very least, provide code that compiles and is formatted for viewing on reddit (indent each line with 4 spaces). If I had to guess from what you've said so far, perhaps you're outputting to an HTML or WPF text control that's applying some sort of justified text. See this example of "Justified (flush left and right)" here: https://en.wikipedia.org/wiki/Typographic_alignment#Examples
Pluralsight is great. Here are my course recommendations for C#: https://www.reddit.com/r/csharp/comments/8l4n01/what_courses_do_you_recommend_taking_on/dzghw8o/
The few times I've done IL emission, this is how I answered most of my questions. Just ask the compiler!
Ok I got that fixed!!! but a few more issues.... lol I could post my updated code if you think you may wanna help :) The issues: The count++ is not working because I get 0 for the car's total mpg everytime. Other issue is, when I type "done" for car type, it is not ending the program and outputting the car with best mpg and best overall trip mph; it continues on to ask how many miles instead.... this is a frustrating assignment lol.
Post away! I’m happy to help :) 
I’m typing on my phone so the format will be a bit off, sorry! A few things to note about the problems you seem to have: - You have your while (car != “done”) already in an if( car != “done”), so I would just get rid of the if statement completely. - The reason you are having the issue for entering “done” at car name is beginning your order of operations is all messed up! If I were you, I would have something like this to start off Bool continue = true; while(continue = true) { //Ask for the car name If (car != “done”) { //do all the miles and fuel fun stuff } Else { //this is if they do enter “done” continue = false } } //if continue = false print out best car and bestMPG
Ok awesome, gonna give that a go. Any tips on getting the counter to work?
The counter works. The reason the MPG prints 0 every-time is because of this line If(mpg &gt; bestMPG) { mpg = bestMPG } Would you want to change MPG if it’s bigger than bestMPG?
For me it was the repository pattern (is was the first time I heard of it) and the dependency injection (I just knew that something called "dependency injection" existed but nothing more (never even search it on google before that)) so I had to learn more before I understood it, I felt so stupid watching it because I literally understand only 3% of what I watched, but after a few courses I rewatched it, I understood over 95% of it after that, so if anyone else comes across this comment at that specific time, please know you're not stupid and it just takes some time (a couple of days in my situation it was), it may sound corny but I really felt stupid and was like "how can I continue learning if even this "basic" stuff looks like quantum computing to me
I see Pluralsight get recommended a lot around here, but I personally didn't like it at all. They talk way too fast, and barely explain anything at all. The Bob Tabor course that is recommended officially by Microsoft is better in every way. That, and books.
Agreed. That's one of things I get mixed up on currently
I use a queue for it because it allows me to keep track of its progress as it goes. I’m sure you could spawn itself off on its own thread as a background worker but I allow someone else to handle all that management — if I’m using Azure (which is most cases), I will use Azure Web Jobs or Azure Functions to trigger off the enqueuing of the message. If I am using on-premise, I have had great luck with Hangfire. Quartz.Net is very popular as well so could be worth investigation over Hangfire. Hope that helps
Where do you feel you're lacking? Perhaps you're not lacking on the language but rather opportunities to know when to use them. Investigate your past systems and think about how you may implement them with your current knowledge level. If you don't have your own systems, look into projects you're fond of and see why they implemented it that way, and if you differ. You reach a point where you understand enough and gain deeper knowledge of something when you need. 
I finished the the Getting Started tutorial, but I think that Veldrid is way over my head. I don't really know how to make anything of my own and looking at some of the example just further confirmed that I have no idea what barely anything does. Even though I don't understand it, it seems to be very capable if you know what you're doing. Thanks for sharing!
This is an amazing way of teaching a language and its syntax. Thanks for sharing!
the problem with relying on only locking is that while locking makes an operation atomic, the range of code that needs to be atomic may differ from the point of view of different parts of the program. for instance, having atomic get and atomic put operations does not guarantee your `update` operation is atomic: ``` lock get do getting unlock get lock put do putting unlock put ``` surrounding this with a level of locking makes the update operation atomic from the point of view of other update operations: ``` lock update lock get do getting unlock get lock put do putting unlock put unlock update ``` but any operation defined only in terms of get and put will not observe the lock imposed by update. for instance, this implementation of swap() does not play nicely with update() -- update can sneak a value in that is not read by get() and is immediately overwritten by put(). so, as a concurrency primitive, this is subtly broken ``` swap(x) { lock(swap) existing = get() put(x) unlock(swap) } ``` this is one of about a trillion foibles that occurs when programmers naively expect locking alone to be sufficient
Personally, I prefer to have full control and have everything explicitly defined even if it means a bit more work. However I do have a ICrudRepository service that handles all CRUD operations and then I only have to define the Controller actions manually. This way I can always add some custom things and tweak some later on. &amp;#x200B; For example in the library you referenced I don't see away to provide any authorization to individual CRUD actions. For example maybe one particular role should be able to create one entity, while another should be able edit another whilst all users can view/search them. Perhaps that is a bit out of scope for "code tables", but I like to have my code ready for when situations like that come up. 
Thanks. This is what i was looking for.
Design patterns were the next step for me at this point. I saw on this sub that design patterns are usually taught on the job by the senior guys. However, this wasn't really an option for me as a solo act. However, I am thoroughly enjoying O'rielly's Head First Design Patterns. It is written for Java but I having fun porting to C#.
Here is the stack trace: System.Security.Cryptography.CryptographicException.ThrowCryptographicException(Int32 hr) +41 System.Security.Cryptography.Utils.SignValue(SafeKeyHandle hKey, Int32 keyNumber, Int32 calgKey, Int32 calgHash, Byte\[\] hash, Int32 cbHash, ObjectHandleOnStack retSignature) +0 System.Security.Cryptography.Utils.SignValue(SafeKeyHandle hKey, Int32 keyNumber, Int32 calgKey, Int32 calgHash, Byte\[\] hash) +97 System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte\[\] rgbHash, Int32 calgHash) +199 System.Security.Cryptography.Xml.SignedXml.ComputeSignature() +319 QLicense.LicenseHandler.SignXML(XmlDocument xmlDoc, RSA Key) in LicenseHandler.cs:141 QLicense.LicenseHandler.GenerateLicenseBASE64String(LicenseEntity lic, Byte\[\] certPrivateKeyData, SecureString certFilePwd) in LicenseHandler.cs:48 AIC.Account.licensegen.btnGenLicense\_Click(Object sender, EventArgs e) in licensegen.aspx.cs:96 System.Web.UI.WebControls.Button.OnClick(EventArgs e) +11758656 System.Web.UI.WebControls.Button.RaisePostBackEvent(String eventArgument) +150 System.Web.UI.Page.ProcessRequestMain(Boolean includeStagesBeforeAsyncPoint, Boolean includeStagesAfterAsyncPoint) +5028 
That book is so good. I really like how the author explains how LINQ works. 
&gt; Not sure where description would be used directly, though... Having written several “command line” systems like that, you’d also likely want some sort of “help” command or some way to enumerate all commands. For that, a description is nice to display along with each available command.
From a comment on the following SO page: https://stackoverflow.com/questions/21200825/getting-individual-windows-application-current-volume-output-level-as-visualized/21202235 &gt; On Windows 7, there is an IAudioSessionControl2 interface that can get you the process id. From there you can determine if it's spotify or not. The process name is probably all you need, but if you need individual windows: https://stackoverflow.com/questions/2531828/how-to-enumerate-all-windows-belonging-to-a-particular-process-using-net 
I guess your teacher wants to see you using the object oriented programming. For that you must use classes and their instances. I didn't manage get an answer without using Collections which you might not have studied, but at least you can use this code for reference: using System; using System.Collections.Generic; namespace Cars { class Program { static void Main(string[] args) { List&lt;Car&gt; AllCars = new List&lt;Car&gt;(); string car = ""; int miles; int fuel; Console.Write("Press ENTER to start "); Console.ReadLine(); Console.WriteLine(); while (car != "done") { Console.Write("Enter type of car: "); car = Console.ReadLine(); Console.Write("Enter miles driven this trip: "); miles = Convert.ToInt32(Console.ReadLine()); if (miles &lt; 0) { continue; } Console.Write("Enter gallons of fuel used: "); fuel = Convert.ToInt32(Console.ReadLine()); var aCar = new Car { Name = car, Trip = new Trip(miles, fuel) }; Console.WriteLine("MPG for this car is " + aCar.Trip.MPG); // this adds new car to the list AllCars.Add(aCar); Console.WriteLine(); Console.WriteLine("Press ENTER to add another car or enter 'done' to calculate:"); car = Console.ReadLine(); } //when exit while loop, check if there's any saved cars if (AllCars.Count &gt; 0) { float bestMPG = 0; Car bestCar = new Car(); foreach (var aCar in AllCars) { if (aCar.Trip.Miles &gt; bestMPG) { bestCar = aCar; bestMPG = bestCar.Trip.MPG; } } Console.WriteLine("The car '" + bestCar.Name + "' has best MPG result: " + bestCar.Trip.MPG); Console.ReadLine(); } } } public class Car { public string Name { get; set; } public Trip Trip { get; set; } } public class Trip { public float Miles { get; set; } public float Galons { get; set; } public float MPG { get { return Miles / Galons; } } public Trip(int miles, int galons) { Miles = miles; Galons = galons; } } } &amp;#x200B;
https://www.udemy.com/learn-authentication-with-aspnet-identity-security-2016/
Thank you very much for this. However we have not covered collections yet. He pretty much wants us to use if statements and loops.
AMD?
i tried that, but i cant find a way to make it work just if the sound is loud enoguht to activate, i just find if there is sound or not, but i need to be able to edit the level of activation
`audioMeterInformation.GetPeakValue` returns a float. Do some testing to see what the appropriate threshold is for your need and then lock the alert behind an if statement (`if(audioMeterInformation.GetPeakValue() &gt; 15.0){ Alert(); }`)
i tried that, anything above 0 return nothing.. i even tried &gt; 1 and set the volumen to 100%, it return nothing, all i need is a method that return a window sound level i can do the rest
Have you tried printing the actual values of the windows? Maybe it's doing something weird and returning negative numbers or something.
You are welcome! How long do you have until you submit it?
Tomorrow at midnight
Alright, there's still time. I will try to get rid of the collection later and correct my answer. You are in the US?
ctrf + f works on a text article. No such feature for video. 
Exception: Cringe Overflow
Sounds like you know the language. Time to make it DO something.. which is where you really find out what you understand. Last time it was "Move this onto a tablet" so I learned Xamarin, which I found in equal parts frustrating (it does a lot of things the "Java way") and rewarding (holy shit my stuff is on a phone this is cool!). Before that it was: Given an unknown number of remote devices collection data for an unknown amount of time about a common set of real world things, make it so they can all, at random, call "home" and have the database at "home" figure out which data to keep and which data to throw away given that they may have recorded the same locations at different times but only noted certain fields and not others. THEN in the same transaction UPDATE the mobile device that called in... also the fields/things we care about are changing periodically so you need to actually alter the structure of the database on the mobile device before you start the transaction, while not losing any data.. aLSO The datatYpe might change.,..... learned a lot about C# and a little out PTSD..
For future reference, there’s no such thing as ‘C# Core’. Your application probably targets .NET Core and it’s written in C#, but the two things are almost entirely orthogonal. 
Learn Design Patterns. All the rest will come with experience. 
I've always learned on the job. You seem to know the basics well enough to start a C# project. Go from there. It makes no sense reading more and trying out more tutorials if there's not a real project you need to do at the moment using C#.
Now it's time to learn patterns and how to design systems. SOLID DDD Learn how to recognize patterns - you're already using some of them, like the Observer pattern, events and delegates is a .NET implementation of this pattern.
Thanks, What I miss so far are challenges that I must solve on my own. Maybe someone knows a site with c# challenges so I can practice what I have learned
[Codewars](https://www.codewars.com/) offers some of that. You mostly have to implement some function. Won't teach architectural ideas, but good for thinking about algorithms and simple data manipulation. There's also challenge sites like the /r/dailyprogrammer or [Project Euler](https://projecteuler.net/) subreddit, which are just sets of challenges to try for yourself. Many of these tend to be focused mathematical or pure computer science concepts, which is great but not always what people are looking for.
Write more code.
Working on bigger projects, especially in clearly structured applications like ASP.NET (Core), will help a lot. I've had the opportunity to see a few other developers start learning C# and develop, and the biggest thing seems to be learning how to structure code, such as when to use inheritance, when to use static classes vs objects, and when to abstract things. Code starts to become less procedural and more "elegant" after a while. If you write a lot of code, you'll constantly look back and see things you should have done better. This is a *very good thing*. You'll learn new techniques and feel the need to apply them everywhere (inheritance is a classic example), then overdo it, learn from that mistake, and dial it back. Going crazy with abstraction from the get-go is a classic design pattern in junior programmers. Another really good strategy is to read a lot of open source libraries on GitHub. Look at huge projects like dotnet core and see how they are structured, then look at some smaller libraries and see how they do it. Really though, you won't learn until you really have to implement something that solves a real world problem, with all of the complexity and ugliness that involves. 
You have to write more code. Learning the language and general programming concepts is one thing, but knowing how to solve real problems is another thing. We can’t really tell you what to do, because we don’t know what you like. You can do a ton with C# so you’re not really limited. If you want to know what technologies are in demand, pretend you’re looking for a job and see what the vacancies say. It depends a lot on where you live. 
Sounds good. &amp;#x200B; Am I correct that this should match the following methods? /controller &gt;\[HttpGet\] &gt; &gt;public async Task&lt;ActionResult&lt;Object&gt;&gt; Get() &amp;#x200B; /controller?attrbuteId=3 &gt;\[HttpGet\] &gt; &gt;\[Route("{attributeId}")\] &gt; &gt;public async Task&lt;ActionResult&lt;Object&gt;&gt; GetByAttribute(long attributeId) &amp;#x200B; On my setup I always get to the first one, the attribute query string doesn't matter. I also tested to prepend \[FromQuery\] before the 'long attribute' parameter.
That book is surprisingly good. Looks good next to the GOF patterns book as well!
He probably means the Audio Library CSCore: https://github.com/filoe/cscore
Yay.. Patterns. Yay, frameworks. \*cough\* . . . My answer isn't exactly specific to C#, but I say work with what you know. Use the tools you already know how to use. You can learn to use anything, or program with anything. All that takes is time. Getting new tools are cheap, but mastering any single tool is priceless. Tl;dr: Practice makes perfect; Create for creation's sake so that you can get even better at creating.
This may be helpful. [Dotnet build command](https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build?tabs=netcore2x)
You can also listen to some podcasts where people discuss new concepts that you haven't tried yet, then go back to you computer and try them out. I usually listen on the way to and from work, makes my hour commute more productive
Thanks, I mean more that I need to use dotnet core or dotnet standard or another choice.
Welcome to socket connection management. IIRC sockets will not close out a TCP/IP session correctly by default. You need to send the FIN and ACKs correctly. I have had this same issue where it worked on a test bed and borked on a production server where the service was getting hit much more. It connects but then fails right?
You could dotnet publish a platform specific executable and maybe that will be an exe?
Do you mean I need to close this connection made by client? var tcpClient = listener.EndAcceptTcpClient(asyncResult); if I put it in using statement, it'll be closed automatically after using block ends right? 
The object will be disposed in memory and it will let go of its handles in .NET but the connection that has been established with the server is still hanging open. You need to tell the server you are closing, wait for a response in the data stream and then close the connection. When you are working with sockets you need to tell it to do everything, .NET magic that helps us all the time is not here. Thats for the higher up classes. SOURCE: Learned this the hard-way troubleshooting a socket class that managed over 1500 discreet connections to hardware all over a warehouse. 
&gt; Also if this exception occurs before client is connecting then what can be the reason behind it? the last client disconnecting. I don't have that code anymore, the job was years ago. If you have the ability to change the server side you can always monitor the socket on that end and kill it when the client drops out. 
[this](https://blog.stephencleary.com/2009/05/detection-of-half-open-dropped.html) may help some. 
awesome site...
Yup, was thinking the same thing. In order to know what you need you actually need problems to solve. There are no silver bullets. You can solve situations with multiple techniques but usually there are pros and cons to each. Making choices and solving issues are good ways of finding out where you are lacking.
 https://blog.elmah.io/our-favourite-net-azure-and-csharp-podcasts/
I'd suggest you take up a project idea and start working. Any topic that might interest you. It will not only show you what you need to learn but also tach you those things in a way so that you could use that knowledge in the future.
AMD has [CodeXL](https://github.com/GPUOpen-Tools/CodeXL )
What type of project are you selecting when starting VS? Is it an application or a library?
&gt; but whatever I choose when I build something it will be a .dll and I need a .exe. .NET code usually is not compiled to a single exe. Like Java *.jar files, you get *.dll files that you can execute with the command `dotnet AppName.dll`, as you would type `java myApp.jar` to run a Java application. If you want an *.exe file, you will have to use `dotnet publish` to [build a self contained deployment](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd). But self contained deployments do not produce a single *.exe file and you need the whole folder (that has the important DLLs) for the *.exe to work. If you need a single *.dll file with no external dependencies, then [CoreRT](https://github.com/dotnet/corert) has the capability to do that. &gt; Thanks, I mean more that I need to use dotnet core or dotnet standard or another choice. A .NET Framework console app produces an *.exe that only works with .NET Framework on Windows. A .NET Core console app produces a *.dll that runs on any OS with .NET Core installed with the command `dotnet myApp.dll`. .NET Standard is meant for libraries that work on common .NET implementations. There is no .NET Standard Console app. You can create a .NET Core, .NET Framework and Mono versions of a console app and reference a .NET Standard library for code. 
It's applied in all the listed. Try learning how to use .Net Standard and implement it in your applications. Learn how to use SOLID principles. Learn how the applications should be structured and broken up into different projects, rather than just one huge one. 
Got any recommendations for picking up DDD?
How widely is DDD really used? I haven't worked for a lot of companies, but those I worked for didn't use it.
Personally, I find that subs dedicated to .net like this one put way too much emphasis on academic aspects of programming. Don't get me wrong, I am not saying knowing design patterns like the back of your hand is not a good thing. Or being able to implement a solution using domain driven design. What I am saying is that in most work places, it's actually far less academic than that. Certainly there are plenty of development shops, whose primary selling point is their programming expertise. But in my experience (finance) most developers honestly don't have that expertise, and it's in no way required day to day. The reality is that everyone is using some sort of framework, which already has a pattern hammered out. Whether it's front end or services, there is a clear pattern that is either enforced by the framework itself or presented by some rockstar architect. So in my experience, you'll get much further knowing these frameworks, than knowing how to implement the mediator design pattern. The reality is, probably 9 out of 10 developers can't implement it, yet are all successful. Just my 2 cents.
I like to read and understand code written by better prigrammers. GitHub is full of great C# projects. Find one you're intersted in and explore.
great book! i recommend that book to everyone that is in this position. 
+1 to what IYA wrote; roll your own and you'll get slimmer code, faster response, and an easier to understand codebase. Add in a few abstractions, and you have code that is easily reuable.
Why do you need an EXE?
Don't know why you got downvoted, this is the correct answer. Maybe OP just being too lazy to read.
1. In Solution Explorer, right click on your ConsoleApp project, and choose Publish... from the context menu. 2. Underneath the "Publish" button is a link "Configure..." 3. Ensure the Deployment Mode is set to "Self-contained" 4. Choose "Save" 5. Click the "Publish" button. Your .exe will reside under the bin\\Release\\netcoreapp2.1\\win-x86 folder (or whichever target you choose).
&gt; ctrl + f works on a text article. No such feature for video. Ctrl + f only works if you know which words to search for. And it works best if its not a word used a hundred times in the article. But, yeah, given those, it is useful. &gt; When I first started with .Net back in 2002 my employer paid big bucks for this "course" we could take. 52 hours of video and no book to go with it. I feel your pain. Also, it was in 640x480 resolution so in order to read the text they had to zoom in which meant the video had to pan-and-scan all the time. You shouldn't get motion sickness when learning a new language. Oh, man. I'm feeling downright lucky now. At least you made it through, right?
Dotnet core 2.1 now has the [ApiController] attribute that you can use at the top of your controller. With it, you no longer need [FromBody] on your action parameters.
Rewatching Is the key, trust me, You will get the most advanced topics once you start applying them on real life projects 
I'll remember that when I upgrade to 2.1
\+1 Design patterns - Head First Design Patterns, GoF, even Fowler's Enterprise Design Patterns \+1 Read open source code - like you would a book, amazing to see / review code written by people who even designed the languages and frameworks themselves (or some of the favorite packages) - better yet, get involved in your favorite open source project and make a pull request ... you'll get feedback and help the community \+1 Write code daily - at work, and do a personal project on something outside your current experience \+1 Good books - Clean Code/The Clean Coder (Martin), Refactoring (Fowler, now in 2nd Edition), Code Complete (older but still good), \+1 Testing Focus - write a bunch of tests, get good - looks at "Art of Unit Testing", unit test patterns (again, see how open source folks write their tests - open source projects live and die based on tests that people can read with good coverage) Soft Skills - good programmers aren't always great at communicating or understanding others - great programmers work on this as much as coding. Design - difficult concepts for many - recent favorite book "Design Systems" from Smashing Magazine folks ... DevOps / Agile - easy to get into, but so difficult to master, and so easy to go wrong - recent favorite here is "Phoenix Project" - very readable, even fun, but with a lot of content &amp;#x200B;
Seems right but I'm not in a position where I can run it myself, give it a go and see if it works
Figure out something you'll write code to accomplish for fun, and do it. Every now and then, try a new design pattern or framework. The thing it took me a long time to realize is you *can* master a language. At some point, reading books doesn't help and you have to start building experience. The best sign of progress is a trail of projects in some git repo. I was in this slump a few months ago. Then I noticed that every week, I was doing some calculations for a game I play over and over. I also had a need to be familiar with JS for work. So I started writing tools in Node/on Glitch that do the calculation for me. In 2 months I've rewritten/refactored them several times and learned a ton more about JS than I have in the past 3 years of randomly reading books. If you can't think of a hobby thing, steal. Find some open-source framework you like that's also small enough you think you can implement it. Implement it. "An MVVM Framework" is a good target to try and implement. "A REST API framework" is a good target for server-type stuff. The problems are *complex*, but you can solve them at different levels of complexity as you go, and see how the more general you get, the harder it is to design something elegant. Bonus: next time you start a "for real" project, you'll have a better intuition for where the line between "a framework is too much overhead" and "my complexity cannot be managed without a framework" lies. So that's my opinion: do. 10 hours of coding often teaches more lessons than 10 days of reading, especially when what you read is becoming 90% familiar. Be comfy saying, "I don't know what I'm doing". Learn to approach it with, "But I am testing a hypothesis."
Awesome. Thanks
Build Something
Three month side project. I use this over and over again. Pick a project that is just outside of your capabilities and give yourself three months of evenings and weekends to finish it. Use a framework. Build something with multiple components that talk to each other. Use an SQL Server database (this is C# after all). Use MVC and EF and all the things.
it's strange that you marked your method async, but are using an old async pattern. consider using async/await keywords
&gt; Learn when to use static and when not to. And this is the perfect time not to. OP is misusing inheritance and should restructure is data model instead of hacking a way to make something wrong work. I'm sure you knew that, I was just pointing it out in case someone else saw this and thought it was an acceptable thing to do.
I’m compiling an external cs script at runtime in memory and adding it to a gameobject.
&gt; You need to send the FIN and ACKs correctly. Isn't this just handled by calling `Close` on the socket (which coincidentally is also called by `Dispose`? I thought when you called that, in the underlying stuff it sent a packet with an empty payload to signal end of transmission?
The async await calls are inside the using statements. Which I did not add to the code snippet. The method WaitForTCPClient is not async and I want it to run it on a different thread here so I could not think of a different way to write it on a different thread. I can infact make that method async and using async await keywords. Thank you for pointing it out. Appreciate that.
&gt; Is this normal? Depends on your company: job titles and responsibilities vary immensely. Some places, a senior dev is just a more skilled variety of code monkey, and, in others, it's lower-rung management job with technical design responsibilities. 
This is mentioned tangentially already, but for me new languages syntactically are hardly the issue. Libraries, libraries, libraries. A lot of that comes from practical experience with the language, but nothing is more frustrating at the stage you're at when you spend a day or more writing a routine or set of routines only to find out there's a library already that does it.
I would hope if this is his third language that he already knows about all of these things that are not CSharp specific. 
This is 100% true, those two specific topics especially, I didn't even understand the need of interfaces until I had to add one to many classes but didn't depend on any of them and it had to be easily removed from and added to others, an interface is all I needed, also they are mandatory for dependency injection (which I also didn't understand the need for until my mentor showed me its true power)
Hah, I hoped the senior devs at my company could mentor me and teach me how to properly launch a career in software. Nope, [this is the kind of code they write.](https://www.reddit.com/r/programminghorror/comments/8p93b5/code_reviews_no_we_dont_why_is_there_something/)
I've used Mono a fair bit, but I found that most non trivial applications will fail unless they were designed with Mono in mind.
He posted an extremely Google-able question to reddit, what makes you think he's lazy? /s
wanna trade? i code 12 hours a day like a monkey and can barely pay rent!
Well, in that case, I could mention ReactOS too, because it supports Windows PE formats. There's always exceptions. ELF is the native format for Linux and calling Windows PE "supported" on Linux is really inaccurate. 
I manage a team of ten developers and we were so busy on a large migration recently that I stepped in and took on a stack of the back log. Now I can't get out from under it. I love coding, but I hate that I had to dive in and am now hip-deep in it again.
&gt; in small company This is the key though. I was a senior dev/team lead in a small company and I had about that much time to code too. I'm in a medium sized one now and have OPs problem. We're growing too and I can see the writing on the walls, that as we get more clients and devs, more of my time will go to meetings, code reviews, and questions from junior devs. Not that working at a small company is bad, that's just why you have so much time to code. 
Well to be honest, there's lots of confusing information about .NET Standard, .NET Core and Mono so I posted an elaborate answer. Things have been *wild* since the past 3 years, (project.json -&gt; csproj, .NET Core 3.0, etc.) and I tried to search for documentation myself and couldn't find a good article. So I hope my comment will appear as a search result in the future. 
I'm only a Software Engineer 2 (mid level developer in some places), so yes. I'm not a huge people person, but working at a big tech company now, I see so much that can be fixed, process-wise. But no one wants to listen. I'd much rather give up writing code, which I love, to help teams be better at their job. 
The message is pretty straight forward... the client has closed the socket, WHICH WILL HAPPEN. You can wrap your beginListeningInBG method with a try/catch... I'd actually change the implementation. Some cobbled together client code: public class Client { private CancellationToken _ct = new CancellationToken(); private TcpClient _client { get; set; } private int _timeout { get; set; } public Client(TcpClient client, int timeout) { _client = client; _timeout = timeout; } public void Start() { Task.Run(ReceiveMessageAsync()); } private async Task ReceiveMessageAsync() { using (_client) { var buf = new byte[4096]; using (var stream = _client.GetStream()) { while (!_ct.IsCancellationRequested) { var amountReadTask = stream.ReadAsync(buf, 0, buf.Length, _ct.Token); var amountRead = await amountReadTask.ConfigureAwait(false); if (amountReadTask.Status == TaskStatus.Faulted) break; if (amountRead == 0) // end of stream break; //TODO: something with the data in the buffer } } } //Client disconnected } } And some pseudo server code: public class Server { private TcpListener _listener { get; set; } private CancellationToken _ct = new CancellationToken(); public Server(int listeningPort) { _listener = new TcpListener(IPAddress.Any, listeningPort); } public async Task StartListening() { _listener.Start(); await AcceptClientAsync(); } async Task AcceptClientsAsync() { while (!_ct.IsCancellationRequested) { var client = await _listener.AcceptTcpClientAsync().ConfigureAwait(false); var networkClient = new Client(client, 0); networkClient.Start(); } } } God speed sir.
You have a 12 hour a day software job and can barely pay rent? Am I trying to transition into the wrong field?
That would frustrate me if I no longer had time to code. I do like to have a little break between big sprints so that my brain can some time off for awhile.
&gt; Many companies see management positions as "evolutions" of software development positions, so devs have to stop coding and become managers Does it have to do with the idea of *problem solving*? Someone who's good at problem solving is good at programming. Someone who's really good at programming might also be good at solving other problems, like management. These sentences are really just a question, not necessarily my opinion.
if you're in the boston area shoot me a PM and I'll get you a referral to my company. I haven't worked more than a 9 hour day in the 8 months I've been here
I REALLY hope you reply to some of the people here that are pouring a lot of information into their replies. I'm rather new to the field but most times I've just looked for something internal I could jump on that would allow me to do harder stuff. Whether that is helping a diff team or take on a side project at work. If none of those worked then I looked for another job. That is literally how I ended up being a software engineer. I wrote enough scripts in batch / powershell / python to the point where my boss offered me opportunity to hop over to dev At first I turned it down out of fear of being a complete idiot and pulling team down. Later it came back up and I jumped on it since it was basically a "now or never" type of thing. Anywho...have you tried listening to developer podcasts for inspiration? I enjoy Complete Developer Podcast, they talk about C# a good bit.
It's called discipline. Not everything is going to be fun and enthralling all the time, that's why it's called work. Learning and mastering something is hard work. If you want to learn something, and learn it well, it takes time and effort, and most of all perseverance. If you try learning C# and absolutely hate it, it's probably not for you. But getting bored with something doesn't mean you're not cut out for it. 
i live in a HCOL city and am a junior.
nah, LA. i'm a junior who didn't go to college so just putting in my time.
You probably need some proper task to practice on instead of just contrived examples. When give a task that consists of manually repeating the same steps hundreds of times then learning to script suddenly becomes very interesting.
I'm a senior developer at a big company, but not a team lead. I own the technical aspects (architecture, infrastructure, delivery, etc.) of a major project. There are several juniors also working on the project, but I do not directly manage them. My time split is roughly 40% development work (writing code, on-call), 40% helping the juniors (code reviews, questions, helping during their on-call rotations, unblocking them), and 20% meetings. I do conduct interviews, but not often enough to justify a separate category, so I just included it with meetings. &gt; team lead The team lead is the important part of your description. Once you become a lead, you are a people manager, not a software developer. Your job is to enable your team to write code, not to write code yourself. The extent of the technical work most of the leads around me do is the occasional code review and high-level architecture discussions. In fact, I would be extremely cautious of any lead that spends more time than you do on writing code because it usually means they are ignoring some of the important, non-technical aspects of their job.
I'm considering moving to western mass next year. How's the market for semi-remote devs in Boston? 
I'm a senior develop and team lead and I code all the time... However, my company is small (&lt; 25 employees) which plays a factor. I'm also a perfectionist when it comes to engineering so I simply can't let certain patterns into the code base, and I don't always expect my team members to fix every little thing I notice, so I take it upon myself sometimes to fix other people's PRs on my own. I also find it valuable to scaffold entire architectures before jr's get their hands on it. It provide rails that help them stay in-line while they flesh out the rest of the application. 
I have a hard time knowing what my capabilities are so I think I'm gonna sharpen my skills a bit more and jump into a app using Xamarin.
Child terminated with signal = 0x0DAD (SIGCRNG).
I love my manager. I've been a people manager and I can do it, but I prefer doing the work and solving technical problems. When I transitioned back into an IC role he made it clear to me that he believes in providing opportunities to make the same money regardless of whether you're on a management track or engineer track.
I think I'm gonna do some app development with Xamari, and I'll check that book out. Thanks for your help.
Thanks I'll definitely try to actually code a bit more, I definitely relate to the random reading of books lmao.
Thanks I'll check them out.
I'll make sure to take alook at it.
I've been testing a bit with unity but some of that stuff flies way over my head. I've never worked with databases before(as I always get to this point in a language and then give up.) I think I'll definitely work with xamarin and practice unity a bit more as I've been getting into pixel art and just really dig the engine in general. Thanks for all your help man.
Alright will do, thanks!
Thanks for the in depth response, I definitely need to look at some open source code and sharpen my knowledge a bit. 
Alright seems like Xamarin is definitely in demand around my area. Thanks for your help.
Okay some of this stuff flies over my head for a bit I really have to buckle down and focus on it it took me too long to understand delegates and lambda expressions. Is this normal, or am I just an idiot lol.
Thanks!
Alright will do, thanks 
Huh, never really thought about that, good idea. 
You might be able to find something, but I work for Wayfair, which is probably Boston's biggest software dev employer, and they are very anti-remote.
They use 2 space tabs? And magic numbers? Hum... Maybe you need to be the one improving practices. I would start with Clean Code. I absolutely don't take every piece of advice in that book. But I do take lots of them. I would also work on improving practices as well. Do they use a modern source control. Do they use branching and merging with pull requests. What's their ticketing system. Does every commit belong to some sort of work item. These are not CSharp specific but they will definitely look good on a resume.
This! What isn't normal is that you keep doing what you're doing if it's something else you'd like to be doing. Don't let titles and status get in the way of you and the most awesome job there is! 
Just try to see it as programming people in stead of computers 
I’m pretty sure that C/C++ is not the best language to start from. Something more similar to natural language like Visual Basic seems more appropriate for me. Actually, basic was created to learn programming. It will help you to think programmer way. It’s fascinating when you can build GUI with almost no skills. It’s very simple to build small utilities with it. Also, vb supports .net, so it’s straightforward to switch to c# from it. But, with C++, you can build a program more accurate, because of it’s powerful low-level compiler. And that’s why it is more complicated.
Appreciate it. This helped me understand async await better :) 
Software dev doge almost 20 years with another decade or so of hobby coding as a kid. Honestly, if i never wrote another line of code, i wouldn't mind. 
LA sounds like a nightmare.
Yeah but you cant REALLY tell people what to do Computer has no choice but to do what you tell it :)
I probably spend 10 - 20 hours on coding and other time split similar to yours : infrastructure, research , interviewing , etc. 
Seems to me like you made it to the top, but realized you don't get to do what you love anymore. Maybe the job just isn't for you? &amp;#x200B; If you have years of experience, freelancing might be the thing for you.
That sounds like fun. Maybe set up a server in Azure for it to communicate with.
While discipline is necessary, some people just don't learn well in the traditional way. As someone who feel asleep regularly in the classroom environment, I can feel this on some level. I work best when I'm given large, complicated tasks and told to knock it out of the park. I learn best when there are lots of unknowns while climbing that mountain. If you're similar, then maybe try looking for into programming classes that post their assignments online. Use those to get ideas of problems to solve. And/or come up with problems of your own to solve. Then solve them in code. Rinse and repeat. Then start looking at standards and practices and learn how they can make your code better.
&gt; Does it have to do with the idea of problem solving? No, it's based on the idea that Owner/CEO is the top job in the company and everything else is just a stepping stone to that position. To become a CEO you're eventually going to have to leave the technical specifics to those that work for you and the "management track" career path reflects that. This is *not* the only kind of company though. Obviously startups commonly have CEOs that take on technical work out of necessity. And many big tech companies now have a separate track for top level technical staff, often called something like a Distinguished Engineer. They may not do a lot of coding by themselves, but would be involved in technical architecture discussions.
You can start at a high level like VB, or even a low level like assembly. Starting at the low level best you build up from the blocks of how a computer *actually* works, while the high level gives you tangible results. Both should be learned, imo, but the order is by preference. C++ is probably the best balance of the two that I know, and yet another good strong point if that's your personal preference.
Really don't that I will hate it as I find myself constantly thinking about programming in the type of software I can build with it but just in the beginning stages learning the fundamental of the language is boring but when left on my own with the material that I learn Im filled with excitement but this causes me to second guess myself in learning to program in repeating that if the fundamental is boring is programming for me.
Hmm, no I think you misunderstood. If I told you to open 500 Excel workbooks and sum the numbers in the rows together in a new workbook, then I think you'd find more interest in learning how to do this automatically at the click of a button.
For someone with no computer science background training, c++ is not a good language. Pointers? Good luck. 
Yeah, I started learning programing with VB 6.0 when I was 14, and it was simple and easy (you even don’t have to declare variables). But, the more you getting involved, the more you want a real instrument, not the school toy (cool, that thing warns me if I forgot to declare variables)
Everyone starts at 0. Even CS students. Their main advantages are 1) having peers and teachers to ask questions and 2) most likely also taking hardware level classes. But even then, you're much more likely to have to face down pointers before you learn anything higher than an SR latch, which doesn't really help much with pointers. However, is you learn pointers then come learn ref/value types in c#, you're going to understand the topic almost instantly. Reference: I got started with pointers by reading a Borland C++ compiler manual in high school.
Yep. Strongly typed languages ftw!
Indeed. But it would solve his immediate issue. In this case. For now. (And then it would be like a toothpick holding up a ten-ton weight... over his head.)
Removed: Rule 4. You'll need to provide more/better information about the project and solution setup you have. From the sounds of it, perhaps when you created the project, you chose a "Class Library" type. These produce DLLs. Likely instead you mean to make a "Console App".
.NET Core Console Apps are DLLs. As my comment says. 
.NET Core Console Apps are DLLs. As my comment says. 
Uh, except it's not unsupported and unpopular? It's been popular for *years* thanks to products like Unity.
I'm not a pro by any means, but I'm pretty sure you cannot set a Textblock to a collection. I know you managed to do it with grids, I'm guessing similarly to [this](https://stackoverflow.com/questions/2199721/how-to-bind-xml-to-the-wpf-datagrid-correctly). If you are looking to add buttons and functionality to each row, I would go for a listview IMHO just because I have had the most success with it.
I'm not a pro by any means, but I'm pretty sure you cannot set a Textblock to a collection. I know you managed to do it with grids, I'm guessing similarly to [this](https://stackoverflow.com/questions/2199721/how-to-bind-xml-to-the-wpf-datagrid-correctly). If you are looking to add buttons and functionality to each row, I would go for a listview IMHO just because I have had the most success with it.
I'm not a pro by any means, but I'm pretty sure you cannot set a Textblock to a collection. I know you managed to do it with grids, I'm guessing similarly to [this](https://stackoverflow.com/questions/2199721/how-to-bind-xml-to-the-wpf-datagrid-correctly). If you are looking to add buttons and functionality to each row, I would go for a listview IMHO just because I have had the most success with it.
I'm not a pro by any means, but I'm pretty sure you cannot set a Textblock to a collection. I know you managed to do it with grids, I'm guessing similarly to [this](https://stackoverflow.com/questions/2199721/how-to-bind-xml-to-the-wpf-datagrid-correctly). If you are looking to add buttons and functionality to each row, I would go for a listview IMHO just because I have had the most success with it.
I'm talking about Mono's *.exe support, not the whole project itself. [I do know what Mono is.](https://www.reddit.com/r/csharp/comments/9fpk3h/how_would_i_build_and_compile_programs_using/e5ypaqg/?context=3) 
I'm talking about Mono's *.exe support, not the whole project itself. [I do know what Mono is.](https://www.reddit.com/r/csharp/comments/9fpk3h/how_would_i_build_and_compile_programs_using/e5ypaqg/?context=3) 
I am talking about Mono's Windows PE support not the whole runtime. 
I am talking about Mono's Windows PE support not the whole runtime. 
I would take a look at [this](https://docs.microsoft.com/en-us/aspnet/web-api/overview/security/basic-authentication) as well as lookup some basic tutorials for implementing roles! (Like [this](https://docs.microsoft.com/en-us/aspnet/core/security/authorization/roles?view=aspnetcore-2.1)) Then use [Authorize(roles = "Admin")] for the [Route] methods. 
You’re certainly not an idiot - you’ve recognised there’s room for you to improve in a certain skill and you’re asking for advice on how to achieve that goal. Take what you know from lambda functions - this knowledge is a great starting point to start learning about async/await and tasks. What’s a lambda if it’s not constructing a little method on the fly that you can call later on or pass into another method and use as a callback? That concept is key to understanding how c# uses tasks with the async and await keywords. It’s not a million miles from how js uses promises, if you know js. For me, I learn best when I’m writing code. Others learn best from reading books or watching tutorials. So if I were you, I’d just start writing code. Let’s take dependency injection - find an IOC container package, let’s say, Ninject, add it to a project with nuget, head over to their GitHub page and copy their “getting started” code sample, compile and run! If it doesn’t work, google your compiler error or exception, find a stack overflow question that looks relevant and see if there’s any clues in there that fixes your issue. Rinse, repeat. Seriously that’s how I’ve learnt half of what I know, it might not work for you, you might prefer to download an ebook or watch a YouTube video, but either way there’s tons of resources out there for you to pillage and learn from. Everyone is saying “patterns” myself included. I have to say I never properly studied design patterns until it was pointed out to me that I was using one. You’ve probably been using several design patterns up to now without even realising there was a name for them. You can check out the gang of 4 book on design patterns or just check out the Wikipedia entry on design patterns and see if anything stands out. I don’t know if I’ve helped you, but all I’m really saying is - keep at it. Out of curiosity, what’s your goal? To enter software development professionally? Or are you pursuing a hobby? Or something else?
Make sense, maybe I am just taking the wrong path.
So after having checked a few accounts, the new password is actually being applied to the accounts, which are being created, but I'm not getting anything in my logfile, which is ridiculously strange...
Hi thanks for your help man I really appreciate it, like this community has to be one of the best I've seen. To your last question I definitely see this as my future career. Currently I'm in high school and doing a career center programming class(basically getting experience for the workforce.) Its sad to say it but I'm the best in there and I don't have any real experience I'm just good at problem solving and have been practicing programming since my brother introduced me into it(he's definitely a contributing factor, he's self taught, no degree, and making 70,000 at 21.) Sorry for the unformatted mess that is my response but anyways thanks and short answer, I want to be a professional software developer.
Yeap, seems like a pattern, I wonder if there is good salaries for developers that actually write code all day.
I wish it was that simple hahhaha
I updated my answer, got rid of the collection.
This is a interesting perspective. Do you think that a people path would be better to you now?
Thanks for this! I'm just missing one thing, how do I auth for each request without putting the code in ever function in all controllers? I think I'm missing some small detail.
I am not nearly as experienced as you. It's only been a year and a half since I finished my education in development. I have been taking smaller freelance jobs for a few months now and making some decent money off of it, despite my limited experience. Not enough to go all out and call myself a freelancer. But the more I get into it and read about it, the more I think it's for me. The scariest thing seems to be taking the leap and trusting yourself enough to quit your job and depend entirely on yourself. But you? With 10 years of experience, it should be easy to find work. &amp;#x200B;
I tried reading that book, but it was a bit advanced for me.
Boston .net developer here; I’ve actually considered applying to Wayfair but that’s such a shame to hear :(
No wonder why you don't have time to spare for coding then :)
No problem! What did you do to figure it out?
So it's a wpf app?
The error is in the exception "Server is unwilling to process request" &amp;#x200B; take a a look at this artical here. it might shed some light on this for you. [https://stackoverflow.com/questions/13748970/server-is-unwilling-to-process-the-request-active-directory-add-user-via-c-s](https://stackoverflow.com/questions/13748970/server-is-unwilling-to-process-the-request-active-directory-add-user-via-c-s)
If that's another way to say Windows executable, then yes. It does not run on the web.
Doesn't each file loaded/compiled get put into their own assembly? Unless they have access to each other's assembly, not sure how the visibility would work there.
I’m not following. If the files are compiled and they exist in memory, then why can’t they interact?
Come on, if 90% is useless, your doing it wrong, yes you have to manage a team but your directing them and the company to a solution based on the knowledge you have. When you say it based off of their team, that is exactly the point, using that experience and knowledge to direct things in the correct direction. 
Because they're isolated from each other.
Azure can do speaker recognition but I couldn't find a detailed source
I couldn't even use it, and I don't even know how it works
As a Jr. Software Dev, I'm coding for the greater part of my \~30hrs a week with the other time I'm trying to get caught up on all the languages I've been thrown into and how no experience with. Absolutely love it though. Though, not sure if I'd enjoy getting to Senior Developer and not having the ability to code for the majority of my day as coding is all I wish to do (with hobbies in security as well). As for if it's normal, I may not have enough experience to speak on it, but I'd say it really depends on what the company is needing from that position and how large of the company it is.
If I load any assembly (even pre-compiled from a DLL, for example), it is loaded into an assembly. If i need to access a type out of it, especially one with static methods, I have to use reflection to access the methods from the assembly and invoke them. In .NET an assembly would be loaded by the static method (well on of the methods) Assembly.LoadFile (in System.Reflection), which gets me a non-static instance of the Assembly class. From there I would call methods like GetType() to get the static class and more reflection to get the static methods. To get access to methods in an easier way, you may want to force classes in you files that you load and compile to be, instead, non static and conform to an Interface instead. Then you can use Assembly.CreateInstance to generate a runtime instance of your class and cast it to the type of the Interface and then call methods directly. One of the method in your interface may be a way to call manager class in you game, to have all the loaded instances of you compiled files into some diction, keyed by name with the value being object of the Interface type. Just thinking "out loud here"
The code in file 2 is: public static class Test2 { public static string ReturnString(string value) { return “Return String :” + value; } } The code in file1 is: using UnityEngine; public class Test : MonoBehaviour { void Start() { Debug.Log(Test2.ReturnString(“Hello World!”)); } } The output should be: *Return String: Hello World!* But it isn’t working.
For Random numbers, start [here](https://docs.microsoft.com/en-us/dotnet/api/system.random?view=netframework-4.7.2). After you figure that out and you begin to populate an array with characters, focus on a way to check if an array *contains* a character. (Check the methods [here](https://docs.microsoft.com/en-us/dotnet/api/system.array?view=netframework-4.7.2) for an array to figure out what method you need. If the 1st array already *contains* that random number, add it to the 2nd array. Have fun!
Are Test and Test2 in the same namespace? What line is the null reference exception thrown from and what's the stack trace?
The line number the exception is thrown is inside of my compile class which used CodeDOM. I even used a try/catch to get the stack trace but all it says is NullReferenceException.
I'm exactly in your shoes! I miss coding so much, that I started working on open source hobby projects. I love it. It could be any hobby, really, but I really miss coding and digging deep into the fundamentals and frameworks. As I'm not even coding at work anymore, rather managing 2 to 4 teams of various sizes between 2 to 12 people on each team, as project manager or sometimes team leading/coaching, so coding in my free time doesn't feel like a chore at all. Hobby coding also helps as it makes me up to date with technical knowledge with no additional effort needed! Getting the position just happened. I guess, leadership skills are more prominent in developers who are essentially good problem solvers with good communication skills and have high empathy, so this role _just naturally fits_ these people. So yes, I think that, on some level at least, this can be considered one path of the natural evolution of _seniorus codus codus_, or the _common senior developer_. 
&gt;my compile class which used CodeDOM. This is the critical section of code that people would need to see to actually troubleshoot what's going on.
I reread your post and you should probably start to dive into some frameworks instead of going into abstract concepts just yet, to get some practice of the things you've recently learned. Cement it by seeing how they're used. Try out ASP.NET Core, Entity Framework Core and maybe WPF/UWP (slightly different, same purpose and similar technology, UWP is newer) if you want to try to make a desktop application. It's a ton of fun and you'll be introduced to a lot of new ideas, but it's practical examples instead of just adding more introductions to concepts that aren't concretely implemented.
I've done this - Is there more to the story. I got a huge hit from err 'enabling' the team with small inputs. If you track this more carefully I think you will notice that in many ways (small for you, but big for them) you're growing a team? I'd consider working for you just for this post.
Are you familiar with the Peter principle? Competent people are promoted. Therefore, everyone will reach a job in which they are no longer competent. There is also the incorrect idea that something good at doing X is good at managing people who do X. The idea that those people will understand the needs of their underlings and help that out. That goes all the way up. Managers who are good at managing become directors. Those good directors become executives, etc. Until they aren't good at it, per the Peter principle. Software development isn't special in this case. Engineers see this, nurses see this, trainers, musicians, just about factory line workers. Unfortunately it is deeply flawed. What makes someone good at X isn't necessarily going to be what you need to be good at managing people. Understanding their job is very important, certainly, but managing is a skill like programming or playing instruments or any other job. There is also a problem with the transition from individual contributor to multiplier. A great employee is still only one person. Even the mythical 10x developer is only able to do their super work with the right situation. A great manager may be able to increase his or her employees output by, say, 20%. So if they have a team of 7, then they are improving things by 1.4 employee's worth of quality. And a great director could improve the output of managers, and such. If one wants to make more money, they need to provide more value to the company or find another company for which a single developer's value is higher. Our industry very specifically has a huge variety in value a developer can provide to the company. Since people don't really enjoy the uncertainty of changing jobs, they want to stay but make more money. So the company decides to extend the career ladder from Junior developer up through Senior developer and then into management to justify the higher pay. A good solution is to build a technical path. Senior developer to technical expert or chief programmer or the like. Someone who can assist other teams or the higher level / longer term vision. But that requires the company to be big enough to justify a full amount of work for that person.
I'll give you a hint: unless your instructor is trying to test your knowledge of algorithms, LINQ is pretty well-stocked with ready-to-go algorithms you can borrow. In particular, the 'IEnumerable&lt;T&gt;.GroupBy&lt;T&gt;(...)' method looks like it might come in handy here. And there's always the ToArray() method when you're done.
There's this great container type called [HashSet&lt;T&gt;](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.hashset-1?view=netframework-4.7.2). Once you've generated the array of 100 random numbers, you can read each number, then check whether your (initially empty HashSet) already contains it; if it doesn't, you add the value to the HashSet (representing having seen it once already in the array), but if it does already contain the value, then you know you've encountered it before, and the value belongs in the Y array.
What? What's an 'element'? What do you mean by 'subtexts'? Are you trying to create a desktop application?
[ScriptCompiler.cs](https://pastebin.com/PsS3GPmj) [RuntimeTester.cs](https://pastebin.com/3CCUwkYC) [Test.cs](https://pastebin.com/drnPz6Wq) Add ScriptCompiler to any GameObject and the other two files, save them in your downloads folder that way random crap isn’t floating around your computer lol. I’ve documented the code so you should be able to follow along. Interestingly enough, if you add RuntimeTester and Test into a single file, it works, which is weird because it wasn’t earlier. But it’s when the two classes get compiled separately in separate files that the NullReferenceException occurs. Please do excuse my shitty code, it’s only mock-up code right now. When adding to Unity, make sure you’re targeting .NET 3.5 in your player settings, and set your API Compatibility Level to .NET 2.0, do not use .NET 2.0 Subset. Enjoy.
Otherwise the engineering culture is really great! Let me know if you want a referral
They're generic terms I'm using. No, it's to interact with Unity
I wanna post the code so bad!!! But, like they are all saying. Start with Random. you might want to look at LINQ queries. and the .GroupBy methods. but this might be outside of the scope of your classroom. However, it would be appropriate for this. Writing multiple IF blocks and Loops is just bad methodology. [array1.Select](https://array1.Select)(n=&gt;......).GroupBy...
I was referring to Mono's support of .NET Windows PE executables. 
&gt; After many years of experience, some surgeons become lead administrators or chief surgeons at hospitals. Bad example with the surgeons since that’s exactly what happens. It isn’t unique to our industry Sauce: https://work.chron.com/possibilities-advancement-promotion-surgeon-26502.html
Removed: Rule 2.
Chief of surgery usually observe or assist, this to me would be like paired programming. But you're right, this is not specific to our industry. A surgeons knowledge about medicine probably doesn't go out of date every 3 years either!
Removed: Rule 4. It's a pretty broad requirement. Start off by defining a `class` that represents the trio of texts. Then put together a GUI that binds against that class object and outputs each text portion as you desire.
Some things go out of date, (like maybe having the jquery API memorized- although I recently failed an interview for exactly that) but many things I learn I feel translate to any language. Indeed, I enjoy porting over patterns I like from one stack to another!
Awesome man! Thank you so much
No worries!
If your loading classes from another assembly at runtime you can only access those classes using reflection not directly as you appear to be trying to. The best way to do this is to use interfaces and then construct classes from the loaded assemblies as the interface your main assembly knows and then you can use it via the interface. If you don't use an interface than the only option is via reflection where you search for the type in the assembly, then search for the method on the type and invoke it via the methodinfo.
Yes, plenty of concepts remain the same, but a lot of tools and platforms change drastically every 3 years. I'm sure surgeons need to keep up with the latest techniques and new tools as well, but I'd wager it is nowhere near to the degree as for a full-stack developer.
If you're working with RPi for your hardware projects, I've heard [Python](https://www.python.org/) is a good language to start learning programming with. It's pretty compatible across hardware - notably with Raspberry Pi. That should be able to give you plenty of fun things to do with your projects. &amp;#x200B; Arduino is a bit tighter to work with and would probably require you to use C/C++. For this, I would recommend learning C, which I think you'll find a bit easier to learn than C++ and far more applicable to your projects.
My boss/CEO at my last company was a knee surgeon by trade. He invented a new tool to do knee surgery, which made it so that knee cartilage could be sewn up and heal rather than be lopped off as is the current treatment. This allows the knee to be healed and not need a knee replacement. That’s just one example, there are new techniques and studies coming out all the time in the medical field. Some doctors (like some programmers) keep up with trends, and some don’t. There are plenty of programming jobs where industry trends are insignificant (embedded systems, etc). And many where the trends are super important (AR/VR). I work at a small company in middle America where you can learn one stack and stick with it forever if you want. 
Mid level nearing senior status, and I probably code 20 hours a week. The other 20 are spent helping others (juniors, other teams, qa on my team, and the lead/senior on my team) and in meetings....so I kind of feel your pain. But, I feel like my company has this figured out. If you become a team lead you have three different ways to progress; manager, architect, or principle engineer. I really wish other companies took this approach because it let's those that want to stay technical and those that don't, not. 
In order for "file1" to call methods in "file2" it has to reference it. References are added when compiling via the CompilerParameters class. If you want File1 to reference File2, you must compile File2 first, compile it to a file, and then provide the full path to the compiled assembly in ReferencedAssemblies in the CompilerParameters used to compile File1. An alternative approach would be to instead compile all of your script files into a single assembly. The CodeDOM CompileAssemblyFromFile() methods can accept an array, so you could gather all the script files together and compile them into one assembly. Then the assembly would not need to reference itself.
Whaaaat? I’ll have to try this. Thank you.
Does it support EF Core?
What are the advantages of using this over SQL Profiler?
Many do, but the better ones look at leadership and communication skills over pure development skill as those are actually more important in a management role, even in IT. I wasn't sure if I'd like it, but I've gotten good at. I was a lead for awhile, and went back into a dev role after a year. I found myself looking for ways to improve things like workflows, ensuring we tested and documented everything, figuring out ways to turn our team into a quick iteration group with lots of small turns, etc. It was something I was apparently good at and I've come to like it. That's why I'm moving into a new leadership role again, not sure how much development I will be doing at all but it only makes sense. 
Are you me? I went down this rabbit hole about a year ago and struggled with the same questions. I came up with a series of approaches, alternatives, mechanisms, abstractions, etc., but nothing ever felt quite right. Hoping somebody will give an enlightening response to this in exchange for fake internet points...
I refuse to leave a pure coding role. A formative experience for me was watching what happened to the managers around me when a recession hit. Demand for coders was down, but demand for middle-managers *cratered*. A friend who moved up to manager six years prior was out of work for 18 months -- at which point he finally got a job writing code his pre-manager programming language he had mostly forgotten while managing. Besides, what's more fun, writing code -- or attending meetings and explaining why the project's late or the code is buggy?
O YA
I completely agree with you.
1. Nullable and proper null handling or provide empty sets. If you are talking about executing DB procedures that may not have a return or a return you care about I often mimic the SQLite API and have an Execute method. 2. Build chain and inheritance for crossing application boundaries. This is your lowest common denominoator. You typically don't use it with the execption of a few stick or type specific scenarios. You can also tag interfaces with metadata and search through an assembly looking for all implementations of the interface. this makes self-configuration easier to achieve with a little reflection code. 3. You have the right idea and it can make some DI scenarios easier esp if you are still using XML base configuration as opposed to coded configurations. Personally I have many data types implementing a base data interface; often representing a LCD (lowest common) for a record in your system and then write my base repo query methods as generic to that base record interface. Note that you may end up wanting to have a more traditional hard coded list of methods to load data that are mapped to your business directives. It seems sexy to be able to query anywhere in code but it becomes unwieldy quick unless you keep to strict layouts elsewhere in the code (rarely done). I would also suggest an ORM mapping tool if you are not using one, even if just LINQtoSQL. It will save you a ton of time as most of this is done and you just need to wrap it so you can handle for upgrades and API changes in the right spots. As for a book. Personally I really like unity DI for some specific reasons around compilation and use of aspects. [This](https://download.microsoft.com/download/4/d/b/4dbc771d-9e24-4211-adc5-65812115e52d/dependencyinjectionwithunity.pdf) will give you all you need to know about unity DI most of which translates easily to any DI you like. I do highly suggest trying other tools like ninject and I'm sure some other folks have ideas as everyone has the one that they prefer. 
It was really new at the time so the only tutorials I ever found were on Xamarin's own website- stackoverflow wasn't even much help because everyone was new to it. What did help, was reading an intro to Android development for Java programers. I think it was actually like "Android development for Dummies" or something. That let me understand the structure that Xamarin was trying to wrap around.
Holy shit. We are a mid size company and have a hard time integrating 10 different products. They're all just independent applications that we claim are integrated but really aren't. They just all get hosted on the same machines.
Holy shit. We are a mid size company and have a hard time integrating 10 different products. They're all just independent applications that we claim are integrated but really aren't. They just all get hosted on the same machines.
Do yourself a favor and look into MediatR. It's a CQRS nuget package that removes and the boilerplate classes and interfaces you'd normally need to write. The wiki on GitHub has a great break down of the functionally and when/where to use it. I think if you play with that, a lot of your questions will be answered. Have a look. I'd be happy to answer any questions you have after.
If you pay them it does, it seems
Just don't use EF. Problem solved. 
Thankyou. I thought about the empty response concept more after writing my comment. Handling no returned data are for cases where a query param may be entered by a user and therefore can be expected to not return a result. Example is retrieving customers by a unique id that may be provided by user input. &gt; it seems as though you're intertwining a number of things that can potentially go together, but don't HAVE to. Nail on the head, i might deal with this outside of my query handling and save some pain. As for the other 2 questions, that confirms my suspicions. I was seeing examples of them but wondering if they had any real value other than providing a false sense of security.
Best is get a free tutorial. I started with visual basic as it is very simple then went to csharp then c then c++. It was time consuming but VB gave me the basics. Learning curve was not so steep. It helped in getting started 
Have you looked at the SignalR Client? You use that to connect to the SignalR Hub. From there, you can send notifications either way.
Why are examples in that blog entry using ref for array parameters? Does it offer some sort of performance benefit? I've always thought that it will make code slower for reference types if you don't actually need a reference to variable containing that array.
Thank you for providing me with this code snippet. I have a question regarding the `using (_client)` statement. Does TCPClient class automatically close the connection to client after the using block finishes execution?
I am sending custom acknowledgement after reading data from network stream as part of requirement to validate the message was received on the other end successfully without any data loss. Yes from what I read about it from [here](https://docs.microsoft.com/en-us/dotnet/api/system.net.sockets.tcpclient.close?view=netframework-4.7.2), `Close` method is supposed to send an acknowledgment. 
Well feel free to post the code because i'm still kinda lost. We didn't even mention queries or methods in my classroom.
2. &gt; I've seen quite a few examples of request/command/response classes all inheriting an interface that's empty. Is there a good reason for this? I can't see an example of adding to that interface that isn't a huge SRP violation but there must be some other value in inheriting these interfaces, what am i missing? Marker interfaces are often used in combination with CQS/CQRS and IoC container's to resolve handlers. public class Foo : IQuery&lt;Bar&gt; { } public class FooHandler : IQueryHandler&lt;Foo, Bar&gt; {...} With a setup like this and given that you have initialized your container, you can now say to the container, here is class Foo which returns Bar, and implements IQuery - route this query to the handler. The container looks over every registration marked with IQueryHandler&lt;Foo, Bar&gt;, calls the execute method on it and returns the result. This kind of architecture allows you to keep your controllers (or code-behind) lean since you only ever have a dependency on your mediator (query/command dispatcher) in them and it also allows you to build a pipeline for all the domain agnostic things and cross-cutting concerns. I really do recommend [MediatR](https://github.com/jbogard/MediatR) to do this for you. 3. &gt; Is there any value in adding an abstraction over Query/Command Handlers or is every handler having it's dedicated request/response objects enough in itself. I don't think so, at least never design it to be like that up-front. You are also unlikely to ever be working with the query handlers themselves if you resolve your handlers with an IoC container meaning that the abstraction is very useless. 
Also mind the following: using static f = System.IO.File; f.Delete("C:\my-precious.pdf"); &amp;#x200B; &amp;#x200B;
Every IDisposable i came across 'till date did release all the resources - e.g "closes a connection/file/stream/nativememory" 
It's entirely irrelevant
What you're trying to do is called sandboxing, to my knowledge. A quick google for "sandboxing C#" seems to suggest that [AppDomain is the answer](https://docs.microsoft.com/en-us/dotnet/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox). Check the search results yourself though, you know more about what you need than I do, and now you know the right word it'll be easier to find what you want. It's one of the rather frustrating things about programming, sometimes you can't find something because you don't know the right word for it.
direct link without giving your email: [https://stackifyprodwest.azureedge.net/prefix-latest/StackifyPrefixSetup.exe](https://stackifyprodwest.azureedge.net/prefix-latest/StackifyPrefixSetup.exe)
I'd prefer the one with manager education AND some technical knowledge.
Your getting downvoted but you are not wrong. EF is frontpage for databases. 
Where exactly did you see this? I actually don't see a for-pay version, just a comparison of Prefix (the free tool) and Retrace (their for pay product), but Retrace even says "for your servers" and is licensed per-server, so they don't seem to address the same problems.
Here it says that Premium is needed for anything not hosted by IIS (and why would you ever host .net core in IIS unless legacy conversion scenarios...): [https://docs.stackify.com/docs/prefix-using-with-asp-net-corekestrel](https://docs.stackify.com/docs/prefix-using-with-asp-net-corekestrel) Here it says that Premium is not free: [https://stackify.com/prefix\_premium](https://stackify.com/prefix_premium)
If you scroll down and look at the screenshots of use in their example you can see that this actually gives you a method-by-method breakdown of what queries are executed where in your actual codebase. Anyone that's ever inherited a code base that they aren't intimately familiar with has probably dealt with trying to track down a performance problem. Starting with a raw SQL query from SQL Profiler can make it virtually impossible to figure out in which method the query is actually being generated and where and how it's being called. So it's much more akin to [EFProfiler](https://hibernatingrhinos.com/products/EFProf), though looks like it does the code integration better (and doesn't cost a rather shocking $45/m or $740 perpetual).
&gt; Handling no returned data are for cases where a query param may be entered by a user and therefore can be expected to not return a result. Example is retrieving customers by a unique id that may be provided by user input. No data is still a result. You are free to choose how you would want to represent that. A lot of places use `null` to indicate that there is no data, but other places create a `Result` object that contains a flag if there was any data(and the data if it has any). And there are even more solutions that all would be fine to use.
That's... interesting. I skimmed the blog post and clicked through to the [Prefix product page](https://stackify.com/prefix/) and there's no mention at all of a premium version.
Sandboxing is a hard problem. Which is why there is a huge `caution` box on that page. There have been plenty of exploits that managed to break out of the appdomain sandbox. Both related to appdomain problems itself as well as the implementation using it(it is relatively easy to expose a function to the sandbox that has more privileges than you thought)
Please be aware that, if you are just getting started, C++ is brutal. C# is definitely more viable to start with than C++, but I would suggest learning a more simplistic and easy to read language like python and then graduating to another stack when you feel comfortable. Learning the concepts are a lot less boring when you can realise what you want to make without too much hassle, using easy to read code. The hard and boring part is going through the basics. It will be much easier to develop a passion once you are able to make what you want to make and not just follow a tutorial. TLDR: don’t run before you can walk... start with an easier language and work up. Try experimenting and building your own things early to make it less boring! 
Can Roslyn compile source code files into memory easily like CodeDOM can? And can it target the .NET 4.5 framework? If so, I’m sold. I just watched a one hour presentation on Roslyn and the first bit was extracting class and method names using C#, pretty stoked.
I definitely wouldn't say that. EF is just an ORM .. and I rather like being able to work with objects from the database with a state tracker built in. People were writing their own implementations of ORMs for a reason long before EF came onto the scene.
I'll check, but if there are GUI components, then I'm going to say no, because it runs with no output to the CLI, writing instead to a log file.
Be aware that AppDomains got removed in .NET Core.
&gt; And can it target the .NET 4.5 framework? It targets .NET Standard 1.3, so no: .NET 4.5 is not supported.
I'm not denying it may speed things up, but running VS in debug mode, using breakpoints on code lines that execute SQL and viewing the SQL that is generated is hardly "virtually impossible".
It is the primary reason people get stuck in middle management and also that most middle managers suck. They don't have the skills that they need to succeed (or rather the skills they have and which got them there are not useful once there) and thus they will never get another promotion. Then they get bitter about being set up to fail, their technical skills atrophy, and they are basically stuck. It is no good for anyone.
What do you prefer to use?
Ugh. That makes sense. I had to change all of the student groups *from* Universal *to* Global, to be able to put them into the Password Policy container. Is there a way to specify in the code that I want to add to a Global group, or am I stuck changing my logic for the students and the password policy?
Off the top of my head, I do not know. it would be nice for us to see a code snippet and we can/might be able to help.
 typeof(Path).Assembly.GetType("Syst" + "em.I" + "O.Fi" + "le").GetMethod("De" + "lete").Invoke(null, new[] {"C:\\my-precious.pdf"}) This can easily be made way more complicated. You'll not have luck with either string parsing nor reflection. Sandboxing is extremely hard - more like near impossible.
If your string is in the format `"15-12-2018 14:12:00"`, why are you trying to parse it with the format `"dd/MM/yyyy"`?
&gt;Handling no returned data are for cases where a query param may be entered by a user and therefore can be expected to not return a result. A query not returning data because nothing matches the parameters is not the same as a query that isn't expected to ever return results. It was a bit confusing how you were wording it, but if a query happens to not return anything because something with ID -999 isn't present, then the return type should still be able to handle that. &gt;it might actually be better to distinctly define "GetCustomer" and "GetCustomerOrDefault" queries. I don't necessarily like the split here. I think it's entirely reasonable for GetCustomer to return a null value if the consumer is asking for a customer that doesn't exist. I don't think there needs to be an exception thrown or some sort of check whether the returned customer is a default customer or the one I asked for. Your consumer is going to have to do a check on their side to know what they're getting back. Splitting the methods adds confusion and means more that you have to think about and support.
Well that isn't a problem. What part would you like to see? Again, please take into consideration that I'm *not* a programmer (even though I was taught the basics 13+ years ago in college), so be gentle ;)
The segment that is throwing the error. Whatever is failing to work. should be an entire method like. &amp;#x200B; public void Log(string logText) 
Mabye i have become blind by looking at this, the string is in the format "2018-10-25 26:03:43" now, and i tried to parse it with: DateTime date2 = DateTime.ParseExact(reader["logdato"].ToString(), "yyyy-MM-dd hh:mm:ss", null); same problem
 foreach (DataColumn column in ds.Tables["Table"].Columns) { switch (column.ColumnName.ToLower()) { // Be sure the user is member of the ???-Students group case "memberof": if (r["accountDisabled"].ToString() == "True") break; string[] groups = r["memberOf"].ToString().Split(';'); foreach (string g in groups) { DirectoryEntry grp = new DirectoryEntry("LDAP://" + ADServer + "/" + g, null, null, AuthenticationTypes.Secure); if (!grp.Properties["member"].Contains(user.Properties["distinguishedName"].Value.ToString())) { try { grp.Properties["member"].Add(user.Properties["distinguishedName"].Value.ToString()); grp.CommitChanges(); Log(user.Properties["sAMAccountName"].Value + " added to LDAP://" + ADServer + "/" + g); } catch (Exception e) { Log(e.Message + "\n" + e.Source + "\n" + e.StackTrace + "\n" + user.Properties["distinguishedName"].Value.ToString()); } finally { grp.Close(); } } } break; case "destinationou": // If the user is not in the right OU set the flag moveUser to TRUE if (user.Parent.Properties["distinguishedName"].Value.ToString() != r[column].ToString()) moveUser = true; break; case "accountdisabled": int val = (int)user.Properties["userAccountControl"].Value; if (r[column].ToString().ToLower() == "true") { // Disable user account user.Properties["userAccountControl"].Value = val | 0x2; //user.Properties["department"].Value = DateTime.Now.Year; } else { // Enable user account user.Properties["userAccountControl"].Value = val &amp; ~0x2; //user.Properties["department"].Value = r["department"].ToString(); } break; // List of managed standard user attributes //case "homedirectory": // user.Properties[column.ColumnName].Value = r[column].ToString() + "\\My Documents"; // break; case "extensionattribute10": if (!r[column].ToString().Equals("")) user.Properties[column.ColumnName].Value = r[column].ToString(); else user.Properties[column.ColumnName].Clear(); break; case "extensionattribute3": if (!r[column].ToString().Equals("")) user.Properties[column.ColumnName].Value = r[column].ToString(); else user.Properties[column.ColumnName].Clear(); break; case "extensionattribute11": if (user.Properties["extensionattribute10"].Value != null &amp;&amp; !r[column].ToString().Equals("") ) user.Properties[column.ColumnName].Value = r[column].ToString(); else user.Properties[column.ColumnName].Clear(); break; case "extensionattribute4": if (user.Properties["extensionattribute3"].Value != null &amp;&amp; !r[column].ToString().Equals("") ) user.Properties[column.ColumnName].Value = r[column].ToString(); else user.Properties[column.ColumnName].Clear(); break; case "company": case "department": case "departmentnumber": case "description": case "displayname": case "division": case "givenname": case "homedirectory": case "homedrive": case "mail": case "scriptpath": case "sn": case "title": case "userprincipalname": // Set the attributes if (!r[column].ToString().Equals("")) { if ( !r[column].ToString().Equals(user.Properties[column.ColumnName].Value) ) user.Properties[column.ColumnName].Value = r[column].ToString(); } else user.Properties[column.ColumnName].Clear(); break; default: // If the attribute is not supported, do nothing... break; } user.CommitChanges(); } It's on that last user.CommitChanges(); call that I get the error. &amp;#x200B;
It does, i'm using it just now. You just need to install nuget and add middleware in config before mvc moddleware.
It showes exceptions, requests and responses, gives hints on running same queries multiple times, everything is nicely visualized. I have installed it today and like it so far, even fixed some performance issues i found in the asp.net core app im curentyly working on.
Maybe just use "DateTime.Parse" instead of "DateTime.ParseExact". Parse tries to find the best match for the input string, iirc
DateTime.Parse(reader["logdato"].ToString()); gives the same error. :(
&gt; But I found that when I created a large array, about 2GB, the memory stayed in use even after the task should have ended. How are you verifying this? Are you aware of how the garbage collector works? This can even be the case with just a regular method, no Tasks involved.
Is the actual string "2018-10-25 26:03:43" or was that just an example? Because that string is invalid (26 hours)
ok taking a gander now...
Well, I first became aware there was an issue when I had a Task that had an infinite loop in it, sending messages to the console every second, even after pressing the stop button in the Unity editor. I wanted to test if a normal Task that ended with return would cause tasks to spawn that wouldn't stop, or hold onto their resources. My next test grabbed around 2GB of ram, then ended, and I used GC.Collect(); GC.WaitForPendingFinalizers(); to trigger the garbage collector after the task was completed, but the RAM was still being used, according to the windows Task Manager.
I think your task has ended. But the runtime is not obligated to release that memory until it is good and ready. That said, I would expect it to be released rather quickly unless you accidentally still have a reference to it somehow.
damn how did i miss that... im a fucking idiot! Thanks!!
That's what I've been doing, and I even used GC.Collect(); GC.WaitForPendingFinalizers(); to try and hurry the garbage collector along. But I haven't seen the memory get released until I restart the Unity editor.
I would not try to force the GC to do anything. The common wisdom is that it knows better than you, so let it do its thing. After your 2GB is allocated and your task is ended, are you doing anything else to use up memory? Its possible that the GC will not release the memory until you need it elsewhere. Try creating a second need for 2GB after the first task is ended. You might find that your app is using a total of 2GB, meaning the first 2GB got released.
It's probably still a cli application, but doesn't require input. Without seeing source code, I don't think anyone will be able to give you the help you need. 
I normally wouldn't, but this was for a test. My test app has a button to make a task that grabs 2GB so I can push it more than once. I pushed it until I was using 14.7 of my 16GB of RAM and it didn't get garbage collected.
&gt;System.DirectoryServices.DirectoryEntry.CommitChanges() Stupid question. Are you running this application with elevated privledges? By default Visual Studio does not run with elevated privs. you have to Right Click - Run as administrator
thanks! i managed to figure it out aswell. Must had been looking at to long to see it. one odd thing i have truble with is ordering by date(logdate) desc it dosent work, the output i get is just in the same order no matter if i use asc or desc. if i use the same query in a sql browser, it orders the data just fine, do i need to do something special in c# ?
Might want to use Microsoft's Managed Extensibility Framework (MEF) to load your dynamically generated assembly and import the component you want. You'll have to use some interface or abstract class that is in a common assembly referenced by both your "main app" and the dynamic assembly. MEF is an IoC tailored for plugin architectures which is effectively what you are doing -- your generated assembly is functionally a plugin for your app.
Another test you can do is get your test app up to 14.7 GB of ram again and then launch something else. Like photoshop or Far Cry or something else that takes a lot of memory. If you see the memory usage of your app decrease in order to allocate memory to the other app, then I'd say everything is working as it should and you shouldn't try to fix anything.
It doesn't give an exception, no. I hadn't tried pushing past the limit before. But when I did, it started using disk; probably a page-file or something. I only know a little about how windows does that. I'm not sure why it's only garbage collecting at the absolute limit, though. &amp;#x200B; Anyways here's the testing code. using System; using System.Collections; using System.Collections.Generic; using System.Threading; using System.Threading.Tasks; using UnityEngine; using Unity.Jobs; public class GameController : MonoBehaviour { // Properties Task Button2Task; // Methods private void Start() { } public void Button1OnClick() { Thread.Sleep(10000); MessageExample(); Debug.Log("Button 1 Function Complete!"); } public void Button2OnClick() { Button2Task = new Task(() =&gt; { int[] bigArray = new int[800000000]; for (int i = 0; i &lt; 800000000; i++) { bigArray[i] = 1; } Thread.Sleep(10000); MessageExample(); Debug.Log("Button 2 Function Complete!"); }); Button2Task.Start(); Button2Task = null; return; } public void Button3OnClick() { GC.Collect(); GC.WaitForPendingFinalizers(); Debug.Log("Button 3 Function Complete!"); } public static void MessageExample() { Debug.Log("MessageExample Run"); } private void OnDestroy() { GC.Collect(); GC.WaitForPendingFinalizers(); } private void OnApplicationQuit() { GC.Collect(); GC.WaitForPendingFinalizers(); } } &amp;#x200B;
Does your company offer a visa sponsor?
Sorry for the late reply! I'll try to explain what I did. &amp;nbsp; When hitting a "Get" command I could see the user/pass in the header, but I had to put the code in every function. &amp;nbsp; To get around that I made a Class called "AuthAPI" and made it inherit "AuthorizeAttribute". Then I overroad the OnAuthorization function. So right now my Auth code is there. &amp;nbsp; All my controllers use it like so: &amp;nbsp; [AuthAPI] [Route("")] [HttpGet] public IHttpActionResult GetAll() { //code to pill items } &amp;nbsp; Does that make sense?
Ahhhh nice one! It totally makes sense and that's a nice way to do it :)
Might not be helpful but this code works for me. Note I'm not running in Unity, just a windows forms app. And I only implemented Button2. And I removed the sleep. But if I click the button, I get about 2GB of usage (I'm using task manager to see it). After a few seconds it goes back down to 14 MB. If I spam the button I can get it up to about 8GB before it quikcly starts dropping down to 14MB again. Perhaps Unity is overriding the default behavior somehow? Still, I would not worry until you do the other test I mentioned. As long as you dont get an out of memory exception, there isnt really a problem wouldn't you agree? 
You need a memory profilers so see what is holding the array in RAM. https://www.bing.com/search?q=.net%20memory%20profiler&amp;qs=n&amp;form=QBRE&amp;sp=-1&amp;pq=.net%20memory%20profiler&amp;sc=8-20&amp;sk=&amp;cvid=5A761767162141D5BD0BF846249E66EC
it's giving me a blurred image where only one image is recognizable.
I wonder if this new group has anything inherited that's messing it up... I can see nothing wrong with the code...other than it is a disorganized mess, but it seems it would do the job. you could put a try{}catch{} block around it if it is adding them to the group successfully. and it would simply avoid giving you and error.
Have you tried doing any memory analysis via a memory dump or the debugger? Should be pretty straightforward to track down if there any references being held to this giant object. IIRC sometimes the reference structure can be a bit confusing with tasks, especially if you're using completions, and mixing things like TaskCompletionSource and CancellationSource.
Locking shouldn't have anything to do with that. You showed no locking code in your post, either.
It's the img2array function. I asking if you know why it's not working or if you have alternative ways to achieve that. 
.NET Core was originally called .NET 5. It's now clear that was their intention... .NET Core is the next version of .NET Framework. .NET Framework 3.5 no longer receives new features. And why should it? If you want new features, use .NET Framework 4.7. .NET Framework 4.8 is going to be the same way relative to .NET Core 3 and forward.
check hangfire framework.
check hangfire framework.
Thanks! I'm assuming that I'll be able to load the account's Roles from here as well. Then the controller would look like: &amp;nbsp; [AuthAPI(Roles = "Full Access")] [Route("")] [HttpDelete] public IHttpActionResult DeleteItem() { //code to delete item } &amp;nbsp; The hope begin, if the user's role was "Read Only" or "Add/Update", they will not be allowed access. I'll be trying that a bit later today.
You apparently deal with less shitty codebases than I do, then. Glad you don’t need it, it’s still a nice tool. 
Maybe you need to include the `img2array` function then. If you are locking them, then that time would only apply to the `img2array` portion, so maybe it won't save you much time.
Yeah! I have mine set up as the following for Admin privileges: [Route("api/product/price/admin")] [Authorize(Roles = "Admin")] [IgnoreCacheOutput] It works like a charm! 
Please, don't get me started on this guy's "programming" capabilities. If I had more time I'd like to take the 2 scripts that we have and convert them into Powershell (something I'm a bit more familiar with), and get rid of his scripts... But I don't have that luxury. He didn't document them, either =/ I'll look into the try/catch and see if I can get around it, but they need to be set to groups at some point. &amp;#x200B;
Unless I paste the entire application's source code here, I don't know where I could share it all. I've not had to ask for help with this stuff because it's been more of a maintenance thing for me, so this is all new.
The MSDN documents is always a nice start, like you said. I'm also a fan of [TutorialsPoint](https://www.tutorialspoint.com/entity_framework/) and just Microsoft [docs](https://docs.microsoft.com/en-us/ef/ef6/get-started).
Quartz.NET
I've used Quartz.NET. I wouldn't have suggested it in the past but it's come a long way now and the only potential competitor to it (FluentScheduler) seems to have been more or less abandoned. I've used Quartz.NET in production and it worked really well.
A good friend suggested books.goalkicker.com. Free programming and development book and notes. There is an EF book that has pretty good coverage. Hope this helps!
Good to know! &amp;nbsp; Thanks for your help! 
Thank you!!
http://lmgtfy.com/?q=entity+framework+tutorial
Funny thing, that's how I've found the tutorials I've already started using. I was just curious if other people have their own input :) thanks for the link though ;)
https://www.udemy.com/entity-framework-tutorial/
The unity engine last time I used it runs any apps in the same process as the editor. It also doesn't respect IDisposable (ran into an issue with this before, socket closures on disposables not being called, leading to failures on multiple play,stop,play). You need to actively hook into unity's own shutdown methods and dispose of any resources that you don't want to leak when working in the editor. Don't expect Unity in editor to behave like a normal .net app.
I went to Visual Studio Live in Las Vegas last year, and really enjoyed it. Just don't use an email address you care about because they'll spam the fuck out of you after the event.
 You do DI IMediator, but why would you want to DI every individual IRequestHandler? In Mediatr, one request can be handled by many handlers, so sending one event doesn't guarantee only one thing can happen with it. You only need one instance of IMediator, but can call however many requests you want from it. Each IRequestHandler is also DI'd however, so if you need an EF context or something, you can just have a constructor on your Request Handler and it will just work like Mediatr.
Read everything that **Julie Lerman** has written! [http://thedatafarm.com/blog/](http://thedatafarm.com/blog/) &amp;#x200B; She also have a number of courses on PluralSight. [https://www.pluralsight.com/search?q=entity%20framework&amp;categories=all](https://www.pluralsight.com/search?q=entity%20framework&amp;categories=all) &amp;#x200B; She knows what she's talking about! &amp;#x200B;
And before. About 20% of my daily emails are from VSLive.
I went to OSCon this past year in Portland, it's not a strictly .NET or C# conference, but the variety of technologies covered helps to keep the conference accessible to a wide audience. Highly recommend.
I enjoy a lot of the platform agnostic ones. Codemash is one I try to attend every year. Jon skeet usually shows up. But I’ve also heard Devintersection is really good. 
This. If your process stops, the OS will mark all its held memory as garbage, regardless of runtime. The Unity engine itself is running, it's holding the memory. GC probably won't come either, as Unity might have a reference to that big object. It's not a problem. Thr next time you start up the game from the engine, the garbage will be overwritten. 
I'll second Codemash. Went last year for the first time and really enjoyed it.
NDC is super fun if you want .NET specific things! Definitely attend PubCONF afterwards as well.
OMG, I didn't have to give them info to download it!
Merging two images like this via `unsafe` seems to work just fine: [gist](https://gist.github.com/rakijah/74c0320f58560595dc188940a803c7ec). Haven't tried the marshaling approach you're apparently using. Just guessing, but shouldn't your `j` iterator be incremented by 4 instead of 3? If your data array looked like this: data = { blue1, green1, red1, alpha1, blue2, green2, red2, alpha2, ... } `j` would first be 0, the index to `blue1`, add 3 and you reach `alpha1` instead of the intended `blue2`. Maybe I'm misunderstanding the way the data arrays are layed out though.
Unity does a lot of things in their own "Unity" way. It's probably still running on mono too.
You can make an overload that doesn't take the model parameter.
Do you mean a copy of this whole method without the last parameter? I wanted to avoid this but would do that if this is my only option, I want to avoid maintaining both methods but I agree this would work.
After having put in the Try/Catch block, I caught a student object that hadn't been removed from an old student group, and so the program was getting caught. I'll have to change the block so that it writes to the logfile, and not to the console window. Now I've got another problem, but it's something related to SQL so I'm sure that I'll figure it out. Thank you a TON /u/Eaglescout801 ... I wouldn't have thought to try that block of code. It brought me in a completely different direction than what I originally thought. It's at times like this that I wish I had more time to study/implement a coding language to become proficient in it, and be able to fix these problems/create better applications.
Seems like a fun way to handle this path. Any open source project to recommend?
MS Build in Seattle this year was great, if you're working with, or moving towards, Azure. Lots of stuff on show and plenty of knowledgeable microsoft &amp; non-miceosoft bods to interact with. Bloody expensive though.
Interesting perspective, and the answer is coding for sure! Hahaha
 public static void ProcessStuff(int number, string name) =&gt; ProcessStuff&lt;object&gt;(number, name, null); You shouldn't need to copy the methods, that way. Alternately, you could split them so that the version with the generic object does the stuff with the object, then calls the method without the generic parameter: public static void ProcessStuff&lt;T&gt;(int number, string name, T model) where T : class { if (model != null) { //Do stuff } ProcessStuff(number, name); } public static void ProcessStuff(int number, string name) { // do other stuff } which might let you turn the null check in the generic version into an assertion and make a stronger promise about the value and/or remove the constraint requiring that `T` be a reference type.
Thanks guys! I will try to use your advice!
just a quick lazy thought - make sure you arent overflowing 255 ie byte.MaxSize
Thank you, I will try to deal with this program!
Sure thing. Doing try{ code... } catch(Exception e){ code... } you can put a breakpoint there and hover over 'e' and see what's wrong. Glad to help! 
used performance monitor to see the sizes of the memory allocation. The items in your array could be in the large object heap which only gets collected when it has to reallocate space or when the 2nd gen is collected. Also you could be causing a lot of gen 0 and 1 collections forcing your array into gen 2... meaning it might live for awhile. peformon.exe should show you whats going on 
 `public static void ProcessStuff&lt;T&gt;(int number, string name, T model) where T:class , new()`
You can try ready to use license generator [https://www.codeproject.com/Articles/996001/A-Ready-To-Use-Software-Licensing-Solution-in-Csha](https://www.codeproject.com/Articles/996001/A-Ready-To-Use-Software-Licensing-Solution-in-Csha). As you mentioned and others mentioned below it does not make sense it is best to leave it to the experts.
Thank you for your opinion! &amp;#x200B;
I first learn [VB.NET](https://VB.NET) and wasn't ecstatic about it. I was interested in the coding portion, but just didn't like how the language was used. I didn't look neat to me and I got bored with especially with finding out that companies are trying to phase out VB . I quit coding all together for about two years. I got a student worker position in the IT department of my college and got to meet a lot of great people, though none of them were *programmers* . I worked in Customer Services and would sneak off to go learn from our System, Network and Security admins in our Infrastructure team. The Security Analyst would give me small projects to do from time to time, just to see if I had an interest in security. He started me with just simple batch (.bat) files/scripts to create. First started with simple stuff like create a new notepad, output results from the windows cmd to a .txt file and move files from a remove computer to another. He'd teach me a bit of security with these and how I could utilize them in other ways. However, writing these scripts were the most exciting part for me. I then switched my major to Software Development and took a C# and C++ classes as soon as possible. C# turned into the language I've always wanted to learn. It's neat (to me) , and I can organize it pretty well, I feel. I loved C++ and would love to go back to it as a hobby some day. I ended up applying for a Jr. Software Dev job where I'd be working with C#, SQL and VBA (VB for Applications) and actually getting hired before getting my degree. There's definitely parts about each language that is boring to learn, especially when you realize just how similar each one is. Classes definitely don't help with that. I took C# and C++ at the same time, and ended up just doing the same thing in both classes, exercise-wise. My C++ teacher was just *very* good about giving us the overall goal, and then letting us figure out how to write it, which, in my mind, is a fantastic way to teach as it applies to how my actual job works. TL;DR: Doing is the best way to learn it. Being taught the language is different than learning it.
Even though it isn't one statement? How would I do it? 
Edited. Happy now?
This looks loke a one-of error: if `list.length` for example is 5, the highest index is 4 (going from 0 to 4). Your a will be 4 in the last iteration, but you compare it to list\[a+1\] = list\[5\] which is out of bound. 
I'm mobile but I'll try... If() {return true;} else{return false;} 
Debug. Add watch on both list objects. You will determine what is going wrong.
It doesn't, sometimes it throws an `System.IndexOutOfRangeException: Index was outside the bounds of the array` exception. Here's the fix: for (int a = 0; a &lt; list.Length - 1; a++) { You need the `- 1` to account for the `list[a + 1]` on the next line. Otherwise you'll read past the end of the array.
I literally do not believe you. What values for list have you tested with? Also, this will never return false; you'll get an ArgumentOutOfRangeException trying to get list[a + 1] when a is list.Length - 1.
There is only one IF statement in your code. 
No, I mean u/realjoeydood doesn't know what he is talking about.
[Still nope](https://www.reddit.com/r/csharp/comments/9rd3a1/why_does_this_always_return_true/e8fxzp8/?st=jnoycc9l&amp;sh=46726cca)
 class Program { static void Main(string[] args) { var test1 = new[] { "AAA", "BBB", "BBB", "CCC" }; Console.WriteLine(if2StringsNextToEachOther(test1)); //true var test2 = new[] { "AAA", "BBB", "CCC" }; Console.WriteLine(if2StringsNextToEachOther(test2)); //false } static bool if2StringsNextToEachOther(string[] list) { for (int a = 0; a &lt; list.Length - 1; a++) { if (list[a].Equals(list[a + 1])) { return true; } } return false; } } 
Just out of interest, any difference if you use `==` instead of `equal`? &amp;#x200B; I must admit, I'm very bad remembering the difference and have to read up on it every time. 
Well you'll never get it to return false the way he had it originally. So, one step at a time.
your code works. Well it throws an exception, because you are checking out of the array index (off by one) but otherwise it works fine as described. static bool if2StringsNextToEachOther(string[] list) { for (int a = 0; a &lt; list.Length -1; a++) { if (list[a].Equals(list[a + 1])) { return true; } } return false; } string[] test1 = { "a", "ab", "abc" }; //false string[] test2 = { "1", "", "" , "5"}; //true 
Of course they do, they all have the same symbol twice in a row.
I facepalmed at myself. I'd never have this figured out by myself. Jesus. 
Try stepping away from the PC and writing it down on paper. Break any task into the smallest steps you can think of, then iterate on that. When you can't break anything into smaller steps, then you're done.
Look at other solutions and start duplicating the code manually. Get used to typing the answer and your brains will eventually start putting tje pieces together even if your conscious mind does not get it yet. DO. &gt;We are what we repeatedly do. Excellence, then, is not an act, but a habit. Will Durant Read more at: https://www.brainyquote.com/quotes/will_durant_145967
Haha, just reading this now, I love bugs like this! :D
Same. But not when I make myself look stupid in front of a community :/
Well, first this isn't Stackoverflow and second I don't think you have written code if you haven't made such mistakes :)
I never have asked a question on stackoverflow. Is it bad if you make such a basic mistake? And yeah, that's true 
Well, SO is great if the question is already there and answered, but if you have a new question you can feel stupid quite fast\^\^
I actually love the existing questions, helped me a lot before. But (according to r/programminghumor at least), asking new questions is a nightmare
Here's a sneak peek of /r/programminghumor using the [top posts](https://np.reddit.com/r/programminghumor/top/?sort=top&amp;t=year) of the year! \#1: [Junior vs Senior](https://i.redd.it/bgdpq3rjjyn11.jpg) | [5 comments](https://np.reddit.com/r/programminghumor/comments/9i781n/junior_vs_senior/) \#2: [Believe me, run it again.](https://i.redd.it/x3h0rv7s2tn11.jpg) | [1 comment](https://np.reddit.com/r/programminghumor/comments/9i0d65/believe_me_run_it_again/) \#3: [I've been stuck in the last one for a while now, any suggestions?](https://i.redd.it/acg1b869w5n11.jpg) | [8 comments](https://np.reddit.com/r/programminghumor/comments/9h3knk/ive_been_stuck_in_the_last_one_for_a_while_now/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
If you want a desktop lightweight environment, instead of an in-browser, you could use the excellent [Linqpad](https://www.linqpad.net/) and follow the tutorial there. 
Thanks. I just fled back to VSCode for now ;)
check: project | properties | application | project type = console application.
Replace the contents of the main function with... ```Console.WriteLine("Oops, something went wrong! We've been notified.");``` ...et voila. Fixed!
The Nuget seems mandatory for dotnet core apps. So it's showing the EF Core commands? 
You could also use repl.it: https://repl.it/repls/HarmfulAggravatingBuckets 
He hasn't had to inherit code with horrible, obscure homemade ORMs. The things I've seen...
It’s a feature, not a bug!
Syncfusion has some free ebooks. https://www.syncfusion.com/ebooks/entity_frame_work_core_succinctly It's very succinctly as the name suggests.
........ It's a browser 
oops, duh i'm a ding dong coder today, gonna stop replying for a bit haha. time to bury my head in some video games for the next few hours.
Just start typing... start somewhere, try working the problem backwards or from the middle, once you start writing things down you can start to see what's not working, what's wrong, etc... &amp;#x200B; Few people are going to sit down and work on a script or program and be able to write it from start to finish without going back and fixing bugs, typos, logic flaws, etc...
When you create a large object like an array, it is allocated on large object heap. That heap is processed by GC only in case of generation 2 of small object heap being collected. So, your objects probably occupied generations, but small object heap stopped growing, and as result generation 2 never get collected as well as large object heap
That's what I was thinking. Happens with sorting algorithms a lot when they have to find the midpoint. You can see the bug in their code right now.
How does this in browser compilation thing work anyway? 
I did remember reading something about that, but didn't spot anything in any of the articles I found on AppDomain. Thanks for mentioning that. 
Yeah in the past I was doing some stenographic stuff and that was the source of one of my errors. Doing something like 120 + 80 + 150, goign past the 8bit limit of 255 for a single RGB pixel value
They generally don't let you add code per se, you get access to a scripting language that has no direct relation to the underlying code. Stupid example but: &lt;ThisIsHatefulXml&gt; &lt;Condition&gt; &lt;Proximity asCloseAs="10" of="perimeter"&gt; &lt;Move relation="facing" distance="-10"&gt; As an alternative, have a look at [RoboCode](https://robocode.sourceforge.io/) which supports .net and sandboxes.
repl.it is my favorite C and C++ IDE/playground lol
And terribly crowded. Sessions were often full. They didn't have proper seating for lunch. You had to find random tables or sit on the floor. I wouldn't recommend this conference based on those factors.
/u/YazanKhatib 
That puts a lot of faith in whatever sandbox you're executing someone else's code in. Pretty cool though.
Another lazy thought - you wil lhave to look into stride https://docs.microsoft.com/en-us/dotnet/api/system.drawing.imaging.bitmapdata.stride?redirectedfrom=MSDN&amp;view=netframework-4.7.2#System_Drawing_Imaging_BitmapData_Stride
Probably nothing but VS Code is so slick there's almost no need for anything else. 
I'm going to try to, I do my JavaScript and front end work there....kinda want to stay there.
I downloaded it, u will try it for sure, I'm inclined to stick with VSCode , but it is early, who knows where I will end up.
TY
Agreed, and Visual Studio Mac isn't terrible either. 
Technically, your javascript works in the browser, but yes, vs code is an all around kickass editor. 
Yea, I enjoyed that last year. Luckily all their emails are routing to my spam box. But I checked and i'm getting at least one a day for the past month.
What do you use for a debugger/watch?
VS Code. 
1
Visual studio has turned into a resource hog. If you just need lightweight coding environment that can do 90% of what VS does, VS code is just fine. 
IMO programming C# code in VS Code is like riding a tricycle as an adult. Use Visual Studio Community edition, its worth it. Its like having a car vs the tricycle abomination of VS Code for C# development/learning Although VS code is great for other langs
It's less of a nightmare the more well thought-out and researched the question is, including effort, as long as it's on-topic (like how you don't go to the grocery store to buy books because both are "shopping"). For this question, SO would focus on: - SO is not a debugger. You can step through yourself and see exactly which step doesn't give the result you expect. It's never too early to start using one, or at least _some_ method of narrowing down the problem as much as possible. When you have that information, it 100% belongs as part of the question and the question has shifted from "debug this for me" to "I don't understand why this single operation produces the result it does given these inputs". The code could then be shortened to just be that operation instead of including all the ones that you've already found to cause no problem and making everybody who looks at the question duplicate the work of finding the problem. - There was originally no input, so nobody has an example of which string gives you an unexpected result and at which step of the method. Any input (and code in general) supplied should also be the minimum to reproduce the problem. Here, that would likely be a list of two strings that returns true when you expect it to return false. It's also likely that in coming up with that minimal input (and code), you'd realize that none of them are supposed to be false and you've answered your question before you've finishing asking it. At that point, it's up to you whether you think it's useful to others to post the question and your own answer, or just drop it entirely. - The program is incomplete; anyone who wants to test it out and replicate the issue has to go add a bunch of stuff to get it running. It's also possible that what they add is something that fixes the problem and suddenly they can't reproduce the issue. Better to give something complete (but still as minimal as reasonable). - The out-of-bounds issue. It's not an answer to the original question and doesn't belong as an answer on its own, but it would definitely be pointed out. That's a good thing - it's now a problem you don't have to solve after you find the answer to this one. - Style improvements. Again, not a direct answer, but still handy for the future. `list[a].Equals(list[a + 1])` is uglier than `list[a] == list[a + 1]` and this isn't Java - string equality is commonly done with the equality operator in C#. There's often a "better" way to do an entire piece of code. Not an answer unless it also solves the problem and meets the requirements outlined in the question, but good to know for future coding. Unfortunately, C# doesn't quite have the tools included for how I'd tackle this problem, but I can offer a Kotlin equivalent that completely avoids the off-by-one error and reads more like English, and we can pretend for this example that it's C#: fun if2StringsNextToEachOther(list: Iterable&lt;String&gt;) = list.windowed(2).any {(x, y) -&gt; x == y} That is, take the list, go through grouping them into pairs (a sliding _window_ of size 2), and check if any pair has both elements equal. Admittedly, the string comparison is still a better example of what I was trying to get at, but sometimes it's the entire function or problem instead of a small piece of it. If it works better and solves the problem, great, you have a solution and you learned something about how people might normally do that task. An answer should still explain why the original code doesn't work, with the alternative method being a bonus. If it doesn't solve the problem because there's another restriction, that restriction should have been in the question to begin with. For example, if you can't use the standard data structure designed for the task because you're learning how to implement it. The first three of these are courteous to people who are being asked for free help anywhere, whether that be a coworker, a friend, or some people online. The site is less about making it a nightmare for you to ask a question and more about having high-quality questions that future visitors can actually use. As you said, it's very helpful when looking for existing Q&amp;As. This is how it got to that state. Not to mention a genuinely good question usually makes people _want_ to help because you've done the boring and/or error-prone part for them. I learned how to ask a good question by spending a lot of time there, and I feel much better off for it. It takes time and learning from mistakes, but criticism isn't personal, it's something to improve on. Similarly, duplicates aren't a bad thing as long as they answer the question. Sometimes they're hard to find unless you know what to look for. Sometimes you have to take a step back to realize one of the answers there does answer this question too. Sometimes the person/people picking the duplicate are mistaken and need it explained why it isn't a duplicate. I don't see that happen nearly as often as the circlejerk would have you believe, but when I do, I triple check that it's a bad duplicate and then reopen the question, leaving a comment if there wasn't one already explaining why the duplicate is bad. Most of all, learning how to go through the process of narrowing things down, simplifying and minimalizing things, verifying your assumptions, etc. is what helps when you hit the real world and your problem is too complicated or obscure for a site like StackOverflow to actually help, or when the problem lies with how your company's private code interacts enough that asking _actually_ requires giving away too much private code or infrastructure that you can't simplify. Those situations are when you're pretty much on your own. Anyone who can only ask questions by dumping their code and having other people fix it is going to be screwed by that point, so I'm personally thankful that I got that experience from spending time on SO and interacting. I noticed the number of questions I ask has dropped over time, even when learning brand new things. Of the times I do ask something, I usually figure it out while asking. A simple example was using Python for a school project and narrowing down my problem to `++i` being a no-op while forming a question. At that point, it was easy to google and find out that Python has no increment operators. Sorry, it's a long comment, but hopefully there's some good advice somewhere in there. It really bugs me that there are legitimate instances of problems that happen on SO (where the community _should_ self-moderate to fix them and doesn't), but the circlejerk throws that away and memes over things that aren't anywhere near as much of an issue as people tout.
I can't quite tell what CodeMash is. Could you elaborate?
more like `new HttpClient().Get("trojan.exe")` and then `Process.Start("trojan.exe");` it...
NDC looks great. There's one in NA which looks accessible, too
Yeah, we're also an AWS shop primarily. I appreciate the insight, too!
Well if I need to composite or combine two images, I use an image library, like [ImageMagick](https://github.com/dlemstra/Magick.NET). But your OP sounds like you had some code that was working the way you want, and then you added locking to it and that caused it to work differently - in a way you don't want. It would be odd for any way I can imagine you adding locking to affect the result of your byte manipulation on the image pixel array, but you still haven't shown any locking code so no one could say if there's perhaps an error introduced between your working and not working versions. Also, adding locking almost certainly slows your code down rather than speeds it up. Locking is for synchronizing multiple threads. It adds overhead, and you need to be able to utilize multiple threads for a speed up that exceeds the overhead in order to realize any net gain. It doesn't sound like you added any multi-threading to your code - you didn't post any, anyways.
&gt; make sure you arent overflowing 255 ie byte.MaxSize In C#, the result type of the addition operator on two Byte's is an Int32. It will not overflow in OP's posted code.
&gt; You can see the bug in their code right now. If you're referring to this code: data[ls + j] = (byte)((data2[ls + j] + data[ls + j]) / 2); data[ls + j + 1] = (byte)((data2[ls + j + 1] + data[ls + j + 1]) / 2); data[ls + j + 2] = (byte)((data2[ls + j + 2] + data[ls + j + 2]) / 2); Those additions will not overflow. They are widened to Int32.
If you know how to tune procedures and queries, these types of tools are really redundant. Now I’m talking about setting up profile captures and understanding execution plans, and how to get them via sys dm views. These tools make those tasks go by quicker, but if your trying to tune sql in the middle of a CE level demo, you’ve really screwed up some where in your release pipeline. 
huh cool. In my project I think I used `int32` like a barbarian, then flattened them to 0 if they went above 255 lol
Nah, the ones who look stupid are the ones that make posts asking for help that include no code and a two-sentence description of the problem followed by "how do I do this?" Missing something that seems obvious in retrospect is the most universal experience in this field of work.
Full Visual Studio is arguably the best IDE ever developed. If you have the ability, you should definitely use it.
if you're in VS you can just write out something simple and see the implied type, e.g. static private void Test(byte a, byte b) { var c = a + b; } And you can hover over and see that `c` will be an `int`. [LINQPad](https://www.linqpad.net/) is also great for whipping up stuff to flesh out how something actually works by running it and checking actual results. There is reference source code available for the BCL, but it might be a tad tricky to follow through any implicit type conversions to know you're reading the right operator code. That's when just running something to see how it works comes in handy.
Yes, the Minnesota one is absolutely awesome. Great venue, great people, good food. It's a little expensive but very informative and they get well known speakers. 
Just FWIW, I'm not seeing how `new()` is necessary, and this require specifying `T` for calls that don't supply an object.
What about Rider?
[AuthAPI(Roles = "Full Access")] with a user with role "Read Only" is what I was testing today. &amp;nbsp; For some reason, it appears as though "AuthAPI" drops the Roles assiciated with the user. In fact, when I check to see if the user is authenticated "false" is returned. I'm guessing the two are connected...? &amp;nbsp; [AuthAPI(Roles = "Full Access")] [Route("")] [HttpDelete] public IHttpActionResult DeleteItem() { //code to delete item } &amp;nbsp; So, when I hit the "DeleteItem" it's absolutly going throguh the auth code I have. I set the Roles there. When it comes back to "DeleteItem" it goes into the function reguardless. &amp;nbsp; Perhaps I missunserstood how it works. Should I be checking what Roles are allowed when I'm going though the auth code? I'm under the impression that after the return from "AuthAPI", it will see the Role is "Read Only" and deny access.
Actually &gt; Console.WriteLine("CONSOLE\n\nOops, something went wrong! We've been notified."); 
I once coded an IRC C# compiling bot with a MASSIVE list of restrictions, and hard-coded using's that people had to work within. After about 10 minutes in a dev channel, someone got the bot to reboot my PC...
IDEs and code editors are, like any other tool, built for a specific purpose. VSC is a lightweight generic code editor, while VS is the single most powerful tool for developing . NET solutions. It’s like comparing a Swiss army knife to a chef’s knife.
I think people are too critical of VS Code in this thread. I run both, VS on Windows and Code on Mac. Do C# development on both, and they are both great. Code is a bit more light weight, but that has its own advantages. It's perfectly possible to skip VS entirely.
I've yet to meet a dba who likes EF. We all have horror stories about how much it vandalises sql servers. I've personallly seen it bring powerful servers down that had 128gb of ram. If you really really know what you are doing then go it but assuming its a replacement for learning sql is as stupid as assuming frontpage is a replacement for learning html. I know thats an unpopular opinion round here but on sql oriented subs where the average experience and skill level in databases is a lot higher its not liked at all. Some orms are said to be better like dapper but I would still only bind to procs and views you create yourself. Unless you really don't care for performance. 
VS Code has debugging and watch just like VS
Last I checked, my chef’s knife didn’t include a bottle opener, cork screw, or magnifying glass. Any I’d imagine my Swiss army knife is crap for cutting a steak, compared to a proper kitchen knife, due to the lack of a heavy blade and handle. Not sure how the comparison doesn’t hold up; one is generic, while the other is specific. And if you had taken the time to actually read my comment, you’ll notice that I never said either of them was “the best” because it’s the most “powerful” of the two. I hope you’re better at reading documentation than you are at reading Reddit comments.
Why do you want to build the react app at all during development? That's what webpack dev server is for. Just run that and set a proxy to your web server. You only ever build your bundle for deployments, so for development purposes your webpack web server acts as your wwwroot. This is not only faster, but automatically updates your client code every time you save a file. Then, for building/deployment use any scripting tool of your liking. We use node to orchestrate our builds, containerization and so on. Our project is built on react and .net core and it works really well. So yeah, don't build your bundles during development. Depending on the size of the app, babel presets and your machine it can take upwards of a minute. It's extremely slow and clunky.
You should never ever create and manage tasks that way. Look up the official doc on tasks in Microsoft documentation. And using Thread.Sleep inside a task (basically mixing tasks and threads) is also a bad idea.
Without even beginning to scratch the surface of what Visual Studio can do, let me ask you this. Can a senior developer open up Rider and link their IDE directly to all of their students, executing code and viewing locals all together in live time like a google docs sheet? Does Rider also come with an equivalent for Intellicode? This is a layer on Intellisense which suggests your most likely method calls. For example, if you check if a string ends with a certain symbol then in your loop it's going to offer `.Substring()` as a likely suggestion when you make your next assignment. 
Chef’s knife: used for cooking. Swiss army knife: used cooking, wood carving, opening a can, opening a bottle, hammering, screwing, magnification and focusing of light, simple needle work, and much more depending on the model in question. I certainly wouldn’t use my chef’s knife for carving in wood, and I’m not really seeing how it’d make for a good magnifying lense. At the same time, my Swiss army knife certainly can be used for cooking, but I’d definitely pick a good kitchen over it. Do you not know what a Swiss army knife is, or are you one of those people who always has to be right?
I can wreck a SQL server's performance writing shitty queries.. don't blame EF for that. But that's most likely only part of the story. A DBA worth their salt should be profiling queries when there are performance issues and perform indexing or de-normalization to accommodate the data access needs while increasing performance. Normalized relational data is great but joins are notoriously costly and need to be dealt with through either of the techniques I mentioned.
Seriously? Have you spent any time with Code? There's nothing I can't do with Code that I need to go into VS for. Plus it has the advantage of being much less of a resource hog, and I can run it on my windows and macs. I used to use VS but once I started to learn VS Code, I really don't have a reason to open up VS anymore.
Im actually dying of laughter
VS Code is not an IDE; so one should not expect them to have similar resource requirements. Also what kind of machine are you using VS on that it is a "hog"? Chrome is infinitely worse! :D
depends on what you are doing do you program professionally with a several hundred thousand LOC monolith web app - WinForms, WPF, ASPX, ASP MVC? I maintain like half a dozen of these lol or do you just program unity "csharp scripts"/learning C#/small console programs or ASP MVC Core 2 apps, etc 
I dunno man, have you tried VSCode recently? Intellisense, Go-To-Definition, debugging, compilation... what does VS Code not do that makes it not an IDE?
I certainly believe that its possible to maintain massive dotnet apps using VS Code, but I can't understand why someone would choose to do so when VS is available. Intellicode alone is worth switching for IMO.
I don't know how it's hard to believe. What do you mean?
I switch back and forth between VS 2017 Pro and VS Code, generally when one gets frustrating. I don't have the Intellicode extension for VS, this one right? https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.VSIntelliCode . Maybe I'll give that a shot and see if it's too amazing to not have in VS Code. 
It is decent, pretty good even; but it is no Visual Studio.
VS Code is not an IDE; so it is not "just as good". You can write code in both; but you cannot do the same things in Code as you can in VS; and many of the things you can -- not as well.
forget C# learn Javascript and the open source stack more jobs more career development etc
Yeah, I responded to this post and comment via mobile, so I couldn't verify my assumptions
Intellicode is built into Visual Studio. That's an extension to it.
I know, the person I was replying to said Intellicode
C# is open source...
Yeah you're probably right there. I think it's just Unity being different, and an Editor issue.
That makes sense. So there's a big flaw in my test! Thanks.
No I haven't. I'll give that a shot.
That was a hypothesis I had. Thanks for helping to confirm it.
You want a job you enjoy thou...
A lot of development simply requires a database as a data store. Using the right column types and indexes is pretty straightforward. For this an ORM, properly implemented, is sufficient with all the other benefits included like unit testability. If you're running jobs that require data processing then sure, but writing manual stored procedures for CRUD that provide no real advantage but some disadvantages is questionable. I generally find such developers are older and are primarily unwilling to adapt to new paradigms. I say this being old myself and cutting my teeth on SQL as a DBD in the 90s.
If you’re developing on windows I really can’t think of a reason to use Code over VS. 
Indeed, but I wasn't specifically talking about VS vs VSCode vs Rider and didn't want to confuse people.
Intuitively, I think a one-way encryption scheme is more secure. Say you have a superb encryption algorithm that generates a unique hash for a given password -- the same password, going through your encryption algorithm, outputs the same hash but it is computationally unfeasible to decrypt. It seems all a hacker (someone trying to get your password) can do, then, is to compare the resulting hash (or defer to other nefarious means of getting your password -- phishing, memory scanning, keyloggers). The point of failure becomes the user entering the password. So what if we limit how often the user has to enter his password (and let him choose when a session expires) by means of setting an expiry interval? 
No matter which way you slice it, if you're storing both password *and* the means of decrypting it on the same machine, you're going to expose yourself to vulnerabilities. The best way to go about this is to use [Microsoft's own API](https://docs.microsoft.com/en-us/outlook/add-ins/authenticate-a-user-with-an-sso-token). You can store the token on the client computer, and that token is set to expire after a certain time, requiring the user to sign on again.
Build was miles better than last year's Re:Invent, so at least it has that going for it.
Let's not do this client.Port = Convert.ToString("587"); When we can do this client.Port = 587; Secondly, there are ways of storing encrypted data in the app config file, which this article demonstrates. https://weblogs.asp.net/jongalloway/encrypting-passwords-in-a-net-app-config-file
&gt; Or even had to choose a data structure based on it's O notation characteristics? It's useful at times to know what datastructure is useful for what task. If I'm caching an EF Query that returns 30k rows, and I frequently need to filter based on the existence of a row, you should throw it as a HashSet. Then there are some subtleties like Lookups vs Dictionaries and when to use IEnumerable&lt;T&gt; and List&lt;T&gt;..but that's more .NET specific than generic Datastructures I guess. 
It’s a 2 day developers conference in Sandusky, Ohio held at a kalahari resort (indoor water park) in January. It covers a wide range of topics and languages, here is a link to last year’s [sessions](http://www.codemash.org/wp-content/uploads/2018/01/CodeMashSchedule_2018.pdf). I think it’s $350 so pretty cheap if you’re close and can handle northern Ohio in January. 
Blazor / Roslyn ?
I already know JavaScript ;) I'm expanding my horizons.
TIL VSC has compiling functionality. What's the process to compile using VSC, does it differ from Visual Studio Community? I was unable to find it while using it (albeit I didn't use it for very long), so maybe it's just me being blind and missing some obvious button that says build or compiler or something. 
My trike has awesome stickers....
This. Visual Studio even supports things like a built-in XAML editor and other great features that VS Code doesn't (as far as I know VS Code has nowhere near the same level of UWP and WPF (XAML based application development frameworks) support or visual editing that Visual Studio Community does). Like I saw mentioned in an earlier comment, Visual Studio is a specialized tool for mainly C based languages and a few other Microsoft related subsets (like XAML), whereas VS Code is more of a jack-of-all-trades IDE that serves to syntax highlight almost any language you could ever imagine as well as some other features, but with this breadth comes less depth. VS Code lacks the specialized capabilities that an application designed to work on a specific group of languages (like Visual Studio) possesses. 
Removed: Rule 4.
Fair enough it's not a true IDE, but there's nothing .net related you can't do in VS Code 
Like, will it run anode server? 
How is it less polished? There's nothing you can't do in VS Code for .Net
Like node isn't a browser.
Of course it's not good for webforms code, at least not for writing new webforms apps, but you shouldnt be writing new webforms apps anyways. .net core is the way to go. I've had to struggle bus my way through some old 4.7.x. apps. Not the most fun experience. 
Like, no kidding. Thanks for clarifying. 
Why? Because someone else's experience is different from yours? 
http://www.reactiongifs.com/r/npa5yMn.gif
Lol I love that Obama gif. Stealing. 
Lol look at all the downvltes from.the crusty old guys probably still writing webforms apps. No wonder they need VS. 
You realise if you’re building for web you still need to know what you’ve listed? They’re just the basic building blocks for anything that runs in a browser. What do you actually want to make? That will best determine a starting point. Making command line utilities? Games in Unity, reprogram your washing machine, web applications with .NET, native applications with .NET or Xamarin?
Start with Unity (for games) and Xamarin (for applications) then - it’s about as soft as the landing can be. Start with something simple like making a calculator app. 
wpf? win forms? Last I checked vscode doesn't have a designer and properties window for that. VS has some nice testing features built in that runs every time I compile. Doing C++ for windows on VSCode is an awful experience compared to VS (yes this is a c# forum, but it's not uncommon to have some projects interop with legacy code)
No no, I see the proble. You need to fire up a azure virtaul machine and puch the text to azure and then azure some more for all that ms $$$
You say "really really really" but don't give any reason as to why new learners should go with VS. it's not a helpful statement. Personally I'd say the opposite. If someone is just learning C#, VS code is quick and easy to download, ie isn't many GB is size and asking what options you wish to have installed. It has all the main features a new developer requires to get through online courses, ie debug, intellisence, integrated terminal. There's no wrong answer really to what code editor to use, but if you're pushing one ahead of another to a new developer it'd be nice to give your reason for that so they understand.
Um just do your development on the desktop?
Story seems suspicious. Got any details to share on how they did that?
Uhh how do i use this?
I started with VB 2.0 in terms of 'real' programs, since my PC was very old, though jumped right to VB 6 when I was given a newer system. In any case, the automatic variable declaration was something anybody serious about programming should turn off with Option Explicit. Aside from the auto-declared variables being Variants, which were somewhat troublesome on their own (implicit type coercion), it also meant typo'd variable names would be created on the spot, often introducing hard to trace problems. Better to get a "Variable Not Defined" Compile error. Frankly I stuck with VB6 too long. However, You can pretty much do everything but once you leave the confines of what it was designed for things start to get far more complicated than they probably would be even in C++. For example if you want to implement IEnumVariant, you can create the IDL yourself and reference it but you can't actually implement the interface because the interface has a method called "Next" which is a reserved word. So you have to define the interface with a different name, implement it, and then take the ObjPtr and use Direct memory writes to change the COM VTable of the object to fix it and redirect it to the address of a subroutine in a module, which will take as it's first parameter a Long pointer to the object. You can convert that long pointer to an Object but if it's not actually an object, that will crash your program and the IDE if running from there. You also have to manually overwrite the object variable with 0 to set it to "Nothing" because setting it to Nothing, which VB will do when it goes out of scope, will crash the program as well. Same for Fibers and Threads. You can do multithreading and create Fibers but it's a massive hack and prone to crashing particularly since the run-time itself is not re-entrant.
okay nvm i found out how to fix it myself... using this code: private void whatYouSee_TextChanged(object sender, EventArgs e) { if (whatYouSee.Text == "a") { whatDiscordSees.Text = whatDiscordSees.Text + ":regional_indicator_a: "; whatYouSee.Clear(); } you wont see the actual text appearing in the whatYouSee, but i can live what that :) will just have to hope i spell everything correctly...
Is it a paid version? Or do you host in IIS?
If you're at the point where you actually need to pay for a license, money shouldn't be an issue anymore: &gt;In non-enterprise organizations, up to five users can use Visual Studio Community. In enterprise organizations (meaning those with &gt;250 PCs or &gt;$1 Million US Dollars in annual revenue), no use is permitted beyond the open source, academic research, and classroom learning environment scenarios described above. ([Source](https://visualstudio.microsoft.com/vs/community/)) &amp;#x200B;
 You for the most part use the command line - however for starting in debug, publishing, etc, you can make visual studio tasks that run the command just like Visual Studio would on F5 or whatever key command you want. My work uses web forms still (I know...) so I built an extension that any \*.csproj can be right clicked -&gt; build with msbuild, or just hit F7. It will automatically build with msbuild then copy it to my IIS directory. Most extensions for languages come with built in tasks for building / debugging your app, just hit F5 and the dropdown will show you like (.Net Core, Chrome, Firefox) etc for different configurations.
but i can ride my bike with no handlebars
Absolutely, both skills are useful, I use them but I'm not a junior. Specifically how many junior roles make sufficient use of either to include them as a significant part of an interview? Even with the dotnet structures I'd be surprised if you said "Hmm, this problem requires O(n) seek, so I'd better use a List&lt;&gt;". I could be wrong though :) That said, it takes about an hour to read up on big O so OP might as well bite the bullet and at least get a feel for it. I'm ranting a bit. I have a set of interview practices, many of which are becoming less common thankfully, that I rail against. The biggest one is making people write code on a whiteboard and reproducing mechanically learned data structure internals :)
The method returns an array, so all of the files in the directory are listed in it, and no further I/O calls are made.
Also you should not New Up a Task, but instead use Task.Run() or Task.Factory.StartNew()
That wont work because the T cant be inferred, try to call the method with just 2 parameters :)
Process.MainWindowHandle isn't necessarily the correct handle. You have to use more WinAPI to reliably find every window.
&gt; joins are notoriously costly Really no. A sargable join is fine atleast in SQLServer. I once cut the performance cost of a view by 600 times by adding 40 joins and removing 6 lines of a nested sub select. Where did you get the idea that joins are that bad? I mean if your using a function in the join or something else silly then yeah of course but thats not sargable. 
I'll try after meeting's up - I wrote that reply yesterday while waiting on the bus 😊
You better get into architectural stuff instead of writing code. Designing an architecture will be more interesting than writing some code to make things work. 
You could just clear the whatDiscordSees and calculate the whole thing when the text changes. Console application example: class Program { static void Main(string\[\] args) { var input = Console.ReadLine(); StringBuilder stb = new StringBuilder(); &amp;#x200B; if (input != null) { foreach (var c in input) stb.Append($":regional\_indicator\_{c}"); } &amp;#x200B; Console.WriteLine(stb.ToString()); Console.ReadKey(); } }
I had the luck of starting out my carreer by following the official courses for the C# certification (in a classical setting and over a period of 6 weeks) and ended up getting that. It helped a lot with getting my first job. Later on I got the MCSA certification as well by doing 70486 (the ASP.NET certification) and am now studying for 70487 to get MCSD. The certifications help I feel because they are actually quite difficult but imo the biggest gain you're going to get out of those is doing the official courses and the labs (not the exam ref). 
Well... At least certainly the best IDE for C# development.
And do you think that one can be good at architecture without coding (and learning new tools) over the years? Serious question 👍
I am similar, whilst I completed my degree it's in a niche area of engineering and C# was just one module. I have been in IT for over two years and software development for about 12 months (though only officially for about 4 months). I have seen a job spec online stating that you need to be Microsoft certified, but I wonder if it's just a HR wall?
Sounds like you haven't learnt half the lessons. The main point about MCSD is to learn *the right tool for the job*. Intellisense is great at helping you write something that works but often is not using the BCL as it was intended. There are two main problems I find regularly with "Intellisense" coders - not knowing the intention of the BCL is one. The other is they are hopeless at algorithmic efficiency. Plenty of people write garbage LINQ for example.
In a sense it's no different than a degree, it just shows you have a basic understanding of programming concepts or a specific technique/methodology. Hence why HR people and recruiters often mention it in job openings. And just like with a degree, it's no guarantee of a holder being actually capable in the end. There's people that hold certificates and degrees that can't make the most simple program, and there's people without any degree that have been doing hardcore programming day and night that can make awesome things. And visa versa. Ultimately, I think having a good portfolio and reputation is much more important, relevant, and a better showcase for your skills. Just landing that first job without any degree is extremely hard. 
I've been building on the microsoft stack my entire career (13 yrs now) and I've never sat for a single certification and never needed one. From where I sit, the only reason I can see it being useful is to get certified on a tech that I dont have any commercial experiance with to help with a very specific job application. (Ive never needed to do this) I've never had an interviewer ask me about certifications, I have seen a few job postings requesting them, maybe 1 in 20... its rare. Nearly all employers prefer commercial hands on experiance over a piece of paper that says someone can do X.
Well, what I have used it for in the past is to build two applications from the same codebase. I select one entrypoint and it builds a commandline application, select the other and it's Windows GUI application. There's probably better solutions for this, but it works quick and easy in Visual Studio.
Same here. No certs, 20 year career as a developer and now managing a team of developers. No certs, seems like a waste of time.
&gt; As we know value types generally are stored on stack They can also be stored on the heap just fine. &gt; So, having (x = 1; y = 1;) will take the same amount of space in stack as having (x = 1; y = 2;)? Generally: Yes. But if you don't make use of the values the compiler or the jitter might just optimize it away. But placing stuff on the heap is fast. &gt; Or is there some magic under the hood what will optimize billions of integers if they are all equal to 1? The stack is not even that large to store so much data in it. And conceptually it makes no sense to optimize anything here. It's a stack. Stuff is put on top and stuff is taken from the top. In a controlled order.
No problems at all with "Winforms" but rather with its restricted, non generics-using API aswell as bad databinding experience
you don't get the "Universal WINDOWS Platform"-thing right? There *might* be a slight chance for them to port Winforms over, using existing work from Mono, but **W**indows**P**resentation**F**oundation would not be ported over, aswell as the **U**niversal **W**indows **P**latform. They'd rather go off and use something like Skia and do a X-Platform XAML-Standard reference implementation &amp;#x200B; ***Or just go ahead and buy Avalonia and make it THE awesome XPlat UI Library, kthxbye***
&gt;It's not .NET Core's fault that DirectX can't be implemented on \*nix Well, it can be *Implemented*, just look at **W**ine**I**is**N**otAn**E**mulator - Or things like dgVoodoo2, DXVK, they all implement DirectX, but they not necesserily USE DirectX, DXGL uses OpenGL, DXVK uses Vulkan, and dgVoodo2 implements dx6-8 on top of DX10.1 instructions
It's a common misperception amongst those that don't actually run a business that if you have seven figure revenues you have all the money you need. That's just not always the case. 
Who actually writes new apps in win forms? 
Very likely s3client must be singleton and reused for all requests.
Employees with some of the MS certifications are really valuable for startups and smaller companies, because they open up a path towards MS partnership, which comes with discounts for many of MS products (Visula Studio, Office, ...).
I do suggest that you try coding C# in Visual Studio Community 2017. It’s not as clunky as it’s predecessors, and it gives you intellisense, debugging and unit testing tools.
Microsoft has website covering these things. [Here](https://docs.microsoft.com/en-us/partner-center/learn-about-competencies) is a list of various partnership areas. I think you should be able to get to all the necessary info from there.
I'd say it is more than just opinion; that is for sure.
Maybe this? [https://github.com/jsakamoto/ipaddressrange](https://github.com/jsakamoto/ipaddressrange)
Because all of the existing applications aren't relevant anymore... Win Forms is perfectly acceptable for new development; depending on the needs. Just because it has been around a LONG time doesn't make it unsuitable.
&gt; Doing C++ for windows on VSCode is an awful experience compared to VS (yes this is a c# forum, but it's not uncommon to have some projects interop with legacy code) But that is kind of the point; we aren't discussing language anymore -- it is IDE vs Editor. One is clearly and IDE and the other is not. I am not sure why that part of the discussion is so challenging to grasp. I also don't understand why saying it isn't an IDE means it is bad -- far from it.
Sure, that's very true. I've spent so much time over the last 2 years porting our legacy apps to node and .net core though that stuff has just fallen off my radar. 
whats his age got to do with anything ?
From a newbie point of view, its a pretty tough job market as there are thousands of wannabe junior developers. Do you not think a cert might help us stand out a little more? I'm super lucky as i have a friend that vouched for me to get the job I have, but I feel without him there's no way I would've stood out from the crowd without gaining some certs. 
*Experience
How do you explicitly store a value type on the heap? Don't you have to box it?
&gt; But placing stuff on the heap is fast. You meant stack, am I right?
So our situations might be different in that when I was entering the market, I was something of a unicorn. Now there are tons of people trying to get into IT, so perhaps I was a bit hasty when I said they were a total waste of time. But I still don't put a lot of weight on them. As a hiring manager, if I see certs on your resume, that's great. If not, I'm not concerned because the interview is going to bear out whether you have the skills or not. I ask think-on-your-feet questions with specific code situations and I can tell pretty quickly where your skill level lies. And in other areas of my life, I've seen people who have the highest degrees/licenses/certificates who don't seem able to handle the simplest things.
Wrapped in a reference type. The object contains value types which are then on the heap.
Using null in general I find usually undesirable, but it usually depends on the circumstances. What are you trying to do?
You should rather ask yourself: Does a new default instance really make sense when value is missing?
How is it useful to you? You have a variable you set to null, then you check if it's null (which it always will be) and if it is (it is) you set it to a new instance. You can replae both lines with var myVar = new MyClass(); Same result every time.
I just want to make sure that this variable (which is a field in my actual code) is not null at a certain point in the code.
Is it a private field?
A little off topic: If you are uploading to your server and then uploading to Amazon, you might want to look at GetPreSignedUrlRequest https://docs.aws.amazon.com/sdkfornet1/latest/apidocs/html/T_Amazon_S3_Model_GetPreSignedUrlRequest.htm
I passed my first cert. 4 months after graduating from college - for the sole purpose that my employer at the time needed X number of devs to be certified so that the compnay would be "MS Gold Partners" which gives thee co. discounts and the devs extra goodies. Does it help your career? I would say the primary benefit is that it helps your resume standout among others. It's just one more little link in the chain to make you stand out. Is it worth it? Well, if you are considering that you want to invest in your future (i.e. to be as "hireable" as possible) then go for it. Many companies will pay for part or all of your cert anyways (just ask), assuming you meet some other stipulations. But I would suggest this to be part of a larger effort to start improving how marketable you are / your personal branding. Then you are able to "name drop" that you are MS certified...among other branding techniques. If you aren't interested in building your personal branding as a professional dev. then don't do it. 
Yes.
Right, the example was a little misleading. In my actual code it's a private field that could have been instantiated elsewhere.
Yes, by switching to either a desktop or laptop.
I did this sort of as a kata thinking, how hard could it be? There's probably actually a lot you want to consider and this library would probably be a good idea. Op if you want a slow inefficient bug-prone implementation that only handles your exact specification this is for you https://gist.github.com/mmartinx/8d76f9476760413348338381bf8066f1
Then no need to worry. New it up in the constructor or pass it in as a parameter and check for null, then don't reassign it to null ever. 
If you work for a Microsoft Partner, your employer will need to have a number of people certified. Being certified can help you get hired for those companies. &amp;#x200B; It's just icing on the cake though, almost no one puts out a job req saying "must have this cert". Certs prove you "know the book", they don't prove you can handle being presented with an actual problem to solve and most hiring managers know that. The result is that if you are early career, it can be useful, if you have 5 or more years of solid experience, it's not likely to be useful. &amp;#x200B; Having a public github repo with a personal project to demonstrate your coding skills is a good idea if you're early in your career and need to prove skills without having a deep resume. &amp;#x200B;
lol, how do you get anywhere in life? first brick wall and hands are in the air, start walking the other way 
But I'd like to only instantiate it when it's really needed. It's a List that would contain error messages. But if there are no error messages coming in, it may never be needed. But yeah, an empty list is probably not a big issue memorywise.
Inside your WithPage method, you could actually create a new Filter with the appropriate values and return its QueryStringModel.
&gt; As a hiring manager, if I see certs on your resume, that's great. If not, I'm not concerned because the interview is going to bear out whether you have the skills or not But I'd assume for some jobs, not every applicant gets called for an interview. Wouldn't certificate(s) help you actually get to that part of the process?
I've used this in production before. https://github.com/lduchosal/ipnetwork
Oh, if it's a list of errors then yeah, new it up in the constructor and don't look back. Collections should start empty, not null. Don't worry about memory until you need to. 
There is no magic grouping of variables by value. X and Y both get their 32 bits / 4 bytes of space, which is filled in this case of 31 0 bits and a single 1 bit. If you were after any optimization you could make them Int16. https://adamsitnik.com/Value-Types-vs-Reference-Types/ is an insight article with benchmarks. There may be an optimization, but at the CPU cache layer. Cache is read in 64 bytes at a time. If your 2 ints end up next to each other in memory, they may both be pulled. Or if they were int16s, 4 might be pulled in at once
Yeah I have often thought a public repo with some decent code is a great way to demonstrate skill base and knowledge, though mine is severely outdated.
Dude, you missed the forest because of all the trees... He was giving a stripped down example to make it obvious what he was checking for, he wouldn't have those 2 lines next to each other in code. Imagine there are method calls and whatever between those 2 lines that could possibly assign myVar. 
the most basic approach for this is to serialise the entire application state to a json file (e.g. in app_data) and use that to reload the application on startup
If you’re holding off on creating something because it’s expensive, that’s what Lazy&lt;T&gt; is for. Option types don’t exist (except for a few value types) so the less nulls in the mix, the happier everyone will be for not having to write yet another null fence. 
I can agree with that, your ability to solve problems, fit in and get the job done far out weighs how qualified you might be. Sounds like certs are great for start ups who want a shiny sticker or two and some discount for the device team, but from a personal development point of view might not really be worth it. 
Do you think it has worked in your favour from a personal development point of view. I am still in the first software job I ever got ( I spent 2-3 years in another field entirely post uni) and I am keen to rapidly develop my personal development or skill set so I can negotiate up on my next job interview.
Thanks 
Wow, this looks nice. Thanks! I must improve my googling skills...
:-)
My background is engineering, and a niche sector in that. I have been in a Microsoft tech stack for just over 2 years with about 12 months of that being in development, albeit only 3 being offical. The company where I work isn't a software house and at present isn't in a position to help me achieve my personal development goals. I am keen to develop those skills so I can negotiate up on the next job. Would certs be of interest then, given that in two years I have learnt and applied a wide range in software skills?
The only time I ever got a certification was when I worked for a Microsoft Certified Solution Provider, and they required me to get them (and they paid for them). This was 10 years ago (note, 10 years ago, I already had 15 years of development experience). Overall, except for working for that company, I have never needed it or never considered it or ever had any other employer care about it.
+1 Lazy&lt;T&gt; is a great suggestion. 
I agree with the others - Lazy&lt;T&gt; :)
Because I’m a self thought programmer and I don’t have a degree is a nice thing to say that you are a Microsoft Certified Professional and also a C# Specialist. The C# Specialist exam wasn’t difficult at all for me but it had some tricky questions. Made a difference in my career? Hmm not really but it’s nice to say that you are Microsoft C# Specialist Certified 🤗
Why not make an actual type for it, if you need multiple places with the same properties?
Gotcha :) It's not idea simply because you're guarding against a condition you "sometimes" expect. You want to resolve "sometimes" into either never or always. It's fine as a guard clause for a public API, but internal just avoid them. The null coalescing operator is also not thread safe. So you can end up in situations where you create a new MyClass twice. Sometimes that's fine, sometimes that's a disaster.
If your resume doesn't show a hint of development experience, I'm probably not even going to call you. If you show up with certs and no experience and i'm looking for a mid to senior level, I'm probably not even going to call you. In short, certs only is a non-starter, at least in my present role because we are all too busy and moving too fast to take in a rookie right now.
Some times a value that isn't provided should be given a default value. Sometimes a value that isn't provided should throw an exception. The coalescing operator is for exactly what you used it for... if the value is null, give it a default value... It really depends on the requirements as to wheter it is a good idea or not. Like... if it were a banking program and the transaction came in null... you wouldn't create a default zero valued transaction, you'd throw an exception. But if someone were entering account information and they didn't provide a website.. then it makes perfect sense to convert the null string to an empty string. 
Last I heard a few years ago, these certs don’t carry the weight that they used to. When I took mine back in like 2012, all versions of the test questions were readily available to view online. The work experience always carried more weight in my book
Check out the old MS [Terrarium](https://github.com/terrariumapp) project/game to see a good way to handle executing someone else's code and using evidence be security / Code Access Security to keep it safe. In it, you build a dll that represents your creature, and upload it to other people's game where it runs. 
Since you still can't ensure the same name just by replacing an anonym type with a named one.
Wouldn't work, as Html.Action includes literally every field, even if they doesn't has any value.
These used to equal more pay, years ago. That was before we knew that they are worthless for anything other than helping to get a first job.
If you consider what IDE means (Integrated Development Environment), then VSCode is an IDE. Even when it is vanilla (no extensions), it still provides the means in which such extensions can be installed. Since these extensions are all **largely** focused on software development, this makes VSCode an IDE.
&gt;Has it made a difference to anyone's career? If you don't have a 4 year university degree, I think an MCP can work as a substitution for that. Generally people don't care. Mostly it's for people who are independent contractors. Once you are in as a full time employee your performance on the job is what makes or breaks you. But independent contractors are basically constantly trying to impress companies and convince them to use you. For that type of work it's best to have every advantage you can have. The life of an independent contractor is much more unstable and chaotic, and they work a lot harder... but they **can** make a lot more money.
It is pretty easy to break through almost all blacklist-based defenses. As long as your security model is based on "block this evil thing" you are guaranteed to lose because your attackers can think of more ways to attack you than you can to defend, just because they are different people with different models of thought.
Really? I was coding in VS code for months in my new job. Then I switched to full VS and my productivity more than doubled. I will never go back. Just the fact that adding libraries in VS is normally just an automatic suggestion and implementation, whereas in VS code you must write that stuff manually causing a lot of errors and frustration to write stuff corcectly. I don't want to bother with specifying version numbers on my packages or looking up the excact name of libraries. the time spent actually doing work is far higher in visual studio IDE
&gt;Do you not think a cert might help us stand out a little more? I'm a 20+ year developer and I hire junior devs. The cert itself doesn't matter. However, the knowledge you gain to get the certification is very useful. At the end of the day if you know how to make an MVC app do federated single sign on authentication, I will hire you. If you are a junior developer looking to gain an edge there is no difference between studying for a certification and nailing the material and actually passing the test. If you have the knowledge to pass the test you are way ahead of your peers and you'll get hired regardless of actual possession of the cert.
Uh, no. What are you even talking about? I have never once run into an issue where a missing dependency wasn't installed because of a typo. You do know that VS Code has a built-in package manager (via an extension) just like VS does right? I mean, how can you mess that up?
I currently work at a small consultancy, so we initially needed these to get the company certified in certain areas. We've done that though. So for a company looking to do this, you being able to walk in the door and get them a boost on this has value. As an employee, if you train with the focus of picking up skills rather than passing the exam (which can often gamed or lets be honest many just cheat). Then yes the training is useful and the certification is a nice confirmation at the end of it. Are devs with these certs better than other devs? Not necessarily, they don't measure quality, this wont help your application with us more than putting the requisite skills for the cert down on your cv by themselves. But they are a good way of confirming to us which skills you're looking to bring if you do indeed possess them.
I am not understanding, are you passing this anonymous type in Html.Action? If so, how is that different than making a non-anonymous type with the same properties?
You shouldn't be getting downvoted. As a 41 year old developer with 20 years experience, you are right. The world has changed and we sometimes forget that. When we were in our 20's the country was desperate for programmers. They were hiring anyone with any promise of natural talent and we were getting on the job training. I feel really bad for the current crop of 20 year olds. Our fathers walked down to the local factory, gave the foreman a firm handshake, and were welcomed into the middle class. We went to Barns an Noble, picked up a book on C++, and were welcomed into the middle class. You guys though... fuck... you're in trouble. I don't know what you're supposed to do. 
If the certs are paid by your employer like me, why not? Im certified in a few areas, it encouraged personal growth and made me feel accomplished.
Console is not feeling like “hello world” right now, more like “goodbye world” :,(
Thank you for the feedback. I was never introduced to some of the techniques you mentioned but now I have some things to try out. It never occurred to me to use the App Data Folder. I did a little bit of googling and it seems the Roaming folder, in particular, allows application data to rely on a Windows mechanism (roaming user profiles) to synchronize app data across log-ins -- handy if I want the instance state in a program restored with a user as he moves between computers in a network. Thanks also for dispelling my doubts about using a DB. 
I'd never done this before. Does MS provide a library that does this?
You can prove this by checking performance with the an clause vs. Saving the result of the I/O call to an array as doing for each.
who knows, maybe the year at which you entered the job market might have a huge impact on how you experienced that first step. Just a thought
Personally absolutely, literally the week after I added my certificate to my LinkedIn profile I started getting recruiter spam. It also helps a lot with negotiating salary. 
Yes, they are worth "pursuing". By that I mean by the books in practice as if you were going to take the test. The test itself is useless to most people, but the preparatory work will help you a lot.
wathching for responses!
There is no way to know if it will be a fad or not. But even if it is a fad, if you end up liking it, and want to use it for personal project, you can keep doing that even if nobody else is. &amp;#x200B; At the very least you will learn some of the downsides of these kinds of transpile to javascript/wasm approaches which will help you understand similar choices in the future. There is always a little bit of tradeoff when you don't use javascript to do javascript, and whether it is worth it might depend on the kind of thing you are building. &amp;#x200B; &amp;#x200B; &amp;#x200B;
Use Newtonsoft JSON
Too bad that certification has been retired 
Oh man you win for the best reply in here. I honestly expected to get down voted for this submission for being too silly in a programming forum (for the record I wouldn't really even disagree as getting too meme-ish can be the death of a sub), this whole submission really turned out better than I expected.
Certifications are usually important for companies that want to achieve and maintain Microsoft partnership. So they could be indirectly interesting for people that wants to work in such a company For me as a professional? Nope. And I have some of them, since MCSD at the times of .NET 1.1 My 2 cents: go for it if it will mean to be paid better. Not for learning 
Haha, I was sure my silly reply would get downvoted as well, given how silly it is. You've gotten some good tips though so I suppose a bit of silliness won't hurt anyone.
Yeah there's a lot of helpful input, betterthanexpected.jpg all around.
Yeah that seems to be the sweet spot around my area too. It's not a lot of pure either or, it's a lot of a combo.
WebAssembly is not JavaScript so no transpiling there.
TY
I'm assuming he just means people who want to be junior developers. People with no pro experience looking for their first job. 
is webassembly not a language? it isn't machine code is machine code a language? point is, doesn't matter, I just didn't want to type the sentence twice. 
blindly installing packages is not always the option on big projects. the point about VS is increasing productivity, that includes dealing with conflicting dependencies, jumping and searching though code, runnig tests, the occational sql management without even leaving VS, really great debugging, performance tools etc. There's no good reason to use VS code for anything but very small projects.
By your logic Roslyn is a transpiler because it compiles C# to to IL.
 Courses on a resume is a big red flag for me. I’ve hired more than a few developers in my career. The resumes listing an ‘impressive’ number of certifications were invariably from the weaker candidates: those who couldn’t be put to work in a previous job, were sent to course after course, until finally being fired. And now searching for a new job, most often through a agency.
Also machine code is not a language, but assembler that compiles to it is.
yup
I would not lump in wasm with javascript like that. It is likely that wasm will eventually become widely used, but it will probably be through compiled languages like Blazor (or some competitors). Wasm is not going to be the new javascript.
&gt; Don't be one of those uppity douchebags Thanks for the ad hominem, dipshit
If you need performance profiling, sure, you need VS. But all the other things you mentioned can be accomplished with VS code too. You don't just blindly install packages. And you shouldn't just trust the IDE to tell you what libraries you need, because they're not always right. I can jump/search through code, manage SQL, debug etc all from inside VS Code. Can also run tests.
I wouldn’t go out of your way to get it. If you already have a job and your employer offers to pay for the exams then it can’t hurt.
The Unit-of-Work + Repository pattern set has a lot of advantages. While I agree with most of the folks here that it is exceedingly rare to need to change the actual data store, there are other reasons to consider this abstraction. 1. Testing - The Repo isolates the CRUD operations of your implementation while the UoW will contain the data logic elements (e.g., entity/domain conversions, transaction management). By injecting the repo as a dependency into the UoW, you are able to do high quality unit testing on the UoW and isolate the need for integration testing to the Repo. This alone will pay huge dividends in the quality and maintainability of your software. 2. Agility - Now that you have a working system with a solid suite of quality tests, you will come across necessary enhancements. Perhaps you want to introduce external caching (e.g., Redis). Since this is an integration you know it belongs in the Repo, so you make the change and add the new integration tests. As long as the interface did not change, you are good to go. Same with data logic. Mapping to a new model definition or changing concurency rules = quick update to the UoW (ok, concurency can be a nightmare, but you get the gist). Most abstractions that serve these two ends are well worth the effort and often save you time. Those that do not are just unnecessary complications.
By your logic, every programming language is a transpiler and therefore all of them have the "downsides". 
I work at microsoft and I've never heard of it lol. Seems like something to make government hr types happy.
Would lazy really be useful here? Is it really any less preformant to create a lazy instance than to create an empty list?
Please tell me you're not storing the actual password in the database! Why are you reinventing the wheel, instead of using an existing auth system?
Seems fine. I'm wondering why you need this exact pattern though, maybe making an example just made it kind of weird. I don't usually null coalesce the same variable like a = a ?? new A(); but I do stuff like this a lot: someObject.doSomething(a ?? new A()); or myString += something ?? "defaultEnding";
I have helped hire developers. Certifications are not literally *nothing*, but they're also not very important. I'm looking for github projects, internships... even non-technical jobs that you found a way to bring tech skills into. Those kinds of things show enthusiasm.
As a hiring manager, nope don’t care. For a junior dev, I’m looking at your degree (but I don’t care about institution you got it from as long as it’s a legit place) and any work experience you have. And I mean ANY work experience. First job out of school, put down that you mowed lawns all through high school, waited tables, worked at hot topic, etc. most certifications are just too easy to get and don’t really tell me much. I’m in charge of a C# UI, but I’ve hired Java devs because they said they were interested in the language and had done Swing work in the past. Honestly, what makes a CV/resume stand out is a good layout. If you have any friends with backgrounds in graphic design, typesetting, etc, ask them for help making your resume nice to look at and easy to scan. I get so many applicants for positions that I really have to make a yes/no call after looking at your resume for less than a minute. If it’s 10 pages of solid text riddled with misspellings, grammatical errors and difficult to parse, you will get a no.
and I can't believe this many people are replying to this silly semantic thing but I'll keep going for the lulz if you want. 
&gt; with a sequence what is a sequence? you mean like a `List&lt;T&gt;()` of something?
RESTful (or urls actually) always use lower case. Separate words (noun routes) using hyphens. Verbs are the GET,POST,PUT,DELETE Just my observation on the first few lines. 
The last homegrown ORM I dealt with had familiar methods for getting a list of items and a single one. Until we profiled the mass of spaghetti crap no one realized that the “caching” it did for the list query didn’t apply to the single query. There were *hundreds* of queries on *every page* that would list all resultant records for a simple count of them, then iterate over all of them and pull them individually. A select of 100 items as a list query for what should have been a count, then 100 select’s for each item by ID... it’s like an EF perfect storm, only there’s no way you can avoid it because the ORM enumerates every result to “help you”.
I figured it out. No so i have this table that will be used to produced checks. And 2 fields are auto numbers. One being the primary key. So the only way to make more than one auto number field is squeneces. Its saved in the sql database. Then i created a stored procedure to call from my EF using linq query. So i can get the next auto number to update the check number field in my table. 
Got it!!! 
thanks for the input, I found another more convenient solution in my case mentioned by /u/Canthros as calling the method with "" is not an option and my colleagues will get confused.
&gt; Do you not think a cert might help us stand out a little more? Nope. I'm a lead dev and I interview and hire devs - from junior to senior - and a certificate gets you nothing in my book. I'll determine everything I need to know from talking to you, and if you want to stand out some to get an interview in the first place, show me your GitHub/BitBucket/etc. with code I can see you actually work on through the commit history.
I confirm it doesn't work, thank you though.
Yes I think it was one line, but only if you use plain Blazor. If you interface with JavaScript and use JavaScript libraries it won't be that easy.
This makes a lot of sense. Thank you.
It's not about semantics only, it's about your lack of knowledge about WebAssembly.
It's the state object, so whatever you passed as the second argument (`taskNo` in this case).
that's the first time i see something like this, why can't i pass the taskNo variable directly?
You can pass it as a clojure if you want.
&gt; Sometimes a value that isn't provided should throw an exception. You probably know that but you can indeed use the `??` to throw, like myVar = myVar ?? throw System.ArgumentException("Something is fishy"); 
That's cool, I actually didn't know that syntax would work... I had always assumed it would be like the ternary conditional operator where they would have to resolve to the same type or at least have an implicit conversion. 
OP usage has a place when verifying parameters.
what do you think I don't know about webassembly? 
You can't pass it directly because you're not invoking the `DoChild` method. The `StartNew` method (or something deeper down the call stack) will call the method. And in order to call the method it must have a known signature - that is either without any arguments (if you use the other `StartNew` overload) or with a single state argument. If YOU call the method you can pass the arguments just fine, because you know how to. `StartNew` is not aware of your arguments.
&gt; I had always assumed it would be like the ternary conditional operator Throwing now also works with ternary operator! This is new from C# 7.0 IIRC, that's why it's a bit obscure.
Ok, I think I know what you mean. Still the Filter (and other classes that have Q, D, B and P) could be based on an abstract class or an interface that ensures all all of these properties exist.
If clump JavaScript and WebAssembly together you don't what WebAssembly is.
No. I have taken four or five exams and held a MCSD for software development and something for SharePoint at some point. It did absolutely nothing for me when changing jobs and I got pretty much nothing out of it personally. However I got them by taking practice exams until I knew all the answers (they where similar enough to the real thing), so I basically didn't study to learn more. The only reason I took them was because where I was working at the time needed the numbers to become Microsoft certified. If you have a university degree or some years of experience already and want to learn more you are way better of spending time creating something on your own and putting that on your resume instead. 
they are both bytes that browsers turn into machine instructions and execute
&gt; short lived JS frameworks and libs that once dead can break a whole project - &gt; if he has good chances to become a well supported and respected I mean I get your point and as a JavaScript guy I'm with you 100%. I just enjoy the irony a bit too ;)
If it's just an empty list, a `Lazy&lt;List&lt;T&gt;&gt;` is causing more harm than good. For other cases (since it was originally `MyClass` being talked about) it can be valuable if there's a noticeable cost to its creation and not all paths may need it.
i took 70486 a month ago, its ASP.NET MVC 5 and a bunch of Azure and ASP.NET Core questions
The part with the password scares me. Do you hash it in any way (+salt)?
Such pattern plays well with optional method parameters, because in general you cannot provide non-null default values for method parameters for reference types. Therefore you can have null as default value of a method parameter and in the method body you can assign it to default value that makes sense to you: param = param ?? SomeType.Default; As someone else mentioned you can also do null check in this way: param = param ?? throw new ArgumentNullException("param is null"); Note that C# 8 will most likely get "Null-coalescing assignment" so we will be able to simplify above statements to such constructs: param ??= SomeType.Default; Most likely this will also work: param ??= throw new ArgumentNullException("param is null"); More about Null-coalescing assignment: [https://github.com/dotnet/roslyn/issues/29168](https://github.com/dotnet/roslyn/issues/29168) Source that it will get to C# 8: [https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md](https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md) (It's already merged to dev16 preview branch so it will most likely be possible to play around with it in preview version of Visual Studio 2019). 
This is a huge topic, and I definitely applaud you for diving into the deep end on it. It's not easy to put yourself(or your code) out there to be critiqued, but you will definitely grow from the experience. I would highly suggest you check out pluralsight's Building a RESTful API with [ASP.NET](https://ASP.NET) Core by Kevin Dockx. It is a great course that should at least get you moving in the right direction. The great thing about it is that Kevin adheres to REST API conventions and standards. He also applies well known patterns such as Factory and Repository (among others) patterns. Really a great resource. &amp;#x200B; &amp;#x200B;
 This is a huge topic, and I definitely applaud you for diving into the deep end on it. It's not easy to put yourself(or your code) out there to be critiqued, but you will definitely grow from the experience. I would highly suggest you check out pluralsight's Building a RESTful API with [ASP.NET](https://asp.net/) Core by Kevin Dockx. It is a great course that should at least get you moving in the right direction. The great thing about it is that Kevin adheres to REST API conventions and standards. He also applies well known patterns such as Factory and Repository (among others) patterns. Really a great resource.
I would say this is a bad use. There's nothing strictly wrong with it, but leaving private fields null and initializing them at random times outside the constructor or field initializers is a deadly habit when multi-threading is involved. It's not worth micro-optimizing (an empty List is cheap, unless you're specifying a large starting size) to risk that you or some later coder is going to take into account that the private field may be null when they make some change. I use the null coalesce operator like this for optional parameters, however.
I've been doing web and .net development since 1.1. I've lived through the rise and demise of web forms, Dreamweaver, Flash, Silverlight, Expression Web, [ASP.NET](https://ASP.NET), Typescript, NodeJS, and Angular, as well as Entity Framework and other things I've pushed out of my head. I can tell you that what seems "supported" today may be gone tomorrow because the industry is always chasing the next big platform that will allegedly give us the tools to make web development "quick" and "easy". Learn HTML, CSS, Javascript, SQL and C# really well. If you can make a working website with those tools, it won't matter what new hot platform everyone is using, you'll be able to adapt when needed and go back to basics when it inevitably falls out of favor. Honestly, I'm sick of MS and everyone else trying to reinvent the wheel. I finally got a job as a systems programmer and I don't miss web development at all. Being beholden to new frameworks and the latest "web standards" (which aren't standards at all) just gave me headaches because I felt like I had to constantly relearn how to do my freaking job. Younger me enjoyed the adventure but old grumpy me is done. Learn Blazor if you enjoy learning new things. I can tell you it is no silver bullet and will likely disappear just like all the others before it. That's not a reason not to use it in the short term. Just don't expect any kind of job security out of it. 
Entity Framework uses Reflection, so as I know, it would still include the derived class' properties.
1; Yes, I pass an anonym to the Html.Action 2; Even with a named type, you still can't "link" two properties' name. Since anonym types has some sort of "dynamic naming" (not really, but I don't know better word) I thought you could somewhat ensure that it uses a name of a property, but with different value.
I skimmed the reader, discovered it looks pretty cool, starred the repo and will have a look when I am in front of a PC. 
As a self-learning beginner preparing for the MCSD exams, I would like to know the answer to this too.
I'm not really sure how re-implementing MQ is less complex than implementing MQ?
*grabs popcorn*
I read about it but didn't got what they mean for "server side Blazor", it means that I can run Blazor services on the server and seamlessly consume them on the client without worrying of the difficulties that you get when you consume HTTP APIs with client side service?
&gt; Learn HTML, CSS, Javascript, SQL and C# really well. If you can make a working website with those tools, it won't matter what new hot platform everyone is using, you'll be able to adapt when needed and go back to basics when it inevitably falls out of favor. Thanks for the advice, I'm glad to hear that despite this storm of frameworks, libraries and code generation software basic web dev skills aren't going to become obsolete how many predicted.
How about repository in repository in reflection in EF repository? Whatever the trainee thought when he got assigned this task
Oh ok, the word "wannabe" threw me off. Was asking because I'm in a similar position trying to go for a junior developer role myself. 
Talk about focusing on the irrelevant. OP asks about authorization security with a code sample that's a gaping wide open hole for exploitation and you respond about url letter casing and dashes?
Passwords in the DB are hashed with salt. They are never decrypted. To prove auth is successful, I put the passed password through the same process and make sure the hash matches.
Seems complicated but it just end up as a simple query on the database, something that the entire team was already used to. By avoiding MQ we also had one less part of the architecture to do support, monitoring, upgrade, deploying, etc. On the other hand MQ have way more features that we just didn’t need.
I don't know you situation beyond what you've written here, but you just claimed: &gt;We handled atomicity, retries, ack and more. That doesn't sound like a simple query. That sounds like a lot of code that needed to be written, tested and deployed. 
I agree 😅
Yes. It still sticks like silberlight. I have a nose for throw away tech. 
Well then, not to be circular - but I don't see how that is less complicated that just implementing something that already solves those issues.
sweet thanks for checking it out, even a simple comment like this makes my day =)
Simple server side example about clicking button that increases counter in screen. User clicks button -&gt; button click event is sent to server via SignalR -&gt; server handles click event and increases counter -&gt; diff of changes to virtual dom is sent back to browser via SignalR -&gt; Browser updates dom with diff. You could think it as little bit like remote desktop client/server that uses html. **Cons** - Can't work offline. SignalR needs to be connected. - Network latency and server load can effect UI performance. You can use css and javascript to make this less visible even with high latency. - More demanding for server. It needs to keep state for every user. **Pros** - More secure because everything is running in server. Browser side os just thin client. - You don't need to create API. You can do database calls directly in event handlers if you want. Personally I think server side version is very strong for enterprise apps.
Here is the kicker, every single web tech is a throw away tech. The industry has a raging hardon for reinventing the wheel every 6 months.
ASP.NET MVC has a strong foundation, Angular + React are strong foundations. I think these will be 5 year techs.
It does.
Just an FYI, in the future, when you design your table, you can set Identity Increment to 1 in the Column Properties of the primary key column and SQL server will auto increment on its own. No need to find the next number with a stored procedure. It will also only use an ID once to avoid data collision issues when you create a new record after deleting one with the highest ID (in your solution the ID will be reused).
Play around with it and have fun. Don't plan on doing anything in production with it until it gets support. It's still in the experimental phase with support coming for server side Blazor in .NET Core 3.0 scheduled to release next year. I do think it will take off though, it has a ton of momentum right now.
Go do the Entity Framework Core tutorials on the MS site. Then, figure out how to use the database without EF. Set up DataReaders and build your own ORM. Good luck. Database programming is not the easiest thing to learn.
Similarly, if you _do_ have some extra time (pet projects, etc,) Blazor is under pretty active development, so I would give it a spin. Having it in your wheelhouse won’t hurt. It’s probably prime time for pull requests!
Blazor isn’t reinventing a wheel—it’s borrowing other cars.
See thats what I'm trying to avoid. When I was working with java I was pretty easily able to find what I needed to do limited database handling without having to go learn the whole full process first. With c# the info is just super scattered.
I've been using it for some hobby projects and its pretty cool. Mainly now is a website with info and stats for some game servers I run (Minecraft etc). The stats aren't publicly accessible for full client side code but blazor makes it easy to have a responsive dashboard page without setting up signalr and writing all that JS you'd need for a classic ASP.NET app. Pretty simple to just have the server side fetch updated info every bit and send a callback to any pages to change their data
I, personally, dislike EF, core or no core. May I suggest simple ADO.NET with bits of [Dapper](https://github.com/StackExchange/Dapper) here and there?
I did the identy for the primary key. Thw reason why the check number is not the primary is because you can have multple policies that when billed are on the same check number. 
An empty list is hardly a stinky code smell. Lazy might be overkill for this.
The description of [ADO.NET](https://ADO.NET) sounds an awful lot more user friendly than the LINQ implementation. Though since I haven't dug into either very much and MS made both I suppose they could be related.
If you’re talking about C# .NET (not .NET Core) then SQL Server is going to be your best option.
I was given a bonus to pursue it at my first job (they paid for it), and I added it to my resume when I acquired it. I've never had anyone ask for an official transcript, and because of reworks and updates, it now says "2016" despite it being the 2014 version. I'm sure it looks good on a resume, and it might single you out of a stack of them in front of a manager, but I don't think it would be worth spending your own money on.
Your use case is very simple so every answer you see will be correct. However, let's go through some of your options: * SQL Server/Express (MSSQL): definitely the most supported and documented because Microsoft has made an effort to integrate it with the .NET ecosystem. However, it has licensing costs and restrictions. * SQLLite: Really easy to use and less features but it is just a single file so it doesn't require a standalone server. In your use case, I would strongly consider it. * MySQL &amp; PostgreSQL: Except in very rare cases, these will be just as compatible as the MSSQL and they are 100% free. PostgreSQL in particular has some more advanced indexing, locking and querying features that will make your life easier. When deciding what database to use, I usually start with PostgreSQL and if I run into something it can't do, I look for something else. I've never gotten to step 2.
be the change you want to see in the world - use Blazor because it's amazing! whether or not it gets adopted by more people depends on people actually using it and recognizing its potential
Yeah, I thought so too but I've used it in other functions where I extracted every color of RGB and It worked perfectly fine. I guess alpha isn't included. 
I slapped together a little starter for you: https://pastebin.com/Ri7rFjx2 If you're running .NET Core, create a project with `dotnet new console` and then do `dotnet add package System.Data.SQLite` in order to get SQLite db provider. You can then paste the code into Program.cs and play with it. Or you can also start a console app project in Visual Studio, and add `System.Data.SQLite` package either through Tools &gt; NuGet Package Manager &gt; Package Manager Console or Tools &gt; NuGet Package Manager &gt; Manage Packages for Solution. Have fun.
Your words have convinced me. I'm gonna drop out of college :D
Multithread In EF.. example.. public static void AddOrUpdateAdditives(MultiValueDictionary&lt;string, ILookup&lt;string, string&gt;&gt; Additives) { DAVEBE SingExists = null; using (BPKOCHEntities Entities = new BPKOCHEntities()) { Entities.Configuration.LazyLoadingEnabled = true; Entities.Configuration.ValidateOnSaveEnabled = false; Entities.Configuration.EnsureTransactionsForFunctionsAndCommands = true; foreach (var Key in Additives.Keys) { if (!string.IsNullOrEmpty(Key) &amp; Key.All(char.IsDigit)) { var AdditiveNames = Additives[Key].FirstOrDefault(); if (AdditiveNames == null) { continue; } foreach (var Language in DefinedLanguages) { var nameSing = AdditiveNames["Field Type"].Where(FieldType =&gt; FieldType.Equals("Singular")).Select(x =&gt; AdditiveNames[Language].FirstOrDefault()).FirstOrDefault(); SingExists = (from x in Entities.DAVEBEs where x.VERKKURZ.Equals(nameSing) | x.VERKLANG.Equals(nameSing) select x)?.FirstOrDefault(); var namePlur = AdditiveNames["Field Type"].Where(FieldType =&gt; FieldType.Equals("Plural")).Select(x =&gt; AdditiveNames[Language].FirstOrDefault()).FirstOrDefault(); var PlurExists = (from x in Entities.DAVEBEs where x.VERKKURZ.Equals(namePlur) | x.VERKLANG.Equals(namePlur) select x)?.FirstOrDefault(); int i = 0; bool singular = false; if (SingExists == null) { ImportDavebe.AddDavebe(Language, VERK_SING, nameSing, nameSing, "", null, "", ""); i = i + 1; singular = true; } if (PlurExists == null) { ImportDavebe.AddDavebe(Language, VERK_SING, nameSing, nameSing, "", null, "", ""); i = i + 1; } var query = GetPrimaryKey(Language, IDENT: Key); var iDAVBKL = Entities.DAVBKLs.Find(query.ToArray()); if (iDAVBKL?.UPDATEZAH != null) { if (i == 0) { //no new items created use SingExists and PlurExists iDAVBKL.VERKEHRNR_SINGULAR = SingExists.VERKEHRNR; iDAVBKL.VERKEHRNR_PLURAL = PlurExists.VERKEHRNR; } else if (singular &amp; i == 1) { //Singular Item Created but PlurExists iDAVBKL.VERKEHRNR_SINGULAR = VERK_SING - i; iDAVBKL.VERKEHRNR_PLURAL = PlurExists.VERKEHRNR; } else { iDAVBKL.VERKEHRNR_SINGULAR = VERK_SING - i; iDAVBKL.VERKEHRNR_PLURAL = VERK_SING - 1; } iDAVBKL.BEZEICHNUNG_SING = nameSing; iDAVBKL.BEZEICHNUNG = namePlur; iDAVBKL.SATZDATUM = DateTime.Now; iDAVBKL.SATZPERSON = ConfigSettings.User; iDAVBKL.SATZUPDATE = "A"; iDAVBKL.CLIENTID = ConfigSettings.ClientId; iDAVBKL.UPDATEZAH = iDAVBKL.UPDATEZAH + 1; iDAVBKL.SATZHISTOR = "?"; } else { iDAVBKL.MANDANT = ConfigSettings.Mandant; iDAVBKL.SPRACHE = Language; iDAVBKL.IDENT = Key; iDAVBKL.BEZEICHNUNG_SING = nameSing; iDAVBKL.BEZEICHNUNG = namePlur; if (i == 0) { //no new items created use SingExists and PlurExists iDAVBKL.VERKEHRNR_SINGULAR = SingExists.VERKEHRNR; iDAVBKL.VERKEHRNR_PLURAL = PlurExists.VERKEHRNR; } else if (singular &amp; i == 1) { //Singular Item Created but PlurExists iDAVBKL.VERKEHRNR_SINGULAR = VERK_SING - i; iDAVBKL.VERKEHRNR_PLURAL = PlurExists.VERKEHRNR; } else { iDAVBKL.VERKEHRNR_SINGULAR = VERK_SING - i; iDAVBKL.VERKEHRNR_PLURAL = VERK_SING - 1; } iDAVBKL.SATZDATUM = DateTime.Now; iDAVBKL.SATZPERSON = ConfigSettings.User; iDAVBKL.SATZUPDATE = "N"; iDAVBKL.CLIENTID = ConfigSettings.ClientId; iDAVBKL.UPDATEZAH = 0; iDAVBKL.SATZHISTOR = "?"; Entities.DAVBKLs.Add(iDAVBKL); } } Entities.SaveChanges(); } } } } } }
W3C advises it all to be lower case, since nix systems see cased URLs as unique. Where Windows never cared. That’s probably why you never cared either. With net core that’s gonna break shit especially with nginx as your proxy. Gosh. Why is everybody so defensive here? I’ve been architecting RESTful for 4 years. This is quality, albeit basic advice. Consistency is key to success. Then let’s talk about fortification 
Sorry for not advising on the security aspects. I do REST daily and that just stood out like a sore thumb. I would advise getting second opinion on security other than Reddit. 
Be careful on offering solid advice not about authorisation. Some people here think this is stackoverflow 🤦‍♂️
That's a horrible way to do it. Learn some SQL and do it in a stored procedure like God and Codd intended. 
A few quick thoughts: - Some of the folks on this sub have a strong dislike for EF that I don't see elsewhere. If your project is small enough that SQLite is a suitable database, EF should perform fine. It makes life easier. - The EF Documentation can be found here: https://docs.microsoft.com/en-us/ef/core/ - The article you linked to is old and uses the SQLite library for .NET Framework. If you are targeting .NET Core, don't use that. - EF installation depends on project type. See the "Database Providers" and ".NET CLI Reference" sections of the EF docs for both EF and SQLite installation instructions. - Handy SQLite database browser: http://sqlitebrowser.org/ . This may come in handy if you need to edit your database design, because EF migrations may try to do things that SQLite can't do. If you get db errors after a migration, manually design the database tables, delete the migration history in the project and in the database's migrations table, then carry on. - Unlike MS SQL and other databases, SQLite queries are case sensitive. You will need to search SO or other sources on how to set up table designs as case-insensitive. 
It’s not worth my time until fully supported and integrated into .net core with samples, documentation and reference architecture. 
you could upload the code to github
&gt; The description of ADO.NET sounds an awful lot more user friendly than the LINQ implementation. There's a small learning barrier, but once you come up to speed, there's a lot less code to write w/ EF and LINQ than typical ADO.NET code.
Use a TaskDialog instead. Search NuGet for TaskDialog and pick your poison. Task dialogs come with built in support for text that is collapsed.
Currently doing this. Would recommend. 
&gt;When i tried to do many tasks like this, it ends up eating the cpu much more then the multi threading approach. Because time spent waiting for a lock to clear is not time spent on CPU. You get more CPU usage by parallelizing because you're probably accomplishing more in the same amount of time. Compare total execution times between parallelized and locked implementations to determine whether the extra CPU usage is due to task-tracking overhead or actual speedup of execution.
Yes. JavaScript is the modern day cobol. Its going away. Even if Blazor turns out to be a stepping stone to some other technology you will have at least gained some level of understanding how it works and any new design patterns and tooling that emerge. If it succeeds you are in luck, if it fails you probably won't have too much to learn to use its successor.
In my previous employer, I had one of those "career reviews". My manager wanted me to get an MCSD. I naturally asked, "What do I gain from it?" He said, "Nothing really." OK, why would I put the time and effort into something to gain *nothing*? Apparently, a certain percentage of developers must have an MCSD to have a company be "Gold" or "Platinum" Certified Partner. 
Don't do mining but the project looks interesting to read from a code point of view, nice work.
The boilerplate stuff for ADO.NET is so tedious, that stuff is legacy, mate. Good enough for simple data manipulation, but EF is the way to got for data persistence now.
You’ll probably get a lot more both skill development wise and resume building wise, working through some courses on something like pluralsight and then building out your portfolio. In my experience hiring managers always ask about your side projects and only occasionally ask about certs if at all. Certs definitely won’t hurt, but your time and money are much better spent building something to show off. Pick a project you think sounds cool or useful and have some fun coding!
If enough people feel it's worth their time then it's likely to be picked up. It doesn't hurt to learn something new. You'll most certainly be able to apply the gained knowledge somewhere. I'd say, if it interests you then put your time into. There isn't much risk here. 
Man you’re violating #1 rule in computer science.It always depends...
Serious question. What's the difference between a transpiler and a compiler?
Yes, but what you’re saying sounds very dogmatic. I’m glad that code is a good choice for you though.