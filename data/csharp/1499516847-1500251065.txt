Removed: Rule 4. See my comment here: https://www.reddit.com/r/csharp/comments/6m0omw/how_to_write_method_in_c/djxzsv9/
Bro...
It isnt always void. An example of a builtin function that returns something *not* void is Color.FromRgb(byte r, byte g, byte b) This takes three bytes and turns it into a Color object that corresponds to that color. What you get from that function is an object of the type 'Color'. Another example is string a=null; bool b=string.IsNullOrEmpty(a); Here the function IsNullOrEmpty(a) checks whether the string a has a value (it doesn't in this example), or if it does have a value, if it contains more then 0 characters. So if it is null (ie no value) or it is empty, the the function returns a boolean with value 'true'. If it isn't, a boolean with value 'false' is returned.
I think you're looking for something like [this](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/unsafe-code-pointers/pointer-conversions). is the issue that you're returning the bytes? I've never had to do this sort of thing, but I imagine pinning and other things come into play if you need to return the bytes... But if you're looking to return the values and allocation is the primary problem, you could probably just pass in a pre-allocated buffer and copy the bytes to that to prevent the allocation.
What is the array being used for? The allocation can only be eliminated if you either don't use an array or reuse the same instance.
The copying method sounds like the next step, will try that now.
&gt; The allocation can only be eliminated if you either don't use an array or reuse the same instance. When I've been concerned about array allocations in the past (for string manipulation), I've used buffer pools. Read the notes [here](https://stackoverflow.com/questions/30618067/why-are-there-so-many-implementations-of-object-pooling-in-roslyn) from the performance lead on the Rosyln team. I used the [ObjectPool](http://source.roslyn.codeplex.com/#Microsoft.CodeAnalysis.Workspaces/ObjectPool%25601.cs,98aa6d9b3c4e313b) he suggests because performance is a major concern in those code paths. 
Thank you! This particular user is also pestering /r/learnprogramming with the same questions. Zero effort from their side, not even proper questions. Our userbase has already requested that he be banned from /r/learnprogramming.
Simply return a struct instead of an array, e.g. (nasty code): public static (byte first, byte second, byte third, byte fourth) GetBytes(uint value) { return ( (byte)(value &amp; 0xFF), (byte)((value &gt;&gt; 8) &amp; 0xFF), (byte)((value &gt;&gt; 16) &amp; 0xFF), (byte)((value &gt;&gt; 24) &amp; 0xFF) ); } 
&gt; the ability to import a type in an unrerefenced name space VS can do that already.
You'll have to excuse my inexperience here, but I've never seen a method written out like this (in particular the way the return type is *"(byte first, byte second, byte third, byte fourth)"*) - it won't compile, with the message: &gt; "cannot declare instance members in a static class" And I don't have any guess as to what to do here if you've written pseudocode. Are the contents of the brackets representing a struct I have to create elsewhere?
It's a method that returns a tuple with 4 values. It's a C# 7.0 feature, so you require a compiler that supports C# 7.0 (Visual Studio 2017 or Mono 5.0).
I hear you. The post history is very odd/suspect too.
Ah ok, AFAIK, b/c I'm using Unity, I can't upgrade the version of C# - However, there is a way of allowing the use of tuples, I'll look into that now. E: would [this be appropriate](https://gist.github.com/michaelbartnett/5652076)?
&gt; The post history is very odd/suspect too. Definitely. I think we have to keep an eye on that user.
Yes, when you use Unity you can't use C# 7.0. No, that link is not appropriate. There you use the `Tuple&lt;&gt;` type, which is a class. So you create garbage again. Instead you could define your own struct with four fields and use that.
Ok, I'll look at structs next. Thanks!
You can do it with the shortcut "ctrl + .".
I'm surprised no one has suggested this yet. The usual solution to this sort of problem is simply using pre-allocated buffers that get reused. In this case you change your method to something like: public static void GetBytes(uint value, ref byte[] bytes) { bytes[0] = (byte)(value &amp; 0xFF); bytes[1] = (byte)((value &gt;&gt; 8) &amp; 0xFF); bytes[2] = (byte)((value &gt;&gt; 16) &amp; 0xFF); bytes[3] = (byte)((value &gt;&gt; 24) &amp; 0xFF); } Then simply recycle your byte buffers as needed.
Roslynator gives you the first one (although the experience isn't as smooth, but you get used to it), and I've found the VS2017 test runner to be "good enough". Plus, I have an ncrunch license, which is just the best. :)
Some guy in /r/fsharp just posted about using elmish.wpf and mentioned how good it is. Maybe you can ask him about it
**Here's a sneak peek of /r/fsharp using the [top posts](https://np.reddit.com/r/fsharp/top/?sort=top&amp;t=year) of the year!** \#1: [A certain other .NET language.. is going to be supported in Rider very soon.](https://twitter.com/JetBrainsRider/status/854694183852003328) | [24 comments](https://np.reddit.com/r/fsharp/comments/66b3jj/a_certain_other_net_language_is_going_to_be/) \#2: [F# 4.1 released on NuGet](https://www.nuget.org/packages/FSharp.Core) | [1 comment](https://np.reddit.com/r/fsharp/comments/5ug522/f_41_released_on_nuget/) \#3: [A Peek into F# 4.1](https://blogs.msdn.microsoft.com/dotnet/2016/07/25/a-peek-into-f-4-1/) | [12 comments](https://np.reddit.com/r/fsharp/comments/4ulcjq/a_peek_into_f_41/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/6l7i0m/blacklist/)
I really don't know any other databases solutions only such mysql. that is way. I want to make this app offline. could you tell me more about localdb?
Best video series I didn't think I needed. 
Thanks so much for your help so far, I really appreciate it. I'll have a proper look and try to digest your answer on monday. Have a nice weekend!
Removed: Rule 4. Way too much of a dump. Describe the specific problem/error you're having. Strip the code down to the specific area giving you issues. Properly format the code to be viewable on Reddit.
You're welcome. Let me know if there's anything else
Thank you so much! This was the solution. Now works just like the System.BitConverter but without any garbage!
There are several problems with your code. The first problem you have is that `class TestDog` is inside `class Program`. It shouldn't be. The next problem you have is that `Main()` usually lives inside `class Program`. It doesn't *have* to be there... but for an absolute beginner, I'd recommend leaving it there. Next - are your two classes in two different projects? If they are, then the project which contains the "driver" class, as you call it, needs to reference the other project. (The correct term is "client", rather than "driver", but I know what you mean.) In Solution Explorer, find the client project, find its references, right-click and select Add Reference. Choose to add a reference to the project that contains the TestDog class. Next, the two classes are in two different namespaces. The easiest way to fix this is to put them both into the same namespace - it doesn't really matter what namespace you choose, but try to avoid giving the namespace the same name as any of the classes in it (i.e. at the moment you have a namespace called `TestDog` which contains a class called `TestDog`, try to avoid that because it makes things a tiny bit more difficult than they need to be). And finally, the line `Dog rover = new Dog()` - the object you're trying to create is a `TestDog`, not a `Dog`. As it stands, `TestDog` is the class that contains the `bark()` method. `Dog` only contains a `Main` method, you don't want to create one of those. Although you may find that when you fix the first two points, this one goes away anyway. Hope that all makes sense... it looks like you know what you're trying to do, you just need to get the details of what goes where so that it works. Just one more thing - another poster has suggested you look up properties. And yes, that's true - but what you're doing is absolutely fine at the moment. When I teach people, I teach them to use GetXXX() and SetXXX() methods just like you're doing. Only when they're comfortable with that do I move on to teach them properties. So yes, you should learn properties - but only when you're totally happy with what you're trying to do right now.
I want to not use resharper it slows down VS to a ridiculous level, but its refactoring tools are still better than VS and so is their go to anything implementation. Oh and so is their find usages. Other than that, i don't need it for anything else, if Microsoft could catch up with those parts i could ditch resharper altogether.
It's cleaner, and has a better ui. That's about it.
It isn't an option on a team environment, where devs are used to take advantage of Blend and visual UI design. Also doesn't work at all on UWP. With UWP and .NET Native Microsoft has given a clear message what programming languages matter to them. F# seems to be leaping along for the big data guys doing demos on Azure about type providers. Really nothing I can use to sell F# to customers doing native GUIs with a certain expectation of tooling.
Yeah it looks pretty cool. I'm so excited to write c# down to web assembly
There's no reason for the `bytes` parameter to be passed by ref here.
Realised that shortly after (AFAIK, in C#, by Ref is just the default) - It sounds really noob-y, but the missing part was that I didn't know how to assign bytes in a byte array like that - Googling it got answers to more advanced questions, yet not my simple one (this seems to be an issue with simple problems like this)
&gt; AFAIK, in C#, by Ref is just the default No, this is not true. By default it's always a copy in C#. Just with references you get a copy of the reference, not of the object, so you end up with two references pointing to the same object. This confuses a lot of beginners.
private = Access modifier void = Return type Ranking_OnReceivedLeaderboardEvent = function name (List&lt;UserLeaderboardRank&gt; lbl) = parameter definition private void Ranking_onReceivedLeaderboardEvent(List&lt;UserLeaderboardRank&gt; lb) = Function signiture {...&lt;Everythingelse&gt;...} = Function body 
The `ref` (in `ref byte[] bytes`) isn't required and typically the `byte[]` is passed as the first argument. public static void GetBytes(byte[] bytes, uint value) { bytes[0] = (byte)(value &amp; 0xFF); bytes[1] = (byte)((value &gt;&gt; 8) &amp; 0xFF); bytes[2] = (byte)((value &gt;&gt; 16) &amp; 0xFF); bytes[3] = (byte)((value &gt;&gt; 24) &amp; 0xFF); } 
You should be able to bind this by passing a string called "Department" to your action method. Say the action method is called "Create". Here's the view: &lt;h2&gt;Create&lt;/h2&gt; &lt;form role="form" action="/Test/Create" method="post"&gt; &lt;div class="form-group"&gt; &lt;label for="Department"&gt;Department:&lt;/label&gt; &lt;select name="Department" id="Department" class="form-control"&gt; &lt;option value="Sales"&gt;Sales&lt;/option&gt; &lt;option value="Marketing"&gt;Marketing&lt;/option&gt; &lt;/select&gt; &lt;/div&gt; &lt;button type="submit" class="btn btn-default"&gt;Submit&lt;/button&gt; &lt;/form&gt; And here's the action method: [HttpPost] public ActionResult Create(string Department) { return RedirectToAction("Index"); } If you select the Marketing department, then "Department" in the action method will have the value "Marketing". Hope that answers some of your question. 
I'm not exactly sure whether this fits your needs but anyway, here we go: How about a shared database storing something like client_id, client_secret, ..., last_login where all the services connect to. They send their client_id, client_secret, ... and in the database the last login is set to any kind of timestamp and as long as the login was not too long ago, re-authenticate the clients. To make this more convenient a separate(?) webpage handles the authentication. If somebody opens a webpage, he gets redirected to the page which probably sets cookies or something after authentication, redirected back and the original page verifies the cookie and shows the content. Alternatively the authentication could also be done in "code-behind" 
Ah ok, I just assumed as the copy doesn't show up as a GC allocation in Unity's profiler, I just assumed it was by ref - Thanks for clarifying though.
Single http service would be enough on the server side, but implementing it on every client will takr more work
So: Hire(OverseasReplacement, out CurrentSchmuck); Becomes: Hire(OverseasReplacement, out _); I think a lot of people will like it. You don't have to declare or even acknowledge the CurrentSchmuck.
As someone who has had to roll his own single sign-on implementation, please believe me when I say that you do not want to do this. Look into [Auth0](https://auth0.com/). For your use case, it'll probably be free. It solves all of the nasty OAuth2/OpenID Connect negotiation and has a pretty slick UI for wiring everything up.
I run a system with similar pieces. For the MVC/API/Web Forms sites I use the regular ASP.NET Identity, set up with the same machine key/validation key/cookie name+domain. Then I use JWT tokens as needed for js apps, generated and checked via calls to the API. BUT, I'm using subdomains on the same domain for all the various sites. For truly different domains it's more complex as you can't share the session/auth cookies. You could use token-based authentication for everything. Or you can use an approach like this: https://www.codeproject.com/Articles/106439/Single-Sign-On-SSO-for-cross-domain-ASP-NET-applic Finally, if you'd cool with using a third party auth solution then something Auth0 that u/mgw854 mentioned is a good choice.
Doesn't this still require a heap allocation because the struct is escaping the method?
https://identityserver.io/
Based on this users history, I'm half convinced he's a bot, parsing Reddit responses into answers on some spammy quora clone somewhere.
Honestly that would make a lot more sense. I try to give people the benefit of the doubt, but sometimes you have to wonder. Well even if that's the case then maybe hopefully someone will end up learning something out of it.
No. Structs are value types, they're allocated on the stack.
Looks impressive. How easy could you migrate from classic asp.net membership system to this?
You could use a struct instead of byte array.
Could that have the advantage that the input/output's size could be arbitrarily chosen when it's passed in, yet will get removed in memory fairly quickly after? (Still not familiar yet between stack and heap objects lifetime's) That's my next goal for this system, currently it works perfectly for having a buffer for something which is four bytes (using for floats in the example) but at some point, I think I'm going to need to pass in a byte array of an un-predetermined size.
No, structs need to be of a fixed size. That is part of what makes them cheaper to allocate than reference types, because their size is known you can just reserve a bit of space for them on the stack instead of having to do a separately tracked heap allocation. If you know that your values are always within a certain size (e.g. 4-8 bytes) you could make a struct that's always the size of the largest possible value (within reason), but if you truly need to pass around values of completely variable lengths you'll have to use an array. 
[Value types are not always stack-allocated](https://stackoverflow.com/a/4853251). Value-typed fields of reference-typed objects are heap allocated. Large value types are heap allocated. Arrays of value types are heap allocated. Boxed value types are heap allocated. Sometimes the JITter doesn't even bother allocating stack space, and just enregisters the value. Regardless, your answer to my question is correct about return values: the CIL calling convention is to put the returned value on the stack.
You're absolutely correct. Thank you for this clarification.
Are you using a high-DPI screen, like a Surface? Because Windows does a poor job of handling them. 
This guy does a great Job of explaining MVC core: https://www.youtube.com/playlist?list=PLYMOUCVo86jGwWoSoEkpgnCJ3IPXIQmIC
Winforms is old, it's not made with scaling in mind. If you proper scaling switch to WPF apps.
So what do you use for ORM, EF code first from model? Curious because I have used the following approach in the past and I am not a fan. * SSDT project * EF code first pointing at existing DB * Update POCO manually * Map with AutoMapper I would be very interested in this if it simply is some process to sync an SSDT with some POCOs in another class/namespace
Be sure to look at SpaServices and server side rendering for SEO. This repo has a great template. https://github.com/MarkPieszak/aspnetcore-angular2-universal
Interesting. The approach to capturing the 'task' could find many usages!
Which AES factory are you calling? Try using AESCryptoServiceProvider. Also, if you don't have an explicit need for CBC, switch cipher modes to something that doesn't require padding, like CFB. Should solve your problem. EDIT: The whole implementation is just slightly different from best practice. Here, check out this project and feel free to use it as a template if you want to: https://github.com/jmg292/TORComm/blob/master/TORComm/Security.cs#L153
Ok thanks for the info on structs, I have something in mind I'll need them for. What I'm making is similar to a "ghost" system in racing games, with the caveat that I want to bundle these up and send them over the network to some kind of analytics database (next project). Part of the issue is that these segments aren't going to be of uniform size necessarily, as they'll need to account for an arbitrary number of extra events. So whilst I could make an array of the largest reasonable size, I don't want to necessarily send that over the network with hundreds of black zeroes at the end. Another issue is that removing the unused space in that big buffer would involve some garbage possibly (but that might not be the end of the world anyway as this would happen every 15 seconds, not 30 per frame) Its good that you prompted me, because I realised that I can have a buffer which fills up and then that gets send over the network as and when it's full, instead of having it hard-set to a specific time step. I'll also have a case where if it does reach a Max time step, it'll check to see if it'll fit into a 50% or 75% size buffer to reduce Tha bandwidth req just a little but more. Some might say I'm over thinking the optimization part, but this project is more about flexing my learning as programmer as opposed to being hugely practical for the development of this side-project.
Personally I like dapper. But you could use any of the popular orm, including ef with this approach. I'll try to clean up the code a bit a put it on GitHub this month.
You want something that implements the OpenID Connect protocol. You could do this with Auth0, Identity Server, Keycloak, Azure AD and many other products, services and libraries. You don't want to write this yourself.
This StackOverflow [question](https://stackoverflow.com/questions/37189430/windows-forms-application-on-windows-10-not-scaling-properly) may help. Like others have said, WPF provides much better support for modern UIs. Winfoms if getting old. That said, as of Net4.5.2 is provides better support for High DPI, previously really ugly. Still, give WPF a try.
Take a look at [SQLite](https://sqlite.org/) you may have a couple of applications on your computer using it behind the scenes.
&gt;Should I call it in blocksize-chunks only? For various reasons, yes. Also check your library you're using. If the problem appears with another, it'll help focus in on the source. I see something else, maybe it's right, but in this small code view I see that you encoded the (Key) to UTF8 and then the decrypted response...why both? Seems duplicative. 
I started learning to build some simple desktop apps like a calculator a few months ago. I used the visual designer, layed it out, did the code and ran it. It looked bad. So I sucked it up and learned out to just write the XAML. It's such a huge difference.
Use containers and set the anchor of the elements to top, bot, left and right. The app will scalate with all elements even if it's maximized 
I guess, but discards is just a compiler convenience and not related to the CLR. 
Thanks again for your feedback. I think I understand what you are saying. The reason the activity input fields are different is because they need to be. [Here](https://msdn.microsoft.com/en-us/microsoft-teams/connectors?f=255&amp;MSPPError=-2147217396) is a link which deals with what i'm trying to do. There, the HTTP payload example is written in pure JSON, no examples in how to convert an C# object into JSON. I'm not sure if i understand what you mean the alias properties. The content, as well as the names of the properties needs to be different. --- Edit: I managed to do it! Splitted the "sections" class into RootSection and Contentsection classes, and added them to a Object[] array. It works great. Thanks for the help!
Practically everything is compiler tricks. When was the last time they actually added something to the CLR other than class-forwarding? 
You don't necessarily *have* to switch to WPF. See [this StackOverflow answer](https://stackoverflow.com/questions/22735174/how-to-write-winforms-code-that-auto-scales-to-system-font-and-dpi-settings) for some design guidelines. Also see [this sample project](http://www.telerik.com/docs/default-source/blogs-docs/telerikpermonitordpisamplecs-zip) that demonstrates how to get *per-monitor* DPI working. In summary: * Use anchored, docked, autosized controls wherever possible. * Explicitly set font on your labels and textboxen. * Handle the `WM_DPICHANGED` message if you want per-monitor DPI scaling to work correctly.
Thanks! Well, the MSDN example decrypt method takes IV as an argument and I thought, when implementing it, that it would be more compartmentalized to separate the IV inside the decryption method instead of in my networking class. But now I see why, because I can separate the IV once and call the decryption method with the rest of the ciphertext coming from the wire. However, I'd be curious what the various reasons are? Is it because of performance? On UTF8: my intention is only to transform between bytearray and string and viceversa. Maybe I'm missing a simpler method to do this?
Seems that after rephrasing my question in google I found out solution. I can add public method to control which will be used as connection to do changes. My question now:is it good approach, or should I do something different? Sorry for dumb questions. I am just very dummy at this. 
Do you have a reference to System in the project and the System.Net using directive in the file?
I think `WebClient` and `System.Net` may be implemented in mono/xamarin for mac. If so, make sure you include a reference to the `System.Net` assembly.
There's some learning curve to understanding OpenID Connect if you're not already familiar with it but the implementation of IdentityServer plus client connectivity isn't too bad at all. There may be a ready-to-go solution for integration ID4 with classic asp.net membership but if not there's only a couple narrow interfaces to implement to integrate any credential storage. For JS clients, oidc-client is pretty easy to use. It can get trickier depending on what kind of flows and tokens you want to use. Standard third party flows are well supported but it gets a bit murkier trying to make a more integrated first-party app experience.
Try setting AutoScaleMode = None That will stop the controls from changing size and layout but the text size may be changed by the OS. Great page here: https://stackoverflow.com/questions/22735174/how-to-write-winforms-code-that-auto-scales-to-system-font-and-dpi-settings
Tried both Aes and AesCryptoServiceProvider to no success. I'd prefer to stay with CBC, even if just to work it out; as I said padding wasn't the problem here afterall. Thanks for your implementation I'll give it a try.
Here is a great work up on using blockchains in AES and how/when to encrypt/decrypt. https://security.stackexchange.com/questions/38055/why-does-aes-encryption-take-more-time-than-decryption The benefits/cons depend on your library and cipher. I find it easier and it seems a bit more secure to work with the chunks in an array. Maybe it's leftover habits from the switching to 64bit systems. I can't see anything wrong in the small sample. I just raise eyebrows at extra bytes with encoding and they get an extra lookover to make sure I'm not introducing anything extra from the string/byte switching. Especially library documentation to make sure they don't require a certain encoding/decoding to function properly. 
Great link. I can use this stuff for some of my projects! 
I'm glad you like it! It's been a pet project of mine for a while, though it's in a perpetual state of incompletion. Feel free to shoot me a PM if you have any questions on any part of the codebase, it's a bit of a mess in places. 
Thanks! I still wonder where those bytes come from. I mean I could put a for loop with an Array.Copy() in it before returning the cleartext but it's not the way it should be...
Could add a temporady stream writer then write to a log file before and after to see of anything pops as well 
Could do that, I also added the encrypt method at the end of the post now.
Bypass the old tech all together. Output to a browser.
You could load the file to a List&lt;String&gt;, set the line and overwrite the file, or append "/n yourtext" to the Nth line.
Use HttpClient. I don't think WebClient is part of .Net Standard.
Tried both. System.Net in Assembly also directly using System.Net.WebClient
A slight newbie. What does that mean?
Oh man, inter-framework crypto is a huge pain! I struggled getting python's various crypto libraries to play nicely with .NET for weeks. Are you using pycrypto? The problem is that Microsoft's implementation isn't exactly to spec. They go above and beyond to ensure it's easy to use, but that has the effect of causing weird issues like this. They don't tell you everything that's going on under the hood. I only had success when I switched to OFB and to the new python 3 [cryptography library](https://cryptography.io/en/latest/). There are less "moving parts" in a mode that doesn't require padding. I think GCM would work nicely, but I couldn't figure out how to implement it in .NET. Anyway, [this python module contains my .NET compatible cryptographic protocol](https://github.com/jmg292/gatekeeper/blob/master/gateway_security/__init__.py). My money is on library compatibility issues. The .NET decryptor is looking for data that the python library isn't formatting properly. I'm still working on the problem itself, I'll bug you if I figure it out. In the meantime, if you're not too invested in your current library, try implementing this with crypto library I linked. It could solve your problem. 
Also dotnet 4.7 just introduced support to fix a lot of the scaling issues in winforms.
[Webclient isn't implemented in dotnet core](https://stackoverflow.com/questions/30227219/how-to-use-webclient-with-netcore). This means you'd have to create your own implementation, or use a windows system.
It's a handy skill to add to your toolbelt too. I was looking at some CSS recently (with no web dev experience at all) and I had no trouble making sense of most of it. A lot of it reminded me of what we use with XAML, but obviously with a different markup language.
I believe a lot of the WPF concepts were based off of web development.
I started this project last 2 years ago on my old ASUS laptop (Windows scale:???), and running it on my office desktop (windows scale: 100%), now I redesign it with version 2 on my new HP laptop (windows scale: 150%)
It is hard to transfer all my code to new WPF. The windows 7 can run WPF apps?
I saw mention of HiDPI support in WinForms in the .Net 4.7 release notes. I haven't tried it yet, but that may be worth looking into.
Don't really have time at the moment to go over the slides/code (sorry!) but assuming you plan on uncommenting/commenting sections of your code to use as different examples, you can format your multi-line comment blocks like this to make it much easier/faster to do so: /* // out var declaration AssignVal(out var szArgu); Console.WriteLine(szArgu); Console.ReadLine(); //*/ Notice the addition of the extra `//` on the last line of the comment block. This means all you have to do to uncomment/recomment out the block is add/delete a starting `/` to the beginning: //* // out var declaration AssignVal(out var szArgu); Console.WriteLine(szArgu); Console.ReadLine(); //*/ Now with that extra `/` at the start, the start of the comment block `/*` is ignored, and the 3 lines of the block are active. To comment the block again, just delete the starting`/` and the `/*` comment block starter is enabled again.
Should I install it manually or it will come in windows update since i already have VS in my laptop?
Yes. Even Win XP can. All you need is .NET 3.0 or higher and SP2.
Give yourself some credit for trying to find some help. I think you are getting closer to the correct answer. If I was in your boat, I'd say some Events are going to be part of a proper solution. Events can be fired when something happens in one form, telling the other that something has happened. 
Thanks! Maybe I'll start wpf in my new projects. Thanks for the advice.
Your indentation on the 'out var declaration' slide is messed up. Everything contents wise looks great. One of the best breakdowns I've read. 
Wizardry! Stealing this :)
You can mark your application as DPI Aware using an application manifest. https://stackoverflow.com/questions/23551112/how-can-i-set-the-dpiaware-property-in-a-windows-application-manifest-to-per-mo This will tell the framework that your application will handle DPI-related sizing and layout changes. As such, your application will not be automatically scaled for DPI settings other than 100%.
Which is quite ironic because everyone complained that writing web apps in a format initially meant for document markup is tedious. We used to make our web development seem like desktop development (ASP.NET WebForms). Now we try to make our desktop development seem like our web development (WPF MVVM).
You should really take a look at event sourcing (ES) with command query responsibility segregation (CQRS), which sounds a lot like what you're after - and you'll get plenty of mature-ish frameworks to do the heavy lifting for you. Hanselman just recently did a post on the topic (specific to .Net) which you might find useful. Remember to read and evaluate the suggestions in the comments as well, as they are pretty good too: https://www.hanselman.com/blog/ExploringCQRSWithinTheBrighterNETOpenSourceProject.aspx Edit: Added link to Hanselman.
Thank you. I will take a look!
This is basically his first solution done correctly.
**in·er·tia** *A tendency to do nothing or to remain unchanged.*
I have a Winform app with a lot of forms and users who insist on running their fonts at 150% which was destroying the layouts. The best solution I've found is to put all the controls in a table layout control and rely on that for positioning the controls. If you allow the table layout control to 'Autosize' the columns and rows it will do a good job of keeping everything in place. I haven't had a lot of time to look at WPF but from what I've seen the table layout control is a lot like the stackpanel in WPF.
Thanks. This answered my question.
&gt; or to remain unchanged. right, He wants it so that it takes a bit of force to get the UI moving.
Ok it looks like the answer for me it to use ether Application settings, or make my own config file system. Application settings might be the easiest to do, but making my own config file is properly more flexible, so think that is what i will do. Thanks to everyone for your suggestions.
I would mention tuple deconstruction.
He just wants it to resist change, as if it were a physical object with mass and you applied a force to it.
There is no exception checking or anything. private static bool ReplaceLineInFile(string file, int lineNumber, string newLine) { var contents = File.ReadAllLines(file); if (contents.Length == 0 || contents.Length &lt; lineNumber) { return false; } contents[lineNumber] = newLine; File.WriteAllLines(file, contents); return true; }
Set a delegate function in your form that can be called by the thread performing the long running function to report progress.
Why does it seem like the wrong way to do it and what are the UI update issues?
Have a look at backgroundworker, which is a winforms way of running the domain logic separately from the UI thread, thus allowing you to report progress on the UI thread. The standard documentation has relevant examples I think.
why would you not do wpf or something like that for this? Winforms is terrible for things like this, saying that, i always just use background workers and raise events that would update the data and refresh the form. This has always been hot or miss with me with winforms which is why i dont tend to do this with them. Progress bars work better imo.
This makes more sense than my interpretation of sending the UI moving with velocity lol.
It just seemed to me that my Library functions get to tightly bound to my form in that way, making it harder to change the UI parts to use something else like wpf. And the UI update issues is that the UI does not always gets updated when my code is running.
I am using Winforms because its what i am used to working in :-) 
Ok will look into this further, it was kind of also the way i was looking at doing this. Just wanted to see if there was a better way.
I will try this out.
Fair enough. I use worker threads to do logic and just use events to trigger updates. Side Note. I would learn wpf/upf/etc as the UI updates and with new frameworks with tasks makes this stuff INCREDIBLY easy.
IMO unless there are significant performance concerns, always lean towards immutable objects. always. try tracking down a bug if it's immutable. imo it's a nightmare. my two cents.
I strongly agree. But when I search about how to update these large immutable hierarchies -- there's hardly any information! The Haskell and Clojure worlds deal with it a lot, but I'm not sure about C# and even F#.
should I start all over again with my codes? It is a 2-year old project.
I made it!!! thank you guys! *install .net framework 4.7 *code for app.config &lt;System.Windows.Forms.ApplicationConfigurationSection&gt; &lt;add key="DpiAwareness" value="PerMonitorV2" /&gt; &lt;add key="EnableWindowsFormsHighDpiAutoResizing" value="false" /&gt; &lt;/System.Windows.Forms.ApplicationConfigurationSection&gt; *and change the autoscalemode to dpi 
The "proper" and most flexible way would be for the library method to take an `IProgress&lt;T&gt;` object. That way it is completely decoupled from the UI logic. The UI could then create a [`Progress&lt;T&gt;`](https://msdn.microsoft.com/en-us/library/hh193692.aspx) object that updates the label or progress bar or whatever. `Progress&lt;T&gt;` will also correctly handle things in multi-threaded contexts.
Read all StackOverflow answers and solve the problem. Hopefully, tomorrow in office it will run well too. Or else, I'll start copy paste to WPF. Thank you again!
IMO there is no reason to ever use `BackgroundWorker` anymore. Async/await and `Task.Run()` if required are more capable and much easier to work with.
Yes, agreed. Just referenced backgroundworker because I think it's in the winforms toolbox.
Because it's expected to use the same type as parameters without overcomplicating them also with type conversion. Btw, double is not decimal.
Because a Double can contain significantly larger values than an integer, you can't cast a Double to an Int without risking overflow. There's no reason for such simple functions to add such risk.
Neither `int` nor `long` could represent the full (integer) range of a `double`.
Ceiling gives you the next integer, Floor gives you the previous integer. 7.03 would give you 8 with Ceiling and 7 with Floor. They return doubles because there's no such thing as return type overloading, and double is the standard type used in most of the math namespace. People wouldn't like it if they had to convert from an int back to a double to pass it into another math method. Your best bet is to make your own method that wraps a call to Ceiling and Floor with a integer conversion and use that. 
Events. Add what ever custom events are required to the user control. Attach event handlers from the consuming form. 
only you can decide on that. I usually don't know what the hell I was tryng to do 6 months ago if I was beng too clever. Take a look at the code and if it works and you still know what's going on then sure, reuse it.
I made this little project to test of the approach. I would love any comments on it. https://github.com/RudiHansen/TestProgressForm 
&gt; People wouldn't like it if they had to convert from an int back to a double to pass it into another math method. No. There is no reason you'd ever have to do this. Int implicitly converts to double.
For instance, `double d = long.MaxValue * 2.5;` does not overflow.
As a guess... DLR?
I don't know. The DLR was created on top of CLR 2, so it clearly didn't need any additional features. But that's not to say that CLR 4 didn't add something anyways to make it work better. 
Just for further clarification: `long` has a range of about -9.2 * 10^18 to 9.2 * 10^18. `double` has a range that runs from 1.7 * 10^308 to 1.7 * 10^308. Squeezing a range that wide into an integer would take 1025 bits. The other weird wrinkle to `double` that nobody's mentioned is that `double` (and `float`) are only approximate: `double` only guarantees 15 or 16 significant digits (and `float` only 7 or so), where a `long` can guarantee 20. This means that you could gain some illusionary precision from converting a double to an integer value, even if it fits in the space.
But to be fair at that point ceil and floor sort of breaks down and wont return correct values anymore. However, the double value would certainly be closer to the correct value for large values larger than 2^64 assuming we'd return a long. But the long would of course be correct between 2^53 and 2^64 where the double no longer can represent integers accurately. So I guess one could make an argument for both cases. However even so I'd prefer not converting back and forth to integers when doing floating point maths. Edit: I said it won't return correct values anymore which is wrong, it will, it will return identity which is right because we can only represent integers that high anyway. 
This MSDN blog post addresses your question: Async in 4.5: Enabling Progress and Cancellation in Async APIs https://blogs.msdn.microsoft.com/dotnet/2012/06/06/async-in-4-5-enabling-progress-and-cancellation-in-async-apis/ 
I just have a `int ToInt(this double @this) { ... }` extension method, which now after reading the other responses i am adding a check for overflows
Why have such an ugly extension method instead of just using a cast?
Ah, that makes sense. Didnt think of that! I better add an overflow check to my ToInt extension method... Thank you!
I definitely understand the criticism of an extension method in casting scenarios but for some reason i prefer them. I also have `public static TValue As&lt;TValue&gt;(this object @this) {...}` and `public static TValue To&lt;TValue&gt;(this object @this) {...}` methods because I prefer the syntax of the generic, plus my brain always realizes the need for a typecast after I've typed the identifier, so this way i dont need to go back and wrap stuff in parenthesis which i find a little messy anyways. I'd understand why other developers wouldnt like any of this tomfoolery though. 
&gt; I want a single sign-on implementation, it is cross platform, cross domain and preferably cross-browser (but this is optional, and I don't even know if this is possible). Azure offers Identity Services with SSO. Besides that you could use a federation gateway for multiple Identity Providers such as Google, Facebook, etc. If you want to bootstrap your own, I would use * OpenID Connect * Implicit Flow * ASP.NET Core * OpenIddict, IdentityServer or the new (but unfinished) IdentityServices. * Use a Micro Service for the Authorization Server (decouple from your Resource Servers) Cross-Tab is possible, but not Cross-Browser (it can be done with some kind of middleware, but it is difficult and error prone) 
Honestly I think the intuitive expectation of consistency in data type would be the biggest reasons for this.
Why double can't accurately represent integers over 2^53?
Well clearly its less than 2^64 because we only have 64 bits and we can represent non integers as well. Actually we use 52 bits of mantissa plus implicit one to represent the significant. Im on mobile now but I can maybe explain it a bit better later if you wish. 
It's not exactly the same, but you could do `x as Foo` in some cases to do what you're looking for without adding new methods. The behavior is different, in that it only works with reference types, and a conversion failure will give null instead of throwing. Still though, if it suits your needs, I think it looks even cleaner than your extension method.
&gt; Just referenced backgroundworker because I think it's in the winforms toolbox. It was the last time I did stuff with WinForms, which was admittedly a few years ago.
As long as the double not bigger than the max value of an int (which can happen)
I don't think this is something that you can accomplish in a simple program. It's been a while since I looked into this, I mean, I've learned to program with C# and a bunch of other languages since the last time I looked into this but I'm still fairly certain that you can't just up and change the icon, even if you're making a program for that purpose. Now, I don't know if you know how to program in C#, or in any language for that matter, you're giving off the impression you can't so I'm going to assume that you can't. Making this into a program isn't going to do anything that you couldn't have done yourself previously, really, it's just going to make it easier to do said thing. I'll offer an easier, maybe not as satisfying, alternative, one that I was using when I was super-obsessed with making everything on my computer look a certain way, and that's to create shortcuts on your desktop, and give them a custom icon instead. Keep in mind that regardless of which method you end up using, you're gonna need to have ico files ready, you won't just be able to put in any image. They have to be in the right format.
https://github.com/resourcelib/resourcelib
Sounds like you want to cheat.
Why would you write your own? Just use **Convert.ToInt32** https://msdn.microsoft.com/en-us/library/ffdk7eyz.aspx
Let me first says i know how to code in VB.net yeah i know that nothing but you can't just say i don't know if you can code in any language but i'm trying to learn C# i'm not that kinda person who goes to school and learns everything about coding and i haven't coded in C# in years so i forgot pretty everything and i have coded a icon changer in VB but trying to learn how to code icon changer in C# its like impossible when there nothing too go off of or people just recommending to use others tools instead of coding one. 
I use a string extension method .HasValue() that just calls String.IsNullOrEmpty because it's so much easier imo. Maybe his extension method just calls Convert.ToInt32 or Int32.Parse?
Just write a powershell script to change the icons to app shortcuts. Example script: https://blogs.technet.microsoft.com/heyscriptingguy/2005/08/12/how-can-i-change-the-icon-for-an-existing-shortcut/ (And of course I assume you know anyone can already change the icon by right clicking on Properties for a shortcut and clicking the "Change Icon" button.) If you're talking about changing the icon in the exe itself, then you would have to alter its resources. I wouldn't recommend that for several reasons, but mostly because it would invalidate the exe if signed.
Sorry , I'm a bit confused about what you're trying to do You don't usually give users the option to change the icon of your app - its part of your branding. If they want to, they can make a shortcut , set it in windows by changing the properties, or find a tool to do it I guess...I've never wanted to so who knows. Do you want to change the icon of your own program before you publish it? Is it an app (desktop or mobile) or a website? (you mentioned finding tutorials about changing forum icons....web icons are totally different to application icons) Or are you trying to code an app that let's you change the icons for OTHER programs? And you want help on how to actually do that functionality?
Because float-to-int and int-to-float conversions are slow, and often most of the time you'll still want to use the resultant value with other floating point values, so it doesn't force you to make two conversions you don't need in those cases.
It does, Int32.Parse specificly
It just wraps Int32.Parse, I just prefer the type casting after the identifier
This probably doesn't help too much but if you can do it in VB you can definitely do it in C#; all the .NET languages compile down into MSIL so there's definitely a way to do it, just not sure what you're stuck on. But you could probably search up "How to do &lt;vb thing that changes icon&gt; in C#" and get an answer.
&gt; As long as the double not bigger than the max value of an int (which can happen) You're thinking of the reverse conversion to &gt; Int implicitly converts to double 
&gt; it only works with reference types Entire thread is about value types..
I'm trying to code an app that lets you change the icons for others programs and it's a desktop app and I need help coding that function :) 
Thanks! ill check it out
Oops. Oh yeah.
It's such a classic response for the internet. "Have you tried moving your entire code base to an entirely different technology"? Some of us live in reality and don't always have the option. Kudos for giving the correct response to OP
There's one on Pluralsight that shows best practices for Windows Forms development that builds a podcast app. Maybe not your thing but could be worth a look. If you google "Free Pluralsight" there's a way to get three months access for free. Make use of that too as there's a wealth of resources there. Happy hunting and if you find any other projects please post them here.
I've always wondered, thanks 
You mean something like this: https://gist.github.com/bendangelo/093edb33c2e844c5c73a?
I wasn't able to build the .sln as the app.config file was not included, but it looks pretty well set up. It looks like you have a good grasp on OOP judging by the way each class models once component of the game and you have properties, constructors, and methods all neatly written.
- Is https://github.com/zoroned/Reviews/blob/master/TicTacToe/PlayerHasWonExtension.cs needed? - Nothing seems to be stopping a player from being OccupationType.Empty - I would move the has won code checking to be inside the Game class - Tests? Good stuff! Thoughts for future features: - Separate the game code from the UI, so Game/Player/etc can be used with a console app, GUI app, web app, etc. - Make it flexible enough to work with any size board. - Build on top of it to make an Ultimate TTT game (http://bejofo.net/ttt)
Typically, most of what you learn in computer science (although useful to know) isn't very applicable in your day-to-day as a programmer. I happened to write a linked list implementation yesterday, but it's the first time I've done so in two or three years. Working in C# tends to abstract away a lot of those concerns. My recommendation is to start with a project that interests you, something that you might find useful. If you can get excited about it, all the better! I've done a stock portfolio app where I could keep track of investments and then pull the stock price every day (showcasing database design, web development, and API design). That tied my interests with something useful that I needed. One of my favorite CS assignments in college was a movie theater application. It was a simple command line application that allowed users to list movies, showing times, and some other details that were loaded out of a flat-file database. It showed the basics of file I/O, parsing, data structures, and command line UX.
&gt; Why is this the case? do Floor and Ceiling ever return a double with anything after the decimal point? Is this the line you have a problem with? Doubles have decimal points. OP wasn't claiming the double and decimal types are equivalent. Don't be pedantic.
Go after solving business problems. Even if it solves an existing problem. If you don't want to do that, you can simply write programs that visualize the data structure and has controls to change the data structure (reverse the list/tree/queue, add a node, remove a node etc.) Here's some business problem flavors for these basic data structures: - Linked list: Route planner application, allows removal of any of the list nodes, or reverse the whole list. Take addresses or GPS coordinates. You may as well use Google's Maps API for this to show you can use APIs. - Queues: Customer Service queue. You see these in mobile and cable brick and mortar locations. You sign in and you're put into the queue. Obvious business problem because it exists. Make a view for the employees that shows the state of the queue(s). - Trees: Here's a bunch: https://stackoverflow.com/questions/577659/real-world-examples-of-tree-structures Google "real world &lt;data structure&gt; usage" too
- My thought process initially put that logic into a class called GameWonChecker. It was just a class whose responsibility was to see if a player had won a game. But I finally settled on just making it an extension of Player, since Player.HasWon() just seems to make a ton of sense. It also lets me completely isolate that logic as to not bloat the Player class. Though as I type this, what makes that class so special compared to TakeTurn()? - That's a good point. Without that, it's sort of like an anemic model with some methods on it. - Similar to the first point. I was really torn on where it should go. Is it the players responsibily? The board? Maybe it would be better served as a GameWonChecker and have the Game class call it. - I started off doing TDD, but didn't want to muddle the question with you guys having to look at my tests. I was mostly wanted to see if there were any huge red flags in terms of design.
Thanks!
A brief explanation or comments on what you are trying to do would be very helpful......
The movie theater application (Or similar) isn't a bad idea. It's small enough to be done relatively quickly and not so complex where it'll take a while. Otherwise, a larger project will have to wait. I want to make an ASP.NET support ticket system (like in IT Help Desk), but that'll take too much time and won't be done by the upcoming career fairs.
I've solved a similar problem in the following way: **Get an online repo** Websites like GitHub provide you with a centralized place to upload code and be able to link it back to you when needed. You can also create a static site that provides some info about yourself that can easily be a goto link when talking to people. **Find a source of problems** Find problems that can be answered within your time frame. In all reality, people want to know HOW you think and WHY you solved a problem a certain way more so than the solution itself. With any trade, if you can do something, you should be able to explain the why behind it. In this case, since you're looking for smaller scale questions with equality as small solutions, try /r/dailyprogrammer. Start with the easy ones then depending on your schedule mix it up. **Post/Commit Solutions** Make the code public and sell your train of thought, your passion, your ability to problem solve (just don't sound douchy in the process). Focus on the HOW and WHY.
&gt; `public static TValue To&lt;TValue&gt;(this object @this) {...}` Is this meant to be a replacement for a cast expression, like `(int)x`? You're boxing every value type you want to convert. 
1) get a github 2) post your best projects on github publicly 3) link to github on your social media, linkedin, and even business cards, if you make them. IMHO find useful applications or programs to make, and build, publish, and polish them. They can even be simple, if you want. From my experience employers love that. If there are programs you would actually find useful yourself, i'd suggest you focus on making those and publish/polish them. It's great motivation, for sure. Make them open source, put that code on your github, and if it gets enough attention, consider making a small static website to display and introduce it. also, if you don't have gitub or some version control that allows you to show that code to the world (without letting them change the code, unless you want) GET IT. I've known a number of people to get a job based solely on the content on their github. It's a serious, highly effective tool for getting a job, but only if you post relevant, quality work for potential employers to see.
Yes one of these functions as a standard `as` nullable cast. These extension methods also function as ReSharper assertion methods with ContractAnnotations, and i have actually 2 methods with `where TValue : class` and `where TValue : struct` which have different cast and exception behaviors defined for reference and value types. It might not be standard practice but i prefer it, and as a sole developer i can get away with a bit more based on personal preferences than i could on a large team :)
A ticket system isn't all that bad. You could make it in a day. Boot up visual studio, get a database running and use bootstrap for the front end to be pretty. There are even visual studio starter templates to get your website up quickly. You can use the mvc framework. I'm sure there are even step by step tutorials for this and quite a couple projects on GitHub to learn from. You need a few core items. A database, a way to submit items to the database and a way to display the data. You can make it easy and just have two fields of data, a ticket ID and a key for the problem. It's a proof of concept, you can show your potential employers what you do with an online webpage they can view on their phone and computer and it's a great basic framework for you to expand later if you ever need it. A hot tip: whatever you want to be programming, program it now and take contracts that help you build modules to program that you can reuse later. Always program modularly. Once you start programming for someone else for cash, it's not nearly as enjoyable and you won't be doing it at night for your personal projects as frequently as you like 
This tutorial series was posted the other day - [WPF UI Programming C#](https://www.youtube.com/playlist?list=PLrW43fNmjaQVYF4zgsD0oL9Iv6u23PI6M). Goes through from basic topics to more advanced while building a chat app. Only watched a couple of videos so far but seems decent.
a lot of employers really like open source involvement, either build something of your own, like a library or a simple app, or submit some pull requests to public projects, i know i really look for this when vetting applicants as it shows a passion for development especially if you are doing it on your own time but make sure you are writing quality code and know your codebase as you will likely be asked in interviews for reasons you did things a certain way, know the answers to these questions really looks good on you in an interview 
i personally have on average about 20 active repos at any given time on my github outside of my private personal / work repos 
The idea I have for a ticket system is far more complex. I also want to make it an LDAP login system. Ticket tracking and reporting could take a while.
I do have a github, though it's annoyingly empty at the moment. This is why I'm looking for project ideas, to add to that. Once I have a decent base of smaller projects that don't exactly make an actual product, I will start working on the larger system (the ticket system above). I just want to get some actual stuff on my github before getting into the bigger projects.
Top tier advice for not only programmers but any profession that relies on critical thinking for design 
I have thought about doing a library of some sort, though I've always drawn short of what to make. Perhaps as I get moving along in C# I will get some ideas.
This is why I'm looking for ideas, anything I can do in a shorter amount of time as to fill my github. After I get a decent base I will start looking at more comprehensive projects.
One more thought, would you mind sharing your github? I'd be curious to see how you have it organized to show potential employers.
NOTE: if you don't know SQL, you need to learn it, and you need to learn how to connect to SQL databases from all of the languages you claim to know *thoroughly*, because that's what employers will expect of you well I like what others have said, "solve business problems, even if they have already been solved". There are plenty of small projects that solve actual business problems, small programs that solve one issue or have one main function, for example. One idea is APIs. It's a super broad term, but basically as a programmer, an API can connect multiple programs or ecosystems together, it can make accessing and using a programming module/package easier, etc. one project that I have on the back-burner at the moment is a MySQL eCommerce database and API. It isn't exactly a small project, but it's an extension of a class I took, so it's at least on the horizon for me. It is basically a set of SQL queries and functions that you would be able to use and implement and connect to the language of your choice. It would make it easier to ensure database security while simplifying how you connect to the database. That way, when you use the API in your own systems, you don't have to do that from the ground up, because the API has already solved much of the logic for you. a similar PHP-based idea would be a PHP-MySQL API that makes it easy to connect to and use a MySQL-based Database from PHP. It would make connecting to databases easy, ensure robust security, while providing an easy and modular interface. For example, PHP has a way to represent multiple(an unknown quantity) function parameters with a single variable. This way, you can perform a SQL SELECT statement from any table and any number of columns from those tables in this way: function sql_select_stmt(...$columns, $table){ //code here SELECT $columns[0], $columns[1], $columns[2], $column[n] FROM $table } this way you can use this one PHP function a SELECT on any columns from any table. Of course if you wanted to use a WHERE clause or any other modifier after the table name, you would need to include additional parameters, but this is the idea behind making a modular PHP-database API. 
Build an anonymous type or tuple, probably, or build a custom type for the triplet, if you need to return it outside your current context. Dictionary&lt;Key, List&lt;Data&gt;&gt; foo = /* whatever */; var result = foo.Select(x =&gt; ( key: x.Key, maxZ: x.Value.Where(y =&gt; y.Kind == my_kind).Max(y =&gt; y.Z), minZ: x.Value.Where(y =&gt; y.Kind == my_kind).Min(y =&gt; y.Z) )); Unless you're set on query syntax, in which case you can try something like var result = from x in foo select ( key: x.Key, maxZ: (from y in x.Value where y.Kind == my_kind select y.Z).Max(), minZ: (from y in x.Value where y.Kind == my_kind select y.Z).Min() ); If you don't mind that it's grossly inefficient, you could SelectMany() to get a tuple (or you could build new KeyValuePairs; doesn't really matter) of the key and each Data of the right Kind, then regroup Z by the key value and select back the same anonymous type from x in foo from y in x.Value where y.Kind = my_kind select (k: x.Key, v: y.Z) into x group x.v by x.k into g select (key: g.Key, maxZ: g.Max(), minZ: g.Min()) But I can't see that being worth the trouble if you already have the dictionary for grouping by key. (Now, if you *don't* have the dictionary pre-built, you can bypass building it from your source of Data objects by doing more or less what I just described, just as long as you have a function to map Data -&gt; Key: from data is DataSource where data.Kind = my_kind group data.Z by KeySelection(data) into g select (key: g.Key, maxZ: g.Max(), minZ: g.Min()) )
https://github.com/clmcgrath
Webassembly is very early days. It's certainly something to keep an eye on, at some point you'll blink and webassembly based stuff will be everywhere and it's going to be exciting and crazy and insane... At least I hope.. But it's not what anyone's willing to base production code on anytime soon As for the remainder, it's hard to say as I'm not familiar with granular so I dunno. But things like webforms and razor did their best to try and hide the fact that there's a client and a server, and I found it was a very very leaky abstraction. What I love about angular1 was its a proper framework with tonnes of bells and whistles that at no point tried to pretend it was really a desktop app. It wasn't like a Java applet or a silverlight monstrosity it was a great app framework that made me see the power of the clientside browser. Angular2 is a totally different beast, calling it angular feels more like a branding exercise, but basically the same feels. I like .Net doing the backend rest api, but I really like the clientside being in tune with itself, if that makes any sense
I am pretty sure he was talking about converting the returned variable - while you would want to use Floor or Ceiling on an int? There is no problem that way - but if the Floor method returns an int (the original question) then there could be overflow problems (as the passed double could be bigger than int.maxvalue while the reverse obviously never a problem - but again, passing an int to the Floor makes no sense.)
&gt; Supposedly Granular can enable you to transpile .Net, WPF apps to javascript. Supposedly. ;-) &gt; WPF is uses the original MVVM architecture. MVVM was an after-thought on top of WPF. &gt; And then there's WebAssembly but I have no idea how far along progress is in that area for anything .Net related. Web Assembly is still under development. It's still not done. And when it's done it will depend on browser support whether you can use it for your purpose or not. &gt; Immediately, I'm thinking why aren't more people doing this? There are a couple of reasons I can think of regarding Granular: - Granular is still under development. I doubt it has many features as of now. You wouldn't use something that is under development for production work. - Granular is not very well supported. Who knows this framework? Nearly no one. With Angular you have a huge source of information available, plenty of users who use it. - Granular is developed by a single person, but Angular is developed by Google - a huge company with immense resources. - Granular is a risk. What if the framework is abandoned? It's still a fairly fresh project with an unforeseeable future. As for WebAssembly, it's safe to assume that usage will increase as soon as it's ready for production use.
Adding to all these,do not forget to (Begin)Invoke when manipulating the UI from a non-UI thread.
wow, this really makes the future of web development look exciting
God, I can't wait until this replaces the steaming pile that is JavaScript. I've been researching this a lot lately, and not having to use a zillion libraries to do things that would be simple in C# will be amazing. 
This really needs to be a common thing soon
That was... amazing.
I do not quite understand this code. He did not put in the code for the UploadAndProcessAsync method, but i tried this and the code does nothing it simply keeps running for ever it seems to be waiting for something from this method. Sorry this is above my understanding at this point. private Task&lt;int&gt; UploadAndProcessAsync(Image image) { System.Threading.Thread.Sleep(1000); Task&lt;int&gt; retVal = new Task&lt;int&gt;(() =&gt; { return 1; }); return retVal; }
This looks really good, I hope this actually becomes a thing.
That's all fine and dandy, but my point is you don't have to do it all at once in one sitting. Maybe you make a database that has a create button that you can make a ticket. Cool, step 1 , you can show that to employers and tell them about your future plans. Maybe a few weeks later you make a form field so you can put in notes about tickets. Awesome. You can show that off too . Maybe a few weeks later you put in your fancy ldap reporting, heck, maybe you even start with that feature. You need to start thinking about the modules involved and programming against thing, being able to breaks the project down into hundreds of little bite sized chunks. If you keep it in your head as " it can only be finished and ready when these 100 features are usable and it's not worth anything until then" your gonna do yourself some damage. Think modularly, it's how programs work, it's how you design them, if you program that way it will save you time and give you reusability. Programmed and documented a great module for ldap login for yourself ? Great! Now you'll never have to do it again in your life, you have that tool in your belt ready to use, just like a mechanic has a wrench. He doesn't need to build the wrench from scratch every time he needs to use it and he doesn't have to have the entire toolbox just to have the wrench . He also doesn't leave the wrench at wherever project he was working in, he takes it with him through life. 
Surprisingly, I haven't thought about SQL connections much yet, but I definitely see your point. Perhaps I can make a couple programs that connect to a database and write a common connection app. I am trying to stay away from PHP though, as I don't want to get off track from my focus on C#. But I do definitely like the idea!
Scrum takes the approach of delivering early and deliver often. Like you I was searching for a project to do, I decided to write a cookbook website. Within 2 days it was running and being used. It has now migrated far from the original concept due to actually using it in its basic stages and realising my vision was wrong. I would say just start it, but unless your actually going to use the software there isn't a lot of point with this approach.
da faq is up with that font you use to code?
Exactly what I thought :)
Admittedly, that is one area that I struggle in and need to get under better control, so this is a good reminder. My idea of a ticket system is complex, but I need to learn to break things down into smaller parts that can work independently of each other.
What do you mean? Formatting, color scheme, anything else?
Really nice, I could have used this yesterday when I tried to learn how it all worked. I ended up using HttpClient and Newtonsoft for my .NET Core app. However, after just skimming though some parts of the post I saw this: &gt;"For the simplicity’s sake, I implemented it synchronously. Every HttpClient method is meant to be used asynchronously and SHOULD be used that way." This is something that frustrates me a lot as a newbie to C#. When people basically say "I did it the simple way, but you should do it some other way that I won't tell you how to do". It just makes me leave the page and go find another guide/tutorial that actually shows me the "proper" way of doing it. Just felt like pointing it out.
I was there (NDC Oslo). It was the only seminar where people applauded in the middle of the presentation. Very impressive stuff.
The vid seems to be showing js files 
Replace `methodCall().Result` with `await methodCall()`. That's about the only change, and really should have been done in the blog post already.
Maybe you didn't get to the right part of the video. It definitely shows c# in webassembly.
Hi Avambo, thanks for pointing this out. My main goal was to present the different options in a simplest way possible and not to burden the reader with details. In some of the future articles, I will present these libraries in more detail. Having said all that, I totally get your point, and since this was also meant for beginners I should have given the example more thought. You can see how the async implementation looks like here: http://rextester.com/discussion/XPKY90132/async-example-with-HttpClient Cheers
From what I understand, and what little I know from the conferences I've watched. I believe that you can compile WebAssembly directly from C#. A lot of browsers will soon support it like they do JavaScript at the moment. The idea is that it will be a sort of lower level language that can be compiled from any other language with the purpose of enhanced performance and flexibility for devs. I could, for example, code an in-browser application in C# that compiles to WebAssembly and therefore will work on any browser with WA support. It won't matter if the device running it is a Mac, Linux or Windows since WA is so low level and only dependent on the browser. Edit: I should clarify by stating I haven't watched this particular video yet, I just hopped through it to get an idea what it was about on the way to work. I'll probably watch it when I get home, it looks interesting.
I wasn't 100% certain how the icon was stored for an executable, so I created a hello world with and and without an Icon. It looks like near the begginnig of the file there is a value that indicates wheter the icon is a default Icon or if it is a custom icon. If it is a custom Icon then the icon is embedded directly into the executable. So to "Change" the Icon of an executable file... first you'll need to identify which *.exe files belong to the application you want to reset. This is nearly impossible without the user specifically selecting the files them selves. This is because I can have two files both named "XYZ.exe" and they could be completely unrelated. After that you'll have to determine whether the selected file is using the default icon or not... it seems that this shouldn't be *too* difficult, there certainly is a value indicating that... you'll just have to determine the best way to identify it. Then, if the icon was already a custom icon you'll have to determine the location in the binary that the icon is stored, then overwrite that data... you'll also have to ensure that if you over write the data with different sized icon that all the other offsets that point to items after the icon data are updated.... and this wouldn't simply be checking all the offsets prior to the icon data, but through the entire file because those offsets were calculated using a different size. If it is not already a custom icon you would have to insert the entire icon and also update all the offsets in the file. So... for an executable that already has a custom icon, where you replace the custom icon with a new custom icon that is the exact same size... it might not be *too* terribly difficult... but if the exe does not already contain an icon to overwrite or if the replacement icon is a different size then the original icon then you are going to have a long road... 
VS 2017 can import Swagger json files and create proxy objects just like soap wcf. 
Removed: Rule 6.
If you go to the github project referenced in the video, he uses DotNetAnywhere compliled into WebAssembly. I think the coolest part of this is that it can still fallback to js in browsers that don't support WebAssembly.
No C# 7.0?
I just don't like Monaco, looks like comicSans, use firaCode, it's a monospaced font with programming ligatures, it will turn your (=&gt; into →) (!= into ≠)
You could look at WiseJ or cshtml5 if you have a budget or something like Bridge.net
Definitely a plus, I have no idea why people still use IE11, but a hell of a lot of my end users insist on using it.
I'm going to try this out. Anyone else using it?
REALLY. REALLY. AWESOME.
So I may be wrong, but since VS 2015, the Community Edition, which is free, is available for small businesses with less than 5 users. That's should answer your question for C# licensing. You'll need to check in the individual license agreements for any 3rd party dependencies, as some of them may specifically say something like "this software is free, if the software it's included in is free", thus meaning you may need to pay a licensing fee in order to sell your software it's included in. You'll probably also want to Copyright/Trademark the software name, but how you do that, I don't know. EDIT: I totally misunderstood the question.
Now that you mentioned it, it does look a bit strange, switched it to Consolas. Now it's similar to what VS uses. Thanks. Still looking for a better color scheme, this is the best I could do with Crayon WordPress plugin. Parsing is a bit off. 
Are you wanting to produce serials for the program that unlock core functions of your program? Ie. One that Adobe, Camtasia, Sony Vegas, etc use?
Exactly.
This is one of the few things that made me gasp. The dev is amazing.
Didn't mono just recently supported 7.0? They are still being compatible with mono, so it will takes some time. 
AFAIK, no. I'm hope that this update includes whatever backend support/changes such that Unity can keep up to date on C# releases faster. But hey, it's nice to _at least_ have covariance/contravariance finally. Hopefully we don't have to wait another **7 years** for them to be added to Unity.
much better :)
I use [Rhino Licensing](https://github.com/ayende/rhino-licensing).
I was so happy that they included this in the 2017.1 but as always, Unity has disappointed me. I have switched the magical switch to enable the experimental 4.6 .net and... when I hit play, nothing happens. No crash, no console errors. Play button just does not work. 
Project owner here... PanoramicData.LicenceMagic is free and available as a nuget package. I'd be happy to help you set it up. PM me if this is of interest.
That sucks. :( Does it work for you if you make a new/blank project?
thanks
My preference is [AutoRest](https://github.com/Azure/autorest). Easy to install from NuGet and integrate into build process.
We use [LogicNP CryptoLicensing for .Net](http://www.ssware.com/), and are pretty happy with it. 
Here's hoping updated garbage collection comes in at some point!
I just checked this out, and on my work desktop (which is limited to 32 bits - don't ask) it runs appteciably better than either the built in MS profiler, or the jet brains tools. I'll continue to put it through it's paces and report back, but thanks for sharing!
https://stackoverflow.com/questions/599837/how-to-generate-and-validate-a-software-license-key https://stackoverflow.com/questions/453030/how-can-i-create-a-product-key-for-my-c-sharp-application?noredirect=1&amp;lq=1 
I would just ask them general questions about those topics rather then specific questions relating to "Modern" c#... first, the differences are so minor that any decent c sharp programmer can pick up the new features easily, secondly schools may be behind the latest versions or the programmer may have completed school before c# 7 and worked at a job that didn't utilize it for legacy reasons. I would ask them a series of questions relating to programming in general, followed by a series of questions about c#, then a series of questions about how they keep up with new development practices and technologies. If they tell you about the the new c# stuff then it is apparent that they do follow .net news and developments...
Not 100% true. Just had swagger file that VS2017 could not handle. It worked fine with NSwag and swagger-codegen though.
You are so right! In many cases "I did it the simple way" means that the other way is not simple at all and could be even big pain in the rear or may not even work without some non-trivial tweaks.
Thanks for the great explanation. The nested query and the anonymous type are what I wanted.
If it doesn't have to be general purpose, could you create a class for each object you want to store and then just use a List&lt;T&gt; to store a list of those objects? That gives you everything: light weight and strongly-typed access to properties. But it isn't general-purpose: you would have to create a class for each object you want to store.
I think that if developer is not fresh out of school then it is good to know if said developer is up to date and knows the new stuff. Not just something from 2007. I could be wrong on this though. 
What I am trying to store here are lines/records that need to be "conformed" before being converted into object models. Those object models are able to represent all the complicated business data relations. So it's really only an intermediate data type but with the !#?&amp;@ data format I am getting I need to change those tables quite a lot before the algorithm that creates the object models can do it's thing. EDIT: So for this use case it would be List&lt;Record / Line&gt;, but again without a wrapper around that collection they keys/column names would be contained in each object.
How many entries would normally be in the list? If it's only a few hundred to a few thousand, then memory usage due to repeating column names in each entry might not be a problem you have to worry about. You don't want to spend too much time optimizing an intermediate temporary representation of data unless you're going to have a TON of it. 
Ask them about their favourite: * unit test framework * source control system * dependency injection framework * extension methods they add to every project * nuget package * static code inspection * Visual Studio plugin * LINQ technique * issue management system * option: tabs vs spaces This will allow them to show personality, passion, opinion and knowledge. They are talking, not you. They are relaxed because there are no wrong answers and they feel listened to because everyone loves to be asked their opinion. If they are stumped by a question, their level of intellectual honesty and their response under pressure is revealed. If they are passionate about all, but their responses are diametrically opposite to house style, you know it would be a feiry, bad match. If you like them, hire them! 
True, it's such a generic solution it's hard to say and just in the process of making it recursively extendable (get 2 different data tables and merge on shared columns). I believe 100k at least is a requirement. EDIT: Max columns circa 30
This sounds fabulous, I'm going to play with it now. 
As the previous poster said sometimes it's best to ask generic questions and let them show off. E.g. If asked a generic question about modern c# features I would say the last thing I was looking at was .net core and entity frameworks in memory database for unit testing. Not the answer your looking for but it would highlight I know something, I'm not stuck in 2007 and could organically lead to a question about core, or ef or unit testing. If you asked me about a specific new feature all you would get is 'yeah I read that was being introduced, I haven't had time to look at it'
Good points!
Many of these items are somewhat company-dependent like static code inspection, issue management or source control system. What did you mean by LINQ technique? I would not know what to say to this question =:O Tabs vs spaces... is it still a thing? ;) Good point about positions opposite to company style. It is obvious but I did not think about it. 
Readmond? Are you in Redmond?
I agree that it would be good to know... I just think it is much less important then solid programming knowledge/experience... Looking at, for instance https://blogs.msdn.microsoft.com/dotnet/2016/08/24/whats-new-in-csharp-7-0/ All the new features are basically syntactic sugar... everything that can be done the "new" way can be done in other ways, without any significant performance gain or loss. If I were talking to someone about... say OpenGL, it would be important to know if they were more familiar with the old style or the new style because the styles are fundamentally different and can be legitimately confusing when switching from the old style to the new style... but it takes like 10 seconds to teach someone that String s=String.Format("My name is {0}", name); is the equivalent of Console.WriteLine($"My name is {name}"); So, like I said... I would ask them what they do to keep themselves technically relevant... not "Did you research this specific thing?". No matter who you hire... if they are fresh out of school, if there last job was working with c# 3.5, or even if they just finished a project using cutting edge tools they will take a week to a month or so to get used to your in house coding style... and personally, i feel like most of the newest c# features are nothing more then changes to coding style. Especially since c# 7 is new now, yes... but it will be obsolete in the future and there are plenty of skills and architectures and design patterns to learn with or without c# 7
No.
Sometimes syntactic sugar means difference between one week of hard work vs couple of days. This is based on my own experience. I did not know LINQ at first and all data queries that I did were loops in loops in loops. Lots of code that was not very clear, error-prone and time consuming to write and maintain. Then I found LINQ. My mind was blown.
When you're done with it you can be my mentor. I am planning on building a .net Core MVC blog. :)
alright :) seems good
Electron is becoming the standard for desktop GUI's, and its alot better.
Make your program server dependant put as much logic as you can in it and require the key in all requests and limit it to 1 session per key
To prevent cracking and reverse engineering 
Legal reasons impeding technology are the worst
PM'd
Candidates should have to earn a sit down interview. Before you ever interview them, make them code! Come up with a small project that can be implemented in a day or two and stress that they are to use best practices. Then have them email the solution to an email address that is only used for receiving applicant solutions. Nothing will tell you more than seeing how they code and think. If you like their solution then you can schedule a sit-down interview which at that point is more about discovering what their personality is like vs trying to gauge their coding skills thru verbal conversation. Things to keep in mind - 1) this will require work on your end - but hey you get out of it what you put into it and once it's done it's good for all eternity. Make the project something very generic and not specific to your business. For example, build a very simple bug tracking app. Also provide them with a requirements document. Be very specific on what features they need to implement and what their UI should look like. 2) Dog food your approach. Can you build this very simple bug tracking app in a day or two? Don't just guess that you can. Actually attempt the challenge! Have a couple of guys on your team try to do it. And then afterwards get together and discuss and refine the challenge. 3) Be cognizant of peoples time. They may not have the time until the weekend (or following weekend if they already have plans for upcoming weekend) so communicate to the recruiters/HR that they should not release the requirements to the applicant until he/she has set aside the time needed to complete the task. 4) Have the team review the solutions so that you can get multiple points of view cause believe it or not - gasp - the manager is not always right! I've had to do this before and I was actually quite impressed that the manager took this approach (and yes I was offered the job). It also saves you time as only candidates who are passionate about coding will embrace a challenge like this and those are the applicants you want. Of course still ask technical questions in the sit-down if you want but now you also have actual code to go along with their verbal answers. You can even discuss why they took a certain approach in their solution. And remember some people are just not good at verbally expressing themselves but that doesn't mean they aren't sharp! Good luck!
Linq isn't sugar. I mean, the query syntax is, but Linq itself isn't.
Vlc with vlc.dotnet
Explain what LINQ is and how it's used. Shows good knowledge of how to utilize one of .net's best features (LINQ) on databases to streamline a lot of stuff that used to be more painful to code. For the first 3, it's more about any experiences with frameworks for those topics. If they can talk about Jira, GitHub, V1 etc and describe a bit their backlog uptake process, you know they have real experience. For unit tests, I just want to hear about asserting, decorators and either MS Unit Test Framework or whatever they've used to see code coverage of unit tests.
I wonder how it compares to Prefix. I'll give it a shot.
If you make every first level candidate do this... that's ridiculous. Maybe after a solid phone interview or something, but even then, that seems extreme. I assume candidates have some code on display somewhere in their resumé, if not, this might be a good approach. edit: for fresh out of school grads, this might be a good idea. I wouldn't want to make a senior with 5+ years of experience do this.
Still an important answer even if you misunderstood the question. 
Just out of curiosity, what does the app do?
He allows support for old serial based vision mixers to control modern software.
I'm always down to help. 
I'd like to get away from asking about somewhat irrelevant internals. Explaining how stuff works is a skill in itself and I think that it is possible to find people who can explain well but cannot do much. 
Until they actually try it
Hire a lawyer to write you a really strong license agreement. It'll keep honest people honest. 
I would have to be desperate to go through such process. 
I would just try something conversational on the topics you feel are of interest for the job you are hiring for. "What do you know about .net core?" or "What do you think of [new feature] in C# 7?" and riff with the candidate. I wouldn't be concerned if they are not up to date as someone's desire to follow the latest C# news isn't a reflection of their ability as a developer. Some of the best developers I've worked with weren't necessarily passionate about programming. They made sure they knew everything they needed for the job, but beyond that weren't concerned about the latest developments in...development. I've had the best results having a 10-15 minute conversation with candidates to gauge their communication skills and learn about their personality, followed by as much time as possible doing a coding exercise. I have candidates create an engine for some common game like Poker, Blackjack, etc. These often demonstrate most of the qualities I want to know about a developer: how they organize code, process of how they write code (test first, outline, pseudo code, whatever), problem solving skills, and how they handle disagreement/criticism by playing devil's advocate through questioning their approach. The one thing I never do is ask any candidate to define terms or explain algorithms. We live in the internet age, anyone can search for that shit and find countless tutorials and explanations on just about anything. So instead I will try to gauge someone's ability to find solutions to problems. If you interview a candidate who doesn't know what .net core is you could ask them to find information about it, why is it a thing and what does it accomplish? See where they search, what catches their eye, and what type of information they find they feel is useful. Or say you use Kendo UI, but the candidate isn't familiar, ask them to find out what kendo's charting capabilities are and if you can put a trend line in a scatter plot. You know what qualities and traits you believe make a good developer, structure your interviews in a way that allows candidates to demonstrate those qualities and traits.
C# is free and .net core runs on Linux and is open source. Same goes for visual studio Code
As a C# developer who did a Node.js project (and loved it), I have a few thoughts. I'd put myself in the "advanced" C# camp. On one of our newer projects, the technical lead decided to use Node. I didn't agree with the decision until I saw how fast I could develop. The Node ecosystem is vast, discoverable, and of really high quality compared to a lot of what I see in C#. I was pulling in complex components that just worked^tm. That's more than I can say for the likes of ASP.NET, where magic abounds. Now, for the bad side--maintenance. JavaScript is a weakly-typed language, which led to lots of bugs (especially around data access) that could creep in. The Node debugger wasn't particularly strong, especially with faux-async code (using generator functions). The lack of a good IDE for JavaScript also meant that tasks like refactoring were much more dangerous than they had to be. Once you use Visual Studio, I don't know how you go back to a text editor. Even with plugins, Atom was never a tenth of the help VS is. Compare that to C#, where maintaining code is aided by the compiler and type system. One of my biggest complaints with Node, beyond the lack of tooling, is that it is a single-threaded event loop. While you can certainly get phenomenal performance out of it for I/O-bound tasks, it will never be the go-to platform for anything that needs compute-bound performance. Compare that to C#, where you can use something like `Parallel.For` to run as many threads as your CPU can comfortably handle. All of this is to say that there is a lot of benefit to learning to C#, even if you don't use it very often. It is another tool in your tool belt and will force you to think in a different way. As a developer, being able to reframe a problem is invaluable. I don't use Node anymore now that I've moved on to other tasks, and I'm not likely to need it soon--but if I thought I had a great fit, I'd use it without hesitation. Some of the Node concepts I've seen, however, has caused me to re-evaluate my assumptions about some C# defaults (for instance, I much prefer Node.js-style NancyFx over the go-to ASP.NET Web API framework).
&gt; Tabs vs spaces... is it still a thing? ;) Yes, unfortunately some malcontents *still* insist on using spaces, even though it's 2017! ;)
Isn't JavaScript OOP too? Probably not as sophisticated as C# OOP, but still. I'm still a noob with JavaScript (from years of other OOP languages) which I needed to learn for work. I've initially heard a lot of good things about JavaScript and got interested because of the demand, but I don't really like it as much. Feels hackish because of the lack of datatypes, etc. Still amazing how a programming language that was created in just 10 days that was mostly used for browser alert scams in the 90s can do a lot of things today. 
Ever tried VS Code? I use it for js and ts stuff. https://code.visualstudio.com/docs/languages/javascript
Depends on your perspective I guess. IMO you would have to be desperate to not go thru this process. By letting the candidates know up front that this is the first step in the interview process you will weed out those who are not willing to accept the challenge. Desperation opens up the doors to all. But it's just a suggestion, if it doesn't work for you then go the traditional route.
&gt; for fresh out of school grads, this might be a good idea. I wouldn't want to make a senior with 5+ years of experience do this. Actually I was thinking the exact opposite. I wouldn't expect fresh out of school grads to be able to complete this challenge. Whereas a senior developer should be able to complete it easily. 
Although it is an OOP language, it uses prototypical inheritance instead of class-based inheritance (which is what most people assume OOP is). Same concept, just with a different implementation.
Have them live code in front of you for 10-20 minutes. I suggest a simple exercise (grab something from excerism.io ) with the unit tests already written but not the code. Try to stay away from frameworks (these test experience that can be learned in 2-3 weeks) The point isn't whether or not they finish it. The point is to let you get an idea what it's like to see them work. You'll know if you want to see more of it or if you need to part ways. There's a lot of information that is broadcast when you see people **doing** the work rather than **talking** about the work. 
&gt; I agree that it would be good to know... I just think it is much less important then solid programming knowledge/experience... I think this is something most people don't realize when interviewing. We have all had different experiences, but some of the best developers I've worked with weren't necessarily "passionate" about programming. They didn't eat/breathe/drink coding, it was just their profession. They made every effort to insure they could perform whatever task was asked of them, but outside of the office they pursued other passions rather than keeping up-to-date with the latest C# news. Conversely, the two most well read and well informed developers I've ever worked with are probably among the worst. They produced code that was buggy and often required a steep learning curve. But goddamnit if you ever wanted to know about any new topics in C# they could provide you links to 500 blogs and news articles. I'm not saying my experience is the norm, just that it's a trait that is way, way overvalued in the on-boarding process as it isn't really an indicator of anything beyond a passion for "programming".
The licensing aspect is actually the biggest hurdle to me distributing anything I made. I figured anything out there right now is cracked. Does this thing really work? I can't find too many people talking about it, but I want to find something in this thread that's good.
If you want OOP over JS, TypeScript is pretty great. I worked in C# for most of my career, and now do a lot of stuff in TypeScript in Node, and it's pretty fantastic.
What about TypeScript?
"The licensing aspect is actually the biggest hurdle to me distributing anything I made." Right? Fucking nightmare.
What legal reasons? I don't see why Unity's use of a newer version of Mono would create legal issues where using an older version does not.
It's extremely easy to write inefficient LINQ code as well. Don't take it as the be-all-end-all to writing performant software.
You want the people that are good at explaining their solution and how they get there.
Yeah.. Litterally every DRM / licensing that has ever existed has been cracked.
Well staying away from php is a good idea. It sucks. 
&gt; Is there any reason to learn C# now other than an interest in OOP if I already know JavaScript? C# is a strictly typed language. Even if you are not going to use it, it is worth having practice in such environment. Languages like JavaScript would allow rapid development of relatively small project, but for big and huge projects you would need strong type system that would gives an extra protection to your code. Not to mention performance implications of JS code on big projects. (And by big I mean thousands of source code files). Having practiced with C# it would be relatively easy for you to start using any other similar-class language (be it Kotlin, Swift, Java, or even modern ADA). 
Meaning I can set breakpoints and run without having to use the console for firing and whatnot?
Without having direct access to the EventHandler, it becomes very awkward. You could put each EventHandler in a `Dictionary&lt;DescriptiveVariableType, EventHandler&lt;YourEventHandlerType&gt;&gt;` and have a method that takes `DescriptiveVariableType` to operate on said `EventHandler&lt;YourEventHandlerType&gt;&gt;`. Although this seems like an odd solution. Why can't you just expose the EventHandlers publicly?
Has anyone ever been asked to show code? [on job interviews] I've usually been asked to solve taskes, never been asked to show any code I've written before. Beyond hobby projects, that's all mostly covered by an NDA/contract/similar.
"Some of these are company dependent... " Yes, that's the point. If you don't use static code inspection or an issue management system, but they do (or vice versa), everyone's going to have a bad time. These questions also reveal how open you are to their ideas - remember they are (should be) interviewing you just as much as you are interviewing them. 
I think you should still elaborate on how good of a choice it would be to use those technologies. Im not an expert in them so I couldnt say for sure but I have read multiple times that .net core on Linux is a pain in the ass and therefore an unwise decision. This could of course have changed until now so correct me if Im wrong
I cant look past javascript as being a prototypical language. Berhaps I am biased here, but I cant even take NodeJS seriously.
I'm running a production system that consists of 40 .net core microservices all on Linux in AWS, so this is statement is absolutely false. Happy to elaborate further if necessary, but it's running extremely well for us. 
To expand your mind regarding programming, and you could achieve that with learning any other language. You are not forced to do it, though. It's just that every language has some good things that others don't. With JavaScript you can start stuff REALLY fast. With C# you have an awesome type checking compiler that will make your life easier when you're refactoring. C# is good to learn not for just being OOP. It's a modern strongly typed language much less hateable than other strongly typed langs. OOP, AOP, FOP are just labels. Every language is a world itself with some inclinations. In 2017, people still can't agree what's OOP. In college, teachers would sell OOP to us as a way of modeling classes around things that are entities. So if you want to model a Bank account, you create a class BankAccount with an attribute money and methods like withdraw and retrieve. That's a pretty cool concept. It can be implemented in js too, but not in a safe strongly typed way other languages do. Good question, btw. My advice is try having fun, try learning popular languages opposite to the ones you know.
Please study from one of the many c# books, courses, and even YouTube videos. There is an abundance of free and cheap resources out there. This is not the place for such basic and generic questions. You've received numerous recommendations in previous threads.
That sounds great actually. I know this might be uncalled for but since you got me interested, which librarys should I be getting in to if I want to build back ends with the functionalility of a nodejs app using express? (Simple Rest API) 
In C#/.NET Core you mean?
Yes, sorry for that
Microsoft has some good docs, you can start with this to get a feel for it. https://docs.microsoft.com/en-us/aspnet/core/tutorials/web-api-vsc We host all our of services in docker on Linux, so when the time comes for you to try that, here is a beginners guide https://dev.to/schwamster/docker-tutorial-with-for-aspnet-core Hopefully this gets you started. If you have more questions I can try to answer as well. 
One thing is being able to do something, a completely different one is how convenient is to do so. C# offers afaik the best tooling in the market, with dramatic improvements every year or so. 
Although it's built on the same technology, Prefix has a different purpose. They focus on specific areas of your code (and they do that very well imho). Prefix is enabled for all .NET applications on your machine. CodeTrack has 2 goals: the classic performance profiling, but also debugging and analyzing the flow of 1 specific application. (Still lots of upcoming features on the shelve btw). Make sure to let me know your findings, always happy with constructive feedback !
13/61 rate it as malicious. https://www.virustotal.com/en/file/15163d221b8e41fd7ac10c2a12e27c83478e89d4b87f67a4578e9aa8d2c1ea7e/analysis/1499846461/
Note: you won't be able to run Prefix simultaneously with CodeTrack (or any other profiler). So if you test it: make sure to temporarily disable Prefix first ;-)
These are false positives, It's just a hobby project so I don't have the time to try and get it white listed with all different antivirus companies. I tried contacting them, but they don't bother helping me out. Since this is a battle I can't win, I rather put my time in new features. Feel free to flag it as a false positive though, maybe that might help. Some blogposts explaining the issue (I'm not the only one with this issue): https://www.jitbit.com/alexblog/212-why-developers-hate-antiviruses/ http://blog.nirsoft.net/2009/05/17/antivirus-companies-cause-a-big-headache-to-small-developers/ 
What newer C# features will be useful in unity? I've never used it and I'm just curious.
 The community version of visual studio is also free
&gt;public Access Modifier: From where the Method can be accessed (Possible values: public/private/protected/*none*) public: accessible from anywhere private: accessible only inside class protected: accessible inside this class and inherited classes *none*: accessible only in the same namespace &gt;void / bool Return Type: What is returned from the method (Possible values: void/*any class*/*any struct*) void: returns nothing *anything else*: returns an object of that given type boolean: true/false 
thank you. 
You're a saint.
what do you mean? 
&gt; The community version of visual studio is also free And working with an IDE is so much more comfortable, especially one as great as VS is for C#
&gt; The lack of a good IDE for JavaScript WebStorm (IntelliJ) is amazing for JS stuff. If you use TS it only gets better as it understands the type hints.
Thanks to Dom from [C# Discord Group](https://discord.gg/0np62rq4o8GnQO9l), here is his solution: public class Box { public void A() { B(); } protected virtual void B() { Console.WriteLine("Box.B()"); } } public class SuperBox : Box { protected override void B() { Console.WriteLine("SuperBox.B()"); base.B(); } } class Program { static void Main(string[] args) { var b = new Box(); b.A(); Console.ReadLine(); var sb = new SuperBox(); sb.A(); Console.ReadLine(); } } I need to learn more careful about OOP then :(
Removed: Rule 4. See my comment here: https://www.reddit.com/r/csharp/comments/6m0omw/how_to_write_method_in_c/djxzsv9/
Removed: Rule 4. See my comment here: https://www.reddit.com/r/csharp/comments/6m0omw/how_to_write_method_in_c/djxzsv9/
I think I read somewhere, and someone correct me if I'm wrong (because I very well may be), there was a bit of a legal issue in that Unity was repurposing Mono for profit in their engine. I think they had some licensing agreement with Mono at the time to use it up to some version 2.6.x or something. At this point, Unity and Mono couldn't come to a licensing agreement. It could be related to the various acquisitions of Attachmate and the founding of Xamarin. Beyond that, there may have also been technical reasons hampering the adoption of later versions of Mono/.NET. They also started moving their focus to IL2CPP and HTML5 support around then or not long after that, so that may have put their backend scripting developers towards those features and put .NET framework updates on the backburner.
If Unity updates their various coroutine (and other) APIs to use `async`, I can imagine that feature could be very useful. Otherwise, most C# features at that point are language quality-of-life features. If it's useful for you, I think covariance/contravariance is nice. I think the null-propagating operator could work nice with their APIs too which can tend to return `null`.
You should already be able to do that if you install the Unity Tools extensions for Visual Studio. EDIT: That said, I have no idea if the debugger/tools work with this new feature as it's experimental. Maybe breakpoints work, maybe they don't. I haven't tested.
Is this open-source? This seems to use some mono cecil features I'd like to use in one project but can't find good documentation on
Not open source (maybe one day it will be). Feel free to use IlSpy to snoop around if you want. Or use CodeTrack on CodeTrack ;-) What features are you looking for ? Send me a mail (info is on the website), maybe I can help... 
I find that vast ecosystem less fun after trying to keep things up to date over several years. 
Get **any** C# beginners book and read it. They teach this kind of stuff in a properly structured manner.
I learned OOP in JavaScript as my first programming language (self taught). I then helped on a project that was C#. It was pretty easy transition and C# has a lot more to help create a OOP style. I think your biggest challenge is creating a project and building it as you may have to use new tools such as Visual Studio. That was probably the hardest part of learning to make C# applications for me. 
You should learn C# simply so that you have the chance to experience a language that has been competently designed.
If possible I would always prefer a collection of strongly typed objects both for performance and code-quality reasons, but if a completely flexible and memory efficient table-like collection is needed, I'd probably go with a custom implementation where every row is just a wrapper for an array of values.
How is your command bound in the XAML for each of these?
IIRC this is correct. At some point, Xamarin relicensed mono, forcing unity to keep the same version, until Microsoft acquired Xamarin and re-relicensed mono: http://www.mono-project.com/news/2016/03/31/mono-relicensed-mit/
 &lt;DataGridTemplateColumn&gt; &lt;DataGridTemplateColumn.CellTemplate&gt; &lt;DataTemplate&gt; &lt;Button Name="btnEdit" Style="{StaticResource GridActionButton}" Click="btnEdit_Click" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}, Path=DataContext.LoadContactCommand}" CommandParameter="{Binding Id}"&gt;Edit&lt;/Button&gt; &lt;/DataTemplate&gt; &lt;/DataGridTemplateColumn.CellTemplate&gt; &lt;/DataGridTemplateColumn&gt; This one loads the Contact details to the Edit form where the user can manipulate the values (and shows that form). Saving the updates is bound as follows: &lt;Button Name="btnSaveEdit" Command="{Binding UpdateContactCommand}" Click="btnSave_Click" Style="{StaticResource SaveButton}" Content="Save Contact" Margin="0,0,10,0" Width="100" /&gt; And that's probably where my problem is; the button doesn't have a command parameter... Although, does it need it? The Id is already already loaded with the rest of the object. Yup, adding the CommandParameter on the button fixed it. Nice when you go blind on your code right? Sometimes you just need another pair of eyes hey.
&gt; I can do pretty much everything C# can do with JavaScript No you can't. C# can run multi-threaded applications which is a pretty big deal.
The contents of the table will be converted to strongly typed objects, but it's the table contents I need to "fix" before the conversion algorithm takes over. An array for each line doesn't allow operations based on it's column name. But an associative array could fix that.
@codetrack4net - superb, thank-you, I've just used it quite happily to debug a performance issue and it was very pleasant and fast to use. Fantastic addition to my toolset! 
Anything you can come up with I can break in an hour using dnSpy, so don't even bother, it is a waste of your time. Except if you have "always on" drm where the logic or major functions happen on a server and you get passed the data. Still, the amount of time wasted could rather be used on the software features instead.
I thought you didn't want to have each row store the column names. You could still do this by resolving the column index through the table, something like class Table { List&lt;object[]&gt; _rows; Dictionary&lt;string, int&gt; _columnIndexes; public Row this [int rowIndex] =&gt; new Row(this, _rows[rowIndex]); internal int GetColumnIndex(string columnName) =&gt; _columnIndexes[columnName]; } struct Row { Table _table; object[] _values; public object this[string columnName] =&gt; _values[_table.GetColumnIndex(columnName)]; }
~~The second one doesn't have a command parameter bound?~~ Cool - glad it's sorted :)
1. Different object system/inheritance model: C# uses class inheritance instead of prototyping. The C# approach is *much* more common in other languages. 2. Strong, static typing vs weak, dynamic typing: kind of out-of-fashion at the moment, but it reduces or eliminates whole classes of error by finding them at compile time instead of at run time. 3. Lots of existing desktop and server code in C#. I'd say it's debatable whether NodeJS is really going to prosper in those spaces. 4. NodeJS's big selling point is the ability to have a monoglot development environment (possibly all the way back to the DB, if your DB is, say, MongoDB or something). But, WebAssembly is coming, and will enable monoglot development (outside the DB, anyway) in languages that aren't JavaScript. I don't know if JSON is going away anytime soon, but I don't know if I'd bet on JavaScript-the-language being *more* important in ten years than it is, now. 5. If you're still a novice/student developer, anyway, there's also no reason not to try out everything you can, as long as you have the time to spare. Consider also checking out an assembly language or two; a pure(r) functional language like Scheme, OCaml, Haskell, F#, etc; C and C++; and whatever else takes your fancy. It's useful to have multiple tools in the toolbox, even if you don't use them directly. 
Are you sure that the sink supports environment variables in the paths? You might just end up with a directory literally called "%PROGRAMDATA%" in the working directory.
Glad you like it! If you don't mind please share through twitter (or any other media) Good experiences really help spreading the word ;-)
Done ;-)
I would say that if you're interested in OOP, as a JS dev, look into Typescript, it's almost as if C# and Javascript were merged. Almost. It'll allow you to "brute force" things you know how to do in JS with JS while you're learning Typescript. I think it'll give you a good starting frame while staying in a relative comfort zone. Then if you want, go for C#. The more you learn, the more valuable you will look when you go for a job! (but also have projects to back up the talk when you do go for the job.)
Well, just to make sure it wasn't something like that, I reverted it back to an earlier version I had: `"log\\log-{Date}.txt"` I deployed it, ran it again using a known bug, and it didn't create a log directory or create it in the application directory. There is no log directory in the C drive either. It's mystifying. EDIT: I got the orginal idea from http://www.howtobuildsoftware.com/index.php/how-do/h48/windows-services-serilog-specify-directory-for-serilog-rolling-file-path
So odd. It's one of the best I've worked with.
Check that the process has access to write to that directory. If, for example, you're hosting the web service in IIS, the application pool user may not have permission to write to that directory. Try creating the log file in line with the deployed binary instead.
Did you enable error logging for Serilog by chance? That would show a permission error if there was one. Try: &gt; Serilog.Debugging.SelfLog.Enable(Console.Error); per https://github.com/serilog/serilog/wiki/Debugging-and-Diagnostics and you might get some more information.
That's what I use. The Node debugger is great, and even VS 2017 has a Node debugger.
Don't just learn C#. Learn other languages as well. You're going to severely limit your potential as a programmer if you don't expose yourself to more than JavaScript. 
I get that, but if I don't use C# after that I will just forget everything I learned, for the most part at least.
I wonder if they'll switch to .NET Core once it matures.
JavaScript has objects, which can hold functions, numbers, strings, and arrays. I would say that qualifies as OOP, but maybe it doesn't.
Well, I've discovered that using `@"C:\Logs\log-{Date}.txt"` in the rolling file path works, so I get the feeling that the problem lies within the path I'm specifying. So the previous two paths were probably the source of problem, but your advice is still solid and might solve a problem later on. Do you know the best way to guarantee that the log file stays in line with the deployed binary? I think my first attempts at doing so were flawed. `"log\\log-{Date}.txt"` didn't work.
I certainly have, I've written code in C++, C#, Java, JavaScript, PHP, Lua, Python, and even Scheme. But I would only say I have truly *learned* JavaScript, since I have been using it for over a year, and when I think of code in my head I think of it as if it were JavaScript code.
This seems like it would be super helpful, and I added that line of code, but I admit I don't use the console that often, does it spit the error out to the Output Window when debugging? Thank you!
I would expect that to work. It may be that if you're hosting it in IIS, your old log files could be in "C:\Windows\System32\inetsrv\log".
Whats better, a bike or a bus?
No you won't. You'll forget syntax, but syntax is irrelevant. You'll learn new techniques, and most of them will work in JavaScript too.
The compiler will create a hidden class to hold the lambda method/closure (`&lt;&gt;c__DisplayClass2_0`), and this class doesn't have the kind of constructor you expect. The same will happen with other compiler generated types, including anonymous objects, `async` methods and `yield` enumerators. You need to filter out the generated types somehow, e.g. by decorating the types you want to create with a custom attribute, or checking for the `CompilerGeneratedAttribute` of the lambda class.
Hrm, checking there didn't show a folder called that. I did set up the physical path to point to the directory where the web service was located, though. Out of curiosity, I created the folder "log" in the web application directory to see if it needed to exist before it could add files to the folder, but it didn't make a difference in the older version. I might just go through the appsettings route, I see a lot more people using it and it seems to be working for them that way, I was just trying to make it a little simpler on myself, but I think I'm making it harder on myself at this point. Oh well
I understand the lambdas are abstracting a class, but how does it affect the class hosting the lambda's creation?
It doesn't directly, `Activator.CreateInstance(Type.GetType("Test.ProblemClass")), Parent);` should work fine regardless of the lambda. But you try to instantiate *every* class in that namespace, and that will fail for the generated class.
Lovely, that seems very efficient, now if I'd just find time to (learn how to and) make it IQueryable then I think it's right up there. A bit surprised there isn't something like that already out there for lazy developers like.
Possible. But Mono is doing a pretty good job right now serving as a runtime for them across all their platforms. Until the CLR/BCL in Core (more or less) reaches parity the CLR/BCL in Unity/Mono, there might not be much incentive for them to do so.
I've had similar experiences. One guy who almost never made a peep, but who wrote clean solid understandable code. One of the most under-recognized people I ever worked with. Contrast that with an MVP who did lots of blogging and gives lots of presentations. He was up to date an he could make almost anything work, but the code was messy and full of duplications. 
Ahhh, I get it. Filtering out CompilerGenerated works fine. (A refactor to use inheritance would make more sense though...)
Some? Its the default now. The space people are much more adamant, even if they are wrong. What else could we expect given that its current-year. 
Yes, explicitly marking wanted types would likely be safer than trying to filter out all unwanted ones. I suspect delegate types would also cause this problem and probably won't carry the `CompilerGenerated` attribute, and there may be other cases.
You do realize most JavaScript developers are using an IDE now such as VS, VS Code, or Webstorm
bus?
&gt;They may not have the time until the weekend Some of us have lives that we must attend to when we are not working. I did one process where, after the initial HR interview, I was given an exercise to do. The suggested time to spend on it was 1 hour. I spent an hour on it (timed). In the technical interview in we looked at what I had done and used it to spark discussion about how one does things, we even discussed the shortcuts I took to be able to illustrate things within the time limit. 
If only they supported C# 7 I might move from unreal.
Probably in the lowering section.
a) VS Code is not an IDE b) I was not saying this in a vacuum but in a thread where someone recommended VS Code for C# c) I even mentionedWS further down in a comment ;)
&gt; Before you ever interview them, make them code! Come up with a small project that can be implemented in a day or two and stress that they are to use best practices. In many places it's a developer's market I don't have time to do a code test for every opportunity that comes knocking. I want to speak to you and make sure we're a good fit before I invest any of my free time that I could otherwise be spending with my family/friends or hobbies. This especially true if you've approached me rather than the other way round.
Did a quick search and found this but not sure if it is relevant: https://github.com/dotnet/roslyn/blob/c774b5d9c04d8730342bc2b0eee01259d295d21a/src/Compilers/CSharp/Portable/Lowering/LocalRewriter/LocalRewriter_ConditionalAccess.cs
Null propagation operator. String interpolation. Expression body methods. More lambdas! Yay
Last I heard they were going to do multiple inheritance by making interfaces into abstract classes, instead. I really hope that I'm wrong. https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md https://www.infoq.com/news/2017/06/CSharp-7.2
Sure it has some quirks :)
When did they say C# 8 will bring Mixins? Any links or reference articles?
Let's not get bogged with ooos going to crack ooos software. How can one sell their app without some sort of licensing?
NodeJS was never meant to be taken seriously.
The github link posted before your post, section C# 8.0 It is called Default Interface Methods. Not exactly mixins, but they are close enough. See the vídeo i posted for an example
If you are a student now, and want to make a career as a programmer, then odds are that by the time you retire nobody will be using C# or Javascript anymore. You need to get comfortable with switching languages. I worked exclusively in Pascal for many years before this fancy Internet thing came along, then I got rich working in Perl. I don't even bother putting either of those on resumes anymore. Adapt or perish. After your third or forth language you won't even care any more. Be sure to learn a purely functional language at some point too.
Ow god no...
&gt; Be sure to learn a purely functional language at some point too. Agreed. I'm loving Haskell
I'll be banning that cancer from my code bases that's for sure.
Have you looked at Typescript?
The presenters give a valid explanation for this addition to .NET later in the video. Spoiler: because of Android, Java 8 has it so now they can wrap this feature correctly. I would have preferred to have real mixins (like Scala traits) but i guess i will have to live with it for my current project.
It's not "valid" to break a language because they can't be bothered to refactor their architecture because "backwards compatibility" (hint, that's what versions are for). It's also widely regarded as a shitty idea in Java too. Not to mention it's totally violating the purpose of an interface and OOP.
There is no release date, but I doubt it will be any time soon. First they're going to release C# 7.1 and C# 7.2 (according to current schedule). Also, as others stated, there will be no mixins support in C# 8.0. There will (most likely, again according to current schedule) be support for Default Interface Implementations. edit: Why the heck is this the highest rated comment when others put so much more effort in their comments?
Short answer: don't know. Maybe a year? Maybe? Long answer: Best I could find is a bit of hearsay that Mads mentioned that they're aiming to have new C# releases _quarterly_. From [https://medium.com/@jakubgarfield/c-7-0-and-beyond-with-mads-torgersen-36c44a047024](https://medium.com/@jakubgarfield/c-7-0-and-beyond-with-mads-torgersen-36c44a047024): &gt; New versions of C# are planned to be released on quarterly basis which sounds quite daring. The next proposals are just drafts and could be changed in the future. So, we're still looking for C# 7.1, 7.2, _maybe_ 7.3 before we hit 8.0. Their GitHub tracks milestone progress for those: [7.1](https://github.com/dotnet/csharplang/milestone/5), [7.2](https://github.com/dotnet/csharplang/milestone/6), [7.3/7.X](https://github.com/dotnet/csharplang/milestone/7), then finally [8.0](https://github.com/dotnet/csharplang/milestone/8). Assuming that they do manage to do these releases quarterly, you might see 8.0 in 9-12 months? But that said, quarterly seems really ambitious. They released 7.0 in March, so they already missed the quarterly intent for 7.1. Also, we simply don't know what's planned for 7.3/X (which might even be skipped) let alone 8.0, so the scheduling is seriously in flux and not planned out. I wouldn't suggest you make any plans to use C# 8 features for _at least_ a year. In the meantime, I don't know your specific scenario, but there may be [alternatives](https://www.google.ca/webhp?gws_rd=ssl#q=C%23+mixins) for what you're trying to achieve. You might even be able to use Aspect Oriented Programming (e.g., [PostSharp](https://www.postsharp.net/aop.net)) for your scenario.
&gt; Spoiler: because of Android, Java 8 has it so now they can wrap this feature correctly. I'm 99% sure this is fairly irrelevant. If the C#-flavour of Default Interface Implementation (which I assume is what you're referencing) is purely a compiler feature that creates equivalent CIL, then the Java version and even the CLR/runtime version doesn't matter. If the feature requires some update to the CLR to properly support it, then IIRC, it still doesn't matter because C# code that is executed on Android via Xamarin is running in a Mono/Xamarin-CLR on top of the OS. It loads C# DLLs natively into the CLR for JIT compilation. I don't think it really runs based on Java limitations or leveraging _Java language_ features. That said, I don't have too much experience running Xamarin on Android (most of my experience is back when they used to be Mono for Android) so I could be talking out of my ass.
VS code is an IDE, it has intellisense, debuggers, extensions, etc.
Currently, the two most-commented issues on csharplang are the now-closed proposal of default interface methods and the [still-open proposal champion](https://github.com/dotnet/csharplang/issues/52). 750 comments between the two of them. It's a hot-button issue, needless to say.
Can someone link OP the article on the compiler lowering? That's pretty relevant, I'd do it on my phone but windows phone 10 turns a 10 second task into a 10 minute task involving multiple OS crashes and edge fuckery.
I've read their explanations and don't find them compelling. If anything, it will just give them free reign to bloat existing interfaces.
It is part of the type classes proposal. https://www.infoq.com/news/2017/04/DotNet-Type-Classes
Removed: Rule 3.
Which version of VS is it? It's always been a bit bloated and slow, I think 2017 is probably an improvement on 2015.
is the RAM DDR2, DDR3, or DDR4? the latest version of RAM is much FASTER. Of course the amount of RAM is different from speed, but if you're talking DDR2 RAM, then i'd say you need faster RAM.
The difference between VS Code and visual studio is huge. I use both daily, Vs code does have its place but I wouldn't say it's a fully fledged IDE.
Unfortunately that does not stop people from taking it seriously.
By just selling the program without any DRM... 
Are you mental
With an i7 4790K it must be DDR4.
No - there's no point wasting time and money on something that crackers will easily defeat. Add value on the things they can't pirate: things like support contracts and of course, knowing that it's legal.
What do you mean by "workloads"?
It's like a modular system for the project templates in VS 2017. [Workloads](https://docs.microsoft.com/en-us/visualstudio/install/modify-visual-studio) 
Probably not what you want to hear, but I think this is pretty standard. Five seconds to spin up a new project is slow for a console app, but not terrible. How long does it take to get a web project going? I run VS 2017 (primarily set up for web development and back-end enterprise stuff) on an old i7-4600U with 8 GB of RAM. It's not fast, especially with some of our larger solutions, but it's certainly usable.
It's two 8 GB sticks of DDR3.
I'll just leave this here: https://www.jetbrains.com/rider/
It's Visual Studio 2017. It just seemed odd to me that adding additional workloads would slow it down. I was considering uninstalling and reinstalling, but it would take some time and I figured it would yield no benefits.
i believe you should be able to use older RAM unless it's hardware-incompatible
Yes, I did install this initially due to initial installation issues with Microsoft's new install file (it will not install with some programs in the background such as MSI Aftburner's RivaTunerStatistics). Being new to C#, I found it easier to make use of Visual Studio, since most training materials reference it. I may make the jump to Jet Brains down the road, once I become more familiar with C#.
I agree, but I don't see a point in learning a language more than just learning basic syntax if I cannot or will not use it to make stuff.
Default interface methods are nothing like abstract classes. Why are you creating FUD?
So opening a new ASP.Net template is floating between 4 and 5 with my timer. and...now that I just whipped out the timer, the Console template appears to be just over 2, with no loading bar appearing. Something may have been going on in the background previously...
They can do pretty much everything that the current abstract classes can do except constructors/finalizers. And before you say that they don't have fields, that doesn't matter because we have ConditionalWeakTable from the DLR that gives you the same capability.
That sounds like a good plan. Best of luck to you.
C# Version != .NET Version, you can compile a c# 7 dll with visual studio and use it in the current unity version, the target framework version of the dll has to match (currently you have to set it to 3.5, but it seems that we can finally use 4.6 with the new version)
C# Version != .NET Version, you can compile a c# 7 dll with visual studio and use it in the current unity version 
I'm aware, and I was referring to the C# version. The blog post is about Unity support for C# 6.0, in the editor. You missed the point by a wide margin.
I've never tried putting an older stick in (I have my doubts that this would work), but I know my motherboard does not support DDR4. ASUS Z97-A is was I put the processor into. As far as I know, you cannot run DDR4 with an i7 4790K since it is from the generation of motherboards prior.
Okay you are right, it looks like the new unity editor doesn't support C# 7.0 but that still doesn't change that the fact that it is (and already was) possible to use C# 7 in Unity by using visual studio instead of the unity editor the important part of the blog post is the .net 4.6 support 
Parallelism in C# has a practical equivalent in Node.js, which is often overlooked. You can spawn "child workers" via [clustering](https://nodejs.org/api/cluster.html). Not as convenient as `Parrelel.For`, of course ;).
And your comment doesn't change the fact that your comment is completely unrelated to the subject.
Hah. I like your name. I work for a software company and the compliance department drives the letters that get sales. 
It's not unrelated because many people still think that it is not possible to use c# 7 with unity at all, which is wrong, because it is possible that's why i made the post, if you think the comment is unreleated then feel free to ignore it
I don't really get the concept, what is the difference between mixins and virtual methods in abstract classes? Is it because an abstract class is not an interface and therefore you can only inherit from one?
I would expect there is alot more c# jobs than nodejs. Options to be a full stack developer as either nodejs/JavaScript or c#/JavaScript will give you alot of options .. as most developers are full stack
Work opportunities. A lot of Enterprise level business applications will use C# as the primary code base. Just sayin...
Please tell me that it's just a work phone, I'd feel very sorry for you otherwise.
No its not :(
Notepad usually fixes tab people... unless they use 8 spaces for indentation :) 
Maybe try splitting it into smaller chunks of data and join them in the code later? Or try not to use EF and just Stored Procedures 
You missed the entire point though, which is that classes can implement multiple interfaces; unlike with abstract bases.
Writing code based on unit test is a very interesting interview idea. Could you clarify the website address? I only find exorcism videos for some reason. 
The classical rationale for the default interface implementations are logging library interfaces. I just don't know how I feel about them. Especially because it really starts to blur the lines a bit with an abstract class. Not to mention diamond problems with inheritance. I'm just sort of on the fence with this feature. Maybe there are benefits I'm not seeing?
I would say if you learn C# there is a strong chance you will want to use it again. When I was first learning to program Javascript was the language they used to introduce us to programming. Once I started to learn C# I never wanted to go back to Javascript. Granted I disliked Javascript almost from the very beginning before I was ever even introduced to any other language, so it might just be me.
Yep, that's it. /u/SuperImaginativeName mentioned this helpful article: http://mattwarren.org/2017/05/25/Lowering-in-the-C-Compiler/
Just FYI, the default interface implementations proposal is an implementation of *traits*, not mixins. Mixins may carry state; interfaces can not (and therefore this is a traits implementation). ---- Regarding some of the comments here (and on previous posts about this subject): Traits are a well known boon to OOP and frankly are supported in any decent modern language. Examples: * [Swift](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/Protocols.html#//apple_ref/doc/uid/TP40014097-CH25-ID267) * [Rust](https://rustbyexample.com/trait.html) * [Java](https://opencredo.com/traits-java-8-default-methods/) * [Python](https://ahal.ca/blog/2014/when-would-you-use-python-mixin/) * [Scala](http://www.scala-lang.org/old/node/117) * [C++](http://www.drdobbs.com/cpp/mixin-based-programming-in-c/184404445) Quite honestly, there's no decent argument against traits. Mixins yes, but traits (in the way they're being proposed) are nothing but a win. * Inheriting default behaviour is a great way of reducing code duplication. Currently only way to do this is via an abstract class or reflection/IL-weaving magic. Now interface writers can provide sensible default behaviours where it makes sense and still allow implementers to completely override it. * Trait-based MI encourages composition. One of the biggest problems with composition-based programming in C# currently is often the need to defer to implementation-providing objects (or copy-paste similar implementations everywhere). * Where no sensible default behaviour exists, nothing changes I'm not particularly concerned about whether this proposal has anything to do with 'backwards compatibility' or working well with some other library/language; I'm just taking what it will provide on its own. People talking about refusing to even entertain a design in their codebase using this new mechanism are frankly expert beginners at this point. If you don't think you need this, that's fine, but if you think *no one* will *ever* need it (or that it will *always* be worse than a frankenstein of interfaces and abstracts) then you're not as experienced as you think you are.
Is the Entity Framework a requirement? It isn't the best approach for all workloads. The best way to stream extremely large amounts of data from SQL Server might be to use the Bulk Export facility.
Sure, it makes more sense to pick a useful language but knowledge can be its own reward. 
My understanding of explanation was too narrow. Now I think that there are two types. One is very nice educational type explanation that is quite rare. It requires educational experience. The other type of explanation is technical. It is a way to show the decision process. Can be as fun as reading thousand lines of log file though. 
Hence the part where I said "do **multiple inheritance** by making interfaces into abstract classes". 
Also, single inheritance is a limitation of .NET's abstract base classes, not abstract base classes in general.
Depends on how you're going to use that data. Are you loading all of it all at once, or do you just need chunks of it at a time? Either way, EF isn't really suited for this.
&gt; Yes, a Mix In can be considered, in todays modern lingo, an Interface with an associated Implementation. It really is just plain, old, everyday multiple inheritance using a plain, old, everyday class. It just happens to be a specific application of MI. Most languages don't give a Mix In any special status, it's just a class that was designed to be "mixed in", rather than used stand alone. https://stackoverflow.com/questions/860245/mixin-vs-inheritance
&gt; Just FYI, the default interface implementations proposal is an implementation of traits, not mixins. Mixins may carry state; interfaces can not (and therefore this is a traits implementation). In practical terms there's no difference in .NET because you can always add state to an existing object using ConditionalWeakTable. 
&gt; People talking about refusing to even entertain a design in their codebase using this new mechanism are frankly expert beginners at this point. When your strongest argument for a feature is personal attacks, that's a sign that the feature isn't very good.
why?
The C# compiler is open source, so you can add features to it. In fact, the Roslyn repo has [some branches with WIP implementations of planned language features](https://github.com/dotnet/roslyn/blob/master/docs/Language%20Feature%20Status.md). To do this yourself you will need a decent understanding of the Roslyn infrastructure, though.
This heavily limits who can (and will) use your software. Anyone in a compliance-heavy market will pass on you for competitors.
Okay increase the limit of concurrent uses, fixed.
Either you're selling to businesses, who faces significant legal threat if they violate your license, and you don't really need DRM to enforce it, or you're selling to consumers, who can break the DRM if they feel like it. DRM is called "defective by design" for a reason. It doesn't work. Every DRM scheme ever made has been cracked. Just sell your product, and don't worry too much about the small percentage of pirate users... they wouldn't have bought your product anyways. Focus on making your product something people love. If you solve a problem for people, do it in a way that makes them adore you, they will be looking for ways to give you money, not trying to cheat you out of it.
That's not what I meant. The server dependent part is the problem. Cloud service products are basically a no-go in any government or finance level industry. The risk of some shoddy app dev improperly securing a business's data isn't okay. Seeing below the OP specifying what his device does... consider what would happen if your vision mixer, which is likely controlling a stage production, suddenly stopped working because your Internet went down mid-production. That's a terrible product design. Good software doesn't require the Internet to work.
&gt; When your strongest argument for a feature is personal attacks That wasn't an argument, the 2 or 3 paragraphs above were. And it's *hardly* a 'personal attack' when I'm talking about a large group of people. That being said it's probably not appropriate which is fair enough, emotion shouldn't play a part in this kind of thing. But I'm frankly frustrated: I don't see why a load of people who can't *personally* see the use for something are declaring it bad for *all* of us. It reeks of inexperience because I've had plenty of times where traits/MI would *vastly* improve my API or design somehow. I also don't see all the languages I listed in my original comment crashing and burning despite some of them including traits/mixins right from the start; so all this dramatic talk of how it's going to be so terrible is almost comedic. It just smacks of someone knowing nothing outside of C#, hence *expert beginner*.
Whether or not someone decides to add adjunct data alongside their types with that approach or not, the implementation in the proposal is for traits.
&gt; Also, single inheritance is a limitation of .NET's abstract base classes, not abstract base classes in general. Yes, a limitation that this proposal is moving halfway towards rectifying.
I have no idea what the criteria is for downvotes here. I wish the silent downvoters would say. 
Yeah... The more I work with C# the more I wonder how people stick with PHP...
Typical reddit hate on node. You can write shitty code with any language.
Not at actual interviews. But the idea is to help get interviews in the first place. I'll be attending career fairs where there are plenty of recruiters and you typically hand them your info and they go through it later. Having a space for them to see code I've worked on gives them an idea of what I can do, plus it keeps them thinking about me longer lol
VS is very, very slow
i'm convinced that they aren't using any other backend web dev language as much as they use PHP. If someone tells me about a project they've done in PHP and that they love using PHP, i'm inclined to ask them if they've done a project that complex in java enterprise or c# or Python, because ANY of those are better than PHP. I'm willing to bet their answer will be "well, no, but i've used PHP for plenty of projects that are this large &amp; complex, and i'm doing fine" Of course if you're used to getting your ass handed to you all your life, you may not realize that you're in trouble.
If they would go all the way with MI via abstract classes and leave abstract interfaces alone I wouldn't object. But their stated goal is nothing less than bloating the already existing collection interfaces.
What you are missing is that they, myself included, see a lot of advantages to small, well defined interfaces that we can rely in not changing from version to version. I've dealt with that crap in Java and it wasn't fun. Unlike many new features, where it's safe to ignore new features, this is going to affect everyone whether they like it or not.
I can't wait for it to mature. I have loved their products in the past and use ReSharper currently to give a similar feel.
Ef is a bad choice if you want db efficiency. Depending on how big your data is, bcp out is a good method for REALLY getting the data out fast in large quantities. That being said, I'd suggest a stored proc if you want to get data out quick in bulk. Write a super efficient query and let the db do what's it's great at, data manipulation. 
&gt; What you are missing is that they, myself included, see a lot of advantages to small, well defined interfaces that we can rely in not changing from version to version That shouldn't change, hopefully. 90% of interfaces in my ideal world will not be affected by this proposal. I don't want to see widely-used global interfaces specifying default implementations all of a sudden either. I'm excited for this proposal because it allows our own APIs and new APIs to be *so* much better written. I still want interfaces to be interfaces, but when we can supply default implementations across well-defined horizontals (e.g. *across* a shallow inheritance tree rather than down *through* a deep one) I really think it'll loosen up a lot of the old-style "classic" OOP in favour of more modern composability-through-traits.
It's normal for Visual Studio to be kind of slow. I recommend switching to Rider as soon as you learned the basics and the release version is out. After playing around with the pre-release version for a few hours it just seems to be better than MonoDevelop (what I'm using) and Visual Studio in every possible way.
When you say streaming, did you mean microbatching your query results and iterating over them? Or is your objective to find the most performant way to transfer bulk data in a batch setting?
Will do on both counts! Thanks for the clarification.
Thanks for the feedback, you are not the only one recommending this route! Hopefully it will seem more intuitive once I understand Visual Studio better :)
&gt; I don't want to see widely-used global interfaces specifying default implementations all of a sudden either. The thing is, the examples of why they want to do this include things like adding `Count` to `IEnumerable&lt;T&gt;`. If they were approaching this like `shadows`, a necessary evil to deal with backwards compatibility, we might feel differently. But they actually said that they want to actively use this in the base class library. *** Now if they created a new construct, neither `interface` nor `abstract class`, that had the same ability to support mxins I'm sure most people who dislike this proposal would be happy. 
If you can, it might help to post code. There are games you can play with entity framework to make it suck less, for example using AsNoTracking to your query so that it does not add each row to its internal tracking tables.
As an aside, have you looked at any MVVM frameworks? They take the pain out of implementing INotifyPropertyChanged. Personally I use Prism. If you implement BindableBase on your class then you get your NotifyPropertyChanged events for free, you just implement your setters in a slightly different way, e.g.: public Property Foo { get { return _foo}; set { SetProperty(ref _foo, value); } }
Can I use C# 7.0 features in unity scripts?
Can you maybe provide a code sample of where you think you're abusing it? It's hard to say with any certainty. In general, I would say custom attributes are a good way of "tagging" classes or members of classes with "meta data", which in turn can drive any number of behaviours. If you find that the way you're using them is useful, and it isn't adversely affecting maintainability of your application/system, then by all means, continue!
Ugh. :( 
Here's some code I have: namespace BGSD.Data.Records.Types { /// &lt;summary&gt; /// Represents the &lt;see cref="TES4"/&gt; record that defines information for a master or plugin data file. /// &lt;/summary&gt; /// &lt;seealso href="http://www.uesp.net/wiki/Tes5Mod:Mod_File_Format/TES4"/&gt; /// &lt;remarks&gt; /// This record is the top-most record of a Bethesda Game Studios (BSG) data file. /// It defines file header data, author, description, the masters it depends (if any), /// and other top-level data file information. /// &lt;/remarks&gt; /// &lt;seealso cref="Master"/&gt; /// &lt;seealso cref="Plugin"/&gt; [RecordDescription(@"This record is the top-most record of a Bethesda Game Studios (BSG) data file. It defines file header data, author, description, the masters it depends (if any), and other top-level data file information.", introducedBy:BethesdaGames.All)] /*[SubrecordOrder("", nameof(DataFileHeader), nameof(Author), nameof(Description), nameof(Masters), nameof(FormOverrides), nameof(INTV), nameof(INCC))]*/ [SubrecordOrder(BethesdaGames.TES4AndDLC, nameof(DataFileHeader), nameof(TypeOffsets), nameof(DeletedFormIds), nameof(Author), nameof(Description), nameof(MasterFileNames), nameof(MasterFileSizesInBytes))] [SubrecordOrder(BethesdaGames.TES5AndDLC, nameof(DataFileHeader), nameof(Author), nameof(Description), nameof(MasterFileNames), nameof(MasterFileSizesInBytes), nameof(FormOverrides), nameof(INTV), nameof(INCC))] [SubrecordOrder(BethesdaGames.FO4AndDLC, nameof(DataFileHeader), nameof(Author), nameof(Description), nameof(MasterFileNames), nameof(MasterFileSizesInBytes), nameof(FormOverrides), nameof(Screenshot), nameof(INTV), nameof(INCC))] public class TES4 : TopLevelRecord { #region Properties /// &lt;summary&gt; /// Gets or sets whether or not the data file is localized. /// &lt;/summary&gt; /// &lt;value&gt; /// A value of true if the data file is localized; /// a value of false if otherwise. /// &lt;/value&gt; public bool IsLocalized { get; set; } = false; #region Subrecords /// &lt;summary&gt; /// Gets or sets the &lt;see cref="SubrecordSignatures.HEDR"/&gt; subrecord /// specifying the data file's header information. /// &lt;/summary&gt; [HEDR] [ZString] public Header DataFileHeader { get; set; } = null; /// &lt;summary&gt; /// Gets or sets the &lt;see cref="SubrecordSignatures.CNAM"/&gt; subrecord /// specifying the plugin's author. /// This subrecord is optional. /// &lt;/summary&gt; /// &lt;seealso href="http://www.uesp.net/wiki/Tes5Mod:Mod_File_Format/TES4"/&gt; [CNAM(RecordPresenceType.Optional)] [ZString] public string Author { get; set; } = null; /// &lt;summary&gt; /// Gets or sets the &lt;see cref="SubrecordSignatures.SNAM"/&gt; subrecord that /// provides a description for the plugin. /// This subrecord is optional. /// &lt;/summary&gt; /// &lt;seealso href="http://www.uesp.net/wiki/Tes5Mod:Mod_File_Format/TES4"/&gt; [SNAM(RecordPresenceType.Optional)] [ZString] public string Description { get; set; } = null; // More code... }
I'll put some thought into it. Maybe you're right and I can offload some data. p.s. I put some example code in a reply here.
http://exercism.io/ &gt; I only find exorcism videos That would be the worst interview ever.
There is always a reason to learn a new language. Learning new languages will improve your skills with the ones you already know. And you don't have to choose one or the other, throughout your career you'll use and mix many languages. In the case of .NET (c#) and NodeJS (javascript), they work together very well together: https://tjanczuk.github.io/edge/#/ (Run Node.js and .NET in-process)
http://exercism.io/
You're not putting files or images into a database, are you? ಠ_ಠ
This seems fine, but you'll want to read it once at the beginning of your program, and introduce cached versions of this metadata to use to make it fast. Generally you don't want to do any heavy reflection in anything approaching a critical path unless absolutely necessary. Try something like public static class MetaDataCache&lt;T&gt; { public readonly RecordDescription RecordDescription = new Lazy(!&lt;insert reflection heavy lambda code here&gt;!).Value; } Or similar. It's hard to know without the context of the rest of the code, but the simple gist is to extract the information out of your attribute metadata once, then never read it except out of the caches you set up ever again.
I honestly did not bother entirely reading the Roslyn issue. It became a **shitfest** of people repeating the idiotic mantra "interfaces must not have implementations, they must remain contracts", without realizing that the interface will not actually contain the implementation and the interface remains a pure reliable contract, and language team repeating their points.
Are you using eager loading? (.Include(a =&gt; a.B)) I found that too many .Includes can hugely increase the amount of data being sent, plus produce some terrible query plans. Try splitting the query into multiple smaller queries, or use db.Entry(a).Reference(a =&gt; a.B).Load(); etc.
But important to point out: You will not get Visual Studio support. I think not even Visual Studio Code support.
But frankly, a lot of comments are from people not understanding the suggestion and repeating mantras that add nothing to the discussion.
Java language feature parity was indeed mentioned by Mads (sources missing, too lazy) as a motivation for this proposal, mainly for better support in Xamarin. And according to the issue this does require minimal CLR changes.
They don't bring mixins. They bring "Default Interface Implementations". Here's the actual issue on Github: https://github.com/dotnet/csharplang/issues/52
You're right. I haven't ever dealt with caching, though. I'll do some research.
Visual Studio is smooth for me until I add ReSharper. So In general I suspend ReSharper until I need it. You can try VS Code or Rider if you want.
I'd take a look at setting up seq. Even local on the same box it is great and let's you easily query single or multiple apps from one place
A tittle gripe about the website.. The links to sections have no navigation back home.
I'll put it on the todo list ;-)
Kinda, unity can't compile C# 7.0 (yet) but you can write your code in visual studio (or any other IDE which supports C# 7, i think visual studio 2017 was the first version which supports C# 7) and write your code there and build the dll with visual studio (the dll .net version has to be the same as the unity version so 3.5 for the current unity version, or 4.6 with the new version) after you built your dll with visual studio you can drag&amp;drop it inside your unity project (or set your unity project path to the build path in visual studio then it will be copied everytime you build and you don't have to drag&amp;drop after every change) and use the classes from the dll (there is even a youtube tutorial for this, not sure if im allowed to post a link here) Which C# 7 features do you like the most, because i know there are some nice additions but im kinda curious which feature you like so much that you would change from unreal to unity just because of C# 7?
I am already on the verge of moving just since unreals rendering and tooling is so far ahead. I am really starting to miss things like distance fields and their particle engine. C# 7.0 features like the new tuple and pattern matching are something i cant live without after using them. Ref returns and locals and out returns are all super useful too. There is a lot more that c#7 adds but they are the things i cant live without after getting used to them.
I will send you a private message with the youtube link because im not sure if im allowed to post youtube links here
It's pretty standard I think. Use VS code if you want speed.
To be fair, this can trip you up if you move from a language where methods are virtual by default (i.e. Java) to C#.
Performance, freedom to create powerful desktop applications, more control over your projects, and lots more. JS is nice for a lot of web things, but it really isn't meant to be a general purpose language. C# is and that power is worth a ton.
No, it's not. It's a text editor that has some IDE features and allows you to install extensions to close the gap between the two.
It seems like you're not checking result in DoWork?
Sorry was not specific enough, my problem is in the isEven method. I get an error on the return result line: Cannot implicitly convert type 'bool' to 'System.Threading.Tasks.Task&lt;bool&gt;'
Make the iseven method async or use .Result
Add async to the private method
Your console application does not wait for the MyMethod to complete. You can add a .Wait() to the method call in your Main static void Main(string[] args) { MyMethod().Wait(); } If you want to return the boolean result instead of the Task itself, you need to add a "async" to the isEven method aswell. private async Task&lt;bool&gt; isEven(int counter) { bool result = counter % 2 != 0; return result; } 
Ok but then i get this warning. Warning CS1998 This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
Seems async is not an option, can you elaborate on the .Result thing?
Yes, it says it right there. Why do you even want to make an iseven function async? Just make it return bool.
You can change the method to private async Task&lt;bool&gt; isEven(int counter) { return await Task.Run(() =&gt; { // simulate long calculation Task.Delay(3000); bool result = counter % 2 != 0; return result; }); } This way the isEven calculation will run asynchronously. Since the isEven calculation is not CPU / time intensive (and generally does not need to be executed async) I've added a 3 second delay to simulate a long running calculation 
¯\\\_(ツ)_/¯ Not sure if I'd be able to tell anyway. I think there are some strong opinions on /r/csharp that it shouldn't be used/wasted on people asking (from their perspective) inane questions, or questions that don't actually have code posted. Most _questions_ on /r/csharp garner few upvotes, often less than 10, so this post is doing about par for the course.
The return type task has a result property which contains the well, result
Can you justify that?
Your issue is already in the `Main` method. You're calling `MyMethod()` which is an async method. It **immediately** returns. And then the `main` method finishes and your program terminates. Instead do this: public class Program { public static void Main(string[] args) { MainAsync(args).GetAwaiter().GetResult(); // This will block until the task finished } public static async Task MainAsync(string[] args) { // Do your stuff here. Don't use "async void". await DoStuf(...); } } This is also what the future `async` entry point feature will compile to (future C# version).
Obviously to get familiar with async await and not get bogged down by trying it in some complex system.
Yeah, this. If there is no async code in a method, don’t make it async. If you wanted to make it async there are two options, add ‘async’ to the signature, or leave the signature as it is and change the return line to: return Task.FromResult(result); Both of those involve overhead (the Task allocation, and the async state machine if you mark it async), so you really shouldn’t make that method async.
Unfortunately, yes EF is a requirement (Simply instructions given by superiors). I've gotten it to work using streaming over buffering with the windows process, but it still works much more sluggishly than I'd like it to. The loading of the data is significantly slower this way. 
Nope haha. Just having to pull a lot of rows from a database to load into a datagrid. 
Visual Studio Code uses omnisharp for intellisense and omnisharp is opensource and based on Roslyn. I know the cake build team is working on a custom omnisharp to get better support for cake build scripts in VS Code.
I agree completely. Unfortunately, according to by superiors, they want EF to be used for getting data from the DB, despite the performance loss from it. 
Ok so i got the code to work like this. using System; using System.Threading.Tasks; namespace TestAsyncAwait { class Program { static void Main(string[] args) { MyMethod(); Console.ReadKey(); } public static async void MyMethod() { await new Program().DoWork(); } public async Task DoWork() { bool result = false; int counter = 0; while(counter &lt; 10) { result = await isEvenAsync(counter); Console.WriteLine($"{counter} is even {result}"); counter++; } } private async Task&lt;bool&gt; isEvenAsync(int counter) { return await Task.Run(() =&gt; { // simulate long calculation Task.Delay(3000); bool result = counter % 2 != 0; return result; }); } } } So that is good, but i am not really happy with the isEvenAsync method. Just to make this clear, this is not actually some code I am using for anything but to test out how async/await works. So lest assume that the isEvenAsync is a method that actually takes some time to run, would this then be the right way to write this code? What bothers me is that i have to surround all my code with the "return await Task.Run(" thing.
Whether you can rely on *any* kind of behaviour not changing from version to version depends purely on the versioning policy of the maintainer. If the maintainer thinks it's important for the behaviour of counting items in an IEnumerable to be the same from version to version, then it's not suddenly going to become *not* important just because it's now IEnumerable.Count and not Enumerable.Count(). It's not like this language feature will suddenly expose things as a public API that aren't already part of a public API. It's just a language feature, not a proposal to stop thinking about API design.
No eager loading used. Only .WHERE statements. 
Added these modifiers! Led to a slight performance increase (which at this level means a whole lot) thank you!
Async/await isn't multi threading. It is a continuation state machine. If you have no where to suspend your method you have no where to continue from. 
Ouch. that's got to be some enormous data then. var results = dbContext.Database.SqlQuery&lt;ResultType&gt;("EXEC sp_...")...?! It's still technically EF :)
This isn't particularly helpful, but I'm curious. Couldn't you use a for loop instead? So: public async Task DoWork() { bool result = false; for(int i = 0; i &lt; 10; i++) { result = await isEvenAsync(i); Console.WriteLine($"{i} is even {result}"); } } Not trying to be awkward/nitpicky, genuinely curious if you've done this intentionally, since I'm learning and might be missing something. I think it's effectively the same code, just looks a little neater. 
Inappropriate use of `Task.Run`, that `Task.Delay` call is worthless because you don't `await` it, ***and*** the result is incorrect. Should be: private async Task&lt;bool&gt; IsEven(int counter) { await Task.Delay(3000); return counter % 2 == 0; }
No one said it is multithreading. 
~~`.GetAwaiter().GetResult()` vs `.Wait()` - is there nuance to this difference that you may be able to shed some light on?~~ e: rephrasing: Should `.GetAwaiter().GetResult();` be preferred to `.Wait();`? 
why?
Yes OP, create a custom attribute instead and decorate the classes you *do* want to find. Much better.
Yes, OmniSharp builds **upon** Roslyn. It provides a Web API that is used by VS Code. And OP talks about the latest preview features - which most likely have no support in OmniSharp yet. OmniSharp would need to extend existing and add new endpoints to accommodate the new features.
&gt; Wait Yes, it's preferred. `Wait()` will wrap exceptions in annoying `AggregateException`.
It's an unfortunate side effect of the "redesign" of how tasks should be used when async-await was introduced. The main difference is that exceptions are unwrapped using `GetAwaiter().GetResult()` so: If an exception is thrown, `Wait()` will wrap it in an `AggregateException` (or rather: will not unwrap it). This is because tasks can be composed of subtasks so there can be multiple exceptions. This kind of composition is not used much with async-await, so using `GetAwaiter().GetResult()` will unwrap the exception for you, and any additional exceptions (if the tasks was composed) are lost.
I think you are right, your code looks a little neater. No I did not do what I did for a reason, just needed some code to test async/await with.
Skip and Take translate to Offset and Fetch Next so I would say EF is perfectly capable of chunking data.
You'd also make it harder for anyone else to read the code, of course, which can be important.
Reminds me of [this skit.](https://m.youtube.com/watch?v=BKorP55Aqvg)
Fair enough, thanks. Sorry I don't know anything that can help you!
I'd considered building my own but when I couldn't figure out why the image was disappearing when I tried to resize it by a few pixels, I decided my deadline wouldn't allow me the time required to deal with all of that.
If you want an async method without an await you don't know what an async method is. The most common error is thinking it is multithreading. 
Thanks for the suggestion. Its not what I'm looking for though. My app needs to allow users to write emails that it will send in HTML format with embedded images
I see, thought about the same thing. I aint sure C# really need mixins at all as we can achieve something similar already with Extension methods. 
I love that one! Like with the specifications it WORKS, just not efficiently or the way I would like it to 
Add Task.FromResult private async Task&lt;bool&gt; isEven(int counter) { bool result = counter % 2 != 0; return Task.FromResult(result); }
(adding a comment so I can review later)
Mainly if you have resharper installed.
That doesn't work (and isn't necessary) in an `async` method.
If you have devexpress [this tutorial](https://documentation.devexpress.com/WPF/8832/Controls-and-Libraries/Rich-Text-Editor/Getting-Started/Lesson-1-Create-a-Simple-Rich-Text-Editor) is pretty straightforward along with the [HTMLText](https://documentation.devexpress.com/WindowsForms/DevExpress.XtraRichEdit.RichEditControl.HtmlText.property) property for export if it exists in 15.2
A terrible hack would be to add ExpandoObject instances to a dictionary and check there before looking at attributes. Then that could be posted to the shittyprogramming subreddit. Woo. ;)
That tutorial is for version 17.1 of the DevExpress WPF Controls. I stumbled at the start when that tutorial said to create the toolbar by adding the `CommandBarStyle="Ribbon"` to the control. It would seem that 15.2 doesn't include this property and I'm kinda boned without it since there'd be no other way to allow the functionality I'm looking for there.
If I see a 0, unless it is something REALLY deserving of it, I upvote.
Why wouldn't it and how so?
A Dictionary&lt;Type,CachedMetadata&gt; would not be bad either, and is more flexible in use, but yeah I would probably stay away from the ExpandObject, especially if you already have speed problems ;)
Methods marked with the `async` keyword are automatically wrapped in a task, that's how they work. You're effectively trying to return a `Task&lt;Task&lt;bool&gt;&gt;` here.
Do you have the DevExpress Demo Center installed? If not you might be able to download the 15.2 version still from DevExpress and it should have an example of the RichEditControl. And do you need the `CommandBarStyle="Ribbon"` for any particular reason? If it is to have the Insert Picture/Export to HTML as buttons in the ribboncontrol, they should still be there even though 15.2 doesn't have that property. (Only options for it are Empty and Ribbon in 17.1).
You're right. Removing the async keyword should work though. public Task&lt;bool&gt; isEven(int counter) { bool result = counter % 2 != 0; return Task.FromResult(result); }
Just ask them to bring some of their code. A pet project, a small code snippet or something. Then ask questions that code. Ask them about their program architecture and why they picked it. Ask them if there is any code they would still like to improve and why. Ask them what code they are the most proud of. Ask them what problems they encountered when they created this code. Just get a discussion going and you should be able to get a feeling of their programming skills. 
It sure is possible int c = 1, t = 1000; var p = Enumerable.Range(2, total).ToList(); while(c &lt;= Math.Sqrt(t)) { c = p.First(i =&gt; i &gt; cur); p.RemoveAll(i =&gt; i != c &amp;&amp; i % c == 0); } Console.WriteLine(p.Max());
&gt; var p = Enumerable.Range(2, total).ToList(); Isn't this basically using an array though? I mean, _technically_, OP wouldn't then be using an `int[]` _array_ and just a `List&lt;int&gt;`, but I'm not entirely sure this is the intent behind the question. /u/Ziegenbockschafspelz, maybe you can clarify what you're looking for and why you're trying to avoid the use of collections?
If you mean without directly using an array type in your code, sure. If you mean without involving any array-based or array-like collection of values at all, then no.
Please do, I would use that
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/linq-to-xml
You have to read the text node from the element to get the value. Here is an example from StackOverflow https://stackoverflow.com/a/18891497/516419
Linked list might be different enough from an "Array" to not qualify as one but that would be inefficient for this.
Removed: Rule 4. There are a plethora of resources online and several methods on how you can read XML data. Do some research, pick a method, and give it a shot. If you still run into problems with that method, feel free to post another question regarding those issues specifically and include the code you used for your attempt.
If you can't (or won't) maintain an array, then it's pretty hard to implement the sieve as usual. You could use a function that checks if a number is prime and call that function for each number you need to check. Here's an example with a somewhat efficient way of checking a range for primes: void Main() { var max = 10_000_000; var count = 0; var sw = Stopwatch.StartNew(); Enumerable.Range(1, max).AsParallel().ForAll(n =&gt; { if (IsPrime(n)) Interlocked.Increment(ref count); }); sw.Stop(); Console.WriteLine($"Found {count:0,0} primes under {max:0,0} in {sw.ElapsedMilliseconds}ms"); } public bool IsPrime(long n) { if (n == 1) return false; if (n &lt; 4) return true; if (n % 2 == 0) return false; if (n &lt; 9) return true; if (n % 3 == 0) return false; long r = Convert.ToInt64(Math.Floor(Math.Sqrt(n))); long f = 5; while (f &lt;= r) { if (n % f == 0) return false; if (n % (f + 2) == 0) return false; f += 6; } return true; } Ouput: Found 664,579 primes under 10,000,000 in 820ms
`async` is not part of the method signature. If you are getting the Warning "This async method lacks the 'await' operator", then *remove the `async` keyword* and return Task.FromResult&lt;T&gt;(t)
Also, `async` is *not* synonymous with "background thread". This will block for 5 seconds, even though it's `async`. private async Task Spin() { SpinWait.SpinUntil(TimeSpan.FromSeconds(5)); await Task.FromResult(0); } 
He's trying to play with multithreading behavior using delays and such, which shows a misunderstanding.
Why does this violate Rule 4?
I would suspect that most of the trouble comes from mapping the result data into an object. If the data is text and it's mapped into a string property then huge data is going to kill runtime perf. 
 &lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;report&gt; &lt;category&gt;PERMITS&lt;/category&gt; &lt;name&gt;I WANT THIS&lt;/name&gt; &lt;description&gt;Some description.&lt;/description&gt; &lt;email_template&gt;CUSTOM ISSUED PERMITS.email.repx&lt;/email_template&gt; &lt;email_subject&gt;ISSUED PERMITS&lt;/email_subject&gt; Not sure what happened with the formatting. Sorry!
Alternate approach: The plugins must implement an interface and that interface *returns* an object describing the metadata. Advantages: * Less reflection. You just have to find all public classes in the assembly that implement IPluginDescriptor and then invoke them at runtime. * Explicit metadata format that makes it more clear when you're making breaking changes to the metadata format. 
I've been in all the design meetings for this proposed feature and I don't recall anyone mentioning logging. Though that did come up as an example when discussing the shapes proposal. The big drivers for default interface methods are interface versioning and interop scenarios.
Could you give the output of either versions? I'd say it's something like IEnumerable&lt;String&gt; nameOrNames = XDocument.Load(path).SelectMany(document =&gt; document.Elements("report")).Select(report =&gt; report.Attribute("name").Value); //nameOrNames *should* contain a list of names nameOrNames.ToList().ForEach(Console.WriteLine); //print each name to the console
The first one ouputs: permits The second one outputs: System.Linq.Enumerable+WhereSelectEnumerableIterator`2[System.Xml.Linq.XElement,System.String]
You specified: &gt; Im having a problem reading from an XML file. But didn't mention what the problem was. You didn't describe how you're trying to read the XML file or show code of your attempt, if any. Reading XML in C# is a very, very common task and there are quite a few ways you can go about doing it in C#. Any number of which can be found by googling. The question itself can generally be easily answered through even a minimum amount of research. It's clear that either: you have put very little effort into solving the problem, or you did put significant effort in but neglected to include that effort formulating the question. As such it violates the clauses of the rule: &gt; explain what you have tried and &gt; Help posts that have had little effort put into them will be removed at the discretion of the moderators. So, as I said, do some research, make an attempt. If you run into errors attempting to apply what you researched, then you can post it provided you include details about what you attempted and the code you used for that attempt. EDIT: I see you [reposted the question](https://www.reddit.com/r/csharp/comments/6n3mks/reading_xml/) and included some relevant information and code of your attempt. I would consider this second posting sufficient and I won't be removing that one under Rule 4.
 I beliebe you are missing the indentation and separation by newlines which cause your xml not to be formatted correctly
 Second one: Replace Console.WriteLine(query); with either foreach(String s in query) { Console.WriteLine(s); } or query.ToList().ForEach(s =&gt; Console.WriteLine(s));
I tried both of those but unfortunately nothing prints out for either of them.
Thanks for the help! I had already tried it in both of the ways that I discussed in the repost of the question, but just didn't put them in this one. I'll make sure I'm more specific going forwards. Thanks for the help!
But a computer language is a lot more than just syntax. The differences between C# and JavaScript are much deeper than that. For instance, C# is statically typed while JS is dynamic. That alone is huge shift in programming philosophy, and both methods will approach the same problem differently.
You are allowed as long as the YouTube content doesn't significantly violate the rules.
&gt; What bothers me is that i have to surround all my code with the "return await Task.Run(" thing. Yeah, once your code starts using async it tends to spread rapidly. It helps to contain any parts that should be async into a single service/module/assembly/etc. and whenever you need it you can wait for the result using synchronous methods. It is also a great opportunity to practice the SRP from SOLID as well. Why should one method cause everything else in your app to be async when it doesn't need to be? Must be time to refactor
In your second example, you need to call a method on your query to actually execute it. var query = from c in xml.Root.Descendants("report") where (int)c.Attribute("category") &lt; 4 select c.Element("name").Value; Console.WriteLine(query.SingleOrDefault());
Is name not a child node instead of an attribute? Or am I just too tired.
Whoops I was. Got it. Thanks!
hmm. Still not showing anything. Putting a breakpoint in shows that query has the value of: {System.Linq.Enumerable.WhereSelectEnumerableIterator&lt;System.Xml.Linq.XElement, string&gt;}
Have you tried deserializing it? Create a 'report' class and then the method below: public static T Deserialize&lt;T&gt;(this string xml) { var serializer = new XmlSerializer(typeof(T)); return (T)serializer.Deserialize(new StringReader(xml)); }
Then I recommend splitting the statements up and look at each value
Oh, &lt;category&gt; is an element not an attribute so: var query = from c in xml.Root.Elements("report") where (int)c.Element("category") &lt; 4 select c.Element("name").Value; Console.WriteLine(query.SingleOrDefault()); Also, if &lt;report&gt; is the root node of the XML no need to reference it: var query = from c in xml.Elements() where (int)c.Element("category") &lt; 4 select c.Element("name").Value; Console.WriteLine(query.SingleOrDefault());
Root = "report" root.Elements are "name"/"email"/... Which would result in something like String name = XDocument.Load(path).Select(document =&gt; document.Element("name")) given that "report" is the root element. This would also explain why it was hard to find the error as the query was correct at the places looked at... XDocument.Root.Descendants("report") would find elements like &lt;report&gt;&lt;report&gt;THIS&lt;/report&gt;&lt;report&gt;AND THAT&lt;/report&gt;&lt;/report&gt;
From my experience, the best projects to show off your skills are the ones that you actually use (or someone you know does). If you can show off a project and explain what kind of problem it solves (e.g. makes something that was tedious before easier) and if it has helped other people as well. Compare that to "yeah I made this book store thingy in MVC just for fun, no real reason just wanted to create something". The problem is that it's very hard to come up with project ideas that are actually useful. It's also a lot more motivating (at least for me) to work on something that you'll actually use yourself.
What would I be passing into that?
The first one doesn't print out anything, while the second one has a runtime error. "A problem cause the program to stop working correctly..." Maybe we are getting closer then??
var xml = "&lt;report&gt;&lt;name&gt;...."; var r = Deserialize&lt;report&gt;(xml); //data you want in the 'name' property - r.name
Have you verified your WHERE statement: where (int)c.Element("category") &lt; 4 In the XML you provided there is no match for it.
Yes I changed that to report rather than category, and I am still receiving the runtime error
Huh. At runtime, I actually dynamically invoke constructors &amp; initialize them with data read from the plugin file. It made for some compact, simplified code (thanks, `dynamic`!). Maybe it's something I can handle there?
Assuming the XML file you provided as low as the document is nested, this should work for finding the value of "name": var doc = XDocument.Load(path); var val = doc.Root.Element("name").Value; //Returns the Values of the first element that is named "name". or alternatively if you only have multiple "name" tags: var val = doc.Root.Elements("name").Select(e =&gt; e.Value); //Returns all nodes' Values with the "name" tag is this what you wanted?
I'm not following. Is &lt;report&gt; the rood node in the XML or are there multiple &lt;report&gt; nodes? Are you trying to find value of &lt;name&gt; based on the value in &lt;category&gt;?
Sorry for the confusion. &lt;report&gt; is the root, and &lt;name&gt; and &lt;category&gt; are child elements. I need what is &lt;name&gt;HERE&lt;name&gt;.
I just feel like Attributes are for compile-time metadata and code/config is for run-time. Plugin loading is kind of "initialize time", which straddles the definition of compile-time vs. run-time. But when anyone is getting too fancy with configs or attributes, I always ask the question, "are you inventing a domain-specific language that is actually worse at its job than C#"? (If you ever find yourself writing &lt;if condition="foo"&gt;&lt;else&gt;&lt;/else.&lt;/if&gt; in XML then the answer is yes, you've gone off the deep end) Is it easier and more clear to decorate your plugin classes with attributes and then interpret those attributes in C# code, or would it be clearer to just *write C# code*? If your plugin writers want to have one piece of metadata based on another piece of metadata or otherwise be a calculated value, would your attribute syntax help that or get in the way?
Close! What I'm getting from this is: &lt;name&gt;I WANT THIS&lt;/name&gt; but I only want the text in the middle. Thanks a ton!
sorry, I mean to type ".Value". I'll update my post.
He/She is asking for an editor they can build into their WPF app, not to develop with.
You are a savior my friend!!
Ah, I was assuming something more complex based on your initial LINQ query. For that all you need is: var query = from c in xml.Elements() select c.Element("name").Value; Console.WriteLine(query.SingleOrDefault()); Or you could use XmlDocument instead of XDocument: var doc = new XmlDocument(); doc.Load(@"c:\temp\text.xml"); var node = doc.SelectSingleNode("//report/name/text()"); Console.WriteLine(node); 
Glad to help :) Reading/parsing XML can be tricky. You should definitely read documentation on XDocument if you plan on working with XML often.
That first one works. Thanks a ton for the help!!
Do you have anything for XDocument that you would recommend?
[This might be a little much](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/querying-xml-trees), but if you're going for mastery, I recommend it. Also make sure that you have a really good comprehension of XML and how it's structured beforehand.
Thanks! I'll take a look at that!
A couple of things. Firstly don't use xpath. You can find all of those elements with `#first-name_input` css selector. Secondly you don't need to use the action build for things like this. Simply finding the element and performing `.SendKeys(text)` should work. If that doesn't work you may need to click into the element first before sending text. ``` var element = driver.FindElement(By.cssSelector("#first-name_input"); element.Click(); element.SendKeys(text); ```
That was my first attempt but then it would throw something along the lines of "invisible" or "stale"
If you're getting StaleElementReferenceExceptions something is happening to change the dom between you finding the element and you attempting to send it keys. If you do a simple test of load page &gt; find element &gt; send keys does it work outside of the context of your tests?
I did that too but then I encounter an invisible exception, or it just doesn't type
A stale element generally means that the element's properties have changed somehow since you initialized it and Selenium throws an exception as it no longer 'trusts' it as the same element you initialized. Are you using PageFactory ? If webdriver is saying an element is invisible then it means you are trying to interact with it soon... or too late. Try using a webdriver Wait: Wait.Until(ExpectedConditions.ElementToBeVisible(by(locator) On my phone so that syntax might be slightly off, but you get the idea.
If you call `isDisplayed()` on the element what does it return?
general rule is to never use `async void` unless you really know what you're doing. another general rule is to always append `.ConfigureAwait(false);` to your awaited calls unless you know what you're doing. there's some wonkiness in kicking off async stuff from non-async functions and Main methods can't be async at this time. this is getting fixed in the next version of c# though. anyway, here's your code cleaned up a bit: namespace TestAsyncAwait { using System; using System.Threading.Tasks; public class Program { public static void Main(string[] args) { DoWorkAsync().GetAwaiter().GetResult(); Console.ReadKey(); } private static async Task DoWorkAsync() { for (var i = 0; i &lt; 10; ++i) { var result = await IsEvenAsync(i).ConfigureAwait(false); Console.WriteLine($"{i} is even {result}"); } } private static async Task&lt;bool&gt; IsEvenAsync(int val) { // simulate long-running task await Task.Delay(3000).ConfigureAwait(false); return val % 2 != 0; } } } 
I can't call `isDisplayed()`, but I do have access to `element.Displayed` which I assume is the same thing. For the password input, it returns `false`. This property cannot be set, is it what causes my problems?
I already did this, but I still encounter the problem where it just doesn't type.
Sorry not 100% on the direct selenium api as we've abstracted it pretty far away. `Displayed` isn't a property that can be set. It's selenium telling you whether the element is considered visible in the dom. If you're getting false for something you can visually see it likely means one of a few things: 1) there is something over that element causing it to be "invisible" to selenium 2) there are multiple instances of that element in the dom, and the ones that appear first in the dom are hidden 3) they're off screen and not scrollable. If you inspect the page in a browser and use the mouse over tool do those feels seem to be behind something?
Pro tip there's s Firefox adding that can record actions in selenium format and export them to C# code. It usually requires some tuning after but he s you 90% of the way there. https://addons.mozilla.org/en-US/firefox/addon/selenium-ide/
That doesn't solve my problem
Hi there, If you're seriously looking at keeping this test around for the long term I would suggest it making it as maintainable as possible. It also sounds like you're the only one who is working on this, that may change in the future but from experience I can tell you it is good to have well established patterns for how Selenium tests are written before having other contributors join - this will make everyones lives much less painful. Anyhow, I digress... As the others have mentioned, avoid XPath. I would look at the [Page Object](https://github.com/SeleniumHQ/selenium/wiki/PageObjects) pattern, along with the [Page Factory](https://github.com/SeleniumHQ/selenium/wiki/PageFactory) service, which can be used with the [FindsBy attribute](https://seleniumhq.github.io/selenium/docs/api/dotnet/html/T_OpenQA_Selenium_Support_PageObjects_FindsByAttribute.htm) and POCOs to make models that represent the underlying page. Also if you're looking and having a lot of different test cases for the same form I would suggest looking into the [Object Mother](https://code.tutsplus.com/articles/maintainable-automated-ui-tests--net-35089) pattern aswell. The FindsBy attribute uses the provided selector to dynamically look up the element when you access is (e.g. Element.SendKeys) which should help avoid those StaleElementExceptions (they are a right pain in the ass). Below is a snippet that I hacked up based on my own implementation of a similar scenario, I did it in notepad so apologies for any errors that there may be: public class BasePage { public IWebDriver Driver { get; set; } public BasePage(IWebDriver driver) { Driver = driver; } } public class RegistrationPage : BasePage { [FindsBy(How = How.Id, Using = "feedback-message_div")] public IWebElement UserFeedbackContainer { get;set; } [FindsBy(How = How.Id, Using = "first-name_input")] public IWebElement FirstNameTextbox { get; set; } [FindsBy(How = How.Id, Using = "last-name_input")] public IWebElement LastNameTextbox { get; set; } [FindsBy(How = How.Id, Using = "email_input")] public IWebElement EmailTextbox { get; set; } [FindsBy(How = How.Id, Using = "password_input")] public IWebElement PasswordTextbox { get; set; } [FindsBy(How = How.Id, Using = "submit-form_button")] public IWebElement SubmitButton { get; set; } public RegistrationPage(IWebDriver driver) : base(driver) { // This is required to register the properties with the FindsBy Attribute PageFactory.InitElements(driver, this); } public void Load() { Driver.Navigate().GoToUrl("your-site-url"); } public void FillOutForm(string firstName, string lastName, string email, string password) { // Potentially a Driver.WaitUntilExpectedCondition check here to see if the submit button has loaded/is visible/clickable before proceeding FirstNameTextbox.SendKeys(firstName); LastNameTextbox.SendKeys(lastName); EmailTextbox.SendKeys(email); PasswordTextbox.SendKeys(password); } public void Submit() { SubmitButton.Click(); } public void AssertSuccessMessageShown() { Assert.IsTrue(UserFeedbackContainer.Displayed); Assert.IsTrue(UserFeedbackContainer.HasClass("success")); } } public class RegistrationTests { public IWebDriver Driver { get; set; } [OneTimeSetup] public void InitialSetup() { string path = Path.GetDirectoryName(typeof(DriverCollection&lt;&gt;).Assembly.Location) ?? ""; ChromeDriverService chromeDriverService = ChromeDriverService.CreateDefaultService(path); chromeDriverService.HideCommandPromptWindow = true; Driver = new EventFiringWebDriver(new ChromeDriver(chromeDriverService)); } [TestCase("first name", "last name", "email address", "password")] public void NewUser_CanRegister_Successfully(string firstName, string lastName, string email, string password) { // Arrange RegistrationPage registrationPage = new RegistrationPage(Driver); registrationPage.Load(); // Act registrationPage.FillOutForm(firstName, lastName, email, password); registrationPage.Submit(); // Assert registrationPage.AssertSuccessMessageShown(); } } public static class WebElementExtensions { public static string Classes(this IWebElement element) { return element.GetAttribute("class"); } public static bool HasClass(this IWebElement element, string @class) { return element.Classes().Split(' ').Any(c =&gt; c == @class); } } NuGet packages you will need: &lt;package id="NUnit" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Console" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.ConsoleRunner" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Extension.NUnitProjectLoader" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Extension.NUnitV2Driver" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Extension.NUnitV2ResultWriter" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Extension.TeamCityEventListener" version="1.0.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Extension.VSProjectLoader" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit.Runners" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="NUnit3TestAdapter" version="3.4.1" targetFramework="net45" /&gt; &lt;package id="PostSharp" version="4.3.23" targetFramework="net45" /&gt; &lt;package id="PostSharp.Patterns.Common" version="4.3.23" targetFramework="net45" /&gt; &lt;package id="PostSharp.Patterns.Model" version="4.3.23" targetFramework="net45" /&gt; &lt;package id="Selenium.Support" version="3.4.0" targetFramework="net45" /&gt; &lt;package id="Selenium.WebDriver" version="3.4.0" targetFramework="net45" /&gt; &lt;package id="Selenium.WebDriver.ChromeDriver" version="2.29.0" targetFramework="net45" /&gt; &lt;package id="Selenium.WebDriver.Extensions" version="3.0.1" targetFramework="net45" /&gt; You can replace the NUnit ones with your favourite test library, post sharp is brought in by one of the selenium package. I hope this gives you a good starting point.
&gt; var elements = driver.FindElements(By.Id("password_input")).Count If you do something like the above, How many elements do you get back??? Ps. you may want to call the ToList() before the Count
1
It seems weird that you have to append code *unless* you know what you're doing. Why didn't they make that the default so that the suggestion is "append `ConfigureAwait(true)` but only if you know what you're doing"?
Use a Datagrid and set the xml file as the source.
The screenshot looks like winforms, so DataGridView in that case. The other option is to read the XML file into a DataTable then set the DataGridView's DataSource equal to the DataTable.
Make a github and figure out how to get your code on there, then you can post it here or to c# discord channels. If nothing else, you'll learn how Git works. You probably won't get much feedback just leaving your repo out there in the open unless you specifically get people to go to it with the intention of submitting issues or pull requests. The link for the C# discord is out there somewhere, but they are pretty active and will definitely help you out
* Set =&gt; HashSet * You still get squiggles without ReSharper for syntax issues * Highlighting the open file automatically is easy to google, resharper gives shortcuts for this too * We don't read code documentation in HTML very often, its just as easy to open the github and read the code or to reference the project and look in intellisense. * It isn't the dark side. .NET Core is more open than Java.
The author clearly did not spend very much effort and time in actually learning the .NET eco system.
Depends on the level of challenge, I try to do these too. I wrote the core part of a back tracking regex engine one time, that was the interesting part. Never did the parser half... Although, now that I've mentioned it I kind of want to. It's tough to come up with interesting examples that you can get into without making up a use case.
Read xml elements one by one in loop. Create new row and add created columns from xml to row. Add rows to table and edit your table look directly in design or .css
So if I learn c# I would be able to apply to .net jobs? 
why not just use xPath foreach (var name in Xdoc.XPathSelectElements("report/name").Select(n =&gt; n.Value)) { Console.WriteLine(name); }
People use the two terms interchangeably. .NET is the framework that provides a series of classes and functions for performing common tasks. e.g.: opening and saving files, manipulating data, interacting with the operating system (and LOTS more). C# and VB.net are both languages that you can use to access the .NET framework functionality. Be careful if you see a job ad posted for .NET - you may need to know C#, VB.net or F#... sometimes they won't care. However if you know one .NET language, it's easy enough to learn the others. 
I hate to be this person but if you want to learn programming/(software engineering), you must learn to search for the info. Here's an [answer](https://stackoverflow.com/a/2724872) found by a Google query using the same wording of your question. Basically, C# is a programming language while .NET is the framework (library + runtime) on which C# (usually) runs. You can develop on .NET using languages different than C# such as Visual Basic and F#, but C# is the most popular language in the .NET world. Conversely, you can (at least theoretically) run C# on a different framework. Mono is a framework whose purpose is (was?) to be .NET compatible. Keep in mind when the Stack Overflow answer above mentions .NET, it means .NET Framework. The answer was written before .NET Core and .NET Standard were introduced. But that's a different confusing story.
For someone who uses Redis a lot, that was a very interesting read.
This is from 2011.
It's probably like asking if you learn Arabic can you apply for jobs in Middle East. Compared to someone who don't understand anything about C#, someone capable of understanding C# is definitely preferable for .NET jobs. But those .NET jobs also require multitude of other skills. But don't worry too much about what you're going to need months from now. Just follow the links in the sidebar and get started right away. As you learn and write your own apps, you'd feel what field you want to work in, and the necessary skills required. 
Thanks for the cleaned up code. Well it seems next item on my todo list is to read up on the await/async functionality. I just needed to get this code idea to work for the program I am working on now.
A+++ answer so annoying when you Google a question and top hit is just "Google it". You gave a link to more information + gave answer in your post.
Maybe use a hashset instead? I think it makes more sense than an array, since it handles sparsity well, and it can grow as needed. 
Not sure if that is what you meant, but you give the impression the framework itself is written in C#. The CLI/CLR is written in C++/C/Assembly 
If you are using a DOM parser, you can probably get the total number of elements up front if the XML structure is simple enough.
It returns a `Task` that will complete after the specified delay, which can be awaited or continued by another asynchronous method. You would use it like public async Task Foo() { Debug.Print("Immediately"); await Delay(1000); Debug.Print("1000ms later"); } or in the old TPL style public void Foo() { Debug.Print("Immediately"); Delay(1000).ContinueWith(t =&gt; Debug.Print("1000ms later")); } However, the framework comes with the built-in [`Task.Delay`](https://msdn.microsoft.com/en-us/library/system.threading.tasks.task.delay.aspx) method that does the same, so you don't actually need this method.
C# compiles down to CLR which in turn compiles down to C++/C which in turn compiles down to Assembler The .Net framework is the collection of libraries that are used by C# to do common tasks, above and beyond the C# language. *I'm not getting into the new .Net direction with standard and core, but they're similar conceptually* C# can be written without the framework, but you'd be duplicating work done by the supported framework. C# and VB.Net are siblings, with similar syntax, and compile to CLR. F# is syntactically different to C# and VB.Net and compiles to CLR IronPython and IronRuby are cousins, which compile to the DLR, which then compiles to CLR. **Programming is not easy**
No, in any part of compiling there isn't c or c++. Programs compile into CIL and when you run them CLR(it's not a language) takes control and calls JIT to create assemblies. 
&gt;C# compiles down to CLR which in turn compiles down to C++/C which in turn compiles down to Assembler C# typically compiles into *(Common) Intermediate Language* which is then compiled Just In Time into machine instructions by the Common Language Runtime. C++ doesn't come into play here.
I disagree with the previous comment, the default of queuing continuations on the original synchronization context (which is what `ConfigureAwait(false)` disables) is the safer option for most scenarios. Using `ConfigureAwait(false)` everywhere would break GUI applications in particular. 
https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2 https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch
Sorry, I had a head fart, I think I got fridayed by the fact that the CLR was written in C++/C and assembly, but you're absolutely right, it doesn't compile down to it, my bad.
When you have too much information sometimes it gets mixed and you start saying random shit, it happens even to best of us :D
Thanks, i had completely forgotten Switch statements existed. I guess it's also time to learn generic.dictionary . 
banana
Okay so I caved and got 17... Now the issue is that its very slow to load to View so I'm trying to work out how I can indicate to the user that its busy loading.
lol also, he :P
Removed: Rule 7. Content is very old/outdated, and reads a lot like ranting/complaining/insulting. Just stirring the pot.
I'm not sure how much programming you've done but a dictionary might be a good use here. Put English as they key and Russian? (Im guessing) as the value, or vice versa. Then just search the dictionary for the users input
/u/codetrack4net Wanted to say thanks for this. I had the usual experience of profiling and discovering that a performance hit wasn't even close to the section of code I thought it was in!
i've been at c# for about 3(or so maybe less) months now and yeah i was gonna try doing that after i learned how. (thanks again to tweq for alerting me to these two links)
You're welcome, thanks for sharing ! 
Here's how I usually handle this: DataTable myTable = new DataTable(); DataColumn col; col = new DataColumn("label1"); myTable.Columns.Add(col); . . . For each(Var item in items) { DataRow row = myTable.NewRow(); . (Fill in each field) . . myTable.Rows.Add(row); }
c# is a language. .net is a Framework.
&gt; I'm a newbie getting started and looking at learning c# but when looking at career possibilities some say c# and the others say .net Don't worry about it. It will take you years before becoming qualified enough for a related job.
I really like Plurisight courses. The C# learning path is pretty good. I feel like I have a good base understanding of the topics but I still watch some of the videos to learn more in depth. I really like when they cover specific technologies that I havent used before MVVM, Asp Core.
I tried to use Selenium earlier this year. I used the Firefox add-in to generate some tests. They worked fine in Firefox, but I had significant timing issues when I saved them as c# tests and ran them. It probably wouldn't take long to record a test for just the part that is giving you issues. If the plug-in test runner doesn't exhibit the same behavior, it might give you an idea about whats going wrong.
You want a DO WHILE statement that checks the value of the boolean https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/do
Don't use that Firefox add-on. It's not maintained anymore and if you go looking for help for it later (within the Selenium community) you'll largely just get pointed toward using actual Selenium with bindings. I strongly suggest you do what was suggested [here](https://www.reddit.com/r/csharp/comments/6n4qfm/help_selenium_is_killing_me/dk6x8x5/) and create page objects you can interact with in order to create maintainable tests. You can also check out the Selenium courses on Pluralsight by John Sonmez, they go into detail about how to create a framework with some really handy features and explain things step by step from the Selenium perspective. Regarding the StaleElementException and ElementNotVisibleException, it sounds like the page is updating content dynamically after load which is trick to deal with. The Wait.Until recommended elsewhere in the thread will generally work for this problem.
https://www.reddit.com/r/dailyprogrammer/ may be up your alley
Perhaps they're Roslyn analyzers/refactorings. I stumbled upon these the other day, haven't tested them though. Perhaps they're in here: https://github.com/JosefPihrt/Roslynator
Wait, I used such things at least more than a year.
Thanks. It very well could be. I'll take a look.
You need to enable the Add NuGet fix at Tools/Options/Text Editor/C#/Advanced. Note: it downloads an index (~10MB) of top NuGet packages, and so may take a few minutes to start working after enabling.
This is how is it in [current VS2017 by default](https://lh3.googleusercontent.com/uwBrHJeBm8fNo48vuvgPPjfKS-bMZjHnnDYNkQYw_nwVKrokBi-8JJPaEvWfAV_nSSSOzAufPpKUK2Dz62aV0rY8JoOY8IBGgKA6GR8NeqpVbEfAUu7doZBqiFYPaaVyx66U9xiNzZWkQ-Ulm7UWDf38y84On4Py_S9DH3NxtKox0ua64Yy7BCTifvAaijSlyxEnSibVp_CRvcow-NqDC8TwwLcYy_4lg25a2_pi8D77J5snJLAvqzTWdITtU6GWM5gmmO-LvhzNni8UUAydUgKA0ZZTCBltvQfI1MbpfUsnLpYVovUc6dAIjd2MS6TvDSJbozqmTWDerOMWDp3IsTDzOvWiZ2Jel5UMENLUPwIc7uzyWqFxS8GJ5AEQPyxWRCzoNTKFvsO2ZSIz0a_FHQO14FIhdghFvsaagrDlSR04lxwIjVq_VaCkXtjxP8lNpM7x3p6P63X_ud4CXxH1cfb9PNApxlXyur7C2o7zb_kVteGfDALTkwjESeWELr2kBMiZaodM8yRlTscXwJLoyyk3mk73R3u7CDnosdjbPenR1sqZ9u1vounWWS_Ib5_EWx0leJ12DMiCOB3QldQtFje4RH05T0f68U2QntFhRxYsC3GIG85qLcv0ig=w892-h219-no)
That is just suggestions for packages by class or namespace name. It's not required for references already added.
YOURXML.SelectSingleNode("report/name").InnerText;
I assume you are talking about the "Suggest usings for types in NuGet packages" option? I did actually enable that option and it has allowed me to get quick actions for adding packages (which is super nice in and of itself after using resharper for a number of years). I am still missing the code generation quick actions unfortunately. 
There is a data structure literally called Dictionary, research it. I'm strongly advising you to learn data structures before starting with projects. 
I do have these quick actions actually. Maybe things have been shuffled around since Build and the ones I'm looking for are just not where I am expecting them to be. Specifically: when the class/struct is highlighted, you can generate an empty constructor through the quick action menu. Also, when you are in the constructor and typing in parameters, you can bring up quick action to create a property from that parameter name/type.
That appears if your cursor is placed at wrong text. If it has name of some class it will show using.
Is workingwith 5 characters long? 0,4 is a 5 long substring, not 4. EDIT: whoops, you already provided the string. I'll look at it some more.
I'm away from my computer otherwise I would take a screenshot. It could be that simple, but I was trying to get this to work last night and what I tried wasn't bringing those up. 
My mistake. The workingwith string is 6 characters wrong (in this case the exact string is "MSMQ&amp;&amp;"
The second parameter of `String.Substring` is the length, not a second index.
Where's `stringList` being initialized?
Not shown, but stringList is being initialized with the following: "List&lt;string&gt; stringList= new List&lt;string&gt;"
Are you sure that it is `Substring` that is the issue and not `stringList[i]`?
What kind of issue could it be? In this case stringList[i] is an index of 0, so it should be setting the first index in the list, correct?
You can only index items of a `List&lt;T&gt;` if you have added them before. `list[0]` of a list with 0 items will fail.
A lot of these stretch the definition of the term "book".
THANK YOU! I forgot you can't set the value of a list that way, and you have to use 'list.add'
Sorry, haven't worked with strings in c# in awhile, I went ahead and ran some code taking the (0, 4) substring of "MSMQ&amp;&amp;" and it prints "MSMQ" without errors. Are you sure that the second argument is 4 when you debug?
You want `stringList.Add()` rather than using an index. Collections are not indexed until you actually start adding items.
Sorry, missed that. A lot of the other fixes are specific to the "15.3" update which is still in the preview channel, they have been propagated to the release channel yet. Go to https://www.visualstudio.com/preview to install (can be installed alongside the release version).
professional .net/fullstack dev for 10+ years so can help no doubt. drop me a PM and we will schedule a shared desktop session in?
Is stringlist a list or an array? If it's a list, would .Add work? If it's an array, you would be getting IndexOutOfRangeException instead, so I would guess it is in fact a list. EDIT: making stringlist an array with more than 1 element allows your code to run. Try using an array instead of a list?
Wouldn't it be more effective you use regex? Regex r = new Regex("(.+)&amp;&amp;") 
Solved! Thanks to /u/tweq for reminding me that i'm an idiot. Thank you to everyone who tried to help!
Made some possible modifications to the first part of your code, and this should run. string workingwith = "MSMQ&amp;&amp;"; List&lt;int&gt; indexOfAnd = new List&lt;int&gt;(); string[] stringList = new string[2]; for (var i = 0; i &lt;= workingwith.Count(x =&gt; x == '&amp;') / 2; i++) { for (var s = workingwith.IndexOf("&amp;&amp;"); s &gt; -1; s = workingwith.IndexOf("&amp;&amp;", s + 1)) { indexOfAnd.Add(s); } if (indexOfAnd[i] &gt; 0) { stringList[i] = (workingwith.ToLower().Substring(0, indexOfAnd[i])); // error here if (i &gt; 0) { stringList[i] = workingwith.ToLower().Substring(indexOfAnd[i - 1], indexOfAnd[i] - indexOfAnd[i - 1]); } } else { break; } } Everything is fine in the code you showed, the only problem I could find was that stringList should be an array, or you should use .Add instead of stringList[i] = "".
Check out using Serilog and Seq. They both go hand in hand. Serilog provides structured logging for your applications, while Seq consumes those logs and provides an easy way to manage those logs. https://getseq.net/ https://serilog.net/
When I was designing the SDK, I was worried that attributes were mainly for metadata, used by external programs for things like client generation &amp; other tasks. In this situation, there are so many top-level [records](http://en.uesp.net/wiki/Tes5Mod:Mod_File_Format) (some which a very [complex](http://en.uesp.net/wiki/Tes5Mod:Mod_File_Format/NPC)) that I wanted a way to make their class representation as easy as possible to implement. This leads me to have classes that are similar to this: [SubrecordOrder(Game.Skyrim, nameof(SomeProperty)] [SubrecordOrder(Game.Fallout4, nameof(SomeProperty), nameof(SomeOtherProperty))] public class ABCD : Record { [EFGH] // Subrecord signature. public UInt32 SomeProperty { get; set; } // The following attribute is not needed if the subrecord is required for all games. [SubrecordPresence( new string[]{ Game.Fallout4 }, Presence.Optional)]s [IJKL] [ZeroTerminatedString] // For validation purposes. public string SomeOtherProperty { get; set; } internal bool HasCachedAttributes { get; internal set; } = false; public ABCD(RecordHeader header, byte[] rawData] : base(header, rawData) { // Normally nothing here.} } // Subrecords are represented with classes; most have just data fields // but some have subrecords too. ALL of them are identified with // an attribute. If they don't have data that is just a primitive datatype, // they have a corresponding class. In my opinion, this offers a lot of data in a relatively compact form. I think I'll add a private boolean property (`IsCached` or something?). Next time a record needs to be instantiated, the SDK will test if attribute info is cached; if it is, it gets attribute data from a dictionary or something. If it isn't, it'll reflect for attributes. 
Yeah, there's even a book "Moving to Microsoft® Visual Studio® 2010" which is all about migrating from older Visual Studio versions (2003, 2005, 2008) to 2010 and taking advantage of its new features. Still, might be some resources/books in there that could be useful to some. EDIT: [lol _"Programming Windows® Phone 7 (Special Excerpt 2)"_](http://s2.quickmeme.com/img/49/498794749f1ab35f1868fc509391c6f875e514ae6857d2382deee16176442a1e.jpg) EDITx2: Geez. Windows Phone 7 Series seems like so long ago, but it's only been 5-7 years. EDITx3: Oi. How is it that such a shitty name (Windows Phone 7 Series) can be so memorable.
[Hey, just change it to a `Dictionary&lt;int, string&gt;` instead and then you can!](http://i1.kym-cdn.com/entries/icons/facebook/000/022/266/brain.jpg) /s just in case
Where I work, we use the Log4Net library for logging purposes and Splunk Enterprise for managing and analysis of logs. Its a very good combination and is very helpful in tracking down issues. You should check them out. 
Scott Allen and Shawn Wildermuth's classes on PS are top notch and helped me get up-to-speed on the latest tech even while it was still in preview. You can go deeper into design patterns (like domain driven design), etc. too. I also have a Lynda.com subscription which I think is pretty good but not as deep for C# and .NET. They seem to focus more more around design and marketing and stuff. I hear good things about CBT Nuggets from colleges in IT but haven't used it. For design, I highly recommend The Science of Great UI by Mark Miller at DevIQ. That one was worth the $99. At least for me PS was much better use of time than random YouTube or Channel9 videos and what have you. Cheers. 
https://www.splunk.com/ Every team I've worked with in the past 5 years uses this. It's not confined to specific applications or platforms and is completely searchable. Being able to instantly search all of your servers for specific events and get back an interactive report is worth its weight in gold. Creating log entries is dead simple. They have a pretty generous trial program but I have no idea what the final cost would be. 
Do this. You'll also get the added benefit of being a customer of one of the best FOSS citizens of the .NET world, the wonderful /u/nblumhardt
I see, thanks! They mentioned .Net 4 didn't support Task.Delay?
Just use &amp;&amp; to concatenate the two conditions like an "if" condition.
Don't you mean Scott Allen? Paul Allen co-founded Microsoft. Scott Allen talks too slowly for my liking. I tried some of his ASP.Net courses and felt he could pack the actual content of a 10 hour course into about an hour. To OP, don't put your faith in others, you don't have experience yet, but the value of experience is knowing what works and what doesn't. To be able to do that you need to have experienced both sides. I guess I'm saying just dive in and don't fear learning the wrong thing just be open to it.
Sorry seems my question needed a better explanation, so please read again.
Yes, thank you! Fixed. I listen to Scott's classes at like 1.5x for that reason. You're right though, the best thing is jump in and start doing. 
&gt; People use the two terms interchangeably. This. While the other answers are correct (that C# is a language and .NET is the application programming framework and runtime), when you look at a lot of job ads, these terms ARE used interchangeably. 
Take each list and select just the primary keys from each category. You then have a list of ints or something similar for each category. Depending on if you are trying to find matches or non matches you would use exclude (find differences) or intersect (matches). 
Why aren't you using the user input in the filter? I see no reason for a switch statement. filteredList.AddRange(mainList.Where(x =&gt; x.title.Contains(titleTextBox.Text)).Where(x =&gt; x.show == showCheckBox.Checked)); If you mean you want to build the query based upon whether the user provides input in a certain field just keep adding criteria to the IEnumerable as needed; the query isn't actually executed until some action actually needs the real data. IEnumerable myQuery = mainList; if(string.IsNullOrEmpty(titleTextBox.Text) == false) { myQuery = myQuery.Where(x =&gt; x.title.Contains(titleTextBox.Text); } myQuery = myQuery.Where(x =&gt; x.show == showCheckBox.Checked) filteredList.AddRange(myQuery);
The ELK stack does everything splunk does, mostly better, and way cheaper (not quite free, but close)
&gt;Now if i have to update the filters based on what filter value he selects to change, that would make my logic quite difficult. (Major switch statement) I'm still not sure what exactly you're looking for here. Perhaps you could post an example of the kind of logic you wish to avoid?
Are regular expressions in C# not greedy by default? If they are this won't work as written, as `.+` will gulp up the entire input. Edit: You probably want something like `Regex("(.+?)&amp;&amp;")`
This is more like a yard sale that puts the stuff it couldn't sell out at the curb with a free sign.
Seq really has no competition when it comes to ease of use and installation. Pricing is also very reasonable (maybe even cheap).
&gt; Hey guys, I use the Sieve of Eratosthenes from time to time in my codes I have to ask - what exactly do you do "from time to time" that requires Sieve of Erathosthenes?!
Ahhh this is it! Thank you. It looks like the features I was looking for are in the 15.3 version. 
Still looks like a job for &amp;&amp;. How does that not work for your needs?
Delegates are your friends. You probably want to assign your condition(s) to a variable or two of type Func&lt;T, bool&gt;, where T is whatever object type is contained by mainList. Then, filtering your list becomes some variation on mainList.Where(funcVar1).Where(funcVar2) It sounds like you're making this much too difficult, otherwise.
Sorry, maybe I should have been more clear. The HTML table is a web table online, and I am able to grab that data using the webdriver by getting its xpath and for looping through it, and getting text of each cell. no primary keys for that one...
omitting it is relatively fine, especially if you're working in a gui thread where you actually need your continuations to come back to the original context as /u/tweq states. i think it's safe to say that people rarely work with gui apps these days though, especially when learning to code. either you're starting in console apps or you're making a lot of asp.net web services it seems. setting it to false can sometimes offer minor performance improvements and can avoid a particular deadlock scenario, so i just default to putting it there. i also explicitly append `ConfigureAwait(true)` when i'm working in a wpf app or something. either way, i'm not an expert and most of my reasoning is based on this post: https://msdn.microsoft.com/en-us/magazine/jj991977.aspx so, as with all things on the internet, take my suggestions with a grain of salt.
I think you hit the nail on the head; pretty sure OP just wants to build the filter criteria dynamically.
Console and (newer) ASP.NET Core applications don't have a synchronization context in the first place, so `ConfigureAwait(false)` doesn't make a difference there. And `ConfigureAwait(true)` cannot restore a synchronization context if it was lost before. So in those cases it doesn't actually do anything in practice, although I suppose it documents intent. That's not to say that you shouldn't use `ConfigureAwait(false)`, I use it a lot as well. But in my opinion the general approach should be the other way around: don't touch it and stick with the default unless you know you don't need the synchronization context. It does avoid certain deadlocks, but the lesson from those should be not to mix async and sync code if at all possible, rather than sticking `ConfigureAwait(false)` on everything.
[Project Euler](https://projecteuler.net/index.php) is pretty good
makes sense. thanks for the information.
We use exceptionless and it works quite well for us. Async logging, mongodb back end, and an easy to use client.
I prefer to not use the browser plugin, but I had problems with the tests not waiting for things when the add-in was able to do it. After searching, I found stuff that implied my problem might be the web driver (not certain of the name) and I gave up not long after. I'll try to find this post if I try again :)
Thanks, I had issues last time I tried using selenium. I'll try to find this post if I try again :)
This looks helpful. I will definitely take a look at this!
Wow. Exactly what I'm looking for. Thanks.
Thank you! I was looking for some Azure reads. Cheers!
I think you're making things more complicated than they need to be, with how you are trying to break everything up into separate user controls for each view model. First, a bit of advice: Use a third-party component to help with the nitty-gritty of MVVM. Building view models is much easier when you are using something like [Prism](https://msdn.microsoft.com/en-us/library/gg430857(v=pandp.40).aspx). Be warned, this answer might get a little lengthy, and I won't cover everything, leaving some stuff up to you to research as well as completing the classes and implementation. What I would do when starting from the ground up is think of how a game of bowling is played and scored. Each game of bowling has X number of players. Each player has a set of frames, with each frame consisting of two rolls. From there, create view model classes from the lowest level to the highest. public enum ScoreEnum { One = 1, Two, Three, Four, Five, Six, Seven, Eight, Nine, Strike, Spare } public sealed class FrameViewModel : BindableBase { ScoreEnum _firstRoll; ScoreEnum _secondRoll; public FrameViewModel(PlayerViewModel player) { Player = player; } PlayerViewModel Player{ get; } public string FrameScore { get { return CalculateFrameScore(); } } public ScoreEnum FirstRoll { get { return _firstRoll; } set { SetProperty(ref _firstRoll, value); } } public ScoreEnum SecondRoll { get { return _secondRoll; } set { SetProperty(ref _secondRoll, value); } } string CalculateFrameScore() { /* return calculated score from FirstRoll, SecondRoll, or if a special roll (strike or spare), get next (1) or (2) frame scores from the Player. If the look-ahead scores aren't available, return string.Empty */} } public sealed class PlayerViewModel : BindableBase { public PlayerViewModel() { /* stuff here */ } public List&lt;FrameViewModel&gt; Frames { get; } = new List&lt;FrameViewModel&gt;(); // Other stuff in here } You will need a ValueConverter for converting the ScoreEnum from an enum value to an actual value for the UI to use. public sealed class ScoreValueConverter : IValueConverter { public object Convert(object value, Type targetType, object parameter, CultureInfo culture) { if (value == null) return false; ScoreEnum score = (ScoreEnum)value; if (score == ScoreEnum.Strike) return "X"; if (score == ScoreEnum.Spare) return "\"; return ((int)score).ToString(); } } After creating all of the necessary view models, then I would go on and figure out the views and how to wire them up according to the logic needed. I will say that you don't need to have that many user controls. I would take a look at simple controls such as a ListBox and learn how to override their templates/item templates and/or changing the ItemsPanel, etc to get them to show how you want. An example of this would be to override the itemtemplate to be a ListBox containing a template for a UniformGrid with two columns(one for each of the rolls). Use data triggers to change the item template of the last frame to a UniformGrid with three columns. Each ListBoxItem will be a PlayerViewModel of the topmost ListBox, with the inner ListBoxItems being a FrameViewModel type. Sorry I can't be of much more help, about to leave work and going on vacation for the next week! If you want examples of what I just talked about, I can try and whip something up after next week. Or I can clone the repo and do some example work in there for you to look at later.
Walking through step by step how to build stuff is extremely helpful. I would highly recommend it as a goto for learning new tech, or even brushing up on current tech.
Thanks, I'll check out Mark Miller's course, btw I'm about to complete Intermediate courses (currently on Defensive Coding - Deborah Kurata), I enjoy PS too!
Thank you for the motivation! ✌
I'll try building a full desktop app! 👍
Thanks! I'm taking the PS path and after completing about 30-35 hours, I feel pretty confident too! 👍
I tried one of the earlier betas and found it lacking. But I love webstorm and intellij, guess this means I'll have to get back to my side project this weekend to test the rc ;)
Not all of them are great. But there are still useful books here people. And they are free. 
Should have added, response comes back with response.IsSucessStatusCode == false.
I get this error when trying this (.Net 4.5.2) Severity Code Description Project File Line Suppression State Error CS1061 'IEnumerable' does not contain a definition for 'Where' and no extension method 'Where' accepting a first argument of type 'IEnumerable' could be found (are you missing a using directive or an assembly reference?) TestListFilter \TestListFilter\Program.cs 20 Active 
Parse the output from `ipconfig`?
Install a program called Fiddler. It keeps track of all network calls being made by your computer with lost of detailed information. You can use it to see what kind of error is being returned by your calls.
I don't think you fully understand my problem here. The yaw and pitch are constantly being updated to the mouse position. I need that to not happen when a certain button is down. Here's the full script so it's a bit more clear: public class ThirdPersonCamera : MonoBehaviour { private float yaw; private float pitch; private Player player; private bool isZooming; //Used for controller input to calculate if the right stick should zoom or move void Awake() { player = ReInput.players.GetPlayer(playerId); } void Start() { if (lockCursor) { Cursor.lockState = CursorLockMode.Locked; Cursor.visible = false; } } void Update() { //MoveToTarget(); //CheckCollisions(); } void LateUpdate() { ZoomOnTargetWithScroll(ref distanceFromTarget, distanceSnapRate, DistanceFromTargetMin, DistanceFromTargetMax, zoomSmoothTime); isZooming = player.GetButton("JoyZoomCondition"); MoveToTarget(); } void MoveToTarget() { yaw += player.GetAxisRaw("Mouse X") * mouseSens; pitch -= player.GetAxisRaw("Mouse Y") * mouseSens; pitch = Mathf.Clamp(pitch, pitchMinMax.x, pitchMinMax.y); var targetRot = new Vector3(pitch, yaw); if (isZooming) { //Keep camera in same place but do not allow movement of it until not zooming anymore } transform.eulerAngles = currentRot; //float targetHeight; &lt;- Use when crouching to properly change camera targetPos = target.position - transform.forward * distanceFromTarget; Vector3 collisionTargetPoint = target.position; Debug.DrawLine(targetPos, collisionTargetPoint, Color.blue); HandleCameraCollision(collisionTargetPoint, ref targetPos); transform.position = Vector3.Lerp(transform.position, targetPos, cameraMoveSmoothTime); currentRot = Vector3.SmoothDamp(currentRot, targetRot, ref rotSmoothVel, rotSmoothTime); } void ZoomOnTargetWithScroll(ref float distanceFromTarget, float zoomSnapAmount, float clampMin, float clampMax, float zoomSmoothTime) { var scrollWheel = player.GetAxisRaw("MouseScroll"); if (isZooming) { print("Zooming"); } if (scrollWheel &lt; 0 || isZooming &amp;&amp; player.GetAxisRaw("Mouse Y") &lt; 0) { distanceFromTarget = Mathf.Lerp(distanceFromTarget, (distanceFromTarget + distanceSnapRate), zoomSmoothTime); } if (scrollWheel &gt; 0 || isZooming &amp;&amp; player.GetAxisRaw("Mouse Y") &gt; 0) { distanceFromTarget = Mathf.Lerp(distanceFromTarget, (distanceFromTarget - distanceSnapRate), zoomSmoothTime); } distanceFromTarget = Mathf.Clamp(distanceFromTarget, DistanceFromTargetMin, DistanceFromTargetMax); } }
Actually yes. But, after a lot of researching, I figured out a way to have an event system use one Callback delegate and a Dictionary containing an IList to do the trick. Thank you though. :)
Well, I originally was just doing the basic way of handling events (i.e. myEvent += myMethod/myEvent -= myMethod) but I felt that over time, I would mix up some things and cause a headache. So I've been researching it a bit and figured out how to use a single delegate as a Callback, and then have a Dictionary with an IList to store it all.
I've got Postman, Is that similar to Fiddler? The api itself works without issue, just making the call only via this web app seems to return 404.
Sorry Im on mobile, but following should work: .Where(x=&gt; x.title.Contains("....") &amp;&amp; x.show) Edit: also you can use x.Show or !x.show. No need to compare to true or false.
Changing the IEnumerable to IEnumerable&lt;ListItem&gt; myQuery = mainList; Fixed the error.
Ok, then a bool variable set in MouseDown, and reset in MouseUp then check the bool's state, which is almost what you are doing. I am going to assume that the "isZooming" is correctly saying True or False when you need it to. If it is, then change the code to the following; void ZoomOnTargetWithScroll(ref float distanceFromTarget, float zoomSnapAmount, float clampMin, float clampMax, float zoomSmoothTime) { var scrollWheel = player.GetAxisRaw("MouseScroll"); if (!isZooming) { if (scrollWheel &lt; 0 || isZooming &amp;&amp; player.GetAxisRaw("Mouse Y") &lt; 0) { distanceFromTarget = Mathf.Lerp(distanceFromTarget, (distanceFromTarget + distanceSnapRate), zoomSmoothTime); } if (scrollWheel &gt; 0 || isZooming &amp;&amp; player.GetAxisRaw("Mouse Y") &gt; 0) { distanceFromTarget = Mathf.Lerp(distanceFromTarget, (distanceFromTarget - distanceSnapRate), zoomSmoothTime); } distanceFromTarget = Mathf.Clamp(distanceFromTarget, DistanceFromTargetMin, DistanceFromTargetMax); } } 
I knew it was something simple and i was only being stupid, For whatever reason a section of the path was missing, I got curious why I was getting a 404 when that should not even be a valid response. Thanks for helping me discover that! 
Glad to have been of help!
I tried Rider when it had it's first public preview build. It was rough. I just tried it again a few weeks ago after a colleague said he was using it as his daily driver. I was pleasantly surprised with the quality.
If your string is always going to look like "MSMQ&amp;&amp;", meaning the target string is always going to be the first part, you could just use an overload for .Split(): var myString = "MSMQ&amp;&amp;someotherstuff"; var msmqPart = myString.Split(new string[] { "&amp;&amp;" }, StringSplitOptions.None).First() Console.WriteLine(msmqPart); Which gives you "MSMQ" as output.
[Companion Content from Microsoft Official Courseware](https://www.microsoft.com/en-us/learning/companion-moc.aspx) also has a lot of good C# material. This is the content that you use in addition to the books you get when taking an official Microsoft class. Need a virtual machine to test? [Microsoft Virtual Academy](https://mva.microsoft.com/) to the rescue! I'm not saying anything in that link is bad but these two are just other resources. These just aren't for C# either. 
Postman lets you compose API calls and view their responses, but Fiddler allows you to inspect ~~network~~ HTTP/HTTPS traffic so you can see, for instance, the body of HTTP requests and responses. It's an amazing tool for working with APIs.
Cool, I will check that out then.
Well, compile-time versus runtime is what I am concerned about. I suppose I should just handle ALL the attribute metadata at init. There are various issues with the format I have to grapple with. A record's subrecord property may not be applicable to some games. It may be optional. It may not have a consistent data field type. It could be compressed, etc. That is why I decided attributes might be the most compact way to describe this information. I could offload this information to JSON or something, but I have some reasons not to. As for clarity, I think it is pretty clear to people that work with the plugin data in its raw form. I will build another layer on top that abstracts plugin data further, which I intend most users to depend on. Opinion? I appreciate the feedback.
Get a SSD :) VS is not the fastest software but for all of the things it does it's worth the longer load time. Other full on ides are slower and crappier 
Is the HTML well formed? When I did this against an oracle query tool in the past it didn't create well formed HTML.
All of the C# stack is free, and does run on many platforms (Android, iOS, Windows, Tizen, Unix). The development experience is much better on Windows however, where the full Visual Studio is supported. I use Visual Studio Community Edition, and it's got much more to it than Visual Studio for Mac, last I checked. You can host on Linux or Windows. C# is more strict than JavaScript. C# likes to help you out more - e.g. you can write things in JS that won't work, but JS will still run. C# may not compile, to prevent you wasting your time, or give you a warning that you may be doing something unintended. I don't really know if that's just Visual Studio however. I use both a lot, I prefer C# largely due to this. It's more strict, but it tries harder to help you. You'll probably find biased responses here though. If JavaScript works for what you need then it works. In terms of employability, it could help to learn more languages. SQL Server, which rounds out the Microsoft stack for web dev, is currently in preview for Linux also.
Used Sandcastle a few years ago, worked well. https://github.com/EWSoftware/SHFB
Oh trust me, this is running on an SSD :) I don't have a single mechanical drive on this desktop.
There's also [sharpDox](https://github.com/geaz/sharpDox) and [docFx](https://dotnet.github.io/docfx/tutorial/docfx_getting_started.html)
If you feel attributes are sufficiently and *properly* expressive for what you are trying to have the plugin writers describe, then go for it.
You can try this free android app I made when I was in this exact situation &gt; https://play.google.com/store/apps/details?id=com.alansa.ideabag2
Vulkan is the newest, but DirectX and OpenGL are still very well supported. For GPGPU purposes, you're going to want OpenGL compute shaders, DirectCompute, or OpenCL.
If it's for web API / Mvc you can use Swashbuckler to create swagger documentation
Sorry, I was thinking along the lines of cudafy. A library that would let me run c# on the GPU. I wonder if Vulkan and VulkanSharp would fit the bill. 
Or NSwag, which has much more functionality.
Lots of Azure material. Thanks!
There are no library which allow you run c# on GPU. You can use C# to have access to GPU, but it necessary to write on shaders/CUDA/C languages.
As much as I love R#, I think this is unlikely to rival Visual Studio.
IsZooming is set to true when a controller button is held (so it's already handled). Your code doesn't seem to make sense. You are checking if IsZooming is set to false, then checking if it's set to true in the conditional if statements to check if it is a positive or negative axis. Did you mess something up? 
I was scared of CUDA and stuff as well. But you really only can do math stuff on the GPU anyway, so picking up the language really isn't that hard.
It certainly is going to on linux ;)
Are you in a Windows Forms or UWP project? UWP doesn't have TabControl so I'd need to know what control you are using. If you're using Windows Forms you can just set the SelectedTab or SelectedIndex property (as per your YouTube video). Labels tend to auto size unless changed to multi line, so simply change the text and you should be good.
Just a sec
Really? I can't imagine many C# devs actively deving on Linux.
It's a windows forms app, and how? The language is visual basic and i'm using c#, i don't understand. Or are can they be used together seamlessly in one project or what? 
And now that you are here, in my toolbar there is also the option for a materialTabselector. If i couls take that and put it vertically somehow so it would replace the buttons one the left and still look relatively the same. However, i have been unable to find that out. https://pasteboard.co/GB2pAgk.png
No but the C# is very similar because the framework is the same. First you need an event, probably an OnClick (look under the lightning bolt in the properties window). Once you've got an event handler in your code use it to set SelectedTab on your tab control to the appropriate tab. Or SelectedIndex if you want to do it numerically.
I haven't used that and aren't in a position to look it up properly right now (on mobile late at night).
It's not about current devs but future ones. I for one exclusively run Linux. Dotnet core made me test out C#. I liked what I used, but it was massively changing for months and the lack of a proper IDE means I'm not digging into the language that heavily anyways. Now I at least have an option. Along with with other Linux-based developers I know who are moving on the same lines.
Rider is great, a really solid start to what I assume will become an ever more robust IDE. I have been using the EAP's to build a .NET Core Web API on my MacBook Pro, and it's been great. Given the grotesque size and slowness of ReSharper-enhanced VS, I have also been using Rider to dev on regular .NET projects on a Windows machine for work. I only fire up VS to commit code and publish. I've also been using DataGrip for SQL Server at work and for Postgres at home for a couple years now. It's the best SQL tool on the market, by a large margin. I love JetBrains with a passionate intensity.
Thank you! I will definitely check Serilog and Seq out. The concept of [message templates](https://messagetemplates.org/) implemented by Serilog seems to be very appropriate to our case.
I think Rider is likely to win a lot of fans, not just for Rider itself, but for .NET in general. I'm building a .NET Core API for a side project on my MacBook right now, and I honestly see it as a game-changing toolset for the Web app dev community. I would never be tempted by Django or Rails at this point, not for a personal project. For work, I use what I get paid to use, of course... VS is a bloated monstrosity of an IDE, and Rider is just flat-out faster and more elegant. I use both every day, and I strongly prefer Rider. I will say that anyone looking to start a greenfield Web app project, right now, should seriously consider .NET and Rider as their server-side tooling. Coupled with WebStorm and Angular4 on the front end, it's a really powerful, really elegant stack. I'm a fan.
See cudafy.net Of course it's not c# on the GPU, but you express your logic in c#. 
I am looking for BIG primes. Big means from 1000000000 to numbers with 300 digits (and maybe even more). It didnt work for me creating BigInteger arrays or even better arrays that have place for so much numbers to check. At the moment I use the raban miller test for every number instead of just sieving, but that is way slower. 
Check this out https://youtu.be/lisiwUZJXqQ
&gt;[**C# Tutorial [84:59]**](http://youtu.be/lisiwUZJXqQ) &gt; [*^Derek ^Banas*](https://www.youtube.com/channel/UCwRXb5dUK4cvsHbx-rGzSgw) ^in ^Education &gt;*^777,375 ^views ^since ^Jul ^2015* [^bot ^info](/r/youtubefactsbot/wiki/index)
Seems to expand quite well with the content of the book too, thank you!
I really enjoyed the [C# Player's Guide.](https://www.amazon.com/C-Players-Guide-2nd/dp/0985580127/ref=sr_1_2?ie=UTF8&amp;qid=1500124248&amp;sr=8-2&amp;keywords=c+players+guide) There's a newer version now but this is what I got. Edit: I'm glad you guys liked this book as much as I did. To OP, I would offer two more suggestions. 1. [Clean Code](https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/ref=sr_1_1?ie=UTF8&amp;qid=1500149589&amp;sr=8-1&amp;keywords=clean+code) This book is NOT specific to C#. However, it gives you a holistic understanding of how to write code that is readable and effective. This is how I was able to transition from writing code that simply functioned (primarily for school) to code that my coworkers could pick up and run with. The book is the bible of software style where I work. 2. [C# and the .NET Framework](https://www.amazon.com/C-6-0-NET-4-6-Framework/dp/1484213335/ref=sr_1_1?ie=UTF8&amp;qid=1500149805&amp;sr=8-1&amp;keywords=c%23+framework) This is a very optional book in my opinion. It is also a little pricy, very long, more intermediate than beginner and you can gather much of its information from MSDN. However, I prefer looking things up and reading them in a book where possible. I also like having all this information in one location. When I have free time at work, I find myself more likely to flip to an unread section and skim over it than I would with the same information online.
The book that I had in college was called Visual C# Step by Step. To my understanding, it's the official MSDN book and it should cover everything you need to know as a beginner. https://blogs.msdn.microsoft.com/microsoft_press/2015/11/04/new-book-microsoft-visual-c-step-by-step-eighth-edition/ 
Or mainList.Where(x =&gt; funcVar1(x) &amp;&amp; funcVar2(x)) 
Try playing around with concepts here also, probably helps learning :) https://dotnetfiddle.net
Yes. However, the first form should get optimized to something like the second, if I've understood what I've heard about LINQ properly.
Thank you! What did you use with it? 
This is awesome, thanks a lot! 
I appreciate it, thanks! 
What's wrong with the resources in the sidebar?
I'm asking for books; and the yellow book does look good although it's good to have more options! My specific situation may change things, and I am actually going to the exact university it talks about on the website so I'll be looking at it closer to the start of the course.
The logic I was attempting to get to you is do your movement when it is NOT zooming. I did not read the specifics of your code, only to make the point that you only do the movement when isZooming is false.
http://lmgtfy.com/?q=c%23+books+for+beginners
I think that's a very different problem. You'll probably have to use a combination of techniques: https://en.wikipedia.org/wiki/Generating_primes#Large_primes EDIT: Also this is why it's important to describe the context of what you're trying to do. You basically asked everyone here an [XY Problem.](https://meta.stackexchange.com/a/66378)
http://www.quantalea.com/ Never used it myself, but it sounds promising.
Removed: Rule 4. There are plenty of resources available for web scrapers and JSON parsing. Do some research, make a concerted effort and a decent attempt. If you still run into issues, feel free to post a specific question about the issue and include the relevant code of your attempt.
I really enjoyed the Beginning Game Programming in C# class on Coursera: https://www.coursera.org/learn/game-programming I have no intention of developing games, but I took this course to learn the fundamentals of programming and C#. The course has a great flow and there are grade homework assignments by your peers. Likewise, you grade other students' homework so you can see how others have solved the problem.
¯\\\_(ツ)_/¯ Something that interests you? Kind of vague what you have there. Are you looking for a C#-based platform/technology? Or some sys-admin/devops tech?
Either of those really! Something to improve me as a developer
Again, ¯\\\_(ツ)_/¯ Don't know anything about where you need improvement. Maybe just pick some C# tech that's a bit interesting for you but outside of your experience or comfort zone. Xamarin Android/iOS or Azure? Get to dabble in mobile or cloud deployment and the platforms' quirks.
http://www.csharpcourse.com
Learn to program for cross-platform environments. Good to know different UI systems too. You could try porting an app you made to run natively on Linux or Mac. Try using GTK# or whatever. This further opens your toolbox but also opens more platform knowledge.
* Domain-Driven-Design + CQRS + Event Sourcing * oData and GraphQL * NoSQL databases (Cassandra, Redis) * Akka.NET * Rx.NET * ELK-stack for logging * Some Apache project (Zoo Keeper, Kafka, etc.) * SignalR Core * (I assume you know SAML and OIDC) * Testing in Angular * Animations in Angular * 4.3 Release of Angular :) * How to write good software documentation / project management
Sometimes throws up weird errors though 
Sure you could, everything you need is there from elliptic curves to digital signatures, multiple hash implementations etc, I'd just imagine it being a little complicated for a school project.
yes, see Stratis if you got no experience in development (what I assume from your post), then good luck to you you might be interested in something easier, like this project here https://github.com/DutchGraa/crackcoin Python though 
Cryptocurrecy interests me and so does programming so I would be doing something that I want to do
http://csharpindepth.com Jon Skeet covers C# in a succinct and informative way. 
Out of so many books i went through. This one was really one of the best. The way he goes into the subjects and the many examples shown is extremely helpful. Highly recommended.
Not OP but i got the same book. Its one of the best actually very nice layout and many examples. First learn the basics of the language from the book. As you go along, things will get harder when you go into classes and defining your own objects and their properties. Thats when you need to make a project and start implementing what you learnt. One extremely important thing is COMMENTS. Learn how to do them properly and implement them as much as possible. While in the beginning it might be a lot of work and when you program the project from the beginning you will know all the details and the logic behind it. But come back after a month or so and you will see how difficult it is to keep track of your logic. Force yourself to comment. 
I appreciate that! Thanks for all the advice. I've just done classes, methods, objects and properties. I think I'm starting to overlook commenting a bit though and I'm going to spend the next hour going over my projects and commenting all over it. Thanks!
Cheers!
Thanks I will check it out Is there any articles that could help me 
"Head first" is a good choice
Looks good. Thank you.
I'll take a look at this after the other options. Cheers!
Noted, cheers.
Seriously, I'd like to help you, but I think that you are not understanding the scope of the task. See this for some reading (see second post which gives you a non technical overview of how bitcoin works) http://www.imponderablethings.com/ 
Ionic 3
+ 1 on this book. One of the few books that I enjoyed and learned from. Props to the author. 
When is your project due?
Hopefully sometime in spring 2020.
I didn't get as much out of the books as I could have because I wasn't specifically writing code that corresponded with what I was learning at the time. My intent when reading this book was to be exposed to new tools in the C# language, and I think it did an incredible job of that. To me, the majority of the game is knowing that things exist and having a rough understanding of how they work. I don't need to be an expert on generics (and I'm not). But I know they exist and have an idea of when they can be helpful. This will help me Google or look up the specifics in a book when I'm in a position that I want to use them.
Amazing @ the first link.... companion content link is amazing! I didn't realize this stuff was out there for free. I don't suppose the actual lab VMs are kicking around anywhere are they? Specifically looking for 20483B C# companion VM; I took the course and always wish that I had a virtual environment set up to go along with the hard-copy book that I received from the course. I'm asking quite a bit of you considering you've already provided the jackpot...
Not to join in on the dream crushing train, but to do this from scratch, by yourself, would take at least a year, working 40+ hours a week. Could you take one aspect of crypotocurrency's and implement that? Maybe write a program that signs some data, and then verifies an input against that signature? This all depends on what you're assigned, how long you have to complete the task, etc. https://stackoverflow.com/questions/7444586/how-can-i-sign-a-file-using-rsa-and-sha256-with-net
Did you look in the second link? I'm not sure what the VMs would have. I used them for my SQL class I took. I do know there are some dev VMs and there might be one you could use for what you need. Some of these even have internet access so you can save your work and go back to it if you need to. These are timed VMs and they are reset when you log out. The time is usually two or three hours so no rush. 
 [Microsoft Visual C# 2013 Step by Step](https://www.microsoftpressstore.com/store/microsoft-visual-c-sharp-2013-step-by-step-9780735681835) and an online course: [Microsoft: DEV204x Programming with C#](https://courses.edx.org/courses/course-v1:Microsoft+DEV204x+1T2017/info) 
Ah, that's what I determined. Got it to work by doing that so thank you. :)
yay! That is always a good feeling. 
A switch is just a fancy looking if-statement. Dictionaries is a O(1) lookup.
AntShares / Neo looks to be in C# too
Sure you can, and you could build the basics of a distributed ledger in an afternoon if you knew what you were doing. https://bitcoin.org/bitcoin.pdf This is a very good and short paper to get you in the right direction 
http://www.robmiles.com/c-yellow-book/ Don't let the url get you it's a c# book There's a pdf version available for free and is/was used for the university of hull's first year comp sci introduction to programming. It's a book that starts off slow that makes you think about how you first would start to build a spec and the things you need to think about before you start programming. Then goes into language features with example pieces of code for different scenarios with a few jokes in for good measure. Highly recommend this book
OP can use my Cryptocurrency in a Box project as a starting point. P.S. ignore the folder named "backdoor"
We've been using Graylog for this. https://www.graylog.org/
Looks like it's password protected, Hunter1? 
excellent excellent follow your interests. also you don't have to make it perfect - that might take too much time. just outline the basics of the currency in your c# code - and perhaps write about the flaws of your implenetation of the project in a separate but attached report. did you know, even the first aeroplane that was built only flew for a few seconds? Wasn't perfect but it was good enough. and those guys beat the mighty US department of defence (with their infinite resources) to being the first to make flight possible. don't let imperfection, or the scale of the project discourage you from trying. nothing is ever perfect, especially the first time.
Cryptocurrencies are math. They can be implemented in any language. What varies is the libraries that each language provides. C# has a fairly decent cryptographic library to start with, so it should not be too hard.
Id consider doing it as just a hobby
Elixir/Phoenix 
I know OP doesn't know C#, but for someone who knows C# pretty well, how hard would this be?
I love how positive you are 
I have been developing in `C#` since visual studio 2003 and I have never heard any of these technologies. Granted I do a lot of sciency things and not business/db programming. If OP is interested in interfacing with Fortran I could help 🙃
I've been doing .net core 100% on Linux for my day job for the past five months or so. My colleagues are still in Windows just because they are more comfortable with it but the switch to Linux has been pain free.
https://en.wikipedia.org/wiki/Turing_completeness
Async/await (which is used by Task.Delay) was added in .NET 4.5 so it wouldn't work before that. FYI I'd recommend reading about async/await before you start using it as there are a few nasty gotchas (async void, etc). Edit: at a guess I'd say they imported async/await into .NET 4.0 via a library but since Task.Delay didn't exist they replicated it's functionality.
Yeah I bet they didn't build it for a project in school, but full time...... 
There's a free textbook put out my Princeton outlining the basics. But it is an entire textbook. I would consider that a decent entry point, if you read &gt;60% of it. 
Rx comes to mind
Came here to recommend [Learn C# for Absolute Beginners](https://mva.microsoft.com/en-us/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949) but I see that a different version of the same course with the same teacher is in the sidebar. That said, after a couple failed attempts this is the course that did it for me. Although I don't think I'd call up Bob to go get a beer, he is an EXCELLENT teacher and his lessons are well thought out.
Upvote for redis
No, you typed it wrong. That's why everyone can read it and it's not just stars. It's actually hunter2.
All I see is: *******
?? If I wanted to be the new maintainer, couldn't I just fork and get started?
ViewBag in MVC
If this were a public-domain project, it’d work exactly like that. But with the current license terms, if you distribute a derivative work without getting a special license from me, you need to clearly mark it as such, clearly indicate that I am the original author of VBA Sync, and distribute the original VBA Sync license alongside whatever license you use for your modifications (like VBA Sync itself has to distribute the Apache, 3-clause BSD, MPL, MIT, and LGPL licenses). So it becomes simpler to work with the author.
I don't know about removing, but I imported the Atom key commands and it's Ctrl+D. I'll report back later to let you know what the settings name is for you to find/set it yourself, once I'm in front of my machine. 
I used to work on the team that developed these. They have great documentation and support if you are stuck with anything. The course is from 2013 so many things have changed since then. It might be a good staring point, but the documentation is up to date and is really great.
Their support is still top notch
A. Arrive to your parsing of web data phase with your data to check against. ^ To Short Didn't grasp: combine the 2 functionalities into 1, as you parse the html table check it against the data it should be.. B. hash vertica data, hash the parsed data, compare hashes. Both avoid additional step of DataTable building. 
it's the same for base as well (like a lot of atom/vscode bindings, it's taken from sublime text). ctrl+shift+L selects all occurrences.
Great to hear from one of the developers, I'm better off just going through the documentation then. Thank you for your feedback.
And this is why I don't know how to career. I love working with .NET/C#. But I cannot think of something I'd want to do less than get together and talk about it in my free time. 
I actually find it almost hard to believe that a developer who has spent more than 10 years in the. NET stack has not heard about domain driven design or angular. O ly way this is possible is if you have coded under a rock. 
There's nothing wrong with being a 9-5 developer.
I've got a few contractors out of CT, I'll pass this along.
[@class's latest tweet](http://i.imgur.com/SsSzBcQ.jpg) [@class on Twitter](https://twitter.com/class) - ^i ^am ^a ^bot ^| ^[feedback](https://www.reddit.com/message/compose/?to=twinkiac)
But you might learn something new or catch wind of an opportunity that will enable you to have more free time in the long run. 
Thanks I've seen this before. I don't think I got very far with it though. 
Not a book, but an online resource: Lynda.com You can register for the site through a library for free if you are resourceful enough. There is more than just C# there if you want. It's worth a look. https://mva.microsoft.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949 MVA also decent if it hasn't been mentioned already. Also not a book. This was recommended by my close friend that is a manager in the programming department of his work. 
I'll be taking CS in Hull University in the next year or two, so I'll certainly give this a look. Thanks a lot! :)
Thanks a lot I'll be sure to check it out!
Lovely stuff, thanks!
I've been wanting to be exposed to new tools and your approach sounds a lot like my own. Thank you!
This. A little over a year now but it’s been a great experience so far. No C# right now though. Java and C(++) ATM :/
Can you elaborate on how to get it for free/cheaper? I remember this website being quite useful when I was learning MySQL but I couldn’t justify the full price after the trial.
https://www.youtube.com/watch?v=8ZEIP89RTEE I have an account through Houston Library which I *may or may not live by*. Everything is free. I've been through some C# classes already. They have been refreshers since I know a bit of Java already, but are good regardless. 
Added a link to the parent comment for MVA. It was recommended by my friend that programs for x company. 
are you using any kind of obfuscator?
There's not but don't tell a lot of companies that. According to them I should wake up answer stack overflow, work 9-5 then do more stack overflow and open source projects after that. Weekends should be spent at meetups and tech conferences I had a few companies ask why I didn't have much Github and Stackoverflow activity. It was annoying to explain I don't spent all my time on stack overflow/open source, I spend time with my family instead.
I learnt C# with no prior programming experience from this book, would recommend.
OP is a bot that farms karma by reposting old submissions. Please disregard this thread. Original (2016-07-16 18:39:47): /r/csharp/comments/4t4sse/project_types_in_aspnet_core_10_portuguese/
isn't that what you're doing now? haha jk, but yeah I agree with you. i'm too reserved for that. it's definitely hurting my career.
wait, some companies actually care about your stackoverflow (~~SA~~ SO) activity? ~~SA~~ SO is such bullshit. Not only are they toxic to newbs, but i've known experienced devs to avoid ~~SA~~ SO because they feel their (very legitimate) questions might be downvoted to hell. On the other hand, it is one of the very best forums I can use to find good answers to my questions, so I don't know how to put all that together.
Well, for one thing, your lock in the constructor is useless because for every instance you'll have a new lock object. What's the point of all the locking anyway?
Yeah they asked for my username then mentioned in the interview how I didn't seem to use it much. It was for some shitty startup, I only applied because it's a remote position. So many startups think they're the best thing since sliced bread and have huge chips on their shoulders. 
Haha. You caught me!
Good point! I through that in out of desperation as the error message I get doesn't give me any clues where to go, but yes each instantiation as you say should be independent.. So any idea why the thread can't be created? :D
Nope. just trying to do some AES encryption via a multithreaded socket. 
Are you able to try your code on a Windows box?
You're running Xamarin/Mono on iOS, and the underlying error is "error: can't allocate region securely". It looks like you're running out of memory.
Removed: Spam.
Holy fuck well at least you don't have to dodge that bullet, because they pushed you out of the path as they started to commit suicide
How did you get SA from Stack Overflow?! Surely it's SO? Seriously though, the site is not toxic to all noobs. If you have spent time on your question, researched before asking, checked for any duplicates and actually included relevant information in your question then you will be welcomed. Also, many legitimate questions are off topic for SO. So you will get downvoted for them too. Mainly because the question asker hasn't bothered to read the rules on what is allowed. 
Lol yeah I'm tired, thanks. Also, tbh a forum (like stack overflow) is very often a much better way to find answers than Google or textbooks. Often my questions were fairly specific, and weren't addressed by the materials I'm used to using, and often finding an answer means doing a lot of research... I find that people who have problems wth technology ended up in that predicament because they fail to *question their own assumptions about the subject*, leading to typical Google research being extremely inefficient