&gt; 256gb of storage Insert "back in my day" comment here. In all seriousness though, just dual boot. You don't need more than 80 GB for a clean Windows install with Visual Studio and the like. If you've got a bunch of media taking up space, that stuff should be on an external with some sort of backup plan anyway.
Right-click on the variable, then choose Add Watch from the context menu. That should show it in the Watch window, which by default is another tab in the same place as the Locals window. If it's not showing, then in debug mode you can go to the Debug menu, then Windows, then Watch, then Watch 1 to show it.
You said this is a plug in? Do you know if the executing process is a native process, running the plugins via C++/CLI? I've had issues with being able to see variables with that in the past. What's your debugger set to? Managed, native, mixed, auto?
This is not how it works.... From what i see, you want to extract data from an existing POS Application. But it wont work... because every application handle data in his way, so unless the application publicly provide you an API or some event handlers you wont be able to achieve that... And yes, I know that because i developed a POS applications and, the application itself, should provide you some reports or something, because all the sales are stored.. Maybe the application distribuitor might have the right answer for you, you should contact them.
You can use the `Expression` type to get at the property. Not sure on performance though when it comes to inspecting it and executing it to get the resultant value. Code comes from here: http://stackoverflow.com/questions/671968/retrieving-property-name-from-lambda-expression void Main() { var tc = new TestClass(); tc.TestProperty = "Hello World!"; var property = GetPropertyInfo(tc, _ =&gt; _.TestProperty); Console.WriteLine("Property: " + property.Name + ", Value: " + property.GetValue(tc)); } public PropertyInfo GetPropertyInfo&lt;TSource, TProperty&gt;( TSource source, Expression&lt;Func&lt;TSource, TProperty&gt;&gt; propertyLambda) { Type type = typeof(TSource); MemberExpression member = propertyLambda.Body as MemberExpression; if (member == null) throw new ArgumentException(string.Format( "Expression '{0}' refers to a method, not a property.", propertyLambda.ToString())); PropertyInfo propInfo = member.Member as PropertyInfo; if (propInfo == null) throw new ArgumentException(string.Format( "Expression '{0}' refers to a field, not a property.", propertyLambda.ToString())); if (type != propInfo.ReflectedType &amp;&amp; !type.IsSubclassOf(propInfo.ReflectedType)) throw new ArgumentException(string.Format( "Expresion '{0}' refers to a property that is not from type {1}.", propertyLambda.ToString(), type)); return propInfo; } Also, the code as-is assumes your lambda is in the form of `x =&gt; x.MyProperty`. EDIT: If you wanted to execute the passed in lambda function rather than using reflection to access the property value, you can run: `TProperty myProperty = propertyLambda.Compile()(source);` though I'm not sure if this is a good idea or not for your usage.
Obvious answer is that they're not the same instance, or the object was modified between the first and second screenshot. Can't say much more based on what little you've posted.
They are the same object and nothing is modified within either of the collections between the assignment.
Good article, but that vibrating button at the top was too distracting.
I don't know. I only have problems with IQueryable when it is invisible i.e. hidden behind var
My apologies, you were right, ReferenceEquals(round.Parent, PlayersToPair.First().Parent) is returning false. Why would this be? And even so why would the Rounds now be 0? 
I was about to respond that there is an 'X' to close it in the top right, but I decided to double-check before commenting. Sure enough, the 'X' appears in Chrome but not Firefox. So it looks like a cross browser compatibility issue.
you might not have a default mail provider set up on your machine.
Look into the EventViewer. (Windows-Logs -&gt; Applcation Logs) .NET Reports Silently Crashing applications there.
You're asking us to guess what's going on. Please give us a simplified reproduction, or if that isn't possible, the code itself.
Come on Mosh, you can do it! All that's left is to admit that methods that accept Expression&lt;T&gt; are just as bad as the ones returning IQueryable&lt;T&gt; and you will have a proper repository tutorial :)
BL/Service layer is infinitely more important abstraction layer than the data access layer. I don't know why so many people who insist on writing repositories are fine with skipping a service layer.
You can Auto generate getters and setters in eclipse. It's in one of the drop down menus at the top. I forget which. Also try downloading intellij if you are able. It's community edition is free. Much closer to visual studio then eclipse or netbeans.
Agreed. You really can get away with starting at the service layer to hide everything data-access related, and then refactor/revise within there to build out better data access.
Thanks, I'll give this a go. My purpose is to automate the display of properties with their name and value. So, if `TestClass` has a `TestProperty1` and `TestProperty2` properties, I'd like to instantiate the class, give values to the properties and then send it and a lambda selector to determine which and what order the properties are displayed. My jumping off point: `void SelectorTest(TestClass tc, Func&lt;TestClass, string&gt; selector)` gave me the basic ability to send an object with a selector to determine which property value was displayed. I was just having issues getting the property name to display. I haven't tried out the use of Attributes and don't know how much of a performance improvement I'll get out of those but the idea might be that the class properties be decorated by some type of attribute which tells the method how to display the values, etc. Overall, the console program isn't that big, maybe a 400-600 lines and it isn't all that processing intensive outside of the DB calls. Meaning, I'm not to concerned about Reflection overhead.
okay, I'm now having trouble with passing the parameter, do you know how I can pass the value of the textbox or specifically in my case the @Html.EditorFor value that is typed in, as a parameter in the Url.Action? 
I just added "borrEntFirst" to my Watch list manually. Thanks for the help with that. It appears now that the error I'm given is &gt;error CS0012: The type 'RestClient' is defined in an assembly that is not referenced. You must add a reference to assembly 'RestSharp, Version=105.2.3.0, Culture=neutral, PublicKeyToken=null'. I'm using the RestSharp NuGet package to handle the passing of a JSON string through a web service. I have a reference to the package included in the project, and the corresponding using statement in the code itself. Intellisense seems to have no issue with the RestClient object. Also, borrEntFirst is initialized as a List&lt;string&gt;, and shouldn't logically be affected by the RestClient call one way or another... Any ideas? EDIT: The project compiles absolutely fine as well. 
No idea I'm afraid. There are lots of resources [like this one](http://stackoverflow.com/questions/20660999/the-type-is-defined-in-an-assembly-that-is-not-referenced-how-to-find-the-cause) which talk about this problem, but it seems like the answer isn't always easy to find. Hopefully someone with knowledge of that particular package will come along with an answer, or else the advice from that error message will be enough for you to track it down yourself.
The spriteBatch.Draw function needs the texture, the position, and the color in order to draw. You need to change: spriteBatch.Draw(currentSprite); to: spriteBatch.Draw(currentSprite,drawRectangle,Color.White);
I think his assertion that it shouldn't be in the repository is the point, and it's absolutely correct. Sure, if you have some complicated mappings and have to do it often, then you'll want something that takes care of that for you and is called inside the controller.
Can we just sum this up by saying that a generic Repository interface is a bad idea? If you have enough data access code to warrant breaking it out, do so on important entities and make sure that every XRepository will get everything you need out of &lt;X&gt;.
I have a pretty neat strongly typed path library called [PathLib](https://github.com/nemec/pathlib). It lets you avoid relying on 'stringly typed' paths, includes a ton of useful tools for working with paths (including a few from the `System.IO.Path` namespace), and allows you to easily work with path formats from other OSes (e.g. combine with Linux-style forward slashes and case sensitive compare on Windows). Although I've got the public API surface looking great, it's hopelessly slow compared to the built-in string operations. I wouldn't use it in a tight loop, but even then it's unnoticeable when used interactively (e.g. in LINQPad) var appDir = new WindowsPath("~/myapp"); foreach(IPath file in appDir.ListDir()) { if(!file.IsFile()) continue; var text = file.ReadAsText(); text = Regex.Replace(text, @"\W+", ""); var newFile = file.WithFilename( file.Basename + ".clean" + file.Extension); using(var output = new StreamWriter(newFile.Open(FileMode.Create))) { output.Write(text); } }
FYI it's not quite that easy. If you got your string[] from Main you're going to need to re-quote any string array items that contain spaces and re-escape any quote characters that happen to be in the items.
Not GitHub fault but there was an article about when VS added GitHub support the creation of new repositories had a bug where checking it as private did not in fact make it private. So the author forgot to check the GitHub settings before starting to work and his AWS credentials were picked up by bots. Thousands of dollars in debt. Not really pushes your point but a good warning story about storing connection string/credentials... in a file ignored by git.
// write code below to generate random numbers between -4 and 4 inclusive for the x and y speed // using the rand field I provided // CAUTION: Don't redeclare the x speed and y speed variables here! } // STUDENTS: move the drawRectangle by the x speed and the y speed Any suggestion on this part?? I am not sure what code to use at all here..
http://i67.tinypic.com/2rhbe60.jpg
Sorry FizixMan.. I don't think I can understand how to use that.. Using the declaration I uploaded in the first link I have to use that, in order to get some x and y variables and make my sprite move randomly. Right now I did this http://i66.tinypic.com/29car0w.jpg But I don't know what else I must do in order to make the sprites move with that speed I set, any ideas? 
Yeah I read that story. His repository was only public for a short amount of time and bots got a hold of it. Imagine the chaos if GitHub were to accidentally expose a large number of repositories. I trust GitHub is doing everything they can to protect the software world, but all it takes is a single bug.
Under the hood `Environment.CommandLine` is used for this reason. 
The only thing i prefer with java is the enums.
For certain values of nice. You can leverage the new pattern-matching syntax: if (TryParse(s) is var x &amp;&amp; x.parsed) { but it would be cleaner if decomposition patterns had made it into C# 7: if (TryParse(s) is (true, var result)) { At the same time, the out var feature exists pretty specifically to make out parameters less cumbersome, and the idiom we're discussing was built around those. 
Single point of failure and also a high-value target.
After doing C# for entire year (including Xamarin), then having to do android development. I can say that for me, Java is extremely painful. I found that Generics are no-where near as good; the syntax just isn't as nice (It's not pascal case as well...); everything is virtual by default; Not sure of the terminology, but it's lacking some very nice features that C# has: https://pastebin.com/tbXTWQND Thankfully when working on the android app in Java, the backend is in C#. So I resist the temptation to go grab the noose :\^)
After some effort I got them to work, now the sprite appears and disappears in less than half a second but it is not moving in the X and Y axis, it's just appearing and disappearing.. any clues on how I could get it to move left and right randomly?
There's always a struggle finding the balance between code sharing and code hiding. 
Could you compare this with using TPL? Task.WhenAll should also optimize like this.
[Looks like PLINQ does the partitioning for you.](http://stackoverflow.com/a/17786240) Still good to know for when PLINQ is not used and you don't want the (albeit little) overhead of it.
Oh yeah for sure. I can only talk for myself. Also I obviously exaggerated for comedic effect. I personally have a strong preference towards functional programming as opposed to object oriented programming these days (pros and cons for both of course, a debate for another time) and even though it is possible to write functional Java, it's not that well known. Also the fact that stuff like [AbstractSingletonProxyFactoryBean](http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/aop/framework/AbstractSingletonProxyFactoryBean.html) are genuinely legitimate THINGS just does my head in 😅 How's your Java experience been? To be honest I don't really know any devs who are active and engaged in the programming community who like Java (as opposed to career programmers who don't really care about coding and doing things well and properly, but just do it for money). But it's quite likely that is simply indicative of the communities I myself am in. Would be nice to have someone else's perspective. What's great about Java? 😊
The refactoring / code generation stuff built into eclipse is pretty good. For C# you need resharper to get to this level. But that still doesn't make Java any less verbose. The only thing I can think of is being able to leave out type parameters in some cases. It's a shame Java doesn't have properties.
There's rarely a need for optional type parameters in C# that cannot be resolved by instantiating with &lt;object&gt;. Heck, make a wrapper class around it if you really like: class ArrayList : List&lt;object&gt; { } Is as good as any reimplementation really. It's all Java is doing under the hood as it loses all info about generics at run-time via [type erasure](https://en.wikipedia.org/wiki/Type_erasure). Generics are *far* superior in C# for this reason, a List&lt;int&gt; of 1000 ints represents just two memory allocs (the List, and the backing array) whereas in Java it'd represent 1002. Java's is a hacky implementation of generics imo, backwards compatibility with bytecode was held as higher importance than generic support in the VM itself.
PLinq to sum numbers in an array (SumPLinq), vs doing it this way (SumFastParallel): https://pbs.twimg.com/media/C8dGEmSUIAAkMRC.jpg:large Overhead is 'a lot' if the per element workload is low. If the per element workload is high, then none of these considerations matter much.
Nice performance comparison! I agree on the overhead part because it is relative to what you're doing and what your needs are.
&gt; What structures does Java have but dotNet lacks? IME, it's more that .NET conflated some structures/collections that they shouldn't have. e.g. `IList&lt;T&gt;` has an indexer, and should have been named `IVector&lt;T&gt;`. Instead, what everyone else calls "list" would be `ICollection&lt;T&gt;` in .NET. Also, the Stream class is a mess and should have been broken up into interfaces rather than being a base class with `CanSeek` and stuff like that. I still vastly prefer C#.
Generic repo is good when you're making a lot of single-item operations (Get&lt;TEntity&gt;(id), Delete&lt;TEntity&gt;(id)), it's just plain dumb to recode that into every repo by hand. Anything more complex and you become fucked real fast.
A method with `void` means: **returns no value.** A method with `static` means: **Owned by this class, not by an instance of this class.** `void`, `static` and others are called keywords. They give a meaning to the context they are written in (on methods, classes, properties, etc..). Both these keywords can be used together like: `public static void SayHi() { Console.WriteLine("Hi"); }` `public` is an [*access modifier*](https://msdn.microsoft.com/en-us/library/wxh6fsc7.aspx). `static` is a [*modifier*](https://msdn.microsoft.com/en-us/library/98f28cdx.aspx). `void` is a [*keyword but not a modifier*](https://msdn.microsoft.com/en-us/library/yah0tteb.aspx). [More about modifiers.](https://msdn.microsoft.com/en-us/library/6tcf2h8w.aspx) [More about keywords.](https://msdn.microsoft.com/en-us/library/x53a06bb.aspx) 
I got all tripped up today comparing strings in an if-statement. I didn't realize it wasn't comparing the *values* of the string... :(
Thanks. I knew that was theoretically possible, but had no idea how to actually do it.
&gt; ICollection&lt;T&gt; is not a list - it has no order, Ah, true. C# has all the structures you need... they're just not named consistently with their equivalents from C++ STL and Java. Really, it's .NET 1.0 sins like ArrayList and Stream that got carried over.
Thanks!
Side project 1: a procedural RPG game using the Monogame framework: https://www.youtube.com/watch?v=taZ438xGh_A On the fly generated terrain, randomly generated NPCs etc. 
Well the java streams library performs way better then Linq, and escape analysis is nice in case you write bad code. So there is that! 
Just some additional words to try and describe instance vs static objects/methods here - the other folks did quite good already but I know it took me a long time to really "get it". Some classes are 100% static. Like the System.IO.File class. All the methods on the File class are static and File doesn't preserve any "state" information about itself. It's a simple class with methods or "tools" for accomplishing various tasks. Some classes do not contain any additional static methods other than what is included by default with "object()" since all classes inherit from object. Think about the classic "Person()" example. There are lots of people, so it makes sense for this to be a class you can "instantiate", for example with var frank = new Person("Frank"); My general rule of thumb is if the class itself doesn't really need multiple instances or any "construction", I'll just have a static class. And if there are methods or properties in my non-static class which don't really NEED to be a part of every individual instance, I'll make that static. That way I don't waste memory by duplicating the same values in every single instance of my objects. Another advantage to static classes or methods is that they are available across your application without having to pass it as an argument. You can call File.Delete(path) from anywhere in your code and you didn't have to create a file object first, and send that object into your method by including it as a parameter somewhere. 
I understand but if you want to be a professional programmer chances are you will have to learn the non-fun way before you get paid to learn non-fun stuff :)
I thought I understood it pretty well from /u/wuzzard00's comments. But that video is excellent, and plugs even more gaps. Thanks. (I think the difference is that Bill Wagner mentioned this subject in passing while discussing `var`, whereas it's actually the main topic of discussion in the video you've linked to, so they're able to go into much more detail.)
Should now be responsive!
With Java 8 you can use anonymous functions - interface parameters with a single method can replaced with function literal `x -&gt; x.doStuff()` or `X::doStuff`. There are no delegates or events though, and most older frameworks and libraries require you to write a new [anonymous] class for each event handler.
&gt; and item.Expiration is of type DateTime But the subtract operator on Datetime returns a structure of type [TimeSpan](https://msdn.microsoft.com/en-us/library/system.timespan(v=vs.110).aspx). Try .Days instead of .TotalDays (See the documentation as to why, few things more important than knowing how to look it up =))
So if i get it correctly. When i have a class that i won't need any copies of for example a clock i use a static method. But when i need multiple copies of a class and be able to change those copies themselves and not the class i make those non static right?
thank you, that helps!
Yep! It is doing exactly that, just saving you some typing. 
Here are a couple of sites with an API for image upload, I imagine it would just be sending the image bytes. You might find a more suitable alternative but I think that will be the way to go. http://stackoverflow.com/questions/2642570/whats-a-good-image-hosting-site-with-an-api-to-allow-me-upload-images-from-my-w As for coupling it with the username perhaps you could save the filename of the image as the username so you know you will always have the image and username in one place.
The difference between void and non-void methods is that void methods simply does something, performs some action and that's it. To use an analogy, you ask a gardener to mow your lawn. He promptly mows the lawn. The act is done. This is akin to a void. However, if you ask a gardener to go to an apple tree and bring back to you an apple then this is akin to a non-void because something (an apple in this case) is literally "returned" to you.
two weeks and he's senior..
As a python developer, I can assure you that tuples are used all over the place in that language. Like a lot. And they're very powerful. Give it time. Tuples in c# look like they could be more powerful than python's approach, because they can include strongly named values; contrast that with python tuples, which are effectively immutable arrays. Given how much more powerful C# tuples can be, I expect a lot of APIs will be quick to adopt them. Sadly, I doubt we'll see a very quick turnaround of the .NET API any time soon. As for the examples... IMO ones frequently used in the articles are poor examples. Tuples really shine when you need (or effectively can't avoid) more than one out parameter, or when you might need to return a "result" object. You can forego specifying that result object altogether and just specify the return tuple value names and meanings. 
Thank a ton for this amazing idea. Will definitely look into this!
No problem, if you've not made web API requests much before send me a PM I can send you over some examples. 
Oh well, how about a price comparsion^^
Isn't Parallel replaced by GPU programming in practice?
LINQ methods called on a variable of static type IQueryable will be executed in the database, LINQ methods called on IEnumerable will be executed on the client. That's all. Casting doesn't cause execution, calling the methods does not call execution only iteration of the result or terminating method (Sum, Max, ToList, etc.) cause execution. And BTW that var argument drives me crazy. "It is very important if you are using IEnumerable or IQueryable and therefore it is best if you don't know which one you are using" WTF?!?
Don't know what bell end downvoted you, I upvoted. The article discussed many problems people run into.
Sometimes. Does the target platform have a GPU? Are you working in a framework where you can create compute shaders? Can you make a compute shader that works reliably on all the target GPUs? Is the algorithm you are doing one that a GPU can do well? In cases where you code runs only on a server under your control, it is pretty manageable. You pick the GPU(s), write a compute shader for just that GPU, and you are good to go. It adds a lot of complexity to your project but the speed can be incredible. If yours is a product that will run on various hardware it can be hard to pull off reliably. 
This is what [React](https://facebook.github.io/react/) was made for.
These are great points. In my experience just because you're doing agile doesn't mean design is ignored and developers are expected to build things without a clear understanding of requirements. If that's happening perhaps your team should review your approach and look at incorporating design sprints/stories/some phase of time for the team to work together to come up with a spec (tech design,wireframes etc.) for the devs to work off. Even if your known requirements are minimal this helps things take shape on paper and helps the team march forward together to implement it. Re: interactions with other classes. Probably the first requirement of writing well unit-testable code is that dependencies (other classes) our target class requires are *loosely-coupled*. This typically takes the shape of having them injected into our class using an IoC container and hiding the behavior behind an interface. So, if we need to change an implementation detail in another class, that shouldn't have a massive impact in the rest of our code. I don't know the nature or size of your requirements changes but if you're doing major refactoring and having every change trickle throughout your app that to me smells like a brittle design that might benefit from having these class interactions decoupled a bit more via interfaces. I did a couple of posts last month on IoC ad unit testing you might find helpful: [https://fullstackmark.com/post/6/learning-dependency-injection-in-aspnet-core] (https://fullstackmark.com/post/6/learning-dependency-injection-in-aspnet-core) [https://fullstackmark.com/post/7/learning-unit-testing-in-aspnet-core](https://fullstackmark.com/post/7/learning-unit-testing-in-aspnet-core) 
I became a vocal LinqPad supporter because of how much value I got out of their free version, and got my company to buy everyone licenses (which we got to keep after leaving the company.) I still use it years later and find that it gets the job done for most of my LINQ debugging needs. I'd be interested in checking out a tool like this, but the required persistent subscription wouldn't work for someone like me who doesn't use .NET as consistently as I used to. LinqPad will always be there when I need it, though it's nice to see an alternative for those with deeper pockets. :)
Perhaps, I think it's quite acceptable for anyone doing serious coding, OzCode has turned hours of debugging into minutes, and I value my time ;)
Sweet, I'll check it out! 
The old Tuple&lt;T1,T2,...&gt; types are classes. The big problems are that they're verbose and you can't easily tie useful names to the members. ValueTuples aren't much better, under the hood, but come with some much better support in the language syntax and assisted by the compiler for field names. (The old Tuple types are also immutable, while the new ValueTuples are mutable--personally, I'd rather the new ones were immutable, but that ship has sailed.)
If you have have some basic operations like a map, reduce, (select, aggregate in Linq) sum, average etc you can just use a convenience library for almost no effort: https://github.com/jackmott/LinqFaster/tree/master/LinqFasterParallel Also you might be in a situation where the GPU is busy rendering and would like to use all of your cores too. 
This was done so existing types that behave like tuples (KeyValuePair, etc) can be retrofitted to be used in deconstruction assignments and expanded pattern matching in the future.
Is it really so hard to add a function to the source code of those types that it merits a global function lookup?
ok so I have this rn &lt;div id="popover_content" class="hide"&gt; &lt;div class="form-group"&gt; @Html.LabelFor(model =&gt; model.LicenseName, htmlAttributes: new { @class = "control-label col-md-2" }) &lt;div class="col-md-10"&gt; @Html.EditorFor(model =&gt; model.LicenseName.Name, new { htmlAttributes = new { @class = "form-control", @id = "LicName" } }) &lt;/div&gt; &lt;button type="submit" id="Licensebutton" value="addLicense" class="btn btn-default"&gt;Add&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; and this is my jquery to call it &lt;script type="text/javascript"&gt; $('#Licensebutton').click(function () { var licenseName = $('#LicName').val(); $.ajax({ url: '/License/addLicense', data: { 'license': licenseName }, type: "post" }); }); &lt;/script&gt; but when I click the button, nothing happens? am I missing something?
ah tru, yeah you could be right. well for one thing it's definitely not reaching the action method :/
On phone so can't really tell but try over riding .ToString() on the model.
Removed: Rule 7.
What sort of projects are you looking for? I do primarily business/enterprise-y stuff, and a typical structure looks something like this: * **ExampleSolution.sln** - **ExampleSolution.Core** (shared enums, constants, dictionaries, etc. -- basically, stuff used everywhere) - **ExampleSolution.Data** (data layer -- usually classes tied to DB tables, a generic repository service to access those tables, and other data-access type stuff) - **ExampleSolution.Domain** (domain layer -- not strictly necessary, but having another layer of classes between your data layer and your web/other layers can be very helpful, especially for caching purposes) - **ExampleSolution.Service** (service layer -- Typically responsible for interacting with your data layer, and returns domain layer objects) - **ExampleSolution.Web** (web layer -- Contains your MVC classes and other web-specific stuff. Typically interacts with the service layer to fetch data/domain layer objects, and then uses those to build models for your controller to return to views) This is a bit generic to say that it will work for all projects, but I've found it to be pretty alright way of separating concerns. By limiting the amount of stuff that each layer is responsible for, it makes it easy to re-use code as necessary (for example, a console app that needs to talk to the same DB as your web app). 
They work really nicely in place of key value pairs 
I think doing that much lifting with the tuples is why you should do it explicitly. I see it being useful in a webapi response when you need a object response on the fly and literally just want to wrap it and that is it, no other processing. 
Returning two things seems weird to me. What if I have a function that returned two ints? How do we communicate which is which? Are we relying on developers to name the function in a descriptive way?
Are you wanting to do more GUI based applications? (Windows Forms) or continue with web based application but in .NET?
Maybe look for full stack positions. It's hard to find a full stack dev these days so if you have some BE knowledge and are good with FE, then you can usually step into one of those positions. What I did and I have been learning as I go. 
Small utility to parse a directory of TV shows downloaded via torrent, removing and formatting into Name SxxExx and removing useless crap at the end. Next steps is to organize by folder for different seasons etc. Will also move to making a system that tracks which shows you watch and their air times and if downloaded/watched yet. Also working on an entire client records and appointments manager for a Veterinary Practice. Been a C# developer independently for 5 years and now working with C# Daily in the workforce developing for e-health systems.
That dude made it super easy for you. Just open up the edmx, right click, and update.
When accessing models in Javascript use camelcase. From this: 'row.LicenseCodeID' To this: 'row.licenseCodeId'
well I mean when I tested it out it worked fine in other cases bc I used this exact same code except for two different classes but basically what I'm saying is with how i have the capitalization already, or are you just saying for good practice? if so, got it!
do you mean debugging by right clicking the page and using the console? I haven't but I sort of did my own testing by just trying every single combo mixing LicenseCode or trying LicenseCode.ProductKey or just ProductKey
I find a lot of the time I'll get undefined and wrack my brain for ages and then realize I capitalized the property. Try change it and see if it fixes it. But yes, also for convention.
That doesn't answer op's question though
I remember using tuples when I switched from Python to C#, but I can't remember why tbh. I don't know when I would actually use one when a class is so much more descriptive. It just feels like trading one code smell (out/ref) for another. I don't really care for deconstruction. Multiple assignments on one line grinds my gears.
worth the subscription? stuff like this is always cool imo.
It addresses the OP's implied question of "How do I get a C# job despite having no professional experience?"
&gt; developers (not programmers - they are different) That distinction might be specific to your social circle's specific dialect (idiolect?).
Yeah, I just get the impression he's not aware that his definitions aren't universally accepted, so I was trying to let him know.
Copied from [https://social.msdn.microsoft.com](https://social.msdn.microsoft.com/Forums/windows/en-US/b646ccb7-ed0b-44cc-8643-d9a02d14907c/help-how-can-i-adjust-the-width-of-textbox-to-just-fit-the-text-in-it?forum=winforms) Graphics g = textBox1.CreateGraphics(); SizeF sizeF = g.MeasureString(textBox1.Text, textBox1.Font); textBox1.Width = (int)Math.Round(sizeF.Width); Size size = TextRenderer.MeasureText(g, textBox2.Text, textBox2.Font); textBox2.Width = size.Width; Edit: Third result when searching for "winforms textbos desired width"
Not sure if it's kept up to date still but NerdDinner has been great for many people. 
Removed: Rule 2.
I always thought that developper was the "idiot trying to sound bright" term for a programmer. In my experience, people that says "I'm a developper, not a programmer" aren't very good at their job. People who don't care which of these term is used to describe their job is the kind of people I want to work with. Anyway, that's only my 2 cents but it was just to prove your point that different culture = different definitions
Well if you want to do web build a forum, blog engine or something like that. Make sure to build a part (say admin panel) with a SPA framework like React or Angular 2.
Don't skip over webforms. I work in a shop tht has a ton of webforms and even some classic asp still. We are working on going to MVC but it could be 2-3 years still before we have it "mostly" done. It seems everyone we interview knows MVC but not much webforms. When new folks have to mess with our classic stuff, it takes a bit of hand holding too.
Make me minesweeper in C#, and then color unclicked cells red if you can determine a mine is there or green if you can determine a mine is not there. If you can do this, you can work pretty much work anywhere that uses C#
Yea, so Label is a type of Control, it inherits from Control which means that while tableLayoutPanel.GetControlFromPosition(column, row) returns a Control type you can still cast it to a Label and then access its properties, as such: Control control = tableLayoutPanel.GetControlFromPosition(column, row); Label label = control as Label; // This works aswell: Label label = (Label)control; if (label != null) { // Do something with the label label.BackColor = Color.Red; label.Text = "I'm a red label."; } The null check is not necessary but **should** be there to make sure you are working with a label, so you don't get an null reference exception if you refer to an empty cell, or refer to a cell containing some control other than a label.
haha fair enough. Is a gazillion a high enough number for you?
Make an app that you could imagine having professional value- i.e. a volunteer hours time tracker with a SQL server backend, a payroll application, some sort of shipping calculator, or whatevers.
It sounds like you've got that kind of system knowledge that you need along with at least some good ideas on where you need to go as a developer. My guess is it may be easier/wiser for you to work a DevOps angle than to come in as a feature developer on day one. That can get you in the right department if you really do want to be more of a feature developer. It also leverages more of your current experience, so you can probably negotiate a higher starting salary. DevOps has become a term that means many things to many people, but the core of it comes down to including the operations team as part of the development team and also automating your operations via code and giving them the full code treatment. The full code treatment means it's all committed to source control, it's got tests, it's got requirements, it's run through the dev&gt;test&gt;stage&gt;release life cycle and so on. Another term you run into that's very close is Infrastructure as Code. Your habit of automating the redundant is *exactly* the right attitude to be successful in DevOps and IaC. Possibly the most attractive reason for this angle for you is you may be able to start folding some of the generally accepted practices and common tools in DevOps and IaC into your current job and so get very real experience with them. At least in Chicago, DevOps seems to be getting paid around the same as feature developers. With Azure or AWS experience, I've seen advertised positions in the 150k range. 
Late arrival from Google search, just wanted add that you can get the search behavior you described with the free extension [DPack](http://www.usysware.com/dpack/).
WinForms would be like chopping of your own dick... Better off with PHP
look for a starter or pre built project. yeoman has one, lots of them on github. then make something off of that most of them will list pre reqs. I'd suggest building a blog or something about things you learn on the way. for c# specifically angular/typescript very good to learn because of the many similarities between c# and typescript. these days we have intellisense on the frontend!
sorry I guess what I meant by it was widen your search and look for gigs in the outskirts. They are starved for talent so it can be easier to get a job.
&gt; Windows Forms n on o no no no n ono no n o
If anything, I see it being used more than ever. It's "good enough" that many enterprise clients I've had don't bother with trying to evaluate others anymore. They *finally* added a real exception assertion, unfortunately they didn't remove the old ExpectedExceptionAttribute anti-pattern. Well, technically they did remove it, but the "backwards compatibility" mentality won out over removing bad code and it got put back in. Just in case you may be confusing products, this is just the testing framework, not the mock/stub framework. I never saw the MS Fakes framework used testing a production system at any client. 
Nice try Resharper!
I got a fair bit of negative feedback at my previous job because I refused to use the ExpectedException attribute. I would use a try catch(expectedExType) block with an Assert.Fail() after the line that should throw. 
What kind of reasons? Still bugs me there's no way of adding descriptions like in NUnit. That and the fact there's literally no fucking docs, anywhere.
Half the assertions don't allow messages. This makes it really hard to have a comprehensive test that also explains why it failed. The data-driven tests, while worlds better than MSTest, are still clumsy with strange limitations. For example, you can't refer to a data source in a base class, leading to a lot of copy-and-paste. Enabling this is literally just changing one line of reflection code. It also doesn't have the concept of Assert.Inconclusive. This is handy for test stubs that haven't been filled out and a must-have for integration tests to distinguish between tests that actually failed and tests that couldn't run because of a pre-condition not being met. Which leads me to the problem shared between nUnit, xUnit, and MSTest: no integration test support. They assume that the only automated test we're every going to need is a shitty little unit test. So there is no way to bundle up multiple failed assertions into one report. If I've got three problems in one test, I want to see all three of them at once. Maybe #2 or #3 will give better insight into the cause of the failure. 
&gt; Which leads me to the problem shared between nUnit, xUnit, and MSTest: no integration test support. They assume that the only automated test we're every going to need is a shitty little unit test. So there is no way to bundle up multiple failed assertions into one report. If I've got three problems in one test, I want to see all three of them at once. Maybe #2 or #3 will give better insight into the cause of the failure. Because they are unit test frameworks. Right tool for the right job.
I'm interested in tools programming, I guess. Funny thing is I haven't made any web projects with .NET. Most are all game related, real time performance stuff. I just have one basic WinForm project, but my most complex stuff involves game development with MonoGame and XNA. One has a Entity Component System, that compiles to a DLL and a sample game that uses it. The other is a graphical engine, also to be used as a DLL. It breaks up rendering into different steps, and makes use of object pooling since you don't want garbage collection to happen a lot in a real-time app where performance is key. I also fixed a related GC bug in someone's demo tutorial program, that was making the app run janky.
&gt; So there is no way to bundle up multiple failed assertions into one report. It can even be a repetition problem in unit tests when you've got a few things that need to be verified did or did not happen based on a single set of inputs. E.g. verify that it threw an exception and didn't call the repository when a validation rule fails.
do exactly what you do in PhP another application. Working on a website? try building it using .NET MVC, same exact thing. Usually the best projects come out of personal need. Like if you're on online dating sites, learn how to build a bot to spam people. 
I have JavaScript experience but I'd rather just stay in the back end side of development. Front end is such a jungle, and keeping your skills relevant there is very high maintenance with fewer payoffs. The obsession to change front end frameworks every couple of months feels more cargo cult than based on practicality. Now things like TDD, those sound practical to me and I'd like to learn automated testing. I have worked at four places and none of them used TDD! So imagine my surprise when recent interviews ask me about it.. I was like, is this a new standard? So anything to do with CI, unit testing etc. I don't know much about. Where I work we debug by printing statements, and QA does manual testing. I use good practices working on MVC frameworks whenever I can. I apply DRY and have removed code bloat in projects, make them more modular and easier to maintain and extend with new modules. That was the biggest thing I did in my last job.
Chess
Yea I'm facing a situation that makes me feel like I'm applying for my first programmer job all over again. Catch-22 of needing experience to get experience but it's language specific this time.
Oh yeah I guess I forgot to mention that I'm not currently employed. Guess finding a language agnostic company, just like you did, will help? One that does both PHP and C# seems rare, though.
Well, the nice thing is there are plenty of resources online. I haven't checked the thread since it just started but here's my two cents: For now, you should be learning to create a project in Visual Studio 2017 Community Edition since it is free and covers everything you will want it for. Create a new solution, and as many projects as possible. Get in a rhythm of creating a new project, tearing it down, adding and removing things, and learning what goes where, adding references to other projects, etc. Start working on internet coding challenges. There are dozens of sites, just google "code challenges" and you'll find something. Create a new project for each challenge. Once you've done a few you will realize you are duplicating code... make a new project, put that generic boilerplate into it and start referencing that code in the other projects! If you are interested in the web, create an MVC website using the solution template and use the out-of-the-box template to learn how everything fits together. Having a working example to learn from makes learning MUCH easier, and an MVC site is click-n-go. There are plenty of tutorials out there for the basics. Start asking yourself "I know how to do XYZ in PHP, how would I do that in MVC?". 
Splitting the test method rapidly becomes a maintenance nightmare as the number of checks needed increases.
There's TDD vs just unit testing and the broader topic of automated tests have been the source of very long books. In a nutshell, TDD is more a process of writing unit tests than the unit tests themselves. The primary concept is you write the test and make sure it fails the way you expect it to *before* you write the code. Most people tend to not be purists about that, but follow it generally. Not only are you verifying the test is doing what you want it to by making sure it actually can fail, but you're disciplining yourself to make sure they are done. It's too easy to wave it off if you wait to write them until after the code is complete. Two things make testing hard to adopt: 1) It usually requires better code architecture than legacy apps have. Without good code architecture, you break a LOT of tests every time you change the app. 2) It takes more time to complete a given coding task. What is saves you is regression defects as the code base grows and it lets you refactor and add functionality with confidence that you're not breaking the rest of the app. So, you save the time later. Unfortunately, a lot of people can't get past the up front cost. Effective automated testing usually requires an "a-ha" moment where it suddenly all makes sense to you. Miguel Castro has done a bunch of talks on the topic of dependency injection and how it relates to unit testing. They were a little too late to help me, but I know a lot of other people have come away from his talks with that "a-ha" moment. There's other good ones (and probably better), but his name comes up a lot with the people I talk to. Here is one long-ish one that I haven't had time to sit through, but the initial talk sounds like it's just more detail over the ones I've seen from him and can't find right now: https://channel9.msdn.com/Events/TechEd/NorthAmerica/2014/DEV-B412
https://i.stack.imgur.com/CDkvO.png something like this? You can use a WPF custom control with some abstract data structures to achieve just that.
It all depends on how quickly NUnit can support MSBuild based .Net Core projects
I recall it being in pretty much current state in VS2005/2008, so it has been languishing for quite a long time.
Yes, logging is very valuable. Check out log4net though, instead of re-inventing the wheel.
Sure, thanks. 
Is MStest that good? It appears to be winning. So far I only used the other two.
My 2c - repository is an antipattern, especially if you're already running EF. It already implements unit of work, and you can change your underlying relational DB to other supported stores. Sure you now can't change to an entirely different type of database but ask yourself how likely that is to happen. Then consider that if you do want to change to a different type of database that the abstraction won't save you. Going from SQL to RavenDB? Your store is now eventually consistent, this has ramifications all the way up to the UI layer. 
I didn't vote because I'm unlikely to choose one based on its features, we'll just use MSTest because its ok and already installed. 
do you know how exactly it can be disabled?? This is giving me a massive head ache
I'm not well versed in all 3 to really say which is best, and I'm sure everybody is probably picking the only test framework they know &amp; use. But the reason to be biased towards MSTest is that it can integrate with MS own products in various ways and I'm not sure the other two can. For example you can't check it code unless the tests pass. If somebody knows if NUnit/xUnit supports that kind of higher level functionality, please correct me.
It looks to me like you're almost thinking more DAO than repository. I think of a repository as a collection of data access objects or just data calls that are logically related. So say in your solution you have a banana and an apple object, which both may or may not implement an IFruit interface. I would do data access in two DAO classes for each of those, and use those DAOs in a repository object. I wouldn't necessarily demand that those objects both implement IFruit in order to be lumped together in one repo though, just that they were logically connected in such a way that made sense doing data access from the same place for both. EDIT: I am not suggesting that an apple and a banana shouldn't share an interface, just that it's not absolutely necessary for ten sake of stuffing them both into a shared repository class. 
Don't over think it, it's just encapsulation of your persistence code (database or other). Trying to jump straight to generic doesn't work for every app. Until you see the patterns in your particular app, it probably is just better to code a few variations, then bring them together later. There is what I call "False Reuse". That is taking two things that can be described the same way an insisting on "not repeating yourself" even when it starts to become clear that the differences between them are actually non trivial. In your case, variations in PK type, you'd end up probably with IRepository&lt;TKey, TEntity&gt;. Maybe you then have an abstract base class that is IntKeyRepositoryBase&lt;TEntity&gt;:IRepository&lt;int,TEntity&gt; and another that is GuidKeyRepositoryBase&lt;Guid, TEntity&gt; and another that is CompoundKeyRepositoryBase&lt;SomeCustomType,TEntity&gt;. 
The scale of the database is massive (hundreds of poorly structured tables, not created by me, some with 50 million records and hundreds of columns) and i'm trying to fix it. Im in a little over my head lol
You still think there is One True Answer. There isn't.
Best advice I heard was to let the patterns emerge then refactor into better versions of the pattern.
What's the best way to learn about Neural Networks from the ground up? I want to implement one. I'm familiar with genetic algorithms and the basics of what a neural network is, but I'd like to learn the math.
Heres my concern: I've been a sole developer for 7 years. I've never had a developer that's "better than me" look at my code, which is very scary. When i move to a team environment, i don't want to be the dude that does stuff completely differently and have to totally change my development schema to work on projects with other devs.
Used to use NUnit. But MSTest gets the job done "good enough" and is integrated with Visual Studio and MSBuild. 
Sorry, don't know.
We use xunit for our new dotnet core project. It has been great and we use the inline data everywhere. 
no youre not in a catch-22. i learned of the issue many years ago, when a proposal needed a combination of c# and delphi. so in my free time i learned c# when building LanHUB.net and started applying it to my current job (moving from a diff language), and got a new job focused on c#. work got access to a better talantbase, and i got access to better offers.
A tidy little update indeed. 
But the loop makes it harder to tell which test case failed without digging into the logs. With XUnit it's more isolated and easier to just know which test case failed.
Is that a custom TFVC check-in policy? I don't see it being one of the defaults.
It's slightly more work, you have to install a NuGet package, and you may have to tell TFS where to find the runner dll in your project, but yes, they can both do that.
I thought it was that policy, but he made it sound like it was specific to making sure the tests were run. Just because it built doesn't mean the test were ran.
Well if you set your build up properly it does.
If you want to look at getting into a job that includes programming for game designers, you will need experience. These companies get paid a good amount of money to make money so they don't leave too much up to chance. There are an absolute shed load of companies that are trying to convert their current platforms over to web or even trying to get their latest projects to come out on the web. Of course this is my opinion, but I think that you should look at asp.NET MVC and Entity Framework. Being a PHP developer, I am sure you have the front end down so that will be a tiny learning curve. You can still do the server side all in C#. To add to your portfolio, create a basic CRM or CMS. Maybe even some form of a simple web api. Not sure if this is helping, but these things are fairly easy to put together and are really nice to show off what you have done to get an entry level programmers job.
Don't be too sick. Was just providing an example of a GUI based project that people would know of.
Calm your farm, haha.
I feel a lot of hate for WinForms coming from you.
Effective c#
Repositories on top of DBContext is because DBContext and DbSet are not designed to be testable. You wrap these because you want something that is easier to test. Provided video shows how partial class can be used to accomplish this. Source: https://youtu.be/PhRFLKtJcSs?t=38m25s
Repository and Unit of work are 2 different things. DbContext implements both but that's a technical detail of using EF (and other Heavy ORMs like NH). IMO, UoW type methods (commit/rollback etc) on a repo are an anti pattern. Most of the time I consider things like IRepository&lt;T&gt; and BaseRepository&lt;T&gt; antipatterns too, because they always just end up leaking the things they're meant to be encapsulating. DbContext is a dependency that both your Repo and UoW have, but you should handle then seperately, think about the "I" in SOLID. Repos don't need to be aware of UoW for most usages. UoW is an application layer concern (for example if you're building a web api, a common pattern is begin trans when entering a method, commit if it returns OK, rollback if it throws, but make however many calls etc are relevant in between). The repos responsibility in the case of using a Heavy ORM isn't to encapsulate sql, it's to encapsulate the ORM. Typically for EF that's going to be hiding IQueryable and other EF specific functions. Also when you're using a "heavy" orm like EF you def want an anticorruption (dto) layer somewhere so you don't have high layers in the app inadvertently making db changes. This is commonly handled between the application layer and service layer, and then the service layer invokes repo methods. I don't think it makes a lot of sense to do between repo and service in most cases, since the services objective is "orchestration" between objects that usually does involve changing data. Of course, you don't need the anticorruption layer, or half this other stuff if you use something lighter like dapper.... but I digress.
How do I see the details of: Fixed textbox focus issues [215639]
I have extensive experience with MSTestV1 and Xunit, my vote goes to Xunit because testing code that throws exceptions is more difficult and less clean in MSTest, especially async. Assert.Throws and Record.Exception are just cleaner and easier to understand and read actual exception data than the ExpectedExceptionAttribute.
Are there assertion frameworks similar to Shouldly? I'm a big fan and the default assertion frameworks cannot match it but I never bothered to see if there's anything better
Especially like the new documentation website; I dread having to browse through MSDN to look for a specific namespace that some developer forgot to explicitly reference in a project that I'm taking over.
&gt; 1) Is there somewhere within the app that tells which version of EF is used? Check your project references. It should list the version. &gt; 2) How do you determine which EF approach is used? Database first or Code first or Model first or something else? Although the other responses hinted at this without actually saying it, the presence of an `edmx` file usually indicates Database First. Code First usually has an `ApplicationDbContext.cs` and Migrations directory instead (although I suppose the file could be named something else).
Where did you get that information from? In the blog post they don't mention it.
Could you elaborate? Your statement doesn't make sense to me 
Check out Fluent Assertions
Absolutely no idea. I have no formal training in the subject, and this is my first project that uses it. Everything I know comes from studying the example code on c-sharpcorner.com that I linked to in the other post, and from asking a few questions on /r/askprogramming. I haven't studied maths for over 20 years (and even that was only a single course in my first year at uni). That's why, although my existing project seems to do the job, I'm working on the new project which I hope will help noobs like me understand what's going on graphically without need to much maths!
**Here's a sneak peek of [/r/AskProgramming](https://np.reddit.com/r/AskProgramming) using the [top posts](https://np.reddit.com/r/AskProgramming/top/?sort=top&amp;t=year) of the year!** \#1: [Am I crazy for believing we should form a trade union or guild?](https://np.reddit.com/r/AskProgramming/comments/5hqkw5/am_i_crazy_for_believing_we_should_form_a_trade/) \#2: [Do you meditate? Does it affect your coding skills?](https://np.reddit.com/r/AskProgramming/comments/5cpryq/do_you_meditate_does_it_affect_your_coding_skills/) \#3: [\[META\] Can we please put how to format code in the rules?](https://np.reddit.com/r/AskProgramming/comments/62y5pf/meta_can_we_please_put_how_to_format_code_in_the/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/5lveo6/blacklist/)
My original code was using a tuple quite a few places, so i decided to tidy it up and make a small class to handle that. I only wanted that class internally within the original class, because,well it wasn't needed anywhere else. This lead me down this path, it was a major problem it was just something i wanted to explore 
I have thought the same pre-Web API when working on MVC apps with controllers that served views. We didn't want our logic in there, and neither our validation, and we felt the need to move into the next layer so that we wouldn't have to repeat that validation logic across models and controllers. However with Web API, if you take a step back and look it out from outside the box, your controllers are... your services. They are meant to be consumed by your frontend apps, from something like Angular or a mobile app. So they have become the business layer. If you come to this realization, you will understand that it is actually fine to keep your logic in your controllers, to inject the `DbContext` right there, to validate your models using annotations and the `IValidatableObject` interface. There is no need for another layer. Do you need to create a product in your system? It's always gonna be a `POST` on `api/products`. Should you need to create products from various places, you're always going to go through this endpoint. No need to move the logic behind it into some other layer. Even if you want it reused from a console app, just call your endpoint. It has become your business layer.
Oh, then it's time for me to switch to Shouldly! :) 
Wow .. can you point me to a good example of accessing services from ValidationContext , previously I 've been frustrated that its not an interface and that its sealed, effectively stopping me from adding the extra functionality to access services ( extension methods are still possible, but injecting into them isnt very clean)
You have a [GetService](https://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.validationcontext.getservice.aspx) method on the `ValidationContext`. I usually write an extension method like `T GetService&lt;T&gt;(this ValidationContext validationContext)`.
Cheers. 
There are better ways to make DbSet and context testable. Even if i write a repository I am still returning concrete entity types to the app layer. And the the code in my repository is a wrapper without much value in the cases I've seen it used.
I'm not digging the docs so far. Harder to navigate.
I faced something similar once, I made an api and started having all new and updated sites and apps go through this new REST service. So I could format the request and response how I ultimately wanted it. It took a lot of work on the db site to facilitate this. But once it was done I had my new layer over the shitty db design. Once that was in place I began a new database design with at least 3nf. I began porting the older data over and placing it in it's new structures. This was time consuming to say the least. Once it was done and we went off line shortly to transfer the remaining data I pointed the restful api at my newly designed database which had sps which matched my request response data and everything carried on swimmingly. There was testing in there also naturally before the final live switch over. Result was a new database design, faster response, and it's now easier to scale and change with that damn business logic. 
Ty for the answer :) do you know of a way i can trauncate it when I want to remove a single key?
This is more or less what I've tried to make my projects look like. One of the things I've struggled with is EF, and keeping that actually contained to the DAL. Maybe I'm not doing the repository pattern correctly. Thanks for this though. It helps to see more or less of what should go in to each layer.
Very much so, except I've only been a dev for ~2 years (SysAdmin before that). Honestly, I have no idea if it is sound. This is something I've been struggling with for the past 6 months or so. I'm currently looking at other opportunities, and I'm really dreading it. I'm really not sure what to expect when I do join an actual team. I guess I don't have much of a choice other than just crossing that bridge when I come to it. I've been reading Clean Code recently, and so far, I've been doing quite a bit of what is suggested in it. If you haven't already, I'd recommend reading it. After that I plan on reading Head First Design Patterns. Hopefully then I'll be ready to join a team.
Recreating the dictionary and specifying the capacity in the constructor is not significantly different from what a built in method would do.
One more thread about repository pattern with EF. I have to give the same advice again - do not use repository pattern with EF. Even when implemented correctly (yours is wrong) it is a heavy price to pay for this particular abstraction unless you know you will need it. Focus on having a proper service layer instead of a repository layer.
Hmmm... https://msdn.microsoft.com/en-us/library/dn314429(v=vs.113).aspx 
Making an app for the missus to track her monthly cycle. Not the most original or mind-blowing one out there, but it will help us with birth control and family planning.
If you are trying to learn programming by experimenting, you are only going to end up frustrated. You should find a tutorial such as a good beginner's book and do all of the exercises. Trying to go too fast will not help you.
Am I the only one wtf'ing the concept of using prime numbers to decide dictionary size? Seems so arbitrary.
it would be great if this is also pulling in data from https://referencesource.microsoft.com/ and their github repos.
Could you point me towards a decent tutorial or example implementation of a proper service layer? Or what to search for to know I'm getting good info? I really want to do this correctly and i feel like there's so many blogs strongly advocating for totally conflicting things, I don't wan't to keep going in the wrong direction
Awesome, but... How do I add .NET Framework 4.7 to my Visual Studio 2017 if I have already installed the IDE weeks ago? Will it be automatically updated at the time I run Visual Studio next time? Or do I need to install some updates manually?
Thanks! It makes sense to me to have some room for growth, but I guess I'm not understanding why the size isn't determined with a simple ratio. There are maths reasons why prime numbers are used in cryptography for example, but is there a reason why they have to be used to determine hash table size?
What kind of data?
This is a desktop WPF app, not ASP.NET/MVC or any web service stuff. It just needs to run on some internal PCs and interact with a couple servers running SQL Server 2014 on an isolated network containing a huge amount of raw data coming off a very large industrial automation line. Im not sure if this changes things, but it sounds like a lot of that is geared towards web apps!
this is not java bruh
Wish it it went back a couple of more versions of the framework. 
I did what you said. There was an update from Visual Studio Installer, so I let it install all the updates. However, when I followed the next steps after updates were installed, I found theres nothing in Product Update section when I opened Tools &gt; Extensions and Updates. No idea why this was happening. Edit: Oops sorry, it seems that .NET Framework 4.7 is only available after Apr 11th from Windows 10 Creator Update...
Someone who's better at maths may likely give you a much more convincing answer but I'm guessing that it has something to do with the fact that prime numbers have no factors (obviously). If you had 60 buckets for example then I have an intuition that the buckets at 3, 4, 6, 12 etc would get overfilled compared to the others. I can't quite explain it though, it's just an intuitive thing because we're using the modulus. I could also be completely wrong. Hopefully someone with better understanding will answer.
The source code, so you can see how something is really implemented rather than just reading a descriptive text with some usage examples. It does not replace documentation, but being able to check the real source code can be great. Of course you could just ILspy/dotPeek it, but the actual source can be more accurate.
Those are usually internal ids for MS's internal bug tracker. You see them occasionally in the .net source comments. From what I can tell DevDiv have one giant bug tracker.
Could get 90% of this if the compiler would infer generic types in constructors. From there, it seems like you could infer the collection types for a collection initializer var inferredDict = new Dictionary { ["foo"] = 4, ["bar"] = 5 }; without inventing new syntax or importing it from a different language.
In the ones I looked at, there is a link to the Reference Source
True, Java docs are good.
I don't see it. Am I just missing it? Take StringReader for example: https://docs.microsoft.com/en-us/dotnet/api/System.IO.StringReader?view=netframework-4.7 Where is the link to the reference source on that page?
I've used tools in the past to generate docs based on summary comments, though they are 3rd party. Was definitely helpful assuming you're diligent with your commenting
I'm new to C# and this is realy godsend for me! 
corporate IT..some of us still have applications tied around older framework versions. In my own company, we still have a dozen applications and tools still running on 3.5 or 4.0. A lot of them are win form apps. Getting management to allocate resources to get them moved over is a major PITA. Then there are third-party libraries that we reference in those applications that to talk to legacy ERP system. But we still have to maintain them. 
I don't see it either. Stream has one... https://docs.microsoft.com/en-us/dotnet/api/system.io.stream?view=netframework-4.7
.NET had similar tools in the early days, but then Microsoft focused on providing access to the documentation via the object browser and leaving for third parties the possibility to generate documentation from XML docs.
Both? I mean, you can learn C# while you're learning whatever aspect of the .NET ecosystem you want. So if you want to dive into WPF, you can still learn how to apply new C# 7 features to it. If you want to learn some ASP.NET MVC, go ahead and figure out how to effectively use LINQ at the same time. Good thing is that because C# is so ubiquitous in .NET, and the applications/platforms of .NET are so wide ranging, that once you have a good handle on C#, you can relatively quickly dive into any other area of the .NET ecosystem without tripping over language syntax and peculiarities. So do some WPF now if that's what interests you, keep learning and becoming more effective at C#. Then, if on a whim, you decide to take a stab at mobile development, just create a Xamarin project. If you feel you want to make a website/service, create an MVC project. If you want to check out cloud programming, look into Azure development. If you want to poke around with some gaming, grab Unity and go through some tutorials. Say you dive into some Xamarin stuff, and 3-5 years from now you decide you want to make a native Android application instead, well, go ahead and grab the official Java-based SDKs and go. At this point, you'll already have gained some of the knowledge and experience that comes with mobile development/design irrespective of language or platform.
Funny guy asking Miguel whether he is aware of C# 6 syntax. 
People of my generation...the time has come for us to rebel against maintaining legacy software! Our lives are just too precious for this shit.
Making a action (securing it) and incurring another http request seems overkill. Given the views here though maybe I'll take another look 
AFAIK you can't run it standalone, or it's very complicated. 
The C# Player's Guide by R.B. Whitaker It's an effective blend of C# and .NET theory + practicality. 
Really not a fan of making the syntax even more complex and heavily tying it to specific types at the same time.
Can docfx automaticly/hinted generate links to source on tfs/github? I've seen some projects (e.g. F#'s FAKE api docu) having this. This is one thing I really miss in sandcastle.
There was one I tried a while ago. SandCastle help file builder. I'll have to look at that and Monodoc.
That's nice but I would hold off on all aesthetic changes like that until System.Numerics and the JIT have full SIMD instruction coverage, and the JIT can elide array bounds checks in more cases, and the JIT can do escape analysis, and the JIT can auto vectorize. THHHEEEEEN...dictionary literals, sure. =) 
Interesting. Maybe they have manually put some links into place, or the automated system is not catching everything, yet. It's a start though.
I would love to have this site offline. I'd love to host it on a company intranet.
oh.. I was happy for a moment until... a new error just got here http://imgur.com/a/Tcctc
"Table" is a reserved word/keyword, and cannot be used that way in that query. The table you're querying from should have a name other than "Table," such as "myTable" https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql
then youre in a chicken and egg problem. contribute to open source projects, create your own startup on tge side while you look for jobs.
I specifically want to know what is blocking the progression of the application. I listed the method and file in which I think the issue is occurring. It would be helpful if someone could explain why the application execution is being blocked; what causes this? I think that I might need to use multithreading. An example of how multithreading works would be extremely helpful. I also think that this same project could be accomplished through using sockets or asynchronous communication. Some resources or simple explanation would be appreciated. I would like to know why this is a better solution than just using a TcpClient. 
I've always used NUnit along with Fluentassertions and it works well. As others have said, the testing framework is far less important than the quality of the mocking and the tests themselves.
That's a hard one
You have the parameters in $.get() setup like you would for $.getJSON()... you can just switch method names and it'll probably work. If you want to use $.get(), you'll want to supply a forth parameter for datatype, in this case 'json'.
Reserved words or "illegal" sequences can be escaped using brackets in MsSql: [Table]; other DB-Systems tend to use accents: \`Table\`
thank you for the tip! I had no idea that people were so willing to help newbies here. 1 question on the sub and I already love it!
As much as i adore WPF, most companies are moving toward web and mobile app development. This is certainly NOT to say "all", but the demand for ASP.NET developers is higher than desktop app developers. This is unfortunate for me because I find desktop app development to be far more fun, flexible, interesting, consistent, and extensible than web development. WPF is incredible and I am truly worried about the depreciation of desktop apps in the last 3-4 years. Not everything is suitable for the web, but it seems like it's being forced into too many solutions.
A copy/paste from an earlier comment of mine, but i could never live without resharper. Im a mess without it. I'd miss these things the most: * a better live template system, * powerful template macros, * far more options for code colorizing/syntax highlighting, * far better autocompletion (in my opinion), * code suggestions for stuff that isnt in your imports defs yet/automatic resolution and adding of imports... on paste, * ctrl+click any type to navigate to either its source, the reference source, or a decompiled copy of the code using dotPeek, * XamlSourceNameResolver implementation is much better so it gives you code suggestions and context inheritance aware in weak-object reference property setters in xaml (also event name resolution), * xaml editor reformatting improvements with alignment, * solution wide on the fly analysis, * advanced regex colorizing and extended info on stuff like regex operators and syntax, * datetimeformats/timespanformats along with examples of the output, * a handy regex validator tool, * code generation and refactoring in general is far more advanced. * AssemblyExplorer * //Todo tracking * browse the stack trace live * see the resulting compiled IL code that any of your code will be compiled into live right there in the UI (awesome feature)
I mean, local functions probably have some difference to normal functions under the hood. Changing a pattern very well could change lots of assembly. I don't know about lambdas, but again, I am assuming E&amp;C works best for simple changes to assembly.
Could you describe what you mean the workflow changes would be using TDD? I use E&amp;C quite a bit for smaller changes when working with gameplay code. Here are some examples of how I use it. * Setting up a situation, running around in the game world testing it, pausing, changing how the character reacts to velocity or objects in the scene. * Adding a line to add a sound effect when a certain event occurs. * Adding a few lines to be able to stop at a certain item out of hundreds (ie: if (item.Type == Bullet) [BREAKPOINT] { }), just to check variables of that object. These types of changes are easiest to do while being able to pause, change, and continue. Sure the alternative is to just remember the changes needed, and restart the application, but E&amp;C speeds up this process immensely.
I see. I never did game dev, so I have no idea what the best approach is there. I just had more traditional development in mind, where you'd plan ahead your algorithm, write tests for it, then implement it.
This submission has been randomly featured in /r/serendipity, a bot-driven subreddit discovery engine. More here: https://www.reddit.com/r/Serendipity/comments/63z2pa/transfering_files_from_computer_to_server_xpost/
I tried using a conditional breakpoint recently, after a minute or so I stopped the debugging and replaced it with an `if` statement which triggered instantly.
Good luck on your quest. However, reality is going to smack you down so hard. 
Entity Framework will delay the query to the database to the point you actually use the data, its lazy by design. Your context is disposed in your view, you have two choices. 1. Call var emps = ....ToList() 2. Move using(var foo = yourContext) from action to class level so you have a private YourContext myContext; in your class und use that instead. MVC Controllers will take care of the disposing I would choose 1.
I don't know why someone downvotes you. While conditional breakpoints are very useful, they are really really slow like hell.
Removed: Rule 4. Using GUI controls is a bit of a different paradigm than a console application. There are many resources/tutorials out there for how to create basic "Hello World!" WinForms/WPF applications that should help you get a handle on textbox input.
To add to that, you really don't want `IEnumerable` properties in your view models or service method return types. Make it a `List` or another collection class so that you can't accidentally forget to call `.ToList()`.
My hope is that will change when Web Assembly becomes a real thing. It would be awesome to use C# in the browser again.
&gt; This is probably only working in windowed fullscreen mode. Which makes sense because exclusive fullscreen mode does exactly what it says.
It also makes it even more difficult to not use Microsoft's entire build chain when using C#
&gt; There are maths reasons why prime numbers are used in cryptography for example, but is there a reason why they have to be used to determine hash table size? Yes, and those are also maths reasons.
Because you can only add one thing at a time?
Yes, but it's also running as a DLL loaded by the game. Although, having said that, many games on Steam will happily run without loading said DLL if you move the game outside of Steam's directory structure.
Interesting. What about nVidia's overlay? Any way an application could use that? 
For front-end things.
truuuu thanks man it worked! would you mind explaining how by just adding .ToList() it is able to work? cause I'm sort of confused as to how that has anything to do with the db.context being disposed. before we even pass the VM object to the view page, we are already assigned the emp variable to the AllEmployers property which is a IEnumerable&lt;SelectListItem&gt; so by putting just this (without the .ToList() ) var emps = db.Employers.Select(m =&gt; new SelectListItem { Text = m.FullName, Value = m.EmployerID.ToString() }) It doesn't automatically turn it into a ToList() I guess? Also I'm assuming as good practice, it is best to use the using statement in each method to access the context as opposed to putting it as a private variable at the top of the class? does it have something to do with speed of the program or garbage disposal type stuff?
You've lifted some good points here. I could probably improve my workflow a bit. Most ofconstants and value tweaking is done through reloading values or ingame debugging menus, but it does seem like using E&amp;C really is the most efficient way of tweaking code for some games where actual code changes are needed and I can't really figure out a way to work around that in a decent way. I think at least for now the sacrifice to avoid these new 7.0 functionality, however much I'd like to use it, outweighs not being able to use E&amp;C.
I edited my post providing more information on your code.
Oh, your're right. I somehow confuses || with &amp;&amp; ...
I just noticed, nothing before 4.5. I hope its just the initial data, not the long term plan.
Its as though it were a kind of addiction.
One option is to simply not use a package reference. Just use a normal reference, with relative hint path, to the assembly. Another option is to turn this feature off entirely. I don't think the article mentioned it, but the instructions are in the MS blog post.
Use Paket: https://fsprojects.github.io/Paket/
If you want to check immutable binaries into your version control system then you will find that the tide is against you. With good reason.
Assuming for a minute that binaries on [Nuget.org](https://www.nuget.org/) would have the same issues as source on [npm](https://www.npmjs.com/) where this leftPad issue happened, what you would want in that case is a package server inside your organization. There are several. Version control systems are not optimised for large binary files, and there is no point in versioning files that don't change - a new version has a new name so is a new file. What invariably happens when packages are stored is that one or more packages are updated in the project config, but the files stored in source control not updated. The “packages that I keep” and “packages that I need” become increasingly disjoint sets over time. Then you have the worst of both worlds: large binaries in source control, and reliance on on the nuget.org server for packages. 
I don't know about now, but back in the project.json days you could specify the output directory of the downloaded packages. And you could check those in. There is probably a setting in the new csproj format that lets you accomplish something similar.
&gt; Version control systems are not optimised for large binary files That depends on the VCS. While git has problems with it, TFS or Subversion work just fine.
Removed: Rule 4. You asked pretty much this same exact question a couple days ago.
Its all about scope. Private in the parent class means only things inside it can access it. As the nested class is declared inside it can access things that are private. The public constructor can be accessed by anything that can access the nested class. As its a private nested class in the parent classes scope only the parent class can access its constructor. I guess this method would make sense if you wanted the nested class to be public but only allow the parent class to call its constructor.
I think... I think that makes sense to me, thanks! :)
and is that a good or a bad thing, cause msbuild xml build configuration scripts are absolute crap to work with... :|
If it was closed sourced you're right. But now that everything is becoming open source I don't see the problem.
npm is just for frontend/javascript tooling and code. nuget is for the backend .net/c# bits. The reason for the move to npm was to use standard tooling for the frontend instead of replicating it in nuget.
- Instead of putting properties inside your viewmodel, do I just put an object of the class I want access to? - I've seen it done both ways, but in my opinion, no -- your viewmodel should be decoupled from other layers of your app. - Do people usually put multiple viewmodels into one file? - One class per file. Period. This is an opinion, but I'll defend it to the death. - I also have seen some people put the actual class properties inside but also put something in the getter/setters such as `public int Age { get; private set; }` - This depends entirely on your implementation. Should that property only be able to be set from within the class? If so, `private set` makes sense.
thanks for the reply, just a question, what do you mean by decoupled from other layers? so are you saying I shouldn't be putting in a class object at all and just use properties of the class instead? 
They don't have to be. Besides improvements like this, they are fixing VS to use them correctly.
SIMD is half on Ryujit, half on whoever works on System.Numerics, which, I think seems to be a volunteer strike force? Not sure. I will send all of them beer. In fact I owe mellinoe beer already. and all of these guys and gals https://github.com/dotnet/coreclr/pull/10662 its happpening!! 
The JSON build configurations for Core weren't all that much better. Like it or not, build definitions can be difficult. Visual Studio does a decent job of handling that; it's only when you've got weird / custom build that it becomes problematic. 
I've tried using EnC before but it has never worked. It would allow me to edit the code, but it stopped all breakpoints from working and half of the time didn't even run the updated code (just ran what was previously compiled).
&gt; For that, there's nuget.org The interval is between being happy with nuget.org (not caring about packages) and maintaining your own server. I live in that space :) &gt; Ignoring the package folder is default in most standard .gitignore files. So you imagine that every time I add or update a package I go and manually force it in source control instead of removing the ignore from the .gitignore file?
If excel works anything like access, it'll get a handle on the file until the app closes. I know it's a big limitation, and I don't think there's much you can do to avoid it. Just something to keep in mind.
Have a look at The C# Players guide by RB Whitaker. It will explain a lot of concepts and is geared towards game creation. 
1. Do not commit in your `packages` folder. The current size of your repo is 60MB. Without the `packages` folder it is 200KB. 2. Do not commit in your `.vs` these files contains settings pertaining your visual studio set up. 3. In `Core.cs` there are a whole bunch of public methods that can be private. Don't expose anything you don't have to. 4. In the same file there are a few unused methods. 5. `Utility.cs` is unused. Delete it. 6. `IrcExceptions.cs` is pointless. Don't have a class that only contains a comment. Use an issue tracker for future improvements. 7. I find your code hard to read. Let your code breath and make it readable. Your [**LoadPlugins**](https://gist.github.com/anonymous/9012fac615c633d15d00197ed5a07415) vs my [**LoadPlugins**](https://gist.github.com/anonymous/90851570863a98c264f04b43d5b7e18f). 8. In `PluginWrapper` method `PluginsCallback` is pretty unwieldy. A switch case within a switch case? I'd look at refactoring that.
Learn Object Oriented Programming (OOP.) Specifically what classes are and how they interact with each other. It's a large topic, but very important to your fundamental knowledge. Also, once you know what a class is and how to use it, you will probably have answered a lot of your design questions. 
It's way easier, for one. Once you understand that a lot of MVC will be handled by "magic" behind the scenes, it becomes predictable to work with and you can have a site up and running in no time at all.
Check out a getting started guide about c# [here](http://csharp-station.com/Tutorial/CSharp/Lesson01). The nice thing about it is that it does not really get very technical and handles things like getting keyboard input from a console.
Thanks man, that makes perfect sense! I knew something was wrong in the workbook but couldn't drill down to the connection having the issue but this should give me the level of detail that I need. I'll try it out first thing Monday.
First and bestest thing to know is that HTML is stateless. Meaning every time the user sends a form back to the server, you're starting from scratch (unless you have some data stashed in the form, cookie, session, or database from earlier). https://www.youtube.com/watch?v=8Tl-kOcnn1U The next thing to know is HTML has different verbs for sending data to the user and receiving data from the user. The browser sends you a GET to request data, and a POST when it's sending data to you. In ASP MVC you'll implement different methods with the same name (distinguished by an attribute and different method signatures) to handle them. 
If you liked the general control flow style of your bash scripts but just want a language that's a bit more powerful, look for languages that support goto statements. I think most dialects of BASIC support gotos. If you want to stick with c-sharp, you'll probably want to read a tutorial on state machines and structure your program so that each paragraph or choice point is a state, and the playing making a choice causes a state transition. 
You need a compiler to compile it into on .exe. Visual Studio Code or Visual Studio Community Edition are free development programs for editing and compiling c#. I'm sure you could get a compiler outside of them, but I've never tried.
As a new developer, you should know that just about everyone googles half the stuff they do, it's practically a part of coding. That being said, the classes and such you are talking about are also used in languages like java, called object oriented programming languages. Look up some tutorials on that, and that should help in that area, but if you ever get stuck on making a part of your game, try a few google searches, you'd be surprised how often you find just the answer you need.
Yes, "Restore NuGet packages" can be done manually or during build-time. 
Again, that depends on the VCS. You don't pull the entire history when checking out a branch in TFS or Subversion.
I think it automatically does it on first build if they're missing? At least in VS2017.
&gt; Are there any other areas you had particular issue understanding, or that was somewhat more cumbersome than it otherwise needs to be? I looked at all your source code. Most of what I said earlier applies to almost all of your source code. The readability and design isn't as clear as could be. I think if you pick an area and really focus on polishing it you'll notice the difference. And yes, NuGet will automatically restore any packages that are listed in the corresponding config file.
Yes, this should be the default behavior. Packages can also be restored by right clicking on a project or solution in Solution Explorer and selecting "restore NuGet packages" or whatever it was. 
I can write any software than can be written, as long as stack overflow is up and the coffee pot has at least one more cup left. How much will it cost? Well, we will have to discuss that but lets start with "a lot."
Thanks i will keep that one in mind as well.
Removed: Rule 4. Feel free to repost, but include the zipping library you're using and the code you currently have.
A "for dummies" book can bring you a long way. 
Core stuff can target standard .net,so you get new aspnet/webapi stack running on top of standard .net. If you decide to move it to other targets one day, it should be easy (excluding porting standard only features). So, core project can use standard/classic assemblies when it is targeting standard/classic .net. Don't confuse "standard assembly" with ".net standard" though (just in case). 
If I'm understanding correctly, you're saying the intent I have is effectively carried out, but I've favoured an overly condensed style as opposed to something that is more clear and extensible? If this is what you meant, I can 100% see that. I've tended to use LINQ to 'simplify' too much of my code, as well as some convenient shorthanding methods, thusly reducing readability. I hadn't even noticed this until now
I started with this and really enjoyed the learning experience. I haven't finished it yet, but it's been great so far.
is this also related with using INotifyPropertyChanged? if so I wanted to use this way but it was sort complicated for me to grasp, I couldn't find a good tutorial on it
&gt; The browser sends you a GET to request data, and a POST when it's sending data to you. That's an oversimplification. It's more along the lines of GET is idempotent while POST is not. So, if a request makes changes (such as modifying something in a database), it should be done via POST. Requests that are OK to link/bookmark (such as search results) should be GET.
Learning C# is an admirable goal, and I hope you succeed. C# is a great language for a lot of things. However, specifically for creating adventure games I'd recommend that you take a look at [Inform 7](http://inform7.com/) - which is an amazing tool for penning adventures in natural English syntax...
check this link for more details, it's called method overloading. http://csharpindepth.com/Articles/General/Overloading.aspx
Sounds like you might need to start from the beginning. Get familiar with functional programming, then move to object oriented programming. There is no shame in getting a tutor if you need to. Programming is fun!
Yeah, okay. Let's say I would like to keep using resharper. What shitballs moster PC do I need to get it working like a champ? I've tried everything short of overclocking with liquid nitrogen. It's not like there's any better consumer chip than 7700k. All the ryzens and HEDT are garbage at single core - which is still what resharper is busy with most of the time. Ridiculous. 
It is, but I have already completed the questions, I'm just going back through and finding other ways to answer them to better my knowledge :) So this has nothing to do with the homework I have to do.
Is there a better way? Think of all the things resharper had to do every time I bang my fingers on the keyboard... 
Well, is it too much to ask for a smooth experience on the best hardware?
You can try Rider it's basically Resharper minus visual studio overhead
The compiler really doesn't assume anything about them being the same function, that's more what you should hope the coder has thought of. The compiler just treats them as any two methods. 
They don't have any official plans to deprecate the old framework, but I think it will end up more and more in maintenance mode, then support mode and eventually it will go the way of the dodo. The time frame is hard to speculate about, but we're talking several years.
Are you saying that there's a faster single core perf chip than 7700k?
Looks like this article is outdated. VS 2017 and Roslyn don't share the same process any more. But like the other commenter, I moved on; R# is not worth it any more.
This sub allows answering _any_ question, including homework questions, so long as the OP has put in a decent concerted effort to solve the problem and posted relevant source code. That is, they can ask about a _specific problem_ about a particular aspect of their homework. They cannot dump the assignment and ask to finish it or what to do. EDIT: Just to be clear. /u/RichardMotion's question here passes the test. He has working code, and is basically asking for a flavour of code review and ways to improve it.
Why would u even consider converting it to string? An other way is to use Linq and go with Any(), FirstOrDefault(), Single()
It's called overloading
&gt; Why would u even consider converting it to string? I have to say this far more often than I would want to at my workplace. :(
I tried to move on but 2017 still is missing some features I use daily. Some of the refactoring's like linq to foreach and foreach to linq I use frequently for debugging linq. Also the find usages windows is still many times better than the VS 2017 one, until find usages has filtering for reads and writes like resharper I cannot just use VS. Also resharpers go to anything is better than the VS equivalent. I will say however that VS 2017 is sooooooo much faster than 2015 in day to day use, even with resharper.
Where did it mention Roslyn? It says VS and ReSharper share the same process, which unfortunatelyis still the case. Besides ReSharper being awfully slow, it still provides a lot of features that are not available with Roslyn. If those features matter to one everyone must decide on their own.
I'm not saying it's a good idea. OP was posting here with what seemed like the reasonable answer already but was looking for other ways of going about it so I provided one.
Is rider any good? Does it work well for WPF applications? I haven't tried it out yet. edit: Ask if it works ok for WPF applications.
To be clear, your first example would be a compiler error. The second example would compile just fine.
Currently using VS2017 without ReSharper. At the beginning it was hard but I have found extensions that give me somewhat what i miss and I've gotten out of the "ReSharper habit". Still looking for something like ReSharper's code formatting though. Like aligning all the lambda expressions by the dot. var res = dataContext.Rows .Where(a =&gt; true) .Select(a =&gt; a) .Skip(1) .Take(2) .ToList(); Formatting all the method arguments on each line and aligned. var res = Helpers.DoWork(arg1, arg2, arg3, arg4 ... argX); And the Todo list where all **//NOTE: something** comments are located.
This way of formatting will break when renaming stuff. It's imho better to put the first param / dot on a new line and indent it with the tab-key. var results = myDataCotext .Rows .Where(... 
But you shouldn't. Everything is open for abuse if someone wants to abuse it. 
For methods with the same name, to distinguish them C# requires that methods differ by parameters (number of parameters and their order in the signature). It ignores the return type when determining uniqueness. Interestingly though, the CLR does allow this - as it determines uniqueness by set of parameters **or** return type So this code will **not compile in C#** even though the CLR will allow it. string GetJobTitle(string employeeID) JobTitle GetJobTitle(string employeeID) I believe the only .NET language that leverages this CLR feature is IL assembly language.
[The relevant line.](https://github.com/dotnet/coreclr/blob/master/src/mscorlib/shared/System/Random.cs#L91)
I can relate to the frustration but we as programmers of all people know there's no such thing as a free lunch. 
Today, I attempted to clean out and re-install a lot of nuget packages, including anything related to System.Runtime, for each project, including a utilities project I use. I also re-downloaded all of the developer packages for .net 4.5.2 to 4.6.2. Uninstalled the clickonce project, republished, and installed it again. still the same error. I'm baffled as to why I can just run the executable file in the `\bin\Debug` directory without issue but cannot run the published executable. As it's just a personal project, this won't be much of an issue, just extremely annoying to know that if I choose to share the project, it may not install on someone else's computer. I guess I'll try to use another, more featured, installer to see if it works out the bugs.
IIS? Have you looked at https://github.com/webprofusion/Certify or the other options at https://letsencrypt.org/docs/client-options/ 
Thanks, but I'm doing self-hosted, not IIS.
We've looked into your problem and it seems you aren't using edge. Please use edge to ensure your browsing is fast and reliable!
You can still self host IIS....
That sounds surprisingly similar to what Gmail + Chrome does every time I check my mail.
If you can access the splash page via IIS already, you should be good to go. All you have to do is put the files that are generated when you do the click once deployment into the same folder as the currently served splash page. What I have done in the past is publish the clickonce application to a local folder on your dev computer, then manually copy those files to the windows server. Then you access the application via either www.domain.com/MyApplication.application or www.domain.com/setup.exe Only Internet explorer and (i think) Edge will automatically launch the application from the web server, chrome and firefox you have to manually download the setup.exe and run. Also, from this link: https://msdn.microsoft.com/en-us/library/31kztyey(v=vs.80).aspx Step 3: This is the location on your local machine to publish the files to, so it is your \\computername\temp folder Step 4 is the web address your hosting on. Hopefully that helps
This is common knowledge, and unless you're doing some very trivial randomization which isn't used for anything even remotely security related, you're doing it wrong. `RNGCryptoService` is what you should be using instead.
Thank you!
Write a program that solves an NP-Complete problem in polynomial time.
The title is very click baity. The low quality random number generator producing low quality random numbers is not a serious bug.
There has always been this remark on the [System.Random](https://msdn.microsoft.com/en-us/library/system.random(v=vs.110\).aspx) class however: &gt; However, note that Random objects in processes running under different versions of the .NET Framework may return different series of random numbers even if they're instantiated with identical seed values. I personally feel people expecting that System.Random will always return the same sequence on any .NET framework or computer are living in a state of sin. May be controversial, but to hell with them (w/ my apologies to their clients). EDIT: Somewhat tongue-in-cheek. At times it's nice to fantasize that we live in a world where we can do these things.
Well I didn't downvote anything. I went from the assumption that you genuinely didn't know about this and that makes it a perfectly valid question on your part. So no worries! If you're interested, you can look up information on PRNG vs TRNG and QRNG
This is a good example of why you do not do security if you aren't digging into security. The difference between Random and a cryptographic RNG is like the difference between GetHashCode and a cryptographic hash like SHA
He's currently doing a text-based console app. Unity is rather overkill for that.
Download xamarin studio as a start. Everything else is covered all over the place with tutorials.
Bob Tabor in his course starts with Windows Console applications. Can I do that on VS code?
Right, but can do console applications and should be able to follow the same steps. I use it for web development but it seems pretty spot on with windows version. 
Have you tried using a `IValueConverter` to go find the right one and convert it to what you want to show? Gonna look like this: https://i.imgur.com/AVplBcn.png
There shouldn't be any major differences between a console app on windows vs mac, but you may encounter some. Use Rider if at all possible, or at least VS for Mac. VS Code is fine, but Rider has a lot of very helpful code assistance tools that will point out errors and suggest ways to improve your code. 
Is /r/learncsharp even active lol? /r/csharp barely gets activity anyway, so splitting them up seems counter productive. Saying that, it seems to stop as many people asking basic google-able questions on here as often.
Not as scientific as all that, but I do observe CPU spikes for the duration of the percieved lags in the normal taskmanager. I know, I know - might be a little bit of whatever... but I do suspect it's CPU. It frankly stands to reason, some code ineficiencies in Resharper cause intellisense or something to spazz out on slightly larger than test projects. For the longest time I've had the issue of a 2 second freeze up every time I press semicolon. Turns out resharper was doing something silly, and it got semi-fixed in one EAP. I don't blame them, to be honest, I just want everything to work smoothly. It should be a trade-off, say money for performance - but it simply isn't. You can't buy a better CPU than 7700K for resharper no matter how much money you are willing to waste.
With EF if you have a reference to ModelB it won't be included in a list of ModelA unless you actually request it to. And EF has no difficulty with handling a null-to-many relations in a model.
Bootcamp and add a Windows partition. 
You also have to consider the possibility of undesirable character combinations like swear words, infamous historical and political figures which should probably be filtered. The chances are slim, but eventually you'll hit a https://img.ortung.com/fuck or worse.
That does mean that someone who recognizes that pattern could sequentially query all your links, with the "hash" then they have to try the billion possibilities. 
I'd imagine the first thing to do is read the documentation about what formats it can accept. Then, we can check if let's encrypt can produce them. If not, it could be a feature request. 
You had a small code snippet with a clear screenshot of the error. We are willing to help people who take enough care to ask a proper question :)
In a pinch, if the console related tutorials just aren't working for you on Mac you can always use https://dotnetfiddle.net/ until you move to the more webby/desktoppy stuff. Same thing except different.
There are actually plenty of reasons to want randomness to be deterministic that don't have to do with cheating or rigging things. In a videogame for example procedural world generation oftentimes requires a constant seed which is typically saved with the game world.
Thanks for putting this together! I'll have to play around with it a bit more, but I think this would be a much cleaner way to do what I need.
I want to create a c sharp script that sends two images to another program, one to be styled after the other, and then one image of them combined can be received by the c sharp script.
Exactly :) 
I got that. But what do you **really** want to achieve? Do you want to create a service for others? Do want to make funny pictures for yourself whenever you want? Do you want to learn ML/NN?
We were tryin' to keep this friendly and you had to be a piece of gawbage cawksuckah. Wait till Lamar comes over and has some words wit yer mudder.
my muddahs a saint on eart'. Lamar was just comin' over to fix the rug, he aint never banged my mother sometimes. fathers an encyclopedia salesman...
I don't understand.
GUIDs have up to 2^128 permutations, about 5 billion billion billion as many as the 62^6 from the OP.
A stupid chip chipperson reference. I was only jokin'
&gt; self-hosted James Osborne, a PM for Azure IoT, talks about this but cautions it isn't for production. https://blogs.msdn.microsoft.com/james_osbornes_blog/2010/12/10/selfhosting-a-wcf-service-over-https/ I assume this is because Microsoft doesn't want the liability that might come with any unknown vulnerabilities of exposing self-hosted WCF application to the Internet? 
Its just like what others already said. But more technical, the name is just a convenience for programmers once its compiled its just an address in memory and its pretty trivial for the compiler to know, when it has a,b,c arguments it goes to this address, and when it has x,y,z it goes to another address.
If you don't care about someone incrementing their way through your content (and possibly stealing it to re-host on their own site), that works fine. 
This is for myself
Maybe [Visual Studio Code](https://code.visualstudio.com/download) would work? 
Removed: Rule 5
[This](https://www.reddit.com/r/csharp/comments/60alwo/a_tour_of_default_interface_methods_for_c/?ref=share&amp;ref_source=link) was the previous discussion on the topic here at r/csharp, for anybody that wasn't involved. My misgivings are slightly tempered by the knowledge that they're hoping to allow interfaces to be extended without breaking *binary* compatability, which is/was (frustratingly) nowhere mentioned in the [github posting](https://github.com/dotnet/csharplang/issues/288). In that light, I'm way out of my depth as a member of the peanut gallery, and I'm not sure if that could be managed with [shapes](https://github.com/dotnet/csharplang/issues/164). I'm flattered to be quoted, though.
 * It's a breaking change when you switch. If third parties are referencing your library and you swap from Fields to Properties (or vice versa), the third party must recompile their code. They can't just hot-replace the DLLs on deployed applications. * Properties can be used against interfaces. Fields can't. * Several data serializer implementations work against properties rather than fields. (But this would be a design choice by each individual serializer)
Is this available offline? 
Wow, so despite the HUGE negative reaction on Github's issue page for this, they are doing it anyway. What's the fucking point of making open source if you literally listen to none of the community's outrage at it?
I'll be posting an article on shapes later this week. Briefly, Shapes don't accomplish the same goals but is far more interesting from an extensibility perspective.
You seem to have gotten plenty of alternatives already for your IDE, but are worried about console applications on Mac. They should work almost identically, but I did find this page with one difference: http://stackoverflow.com/questions/40690871/visual-studio-mac-console-application
a text editor and [mono](http://www.mono-project.com/download/#download-mac) 
Stay tuned for my report on Shapes. They aren't mixins, but they do address some of the same problems.
https://www.reddit.com/r/csharp/comments/5vvu7k/c_language_feature_proposal_shapes_and_extensions/ Heres a very interesting post on the concept of Shapes in C# that i enjoyed quite a bit! I look forward to your take on it. I disagree heavily with developers who want to limit the type system of C# because shitty developers might abuse it. I find this to be a really flawed development strategy for a language as well-formed as C#.
Me too. I do understand though why people don't like this proposal, because it alters the very *meaning* of what an interface is supposed to represent. I'll take it if it's this or nothing, but I too would prefer something more explicitly designed for MI rather than back-adjusting interfaces. I've read through the Shapes (typeclasses) proposal a few times now and I'm *really* excited about that. I really hope that we get that instead, and leave interfaces alone. Typeclasses solve so much more then MI too. I wrote a `Number` wrapper struct for my engine because .NET has no built-in public 'Numeric' type. With typeclasses/shapes however we can declare a Number shape and get almost all the way there but with a much nicer solution. So, all in all, I'm feeling hopeful about the future of C#. The other thing to remember about default interface implementations is that they've been in Java for a while now, and it's not like the Java world has collapsed in to disarray as a consequence. So they are a somewhat proven pattern.
&gt; I really hope that we get [Shapes] instead, I think it's possible that we'll get both.
FAWKIN HOT DOGS? WHY DONT YOU SERVE COLD CATS?! TSS.. I'm enjoying people getting irritated by fuckin Chip quips
COLD CATS? DOUBLE GUNS CAWK SUCKA! There is no greater reason than to annoy people. You could always go classic Norton and tell people "I hope you slip in a puddle of AIDS". 
&gt; The 'community' isn't everything. Microsoft has, after all, a substantial population of developers inside their walls, with their own demands and needs. I think they could do a better job at making their case, here, but I think the github posting was not to ask the community if that was a feature they should implement, but to alert the community that it was a feature they would implement. That's not true. Original proposal wasn't raised by a Microsoft employee and if the suggestion received bad feedback then those said programmers could've voiced their opinions in the issue thread.
It might be better to take out all vowels and numbers (numbers to avoid stuff like 696969 and b00bs1). string Chars = "BCDFGHJKLMNPQRSTVWXZbcdfghjklmnpqrstvwxz"; which still leaves 4,750,104,241 combinations. At that point you might as well give up on a few hundred million for simplicity of storage and internally use an unsigned integer and only convert when rendering the url: public string Convert(uint n) { long rem1, rem2, rem3, rem4, rem5; var div = Math.DivRem(n, 42, out rem1); div = Math.DivRem(div, 42, out rem2); div = Math.DivRem(div, 42, out rem3); div = Math.DivRem(div, 42, out rem4); div = Math.DivRem(div, 42, out rem5); return new string(new[] { Chars[(int) div], Chars[(int) rem5], Chars[(int) rem4], Chars[(int) rem3], Chars[(int) rem2], Chars[(int) rem1] }); } There are still some questionable values like mstrbt (this is a game you can not win), but it at least reduces the problem to one that is well studied and optimized for. 
One of the most imediate benefits to using auto-properties (blank properties, as you call them) is the use of the initializer pattern: var thing = new Thing(){firstName = "Bilbo", lastName = "Baggins" }; This is better than: var thing = new Thing(); thing.firstName = "Bilbo"; thing.lastName = "Baggins"; Because it's done in one step, rather than 3 steps. When done in one step, either everything works, or it throws an exception. When done in 3 steps, it can fail in any step, and leave an invalid object. You can accomplish much the same with constructors, but because C# uses only position to identify the arguments to the constructor, you can't always cover all cases with constructors. For example, lets say your object has firstName, lastName and race, and all three are optional, you can't have a 'firstName only', 'lastName only' and 'race only' constructors since each would take a single string argument and there's no way to distinguish which is intended. It's will also save you time, down the road, when you need to add validation and other things to your members (like the race can only be "Elf", "Orc" and "Hobbit" so you have to add validation to the setter. (I'm probably gonna get sued by the Tolkein family, but there you go).
I think that creating the impression that data annotations are "business logic" is a little faulty. Sure, a lot of them seem that way, but they really aren't. Use them for security, use them for routing, use them for basic validation. I agree with you though, in that they should not be used for full-blown business logic in a large application where that logic needs to be implemented by other things. It's easy to throw them in an annotation and make that mistake; however, it's also easy to create another level of abstraction for the business logic, then use the abstraction in an annotation without issue. They are a tool in the toolbelt. It's generally a good idea to not think that everything is a nail when you have a hammer.
First, I'm sure that object initializers can be used to set any field or settable property of the object. It gets turned into a [temporary variable behind the scenes](http://stackoverflow.com/questions/1679780/when-using-object-initializers-why-does-the-compiler-generate-an-extra-local-va), but it's not restricted to setting properties. Second, you can use named argument syntax with constructors, too. So, if you declared Thing thusly: public class Thing { public string FirstName { get; } public string LastName { get; } public Thing(string firstName, string lastName) { FirstName = firstName; LastName = lastName; } } you could initialize it like so var thing = new Thing(lastName : "Baggins", firstName : "Bilbo"); if you so desired. This has some advantages, as you don't have to make the object mutable.
ANNNNND now all of my tests have disappeared from the Test Explorer. `The given assembly name or codebase was invalid.` wtf is that e: And this wonderful error poped up. http://i.imgur.com/5QL0msw.png
The motivating purpose of this proposal is to solve interop problem with languages (like Java) that have a similar capability, to improve things like android development. It's not meant to promote programming with interfaces and multiple inheritance, but because interfaces can be multiply inherited the design has to consider what happens when multiply inherited interfaces and default methods are combined. 
I would be curious to see what the state of the object would be if you wrapped the 3 line option and 1 line option in a try/catch and simply ignored the exception in the case where the last member assignment resulted in an exception.
If a framework for machine learning would work, try out http://accord-framework.net/ Otherwise if you just want an API , even if there are no c# libraries/frameworks you can try web scraping and querying, a website.
I learned C# using a Mac and following this course on EDX https://www.edx.org/course/programming-c-microsoft-dev204x-3 , beside the course use Visual Studio I have no problem using Xamarin Studio. This course is composed of 12 modules, from module 1 to 8 and module 10 there was no problem, with module 9 (events and delegates), 11 (Task class) and 12 (async and await) You are prompted to use WPF on VS and were the only modules with which I had some problems. I also want to learn Xamarin so the next step is https://www.edx.org/course/introduction-xamarin-forms-microsoft-dev215x-1#! This course I'm just starting today.
While I understand your point, compare this proposal to the feedback on other proposals for C#.
No, I love the idea of full-blown MI in C#. I actually am not a huge fan of this solution, because the idea of interfaces-as-contracts is very heavily ingrained in existing code bases. I would love to see a true trait/mixin solution, but something tells me that's not something the C# dev team will ever embrace. If this is the best were gonna get, then its certainly something. I don't know enough about how much can be changed in C#'s type system without requiring CLR changes, which is definitely an aspect that the C# dev team would take into consideration heavily. I just don't like the notion of being limited because other developers might not understand how to use a given proposed feature properly. That's the responsibility of the developer.
That may be true, but they broke other interfaces such as the ones in JDBC. (I got burned by that in my last serious Java project.) In general Java has a bad habit of using abstract interfaces where abstract classes would be more appropriate. 
I was talking about this sort of thing: public class Thing{ public string FirstName {get; set;} public string LastName {get; set;} public Thing(string firstName){ FirstName = firstName; } public Thing(string lastName){ LastName = lastName; } } You can' to that with constructors. I've been informed you can use the initializer syntax with public members too, so the auto-parameters don't do anything for you there.
I don't find that claim to be compelling. It wasn't stated as such in the proposal and goes far beyond what would be needed just for Android/Xamarin compatibility. 
Hopefully they'll have automatic diamond inheritance detection. 
Have you looked into optional parameters? They came into the language with named parameters, and let you give a method (or constructor) argument a default value. Arguments with a default value become optional, and take their default value if not specified. So, you could do something like this: public class Thing { public string FirstName { get; } public string LastName { get; } public Thing(string firstName = "", string lastName = "") { FirstName = firstName; LastName = lastName; } } and use the constructor in *any* of these ways: var x = new Thing(); // first and last name are both empty strings x = new Thing("foo"); // first name is "foo", last name is an empty string x = new Thing(lastName: "foo"); // first name is an empty string, last name is "foo" x = new Thing(firstName: "foo", lastName: "bar"); // first name "foo", last name "bar" x = new Thing(firstName: "foo"); // first name "foo", last name "" x = new Thing(lastName: "foo", firstName: "bar"); // first name "bar", last name "foo"
Okay, I gotcha now.
Hoping to see a discriminated unions proposal soon as well!
Yeah I'm with you here. I would prefer a different approach but if this is what we get then I'll take it.
I still don't like this. I don't like the idea of mixing code into an Interface definition *at all*. Brainstorming... How about you can just specify a default implementation of an interface, instead. That default implementation is a regular class and must have a default constructor. public interface IFoo : default(FooImplementation), IComparable, ... Where FooImplementation doesn't even need to be public. And then you can instantiate the default implementation with var myFoo = new default(IFoo); To make the other thing these interface implementations do, adding only a few implementations, add some syntactic sugar to make composition easier. public class MyFoo : IFoo wraps default(IFoo) { ... public override string ToString() { return "(MyFoo) " + default.ToString(); } } There is now an implicit "default" variable alongside the "this" and "base" variable/keyword. Every public/protected, non-abstract method and property is automatically implemented as a wrapper around default. You can easily implement default behavior for an interface, but no implementation code is in the interface itself and no implementor of that interface gets default implementations without explicitly requesting it. Composition allows you to explicitly pick and choose what you want to reuse from the default implementation.
Is that default behavior? Not checking the validity of certs between services is dangerous.
If I were to modify fields directly, I would be worried about changing state, but not when changing properties. If the API designer is depending on the property state not being manipulated, I expect the setter to be private/protected to avoid being changed outside, but readable. A field as others have states should never be public, while properties should typically be at least have public get (if anyone can provide a realistic scenario for { private get; public set; } I'd be glad to hear it)
Then I recommend using [https://deepart.io/](https://deepart.io/) and paying some bugs. Alternatively, rent a Azure VM, choose and run a docker image [like this](https://hub.docker.com/r/albarji/neural-style/) and import your pictures. There are C# ML libraries that can handle Neuronal Nets but its a very long way from NN to a GPU supported Deep Learning application.
You are getting really close to the Shapes proposal.
I can see it now... &gt; And here we have the LameDuck class inherent from the Duck and Lame classes. 
Apparently, I need to read the Shapes proposal. Edit: Read up a little on it. So Shapes is basically strongly-typed duck typing?
Just for the record the first one is a field not a property.
You should consider filing feature requests on roslyn repo.
I was actually afraid it would be a "low effort" one but hearing this I'm feeling better. Thanks a lot!
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/programming] [Speed-up the bottlenecking C# loop by parallelizing it with "Cekirdekler API" that uses ALL GPUs and iGPUs and CPUs in pc at the same time. • r\/csharp](https://np.reddit.com/r/programming/comments/64mthp/speedup_the_bottlenecking_c_loop_by_parallelizing/) [](#footer)*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))* [](#bot)
Or just install LINQPad... that is already a desktop application and not some shitty half assed node thing.
I don't understand all the backward contortions to avoid multiple inheritance. There is nothing inherently wrong with it, and having this feature would have saved me a lot of trouble. I've used multiple inheritance in C++ to wonderful effect and have never been subject to those "scary" diamond conflicts. Give people the tools they need..
Yes, I'm a newbie, I just learnt the rules. Deleted that link in programming subredit.
I'm not sure why everyone is telling you an IDE or editor to use when you want learning resources. Xamarin's website itself has good resources here: https://developer.xamarin.com/workbooks/ and here: https://developer.xamarin.com/guides/ Additionally, they have a giant pdf for using Xamarin.Forms to make a mobile app here: https://developer.xamarin.com/guides/xamarin-forms/creating-mobile-apps-xamarin-forms/
...comprehensible price structure?
Also in C#6 you can drop the setter altogether and have an effective read only property without wrapping a field. You can set the value in the constructor only. 
Interfaces is the most compelling reason for me. 
You're mostly there In the Java world you use getters and setters for every member variable so that if you need to create some sort of computed value later on you don't need to change any code except the getter or setter function. This leads to a shit ton of boilerplate code. getMyVar setMyVar You also lose the ability to use the assignment operator to set variable and Java doesn't allow for operator overloading. C# allows you to autoimplement the getter and setter function. The compiler will generate a backing variable and flesh out the getters and setter functions. Additionally it's nearly impossible to tell the difference between a property and a field because they mostly act the same and can be used the same. (Though will take recompilation) Properties are especially valuable for computed ones Here is an example I had a time sheet object that had information like the date range and pay period it also had child elements for specifying the time worked for each day. (I called it a time sheet entry) while I could create a function called GetHoursWorkedInWeek because this is a property of the time sheet it made more sense to create a property called HoursWorkedInWeek which sums up the time sheet entries a double returns the appropriate value. 
Because you type prop, press tab twice and bam it's all written for you.
The terminology for what Go does is [structural typing](https://en.wikipedia.org/wiki/Structural_type_system), in contrast with C#'s [nominal typing](https://en.wikipedia.org/wiki/Nominal_type_system).
Yes, though of course it could change next week. 
Send me an email and maybe I can help you get the right sort of attention. Jonathan@infoq.com
Did you even read? I said: &gt; If you dont have something like LINQPad (my favorite) you can use DotNetFiddle (there's also others, I just like this best). No need to be a dick. Just trying to lend a hand, shit. And if you think Electron is some *"shitty half assed node thing"* you're very sheltered in the realm of development and I feel sorry for you.
As far as I know, Microsoft removed support for UAP(Win8) in VS2017. You can try using UWP(Win10) or switch back to VS2015, which is the last version of visual studio with UAP support 
Googled information on UAP and UWP based on what you said, and they should be basically the same thing. I just to need to somehow find a equivalent to the 'Blank Page' Template when I get home to my computer. Thanks for getting me into the right direction.
Your example with the constructors is invalid and won't compile (at least on VS2017). Overload resolution requires unique parameter types and therefore can't tell the difference between the two. With your example I get the following in C# 7: &gt; error CS0111: Type Thing' already defines a member called '.ctor' with the same parameter types 
Common serializers such as `BinaryFormatter` use fields.
You can, but that's not the same at all
I sent an email sir.
Because readonly fields (like readonly properties) can only be set from constructors. With private setter you can set the property from anywhere inside same class. 
Do you mean [blank App(Universal Windows)](http://imgur.com/a/4acWc )? this template only contains a blank MainPage 
Assuming the question is serious with proof that the person has actually seriously tried to solve it themselves, no question is too small :)
Exactly. Before my example I said "You can't do this." making the point that C# only considers the position and types of arguments, but the names don't matter. 
Yeah, I understand the whole Pseudo randomness. I just think it's ironic how we call it "Random" when it is anything but random. Don't get me wrong I realize it is dead useful for all kinds of behaviors in coding. I use it a fair bit myself :)
Check out [Microsoft SharePoint Client Object Model](https://msdn.microsoft.com/en-us/library/ff798388.aspx)
I have this (the only part that Works is adding the REAL GROUP NAME to the comboboxdepart) /* ABOVE THIS THERE IS A LOT MORE CODE BUT THIS IS THE PART THAT LOADS THE GROUPS FROM AD AND ALSO PUTS IT IN A COMBOBOX */ //Groups: // create your domain context PrincipalContext ctx = new PrincipalContext(ContextType.Domain, "domain.com"); // define a "query-by-example" principal - here, we search for a GroupPrincipal GroupPrincipal qbeGroup = new GroupPrincipal(ctx); // create your principal searcher passing in the QBE principal PrincipalSearcher srch = new PrincipalSearcher(qbeGroup); // find all matches foreach (var found in srch.FindAll()) { if (found.DistinguishedName.Contains("OU=DOMAIN,DC=domain,DC=com")) { Globals.groups.Add(found.SamAccountName); if (!Globals.groups.Contains("excludedgroup1") &amp;&amp; !Globals.groups.Contains("excludedgroup2")) { Globals.tooltipforgroups.Add(found.Description); } } // do whatever here - "found" is of type "Principal" - it could be user, group, computer..... } var array = Globals.groups.Distinct().ToArray(); foreach (string x in array) { if (x != "excludedgroup1" &amp;&amp; x != "excludedgroup2") { comboBoxDepart.Items.Add(x); } }
That cannot work as long as you're not on the SP server itself. I'd also recommend taking a look at CSOM (client side object model) in your case. 
np, by "actual User class" do you mean, so let's say I have a class called LicenseIndexModel, inside that class I can't put public class LicenseIndexModel { public User User {get; set;} } or is an example of what you would call putting in an object not a class? 
While I really, really want them to fix E&amp;C support for C# 7 features, I'd be happy to wait a bit longer for that, if only they would fix the fact that adding a 'using' statement is considered a "rude edit" (breaks E&amp;C). I use ReSharper Import Completion to pull on types and extension methods (ReSharper adds the 'using' for me). I use it all the time without thinking about it (muscle memory), only to be frustrated each time when it breaks E&amp;C. I once suggested to the developer who works on E&amp;C in the Roslyn team that they collect telemetry on rude edits and prioritize their work based on which limitations are breaking the most people, and was told they are already doing that - so - there is hope :)
An important distinction between fields and properties that hasn't been made yet, is that properties are actually methods. This allows you to do things such as this: public virtual int property { get; set; } The compiler converts this into: public virtual int get_property() { return _property; } public virtual void set_property(int value) { _property = value; } Which is why if you do this, the compiler will say 'Member with the same body is already declared: public int Property { get; set; } public int get_Property() { return 0; } So, anyway, making properties virtual allows you to override the properties (methods), either compile time or runtime. For example Entity framework makes use of this by generating dynamic proxies, so the properties can be used to lazy load foreign relations automagically
Just a tad bit
Interesting, thank you! Yea, i'm not tied to bouncy castle, so I could do something like you are describing. I've done more research, and it doesn't look like bouncy castle has the API available for modifying the counter manually.
Are you surprised? Filling a thread with obnoxious irrelevant quotes "cocksuckers" and "fat fucks"? Wow, so hilarious, DAE EDGELORD? LE MEME XDDDDDDDDDDDD
It is true the proposal does appear to extended beyond the initial purpose, but that is primarily due to the designers answering the question; if I can declare a default implementation for a interface method inside an interface, can I declare one in a derived interface? And if I can declare one in a derived interface, can I override a default method specified in a base in a derived interface. Everything else follows from there. Alas, though, it is also true that Neal is pleased with the idea that this proposal basically introduces traits to the language.
the docs show that as one of the options https://msdn.microsoft.com/en-us/library/dd182434(v=vs.85).aspx perhaps break it up into their example like so: C# // Using the PowerShell object, create the // command pipeline and add the commands and &gt;PowerShell ps = PowerShell.Create(); &gt;ps.AddCommand("Get-Process"); &gt;ps.AddParameter("Name", "s*"); Note they use AddCommand rather than AddScript here though
I'd stay away from workflows if I were you. Just creating the SPWeb though CSOM should work and be easier to maintain. Source: have been an SP Dec since 2009 (kill me)
Alternatively: also look up SharePoint PNP (patterns and practices) on GitHub 
If `User` is your C# class that represents the actual database table, it probably shouldn't be a property on the `LicenseIndexModel`. Instead, you should have a `UserModel` that you create from an instance of `User`. This `UserModel` would contain any/all properties from `User` that you want access to (but would **not** contain a property of type `User`). Building the `UserModel` from a `User` can be handled in a variety of ways. You could have a constructor on `UserModel` that takes a `User` parameter, and then map the properties there. Or you can use LINQ's Select() method combined with an object initializer. Or you can use something like Automapper (although I firmly dislike it, it is very popular). No matter what the technique is, the basic idea is the same -- map the properties of `User` to `UserModel`.
I used the serialport library recently and wished I used one of those available on internet (paid or free). Anyway, I'm using ReadLine() with an infinitetimeout. Without the infinite timout I had isues. So it means my application cannot close nicely, which isn't an issue for the app I created. Since you don't have an End Of Line, you can use ReadExisting() and loop on it. You can put a little delay in your loop if you want. Ideally, you should be able to set a timeout so you can close your app nicely.
Ok i will take your advice ! I've created something similar in workflows before so i was going to dig it up but i think learning to do it through CSOM should be better, thanks again for the advice !
Yeah, it's for a personal app. The serial port API is really broken and it seems worse when used with virtal COM. I tried all the other recommended approach found on the web and it's the only way to get it to be reliable. The best way is to not use it at all and buy a library or try one of the free one. 
I have been using SerialPort.DataReceived and the only time I ran into any issues with reliability was using it with mono. It just completely does not work in mono. At All.
I don't agree entirely. The .Net SerialPort class has some problems, however, I have complicated apps that do gigabytes of data over serialports using data of all sorts of structures and I have no problem getting SerialPort to work. You have to know what you're doing, and you can't take the lazy way out, but it can be made to work fairly directly.
Here is one way with the base stream: http://www.sparxeng.com/blog/software/must-use-net-system-io-ports-serialport
Read directly from BaseStream using Read or BeginRead. Close the port when you want your read to back out, making sure to handle the exception that'll happen. Use a state machine to extract your packets from the byte stream. Use big reads in order to minimize CPU overhead.
Can you elaborate on the unreliable/flaky? X of Y packets received? Is it a hard line, wireless? What is the other device that is tx/rx? Are you sure of it's reliability?
Other device is a radio, going through a USB to UART converter. I am sure that the device is reliable to send on the uart bus.
1. It's easy to see why he is an ex-employee. 2. VB is still supported. 
It depends on how you define the word 'dying' or 'dead'. For example there are a lot legacy applications that still run on COBOL, but no new development using the language. Would you consider it dead? C is another good example. There's not a lot programmers learning it, but that's because web development is the new popular trend. Whereas back in the 70-90'ish the popular trend was low-level hardware languages. So you could say it is dying as the popular trend but not as a language itself. It's still one of the best low level languages. As for C# Microsoft is positioning it to be a language for the future. It can now be run cross-platform, for web and mobile, it's open-sourced, and is actively developed. I can't predict the future but I think C# will stick around for awhile.
Just to follow up, I ended up moving my projects into a new solution using .net framework 4.5.2, no issues. 
Ugh. VB. Super ugh: VBA.
If you're already familiar with programming and just need a refresher on common C# concepts, try Mosh Hamedani's Beginner/Intermediate/Advanced courses on Udemy. For more ideas on books/resources, there are some posted in this subreddit readme.
`System.IO.Stream` has asynchronous reads built in via `Stream.ReadAsync()`, which can either wait indefinitely or take a `CancellationToken` you can use to implement a timeout or some other cancellation mechanism. Example: static async Task&lt;byte[]&gt; ReadBytesFromStreamAsync(Stream stream, int count) { var buffer = new byte[count]; var bytesRead = await stream.ReadAsync(buffer, 0, buffer.Length).ConfigureAwait(false); return bytesRead &gt; 0 ? buffer.Take(bytesRead).ToArray() : new byte[0]; }
Was he also complaining that not enough people appreciate COM? That would explain it.
This is a joke? C# is actually growing in popularity. The Nuget packages grow by the day. All major frameworks have first class support for .Net. with the expansion of azure and .Net core it will be even more popular. C# also keeps evolving with new features in C# 7 https://blogs.msdn.microsoft.com/dotnet/2017/03/09/new-features-in-c-7-0/. Also C# is the language of choice for visual studio which is superior to any other IDE currently available, jetbrains IDEs (intellij idea, etc) are second best. https://blogs.msdn.microsoft.com/dotnet/2017/03/09/new-features-in-c-7-0/ 
Don't know which chip it is, but we have consistently been trying to get more documentation. 
Basic LINQPad is free. Why you're so hostile I don't know, nor do I care. Just thought I'd help (which 207 downloads suggests I have). Go back and crawl into your hole of judgement and misguided anger.
Ian Cooper has put together some numbers here: https://medium.com/altdotnet/on-the-need-for-a-c-renaissance-634078d4e865 It's probably a good start for exploration
In this scenario, you'd use asp.net for stuff that runs on the web server and javascript for the stuff that runs on the client (browser). Two fairly different things but understanding logic and problem-solving will apply to both (and JS is starting to look more like C# and C# is starting to look more like JS). You could build all sorts of websites without knowing asp.net. You could also build all sorts of websites that you would use asp.net for but in JS with a different runtime (like node.js). But, generally, companies that are heavily invested in .net tend to use asp.net to back their web apps.
This should be higher. Also, the SO Dev Survey https://stackoverflow.com/insights/survey/2017/
If you are a 'full stack' web developer, you need to know JavaScript, HTML, CSS and a handful of web standards and conventions in addition to knowing the backend languages, frameworks, databases, and services used at the company in question. Most modern ASP.NET fullstack developers will be expected to know how to use: * HTML * Javascript * CSS * C# or VB.NET * The basics of IIS * SQL (most often TSQL) * SSMS or a database modeling / utility tool * Service Technologies like Web API, WCF, and understanding REST * JavaScript tooling (for some companies) * At least a bit about build and deployment tools * How to modify files by FTP * Familiarity with issue tracking, documentation, and testing tools Most full stack developer positions, even junior ones, are generally looking for a developer with several years worth of accrued knowledge and experience though they may only have a small amount of actual job experience working with the stack.
Haha.
I was stunned to discover yesterday that there's a COBOL 2014 spec. I sure haven't *heard* of anybody doing new COBOL work, but I assume that means there is at least some effort underway, aside from all the legacy stuff that shambles on like so many zombies.
Correct. C is still very much alive and fits a niche that no other language has or probably ever will.
What I do when I have to reiterate the basics (or am looking into a new language) is a few katas on www.codewars.com. 
C# is doing fine, ASP.NET is doing fine. My codebase has moved to more client JS code now but I still plan on using C# server-side for the forseeable future. C# is an excellent language as languages go and now you can write .NET in Unix/Mac/Linux so I could see it growing. I just don't see WinForm/WPF growing.
Thank you for that comprehensive reply! 
I understand now. Thanks, everyone! :)
I get annoyed whenever I see indeed being used in these sorts of posts because of how crappy their "data" is. It's basically useless information whenever you see percentages with no explanation of the size of the data set, which in the case of indeed.com is not even a fixed size, let alone what items are also in that data set. 10% of 100 is worse than 1% of 1,000,000. I mean I could guess that back in 2012 there were a lot of tech jobs, percentage wise, and since then other sectors have gone up. Or perhaps the rise of Python in the past couple of years has eaten into that C# percentage. Or perhaps companies are no longer hiring contract workers in as large numbers as they use to. Or maybe C# is just a dying language... All of those are potentially valid guesses but you have no way of telling if you're even remotely correct on any of them because the data set itself is mostly useless.
In my opinion VB/VBA need to die a horrible ugly miserable death, repeatedly! I can't count the number of issues I have come up against because of that crud.
C# is now able to be run on any platform. So porting any applications from Windows to Unix will be much less painful and even more plausible than before.
The portable version of .NET is highly immature and there is not enough know-how. The dev tools also favor Windows. If you are competing with other technologies and want to deploy on non-Windows then your chances of success are better if you pick non-.NET platform.
Thank you very much for this! I do know HTML, but not HTML5, and little bit of CSS. Will work on learning all this as soon as I become a better .NET developer.
It defines an interface type, `ICalendarEntry`, with a date property, `Start`; a numeric property, `Length`; string properties `DisplayText` and `SavedData`; and a method, `OccursOnDate`, that takes a date and returns true or false. Maybe you should ask your instructor for details.
I'm not sure why your code is necessary at all; the caller-provides-buffer pattern works very well because it prevents needless memory churn. I would naively rewrite your method as below.. at which point I'd realize that it is exactly the same interface that Stream.ReadAsync() provides already - thus, your code adds zero value. static async Task&lt;int&gt; ReadBytesFromStreamAsync(Stream stream, byte[] buffer, int count) { var bytesRead = await stream.ReadAsync(buffer, 0, count).ConfigureAwait(false); return bytesRead; } That code is pointless. 
Removed: Rule 6, spam.
Correct, but that implies that it then processes a block starting at the beginning of the block. I need to be able to tell it to start at N position in the block, which would be a different index of the encrypted counter.
It's a CryptoTransform - why can't you start feeding it data from block-number-N ?
&gt; because of that crud CRUD operation hiccups are more often due to database configuration than to a .Net language.
Where do you live in Mexico? My wife is from Mexico City &amp; she wants me to work in Mexico at some point.
I live in Tijuana, It's not one of the main cities in this country and even so there are C# jobs in recent technologies like Core and Xamarin. So I guess if you move to Mexico City (the main city in this country) there will be not problem to find more and better C# jobs.
I primarily work as a programmer writer (a technical writer who can code). My Spanish is horrible... I wonder if that would be a problem. :\
I don't know, I could see a market for UWP which allows the same app to be reused against all Windows 10 platform (Xbox, desktop, tablet, mobile, etc..)
Legacy systems often need updates - lots of Indian programmers are COBOL experts.
(sorry, i had to... i get bored sometimes.) http://i.imgur.com/XpGUaVN.png
When you say unable to do so, what doesn't work? If the networking is proving difficult, I'd recommend using one of the established (PCL) libraries such as RestSharp, or Flurl.Http.
You can use `DateTime.ParseExact`: var date = "2017-12-04-09-15-34"; var format = "yyyy-dd-MM-hh-mm-ss"; var provider = CultureInfo.InvariantCulture; DateTime parsedDate; try{ parsedDate = DateTime.ParseExact(date, format, provider); } catch (FormatException) { //couldn't parse date }
I have absolutely no idea what any of this is saying. Clearly I'm a top-tier coder. :(
I am not sure how I feel about this. These syntactic sugars while make some scenarios easy to code, it pretty much guarentees that you will need an IDE with indexing via Roslyn to browse any large code base now since methods, shapes can be defined in any extension class. Good luck browsing code through just opening files anymore. Extension methods also seem to encourage people focusing on their components only and not contributing to shared components in large projects. Ie, add a new helper method as an extension method instead of an actual method in the shared library.
I used Cassia to write a self-serve 'reset my session' app for a large Citrix farm. It could enumerate all domain appservers and look for other sessions from the same user context and present to user to terminate. It's still in use on Win2012 servers but did require enabling Netbios on the DC as the underlying WTSEnumerateServers call from wtsapi32.dll depends on it. I didn't find anything that provided similar functionality. Relevant StackOverflow http://stackoverflow.com/questions/24506772/wtsenumerateservers-error-invalid-domainname
Do you know what duck typing is?
Don't bother with the SQL unless you absolutely need it. NoSQL tends to be a better fit for most N-Tier solutions.
This isn't a code issue. You're trying to line up 3 character strings with two character strings.
The bytearray i want to send is in OnCreate() by name "filebytes" but this array is not accessible in the function below "MakeRequest()" that will send it as body of API request. 
Among other things, it allows one to extend the static interface of a type, and to constrain generic types according to their static interfaces. It's sort of like if you could write // let's have a type without some static feature we need. public class Baz {} // define the feature we need -- this syntax doesn't work! public static interface FooBar { static Foo Bar(); } // implement the feature for Baz -- this syntax also doesn't work! public static class BazExtension : FooBar { public static Foo Baz.Bar() =&gt; new Foo(); } public class OtherClass { public Foo GenericMethod&lt;T&gt;() where T : FooBar =&gt; T.Bar(); } and then call that like this: objectOfOtherClass.GenericMethod&lt;Baz&gt;(); treating the method Bar() as though it were a static member of the type Baz. The syntax is different, but that's basically the idea: define a static interface (shape), implement the static interface (with an extension), and then use it as though the shape's methods were a part of the original class. A shape can also have non-static members, though, so I wouldn't be terribly shocked if they wound up replacing interfaces for at least some stuff. It's not quite duck-typing--it's still type safe, because you have to specify the capabilities and that a particular class meets them--but it opens the door to some handy features for generics. ETA: I think this might also let one produce a discriminated union, but I need to think about it a bit. EETA: *maybe*. C#'s type inference is often pretty underwhelming, so I don't know how far this would carry, but you might be able to get away with something like this: public shape SDiscUnion&lt;T1, T2&gt; { public TOut Match&lt;TOut&gt;(Func&lt;T1, TOut&gt; f, Func&lt;T2, TOut&gt; g); } public extension IntDiscUnion&lt;T&gt; of int : SDiscUnion&lt;int, T&gt;, SDiscUnion&lt;T, int&gt; { public TOut Match&lt;TOut&gt;(Func&lt;int, TOut&gt; f, Func&lt;T, TOut&gt; g) =&gt; f(this); public TOut Match&lt;TOut&gt;(Func&lt;T, TOut&gt; f, Func&lt;int, TOut&gt; g) =&gt; g(this); } public extension StringDiscUnion&lt;T&gt; of string : SDiscUnion&lt;string, T&gt;, SDiscUnion&lt;T, string&gt; { public TOut Match&lt;TOut&gt;(Func&lt;string, TOut&gt; f, Func&lt;T, TOut&gt; g) =&gt; f(this); public TOut Match&lt;TOut&gt;(Func&lt;T, TOut&gt; f, Func&lt;string, TOut&gt; g) =&gt; g(this); } // elsewhere public T Method&lt;T&gt;(Foo arg) where T : SDiscUnion&lt;int, string&gt; =&gt; /* ... */ with the shape + extension everything syntax. It's still going to be pretty kludgy versus a proper discriminated union type (lambdas, lambdas *everywhere*), and I'm not sure where the extra allocation shakes out vs existing solutions using abstract classes or interfaces boxing structs, but it feels a *little* less clunky, to me.
Which line is 366? Because my guess is that you're getting a null back from one of the calls to XElement.Element(XName). XML element names are case-sensitive, are you sure that's the right casing for those? Alternately, are any of them actually attributes instead of nodes?
Erm, seems OK to me. TempPath et al are properties of the 'Template' class. See [Object Initialisers](https://msdn.microsoft.com/en-us/library/bb384062.aspx)
The next dumb question is, have you tried breaking the object initializer expression into separate statements? If any part of the initializer blows up, the exception gets thrown from the same place. The initializer itself won't throw a null ref, it has to be one of the property assignments inside it. Either `nod` is null; or one of `nod.Element("Name")`, `nod.Element("filePath")`, or `nod.Element("description")` is null. Also: the constructor for Template doesn't have an optional argument or something, right?
You can replace the entire method using a quick Linq as follows: private static List&lt;Template&gt; LoadFromTmpXml(string _configTemplates) { FileStream fs = new FileStream(_configTemplates, FileMode.Open); var root = XElement.Load(fs); return root.Element("Store").Elements().Select(e =&gt; new Template() { TempPath = e.Element("filePath").Value, TempName = e.Element("Name").Value, TempDesc = e.Element("description").Value }).ToList(); }
You are quite right. I'm trying to do too many things at once, and I hadn't noticed the curly brackets.
If you really want to know what potential gains would be, I would suggest making a mock join in C# using POCO objects and see how fast it is. Compare that with the full join using the database and you'll see if you're trying to save only pennies on the dollar. (You probably are.) I'll bet real money that it would be a fairly pointless endeavor. I'll even bet that the overhead of moving the data into memory, then over to GPU, the running the join via GPGPU, then moving the data back, especially on only 20k and 50k rows, would actually be _slower_ than just doing it on the CPU itself. Before doing this, you might be better off: * Consider parallelizing the join using standard threading practices * Consider letting the MsSQL server do the work rather than you; less data throughput and I imagine MsSQL is better optimized to do this * Consider updating your database design to allow for a faster lookup of this data * Consider updating your application design to not require such a large join/lookup To answer your question: &gt; How many database areas(hospitals,malls,multiplayer games?) can get help from GPU acceleration? Probably very few, if any. If there are to be benefits of GPGPU for database usage, it'd probably be best done on the server itself, and even then I'm not sure if it makes sense. Leave GPGPU for some serious number crunching, not joining relational data. There could, plausibly, be some special case scenarios on huge data sets (I'm talking orders of magnitude greater than 20k*50k) that involve significant number crunching. Probably not terribly useful on a basic "join on ID" scenario.
I think I'll try it with the template object creation outside the loop 
OMG this is perfect!
If there's ever a chance that the code will be run on a system other than the same system that is hosting the database, you are going to want to stick to the latter. Unless your database is of trivial size.
no optional arguments, and it was VS2017's idea to break up the property inits like that. There's no formal constructor for the template class.
thanks man, I've been doing that off and on for three days. Needed extra eyes on the problem 
You want to use WPF (Windows Presentation Framework). Use Visual Studio 2015 Free Edition (even though 2017 is out, it's new and not as stable as 2017). In there you want to start a new project, and select 'WPF Application' as the project type. It will create a skeleton WPF application for you with a Main Window and you can go from there. The moment the project is created you will be able to click a green 'Debug' arrow at the top of your Visual Studio toolbar to run the project. It will show your Main Window. Later you will want to add different buttons/controls to the window, and code to your code behind depending on what you want to accomplish. You will definitely want to learn about WPF. It's a framework used to create Windows Desktop GUI applications. You design your window layout using a markup language called XAML which has XML-like syntax. You can interact with the XAML elements using C# in the code-behind (code inside the classes you write). Here's a good WPF tutorial to get you started: https://www.wpftutorial.net/
So, sql server is using very efficient algorithms as expected. Thank you.
Thanks. Basically whenever you see a foreach in c# there's usually a simpler way to write it with LINQ. It's not any faster mind you but it should have fewer bugs since it's less code overall and follows a semantic logic that is comparable to describing the operation with words. 
It's a totally different approach to the design of applications, one in which there are no "shared library" bundles of special methods that have to be pre-defined up-front in an all-knowing design-phase. But rather, where the types and their basic relationships are defined and functionality gradually added in a way which does not restrict future design. 
This can still throw a null ref if there is a malformed document. Use `?.` where you could have null refs maybe?: private static List&lt;Template&gt; LoadFromTmpXml(string _configTemplates) { using (var fs = new FileStream(_configTemplates, FileMode.Open)) { var root = XElement.Load(fs); return root.Element("Store")?.Elements().Select(e =&gt; new Template { TempPath = e.Element("filePath")?.Value, TempName = e.Element("Name")?.Value, TempDesc = e.Element("description")?.Value }).ToList() ?? new List&lt;Template&gt;(); } }
I'm pretty sure that's my final answer!
I'm going to one-up you :) private static List&lt;Template&gt; LoadFromTmpXml(string _configTemplates) { using (var fs = new FileStream(_configTemplates, FileMode.Open)) { var root = XElement.Load(fs); var store = root.Element("Store"); if (store == null) throw new FormatException("Store node not found"); return store.Elements().Select(e =&gt; new Template { TempPath = e.Element("filePath")?.Value, TempName = e.Element("Name")?.Value, TempDesc = e.Element("description")?.Value }).ToList(); } } Edit: The purpose of this is to throw an exception if the "Store" node is not found, thus making it obvious that there is a problem with the file format. Previously it would just return an empty list, which is the same result that would occour if the "Store" node did exist but had no children.
I wanted to avoid EF all together and so do lots of other people. There had been good progress in this area. Let me point you to a Dapper Identity project: https://github.com/grandchamp/Identity.Dapper This uses MS Identity with Dapper. It's still in it's early stages, but looks very promising. I opted to go a different direction. MS updates Identity fairly often. I think it's on v3. And there was a predecessor. I got burned on one of the updates due to breaking changes, so I am rolling my own auth using the existing cookie system. I also don't like the lack of sessions. I know the cookie is encrypted, but I trust nothing from the client, so I wanted to add sessions back to the mix. I've been using this link to do it: https://weblogs.asp.net/jeff/no-you-don-t-need-to-use-asp-net-identity It further links to a MS page that goes into much more detail as well.
Define "worked", "forced", "possible", and "a lot longer". Google HtmlAgilityPack, include mikesdotnetting for examples
Yeah I'd probably do that as well. 
Our company uses IE because all our infrastructure is built around it. VBA macros work because VBA integrates with excel and IE, and can populate things in the DOM. Is it advantageous to do this in C# (any added benefits, besides using an actual language)? Does C# actually work quite well for something like this? Or is this just quicker in VBA and not very easy in C# and therefore not worth all the trouble? 
As others have said, you're very unlikely to gain any performance if you do the join anywhere other than on the SQL server (which it's designed and VERY highly optimised to do). HOWEVER, using an ORM (such as EntityFramework for example) would actually give you the best of both worlds. The code for the join will look very similar to your C# example except that rather than pulling all the rows from each table and joining them locally, it'll actually generate a query to join the rows on the SQL server, fetching the joined rows when needed. I'd link you to some examples but I'm on mobile at the moment.
In all likelihood, the time spent transmitting all the data from the server to the client would outweigh the cost of performing the join on the server.
If it's just for small project, it's much much simpler to use winforms. You can use SharpDevelop which has a very good UI designer and is simpler to use than Visual Studio.
The quickest way depends on your experience/expertise. If you're already good with C# and don't know much about VBA then I would certainly take C#. The benefits of using C# instead of VBA: - More libraries like HTML parsers: [Html Agility Pack](https://www.nuget.org/packages/HtmlAgilityPack/) and [AngleSharp](https://www.nuget.org/packages/AngleSharp/). Being less dependent on a locally installed browser (version) is good! - Benefits of using one of the best IDEs to develop a software solution in (Visual Studio). - Cross-platform if using .NET Core. - Newer technology than VBA. - More popularity and support all-around. The negatives about using C# instead of VBA: - Writing Excel Add-ins in C# is a bit more tedious then VBA (lots of casting to types, cleaning up memory). - You deviate from the already established VBA solutions your company has. TL;DR: VBA can much easier integrate with Office products but C# is more general purpose and can easier handle problems than VBA.
Thanks, I really appreciate your help. Honestly though, the more I think about it, it would be much more elegant that, instead of them clicking buttons in excel, if I just do as you said and treat excel as a database and maybe have a simple UI that has the buttons to launch the different sites? Is this possible/what's the easiest way to make this? I'm thinking, this way, if a website has an API I can use that, and if it doesn't I can use HTMLAgilityPack like others are saying to populate the fields. So, to visualize, the user would launch my application. Its window with 5 buttons down the side and an area to the right that displays basic customer info (pulled from excel). The user clicks the first button to submit data to the first site - I would want C# to launch IE, pull up the website, populate the form with data from excel, and submit it. They can do what they need with the results. They then go back to my application, click the second button, which launches a window with the second site, etc etc. If a site has an API, instead of launching IE, ideally I would just send a request and display the results to the user in my application window (to the right of all my buttons). Is this dream possible? Is it easy enough I could figure it out on the way, or is it hopeless without prior C# experience?
Yup, creating a WinForms application would be much easier. Doesn't need Excel open nor IE. Just grab the data from the Excel workbook, push it out toward the sites in question, as you say either using their API or HTMLAgilityPack. The end user has no need to know Excel nor sites are in use. Could display the data passing back and forth in the WinForms app so the end user can sanity check it. Capture API/WebControl errors in the event one of the sites is down/unable to process requests. Realistically going the WinForms route would allow you to automate in increments. You don't need to go from manual to 100% automated overnight. Having your own application as the interface will allow you to add automation tasks as you learn.
Fantastic! Not to mention, this is a much more exciting and fun route from my perspective. And you're right, I can add to it as I go along.....honestly sounds perfect. My only question is, and the reason why I thought launching IE would be needed, is most of these professional verification sites are subscription based, so our users need to login before they can get to the forms. I'm assuming C#/HTMLAgilityPack can't automate logging in to secured sites? Can it automate things across multiple pages? Like can I make it click a link, then on the following page submit data, then click another link to a results page and grab data from it? Just trying to see the limitations before I go too deep..
It kinda depends what "GetStoreTable()" and "GetProductTable()" do, however I suspect they simply pull each table out of the DB. So the compiled queries are just SELECT statements and the join on the data is done programmatically in C#. I get the feeling OP should look into ORMs if he/she hasn't already. 
what i gather from this: WPF is complicated but good to develop a better application. Winforms is simple and is for a simple quick application. I am gonna stick with visual studio, guys. so, i need a basic setup, with utility to show a step by step process with an efficient UI not something very beautified but with basic aesthetics. Each step is required to run an exe file and get the results of the exe file and display them in forms of say tables, in some cases, in some cases I need to display a graphic network with lines pointing to different parts of the networks. Basically to illustrate a step by step process, and to elucidate each step. This is my application. 
Ya I ended up doing something server side. Totally get where you are coming from. I guess because I'm newer to C# and .net in general I get overwhelmed. But thanks for the input!
So in loosely typed languages like JavaScript, you have duck typing. "If it walks like a duck and quacks like a duck, it's a duck". function foo(bar) { bar.Twiddle(); bar.Add(3); bar.Fiddle(); } Is bar an instance of a class that implements ITwiddle and IFiddle? Who cares! As long as it has those methods, you can call them. But this turns into a run-time problem, because the compiler isn't checking types at compile time. In C#, right now, you may have a method that takes IFiddle&lt;long&gt;. But wait! Your 3rd party library library from .NET 1.0 that you rely on for ISO1234 compliance doesn't know anything about IFiddle&lt;T&gt;, so you can't pass it in to do something as simple as Add() because the compiler knows it's not really an IFiddle&lt;T&gt;. Darn. It's not an insurmountable problem. You just have to implement a wrapper class that implements IFiddle&lt;T&gt;. That can end up being a lot of unnecessary boilerplate, sometimes. Think of Shapes as strongly-typed duck typing. If you can make an object *look like* it implements SFiddle&lt;T&gt;, even with extension methods, you can use it anywhere an SFiddle&lt;T&gt; is required. This lets you use implementations from one place as implementers in another place even when there's no inheritance or even interface commonality between them.
If there is graphic involved, things can get complicated quickly. Is the graphics going to be static or it need to have nodes added and removed, color changed, etc?
What? If he is querying a SQL server, the JOIN is done on the SQL server, not on the client. 
To format your code properly you need to: - Have 4 spaces in front of each line. - Have at least one empty line before the code and after the text. - Have at least one empty line after the code and before the text.
I wrote a tool once that used Selenium Webdriver to actually launch an interactive IE window and could test if the user was logged in and if they weren't it would pause on this step until the user logged in themselves.
formatting for OP (copy this and paste it over your content and it should format correctly, I'll refresh and then delete this post): --- Before I start, I just want to point out that I am not a "developer" and a novice when it comes to C#. I know PowerShell well, though, and there are obvious similarities as they are built on the same framework, so I understand the basic concepts. Also, I have tried things from StackOverflow and other forums to attempt to resolve my issues, but to no avail. &amp;nbsp; Basically, I have the code below that I want to use to open a ticket in ServiceNow leveraging the REST API and JSON properties. I always get a 400 Bad Request error. I have this working in PowerShell, which I will also post below. &amp;nbsp; C# &amp;nbsp; public void SubmitData() { try { string username = "username"; string password = "password"; String encoded = System.Convert.ToBase64String(System.Text.Encoding.GetEncoding("ISO-8859-1").GetBytes(username + ":" + password)); WebRequest request = WebRequest.Create("https://myinstance.service-now.com/api/now/table/u_mycustomtable"); request.Method = "POST"; request.ContentType = "application/xml"; request.Headers.Add("Authorization", "Basic " + encoded); using (var streamWriter = new StreamWriter(request.GetRequestStream())) { string json = "{\"u_category\":\"MyCategory\"}"; streamWriter.Write(json); streamWriter.Flush(); } var httpResponse = (HttpWebResponse)request.GetResponse(); } catch (Exception ex) { MessageBox.Show("Error : " + ex.Message); } } &amp;nbsp; PowerShell (works): &amp;nbsp; $userName = "username" $pwd = "password" | ConvertTo-SecureString $SNowCreds = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $userName, $pwd $Uri = "https://myinstance.service-now.com/api/now/table/u_mycustomtable" $method = "POST" $headers = @{ Accept = "application/xml" } $body = @{ u_category = "MyCategory" } $bodyJson = $body | ConvertTo-Json Invoke-RestMethod -Credential $SNowCreds -Headers $headers -Method $method -Uri $Uri -Body $bodyJson -ContentType "application/json" 
I appreciate the formatting effort, but the entirety of the PS code is now a table...
I really appreciate the guidance! However, I fixed my issue (although I'm not sure why... have to research). Basically, I changed the request.ContentType to be **request.ContentType = "application/json; charset=utf-8";**. Why I am able to use "application/xml" in PowerShell and not here is beyond me, but once I made the switch it worked. Any ideas?
I think this is your problem: request.ContentType = "application/xml"; should be request.ContentType = "application/json"; ContentType describes the content you are sending. Accept describes what you can receive. In PS, you specified the Accept header as xml, and the content-type as application/json. Also, I highly advise using [Newtonsoft](http://www.newtonsoft.com/json) to create your json objects.
Looks cool. What frameworks did you utilize? How reusable is your engine?
Filling a table with data is pretty easy, but drawing abstract graphics line by line, shape by shape, can become pretty involved. Showing a premade graphic image ( JPG, BMP, PNG, etc ) is very simple. Creating a professional looking polished GUI can be very time consuming taking many hours depending on how many controls and how complex you want the behaviors to be. - Start with this tutorial to [create a WinForm project.](http://csharp.net-informations.com/gui/cs_forms.htm) - Next try this tutorial for [creating a ListView grid with data](http://csharp.net-informations.com/gui/cs-listview.htm) - Next try this tutorial for [showing an image on a Form](http://csharp.net-informations.com/gui/cs-picturebox.htm) From there, you can search for tutorials for any controls that you need. There are TONS of tutorials for WinForm GUI project, and TONS of YouTube videos showing how to create custom graphics and animations, and anything else that you might need. PM me if you have specific questions, I'll try to help.
Linq FTW.
Wat? Xamarin runs .net just fine on mobile devices..net core works well where supported (Linux, Mac, Windows). Then there is mono..net core 2 will bring most of the features of .net that can be portable. 
&gt; How long did you spend making the engine vs. the game Engine: About 1 year, game: slightly longer &gt; And why didn't you just use something like unity Mostly because I wanted complete control over the mechanics. The game tilts and rotates geometry around and I've had to write a lot of custom maths work to get it right. Not to mention fiddling for months with Bullet to make the egg roll around exactly as I wanted. Also, 10% because I wanted to learn and I like the challenge. :) Overall I think writing my own engine probably added 6 months to the project, but I don't think I could've made exactly what I wanted with Unity or Unreal.
Sounds like a job for Selenium. It will interact with Chrome, Firefox, and IE. You can use it to copy information from Excel and into the browser. It can get information from the web page and write it to a text file. You can use Selenium with almost every programming language available, including C#. I use Selenium for automated QA testing and it is easy to use. 
Visual Studio 2013 (yes, I'm a bit behind the times there- finally downloaded 2017 today in order to practice some skills for the CV :)). Only addon I used was Resharper (of course). But I also made extensive use of the [graphics debugger](https://blogs.msdn.microsoft.com/rchiodo/2012/04/06/graphics-debugging-inside-of-visual-studio-new-job-for-me/) that comes with Visual Studio.
Why not OpenGL? you just remove the ability to release on Linux/macOS/Mobiles
As I mentioned [here](https://www.reddit.com/r/csharp/comments/656u73/hey_rcsharp_i_finally_released_my_game_this_week/dg82snz/) the PC gaming market is still very much dominated by Windows. When you consider that (subjectively) the DX API, tooling, support and documentation are all superior to OGL (or at least they were when I began 2.5 years ago), sacrificing a tiny portion of the market in return for increased developer productivity made a lot of sense. Also, back then, .NET Core wasn't even invented and Mono still had many issues on Linux. If I were to start again now, I'd consider trying out something like Vulkan and .NET Core- but they're both still somewhat immature platforms and it may be that I'd decide to go with standard .NET and DirectX again. I'd have to experiment with them a bit before I could know for sure.
&gt; The point isn't that you should put effort into supporting more platforms, it's that designing against the right choice of frameworks makes cross-platform support an effortless feature The thing is, designing software (especially something as complex as a game engine) to be cross platform is really *not* an effortless feature. In fact, I could probably rewrite the renderer to use OGL in a month or so but that would be only roughly 15% of the effort required to support anything other than Windows. If I was a business owner looking for a huge ROI I might agree but as a single developer just trying to make a steam game it doesn't make any sense for me to increase my workload by such a huge amount simply to support some minor platforms. :) I'm not expecting this to be some huge thing that everyone's playing, so yeah, it's not worth it really.
Neat! Subscribed to this sub because of this article. 
&gt; As I mentioned here the PC gaming market is still very much dominated by Windows. Why not be a part of the solution?
Right, but that's a big security risk. A single service can be compromised and have the cert replaced. If it's not validated, the entire network is now at risk. Not validating the cert introduces a MITM risk.
People with more time and money can do that ;D Joking aside though, if I had infinite time and money then I surely would support what I could, but making a project as big as an engine and a game requires knowing where to sacrifice 'ideals' really, and that's an easy one to make for an indie dev when you look at the numbers.
Do what professionally? Gamedev? Sure. It's a dream. But you need money to begin with for marketing and assets (e.g. art, music, sound). I'm happy with what I've done considering my budget of practically nothing, but to do it professionally at this point I'd have to join an existing games company and there are many cautionary tales out there that the work is *not* rewarding.
hehe I feel you. I still use vs 2010 [:
I guess I am more old school and like things a bit more organized. But I also worked on really large apps so far as well.
Yes!
It's not more organized, it's more ham-strung. This old OO paradigm is much worse for very large programs because the design of types becomes almost immediately invalidated (when ever, has an inheritance tree been accurate for more than 6mo of a project?) which leads to a very large mess.
Visual Studio took some strides to try alleviate the necessity of ReSharper in VS2017 but from​ what I've read there's still some progress to be made.
Well, it seems like you have a major architectural problem. If I understand correctly, your DAL contains everything that is required for any database access across all your application? But does every application has to access everything all the time? I doubt so Your solution may be the implementation of micro services. You should create small API that control little portion of business logic and those API should have their own DAL. Let's say you must access employee data. You should have an employee API that contains both the business logic and the repository used to access the data. Then, your different apps would call that service to access any employee information. So in your web app, all you have is a set of reference to different services and absolutely no connection string whatsoever Following that principle, the only nuget package you will have to manage are small libraries that wrap your service call (a rest client, for example)
So, did you give up on all of this or what happend?
Well obviously on the internet there is a lot of scary story but I've been in the industry for 5 years now and couldn't be happier. It's not all rainbow and sunshine but the experience I now have is invaluable. You can join an existing big company or a little startup. Both way, you'll end up with great experience, a knowledge of the industry and most importantly, you'll get to know awesome and very brillant people
I tried 20117 without ReSharper and it lasted for about 3 days. I will admit 2017 is better than the previous versions of VS, but it still doesn't quite stand up to ReSharper, maybe next release we will see some more improvements.
Duuuude! I've got some balls! (the game)
Removed: Rule 4. Assuming this is running in the web browser, yes, you'll have to use some client-side JavaScript library. Try googling around for that. Also, you'll want to transmit the audio file not as a ".wav" file as those are typically huge and/or uncompressed. Maybe see about converting it to an MP3 at least.
A shape is a way to define an abstraction (like an interface, etc) that does not need to be baked into the type's definition originally, but can be adapted to at the point where you need the code to inter-operate. It's kind of like duck-typing but a lot more powerful since you don't even need methods with the same signatures, just objects with similar enough capabilities that you can define a bridge to the shape's contract. How it works is a bit magic, which is both its strength and potential weakness. The proposal allows a mechanism similar to extension method lookup that can find appropriate shape adapters for your types, so the compiler can figure out what code it needs automatically. There should also eventually be a way to state it explicitly. 
Awesome! I loved those games
Ah, yes, I'm trying to leverage my skills to get a job in the C# world now. :)
Alright- thanks for the counterpoint. I might think about it, maybe a small startup where I have some creative freedom.
I'm getting downvoted, but I stand by this. Good programming practices and a good choice of language and libraries can make things like portability a non-issue.
That's pretty awesome man! I probably won't back-port Escape Lizards but if/when I make an engine in the future that's really good to know. I've actually been wondering about making a higher-level 3D rendering library that targets .NET Standard in my spare time: I think it's something people might really appreciate. Only frustrating thing is having to support DX12, Vulkan, *and* Metal if I want to support everything with a modern API. Anyway, 'grats. I might hit you up with a PM in a couple of months with some questions, if you don't mind. :)
I'd be happy to see that PM, having more game dev minds in .NET Standard / Core is a wonderful thing that'll hopefully become the standard in the future. I haven't found Vulkan and D3D12 too hard to support simultaneously due to how similar they are, though my lack of consistent access to anything apple related has made getting metal setup and tested a lot more annoying. VM's can only carry you so far after all. Anywho, good luck with your future endeavors, seeing full games and home-made engines in .NET is extremely inspiring and motivating. Thanks!
Live anywhere near southwest Michigan?
"time and money" Yep, this is the biggest issue with cross-platform. I'd love to have all my code run on all platforms, but I don't currently own a Linux or Mac machine. So it's either buy 2 PC and become proficient with them, or get someone else to do the ports ... and doubtful anyone would volunteer to do that for free.
You're only replacing spaces, but there are other chars that are not allowed, so you'll need to check for any of the illegal chars and replace them with something else. You could probably write (or find on the interwebs) an extension method for string that will do that, so you can just do something like var folder = @"C:\Users\Laptop\Documents\bot\" + articlename.ReplaceInvalidFolderNameChars(); [Here's an example](https://zoomicon.wordpress.com/2013/07/12/howto-remove-invalid-filename-characters-in-net/) of such an extension method - this one is for file names, but you should be able to use or modify it to do folder names too. 
&gt; The renderer is built on raw DirectX with native interop (P/Invoke). I accidentally the portability
As a bit different approach, I can help you with any specific questions you have, or broad ones. I'm free all of tomorrow, and if you need hands-on assistance, I've got a Discord and we can walk through some code. This goes for anyone who needs it, really. Just reply or PM me.
This all depends on how you define "well". For example I wouldn't say that EF Core is usable in its current state. The OOXML SDK does not work with Core last time I checked and almost every project I worked on in the last 2 years required a word export.
Looks really cool. Nice job!
Thanks for responding. Unit Tests and Integration Test Projects are fine. The problem is only with Coded UI Feature Test projects. When I start the Live Unit Testing for the project, it identifies that the Feature Test Project still has the 'Microsoft.VisualStudio.QualityTools.UnitTestFramework' and gives an output as Build completed (failed). When I remove the 'Microsoft.VisualStudio.QualityTools.UnitTestFramework' reference from the Feature Test project, I get build errors - because of missing namespace for the [TestMethod], [TestCategory] attributes. I am not sure if I need to add any additional reference. Below is a sample Coded UI feature test which I have, which throws error -- [TestMethod] [TestCategory("SystemTest")] [TestCategory("ProrateTestCases")] [DataSource(TestConfig.DataSource, TestConfig.ConnectionString, "123456", DataAccessMethod.Sequential)] public void Verify_Prices_are_Prorated() { VerifyOutputs(); } Ideally I want to exclude the Feature Test Projects from Live Unit Testing, but when I right click on my Feature Test Project, I do not see an option to Include/Exclude that specific project. Also seems like this Include/Exclude is a User Level feature and not something which is saved in a file and can be checked into Source control. This seems to be a major problem with using Live Unit Testing actively in my project.
Okay, thank you anyway, I realised it was invalid from the get go and what I showed you was just me playing around with it in order to try and figure it out on my own. Sorry if the information is unclear or regarded stupid but I'm still in the very early stages of learning how to use C#, I know the basics and thought I'd give an API a try, I'll take another shot at it in the morning, thank you for your feedback anyway, much appreciated.
I see three issues here: 1. Live Unit Testing does not start if any project references an unsupported Test Framework. I would expect Live Unit Testing to only fail if there are no supported test projects. It should likely warn and run anyways in the case where some projects are supported and others are unsupported. 2. Include/Exclude (and Live Unit Testing configuration/settings/options in general) should be controllable by the user in a (human-readable/configurable) manner that can be checked into source control. 3. There is no NuGet package for Microsoft.VisualStudio.QualityTools.UnitTestFramework. I have logged bugs for the first two and we will track these internally. For 3, you could log a bug for this on https://github.com/microsoft/vstest to see what the expected path forward is. *Edit:* To be clear. Logging of a bug/issue does not indicate a commitment to fix the issues raised. It just indicates that we will investigate the issues raised and determine whether this is something that is "by-design" or a flaw/oversight in the current design that we will fix at some-point in the future.
I'd be really interested to hear more about your "shared memory" solution. (I'm also writing a game with a custom C# engine, but I'm using SharpDX.) Edit: Also, just FYI, SharpDX doesn't use P/Invoke. It uses the [calli](https://msdn.microsoft.com/en-us/library/system.reflection.emit.opcodes.calli.aspx) CIL instruction, which avoids marshalling and is far faster than P/Invoke, though [still not quite as fast](http://code4k.blogspot.com/2011/03/benchmarking-cnet-direct3d-11-apis-vs.html) as raw C++. [Here](http://xoofx.com/blog/2010/10/19/managed-netc-direct3d-11-api-generated/) is an old blog post about how SharpDX works.
What websites and books did you utilize for learning to do the various stages of developing the engine and game?
Great stuff as usual, Matt.
nodes added remove yes. colours changed yes
I'll check it out! Thanks
No, I was hoping someone on reddit would have. What potential performance issues do you see? We use smartermail, but I think it takes a while for campaigns of 150k mails.
https://docs.microsoft.com/en-us/aspnet/core/fundamentals/static-files#serving-static-files tldr: Make sure you have static files enabled, move your files to web root or setup a custom path.
Except the join isn't necessarily being done on the SQL server. Read the code. Honestly an ORM would make all of this a non conversation. 
But frankly, the implicit cast operator like this is an **horrible** option for a maybe monad. That puts the whole concept ad absurdum. The other way around? Sure, makes sense. "Having a value" could easily transformed to a "maybe having a value". But this way? Why implicit cast a maybe (that MIGHT have a value) automatically to a value? That makes just no sense. You can't sensible transform a "maybe having a value" to a "having a value" - you don't always have a value, that's the concept of the maybe monad.
Thank you so much! This solved my problem!
Try to figure that out yourself. Read every line of what I wrote, try to understand each line. If you're having trouble with one of them, ask a more specific question.
1) Why do you name it **Take** and return and item (which is good), but u also remove that item. 2) are u sure that there is always only 1 items in _items that meets the condition
A better alternative to a cast or using the accessor might be implementing something like pattern-matching from F# match maybeString with | None -&gt; ignore | Some s -&gt; DoAStringThing s Which might translate to something like public TOut Match&lt;TOut&gt;(Func&lt;T, TOut&gt; ifSome, Func&lt;TOut&gt; ifNone) =&gt; IsSome ? ifSome(Value) : ifNone(); public void Match&lt;TOut&gt;(Action&lt;T&gt; ifSome, Action ifNone) =&gt; IsSome ? ifSome(Value) : ifNone(); Or even Option.map or Option.bind (which I've implemented directly, here, but can be trivially implemented in terms of Match&lt;TOut&gt;(), too) public Maybe&lt;TOut&gt; Map&lt;TOut&gt;(Func&lt;T, TOut&gt; f) =&gt; IsSome() ? new Maybe&lt;TOut&gt;(f(Value)) : new Maybe&lt;TOut&gt;(); public Maybe&lt;TOut&gt; Bind&lt;TOut&gt;(Func&lt;T, Maybe&lt;TOut&gt;&gt; f) =&gt; IsSome : f(Value) : new Maybe&lt;TOut&gt;(); Map and bind don't translate well to C# when you start talking voids, though.
Thanks much for the info!
Even using a List might be better than whatever's going on, there (using ICollection&lt;T&gt;, I guess?), if random access is a requirement. At least then, you could pull the index of the element and only have to enumerate the collection once. Removal would still be expensive (shifting all the remaining elements), but at least you wouldn't have to search the collection to find the object, then search the collection, again, to remove it.
One solution is to look at open source tools like Graphviz.org. For instance: https://graphviz4net.codeplex.com/ http://graphsharp.codeplex.com/ 
I'm testing a solution listed earlier, and keep in mind, I've looked at the code in the repo and found I got around it with a try/catch block to debug other sections. 
Thank you! 
&gt;It feels like we've traded DLL hell for package hell. I can't disagree with that. I copy dlls from output of the library solution into the package folders so that I can build with the new version before updating the nuget package number. If it works, I increment the package version, push it to nuget and then update the other project. Invariably, I forget something and have to push a couple more versions. The solutions that consume packages such as library only update when they want/need something that is in a newer version. 
Joe Rock on youtube has a playlist of Xamarin Android tutorials including material design https://www.youtube.com/playlist?list=PLCuRg51-gw5VqYchUekCqxUS9hEZkDf6l
Visual Studio's "scaffolding" tools for ASP.NET will generate the HTML for you, and adding Bootstrap for the CSS will handle most of the styling. But you still want to have a handle on the basics of each before learning ASP.NET so you have a idea what the scaffolding is generating. I would do the FreeCodeCamp front end course at least up through the Basic JavaScript section (see https://www.freecodecamp.com/map). Try to get as comfortable as you can with C# before tackling the object oriented and functional aspects of JS. As you noticed, things are different in JS-land, and you don't want to conflate things while still learning.
Did you hardcore a path to that file in your code? What's the file path it's looking for?
Is there anything in bin\debug\empty on your machine? Knowing what it's looking for could be a big help.
This game looks like it would be a great Nintendo Switch game. Have you looked into how you would port this to the Switch? Many small indie developers have said the port was very easy, might be the same for you as well. Switch owners are starved for games right now, could be the perfect opportunity to get exposure
Running projects off of shared drives is almost always going to cause problems, especially if the permissions for that shared drive are controlled by the domain. Copy that thing to your tester's C drive and try running it.
obviously the above code that is trying to find the name that matches the max time in listoftimespans is not going to work. but its what i'm trying to get at. any help would be great!
Got an example?
&gt;What's your twitter handle? I'm @grogansoft. I've managed to get from 0 to ~85 followers in the last couple of months, which I'm pretty happy with. I get decent retweets when I tweet interesting stuff, and it seems to help get noticed.
If you are writing asynchronous code and are causing the thread pool to grow, you probably have a bug.
From the article &gt; AVOID returning value tuples with a total size of more than 16 bytes. Note, reference variables always count as 4 bytes on a 32-bit OS and 8 bytes on a 64-bit OS Why is this the case? Does this mean that if can only pass at most two object references on 64bit? So... public (MyObj, MyObj) GetObjs() { return (new MyObj(), new MyObj()); } Is Ok, but public (MyObj, MyObj, MyObj) GetObjs() { return (new MyObj(), new MyObj(), new MyObj()); } is not? That seems odd.. it seems to be very limiting, especially when I also heard that the maximum number of elements in a tuple has been increased... above 16 iirc. 
You need to declare e as an argument in the method signature function addProd(e) 
I assume the sample code is outdated. You also need to add what frame to add the audio to. The method declaration is: public void AddAudioStream(String waveFileName, int startAtFrameIndex) I assume if you want it at the start, you just pass `0` in. This should be coming up in Visual Studio's intellisense as well.
&gt; I'd be really interested to hear more about your "shared memory" solution. (I'm also writing a game with a custom C# engine, but I'm using SharpDX.) I basically write instructions in a simple binary format to some off-managed-heap memory before passing a pointer to the first instruction in the list to C++. The C++ side then iterates through them and dispatches the calls to DirectX. That way I'm converting 1000s of P/Invoke calls in to only 1. &gt; Edit: Also, just FYI, SharpDX doesn't use P/Invoke. It uses the calli CIL instruction, which avoids marshalling and is far faster than P/Invoke, though still not quite as fast as raw C++. Here is an old blog post about how SharpDX works. Wow, interesting! Thanks for this, I'm gonna read this and learn more.
if you change your button to be a button you don't have to 'preventDefault()' (&lt;button type="button"....) Edit: spelling
Returning Tuples currently completely breaks Edit and Continue- so probably going to avoid using that pattern until they get that addressed.
Everything breaks Edit and Continue. I've mostly forgotten that feature exists.
If you're referring to the Main method, which serves as the application's entry point, the reason is the method is static, so it has no concept of the form components, since those are all instance members.
It's gotten much better over the years- and I use it pretty heavily. For awhile it didn't work on x64 at all and likewise with Linq when that was new. But generally support for E&amp;C on a new language features seems to lag a release or two.
Have you tried using [Linq](https://msdn.microsoft.com/en-us/library/bb397933.aspx)? It's very efficient on large collections, highly readable, and is quite easy to use once you get the hang of it. You could have something like this: StudentInfo student = from student in StudentInfoDatabase where student.Name == "Bob" select student; Or even: int studentBalance = (from student in StudentInfoDatabase where student.Name == "Bob" select student).RemainingBalance;
Do you have a way to deserialize the text file? You might want to try using [DataContractJsonSerializer](https://msdn.microsoft.com/en-us/library/system.runtime.serialization.json.datacontractjsonserializer(v=vs.110).aspx) for serialization purposes. It's very easy to use (roughly, all you need to do is add attributes to the items you want to serialize/deserialize).
i put in the e and now get this error POST http://localhost:57249/License/addProduct 500 (Internal Server Error) send @ jquery-3.1.1.js:9536 ajax @ jquery-3.1.1.js:9143 addProd @ Create:191 onclick @ Create:1
Perhaps with reflection and manual poset navigation?
In the code they are using Ok() with anonymous types
Forgot previous account dets and couldn't find posts
&gt; manual poset navigation? :o I'm going to reveal the extraordinary depths of my ignorance here: what's that?
I find it a bit odd to lose the returned type. There is an attribute: [ResponseType(typeof(PRoductSearchResult))] I thought I wrote some tests that verified the returned type matched the attribute, but I don't seem to be able to find them. 
The simple answer would be the words of Eric Lippert: &gt;Features are unimplemented by default; C# does not have that feature because no one designed, implemented and shipped the feature to customers. But beyond that, all of these things have downsides and costs. Chained implicit conversions would require the compiler to recursively search every possible combination of conversions, and would likely result in multiple possible combinations with no way to tell which one is the right/best solution.
That's about right. My link didn't work... try this one: https://msdn.microsoft.com/en-us/library/system.runtime.serialization.datacontractserializer(v=vs.110).aspx You can do something like this: [DataContract] public class StudentInfo { [DataMember] public string Name { get; } [DataMember] public int RemainingBalance { get; } } // Somewhere else in your program: // Write: FileStream writer = new FileStream(someFilePath, FileMode.Create); DataContractSerializer serializer = new DataContractSerializer(typeof(StudentInfo)); serializer.WriteObject(writer); writer.Close(); // Read: FileStream reader = new FileStream(someFilePath, FileMode.Open); XmlDictionaryReader dictionaryReader = XmlDictionaryReader.CreateTextReader(reader); DataContractSerializer deserializer = new DataContractSerializer(typeof(StudentInfo)); StudentInfo studentInfo = (StudentInfo) deserializer(dictionaryReader, true); reader.Close(); Forgive any syntax errors. 
If you care, this is all explicitly handled in F# for the specific case of units of measure.
Would love to read a blog post on the development of this game 
If this was allowed, it would be extremely non what code was running in any given conversion, and as a result it could be very difficult maintain complex conversions. Additionally, it really isn't that useful of a feature, the worst actual use case of this I've ever run was resolved with one explicit cast.
What do you mean by the "class main body"?
MonoDevelop, Xamarin Studio, and Visual Studio for Mac are all the same IDE. Visual Studio for Mac is just the 'new name'.
Oh, thanks. I haven't really followed the development around those IDE's. Learned something new toady :)
Hello, I'm not an expert, and I might be mis-understanding what your class is doing, but I would write a completely different solution as a Windows service that does nothing but process input from the website, depending on how responsive you need it to be. If the website goes down, the workflow service still operates (and vice versa). 
I am answering from the thought process of some sort of request / approval system with multiple phases of a "request" that needs to flow from submission / approval / execution / completed state. Totally different story if you need it to respond immediately within the web app and won't be interacting with the database from any other console / mobile / desktop apps.
I don't think you need to submit in the scenario outlined above. Its more of an either or. I think the code you have written will sort of post twice. The click event will make your ajax call, then you are calling 'submit()' on the form but its not wired up to actually do anything. &amp;nbsp; I would remove the 'onclick' from your button and change your js to the following: &amp;nbsp; $("addP").submit(function(e) { $.post('/License/addProduct', $(this).serialize()).done(function (data) { e.preventDefault(); if (data.status == "Success") { alert("Success"); } }); }); &amp;nbsp; e.preventDefault() will stop the page from reloading, $(this) is a reference to the calling element, in this case the form. 
Well... isn't the vast majority of the software we use a 'work in progress' strictly speaking ? ;) I know what you mean though, hehe. However, the versioning/naming (standard / core / "proper" version numbers &amp; alignment...), tooling tweakery (dnx, json vs csproj, blahblah) sort of 'churn' seems to be in the past. (Not sure if VS2017 &amp; Core are playing nice though ? I've only been using Core with VSCode.) I'm curious as to how the release of Standard/Core 2.0 will be received. Something like Angular 4 perhaps ? "O noez a new version number that means they're making more massive breaking changes right !??!?! Sux!!" Or will it be "2.0 is the real 1.0, let's start using it now." Hmmm... I imagine they will be plopping it on us at Build ? Can't wait :)
Do you need the full list of agents or just the one with the longest wait time? You could accomplish this with a simple linq statement. e.CmsData.Agents .Where(a =&gt; a.WorkModeDirectionDescription == "AVAIL-IN") .OrderByDescending(a =&gt; DateTime.Now - a.DateTimeUpdated) .FirstOrDefault();
I have briefly, as a guideline. The purpose of IT management asking me to build a workflow engine from scratch is so that they can eventually sell it to other divisions within the company or sell it to subsidiaries of our company. This means I can't use any existing workflow APIs, not even ones by Microsoft despite us being a .NET shop. I can't even use any open source workflow projects either. All of it must be written by me from a clean slate. It's a ridiculous task I know.
I've found that passing around any struct &lt;= 64 bytes is about the same speed, bigger than that and it slows down dramatically.
Yeah, that's probably part of it. I also suspect that its single variable copy intrinsic only goes up to 64 bytes and then it switches to some other strategy (a loop maybe?). I never checked the generated assembly, though, it would be interesting to see what's going on.
Removed: Rule 4. I don't think the pictures do a good enough job demonstrating the problem. Also the code posted isn't formatted for Reddit. Also try improving your tact. Maybe try using the debugger to validate that the various values and branch executions are as you expect. Also consider avoiding branching logic based on things like `panel1.Left == 632`; it's too easy to have mistakes with these and are more fragile to breaking changes.
I've been out of C# for a while and recently I've been doing Scala, which seems like it's the source of a lot of the inspiration for new C# 7 features. This is some cool stuff.
To be fair I think IntelliJ comes pretty close to VS when you're working with a statically typed language (and the JS support is definitely better).
Well, VB is still supported, but if you were a VB specialist you'd probably be thinking about picking up some other skills. I assumed that was what the question was about.
 var items = Items; // ... Items = items; - if (value == _items) return; In `Clear()` you're setting `Items` to the same instance it already was, and in the setter you are returning early and not raising the event if that's the case.
1) The Engine class that does the workflow processing.... should it be a static class or an instance class? If it's an instance classes, should it be a singleton? Why? Why not? Shouldn't be singleton, should be instanced in the detection response thread. 2) How exactly does the Engine class "detect" a submitted form? The only idea I have is to have the submitted form save to a table called tblSubmittedForms and then every 5 minutes have a Scheduler called Run() on the Engine and have the Engine process the records in that table. What other way is there to do this? The forms are submitted via web page. you can implement routing there with selection of template type to fill out.. 3) Where should the Engine class get instantiated (if an instance)? New forms could be submitted at any time on the Web Portal and since the Web Portal is always active then the Engine class must be instantiated as-soon-as-possible within Global.asax's Application_Start() method right? no, you can instance it in the detection routine and have 1 management thread run it through your workflow while other tasks can be accomplished using task or separate threads from the management one.. 
&gt; Might not necessarily be ideal, but it should work as long as you're vigilant to call it wherever you make changes. Not sure why I didnt think of that in the first place, Ill eventually probably go down the custom collection type road but for now manually firing the event will do me. &gt; No, the setter is on the array itself, not on the array items. So assigning new items won't trigger the setter. Today I learned. I dont use properties much! Thanks for the assist!
If I was tasked with solving this problem, I'd create a collection class that wraps a List&lt;&gt; (or an array) and put my event logic on the add/remove/clear methods of my wrapper class. That's how .NET does it for things like [ObservableCollection](https://msdn.microsoft.com/en-us/library/ms668604(v=vs.110\).aspx) List&lt;&gt; collections are easier to work with and are essentially an array underneath the hood anyway. If you're using Unity, consider: http://va.lent.in/unity-make-your-lists-functional-with-reorderablelist/
I like intellij and phpstorm beats the shit out of VS for non-asp.net web stuff
Correct. It should be a separate service. As for the 2nd question; SQL Server has notifications mechanism. Process should look something like this: 1) Engine (processing service) is started and runs forever. 2) Engine subscribes to SQL Server's change event so that it can be notified about insertions. 3) User submits request. 4) Users's request is stored in SQL Server. 5) Change event gets triggeres and Engine is notified. 6) Engine spawns an async worker that will do the processing. 7) Worker is aborted after it finishes the work. Draw a use-case, state and activity diagrams before going further with this. 
Heh, a bit. If the predicate is false, I use default(T) for the value of Value. The major benefit to a monad is that you can carry it through a series of operations in its wrappered form, then unbox it at the end to see what you've got. This is the basic idea behind Linq and its transducer monads. 
Oh I do like this approach though. Perhaps I could even use some F#/C# interop to try and patch over some of C#'s shortcomings. I think I even remember C# 7 having pattern matching...
Notification mechanism and change events sounds like something about SQL Server I ought to research! Thanks!
C# 7 has some limited pattern matching support, emphasis on 'limited'. 
Scala and F# both have been huge influences. 
It is very easy to develop average-looking winforms app. Just drag, drop, move stuff around a bit until it looks OK. With WPF first app will be ugly. I guarantee it.
I'm very well aware of the benefits of the maybe monad, and I still say the approach to be able to unwrap it implicitly is awful. The `default(T)` thing would only work for reference types, not for value types (since you can't distinguish between an "empty" value and the value in the maybe), and then you'd need to check for `null` again. But since (with the proposed solution) this happens implicit, it's **very easy** to forget that it's suddenly unwrapped and can be`null`. The better approach (more inline with the other methods of the maybe monad concept) would be something like: myMaybe.Match( value =&gt; /* action that is called when it has a value */, () =&gt; /* action that is called when it has no value */ ); Take a look at the **excellent** Optional library. It's a great implementation of the maybe monad, already supporting all kind of operations and is well tested. It even supports .NET Core already (via netstandard 1.0). https://github.com/nlkl/Optional
Awesome! UWP would be nice too. 
Compute-ID: 1 ----- Load Distributions: [32.8%] - [33.6%] - [33.6%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 14.17ms, workitems: 2,688 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 18.75ms, workitems: 2,752 Device 2(gddr): Quadro M1000M ||| time: 14.84ms, workitems: 2,752 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [33.6%] - [32.0%] - [34.4%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 6.17ms, workitems: 2,752 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 10.12ms, workitems: 2,624 Device 2(gddr): Quadro M1000M ||| time: 6.52ms, workitems: 2,816 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [35.9%] - [28.9%] - [35.2%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 5.54ms, workitems: 2,944 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 8.62ms, workitems: 2,368 Device 2(gddr): Quadro M1000M ||| time: 5.95ms, workitems: 2,880 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [37.5%] - [26.6%] - [35.9%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 7.17ms, workitems: 3,072 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 11.57ms, workitems: 2,176 Device 2(gddr): Quadro M1000M ||| time: 5.91ms, workitems: 2,944 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [37.5%] - [23.4%] - [39.1%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 7.17ms, workitems: 3,072 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 10.93ms, workitems: 1,920 Device 2(gddr): Quadro M1000M ||| time: 5.89ms, workitems: 3,200 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [37.5%] - [21.1%] - [41.4%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 7.14ms, workitems: 3,072 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 12.13ms, workitems: 1,728 Device 2(gddr): Quadro M1000M ||| time: 8.51ms, workitems: 3,392 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [39.8%] - [19.5%] - [40.6%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 7.63ms, workitems: 3,264 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 11.96ms, workitems: 1,600 Device 2(gddr): Quadro M1000M ||| time: 6.12ms, workitems: 3,328 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [39.8%] - [17.2%] - [43.0%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 8.62ms, workitems: 3,264 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 8.53ms, workitems: 1,408 Device 2(gddr): Quadro M1000M ||| time: 6.91ms, workitems: 3,520 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [39.1%] - [16.4%] - [44.5%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 5.78ms, workitems: 3,200 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 9.65ms, workitems: 1,344 Device 2(gddr): Quadro M1000M ||| time: 5.43ms, workitems: 3,648 ----------------------------------------------------------------------------------------------------------------- Compute-ID: 1 ----- Load Distributions: [39.1%] - [17.2%] - [43.8%] ------------------------------------------------------- Device 0(stream): Intel(R) Core(TM) i7-6820HQ CPU ||| time: 5.72ms, workitems: 3,200 Device 1(stream): Intel(R) HD Graphics 530 ||| time: 10.06ms, workitems: 1,408 Device 2(gddr): Quadro M1000M ||| time: 7.45ms, workitems: 3,584 ----------------------------------------------------------------------------------------------------------------- Nbody force: fx[0]=-119.7326 fxCl[0]=-119.7326 fy[0]=-119.7326 fyCl[0]=-119.7326 Nbody force: fx[1000]=106.8161 fxCl[1000]=106.8161 fy[1000]=106.8161 fyCl[1000]=106.8161 Nbody force: fx[2000]=-92.41647 fxCl[2000]=-92.41643 fy[2000]=-92.41647 fyCl[2000]=-92.41643 Nbody force: fx[3000]=-8.868257 fxCl[3000]=-8.868261 fy[3000]=-8.868257 fyCl[3000]=-8.868261 Nbody force: fx[4000]=-5.521742 fxCl[4000]=-5.521745 fy[4000]=-5.521742 fyCl[4000]=-5.521745 Nbody force: fx[5000]=-99.96589 fxCl[5000]=-99.96589 fy[5000]=-99.96589 fyCl[5000]=-99.96589 Nbody force: fx[6000]=3234.36 fxCl[6000]=3234.36 fy[6000]=3234.36 fyCl[6000]=3234.36 Nbody force: fx[7000]=3.560333 fxCl[7000]=3.560335 fy[7000]=3.560333 fyCl[7000]=3.560335 Nbody force: fx[8000]=71.09513 fxCl[8000]=71.09512 fy[8000]=71.09513 fyCl[8000]=71.09512
No, I'm referring to the root of the class. I postet an example.
Your form is a class. Classes contain members. The line causing the error is not a valid member: https://msdn.microsoft.com/en-us/library/ms173113.aspx
or is it the example I wrote here on top?
FYI, MTA = Multi-threaded apartment.
Math.Random
This depends entirely on what software you'll write the game in, and to a lesser degree, what platform.
Or Muslim Television Ahmadiyya or pick one of the other top google results for fun, but in this case we're talking about a Mail transfer agent.
No, I am not, just basic C# in microsoft visual studio 2017
Removed: Rule 4. Go about trying to make a single square. Then many squares but in hard-coded locations. Then look into the methods available in [`Math.Random`](https://msdn.microsoft.com/en-us/library/system.random%28v=vs.110%29.aspx) (probably one of the integer `Next` methods) and plug it in to where you were supplying hard-coded numbers before.
I'm also developing .net apps on a mac and I use Parallels desktop to emulate a windows machine. I then installed visual studio and using convergence (parallels thing) you can run the IDE as if it was installed on your mac. The frame rate is good, the resolution can scale to the retina display making everithing crisp and clear and it's actually quite refreshing to develop like this. Hope it helps. 
You made my PTSD flare up...
Crud is also slang for crap or junk.
Ah ok, so only members of a class (like events, functions, fields(variables)) can be in the class, but not objects of a component class? Strangely, I can instantiate a new object (for example, a label object) in the class but can't access it there, I can only access it in a class member.
You can initialize fields and in 7 properties which are members in a class body. 
How often do you really write code dealing directly with arrays rather than IEnumerable&lt;T&gt;, lists, etc.? 
This is how we solved it too. Plus it is needed for swagger generation. I think what OP is missing is that a action needs to be able to return 401, 404 just as easily as the 200 with the expected return type. If you are only concerned with the happy path I can see being frustrated with the pattern. But as soon as you start worrying about common failure scenarios you see the value. That still leaves a gap in testing the happy path returning the correct object. We use Mediatr so it was trivial for us to write a suite of tests that just boats like blasts through the happy path and verifies the retutnType attribute but I'm sure other solutions exist too
I wanted that for a long time.
The problem is that as a library author, you don't really know what the application code is going to do with the results. At least that's what I was thinking when we wrote this guideline. Now I am more inclined to agree with you.
You'll have to clarify this one for me, since if you drag and drop stuff, it will look nearly identical for both Winforms as well as WPF App.
For number 2 I think you would be better off using queues, but I guess if you can't use any open source or 3rd party you would probably have to implement it in the DB anyway. That's a ridiculous requirement by the way..No open source, but they'll let you use ASP.NET which is open source...
For the most part I agree with your tuple guideline except that this part &gt; DO use var when reading a tuple return without deconstructing it. This avoids accidentally mislabeling fields. You should replace it with something like avoid using tuples without deconstruction. Also why should the fields look like properties? Isn't it better if they look like fields to point to the fact that they are not properties? Of course that would be a non-issue if people always used deconstruction.
There are a few solutions, depending on what works best for you: 1) ObservableCollection has this functionality built in. Just subscribe to the CollectionChanged event. 2) Wrap an array, e.g: public class Inventory { public event EventHandler InventoryUpdated; private object[] _theArray; public object this[int index] { get { return _theArray[index]; } set { _theArray[index] = value; InventoryUpdated?.Invoke(this, EventArgs.Empty); } } } (Sorry for formatting I'm on a phone and unsure of any code formatting that Reddit provides). 3) Controlled draws depending on your implementation. I'm guessing your game pauses during an inventory check? If that's the case it's likely your inventory should be less expensive to update and draw than any live game objects are. If you do indeed pause game play and you're doing an update/draw loop (either single or multithreaded), then you should just be able to halt game object update calls and also halt drawing any game objects (only update/draw inventory items). If this is still too slow and you are using a draw loop, have you set an fps or have you just got something similar to While(!paused) DoDraw(); ? If that is the case, limit your processing: TargetFPS = 60FPS = 1/60 s per frame, so: double drawTimeMs = (1.0 / 60) * 1000; While (isRunning) { timer.Start(); DoDraw(); timer.Stop(); if (timer.ElapsedMilliseconds &lt; drawTimeMs) { int waitTimeMs = drawTimeMs - timer.ElapsedMilliseconds; Thread.Sleep(waitTimeMs); } timer.Reset(); }
All the time. Scientific computing you see. Linear algebra and fast arrays FTW.
OK, fair enough. I don't think that's typical though (and I'm not sure the performance characteristics of a List&lt;T&gt; are *that* different if you allocate the size up-front).
yes.
Despite the name, under the hood, list is a Vector not any kind of list. 
My information could be slightly outdated. Back in VS 2010 days I tried doing some WPF stuff and it looked like some half-baked stuff. Margins, padding, fonts, almost everything was different from default windows look. I gave up on WPF then since I did not want to bother with colors and margins just to have a regular windows look. However if you drag and drop stuff in WPF and WinForms and have app that looks the same then trying to make it behave while resizing is easier with WinForms. It is quite primitive but for simple cases it is fine. In WPF/XAML you pretty much have to rewrite everything from scratch since Visual Studio designer does positioning by using Margins.
I wanted the examples to be simple, just to convey a message. But I guess I fucked up and oversimplified it. I'll try and fix it later. Thanks to all for constructive criticism!
Good job. I like it. Looks great. :D
Removed: Rule 6.
We need a bit more information. When you spawn the objects, is it that you want them all to move towards a "target position" over a certain amount of time? Or instantly? I would likely recommend using coroutines for this though.
That's not what FixedUpdate() is for. In fact, manually moving objects in FixedUpdate can result in jumpyness and in the case of actual Physics objects, directly moving them with Transform can result in buggy behavior. FixedUpdate is meant for making calls to Physics related movements and interactions (like Raycast) since it is the phase that PhysX or Box2D will do an update cycle. FixedUpdate doesn't update every frame, but on its own set-cycle. You could be rendering at 144fps and FixedUpdate would still only be updating 50FPS to keep physics movement uniform. Doing manual transforms in FixedUpdate will prevent the position from updating at higher FPS intervals. Check out the execution order diagram at the bottom of this page, you can see how the FixedUpdate() is on its own loop. https://docs.unity3d.com/Manual/ExecutionOrder.html As general practice, any movement not part of the Rigidbody component should be done during Update, LateUpdate or a Coroutine. People getting choppy movement in Update() is from not scaling their movement amount by `Time.deltaTime`. By multiplying it with that, you ensure that your movement amount is adjusted by the amount of time it took to process the last frame.
But there is a catch. You need to know at least C99(but constrained, not all of it) language to talk to GPUs. This is for the kernel code. Rest is C#. Its like writing HLSL, but only for compute, but for anything from CPUs to FPGAs. You can also leave buffer data on device to use multiple times. Then get it once. You can work with Nvidia + Amd + Intel(iGPU, ..) at the same time with this.
But it optimizes buffer accesses so the only bottleneck is the pci-e bandwidth. Useful for people who are looking for zero-copy computing on GPUs (streaming) and image transformations. If you have an iGPU, you can try and offload some of the work to it. Maybe some Parallel.For with maths. Maybe some multiple threads multiplying matrices. Maybe taking an integral, computing PI, ...
Yep, my former job did that with XML and the new one with Funcs and attributes from the container. Well done, you've now coupled the container to your code in place of the types you'd have otherwise had a dependency on. So they've not actually fixed anything.
Thanks, I like that phrasing. I'll update it on Monday.
That's a good point.
Is your program command-line? If so, just use [Console.ReadLine](https://msdn.microsoft.com/en-us/library/system.console.readline).
This looks incredibly useful.
he's convinced his "code" works as intended. ["code" in question btw](http://i.imgur.com/UurvLv6.png)
That's why [documentation](https://msdn.microsoft.com/en-us/library/system.string.equals.aspx) exists. "Determines whether two String objects have the same value."
That code doesn't successfully execute at all, actually. 
Depends on what you mean by set obj = obj2. It's trivial for value equality with something like this (excuse bad code) class test { public int testField {get; set;} public override bool Equals(object obj) { bool result; if(this.testField == ((test)obj).testField) { result = true; } result = false; testField = ((test)obj).testField; return result; } } var obj1 = new test{testField = 10}; var obj2 = new test{testField = 20}; Console.WriteLine(obj1.Equals(obj2) + " - " + obj1.testField); //False - 20 As far as I'm aware you can't modify the pointer of either obj1 or obj2 from the Equals function however (aka reference equality). The this keyword is readonly so you can't point obj1 to obj2. You also can't modify obj2 to point to obj1 as you'd need to do something like public override bool Equals(ref object obj) But that has a different method signature to public override bool Equals(object obj) So you can't override it. More importantly you shouldn't. Changing the value of a variable whenever you compare it to another variable is obviously a pretty bad idea.
I do a fair bit of C# dev on OS X and I'd recommend Xamarin Studio. It works ok and is more than sufficient to learn C#. Xamarin's main focus is mobile app development but it does a fine job of non-mobile development as well. VS is the better IDE but as a beginner you probably won't appreciate the extra features. Also check out Xamarin Workbooks which should be installed automatically. It allows you to write C# snippets and run them which is very nice for experimenting. If you're planning on using Azure or ASP.net then I'd recommend VS as Xamarin Studio doesn't have as many templates/plugins. Monodevelop no longer exists (it's now Xamarin Studio) so you can ignore that. VS Code is ok but it doesn't do anything better than Xamarin Studio except being lighter. VS for Mac doesn't seem to have any extra features compared to Xamarin and it's in beta so I'd skip it. Using Parallels + VS for Windows works well but you need a fair bit of spare space for a windows install and the cash for a parallels licence.
What is that garbage code
also probably of more interest in the unity3d sub 
Go to asp.net and read &amp; follow their tutorials. They teach you all the basic things you need to make the application. Also, you should be abstracting away the database details, so making the database last is not a bad thing.
will do. thanks. but how do i integrate the ms access db then after creating the web app?
What? Since when LINQ become efficient on large collections ? I've seen many performance evaluations and none of them was saying that LINQ is any near being efficient.
Simple experimentation? var a = true; a.Equals(false); Console.Writeline(a); ??? I mean technically you could overload .Equals to mutate an object's externally visible state. Like, to do that you'd have to unfathomly fail at implementing one of the most simple concepts in programming and achieved godly levels of jank...
To be clear, `Application.Exit` is killing the loop inside `Application.Run` that handles presenting and updating your Window (well, its 'message pump'), disappearing forms (windows) in the process.
that would be good. unfortunately, this is due on tuesday :(
Shit, I'm home on Tuesday. Alright, try going to pluralsight, sign up for free trial. Search MVC c# , and watch the course with Scott Allen (I think), that should teach you all you need to know :)
I have no idea what's going on but I know it's cool!
right thank u
Pay attention to **generics**. Neither language has them. Also, pay attention to **tooling** (add Resharper). This is the other area that is missing in go,javascript &amp; ruby. Otherwise everything else should map back to your previous experiences
I haven't programmed in Go, but I've been looking at the language quite a bit recently. One of the things I've found interesting is the concept of goroutines. I'm sure they're not exactly the same, but tasks and async/await are probably going to be the closest concepts.
He was replying to someone that said "VB/VBA". He could have been assuming VB in that context meant VB.NET, which is a first class .NET language.
They're also very new, so you'll have to seek them out. One unfortunate habit among tech professionals is that once they learn how to do something, they never learn how to improve it. I can find articles written about PowerShell this year that still use reflection against assemblies to instantiate objects when there's been a PowerShell command to do it for years. 
&gt; C#7 finally got something that works just like Go's multiple return values. ....which is? 
Some javascript libraries are similar
Come on, that's just stupid to say. It has a potential to be a great IDE, but it's still in early phase and not even close to VS.
Your first example will not compile: &gt; int[,,] numbers = new int[10]; You're just specifying the length of the first dimension - but you declare it as having three dimensions, so you must specify the length of all of them. &gt; char[] chars = new char[length]; `length` is a variable that is in the context. It specifies the size of the array, e.g. int length = 10; char[] chars = new char[length];
Go does seem far ahead other languages in regards to concurrency, but you should avoid creating threads in C#. Tasks, the TPL, and async/await should be highly preferred over threads. 
If this is being used under ASP.NET MVC or WebApi, then one thing to consider is that the threadpool that IIS uses to fetch threads from to serve requests and the threadpool used by Task.Run( ) are the same what this means is that you are depleting the IIS threadpool when you use Task.Run inside the code, this approach wont be scalable 
If my ADO.NET functions are written as async, and I avoid using Task.Run completely, can I still get the benefits of parallel calls without tying up request threads?
Go is not object oriented or class based. It's a system language mostly designed for web applications, at least very well suited for. Its standard library is all you need in most cases... So to learn idiomatic Go, the standard library source code is probably the best place. As far as the main idiomatic point in Go programming I think the best way that I can put it is that for 99% of the cases expressivity comes first. Most language features are designed that way and to write good Go code I think you need to get into that mind set. They really put a lot of thought into how your code reads. They even package a formatting utility (gofmt) that indents and formats your code for you so everyone's Go source code will look the same. It's a very important difference I think. Choosing explicit as opposed to implicit and expressivity as opposed to designing around the OOP paradigm, which I have the sense C# does a lot. You can still do OOP in Go though. Go's interfaces are also similar to C#, but they're slightly different in that all values in Go satisfy the empty interface. This actually has very unique and useful implications. Get familiar with them. The toolset is very important too, I think. For the most part all you need to write Go is a very basic text editor and a console window. The go compiler and the go command are very powerful. Get familiar with it. Error handling is another one you'll have to get used to. Go's error handling is just redundant as hell, but you eventually just get used to it, it becomes second nature and your programs error handling will just be that much better for it. For a beginner I'd recommend to not resist that. It's just well known that the most used keywords in Go are `if err != nil {...}` Finally I'd say the best way to get dirty with Go is to write web apps. So if you're a beginner/intermediate who's got the basics down and want to get advanced, do that. Even more advanced now I'd say learn Docker, which btw is written in Go, because it's an absolutely fantastic packaging/deployment tool.
If you dont use Task.Run( ) and use your async methods with Task.WhenAll, you will not be using more than one thread at any given point of time within a request.. because in 99.9% of the cases, true asynchronous code doesnt use more than one thread to run your code. But since you are using truly asychronous methods, the CLR will not block the thread and wait for one database call to return data (which is the crux of true asynchrony), so you'll have some performance gain there. but no, there will be no multithreading as such. Edit: .NET core doesnt change anything with respect to the single thread execution stuff, they just got rid of the request context.
I'm curious, do you have a source on what's different with .net core WRT async?
Cool. For the record, LINQ isn't strictly for databases. It's an abstraction of querying in general and you'll use it a lot with local collections (LINQ-to-Objects). Also, very extensible with extension methods (MoreLINQ library). 
I don't know about Go, but my biggest pain points in transitioning from JavaScript to C# were: 1. Variable types. JavaScript will automatically convert strings to integers if you try to do math, etc.... C# is a strongly typed language and doesn't allow that stuff. You have to manually convert variables if you need them to be a different type. 2. Class structures and data type inheritance. JavaScript lets you add new properties to any objects that you create. (And even a lot of built-in stuff that you didn't create.) That crap doesn't work in C#. You have to declare all of an object's properties in that object's class. If you need to extend existing class that you don't control, you need to do something such as inherit that class, or implement a common interface that the other class uses. 
Yeah I tried but I couldnt find anything regarding that, maybe I read something else, corrected the above response.
Specifically, what's going on in the example you provided, is *where* in the class code you are trying to access the Text property of label1. label1.Text = "Hello world" is a statement, not a declaration of a class member (such as a field, property, method, etc.) It works in your constructor because it lays within the body of a method, and not outside of it. The reason string hello = "Hello" works is because you are introducing a private string field to the class as an instance member and initializing its value, which is legal.
The easiest way to show whether something works as intended (this or any other code) is just to step through it in the debugger and watch the value.
I'm sorry for potentially misunderstanding, but to be clear, you're saying that using "async" methods in replacement of Task.Run() inside of the WhenAll will not result in the two db calls to be made simultaneously? If that is what you're saying, what is the benefit of using async methods besides saving request threads? Using async will result in slower responses overall, unless the server is handling so many requests that the slowdown is negated by the free threads available?
It's not that async methods *can't* use threads and thus can't be concurrent, it's that they don't *need* their own individual thread to be concurrent. With async methods you can still get the benefit of having multiple requests at the same time without having to 'pay the price' of blocking one thread for each async task.
A) Yes, absolutely. You have taken synchronous, IO-bound calls and wrapped them with `Task.Run`. You should instead use the asynchronous versions of your ADO.NET calls. B) The problem would be further exacerbated. C) Yes--use the async counterparts of the ADO.NET functions you're using now. Additionally, you should really consider exposing functions like this as `async` themselves rather than utilizing mechanisms iike `Wait` or `WaitAll` to synchronously wait for them to complete.
thanks for the reply, I'm just getting one small error now. Uncaught ReferenceError: addProd is not defined at HTMLButtonElement.onclick (VM640 Create:1) onclick @ VM640 Create:1
"C family of languages" C# has very little to do with C / C++ except the basic syntax.
There are nuances to array. And there are some different methods for initialization. var numbers1 = new int[10]; var numbers2 = new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }; var numbers3 = new[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }; var multi = new int[4, 4]; var jagged = new int[][] { new[] { 1, 2, 3 }, new[] { 2, 4, 6, 8 }, new[] { 1, 3, 5, 7, 9 } };
Oh! so it's in one object, and I need to define an object that has the pieces I want! okay.
Yes, I understand that. I said change it to string so you can see that your bindings are incorrect. Can you confirm it hit the server after changing product to a string? Using the jquery that the other commenter gave below, i think that parameter in your action method should be of whatever type the your view's model is.. When your view is rendered, you should see that the "name" attribute of the Name input is "License.Product.Name".
Make sure the button type is "submit" and remove the onclick attribute 
was just about to edit/delete the post i figured it out. MessageBox.Show(num2 + " / " + num1 + " = " + quotient.ToString("0.0000"));
I copy and pasted the other redditors jquery but it still hasn't worked for me, and I changed the button type to submit as well
LINQ is applicable to any collection of data. What sits behind the collection implements the specific way it works, naturally. So if there is a data context connected to a database or a simple in memory collection or some more esoteric stream style like reactive, the methods will be there but the way it does things will be a bit different. For example, things like differed execution is far more important when querying a DB than dealing with an in memory collection.
It's still in beta
Go users keep saying that interfaces deal with some of the use cases for generics but I have not seen any example where the problems solved by generics are solved through interfaces. Let alone that Go interfaces have nothing special in them except that they are implemented implicitly on structural basis and I can't see how this solves any of the problems that generics do.
Ding!
For math and comp sci stuff MathNET (https://github.com/mathnet) and QuickGraph (http://quickgraph.codeplex.com/) are good examples. Of course, anything on the dotnet github is good. Take a look at https://github.com/dotnet/roslyn.
Damn you so quick with the flurry of questions. Sorry I couldn't get back to you sooner. This is the Tester Class Nbody test, without recompile kutuphaneCL for my processor. Recompiling gave better result Keep up the good work! Lets see if I understand what you did above.. for(int i=0;i&lt;8192;i++) array[i]=sine_cosine_sqrt_expensive_function(array[i]); &gt;can be unfold to all OpenCL-supported devices with load-balancing and pipelining features: var cruncher = new ClNumberCruncher(AcceleratorType.GPU|AcceleratorType.CPU, @"__kernel void acceleratedLoop(__global float *a) { int threadId=get_global_id(0); a[threadId]=sqrt(cos(sin(a[threadId]))); }"); ClArray&lt;float&gt; transitionArray = array; transitionArray.compute(cruncher,1,"acceleratedLoop",8192); // now array has computed values by 8192 workitems on different devices such as gpus cpus igpus and fpgas So instead of making a external function run on each element of a array in order, you made each element run the function internally, eliminating the external function and moving the code to the runtime of the element processing.. Standard procedure, but nicely laid out. :) 
Async is intended to be used with IO bound work primarily. DB access is obviously IO bound. Async doesn't abuse your thread pool by, generally, using 'IO completion ports'. Async call does all the work it can until it gets blocked by a slow awaited request. It the suspends its stack to the heap. Then schedules more work on that thread. Eventually the slow work marks its task as finished, using an IO completion port for most framework code. That work then gets rescheduled onto a thread. So your code ends up looking like: Var firstTask = firstWork(); Var secondTask = secondWork(); Var thirdTask = thirdWork(); Await task.whenall(firstTask, secondTask, thirdTask) Var firstResult = firstTask.Result; Var secondResult = secondTask.Result; Var thirdResult = thirdTask.Result; Where your work functions return Task&lt;T&gt; and are marked async. Only mark things as async as async if they are actually async. You can return and await any Task&lt;T&gt;, you just have to make the type system happy. Async isn't free, but generally if you have IO it is a performance win. 
thanks for these! i'll take a look
Was it this? https://blog.stephencleary.com/2017/03/aspnetcore-synchronization-context.html "The legacy ASP.NET SynchronizationContext is an actual synchronizing context, meaning that within a request context, only one thread can actually execute code at a time. That is, asynchronous continuations may run on any thread, but only one at a time. ASP.NET Core does not have a SynchronizationContext, so await defaults to the thread pool context. So, in the ASP.NET Core world, asynchronous continuations may run on any thread, and they may all run in parallel."
Start at i = reverseAminals.Length - 1
Are you able to expand on why using OSS or Microsoft api's prevents software from being sold?
It's always those blasted off-by-one errors :-)
The concept of Web Apis tells you that in a request you should fetch data and return it as quickly as possible but multithreading within a request is not recommended in any variation because the approach is not scalable, however you look at it. So in general, its never a good idea to use long living sub-threads within a request lifecycle. Coming to your question of async, it enables the system to make use of resources more efficiently, what this means is that it enables your Web App to be scalable. How? So, using async-await to fetch data, the system does not wait until the db has returned the data back for a db call because its a non-CPU bound operation, in the meantime the system can use the resources for doing some other work. Whereas if you dont use async-await and use some sort of waiting mechanism, that leads to request threads being blocked until your db responds back with data. In general the concept of using threads within an API request to fetch data is flawed and should not be implemented into production apps where you expect a good amount of traffic. 
While I haven't browsed the source, don't you think ^^I ^^imagine it's a little advanced for someone asking about projects to learn from, no?
[LINQPad](https://www.linqpad.net/) is your friend for learning LINQ. It has built in examples. It has a free version, but the paid version adds MANY useful features. 
Ah yes thats it, Cleary's blog, I knew I read it somewhere. Thanks for finding it!
They reach the end point at the same time because they are using Lerps to move, so assuming they all have the same "speed" set, they will all arrive at the destination at the same time. You can swap out that Lerp for a MoveTowards and change the while() condition to something like `while(Vector3.Distance(obj.position, endPosition) &gt; closeEnoughDistance)`
Noob here why not just have a password login and hash the passwords in an sql database?
This is ASP.NET Web API, which uses Newtonsoft.Json already by default.
I've heard from somewhere (probably a podcast), that cake is quite good with their coding standards. I haven't checked it out myself, so can't say my opinion. https://github.com/cake-build/cake
MoreLINQ Batch() is one of my favorite methods. 
&gt;for a start, how about providing a type variable data structure? What? In c# you can have a variable of "Type" such as var strType = typeof(string) or "string".GetType()
ActiveRecord is the class name. 
Depends​ what level you are at, what you want to learn, and what you enjoy.
If want to learn about software design (SOLID, DDD): https://github.com/Sonarr/Sonarr 
Why would you want to use them across assemblies? That's what inheritance is for.
stackexchange has some good ones, and you can chat with the devs on twitter and ask questions: * https://github.com/StackExchange/StackExchange.Redis * https://github.com/StackExchange/Dapper * https://github.com/mgravell/protobuf-net
Any/All. On Github there are currently over 200,000 C# repos. Just pick one and start going through the code. Even if the code is horrible, you'll still learn what not to do which is just as valuable as what you "should" do. There are popular repos: * https://github.com/dotnet/corefx * https://github.com/jstedfast/MailKit * https://github.com/ShareX/ShareX * https://github.com/StackExchange/Dapper There are repos that span languages, concepts, or are wrappers for existing things: * https://github.com/opentk/opentk * https://github.com/txdv/LibuvSharp * https://github.com/mono/ikvm-fork You can learn from even unpopular repos. Many of which are amazingly well done but never took off for various reasons. For instance the project may fill a very niche need, a more popular tool may already exist, or it's simply not headed by someone with a connection to people at places like Microsoft. You'd be shocked how many times a project "wins" just because the person running it knows someone like Scott Hanselman. Anyway smaller projects: * https://github.com/qakit/Visual.Comparing.Tool * https://github.com/NowBI/Xamarin-Forms-Mobile-Template * https://github.com/ckimes89/graphql-net Heck just pick a random thing like "C# linear algebra" and search github for it. Chances are you'll find something that you can learn from.
I was just teasing you. I understand it because I wrote a lot of it.
Lol, holy shit. In the presence of greatness my friend.
What do you mean stupid to say? Since I switched to Rider, I find myself a lot more productive. The code navigation, intellisense, autocomplete, code suggestions, intelligent and ergonomic hotkeys, all that is better than in VS2017. VS2017 has made some leaps from VS2015, sure, but it does not match Rider in the aspects I listed. If you feel different, go ahead and say why. Don't just say it's stupid to say, come on now.
Just what I said. I just upgraded Rider to the newest version and started a new Console Application project. * Isolated exception: SolutionModel.solutions.[1].editors.documents * [Completion]Timeout in ReSharper contributor. Full. java.util.concurrent.TimeoutException: [Completion]Timeout in ReSharper contributor. Full. * Intellisense doesn't work (a loading icon keeps spinning but it never recommends anything and times out). * Rider literally allows you to use VS/Resharper key mappings when you first install it. * It lacks a lot of templates and customizability. * VS is better in all the aspects you've listed and that's the fact.
&gt; In my opinion, C#’s rapid evolution to become more functional will eventually lead fragmentation in the C# world. It’s quite foreseeable to imagine a scenario where a project is written in an entirely functional manner C# (using new future C# features). When a new developer (who is not accustomed to this way of working) joins the team, then that developer could find the code base difficult to understand and then and start writing traditional OO code. There is absolutely nothing wrong with OOP, but if all the code is written in one way and then other parts are written in another quite different way, then the reasonability and consistency of the code is affected. I'm glad someone said this. I think that by catering new features to functional language enthusiasts, the C# team could end up bifurcating the C# ecosystem in the long run. 
Yes, you have to bind to the model of the top level view
Do you have benchmarks for: * lists of smaller sizes * Roslyn Linq rewrite vs FasterLinq * Parallel Linq vs FasterLinq
HOLD UP, They don't love you like I love you. ... So, I'm making you a MVC fiddle. Give me like 10 min. ^^^^. --- ^^^^. **Here we go:** https://dotnetfiddle.net/SAcYj1 All of the advice I gave below is still valid (and I applied most of it anyway, I believe), but in this case I think the best way to do this is to go against the grain and simply construct a select list the old-school way. Any other way would require you to use javascript or some other sort of hacky method to accomplish it. If we construct it manually we don't have to worry about javascript being enabled, or the values popping in after the page starts loading. We get the best of both worlds: 1. You can display it however you want, easily. 1. The value that gets posted back will be licenseIds alone, without the name. Hope this helps! If you have any questions feel free to respond and let me know! ^^^^. --- ^^^^. Is there a specific reason you're using ViewBag? I *really* hate the MVC tutorials because they use ViewBag when everyone, including Microsoft, really advises against it. I'm assuming their doing it to keep the tutorials simplistic but it really does a disservice to people learning... Instead, you should create a viewmodel for the page. You could make one for this page with something like this: namespace Your.NameSpace.ViewModels.PageViewModel { #region Public Properties [DisplayName("Licenses")] public MultiSelectList Licenses { get; set; } #endregion #region Constructor(s) // Required, if you're going to post back and bind to this model. public PageViewModel() { } public PageViewModel(IWhateverDatabase db) { Licenses = new MultiSelectList(db.Licenses, "LicenseID", "Product.Name"); } #endregion } and then in your page your just do (at the top) @model Your.NameSpace.ViewModels.PageViewModel and then where you would use (MultiSelectList)ViewBag.Licenses you just use Model.Licenses instead. Notice the capital M there vs. the lowercase m in the @model declaration at the top of the page. Now you have a strongly typed model for your view (i.e. the view's model, i.e. a viewmodel). You no longer have to cast it to (MultiSelectList) like before. It knows the type. If I get a second (I'm at work) I'll answer your actual question. --- For more information see this link from MSDN: ["Accessing your models data from a controller: strongly typed models and the model keyword"](https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/introduction/accessing-your-models-data-from-a-controller#strongly-typed-models-and-the-model-keyword) --- Edit 2: Instead of using "LicenseID" and "Product.Name" I highly recommend using nameof(ClassName.LicenseID) which will give you the benefit that it will be 'linked' to the object name so you'll know at compile time if you have it wrong. It will also rename it as well if you highlight the LicenseID property and do a ctrl-r-r to rename all instances of it. For the product one you'll probably have to do: $"{nameof(Product)}.{nameof(Product.Name}" or string.Format("{0}.{1}", nameof(Product), nameof(Product.Name)) So, you'll end up with something like: Licenses = new MultiSelectList(db.Licenses, nameof(MyLicenseClass.LicenseID), $"{nameof(ProductClass)}.{nameof(ProductClass.Name)}"); --- edit 3: I just noticed in your examples you have the lines: @Html.LabelFor(model =&gt; model.Licenses, "License", htmlAttributes: new { @class = "control-label col-md-2" }) @Html.ValidationMessageFor(model =&gt; model.Licenses, "", new { @class = "text-danger" }) These **will not** work (or at least not do anything) *unless* you *are* using a view model like I explained. The model =&gt; model in this case IS the @model for the page. This allows you to decorate your viewmodel with the attributes like my example for the viewmodel above where you have [DisplayName("License")]. You can make properties [Required] on the model you want to post back to, display validation messages, etc. 
hey thanks for guiding me in the right direction. I knew about viewmodels but I just stuck with viewbags bc I was in a time crunch and also I was getting confused with making viewmodels cause I wanted to make them the right way but I never knew the convention, also you had to use mapping and such which I couldn't understand. I took a stab at what you just told me and came up with this public class AssetCreateViewModel { public Asset Asset { get; set; } public MultiSelectList Licenses { get; set; } public SelectList AspNetUsers { get; set; } public SelectList AssetTypes { get; set; } public SelectList Regions { get; set; } public SelectList Statuses { get; set; } public AssetCreateViewModel(HappyEntities db) { Licenses = new MultiSelectList(db.Licenses, "LicenseID", "Product.Name"); AspNetUsers = new SelectList(db.AspNetUsers.OrderBy(m =&gt; m.Name), "ID", "Name"); AssetTypes = new SelectList(db.AssetTypes, "AssetTypeID", "Category"); Regions = new SelectList(db.Regions, "RegionID", "Location"); Statuses = new SelectList(db.Status, "StatusID", "Condition"); } } but I'm getting an error with this line in my view page saying "object reference not set to an instance of an object", did I make the constructor correctly? the text is white for the constructor name. &lt;div class="form-group"&gt; @Html.LabelFor(model =&gt; model.Asset.AspNetUsersID, "User", htmlAttributes: new { @class = "control-label col-md-2" }) &lt;div class="col-md-10"&gt; @Html.DropDownListFor(model =&gt; model.Asset.AspNetUsersID, Model.AspNetUsers, htmlAttributes: new { @class = "form-control" }) @Html.ValidationMessageFor(model =&gt; model.Asset.AspNetUsersID, "", new { @class = "text-danger" }) &lt;/div&gt; &lt;/div&gt;
lollll just saw you edited your post :) thanks for the help~~
C# hasn't really added many features in the last few versions that work in functional programming that don't work just as well in object-oriented programming. Some features mentioned in the article as being inherently functional features that'll bisect the language, such as tuples and named tuples, ("records") in fact fit in better with object-oriented programming and make more sense with object-oriented thinking than otherwise.
Oh, I expected you to use the javascript along with it. Just use the same code you used before. Just make sure you add an id= to the select like this: &lt;select multiple name="Licenses" id="Licenses"&gt; And it should work. @Html.ListBox its literally just a function that makes generating the same output we made easier for us. It literally loops through the items you give it and generates those &lt;option&gt; tags for you and sets selected="selected" and disabled="disabled" for you if you give it the right values for those. Most of the time it works just fine, but if you need to do some manual tweaking like in your specific situation it can be easier just to do it yourself manually. Just to prove it, I added a @Html.ListBox like you had before and took a screenshot of the html side by side, check it out: http://i.imgur.com/yFTleRy.png
ahhhh I see, that makes a lot of sense. bc then if you pass in the viewmodel object to the view, it will call the constructor then haha. so that's how you initiate it.... I thought when the view page loads it should just automatically load it but now this makes sense. thanks a bunch seriously for helping me out man, i really appreciate it. you are the man! i think you knew exactly the struggle I was going through and you were able to help me out. and you know disney which I love! ~*~ beast ~*~
yeah i haven't actually gotten a chance to work the jfiddle solution you gave me to just yet bc I was working on viewmodels, so I'm not sure if I have any questions but I'm going to try and figure it out and let you know if I run into any trouble
I like your idea, is, try it
Actually no I think I'm wrong, forget that. Bind to the Product class. And remove the onclick event from the submit button, it's still there!!!!!
Is the jquery lib defined in your _layout properly? And are your script tags closed properly?
https://vulkan-tutorial.com I suppose is the place to start these days if you're into designing your own engine.
okay so I'm working on your jfiddle and I'm getting an error with this line &lt;option value="@license.LicenseID" @(isSelected ? "selected=\"selected\"" : string.Empty)&gt;@license.Name - @license.LicenseID&lt;/option&gt; it's not recognizing the @license.LicenseID or the .Name. I know it's bc you used a IEnumerable and I used a multiselectlist which only included the LicenseID and Name but I need the product key which is another part of license. so how can I gather up all the licenses from db.Licenses and put them into the IEnumerable?
With linq you can chain together any combination of things: Where(condition).Select(transform).OrderBy(foo).Sum(); Linq will iterate over that only once getting you the sum in one pass, rather than 4. For operations like Sum, Min, etc, yes those are not lazily evaluated, those force the evaluation. But Linq's Sum has to work with a Linq iterator, it can't just iterate over the array directly. 
yeah but I know for one of my javascript/jquery functions, without putting the this type of reference to the script it no longer works :/ &lt;script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt; I think it may have something to do with the bundleconfig/layout as you mentioned, I just checked my bundle and this is what I have in relation to jquery bundles.Add(new ScriptBundle("~/bundles/scripts").Include( "~/Scripts/jquery-1.12.4.min" )); bundles.Add(new ScriptBundle("~/bundles/jquery").Include( "~/Scripts/jquery-{version}.js", "~/Scripts/jquery-ui-{version}.js" )); and I looked in my directory and I don't see jquery-1.12.4.min anywhere so maybe that's why it's giving the error in the console about it bc it can't find it. and then for the second bundles.Add do I need to be specific and replace {version} with the actual number version I'm using?
Give this a go: https://github.com/mcintyre321/OneOf
Pretty cool tutorial. Should be super straightforward for those who have ever used a language like Haskell or Scala before, too. The whole "files have to be ordered in a project" thing sure is weird, though. I'm not sure I've ever seen that before in other languages. File dependency is usually more complicated than that (eg, files getting imported by some sort of "using" statement or include statement). I didn't have time to go through the whole thing, so not sure if there was other solutions offered. 
it's similar, but it remains an interface, so the concrete type is still up to you to decide
To my knowledge there is one Visual Studio plugin that allows creating folders and reordering those files in the hierarchy. However this is purely visual, and the files are kept in the correct order underneath so the compiler can process them. It was quite disturbing for me too at the beginning, but I got used to it and this has one plus side: dependencies between modules tend to be simpler than in C#
I was surprised when I read that too. However, I just read some of the below set of articles, and it sounds much less surprising to me now: * [Cyclic Dependencies are Evil](http://fsharpforfunandprofit.com/posts/cyclic-dependencies/) * [Refactoring to remove cyclic dependencies](http://fsharpforfunandprofit.com/posts/removing-cyclic-dependencies/) * [Cycles and modularity in the wild](http://fsharpforfunandprofit.com/posts/cycles-and-modularity-in-the-wild/) 
I second that, learning F# was one of the biggest boosts in my career as a C# developer. I don't use it professionally (I wish I could) but this knowledge made me a better programmer.
I really don't like detracting value from features for being syntactic sugar - the vast majority of what makes up most languages can be termed syntactic sugar - even something as simple as a while loop can just be seen as syntactic sugar for gotos. I mean, it would be horrible to use a language that relies exclusively on gotos for loops, but that's my point. It's so nice not having to litter my projects with piles of single-use classes.
The point I was trying to make is they are not splintering the language by making it functional, but simply making easier to do things that were already possible. Edit just for the record I love the new features, wasn't trying to be negative about them in any way.
I wrote a real small program just to see some syntax differences and there was a minuscule ammount
Sorry lol. Yeah, it is a bit fascinating when you see a feature from one language and start thinking about how well it would work in another - for C#, until C# 7, that was named tuples. For Java, it's not even necessarily a language feature, but some kind of simple, standardised events system, or non-primitive value types. (Along with other things, but first things first) When Apple's Swift was first released, it seemed ideal in all but three respects that kinda broke it for me: The backward syntax (e.g. var i: int = 0 rather than int i = 0, or returned types at the end of a method rather than before, or other small but annoying things like that), the lack of support for exception handling (and the way that you were supposed to emulate them), and the awkward namespace system. But it was that language that first got me dreaming about named tuples, and all types being non-nullable by default, in C#.
It does. A little.
That's interesting. What/how did it check? And yeah, it is mostly changing things from camel to Pascal casing. That, and some extra syntactical sugar sprinkled *every-fucking-where* compared to Java. lol. 
If I really want to see differences I'm gonna have to write a different program. I just wrote a game that generates a random number you have to guess just to incorporate loops, if statements, and variables. It was all the same except writing to the console so I'll do something else later.
Hope so
I mean, if it's a reference type, you could override it to create that behavior... but you'd be a terrible developer and I'd offer to hire you just so that I could fire you.
I'd argue that you *should* map the data, it's part of good design. Hard dependencies are very... bad... and this could cause a lot of that. Additionally how would you want this to work if multiple libraries started extending the same classes? What do you get here that you don't get from extension methods? This just feels like a way to reduce code, but the cost is massive technical complexity and extremely brittle code bases.
If multiple libraries extended the same class it would have the same rules applied as if it was in the same assembly. Either it would compile or not.
Lambdas, async, tuples and now pattern matching. Learning F# is like a glimpse into the future of C#. Reminds me of learning Ruby on Rails (never really using it for a full project) and then Microsoft releasing ASP.Net MVC. 
Try gamasutra.com
Not one of the bullet points you are listing applies to me. Not sure why you're running into those. I'm on build 171.3655.1246, March 22, 2017. &gt; VS is better in all the aspects you've listed and that's the fact. No, it's not the fact. It's your opinion.
Kk
&gt; Linq will iterate over that only once getting you the sum in one pass, rather than 4. Unless Sum is special-cased for OrderBy and so skips the operation entirely (since it will have no effect), I can't see how this won't require at least two passes.
You should have suggested coreclr's GC. 10/10 simplicity.
Which is valuable (no pun intended) considering async methods can't have out/ref parameters...
Its a good package, crio
I can confirm. Learning Haskell made me a much better Java programmer.
It looks okay. Dapper supports multiple result sets already this doesn't look like it adds much, but if this helps even a single person convince using Dapper instead of an ORM (or to use it less) it's worth it. 
hmm v weird, so I'm trying to do it by just using the bundle way ( I also realized that I didn't even have a section for scripts at the bottom of my view page such as @section Scripts { @Scripts.Render("~/bundles/jquery") } so I added that in and took out the manual reference and the datepicker or the popover now no longer work. I tried changing the {version} and putting the specific version I had in scripts directory and it still doesn't work.. I'm not really sure what the problem might be.
Also, you can do something like Where(condition).Select(transform).Take(5) Then the lazily evaluation of linq will stop once it has found 5 items that meet the condition
I thought it might be something like that. Thanks.
My solution: - Change the workflow Engine for a WorkFlowService. A simple mvc service handling queries from any of your webs or apps. It should be a plain controller calling a workflow layer. No need of any Sql notifications and your webapps would connect directly to the service. All asynchronus and without the need of any instantiation. Accesible for all your apps without any type of .dll distributions.
If i understood correctly, you should have a method like this: public void printItem(string itemName){ Console.WriteLine("you have " + itemName); } which you can call to print the items you want. Lets imagin you have an apple and a orange, you could do this printItem("apple"); printItem("orange"); But I would advise you to check some c# introduction videos on youtube, if words like "method" sound new to you. It doesnt seem like you're ready to start programming without that basic knowledge (not trying to sound like an asshole, just an honest advise :) ) 
Yeah pretty much. It's a pretty good philosophy. If it works elsewhere, adopt it.
+1 Knowing how to phrase what you want to do correctly is essentially all you need. Also keep your code once it works to refer back to.
Sean Barret has a great voxel game from scratch tutorial on youtube. search for open block game. he did it in C but you could still learn from it. If you proceed in C# i would suggest using the monogame framework or possibly opentk which is a thin lauer over opengl. both are pretty low level. 
I like this site it seems to interpret some of the more complex Json structures better than json2csharp.com [jsonutils.com](http://jsonutils.com)
YES! (My issue turned out that the request was malformed though....)
I agree. If your creating a small text based rpg you'll still need a reasonable knowledge of object orientated programming OOP. Although if your making an text based rpg it's one of the more fun ways to learn. Its how I learnt anyway.
also you might consider following along with the handmade hero video series on youtube. it is amaxing, i wish i had it around when i was 16.
u got a link? 
thanks
thanks a ton!
the jquery bundle seems to be including jqueryui so I'm as clueless as you.. When you're debugging the application, is the jquery UI stuff loaded?
You should first learn the basics of OOP and C# in general. Start thinking about abstract concepts that might make up your RPG, and then think how concrete objects relate to them. For example, you have a player. What is a player in the game? Perhaps it is a type of character. You'd then make a *class* with all of the attributes (such as health, strength, inventory, etc.) that a character could have. A player class would then be an extension of character, taking the abstract concept into a concrete one. Other characters might be NPCs and then enemies, themselves abstract but which objects can descend from (such as merchant or goblin). Among other reasons, this allows you to write certain sections of code once, which is shared among like-objects. A player's inventory would be handled the same way as any other character, with only one difference: when the player presses a certain key, the contents of its inventory would be displayed.
You need to declare input as a variable (of type string). You also need to declare output in a shared code block if you want to use it afterwards. And if you don't want that your console applications quits immediately after writing the output, you put a "ReadLine" or something like that after it.
I just checked and the view page that we've been working on already had the same line @Scripts.Render("~/bundles/jqueryval") also I stand corrected, if i were to comment out this line that we talked about before, manually referencing this way &lt;script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"&gt;&lt;/script&gt; the jquery doesnt work either
Something like this (and this is in no way the *best* way things could be done, but it is simple): public class Character { public string Name { get; set; } public int Health { get; set; } = 1; public int Mana { get; set; } = 0; public int Level { get; set; } = 1; public int Strength { get; set; } public int Intelligence { get; set; } public int Dexterity { get; set; } // An Item would be an abstract class of its own, from where say, Weapon or Artifact would descend from. List&lt;Item&gt; Inventory { get; } = new List&lt;Item&gt;(); public Character(string name, int health, int level, int strength = 1, int intelligence = 1, int dexterity = 1) { Name = name; Health = health; Level = level; Strength = strength; Intelligence = intelligence; Dexterity = dexterity; } public void CheckHealth() { if (Health &lt;= 0) { Kill(); } } protected virtual void Kill() { Console.WriteLine(Name + " has been killed!"; } protected virtual int Attack(Character target) { // Add some formula for attacking (say strength x weapon damage - Armor.Hardness). // Return a number indicating how much Health the target has lost. } } public class Player : Character { // You'd write some code so that this method is used // when a player presses a key (maybe I). public List&lt;Item&gt; PrintInventory() { foreach (Item item in Items) { Console.WriteLine("You have " + item.Name); // You could get smart in the above code and add logic changing this sentence, // like adding a/an, or a number if there are a number of items of the same kind, like potions. // Maybe even 'the', if the object is legendary or something. // You have the Sword of Grimjar. // Go crazy! } } // This overrides the Character Kill method // so that the Name of the player isn't used // when the name is used. public override void Kill() { Console.WriteLine("You have died!"); } }
Oh wow, looks amazing! With normal dapper the object+list thing requires so much boilerplate. And the embedded sql idea is great as well. Don't feel like using such an early version but I'll keep an eye on it. 
Thank you kind sir. I'm still getting the basics down! I'm trying to figure out which language I would like to concentrate on.
/r/learnprogramming might be a better place for questions like this
It's a terrible idea to initialize references to a dummy value, since then the compiler will let you use that dummy value instead of forcing you to actually initialize it. 
Go ahead and steal ideas and code, Dapper.Compose is MIT licensed. There are CRUD-like extensions for Dapper as well, like FastCRUD which probably do some of what you're after in Chain. I like Dapper overall, but I think it places too much focus on the connection and too little on queries; the latter is where most of your domain lives so it's more important. I think a micro ORM focused around a Query&lt;T&gt; abstraction instead of IDbConnection would be better overall, and I'm experimenting with something along those lines now.
If you sit in a loop awaiting the background worker to complete your GUI won't continue to be updated and you will see the same visual effect as UploadVideo().Run(...).Wait(); In order to both have the video be uploaded in the background and allow the GUI to continue to respond you need to NOT do any kind of spinwait in the GUI thread. Instead of firing off a background worker that uploads a single file. Fire off a background worker that iterates through a list of files uploading them and using the .wait() on that thread. 
You can make a struct with this property, if you're feeling kooky. struct Foo { int bar; public Foo(int b) { this.bar = b; } public override bool Equals(object obj) { Foo other = (Foo)obj; bool result = this.bar == other.bar; this = other; return result; } } 
Click on "Universal Windows Platform development" if u want to do that Click on ".Net desktop development" if u want to do that Click on "Desktop development with C++" if u want to do that Click on "ASP.Net and web development" if u want to do that It couldn't be easier
Hi, have you found a solution for this? I can't really use WPF because Microsoft only allows connections to low energy bluetooth devices in UPW...
Removed: Spam. As mentioned, please check and respect Reddit's general guidelines regarding self-promotion and make a concerted effort to interact with community outside of your own content.
Look into SecureString. Along with the following functions to get it to store in a secure manner: [Runtime.InteropServices.Marshal]::SecureStringToBSTR(); [Runtime.InteropServices.Marshal]::PtrToStringBSTR(); **EDIT:** Actually, for C# you may want to look into this implementation (guy posted his own MIT-Licensed SecureStringToStringMarshaler .NET class, and how to use it, 2nd post down): http://stackoverflow.com/questions/1800695/c-sharp-securestring-question
I would second this solution and say that you should at least learn the ternary pattern, even if you don't choose it for this situation. When I first started learning C#, ternary statements confused the heck out of me and I never used them. When I got into the job I'm in now, they were used all over the place and I had to learn quick. Now I love them, especially for quick things like null checking. If you don't understand what's going on, you read the comparison statement first, then the statement between the ? and the : then the statement between the : and the ; In this case, in pseudocode, it's saying this: Check to see if input equals the string "quit". If it does, store the string "Goodbye" into output. If not, store the string "You entered " + input + "." into output. I use these frequently for null checking. Say I have a menu that is either going to give me a Guid or a null if the user picks nothing. I could say something to the extent of: Guid selectionId = menu.SelectedValue == null ? Guid.Empty: menu.SelectedValue; This would ensure that my program never broke because of null user input. I do a bunch of work in legacy WinForms applications and null checking is critical.
I also use them for compact truth tables: var value = condition1 ? value1: condition2 ? value2: condition3 ? value3: defaultValue;
I'd go down the path of storing the credentials in the windows credential store, there's a library to help with using it (haven't used it before, there may be better libraries out there) - https://www.nuget.org/packages/CredentialManagement/ edit - i clearly didn't read properly, if this was a server side app this would be ok
[Project Euler](https://projecteuler.net/)
So pumped when they introduced right before I moved into a .NET role
This is interesting. While this isn't exactly what I had in mind, I can see the benefit and will probably use it. Thanks!
CodingGame is another good one. 
/r/dailyprogrammer
Heres a short list of sites I've found: * [Leet Code](https://leetcode.com/) * [HackerRank](https://www.hackerrank.com/) - My personal favorite * [Topcoder](https://www.topcoder.com/community/data-science/data-science-tutorials/) * [CodinGame](https://www.codingame.com/start) * /r/dailyprogrammer * [Code Hunt](https://www.codehunt.com/) * [exercism.io](http://exercism.io/) * [Project Euler](https://projecteuler.net/) * [Code Wars](http://www.codewars.com/?language=csharp) * [Code Eval](https://www.codeeval.com/) 
I spun up a Windows 7 VM just to run Visual Studio on my MacBook Pro. I don't use Parallels, the VM is running on a server at home. I just VPN to my home network and RDP in. Works like a charm. :)
Saving this post to check back on it tomorrow
I want c# what to chose , pls help i am noob
If you are new start with c#
Not sure if I got your request fully, but let's take the first step. Does this suit your needs? class Parent { private readonly IEnumerable&lt;Child&gt; children; public Parent(IEnumerable&lt;Child&gt; children) { this.children = children; } }
Poset usually means partially ordered set, but I never heard of "manual poset navigation".
Instantiating a property in 7 is short hand for creating a field and instantiating that, and then creating a property for accessing that field.
&gt; 1) Why do you name it Take and return and item (which is good), but u also remove that item. For me, "Take" would definitely imply removing. Otherwise it should be called "Peek" or something like that.
&gt; the release of roslyn, the fact that we have primary design architecture of the greatest IDE to ever exist What does that sentence mean? And what does Roslyn have to do with it?
Yeah, most people on reddit have a hard time understanding other views than their own ;)
And in C# 7 you can initialize it in-line as well. Of course all this is just sugar for a field and a property.
Roslyn being our language has an open source compiler and extensive set of analyzers and codegen utilities that other competing languages do not. Theyre also two separate points, I'd argue that the design architecture of visual studio, despite being extremely flexible, has lead it in a direction to be strongest with development in C#. I am very high on various things right now (and likely at the time of that post) so sorry if im not speaking totally correctly.
But you can make a readonly public field. Recently, you can also make a "readonly property" (which is just sugar for a readonly field and a normal property.)
Understood. Thank you!
Going through MAPI is faster than the Outlook object model
&gt; but if this helps even a single person convince using Dapper instead of an ORM (or to use it less) it's worth it. Why the hate, every single time someone brings up a microORM? Full ORMs and Micros have both their place. Hating one over the other is simply stupid: you limit yourself so you won't use the right tool for the job at hand. Don't be delusional that a microORM is a fit for every situation as they lack major features required to use entity instances in memory, OTOH, a full orm might be overkill in flat list fetches with non-change tracked data. See? trade-offs. Besides, using a micro for every situation will force you to write additional layers to overcome the lack of features of the micro (it's a micro after all!) with the risk of you writing effectively a full ORM without knowing it ;) :P 
&gt; I think a micro ORM focused around a Query&lt;T&gt; abstraction instead of IDbConnection would be better overall, and I'm experimenting with something along those lines now. Most MicroORMs for .NET do that: focus on the query model instead of a connection. Dapper is a wrapper around IDbConnection, it says so itself. Micros like Linq to DB, PetaPoco, Massive, ServiceStack ORMLite, NPoco... the list is long, all offer you a query system without most entity services provided by full ORMs, so non-change tracked fetches and persistence built with a query system either using SQL directly or using a query API. 
"Universal Windows Platform development" ".Net desktop development" "ASP.Net and web development" will all include C#
Shit.
You could give each Parent a List&lt;Child&gt; and simply add to it?
&gt; Most MicroORMs for .NET do that: focus on the query model instead of a connection. Dapper is a wrapper around IDbConnection, it says so itself. Considering I specifically mentioned Dapper in my comment, clearly my focus on queries is very different than Dapper's focus on queries. None of the MicroORMs you mention focus on queries at all (linq2db being the only possible exception), they all focus on connections as the primary abstraction which gets extended with more operations. Queries are second-class citizens, in that there's no simple or safe way to take two working queries and compose them into a larger working query. Yes they provide "query APIs", even query builders, but queries are still second-class values reified as untyped typed strings embedded in your code. Notice the huge difference between the querying safety and composition you can achieve in linq2db vs. Dapper. Dapper.Compose pushes Dapper one step closer to linq2db without introducing any overhead.
Its a site for mathematicians with some programming ability. Not the other way around. I've solved like 20 tops. best you can do is look up the problem and figure out the technique without looking at the answer. At least you'll learn something
Maybe it is possible for you to let the parent create the child given some parameters. Parent parent = new Parent(); parent.AddChild(42, true, "another parameter"); parent.AddChild(1337, true, "other child");
If you want to replicate some of the behavior of a standard library class, you can read the reference source. For example: https://referencesource.microsoft.com/#System.Data/System/Data/DataRow.cs You can see from this that as mentioned elsewhere, DataRow holds a reference to it's parent. Then in the DataTable addRow, there is a check to make sure that the row doesn't have a different parent.
I really like these writeups, they're good quality; thanks!
Try it and check back with me. The minute they pass-by-reference you have an issue. The moment they try to do bit shifting... you have an issue. If they serialize the object you often will have issues. Bottom line: You lose control over HOW that data is used which is one of the main points of a class in the first place - a.k.a. data hiding.
I'm telling you that this simply doesn't exist. It's not logically possible to have credentials that magically work in your application but nowhere else.
Could have cleared the air a lot sooner if you would have said that the first time. 
You need to ToList inside of the using block. You can't pass a handle to the context/db around like that. ALL Database access needs to happen inside the using block. When you return you exit the using block. This is why we separate concerns, so we don't end up with these sorts of issues, and it allows the code to stay separated properly. You need to handle this architecture issue now, because it will cause issues in a real scenario with the undisposed context.
But the title is futures not future.
Let's just chalk up another one for "naming is hard" and English sucks.
I believe that RemoveAt will decrement the count of items in the collection. So when you try to Insert, you are trying to insert past the end of the collection (index and index - 1 are higher than the highest index remaining in the collection). You probably need special-case code for the last entry where you use Add instead of Insert.
Let's say I have these pages: Children[0]=Push, Children[1]=Curl, Children[2]=Jump, Children[3]=CarouselPage I want to move Jump 'up' the list (so, down in index). I'll have: index=2 RemoveAt(2) RemoveAt(1) Children is now Children[0]=Push, Children[1]=CarouselPage and now I insert at index-1, which is 1 Insert(1, jump) Insert(2, curl) It isn't out of bounds, unless I'm missing something?
Performance degradation and easy introduction of bugs. Aso basically unpredictable behavior.
As I understand it, yes for structs, no for objects. 
Web developer, and Cloud developer are very very similar I would say just learning Web development HTML, CSS, JS (front-end) and ASP.NET will get you employable to the largest amount of jobs in the C# ecosystem with the least study. It's very important that you learn the fundamentals of C#, before you try to get into ASP.NET though. I don't want to sound like a dick - but trying to get into Game dev is not a good idea unless it's something you REALLY want, there's so many young people out there who have dreamed to be a game developer that you are competing against that will take less pay, less vacation, etc., to just get into game development. Personally I wouldn't look into SDET unless you plan to learn C# just well enough to get into a test position, and move out ASAP - many of my friends are SDET, and it's very hard to get out of test once you're in it for a couple years. I know it sounds like a ton of work - and to be honest it is a ton of work to learn Javascript, HTML, CSS, C#, ASP.NET but once you get the fundamentals of programming out of the way, and the "mindset" of a programmer picking up new things (languages) and changing "specializations" becomes a lot more trivial. 
Yep gaming is its own thing, you either do only that or everything else in your career.
C# uses Unicode by default. When you create the text file, you will need to tell it to use ASCII encoding instead. I'm not sure what the syntax for that is, but if you google "C# ASCII encoding" you should be able to find out how to do it.
That's just he thing there is no error. According to the docs i can call the name space with a using statement, but VS doesn't find it. It's like I never loaded the web service.
The formatting of your post is hard to follow. I assume you're talking about text encoding. How you specify the encoding you want depends on what method you're using to write the file, most take an [`Encoding`](https://msdn.microsoft.com/en-us/library/system.text.encoding%28v=vs.90%29.aspx) via a parameter or property. Not sure what encoding VB6 uses by default, probably the local code page.
It can't be ASCII because 0x92 is outside the 7-bit ASCII range. It's probably windows-1252.
Not a huge fan of `in` as the keyword (`const ref` seems like a better fit idiomatically) but otherwise yes please.
So, it's like C++'s `const`? It certainly looks interesting, but wouldn't this require revisiting the entire .NET Framework to mark methods or properties as `const` where necessary? Given that they're considering radically altering interfaces just to add functionality to existing classes without modifying them directly for "compatibility purposes", I don't see how `const` would be implemented on existing Framework classes without some dirty hacky workaround.
True, but it is a necessary stepping stone.
Oh the gaming world. Sad to say but most dev jobs out there are mundane corporate projects, like intranet sites or internal audit tracking systems. I would focus on App development personally, there are a hundred times more jobs out there for app development than game development
I wouldn't expect possible future timelines to be the first thought when a programmer encounters the word.
Because most programmers don't speak English? It's not like the title is using an esoteric definition of the word. Nor is "future" a class name or keyword in C#.
I think you missed my point. What I found interesting is that a bunch of 'dangerous to newbies' things is missing from Java but are in .Net.
&gt;Not a huge fan of in as the keyword (const ref seems like a better fit idiomatically) but otherwise yes please. permalinkembedsavereportgive goldreply This x1000. 
Can't really give you advice one way or the other the other, but you might want to check out /r/cscareerquestions too. Regardless, grats on the two job offers. Good luck!
I worked at home for 8 years and I'm now back to working in an office. I'm massively depressed by working in an office and I would kill to have my old job back. Mind you I'm an old fart, not just starting out. A new guy would probably benefit more from working in an office and making personal connections.
Oh, I see your point. Still, I hold that some of those features are essential.
Visual Studio Code is lightweight and amazing.
Is there some serious proposal out there about sum types? At first glance the results are just issues that somebody opened because he wished there were sum types and not a serious proposal.
And not an IDE.
That's good to hear. I hate wasteful DI Framework setups that needlessly creature new instances.
&gt; Dapper.Compose pushes Dapper one step closer to linq2db without introducing any overhead. btw if you decide to evolve this idea, take a look how I've implemented abstract queries in my Dapper-like library [NReco.Data](https://github.com/nreco/data). In short, it introduces database-independent Query structure that can be easily composed dynamically (in run-time). Unlike LINQ, it doesn't try to be a wrapper for SQL: it doesn't provide JOINs, GROUP BY etc. Instead of that, library introduces concept of application-level dataviews. All complex SQL queries are concentrated in the sample place and accessed by business logic as read-only DB tables. 
My ReSharper subscription is up in May and after many years of buying (then subscribing) to JetBrains software I think I am finally going to let it lapse. I have gotten tremendous use out of ReSharper over the years but at this point, I'd say VS (and a few lightweight, free extensions) have caught up in features without the massive performance hit. I was hoping it would be better in 2017, but it's not. So my two cents- unless there is some killer feature you cannot get elsewhere skip it. As for Rider, it's worth a look if you are not on Windows. If you are on Windows, VS is the correct answer to the IDE question.
Exactly. It's a common misconception that ASCII = whatever non-unicode encoding your system currently uses :p.
I would remove that try catch since it much easier to just TryParse it and make it more cleaner and unnestled
Removed: Rule 4. Please describe what particular aspect of the assignment you desire guidance on, why you're having issues with it, and only include the relevant parts of the source code.
I have Head First C#: A Learner's Guide to Real-World Programming with C#, XAML, and .NET https://www.amazon.com/dp/1449343503/ref=cm_sw_r_cp_apa_mYj-ybB13MG8A and also orderd The C# Player's Guide (3rd Edition) https://www.amazon.com/dp/0985580135/ref=cm_sw_r_cp_apa_MTj-ybN7NTF1H second edition has nothing but great reviews. Also you can skim through a few chapters and I like how it's structured with chapters that are only projects for you to do that they taught you basics in the previous chapter. I plan on doing that book first since it's more up to date and modern . Then tackle head first c#, because it's a little older so I'll know my way around and it also starts you off with the GUI too and a few little things the other book doesn't go over .
I had issues too I had to make sure I enabled some windows 8.1 stuff I believe with plugins. I think I kept runing into more issues and just installed 2013 or w.e resolved most problems .
R# has a trial, so why don't you just try it out? No-one but you knows what you're looking for nor need. 
Well, when compared to what seems to be a growing trend of young talent hell bent on becoming the next big game designer. Corporate projects by comparison seem rather pedestrian. Although in my opinion having to work within the tight design goals of management,stakeholders,and end users, corporate projects can be the most demanding. But like I said it's just my opinion :)
I am sure that the JetBrains IDE is super. But Community is free so why would I drop money when I have a perfectly fine IDE in VS. Not to mention that VS is probably one of the most used IDE in the market which means lots and lots of help, tips, advise is out there. ;)
&gt; const ref seems like a better fit idiomatically `in` as opposed to `out`? I think it fits just fine.
And the local code page is `Encoding.Default`.
It's funny because FactorialExpectBot's username is very applicable to their comment. ^^*beep* ^^*bop* ^^if ^^you ^^hate ^^me, ^^reply ^^with ^^"stop". ^^If ^^you ^^just ^^got ^^smart, ^^reply ^^with ^^"start".
'current' is a hidden input, so it has no 'selected' attribute. Also, you need to used the # in your selector to select the 'select' by ID. I think you omitted it accidentally. Have you tried just setting the value of $("#ManuID") like so: $("#ManuID").val($(current).val());
Sure? What features is exactly missing to call it an IDE? It's a text editor, sure, but on steroids, so much steroids. I use it as an IDE, not missing a single feature from VS or MonoDevelop.