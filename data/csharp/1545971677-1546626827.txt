I'm not sure exactly what you are asking, but I would recommend using IdentityServer4. Integrates nicely with the built in ASP Identity and EntityFramework. Also handles all of your JWT generation and decoding too
that was my original thought to be honest, i was hoping to link it to a local spreadsheet and work off that to store it but i didn't know where to start and everyone i spoke to just pointed me in the direction of SQL. yeah there is no deadline for this and if it works then let him run it in his garage!
Just make it a Singleton and get a reference to it using a static method on that class. Alternatively make it a single instance dependency injected object. Same concept. 
I'm a newbie with [.](https://asp.net)net, and I saw some tutorials use Identity to generate entities to help us authentication and authorize, so faster than create by hand. And I think I can do it with [asp.net](https://asp.net) core web API and use JWT to validate users. I don't know my thought is right or wrong :(
I'm a newbie with [.net](https://asp.net), and I saw some tutorials use Identity to generate entities to help us authentication and authorize, so faster than create by hand. And I think I can do it with [asp.net](https://asp.net) core web API and use JWT to validate users. I don't know my thought is right or wrong :(
Have a look into the reactive extensions. I'd use a publisher service that contains all the shared references, and subscribe to notifications off of that. This will help with decoupling producers from consumers, multiple dispatch, and a cleaner architecture. A corollary benefit is that if you ever need to break up your hosting model (for instance, to use a message bus), your basic problem becomes listener identification and message serialization. You can send all of this through a broker service, which manages consumer subscriptions. But otherwise, your app code can remain largely intact. 
The answer is yes, you can use identities created in aad for authorization and authentication. JWT is how aad passes around the credentials. Asp.net core supports all if this.
You might wanna check out the plugin for Unity [here](https://developers.google.com/analytics/devguides/collection/unity/v4/devguide) 
[Bob Tabor's course got me started.](https://mva.microsoft.com/en-us/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949)
JWT is json web token
Identity is a nuget package you can just add it... For the implementations (or at least an example of thinks like create account etc) I recommend creating an MVC with individual accounts asp.net core 2.0... copy whatever you need from their controller wise to your webapi. You will need to modify it to use JWT there are plenty of tutorials out there on it. The reason why I say 2.0 is Microsoft retardedly moved this code into razor class libraries and you have to generate them back out JUST TO VIEW it on later versions. (You don't in 2.0). I hope someone from MS sees this as your problem is endemic of obfuscating such code into a class library written in razor.... In the past people would use it as a starting point for customising .. 
Thank you so much
The cross platform tools I know of don't use C#, although I wouldn't say there are any truly great options at this point there are some: * React Native, mostly used for iOS &amp; Android but can be used on any platform and Microsoft maintains a kind of plugin for adding Windows to a React Native project. Most of the code is written in JavaScript. * Flutter, just hit 1.0 as a mobile framework, desktop isn't officially supported but from what I understand it already runs it's just lacking features and commitment. You write code in Dart. * Qt is a well established option that can be used for any platform using C++. I really don't know much about it. * Web-based technologies like Electron which run like webpages in an app. So it uses HTML/CSS/JS. I'd investigate these options to see what way you want to go. For the record, I'd never heard of Uno so I can't really make any statements on it one way or the other.
You can try Avalonia UI. It's great for multiplatform desktop applications (windows, linux, mac). You can also deploy for ios/android, but haven't tried those.
I'll recommend you a SQL based DB, like SQLite. The reason is simple: when you will need first simple query - it will be super-simple to be done as SQL, but otherwise you will need to make (and slow - on client-side, with &lt;your-language&gt; collections/containers) all joins/filtering/etc. The next query - more boilerplate code. The next - again. SQL solves all this problems easy. You can add ORM or to avoid it - but without SQL, it will be a hell. For example, key-value files (Tokyo-cabinet, Kyoto-caninet, cdb, etc) - it's very difficult to manage them. Even your simple DB will be bad for them. SQLite is absolutely fine for your case. And it's not only simple and super light but can handle very huge databases, if you will need. But if you need some sharing of the data, then you should to think about Cloud solutions or about some synchronization.
Ahh ok, so [something like this](https://github.com/sirkris/Reddit.NET/commit/a4235318e1bce4099e36858e0829ca35ae8c7b27) then? Thanks!
It is hard to say for sure without some more detailed examples, however one thing that comes to mind is to break up your World object using interfaces for some of the shared information, and pass it as the instance of those interfaces. For example, if your World object had information about what zones were loaded into memory, you could define an interface which allows querying for this information, and take that as a dependency instead of a dependency on World. World could implement this interface (and others too, depending on what other classes are using the reference to World for. This process should help you investigate what it is that World is doing, and then you can determine if World should be broken up and/or redefined instead as a coordination layer between these distinct pieces of functionality. This would then give you an easier time unit testing anything that currently references World. On another note, I got the impression that you seem to have bidirectional references between World and some of the classes which consume it. Can you confirm if that is the case? If so, that seems likely to cause issues so I'd be curious to see some actual examples to see if there is a better way to handle that because circular references are just maddening to work with! 
When I try that, I get a whole bunch of build errors. There's just two of them but they appear all over the place: &gt; Error CS0656 Missing compiler required member 'Microsoft.CSharp.RuntimeBinder.Binder.Convert' Reddit.NET C:\dev\repos\Reddit.NET\src\Reddit.NET\Controllers\Account.cs This one occurs anywhere I make reference to the Validate function that accepts a dynamic input (and possibly elsewhere; I only checked a handful so far). &gt; Error CS0656 Missing compiler required member 'Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create' Reddit.NET C:\dev\repos\Reddit.NET\src\Reddit.NET\Controllers\User.cs I'm still not sure what that one's all about. Any suggestions?
yeah, I know that
That question has been answered a hundred times already. Doing a quick search in the subreddit should give you plenty of resources and links. Good luck!
or: var newString = answerArray.Aggregate( string.Empty, (a, c) =&gt; a + c, a =&gt; a.ToString());
I’m making a cross platform chat application. I needed some low level access to sockets to build my custom negotiation and encryption and had to ask for help from devs on how to use the sockets from the browser using wasm. In the end one of the devs spent a few hours with me tracking down bugs and even implemented some features which I requested in the same evening. 
I was just looking at flutter and got really impressed by, but it's not csharp tho.
Well, the good point for you at the moment is that you can go pretty much any direction you want. For example, you could start with the database. Make a database class which handles the loading, saving and processing of the database. From the outside of the class, you'll have these functions to load, save, find, add, etc. and on the inside you can pretty much use whatever you want. And if you respect this agnosticism of the way you implement the class, you can always switch from one implementation to another without affecting any other part of the code. If you're stuck and don't know how to start, just start small. Learn to work with files, streams, loading, saving. Make something that works even if it's local Another thing that you'll need to work on is to differentiate between the clients and the server where you'll store the information. Make sure each one of them has their roles defined. After, choose a way to communicate (HTTP requests - a bit too complicated for your case but there's tones of examples, TCP communication - probably the best choice here, UDP - the simplest thing to implement but not that secure and reliable). Learn how they work. Again, learn how to use streams if you haven't, find some examples online and really try to code them. Once you have both the database handler (with whatever implementation inside, that doesn't matter to the rest of the app), a server which has that handler and works with that handler, and you chose a communication channel, you can start implementing the client. I'd go this way because working on GUIs is a slow and repetitive work, not complicated but it can take a lot of time to just get the colors/animations/fonts/etc. right. Implement the communication handling on the client side as well, make sure the server and client can talk, and then go to town on the GUI. Probably at this point you can use UNO or any other cross-platform framework you've heard of in this thread. Another great thing is that you're not restricted to C# for this. For example you can make the code in C# if you like C# and find it easy, but then switch to another language and library or framework for the client and as long as the communication protocol that you chose is not something very custom made, it'll work. It's not an easy application to start to learn, but it can be really fun and trust me, when you get a part working, it'll get you hyped real good. It's an amazing experience to see your project come to life, piece by piece and when you tie all the puzzle pieces you've been working on together to form the final picture you'll really see what a pleasure it is to work with OOP languages like C#.
Yeah SQLite should work really good in his case, as well as it being simple to use. But for sharing data, I'd suggest more a simple model of client - server, with the server holding the database and responding to queries from the client through some HTTP/TCP/UDP messages. Even if he wants to protect them, he can encrypt them and send them encrypted and to be decrypted client side, but I don't think using and especially buying a cloud solution will work best for his application. Especially since I don't see it as in he'll be making much revenue with it and paying for a cloud solution and handling it might be too much, especially at the moment.
Yeah, I've read of Avalonia as well. I've never worked with it but I've heard a lot of positive things about it.
It depends on your previous experience. If you are new to programming then I would recommend to start reading books which explains some basic principles of programming and C#. In case you have some programming experience then tutorials and video lessons might be better suitable.
Have fun 😁
So ignore my other answer (but I'll leave it be there). I created a small test project and checked it out. Turns out: The `IHost` interface has several methods to start the hosted services. - `StartAsync()`: This will start the hosted services. The `Task` returned will be finished when all hosted services are started (each `Task` returned by `StartAsync()` completed). - `StopAsync()`: This will stop the hosted services. The `Task` returned will be finished when all hosted services are stopped (each `Task` returned by `StopAsync()` completed). Don't forget to `Dispose()` your host if you don't need it anymore. - `WaitForShutdownAsync()`: This method will return a `Task` that is completed when a shutdown is requested. This means either ctrl+c in the console, or a regular shutdown in Docker (SIGTERM signal). Both will be recognized. This will **not** stop your hosted services! It's only a `Task` that is completed when a shutdown is requested. You still need to call `StopAsync()` on the `IHost` yourself. - `RunAsync()`: This is basically a combination of the three methods above. It will start your hosted services, wait for a shutdown request, and then stop your hosted services. Then the returned `Task` is completed. It's the same as if you'd write: `await host.StartAsync(); await host.WaitForShutdownAsync(); await host.StopAsync();` So in order to fix your initial issue: Just call `RunAsync()` instead of `StartAsync()`. Only use `StartAsync()` if you still need to run code yourself after all services have started, and remember that you need to deal with the stopping yourself.
Oh, I didn't see your edit before. I checked it out myself as well and documented it in another reply. :-) https://www.reddit.com/r/csharp/comments/aa21bg/how_do_you_stop_a_hosted_service_in_linux/ecpz8yj/
I was replying to azuredudes comment
Thanks for the reply. I tried this method, but sadly it works just like Cursor.Hide(), as in that it only shows the transparent cursor when the mouse is hovering a form. When you use a transparent fullscreen form, i can't get it to make clicks go through and still be a transparent cursor. 
It seems that this only works with visual studio 2010 sadly.
God classes are complicated and do a lot of work. It sounds like your world class is simple but widely used. I wouldn't call it a God class. Maybe a god dependency? :p 
Yellow book by Rob Miles. Quick Google search and it's yours for free. He goes through all basics, some more advanced stuff, but most importantly he speaks like a human. Think ELI5. Happy programming. 😊
Google driven development is a skill. Especially at the beginning, someone out there has probably already solved your problem. Hopefully, it's not one of those with an answer of "Figured out what I was doing wrong and fixed it" and no further explanation. 
Really neat. Thank you.
Yes it is. You can find more info on the official website.
I was trying to figure out if the OP meant java web tokens or some other technology that I was unaware of. 
Yes, you can use identity (I assume AAD OAuth2 but any provider will do) that uses jwt for security purposes in your application. I have done exactly this myself. If you’re hosting on Azure, it’s simple to enable auth on the site in the portal. This will provide the automatic login (if desired) that gives you the auth token as well as the other information required to authorize the user.
Lanús?
Obviuosly :D
Nice one.
Very cool, does it handle remote WMI as well?
Yes it does.
Awesome, I'm working on a project right now that uses remote WMI and am really struggling with the BCL libraries... I'll give it a look :)
This is a fantastic library. You should be proud of your work! I can see myself using this quite a bit.
The qualifier, `abstract`, isn't necessarily a solution to your problem. Yes you could use it to implement your code or you can do it another way. Without actually reading your source there's not a whole lot of advice we can give you.
DestroyAllSoftware, Pluralsight, and the Microsoft Virtual Academy.
Yes... as long as you can connect to the remote pc it will be seamless:D
I had actually set that up fully and then realized later it only works for ios and android. I'm running my interactive as an exe which is why I had to switch to universal tracking :/
I am starting from scratch... there is really NOTHING at this point, just some thoughts I am putting on paper. The main problem is, I have never worked with a professional team so everything I learn is either from reading or on my own. (or, from you awesome folk here) Here is what I am looking to do. base class Presentation Child classes are. AsposePdfPresentation, MsPowerPointPresentation, AsposeSlidesPresentation, MsWordPresentation AsposeWordsPresentation (aspose has a 2GB limit, however MsPowerPoint/Word interops and Word does not accept a Stream object BUT will open a file over 2GB so they get used under certain circumstances. Presentation has a collection of "Slides" which is either a page (pdf/word) or a Slide (powerpoint) These slides need to be exported as a Bitmap object. The Bitmaps need the ability to be resized, flipped, border added, etc. Bitmap objects get streamed to cloud storage(after converted to a Stream object) Then a database is updated with the cloud container info, and version of the image (.PNG/jpg files) I suck at design patterns. I really wish I worked with a team of seasoned professionals that could smack the crap out of me and make me do it right...
I use WMI in my method that finds all of my computer's drives, useful when (for example) I want to empty the Recycle Bin on each one. I use it to get a list of running services, which I use when I want to start or stop a range of services, e.g. all SQL Server services. That's all I've done with WMI -- not much. I spent some time looking at [this list of WMI tasks](https://docs.microsoft.com/en-us/windows/desktop/wmisdk/wmi-tasks-for-scripts-and-applications) and wasn't that inspired. What are some cool things you can do with WMI?
Nice! I’m going to give this library a go for some tooling at work.
The general principle is to choose **composition over inheritance.** This means that, generally, classes should be composed of (read: contain) *components* that encapsulate their own data amd behaviors. Composition enables "thin" classes that truly follow the *spirit* of the **Single-Responsibility** principle. It also enables the ability to change the behavior of the class without changing/modifying the *implementation* of the class, thus following the *spirit* of the **Open-Closed** principle. There are many more benefits but I'll stop here on that subject, though it would behoove you to google things like the **S.O.L.I.D** programming principles as well as typing "composition over inheritance C#" in the google search bar exactly like that. Abstract **interfaces** can be used to solve a lot of problems. One such problem these solve is that classes can only inherit from a single type *but they can implement any number of interfaces*. This is a very important advantage. Interfaces allow for implementations to change, even entirely new classes, without having to change existing classes that consume types that implement that interface. So, what does all this mean to you and your problem you described? Consider using interfaces *before* using class inheritance if you want types to have the same **programming interface** (i.e API). Write classes such that they depend on the narrowest possible definition. In your case, create an `IPowerPointSlideFormatter` interface that requires implementers to contain a certain method or methods that are supposed to receive, as a parameter, some sort of abstraction representing a powerpoint slide and *return* some sort of abstraction representing the *formatted* powerpoint slide. There is nothing wrong with both of the aforementioned powerpoint abstractions being the exact same type. Hope this helps and doesn't serve to confuse you.
Off the top of my head (without really sketching things out), I would follow more of an interface pattern and make your specific classes implement it, such as: public IPresentation { void AddSlide(ISlidePage slide); void AddSlides(params ISlidePage[] slides); Bitmap ExportSlides(); } public ISlidePage { void AddModifier(ISlideModifier modifier); void AddModifiers(params ISlideModifier[] modifiers); void ApplyModifiers(); Bitmap ExportSlide(); } public ISlideModifier { void Modify(ISlidePage slideReference); } 
My previous code I had used IDocument, which was the following. https://pastebin.com/BTQ3uXdG This i prior to me adding support for MS office interops. (which obviously would not use Aspose classes... The problem is now I have to break things moving into an anti-pattern. The methods in this interface are what I need to do in a GOOD pattern. I have read tons on SOLID, however the "invoice" and "Employee" example do not go deep enough for me into real-world examples. I will however search for exactly what you said (that is a new one for me) 
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/addition-operator https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/if-else or if you want to get fancy https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/remainder-operator
That's an awesome start. The thing that's confused me with WMI is those pesky DTOs. Would you start a package that bundles up the various WMI objects?
You say a library that represent a class abstraction?. I would say no. Mainly because querying WMI is costly. It is not the same to execute "SELECT * FROM Win32_Printer", that executing "SELECT DeviceID, Name FROM Win32_Printer" for example. ORMi solves that by only querying the properties that are set on the class. You only have to query for the properties you need. Everything else will only work for making queries slower.
I don't quite get what you're aiming at?
That's okay.
Either create a WPF theme that matches that or use the UWP menu control. The UWP XAML hosting APIs aren't production ready, though.
Just wanted to say thanks, this has really streamlined some remote WMI functions in my application!
Ok then, I'll play. As far as I can see, there is no way to implement an if-test, use an addition-operator or a remainder-operator to circumvent the need for a while loop, in order to continuously receive and store the bytes received from the serial port.
Ok then, I'll play. As far as I can see, there is no way to implement an if-test, use an addition-operator or a remainder-operator to circumvent the need for a while loop, in order to continuously receive and store the bytes received from the serial port.
Someone earlier was asking about book recommendations. [Here's my answer](https://www.reddit.com/r/csharp/comments/a8kn08/book_recommendation_for_c_and_net_cs_course/eccf8zf/). 
Well.. based on your maintenance approach there is a good tool that generates a bunch of WMI classess with useful information. [OpenHardwareMonitor](https://openhardwaremonitor.org/) expose information about temperatures, CPU usage, disk RPM an so on depending on your computer hardware. You can track thos values to know for example if your computers or servers are being overheated for example. Check it out.
Assuming you ensure that all types you mark with the attribute are actually safe, yes. Whitelisting of types known to be safe (with attributes or otherwise) is the only real defense for deserializing untrusted data containing arbitrary types (unless serialization is only performed by trusted machines where you can use cryptographic signatures).
This is excellent looks very well implemented also, will look to use this in the future definitely ! 
I almost came here to argue with you. I use Bing, and the first result there was from stack overflow, I think it was talking about GUI development, but it wasn't helpful in the slightest. I found the page you were talking about after googling it and it was almost exactly what I was looking for. Thanks for your help!
Honestly I've spent so long working on this I feel like I must have tried that already. I haven't though, obviously, as that's working. Thanks!
I've no idea what LINQ is at the moment, but I'm sure I'll get there. I can't believe it's as easy as creating a new string... It's so frustrating, and I'm annoyed I never even thought to try that to test if it would work. Thanks for your help, I'm going with the foreach loop method as I want to change the characters in the array at some point, but it's interesting to see different approaches. Also I'm 100% sure I'm using the wrong one for my case too! But I'm (mainly) having fun working my way through things just now.
Exactly. I am going through a Udemy course which is good, but I feel like it's rushing through the topics, so I'm just trying to set myself challenges that I feel I should be able to do with what I've learned before I move on. I feel like Hangman is maybe a bit too advanced for my level, as I'm relying on my googling skills more than I have with other games I've made, but I'd rather finish my game than give up now.
humblebundle has been around for a while, mainly for video games. like 5 years or more
Example of data received here https://docs.microsoft.com/en-us/dotnet/api/system.io.ports.serialport.datareceived?view=netframework-4.7.2#examples Instead of using a method for the handler if you use a lambda you can pass local variables in. Here is a lamda delegate example https://docs.microsoft.com/en-us/dotnet/standard/delegates-lambdas (last example) Basically you would track an index outside the delegate. Run a for loop using the BytesToRead property. Call ReadByte and assign the byte to the index. Increment the index each byte read and if the index is greater than the size of your buffer, reset it to zero.
I feel like people (usually young) that only use Google searches to get results and mainstream social media, forget about forum cultures stickies/sidebars and search features... even though reddit's search sucks.
Right !!! 
Thank you ! 
I wholly recommend C# player's guide.
Hello, I dont have my PC around so I can't play around with it. But the best thing I found for resizing is to make the application in the WPF instead of a windows form. Good luck 
Would it matter if it was?
I'd recommend looking up LINQ once you feel comfortable with loops and collections. The loop is actually the simplest and most flexible. The others are, under the metaphorical hoods, all just using loops to perform common variations on the same sort of thing. That is, string.Join probably looks a lot like public static string Join(string separator, string[] items) { if (items.Length == 0) { return string.Empty; } if (items.Length == 1) { return items[0]; } var result = new System.Text.StringBuilder(items[0]); foreach (var i = 1; i &lt; items.Length; i++) { result.Append(separator); result.Append(items[i]); } return result.ToString(); } and Aggregate() looks a *little* like public static string Aggregate( string[] source, StringBuilder seed, Func&lt;StringBuilder, string, StringBuilder&gt; aggregator, Func&lt;StringBuilder, string&gt; resultSelector ) { foreach (var s in source) { seed = aggregator(seed, s); } return resultSelector(seed); } (A 'little' because it's a generic extension method, but those are more advanced topics.) The string constructor ... is probably a bit more complicated, for doing some deeper magic with unmanaged code, but it's going to be using a loop to copy the contents of the array that you pass in to a new one that the string wraps.
If this solved your issue, then it would be very nice of you to mention it.
Specifically, think of the "is-a" relationship before you do inheritance. If I had a `List&lt;BaseClass&gt;`, could I safely use every item in that list without knowing what child class they actually were? If not, inheritance is the wrong choice. (The Substitution principle in SOLID) The alternative to inheritance, composition, is the "has-a" relationship. *Is* the presentation a WordPresentation and not a PdfPresentation, or does it *have* Slides that may be Word, PDF, Bitmap, etc.? In fact, you don't even need to get that fancy with interfaces/inheritance for slides. You could just have public class Presentation { private WordFormatter wordFormatter = new WordFormatter(); private PdfFormatter pdfFormatter = new PdfFormatter(); ... public Bitmap RenderSlide(Slide slide) { switch (slide.SlideType) { case SlideType.Word: return wordFormatter.RenderSlide(this.currentPageNumber, slide); case SlideType.Pdf: return pdfFormatter.RenderSlide(someOtherParameter, anotherParameter, slide); ... } i.e. if the formatters all have different arguments or usages that you can't sanely represent as a unified interface, there's nothing wrong with using a switch statement. Sometimes, another layer of abstraction is *not* the right answer. Especially if these formatters are only going to be used in one place, not as a general purpose class.
Thanks everyone for your comments. I am going with the Interface pattern. this is how I had already set it up. just going to really clean up the code. &amp;#x200B; I use a library called Aspose.Slides and I do not want to expose any of the Aspose API's, I want my classes and interface only to use this library. If Another developer were to take over this project down the road I want to encapsulate any 3rd party libraries (I assume this is the proper way to do this...) &amp;#x200B;
If I only knew about this two months ago. Went nearly insane trying to replicate the summary page of the Windows system information dialog. Good work btw.
Thanks!
PDFSharp
has anyone tried running WPF/winforms apps on linux or system 10 .x using the sdk yet?
Facebook memes
For the actual printing, I've used PdfiumViewer with success. It actually goes through the printer's drivers that are installed on the machine rather than attempting to do a Raw Print which many printers do not support.
For the actual printing, I've used PdfiumViewer with success. It actually goes through the printer's drivers that are installed on the machine rather than attempting to do a Raw Print which many printers do not support. 
Offtopic... ´ != ' You're writing code. You ought to know the difference. Just saying...
*TL;DR* Upgrade to StackExchange.Redis 2.0
my question was a total mess i will try to rephrase it here i mean if my self defined function return 0; and it didn't work it won't return 0 ; it will return 1; otherwise
In your case, are you asking about exit codes for your application? If so, you can do this if you set the return type for the Main function to an `int` or use Environment.Exit(returnCode). See [this stackoverflow](https://stackoverflow.com/questions/155610/how-do-i-specify-the-exit-code-of-a-console-application-in-net) for more information.
i hope i get what you are saying, it's really hard to understand what you wrote there. first of all....that is no c there. that actually is no programming language i would know. your second code is completely gibberish. second: you don't need c to learn c#, actually, you should learn c# on it's own, c is nowhere near c#, the only thing in common is it's syntax. i think c# doesn't even has a compatibility for c (like c++ does) third: i think you wanna know if you can return 0 if the "function works". it seems like you don't understand returns (yet). you give every function a type (like int or char) and return that type at the end of an function. this is used to a) check if your function executed properly (most of the times zero if it executed like it should, any other value if there was an error. often, specific errors get specific numbers, so that the dev knows what's up) b) get a specific value (for example a function "greater(int a, int b)" could return an int that is the highes value, if you give it 10 and 15 it would return 15) and you always have to return something (and by something, i mean a value that fits the type of the function) however, if there's no reason for you to return anything, just set the function to a void function (instead of int function() you write void function() ). this says that your function has no type and therefore you don't need to return anything (you can still instantly leave the function with a short "return;" statement, like any other function) the only function that should be int is the main function. this isn't necessary any more, but it's common and good practice. for main, the reason you wanna return an int is reason a) from above. 
I'm still not sure what you're asking with the rephrased question, but I will give it a shot! &amp;#x200B; I think you are asking if this will always return 1 unless that if statement is true: public int MyFunction() { //some code if(true) { return 0; } return 1; } Which in this case it will. When the if statement is true, it will return 0, when it is false it will return 1. Once a function returns it ceases to run, so anything after a return wont get executed (for the most part, but don't worry about that for now). &amp;#x200B;
Very nice, cant wait to dig in. Great Job.
no, it will not magicly return another value if your function is broke. YOU(!) and nobody else defines what the function returns. you have to handle your errors yourself. a function won't return 1 or 2 or 3 or 1337 if you haven't set a specific return-statement for these values. 
my question was a total mess i will try to rephrase it here i mean if my self defined function return 0; and it didn't work it won't return 0 ; it will return 1; otherwise 
as i already said: no. it will not out of thin air return any other value that you yourself didn't create a return for. you have to catch and handle the errors yourself (before they happen! else your program will crash. there's no try/catch in c. you'll know what i mean by that when you did some c#) i will show you an example, so hopefully you get it int example(int a) { //This function will only work with numbers that are under 1000 and over 500 if( a &gt;= 1000 ) return 1; //If function returns 1, number is over 1000 if( a &lt;= 500 ) return 2; //If function return 2, number is under 500 /* Add some code */ return 0; //If function returns 0, the function executed fine and we didn't have any problems } &amp;#x200B;
Sounds like your concern is about either developers who maintain your project later, or possible changes to those external libraries. &amp;#x200B; Sounds like a perfect use case for a *wrapper class:* 1 Make an interface, ISlides, that mimics the external library's API. 2 Make a class, Slides, that implements that interface, using calls to the external library. 3 Any time you would reference the external library from other classes, reference your own Slides class instead. &amp;#x200B; (PS Don't beat yourself up for not already knowing how to approach this. You've identified a need for more information and are seeking it out - that's exactly the right approach!)
There is more to the story than that, but yes that is the conclusion. &amp;#x200B; &amp;#x200B;
That is great API design right here - even if it might be documented a bit better. This guides the user to do the right thing and doesn't make them shoot themselves in the foot by default. Maybe you could even adjust the class-names in the readme a little or mention it in a quick comment, because that's probably one of the bigger beginner pitfalls. If you want to get fancy: Warn the user of slow queries if the project is in Debug-Mode and/or a debugger is attached.
Was there reviewing somewhere in all those lists?
https://youtu.be/cQ7STILAS0M
Your example breaks the `Open-Closed` principle. If a new slide type comes along, he'll have to modify the `Presentation.RenderSlide(Slide)` method to account for the new slide type.
Yeah, I'm ,43.. still learning. My problem is unless I have a basic understanding and real world examples I'll never learn.. it took me over a month just to learn with interfaces where and how to use them. I use them regularly now. Changes to the library is exactly why I am trying to do wrappers. one of the methods from the API I used to have available and new version came out and it was deprecated. I wondered why my stuff broke when I install the new library.... constantly learning. I'm still trying to grasp this polymorphism and liskov substitution principle. Every iteration of this program, the coating becomes better. Even the rewrite I have now, which is version 3, it's still pretty good code. But as they learn new things I want to implement them into my program to make it more professional , maintainable, an extendable. 
Are you code first? What happens if you change the parent class from a DbContext into an IdentityDbContext and just do add-migration? I would think that it would add the identity tables.
You don't need to understand C to learn C#. I could see some value in learning C++ first for a variety of reasons, but not C. To answer your main question though, no. Your first little code snippet will always return 0 unless your /* some code */ block throws an exception. 
It's true, but it's a balance. If it is to be used in multiple places, you'd definitely want to follow that open/close principle. If Slide is essentially a private class of Presentation, then you're modifying the same amount of code in the same places anyways and the change is isolated. When the different formatters all have different arguments and usage patterns for doing their thing, then abstracting them into an inheritance or an overly-simplified interface runs the risk of being a leaky abstraction. Is it realistic you'd ever be able to add a new type of slide to render without futzing with the Presentation class? We don't really have enough information to judge.
My preference in the past was to be I/O-agnostic. Make your parser operate on one or more buffers that you push data into. This way you have a single bit of core code and some simple wrappers that purely do I/O and nothing else. These days, I generally say just don't write sync code in the first place.
I think what OP is missing is an understanding of enums. Folks were close when they mentioned exit codes, because, in most cases, the numbers (and sometimes text, in things like GetLastError) are all part of an enumeration (enum) where numbers have been assigned to represent results of errors. So the bottom line here is that OP can have a function (or program) return whatever exit\\result could he wants, he just needs to realize that this number needs to mean something meaningful, such as a related error text message. Here's an example (from [https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2)): Fields Accepted 202 Equivalent to HTTP status 202. [Accepted](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_Accepted) indicates that the request has been accepted for further processing. Ambiguous 300 Equivalent to HTTP status 300. [Ambiguous](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_Ambiguous) indicates that the requested information has multiple representations. The default action is to treat this status as a redirect and follow the contents of the Location header associated with this response. BadGateway 502 Equivalent to HTTP status 502. [BadGateway](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_BadGateway)indicates that an intermediate proxy server received a bad response from another proxy or the origin server. BadRequest 400 Equivalent to HTTP status 400. [BadRequest](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_BadRequest) indicates that the request could not be understood by the server. [BadRequest](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_BadRequest) is sent when no other error is applicable, or if the exact error is unknown or does not have its own error code. Conflict 409 Equivalent to HTTP status 409. [Conflict](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_Conflict) indicates that the request could not be carried out because of a conflict on the server. Continue 100 Equivalent to HTTP status 100. [Continue](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_Continue) indicates that the client can continue with its request. Created 201 Equivalent to HTTP status 201. [Created](https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.7.2#System_Net_HttpStatusCode_Created) indicates that the request resulted in a new resource created before the response was sent. etc... &amp;#x200B;
Mods are asleep. Let's improve our ranking. crap fuck hate shit.
To add on this, you can do a TryXXX method that returns a bool success status, and an out/reference of the actual value
The solution is to use new String(answerArray). Regarding your use of the Console, Console.WriteLine() adds a terminator to the end of the output. I don't know enough about your requirements to tell you what to do specifically, but if you're just looking to output a char in an array, one char at a time, using Console, then use Console.Write() instead. Keep in mind that this will require you to manually add a new line character after your last index, or simply use Console.WriteLine() without any arguments to advance to the next line. 
what the purpose of that article?it's a new bicycle? you should read Knuth &amp;#x200B;
Could you provide more information about your use case here? Why are you not using standard serialization tools? 
Define an interface, and have each class should implement that interface. The interface should contain your Open, Close, ExportPDF, and ExportSlide methods, as well as your OnDocumentOpen and OnDocumentClose events. If your classes are so big that you have to consider breaking them up into partial classes, you're probably trying to do too much with one class. 
There is no purpose except 42. But i would love to read Knuth. Anything from him you can recommend?
I havent seen a way yet to use the second menu bar in WPF, so I guess you have to customize it with xaml. Also haven't used the dropdown in particular but I remember that the [WPF-Toolkit](https://github.com/xceedsoftware/wpftoolkit) had some awesome GUI-objects like a colorpicker, maybe you find there some more customable menus. 
The subreddit has a [C# Discord](https://discordapp.com/invite/ccyrDKv) with a beginner-questions channel.
But this is like a worse recipient list? E-mail clients also allow pasting multiple addresses. If you want true bulk delivery you need something like MailChimp but if you're using a personal e-mail address you're just as well off using a regular client. 
This question is the worst.
This is a windows form application.you need to install it or run source code files with visual studio.multiple email address are not accept during sending an emails.mail chimp is a web platform.this is not similer to mail chimp.this is very simple application, i think if someone has some knowledge about c#, he can modify source codes for match his requirements.if this is not suitable post i'll remove. Thanks
The link isn't working.
still not entirely sure, but if you are asking how to alert a calling function that an error occured you can either use: error/status codes like you are currently using or you could throw an error that must be handled by the calling function.
Do you mean instance variable vs getter/setter property? Getter/setter is a wrapper for instance variable. It is useful when additional logic should be applied before getting or setting value of instance variable. For example, prevent setting negative value for a bank account balance. Instance variables should not be exposed to outer world (e.g. to be public) and should be accessed either from within methods or getters/setters.
Works for me. 
You can add additional logic with both properties and getter/setter methods. I think properies are made to mix the OOP principle (as you shouldn’t make your inner class variables public to everyone) with the simplicity in syntax (it’s “shorter” if you don’t have to call a function each time). (But I’m still curious how properties are implemented in lower levels i.e. calling a function or not.)
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/latexandloaf] [New .NET library for those who work with WMI. Simpler than ever.](https://www.reddit.com/r/LatexAndLoaf/comments/aakebh/new_net_library_for_those_who_work_with_wmi/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I see getter/setter as a Javaism. There to change/read state eg. private variable, you would create a pair of functions that do that - named getSomething and setSomething. In .net we have a special mechanism that is called a property that looks to the outside like a public variable for ease of use (plus other stuff) When you declare it and use it, actual functions for reading and writing to it are created and called under the hood (comparable to ones you would write by hand in Java et al). Also the private ”backing” variable is created and used behind the curtains. This makes all sorts of things quick, easy and simple with minimal code. You can leave it like that or write additional logic to the get/set parts as needed, and define the private variable yourself. This allows for more complex logic such as validation, events etc. You can also write private variables and corresponding get/set functions yourself, and that is ok, but you wont get things that the framework, languages, libraries, tools etc would provide for properties. There are scenarios where each of these would preferred, but I would suggest that start with the most simple and minimal (auto implemented property) and if need arises, only then add code and complexity. 
I think the most important thing is the semantic difference. Getter Properties are for accessing the state of the object **without modifying it**. If a method meets this criteria, it should be a Property so that everyone is aware that it's safe to call. A method with no arguments might mutate the object's state - a naming convention isn't any kind of solid guarantee. Note that many reflection libraries and even the debugger will access all public Properties of an object without fear that they might alter the object's state or need to be intialized in a specific order. If you use a Method instead, you can't assume that the operation is idempotent.
Properties are actually implemented as a private variable and a pair of functions for reading/writing to it. 
&gt; Does making a property public just create a getter and setter if you do `public property Foo { get; set; }` then yes, the compiler has just created simple getter, setter and backing fields for you. &gt; by specifically making a getter/setter function you can add additional logic when accessing or setting the property? Correct, if you want to do something that's not default then you can supply your own implementations. But as others have noted, it is expected that property `get` won't change state or have other drastic side-effects.
My guess is author is on a German layout, where accent characters are unfortunately easier to type than apostrophes, often leading to this confusion.
Sometimes i check inside a getter whether a value is already loaded. If Not i load the value from the database. Do you think this is Bad Design? Should i move this logic to methods instead? 
Same, why do I need a 20 Page Essays when there are like 30 relevant code lines 
An additional, but important point from the [guidelines](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/property): use a method (named `GetXXX()` by convention, but whatever you want) if the underlying code might raise an exception. 
This (known as an 'auto implemented property'): `public string MyString { get; set; }` Is shorthand for this: private string _myString public string MyString { get { return _myString; } set { _myString = value; } } As you stated, the only reason for using the expanded format is if you want additional logic in either the setter or the getter.
Lazy initialization is fine and one of the reasons why getters should be preffered over plain variables. So: No, I don't think that this is bad design by itself. However, I think that it should be clear that this may happen. Calls over networks may take time, this should be taken into consideration.
What about just public string myString;
To clarify there is no program flow control and other more advanced features, because that would be a bit of an overkill, however I might add those in the future. Documentation and a proper readme is comming, I will have couple of hours in a tran tommorow.
That's not a property - that's a field.
Why would you put so much effort in a school project? Good job anyway 
I saw first five minutes of a video about someone who made one, so I wanted to figure out how to do it myself. I was finished in little under 8 hours so it did not take that long.
If there are only 2 possible values, that represent success and failure, then the type that you want to use is most likely `bool` with values `true` and `false`. If your function returns an `int`, then what would it mean if it returns 136356? or -42?
I’ve always wanted to make my programming language when I was younger. I’ll definitely take a look at this when I have the time, great job! 
In general, it's a bad practice to put all of your code in one huge file
As /u/PhonicUK said, that's a field, not a property. With that in mind, could it be that your original question was actually about the difference between a field and a property? Because if that's what you want, none of the answers so far have told you that (because you didn't know the right words to be able to ask the right question). So: the difference is that a property is just a get method and a set method (that you call in a way that makes them look like fields when you use them). Behind the scenes, every time you access a property, you're either calling the get method, or the set method. On the other hand, when you access a field, you just access the memory that contains the variable directly. Why is this important? Well, with a property, you can add things like validation into your get/set methods. And even if you don't want that now, by using properties from the start you can guarantee that if you ever need to add it in later, you can do so without your clients having to know, without them needing to be changed or even recompiled. Because of that, it's considered bad to have public fields in a class. You don't want clients of your class to ever change the class's memory directly. Instead, have public properties, where clients will call the get/set method, and if you don't need any validation now you can easily change it later.
You are right there. Not german tho. I use latin american layout.
&gt; With that in mind, could it be that your original question was actually about the difference between a field and a property? Yes! Thank you. Your explanation makes a lot of sense.
Good work as a starting point 
What happens if that database call fails? I generally avoid what you are doing because people don't expect properties to fail in that way. Framework Design Guidelines: https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/property Code Analysis Rules: https://docs.microsoft.com/en-us/visualstudio/code-quality/ca1065-do-not-raise-exceptions-in-unexpected-locations?view=vs-2017
Yeah, I know. This is pre refactoring :D
Yeah, it was the same for me. I had some time off from my current project so I decided to try and make one.
If you look under the covers, we're actually using a pair for methods called `int get_Foo()` and `void set_Foo(int value)`.
for me the best - Cormen) some russian books, but i don't know if they are in english
Nice! Are you currently taking programming language concepts or similar? If not - I highly recommend it; it’s usually a required sr level CS course. 
Return null
I am code first and I am going to try this and let you know 
Make a habit out of refactoring or cleaning up as you go. Doing it too early or too late will make it much more painful. 
You need to search for using an image resource.
Have considered just reading images from the HDD? Are you looking to have this run as a single executable? If so you'll probably want to embed the images in the executable as a resource.
1 class (interface) = 1 file
Would I need to add a public DbSet&lt;User&gt; Users { get; set; } to the context before I do the add-migration, or is that implied with inheritance?
I have an ApplicationUser set up as: &amp;#x200B; `public class ApplicationUser : IdentityUser` `{` `[PersonalData]` `public string FirstName { get; set; }` `[PersonalData]` `public string LastName { get; set; }` `[Display(Name = "Name")]` `[PersonalData]` `public string FullName` `{` `get { return (FirstName + " " + LastName); }` `}` `[PersonalData]` `public DateTime DOB { get; set; }` `}` &amp;#x200B; And my DbContext is: &amp;#x200B; `public class TriumphDbContext : IdentityDbContext&lt;ApplicationUser&gt;` `{` `public TriumphDbContext(DbContextOptions&lt;TriumphDbContext&gt; options)` `: base(options)` `{` `}` `//Base Level Entities` `public DbSet&lt;Client&gt; Clients { get; set; }` `public DbSet&lt;Project&gt; Projects { get; set; }` `public DbSet&lt;Employee&gt; Employees { get; set; }` `public DbSet&lt;Contact&gt; Contacts { get; set; }` `//View Models` `public DbSet&lt;ClientViewModel&gt; ClientVM { get; set; }` `}` 
Well, did add-migration add the tables?
It added the tables without me having to add a DbSet. Thank you for your help, now on to creating the controller and the views!!
Awesome. Glad to help.
`s o m e o d e`
no, I did this for the introduction to programming class :D, but I plan to take ai and language design, maybe also mix in some embeded.
That is what you literarly have to do for bigger projects, but for śmall stuff like this, especially when I prototype I start off either splitting everything out or with one file, then split it and branch it out from there. That is what I started doing for the next commit.
That is what I do normally, this one was kind of an exception. If I imagine that my 100+ class projects would look like this, I think I would have to look for a new profession.
I already have Introduction to Algorithms, which is a very impressive book. Can you give me the names of them and I will check them out?
How you make compiler for this language now? Much interest in such
Obligatory Head First C# recommendation if you want to get stuck into practical examples right away.
Well currently it is interpreted and runs only in a command line, for compiled languages you have to translate it to machine code, this process would be done before it is interpretted, however I am not sure how exactly it would be done, essentially you would have to translate all the expressions to machine code. But that would be a total overkill for the introduction to programing class, so I did not really consider how I would make it.
It's always about finding a balance, I see a lot of extremes, people that care only about design patterns and refactoring don't get much done. People that don't care about these things at all are often very productive initially but hit a wall when requirements change (when, not if, because they will). My favourite colleague to work with has a good balance between these two extremes and its a pleasure to work with him because of it. 
I’m not used to creating huge projects yet. Do you have any resources I can check out to explain how to properly organize the file structure?
you would need knowledge about assembly language and understanding of binary and how the computer runs a code in the lowest level and then convert your language into that binary equivalent that calls the native calls of the CPU/OS
I would suggest creating one file per class. This is a better practice and its also better for finding classes and objects in your project
Yep, that is what I was saying (or trying to) - a backing variable, and functions for reading and writing to it are created and used.
Stick with Unity3d for game development. I suggest this channel to get you started. https://www.youtube.com/channel/UCYbK_tjZ2OrIZFBvU6CCMiA
Next time add a readme
OK - now I want someone to somehow evolve the D language like C# did for Java, and call it D-Flat &amp;#x200B;
Tim Corey has done just that. C# Application From Start to Finish: Tournament Tracker Course: https://www.youtube.com/playlist?list=PLLWMQd6PeGY3t63w-8MMIjIyYS7MsFcCi He's very good. 
Please put more effort into your question. * what kind of project? A command-line app? A GUI? A website? * are these images on your disk? Are you downloading them from the Internet? * what does "use them" mean? Render them? Edit them? Just put them as an icon for a button?
Let's cover every base. This is a *field*, with the most common capitalization and naming style: public string _myName; Fields are just variables. When you get or set a value, all that happens is you get or set them. Technically that means they are faster than properties, but realistically speaking you'll probably never be in a situation where that matters. Making a field public is very rare. Generally they're private. That's why the `_` goes in front of the name, it's to help them stand out. Why you want them to stand out has to do with properties, so read on. --- There are a lot of different ways to make a property. The traditional C# property looks like this: private string _myName; public string MyName { get { return _myName; } set { _myName = value } } See how I had to make a private field? This is called "the backing field". The property itself is some syntax sugar over there being a method for the `get` and `set` parts that gets auto-generated by the compiler. That method uses the "magic" parameter `value` in the setter. When you implement a property, you get to do things in response to the property getter or setter being called. But you don't get that benefit if you get or set the field `_myName` directly. That's why we put `_` in front of it: generally that tells us we probably meant to affect the property, not the field. --- But that got tedious so a syntax sugar was added for basic properties in C#: public string MyName { get; set; } That auto-generates more or less the code from the last section, but obviously we didn't have to do as much work for it. Note there is no backing field here. IIRC C# will let you make a field named `_myName` because it auto-generates weird names for its backing fields. VB .NET, on the other hand, throws a compiler warning if you try this. These only work for basic properties: the moment you want to do something useful like implement `INotifyPropertyChanged` you have to convert back to the more verbose syntax. --- So naturally, MS implemented a syntax sugar for `INotifyPropertyChanged`... in an alternate dimension. Instead what they *really* did was decide F# developers weren't smart enough to adjust to the more verbose C# syntax, so they added expression-bodied members and we can implement a simple property like: private string _myName; public string MyName { get =&gt; _myName; set =&gt; _myName = value; } Now, you might look at this and ask, "Isn't that about as much trouble as the traditional syntax?" Yes, yes it is. But people who wish they were using F# feel cooler if they use these and apparently they are worth more money than WPF/UWP developers to Microsoft. --- So `public` and `private` have nothing to do with it. That said, there's almost no reason to ever make a field public. Conventionally speaking, properties are the only public data-holding members of a .NET type. The only reasons to make a field public are: * You are in a hurry. * You aren't going to maintain or change the code. * The program is small enough you already know every line you will write. 
would be nice to have README with examples
I think it depends on your motivation and end goal. If you're trying to make money, then the world owes you nothing and you'll need to get those resources from somewhere (by hiring or convincing some kind of investment, even if thats just friends helping). If it's just to make something cool and you dont mind sharing it. Go open source and work on it slowly.
Assuming i understand your goal... This sums up the embedding and fetching of resources pretty well: https://codeopinion.com/asp-net-core-csproj-embedded-resources/ They're using the newer csproj format so that may not apply to you, but the Visual Studio steps are still the same.
Try coding at coworking place instead of home
I'd like to think the idea has some legs and it has potential for me to turn it into a money maker, it's not something I'd consider releasing open source. I have a little bit of money I'd be prepared to throw at it, not a huge amount, so I suppose what I'm really asking is what's the best way to go around hiring a third party to help with the coding aspects? Is Fiverr any good, I've heard mixed things about it.
Most commonly: JWT -&gt; WebAPI - Javascript on frontend is sending tokens Identity -&gt; ASP.NET MVC -&gt; token sits in cookie.
I'd love to find a place like that near me, but there just aren't any. I've popped to the library and coffee shops a few times which has been a nice change of scenery, but it doesn't help speed me up.
Maybe write whole project as a list of tasks and try to implement at least X / day or something 
Or using C#, you can make .NET assemblies that can execute and also be targetable in other .NET languages.
There's always distractions lol, but I'm pretty good at cracking on with things when I can, I'm just really really slow :)
Simply put: each class should almost always go in it’s own file. So your Chunker class should be in Chunker.cs There are a few exceptions to that rule, but you should only put multiple classes in a single file if you have a good reason to do so... I’ve done it about twice in 6 years. Then you can group similar classes into a folder together... kind of how you grouped your classes into one big file for the math processing. Generally you group them based on doing similar things, or classes that reference and use each other, or where the classes are part of one big “job” and make up parts of that job.
I can see why you formed this idea, but honestly it’s easiest and best to do it for small projects too - it makes it much faster to browse and expand later, and the time taken to add a file for each class is minimal... much less than refactoring later Don’t worry, we all learned this the hard way... you should see some of my old PHP projects 
Your problem is not coding, your problem is 'roughly sketched out'. The demands for design and flow before coding scales with project size.
Here is a good starter repo I put together for CRUDing that is based on DDD/CQRS &amp; other goodies. https://github.com/jetstreamin/CleanStartCore Hope it might help. 
I'm learning from Bob's course right now! It's really good and covers the fundamentals but also more in-depth topics
One file per class. One folder per namespace.
Writing your own lexer and parser is ok, but for real projects you might want to take a look at existing solutions like antlr or irony. Can't comment on anything else at the moment as i am on mobile and could go through all the code.
 In some cases I have data in a binary file where the first segment is an index of types expected within the file. Then a set of data segments with a typeid then the data for deserializing that type. In other cases I am using NewtonSoft.Json to deserialize lists of json strings. They provide their own fully qualified namespace to indicate what type to deserialize into. Then I have XML that uses the standard dezerialization and they need to have annotation on the types in order to be recognized. 
What I meant was why are you doing this to begin with? Are you in control of this binary file? Why are you working with three different formats? 
Cool.. I have never done things like that although I have attended a Compiler class and PL class when I was an undergrad student. (I made a compiler of simple language called c minor using Lex and Yacc or something)
Some people want to learn to do things?
You need to measure code coverage and run the tests. Look at TeamCity or Jenkins as build servers. Run the tests as part of the build. You can publish results in those tools or look at something like SonarQube.
They’re build / CI servers (continuous integration). Popular ones are: TFS Team City Travis CI Bamboo Jenkins Travis CI is a free web service for open source projects so you can get started without installing anything. It’s quite popular with github projects.
Jenkins is one of the more popular solutions. My last shop we used TFS with good results. Before unit tests were a thing we had a build server that just ran batch files to pull down the latest code and build. If there was an error it would email all the devs someone is an idiot! 😁 Lol jk. 
Do you have `AddDefaultUI()`? IIRC when I removed it and removed any of the scaffolded files, they wouldn't be overloaded by default identity ones and would cause a 404
Setting up Jenkins to run unit tests is an order of magnitude more hassle than doing so in TeamCity, though. But then again, TeamCity is annoying in other areas.
Octopus is an option, also AWS CodeStar
TFS became VSTS, and is now Azure DevOps.
Thanks &lt;3
If you are able to run in the cloud, azure devops is usually my goto system for CI/CD. That said, if your higher ups haven't heard of source control and devops in 2018 its about time to find somewhere else to work. Especially if it's business critical what you are developing. 
Have you used team city and octopus deploy? That's my go to but I like the codification in azure devops 
We are switching away from teamcity to devops now actually in the organization. Octopus I haven't actually tried. I hope we eventually can move jira into devops as well to get everything in one place. 
Don't forget Gitlab too 😉
I use an on-site TFS server set up to run CI builds with unit tests run as part of that. It's saved me a couple of times!
another classic book Virt algorithms and data structures you should read cormen then
Azure devops (former TFS and VSTS) also provides modern source control (git), code review (merge request) and automated deployment capabilities without much setup needed so it can be one solution to most of your prpblem. (Also integrates well with other systems if you later want to use jenkins. (But for gods sake plase do not use that piece of shit gitlab for source control... Sry for the rant...)
Having both ends (aka full-stack) will open up more jobs to you and will probably have a positive affect on salary. Either ask for some front-end work from your current employer or use your back-end skills to get a new job that involves back-end and front-end. &amp;#x200B;
Thanks bro , but now the integeration and windows service am doing what my job role should be? software developer ?
Octopus is not a great option for this purpose, it's better suited as a deployment tool. It won't give nice unit test result dashboards like other tools with purpose built unit testing plugins such as TeamCity.
Really depends on the resources and requirements you have. Can't host your own stuff? Go with Travis, Azure DevOps and the other mentioned here. Can host your own and want to take the build pipeline into your own hands? GitLab or something similar. Generally, run automated unit test for each build and code coverage. Incorporate some automated documentation tooling too, so your team has to document the code prior to building. This way, after a build is done, it will get coverage, unit tests and full documentation automatically.
This was going to be my first suggestion. Azure Devops (formerly VSTS, and before that VSO!) is just so damn quick and simple to set up a complete end to end build/test/deploy pipeline. That said, it's basically a more regularly updated version of TFS in the cloud, so if cloud-based CI/CD is a problem for OP, they could look into running Team Foundation Server on-prem instead.
Thanks for the help, one thing I'm finding difficult is different use cases and why one method is better than the other, when it comes to more advanced stuff. (I just mean more advanced than my level, which is 100%beginner atm)
You can choose one of these: software developer, back-end developer, API developer or you could see if one of these fits: microservice developer, software engineer. You could look on job sites for more ideas, or you could make one up.
Thank you. I appreciate all the information you have given me. I will definitely take a look at it all.
Thank you .
Azure DevOps Server, I believe is the new name. 
If you are totally beginner, so I think this book is good one for you Fundamentals of Computer Programming with C# - from Svetlin Nakov and his team. [Fundamentals of Computer Programming with C#](http://www.introprogramming.info/english-intro-csharp-book/) It is good book even its old, it is plublished in 2013. And it’s free. When u get background, go “Pro C# 7” from Apress publisher.
See [this blog post](https://damienbod.com/2018/08/07/disabling-parts-of-asp-net-core-identity/)
Remove it. If you don’t want it, delete the file. 
Is that in GA yet? Think I came across a post recently about it being in Tech Preview.
&gt; That said, if your higher ups haven't heard of source control and devops in 2018 its about time to find somewhere else to work I recently joined a small company as a senior (only only devs are the owner and a junior) who used email and a shared dropbox folder as source control, deployment was the owner SSHing into the VM and copying the files across on his Mac, the works. The first few days were mindblowing seeing how things were done, but the owner was extremely happy for me to come in and put processes in place such as version control, CI/CD, testing etc. He and the junior sat attentively for a few hours during my first week as I went through the basics, showed a real-world use-case for something as simple as branches, introduced how build servers work, etc. Writing off a workplace because they aren't current isn't always the default choice. I previously would have agreed with you, but nowadays I'm more inclined to say: &gt; Move jobs if they haven't heard of version control and are resisting moving towards it.
True, if they are inclined to listen to you there are reasons to stay. As a junior you would need to be honest with yourself if you feel you have what it takes to turn things around though. Working in a place where you most likely won't have any mentoring might not be the easiest as a junior. Someone with some years of experience, working somewhere where you have the opourtunity to really take charge and drive things forwards can be really beneficial. 
I haven't creating new projects for a long time and seen this today. There are many subpages existing that are not included in source code. What the actual f\*\*k? How can it be good for programmer? Causes only confusion. What was wrong with previous way of implementing identity?
Still an RC, but since all the stuff has been running in the cloud for months before it is ready for on prem install it is pretty solid. Going to confuse the hell out of people though. “Hey everyone, I upgraded our TFS server to Azure DevOps”... “oh cool, so we’re in the cloud now”... “Ummm no. It’s still in the server room. “... “ but you just said Azure. Isn’t Azure the cloud?” 
I was the one in my last role to take initiative to implement CI/CD. As I heard a guest on a dev podcast say, "it's your nights and weekends that you're giving up doing it the old way, not your managers" ... and ... "they hired you to do a job and to do it right, so do it right." That inspired me to give up a handful of nights and weekends working outside my normal workload to implement this stuff, which saved me weekends... which I didn't take because as soon as I was done, I found a better job. But! I keep in contact with some of those folks and it's still paying dividends.
maybe this? https://gist.github.com/vbfox/484643
If you’re using Xamarin Forms, I would check out [Prism](https://github.com/PrismLibrary/Prism) as well. Other than that, I’ve only used MVVMLite from your list and I like it. I’ve never done cross-platform with it though. I’ve used Prism heavily in wpf, like for 3-5 years. I think it’s brilliant. If I were you, I would spend a day or two on each writing a duplicate cross-platform app and see which one you prefer. The initial time investment will be worth it later. You might also want to look at your requirements and see if any framework can’t meet the needs. Having a well-groomed backlog might prevent you from having to shift frameworks later.
We tried switching away from team city a few years ago. We went back. Too much black box bullshit, random failures, and lack of features and control with hosted CI/CD.
dude you made a fucking forknife copy and you use java
Your not don't anything specialized enough to be caring about the job title. Writing some api integrations doesn't make you a "back end developer" in any sense that would command a higher salary.
What is it you want from your framework? Personally I couldn't care less about using a framework for DI. And I think viewmodel locators are a bad idea. What I do want a MVVM framework to do is handle interfaces such as `IErrorInfo`, `IRevertableChangeTracking` (unsaved changes), and `IEditableObject` (modal dialogs). Do any of the frameworks you listed support those interfaces? If not, then they are not good MVVM libraries *for me*. But you're not me, so maybe they are good libraries for *you*.
Please if you dont know how to program please shut up. Firstly is C# and Unity if yo don't see that and you are in the C# reddit you have a problem. Secondly this project is created by me. Some parts of the visuals are get from other websites &amp;#x200B;
I know how to program, I made lots of projects. Also, I'm talking about your channel, I'm not blind.
If you know how to program is simple to change fro Java to C# they are very similar
Please firstly reread your post before being ridicolous
I have one doubt where are you sure I have copy the project. Because the Neural Network, genetic algorithm,map, camera, AIController is every made by me
We use TeamCity
The worst thing about Azure DevOps is the name. DevOps is used in conversation already. Azure is its own product. ADO is already an acronym. Love the product. Hate the name. 
I've used Caliburn Micro and MVVMLight. As the name suggests, MVVMLight is a lot lighter than Caliburn Micro, and iirc a bit easier to work with. &amp;#x200B; I would recommend come up with a simple app and try to make it using the 3 libraries. At the end of the day, you know your project requirements a lot more than can be conveyed through a reddit post. Sometimes frameworks might be 'the best', but not to you because of the way its designed
Are any WPF applications available online? Only with CRUDs functions? I want to learn but looks Microsoft Framework doesn't have much help as compared to that of PHP
I actually just had to go through this decision and I landed on a framework you don't have listed. I ended up going with [MvvmCross](https://www.mvvmcross.com/). My initial thought was to just use MvvmLight since this was the most simple out of everything. I got a decent ways through that option but found out I had to add supplemental code to get it to work the way I wanted for Android. Maybe I was just doing something wrong, but I know for sure MvvmLight doesn't deal with the AppCompat Android library very well. It also doesn't do fragment navigation out of the box. Why I liked MvvmCross? I choose this framework over others because it does a lot of the heavy lifting for you. * It has built in Dependency Injection, navigation, logging, and messaging. * It will "automagically" pair up views and viewmodels so you can do View Model first navigation. * It was designed to be extensible so if you don't like how they do something just register your own implementation of one of their many interfaces. * This is also supported by the .Net Foundation. * And several other features I didn't mention I was hesitant on this for so long because it is a very large framework. If you later decide you want to use a different framework you're going to have to rewrite your whole app. Another reason is that I find their documentation to be lacking. I find myself looking directly at the source code more often because some of their examples are out of date. I eventually found the pros to outweigh the cons. The defaults just work for my scenario.
I quite like the mvvm offering from Dev-express (it's free).
I have used mvvm light on multiple big projects. I found it rather easy to get on with, especially when I was first using it and getting to grips with the mvvm approach. On a side note, if you are looking to use wpf and xamarin, I would strongly recommended the Prism library, as have a few others on here. It's a excellent library and will take your project to the next level. MVVM is made use of in this library as well, so you'll still get the mvvm benefits.
Team city is super simple to setup, is free for 20 builds, and is very flexible. https://www.jetbrains.com/teamcity/
Also worth pointing out that vsts/azure devops supports git and pull requests, just in case someone hasn't heard already. 
Removed: Rule 7
Removed: Rule 4.
Removed: Rule 4.
Removed: Rule 3. Maybe give /r/cscareerquestions a shot.
Removed: Spam. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
Removed: Rule 5.
Thanks
I am trying to write a game and the engine it runs on. The binary is used when the player saves or loads a game. The XML is used at developtime to define sets of PreFabs. There is not anything that explicitly uses the Json serializer/deserializers yet but I thought it may come in handy if I try to add some community interaction... like I wouldn't use restful api for actual multiplayer... but I might use it to allow players to set up an auction house that other players could buy items from or some other not-quite multiplayer but more than single player features. The reason that It is deserializing lists of arbitary data types is that the serializer is a part of the GameEngine. It has to serialize an EntityComponentCache... components are supplied by the Game which may include types that are not known to the engine.
I'm getting some kind of error saying, that PDFsharp can't handle iref streams which my pdfs contain. Now I remember, that I already tried this one. 
Thanks for the suggestion. I tried installing it, but it says the dll isn't a valid assembly :/ 
I hate Razor Pages with a passion.
I was thinking of using MVVMLight at one point, but it has almost no documentation. While prism and Cliburn have a lot. I feel like any framework without good documentation is not worth using, when it's way to frustrating to even get started.
https://stackoverflow.com/questions/36788746/pdfsharp-cannot-handle-this-pdf-feature-introduced-with-acrobat-6-error-while Would that be of help perhaps? I haven't dealt with such issues before.
Just did a search for mvvmlight, and you are right, their doc page is shocking. Though from memory, all it did was dependency injection, commands and navigation, there shouldn't be much to write about.
Ah thanks, I assumed the version from the packet manager is the latest. Still, now it says it can't support the files encryption. The file has no password protection, so I'm not sure what it is talking about. 
Right? At least other places have at least bad documentation, with of better than none. I didn't really know where to start with it though, nor with MVVM in general. A lot of the other frameworks have that. I actually ended up liking the docs for [WAF](https://github.com/jbe2277/waf) the most, but ended up using Caliburn.micro
Could you elaborate? 
If someone asked me to combine the worse things from Web Forms and MVC I'd probably end up with Razor Pages. It doesn't separate well markup and view code but at the same time it fails to have proper components with state, events, encapsulation, reusability and so on.
Why spam? It's only a tutorial with any financial aim
Because almost 100% of your interactions on reddit is with your own content. Please read and follow the guidelines for self-promotion on reddit (which I have linked above, and [previously warned you about](https://www.reddit.com/r/csharp/comments/a2514x/creating_a_selfdriving_car_simulator_2019_dynamic/eb068sx/)).
It's a little tricky. First you install the pdfiumviewer package, then you have to install the native pdfium library that pdfiumviewer depends on. (They have to be in separate packages for licensing issues I guess?). Try this from the package manager console... install-package pdfiumviewer install-package PdfiumViewer.Native.x86\_64.v8-xfa install-package PdfiumViewer.Native.x86.v8-xfa
I didn’t know that. What a weird choice of name for a non-cloud based product.
Yeah, I tend to agree. I can understand if they wanted to move away from the Visual Studio branding since it’s a lot more open than just being tied to one IDE, but choosing such a generic term like Dev Ops sounds like ill informed marketing people winning the day to me. According to another guy in this thread, TFS is being renamed as Azure Dev Ops Server, which given that it’s an on-prem solution makes even less sense.
FreshMVVM
LINQ is just an unnecessarily fancy word for various collection methods, at least in this context. Here the method “Aggregate” is used.
&gt; I’m pretty sure you could already do this using _Span&amp;lt;T&amp;gt;_ in C# 7.x so this is just extra syntax sugar. It works differently and not with span. 
I'm curious what you mean with "To get MVVM to work and not have to reinvent the wheel, or do a lot of boilerplating myself" Since WPF Mvvm only requires two interfaces: INotifyPropertyChanged and INotifyCollectionChanged. The former usually goes into a base class. Anything else technically is not required for Mvvm.
How is this different than NServiceBus or MassTransit?
What part are you struggling with? 
What is different? 
Interesting. I haven't looked into razor pages much but from what it was explained to me it sounded like the .cs file that goes with the view would be considered your controller and little else would change. This is good information to start off researching on, thanks for that.
MVVMLight is more explicit than Caliburn Micro. I believe the Caliburn is more concise but bit more magical. But I remember my best MVVM experience was on MVVMCross which is godlike for Xamarin. Supports WPF as well. It reminds me MVVMLight in ViewModels but the cross-platform abstractions are already there. Documentation is also great. Since you already target two platforms, I believe it is a perfect fit for you. BTW Later I moved from any XAML based techs, and now I would probably go with React Native, but I do have a lot of good memories from MVVMCross
Truthfully I haven't started, I was hoping to work through one of those tutorials as an introduction to Unity.
this. But I had better experience with the docs :D
No, they are not. WPF in Windows related tech. There was Silverlight but it is gone. If you are genuinely interested in C# on client side (and backend) web there is [Blazor](https://blazor.net/). 
Yes there is a file that is tied to your view like in web forms but the problem is that you can't create a component like you can in web forms. They are literally just pages. I understand the appeal of having pages (hell I officially prefer Web Forms to MVC and only do MVC because Web Forms is an obvious dead end) but this feels like PHP, just a bunch of files thrown around. I need the components. Razor Components does it right, but it has quite different model for serving the page so...
I see, is there a good place to learn about all the systems that are available?
To extend: AddDefaultIdentity uses AddDefaultUI under the hood. You gotta write your own AddDefaultIdentity but without AddDefaultUI. https://github.com/aspnet/Identity/blob/c7276ce2f76312ddd7fccad6e399da96b9f6fae1/src/UI/IdentityServiceCollectionUIExtensions.cs#L47
I always considered mvvmlight's documentation to be the code samples and various conference talks the author has done over the years. I found those to be sufficient.
Good to know, I have just `AddIdentity` in my latest project hence it worked out for me, cheers.
Lol get lost
What OS' above docker?
not outta the box but here's a couple of plugins for octopus that might fit the bill: https://library.octopus.com/step-templates/edcacbb5-6776-445a-9555-576ee4c3e2d6/actiontemplate-test-run-nunit https://library.octopus.com/step-templates/f70a5c02-f6c0-40d4-a59a-7157cb2c2dc8/actiontemplate-execute-xunit-tests
r/unity or r/gamedev might be better but not quite this question. My advice.. Make a simple game in unity first. The usual first game would be pong. 
Appreciate the feedback, i'll start looking into that, thanks
While I agree with you, my real problem with MVVMLight is that it's very unreliable. The author doesn't understand memory management and thus it leaks memory badly. Or at least it did when I lay used it. Since then I heard he switched to weak references that get garbage collected away some random point, breaking the internal communication in the application. Maybe this had been all fixed, but considering how many years we complained about it without anything getting better I don't trust it.
What about errors? What about unsaved changes? What about modal dialogs? There are many other interfaces that should be supported by MVVM frameworks beyond just property change notifications. 
None of these are mvvm in the slightest. Saying mvvm frameworks should support these is like saying a clock should show you the weather. You might appreciate and want those features, but they are not MVVM. And I'm confused about the features you are describing here too. What about errors? You show them in a modal dialog? Unsaved changes, you keep track of them? Modal dialog, you create a new instance and call ShowDialog? Mvvm at the core is nothing more then separation of view and data. And separation of concerns is not a new concept, mvvm is just UI centred.
The UI supports these interfaces just like it supports the property change notification interface. For example, if you put a IEditableObject in a data grid that grid will call the correct interface methods when it switches to row editing mode and back. Likewise most controls will respond to errors exposed through the correct interface. How it responds differs by the control, with a red icon + hover text being a common pattern. 
I'm not saying that they work the same. I said that you can do the same thing using `Span&lt;T&gt;`, presumably with the `Slice()` method.
I had a great experience using Caliburn.Micro. Would totally use it again.
MVVMlite 
My experience as well. Very powerful.
This is my question as well. Isn't MVVM just a design pattern? Is it so complicated that nobody will use it without a 3rd party framework? 🤔
I'm not familiar with LiteDB, but it looks like it's supported just fine so I would check permissions and make sure the code in the OnInit block is being hit.
This in addition to [https://github.com/Fody/PropertyChanged](https://github.com/Fody/PropertyChanged)
Thanks for the input. I have tested a local string variable to be modified inside the OnInit() method and it does modify the value correctly, so that code is running. The permissions are all full control on the folder in which the .db should be dropped in.
If you’re trying to create a local file on the client side via blazor, I think the browser isn’t going to let that happen. Instead have blazor call a webapi endpoint running on the server side and have that execute the LiteDB code.
Since Blazor runs in the browser that is where the permission issue is going to lie. 
That's not how web works, browser will never allow code from website to access filesystem, that's what apis are for.
Ah yes you are correct. I have since moved to the server side hosting model and have been able to resolve this.
Thanks for the insight. I have decided to use the server side model which makes more sense.
Another option I haven't seen mentioned yet is GoCD.
Have you looked at https://itextpdf.com? I've currently got a project that does a similar process, opens a template, populates and prints, but found it easier to use openxml. This is probably no use to you if you have to stick with pdf though.
Does it work if you log off the user and then log them back in? Roles don't get updated until the user resets his cookie, which logging off and then on can do.
Nope, I've tried logging in and out, restarting it, etc. It still shows "Access Denied".
Are you sure the controller method is both populating your model and viewdata correctly before sending it through to the View? And is the controller actually pointed to the right View as well? A little unrelated, but Why are you doing all of that processing in the view instead of the controller?
&gt; Are you sure the controller method is both populating your model and viewdata correctly before sending it through to the View? I am a little unsure what you're asking. &gt; And is the controller actually pointed to the right View as well? Fairly certain this is the case. The controller is Posts, and the method name is Edit. The link I am trying to access would be Posts/Edit/id, and it is at this point that it displays Access Denied. &gt;A little unrelated, but Why are you doing all of that processing in the view instead of the controller? A lot of it is just for debugging. I am new to C#/MVC. &amp;#x200B; There must be a really simple mistake here somewhere, but I've triple checked everything. I can't see anything minor.
Using Caliburn together with Ninject Factory is a nice mix I often work with. 
Views do not play nice with async methods, and you're using .GetRolesAsync(). These aren't going to be populated correctly when the View renders, so this really needs to be done in your controller method SO &gt;https://stackoverflow.com/questions/19182349/use-of-await-in-razor-views MSDN &gt; https://docs.microsoft.com/en-us/aspnet/mvc/overview/performance/using-asynchronous-methods-in-aspnet-mvc-4 Regarding my other questions: Do you have a Model created that you're populating and then sending that to the View? You already have the 'V' and 'C' in MVC, but where is your 'M'?
The GetRoles, etc. in the view I gave does not control the logic of the roles. I put those two loops in to the view quickly to debug and make sure that the user actually had the roles. I have a DBInitializer class which seeds the database with an admin account. The method creates the user and gives it the role. The role is created in the AspNetRoles table and the user has the role in the AspNetUserRoles table. If you have experience with assigning user roles, can you see any problem with the following: [https://i.imgur.com/8IueTgc.png](https://i.imgur.com/8IueTgc.png) \- This is where the admin account is created/seeded. The method to create the admin is called from within CreateUsers. (if you're wondering why it's not explicitly in the Initialize method) [https://i.imgur.com/ZX7LmNq.png](https://i.imgur.com/ZX7LmNq.png) \- This is my Startup.cs file where the Initialize method is called. &amp;#x200B; The controller whose methods I am trying to restrict access to is the Post controller, and that uses the Post model: [https://i.imgur.com/nJowdxV.png](https://i.imgur.com/nJowdxV.png)
I would recommend putting “canModify” into a constants class somewhere then using the constant instead of the string. This will help reduce possible typos (which might be apparent elsewhere in the app) as the issue. Also when you create the user it looks like you are creating the role “canAccess” every time? If so this may cause the system to get confused when checking role access. 
After startup check the database whether the user you created is actually in the database, and has the required roles. I think you already have the admin user in the database so when you want to add it to your role it finds it so the role doesn't get added. Also I found it best practice for a small scale project not to add your first admin user programmatically, but to manage it manually in the database, until you are ready to do something close to production
I have tried deleting the user and the role from the database, and running it again. It still doesn't work.
I tried deleting the user and the role from the database, and then moving the creation of the role in to the if, so it is only run once. This still did not work unfortunately.
Into which if statement? Really it should have its own check to see if the role exists and not just create the role when creating the user Also just try taking off the authorize attribute check it works, then put the attribute on but without the role see if that works. Those steps should narrow it down
The entire controller has \[Authorize\], then just the two Edit methods (GET and POST) have: \[Authorize(Roles = "canModify")\] The methods work with the empty Authorize tag, and without an Authorize tag at all. It is only when I add the role that the problem arises.
Does it work, if you remove the role authentication on the method? If so, does it work with one of the already created roles?
The only role in my system is the canModify role that I created. And yes, it works perfectly in the scenario where it's not authenticated. This is why I am so confused. The method works as intended, the role exists in the database, and the user has the role in the database. I've checked the IDs of the user and the role and they correspond to the correct user/role.
After you log in with the user on the client side in the cookie you get from the server does it contain your role?
When I inspected the cookie in the chrome dev tools, it doesn't show anything about roles anywhere.
You should read up on Identity. [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-configuration?view=aspnetcore-2.2](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/identity-configuration?view=aspnetcore-2.2) The idea is that when the user logs in they get a cookie, containing the roles. This cookie can't be altered, becouse it's signed, hence the user can't just modify the cookie to get antoher roles (ie: you can't just modify the role section of the cookie from user to admin). You need to configure the server to use cookies becouse the built in authorization model (when you write the \[Authorize\] tags) the identity manager knows the user's identity based on the cookie. I hope it helps, I have only done it once, with .net Core it might be a bit different when using .netFramework, but I belive the idea behind it is the same.
Everything looks like boilerplate ASP.NET Identity. I really don't think the issue is your permission implementation, but seeing the controller itself would be helpful. Your view has multiple functions relying on. GetRolesAsync(). Why it exists doesn't matter, async methods are not executed properly in a View. That is part of this failure unless that changed in . One of the newer .NET Framework updates. That issue is also consistent with the view being displayed properly when the user has no role. In that case,, it's checking to see if an empty list is an empty list, but when the user has a role, it's checking if an empty list contains something, and fails. Replacing those calls with a synchronous one is quick and should provide at least some additional insight into what's going on. 
So would I need to somehow add the user's roles to this cookie?
LOL cuhhhh u makin some hacker shiiihhhh der buhhh
It seems you are trying to create an extension method with InorderDo Extension methods must exist in a static class and can exist in any static class so you can create another static class called BinaryTreeExtensions for example and then place that function there
yes.
Basically yes. I wasn't the one making it when I was on a project making our backend, but as far as I can tell we were using JWTTokens to secure the cookies. I belive we were implementing it based on this tutorial [https://goblincoding.com/2016/07/03/issuing-and-authenticating-jwt-tokens-in-asp-net-core-webapi-part-i/](https://goblincoding.com/2016/07/03/issuing-and-authenticating-jwt-tokens-in-asp-net-core-webapi-part-i/)
OK, but how to keep the method generic then? thanks mate
you can declare it as generic at the function level, note the &lt;T&gt; declaration next to the function name &amp;#x200B; public static class BTreeExts { public static void InorderDo&lt;T&gt;(this BinaryTree&lt;T&gt; tree, Action&lt;BinaryTreeNode&lt;T&gt;&gt; action) { var node = tree.Root; //LEFT if (node.Left != null) InorderDo&lt;T&gt;(new BinaryTree&lt;T&gt;(node.Left), action); //ROOT action(node); //RIGHT if (node.Right != null) InorderDo(new BinaryTree&lt;T&gt;(node.Right), action); } } &amp;#x200B;
A member function of a generic class is already generic. Type T is part of the class so you don't need to do anything else. You also don't need to cast the node in the lambda. Also, in your InorderDo method you shouldn't create new binary trees for each node. Write the method so that it can operate on individual nodes.
This would be my approach to what you're doing to avoid "newing" objects for every recursion. &amp;#x200B; public static class BTreeExts { public static void InOrderDo&lt;T&gt;(this BinaryTree&lt;T&gt; tree, Action&lt;BinaryTreeNode&lt;T&gt;&gt; action) { void InOrderDoInternal(BinaryTreeNode&lt;T&gt; node, Action&lt;BinaryTreeNode&lt;T&gt;&gt; act) { //LEFT if (node.Left != null) InOrderDoInternal(node.Left, act); //ROOT action(node); //RIGHT if (node.Right != null) InOrderDoInternal(node.Right, act); } if (action == null) throw new ArgumentNullException(nameof(action)); InOrderDoInternal(tree.Root, action); } } &amp;#x200B;
Once again these are just features which are not related to mvvm, nor required. WPF alone has three different inbuilt mechanisms for validation. Validation rules require no interfaces for instance, and can be reused across different bindings. So I do not understand when you say that these are important features of mvvm, they are not. Mvvm is a design principle, like SOLID is, but they have no concrete implementation, nor do either describe exactly which parts you need to get there. As such you technically don't need anything for mvvm, since just like the Single Responsibility Principle, it's the result that counts.
I want only to help people with free [tutorials. No](https://tutorials.No) self promotion
From the link I've told you to read _three times_ now: &gt; **But it's not spam! I worked hard on that, I make no money from it, it's original content! I'm not a spammer!** &gt; We're not making a judgement on your quality, just your behavior on reddit. Your stuff's probably amazing and someone would be really interested in it but... &gt; If you submit mostly your own links and your presence on reddit is mostly for your self-promotion of your brand, page, blog, app, or business, you are more likely to be a spammer than you think! [Read the FAQ](http://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F) and make sure that you really understand that.
But what does it do? I've tried reading your monolithic classes and it seems to do basic match in console? Am I missing something?
Currently it does only math and basic memory management. I had to cut multiple features so it was not was too big for the scope of the semestral project. I plan to extens if further after it gets graded. At leat I would like to make it touring complete.
But what do you mean when you say it does math and basic memory management? The .Net framework does that, how would someone use this?
I simplified it for you and threw it up on github if you want to take a look: [https://github.com/mikeruhl/RecursiveBinaryTree](https://github.com/mikeruhl/RecursiveBinaryTree)
thank you very much. I see where i f\*ed up, thanks again
thank you very much. I see where i f\*ed up, thanks again
Yeah, that's the one I was refering to which couldn't print out the pdf. Or does it? 
So the other thing to try might be to take the authorize off the controller, and look at the controller's user property. You can put a breakpoint in the controller's constructor and check in there You can cast the user to a claimsidentity, and then look at all the claims, which should have your role. Make sure your claimtype is a role as well. If your role isnt there in the claims, then you need to check the SQL database to make sure the user is assigned to the role.
Pleasure. To get jobs you need to conform to the requirements of the person whose job is to quickly scan CVs and decide who is interviewed and who goes in the bin. Increasingly, the people who do this don't know what the words in the CV mean, but they know which ones they are looking for. Also increasingly, they will use an algorithm or simple search function to do this for them. Either way, job title matters. Meanwhile, there are people who won't like your choice of job title unless it's something they consider worthless, until, somehow, you are as old as them and have coded for as long as them. Ignore these people, play the stupid job titles game when you have to, and get good at what you do.
C number
Works on my machine. Both ways do, matter of fact. I've switched it over in case there are other browsers with your problem. Thanks!
Good job! Why are you using System.Threading?
Well I would like to host it on one server, with 1k3 members since it's a bot made from a game, but I'll look at it, hopefully they have a trial thing too 
For my first WPF/MVVM project I rolled my own minimal MVVM framework that I added to as required. The reason for this was to get some idea of what it was really doing. It started as a simple base class for view-models that didn't do much more than implement INotifiyPropertyChanged. From there I added an implementation or two of ICommand, and something about weak reference handling. I also used NotifyPropertyWeaver, which is what they called Fody/PropertyChanged in those days. I believed strongly at the time in not using an event aggregator, and wasn't a fan of service locators either, so had massively overly parametrised constructors all over the place. Anyway, long story short, MVVM Light.
Visual studio includes that by default when you make a new class
You and others may disagree, but I don't see a benefit in naming a static extensions class shorthand like `BTreeExts`. While you *can* call methods like `BTreeExts.InorderDo(...)`, extension methods are usually just calles from the type they're extending, so you generally never have to explicitly use the name of the static class. Since that is the case, a longer, more descript class name would be more beneficial. `BinaryTreeExtensions`, for example, would be more descript and helpful from a maintenance and readability standpoint.
I believe I am on the side of "design, codestyle, organization and architecture must be paramount". I try to find a balance but I am not sure if I am actually on the extreme end -- some times, I feel as though I just work with people who'd rather keep throwing code at a problem until it sticks and, once it sticks, move on to the next problem. The problem with their approach, however, is you end up having to change several classes for a single requirement change, related code is spread out among different projects in different repos (many of which are doing the same thing), wheels keep getting re-invented, code readability is greatly diminished, codebases are very inconsistent and, most importantly, more and more bugs keep getting introduced.
Just get in the habit of organizing your codebases by namespaces and ensuring each type declared with either the **public or internal** access modifier is in its own file. This costs you very little to do upfront but can be a pain to do later, not to mention the fact that you are literally creating technical debt that is easily avoidable. Also, to the best of your ability, make sure that your logical structure matches your project file structure. C# templates (like projects, classes, interfaces, etc.) will automatically generate appropriate namespaces for you based on the root namespace of the project (which is, by default, the initial name of the project) and what the relative filepath is to the file that has the type. So, a class in the `MyCompany.MyProduct` project in the `Logging` folder will have its namespace generated as `MyCompany.MyProduct.Logging`, assuming default settings and behaviors are enabled anyway.
Are there any examples of the language itself? I didn't see any examples though I admittedly didn't look through the repo with a magnifying glass, either.
Doesn't sound too extreme to me. I always ask myself: am I discovering this pattern/abstraction or introducing it? Introducing almost never helps me or anyone else while discovering and making it more explicit often helps immediately.
https://www.google.com/search?ie=UTF-8&amp;client=ms-android-samsung&amp;source=android-browser&amp;q=unity+rts+tutorial seems to have a lot of good results
Generic collections (HashSet, Dictionary, List, etc), IEnumerable and friends (Select, Filter, Aggregate, Skip, Take), events, nullable types, Threadpool/Tasks/AsynAwait
Removed: Rule 4. You will have to provide only the relevant source code causing the error and include the exact error message and stack trace.
Pretty comprehensive. IEnumerable / LINQ is really great to master
Echoing what was already said, if you know the area you'll be working in (such as web development) I'd get familiar with those concepts as well. If you will be doing web dev, I'd take a look at MVC and OWIN.
I'd bone up on all the major language features, many of which /u/statistologist mentioned already, at least up to C# 7.
Maybe not an answer you were looking for but change your mentality from being "ahead of the other interns" to just focusing on improving yourself to be better at your job. Coding skill is obviously a vital skill but there are tons of good coders. Companies also want people who are collaborative, good at communication, and team players. If you focus on success of the project over doing better than the interns I personally believe it will produce better results for you. On the technical side, /u/statistologist has gotten them pretty much all covered. Those are general C# tips that are very useful. To provide you with more, we'd need to know what you will be doing in C#.
What's been mentioned plus extension methods, access modifiers, in fact the entire list of C# keywords. This is more .Net than C#, but maybe have a look at the popular frameworks for unit testing, mocking, ORMs, in fact anything you can do in Java, learn how to do that in C#. &amp;#x200B;
[Read this book](https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670). Its 5 years of work experience summarized into 1 week of reading.
This is because you're declaring it as an extension method (`this BinaryTree&lt;T&gt;`) but those don't get declared in the class they're extending, they have to be declared in some other, static class. So, option 1: Instead of declaring it as an extension method, just declare it as a method. Option 2: Move it into another, static class. But I would recommend a third option: Instead of having a function `void InorderDo(this, action)`, have the function `IEnumerable&lt;T&gt; InOrder()`, which could be defined as: IEnumerable&lt;T&gt; InOrder() { if(this.Left != null) for(T t : this.Left.InOrder()) yield return t; yield return this.Value; if(this.Right != null) for(T t : this.Left.InOrder()) yield return t; } Then you can .Select or .ForEach or whatever else you want, with all the power of IEnumerables.
Other people have mentioned LINQ which is a great idea to study up on. I would add Entity Framework to that as it compliments LINQ well. The best thing IMO that you can learn that will make you stand out from others is some software architecture and design patterns. Dive in to some MVVM.
I'd take a look at immutable collections: https://msdn.microsoft.com/en-us/magazine/mt795189.aspx
As far as I'm concerned, it is an important feature for UI applications. And that should be enough. But what do you think an MVVM framework should offer? 
P.S. Don't bother bringing SOLID into this. That kind of wankery just lowers my opinion of your argument.
That’s bout do it.
You ask this at an interesting intersection point in .NET. There is .NET Core and then 'regular' .NET. Some of which this is going to depend on the project and the type of project. Legacy projects are most likely .NET but .NET Core is becoming more and more common. Depending on the type of project you will have different avenues as well. Desktop applications can mean learning desktop frameworks such as Windows Forms, WPF, or some other third party library like Qt. While web applications would be learning ASP.NET preferably ASP.NET MVC + Razor or Blazor and Owin as mentioned. This could also branch into HTML, CSS, and JavaScript which opens up even more as JavaScript frameworks seem to be a dime a dozen. It's probably pretty safe to assume there will be database communication so I would throw in Entity Framework, Dapper, and System.Data. Also look into unit testing with a few frameworks like MSTest, NUnit, and xUnit. Dependency Injection frameworks like Autofac, StructureMap, and DryIoc. Logging frameworks like log4net and NLog. Other frameworks like AutoMapper, MediatR, NSubstitute. These are all language specific. To make you a better candidate overall - also consider learning things that transfer languages like Unit Testing (Red, Green, Refactor), Design Patterns, and how to write clean and efficient code. Look at how to automate the process using Continuous Integration which could involve Jenkins, TeamCity, CircleCI, TravisCI, etc. You should also look at what tools they are using - whether it be VSCode, Visual Studio, or JetBrains Rider. Instead of researching, try to actively apply all of this to a project of your own where you can learn about some of the trouble spots.
When I was coming out of school, the hardest thing for me to learn was just how to work inside of a framework. In school, at least in my program, we tended to be fairly close to the metal. A lot of school projects were spent focused on implementing data structures, or implementing algorithms. When I first started working in C# I was inclined to try and do everything myself. Since then I have learned that most of the low level stuff is already done for you. In fact often times .NET will provide you abstractions upon abstractions, and figuring out the right tool for the job I needed was the hardest part of picking up C#. Now my school program focused primarily on C++, so you may not have the same challenges coming from a Java background.
Linq 
We're starting internships end of the semester (5 months) and can tell you what previous students have told us. There's a month-long training session that all new hires must attend so I wouldn't panic too much. Best of luck
Get Rider or ReSharper, they’re free for students. Absolutely fantastic code assistance and tools which really helps you both learn and be more productive.
This is the best advice, right here.
Specifically the method syntax
Thanks, Clippy
I would suggest not to focus on language specific things but object oriented topics. Whats a class, interface, abstract class. What is a property what is a backing field. Last but not least: dependency injection. Cant stress enough the importance of this.
basic knowledge - data structure (e.g. HashSet, List, Dictionary, tuples) - LINQ - [what's new in C# 6,7.0~7.3](https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-6) some best practice for the following framework (depends on which are currently using by the company) - .net framework - .net core - entity framework - MVC 
Get ready to never want to write java again. I think half of the power of C# is the IDE, it has made me lazy and fat and unable to type out full lines of text.....in a good way. Learn what VS can do for you.
/u/EpicTheSquid If you know some basic LINQ I'd be blown away as a supervisor of an intern. That and see what the company makes. If they make web apps, learn some ASP MVC. Desktop apps? WinForms or WPF.
This is easily the cleanest cheat sheet I've seen for Linq: https://pbs.twimg.com/media/DPvRrPqWkAEMoPf.jpg In addition, I'd suggest reading up on deferred execution (e.g. know why `items.Where(i =&gt; i.Name == name)` isn't the same as `items.Where(i =&gt; i.Name == name).ToList()`). If there's time, read up a bit on generics; they're the the reason Linq works and also play a huge part in other parts other the framework.
Starting as a intern you are not expected to know everything and the bar is set low. Asking for help when you don't understand something or need guidance will make you shine above everybody else.
Should be noted the query syntax is still worthwhile. It's like SQL "in the right order"
As someone that has university interns, the biggest thing for me is knowing when to ask for help instead of spending a ton of time trying to figure it out and not understanding it fully. The other thing is make sure you are seeking out code reviews. Especially if they have a software like code collaborator. You can have lots of discussions in the review, which is all learning. When you are given a task, think about the problem and do your best to come up with a solution. Then ask for feedback on your approach, maybe whiteboard it with your lead. This allows you to build your skills by working it out in your own, then provide additional feedback/possible alternate solutions before you write a line of code to make sure you are on the right path. The big no no for me (and I had a guy like this) was asking too many questions without providing any input or possible solutions. Basically telling me they were looking for the easy path and not interested in learning. At the end of the day, you will have the opportunity to learn tons without judgment on your skill level. Use that opportunity to do just that, don't be afraid to ask questions, ask for tips. Good luck man!
So one question cant i put my own work such us my simulators in C# in this subreddit? 
Why is there a blue circle remaining on right hand side of the skipwhile example?
Ask questions, own your mistakes, and don't be a know-it-all even when you think you know better. You're there to learn, and they are there to help you. A lot of the CS theory you've learned is going to be fairly useless, and a lot of the technical skills you don't have will be developed. If you're unwilling to communicate with your supervisor, or try to show off, you're effectively shooting yourself in the foot. You are an intern, you are not meant to bring value. You are there for them to develop into a professional with value. You will likely not even get to work on anything that impacts their bottom line for quite a while.
Yes, of course you can. We just ask that you follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion) We ask that you also submit links to other content and/or engage in comments and discussions outside of your own submissions. Bottom line is that reddit does not serve as a medium primarily to promote your own content; it's not an advertising platform. The opening line on those guidelines is: &gt; "It's perfectly fine to be a redditor with a website, it's not okay to be a website with a reddit account." - Confucius Right now, your conduct on reddit is falling into the latter.
Confucius say, man who sit on upturned tack, rise above all. ***** ^("Just a bot trying to brighten up someone's day with a laugh. | Message me if you have one you want to add.") 
Just to simplify things, if you try to return a hard-coded object does it show up in the response?
Show up on time. Be the first to realize that you know absolutely nothing. All college did was show that you are capable of being taught. If you realize this then you will be light years ahead of everyone else. I have seen new grads get firedfor thinking they know everything. Learn to be self sufficient. Be eager but not too eager. Respect personal space. Know your limits. Try to solve it first but if its too tough, ask questions early. People suck at time management. That is the strongest skill you will ever learn. 
I think the most important thing to do during your internship - and this is what really propelled me forward during my internship with Oracle - is to seek out the most proficient developer. This really has to be on your first day. But find the best developer you can find and beat him up. That way all the other developers know you ain't no punk ass bitch and they'll respect you for it.
Removed: Rule 3. Perhaps /r/cscareerquestions would be a more appropriate subreddit to ask in.
Yep. And beyond this, I'd recommend reading some of the industry books out there. If you want technical mastery in c# get Jon skeets books 
I've read recursive enumerables are performance heavy. I use them anyway.
Hah, yeah sorry I didn’t clean it up after slapping it together.
A lot of technical items here. If you really want to be ahead, then start writing in C# for the next month. You're going to find that `data structures and algorithms` tends to be the smallest part of your job (in many cases when developing C# applications). And understanding clean code, good naming patterns, and of course language/framework features will get you much farther.
Get ReSharper. It’s free for students. Learn it and visual studio. Learn clean coding principles and SOLID. It may not help with school but you’ll be way ahead of your peers when it comes to how things are done in real life outside of school. 
https://docs.microsoft.com/en-us/dotnet/api/system.linq.enumerable.skipwhile?view=netframework-4.7.2 That's how it sounds. New one to me, too.
ReactiveUI, it is multiplatform and your app is resposive. 
Learning how and when to use interfaces and how to make good unit tests will take you far.
Resharper is so slow. I can't stand it.... 
Having been one and hiring interns over the years, fundamentals are key. I would start with this: https://app.pluralsight.com/id?redirectTo=/library/courses/48850dfa-8620-48b9-b107-9db26d07061f https://app.pluralsight.com/id?redirectTo=/library/courses/48850dfa-8620-48b9-b107-9db26d07061f It’ll help thru your internship and beyond. It is unfortunately a paid course; although, you may want to check it out via the free trial.
The Coding Den
Strings are evil. 
I would upvote twice if I could
Recently switched to roslynator. Stuff I miss, but for enterprise scale solutions I don't see myself going back. It was in my way more than it was helping.
here ya go, brother http://aka.ms/csharp-discord
I basically came here to say this. I’ve interviewed people before. I’d take an average coder with a great personality and the potential to grow over someone who wants to “be ahead”. If your role is anything like every development job I’ve had, you’ll need to write code but you’ll also need to interact with people. You’ll find that a lot easier if they like you. 
I’ve only had to clean the cache every so often but haven’t had many problems. I’m on a 3 year old laptop and would for sure recommend enough RAM. I generally load solutions of 500k lines or so and 20+ projects
I cast one vote against ReSharper.
I came here to point OP to pluralsight. I’ve had my own subscription for years and it has been a tremendous resource for getting up to speed on a variety of topics. 
learn debugging really well learn visual studio (ctrl -, f12, ctrl f12, ctrl ,)are your friends also shift f12, alt1 etc.. it’s not particullary something for internship but it will be useful later on ask questions, make mistakes and learn from them think of why something was done the way it is? could it be better? no? why not? yes? how? find someone you like and learn from him like a menthor look and learn some design style (pattterns or whatever) learn multi-tear apps learn everything you can about security/scalability/speed from senior people learn how to commmunicate with pms bosses clients colleagues copy/paste everything you can if you need something to be done and you know it is the right way. on the 10th time you will know what the code does. don’t worry about it at the beginning the most important thing is to solve the problem with code then comes speed and code quality it needs to work CORRECTLY there are people that depend on it to work right remember that happy new year:)
80% of C# programming is just configuring these class libraries.
Visual Studio makes every other IDE feel like a child's toy.
OWIN concepts to study for an API dev role: -Kestrel reverse proxy config -The pipeline -Custom middleware -Action filters -Dependency injection
Not every job feels like a prison, just Oracle jobs.
Understanding delegates (Action, Func, Event) and Task was probably the most difficult and most recurring theme in all I did at my internship. Everything else seems like a 1:1 map from another language. Also Linq 🙂
To add to this, knowing LINQ is about three things: - knowing all of the possibilities that LINQ provides (its a big subject) - knowing when LINQ is not the right tool for the job - knowing when LINQ is being overused and is creating an unsupportable nightmare
I've been using Where() instead of OfType(). I had no idea that existed.
/u/kaisinel runs the C# inn and it's a quality resource.
/u/Kaisinell runs the C# inn and it's a quality resource. 
ReSharper is an excellent tool if you’re just starting put with C#, coming from a language such as Java. Its suggestions teach you how to write idiomatic C# code when it detects some non-idiomatic C# code.
Well, I would take a look at collections, LINQ and C# programming patterns or guidelinea. The guidelines are easy to find, I think microsoft has one. Also, do some exercisez on the core features of C# , which have been mentioned on other comments, you can tey the website exercism.io. But, most important of all, be humble, keep an open mind and dont be afraid to ask questions! You can do it. Wish you luck.
I believe it is that your types dictionary isn't returning types, it is returning objects. Try changing types dictionary to &lt;EAnimalType, Animal&gt; to &lt;EAnimalType, Type&gt;. Also, I'm not exactly sure what you're using this for, but couldn't you just use maybe a delegate of some type do return the properly typed object? It just seems like this could be done differently.
Get used to finding things on NuGet and the fact that most modern Microsoft stuff available to you in C# is on GitHub these days. If you're going to be getting into [ASP.NET](https://ASP.NET) Core then definitely become familiar with dependency injection ("DI"). A lot of people use DI outside of [ASP.NET](https://ASP.NET) Core as well, so it'd be good to figure that out. It's not typically emphasized in school if it's even brought up, and it's a bit strange at first. Eventually it'll just click and become second nature to you though. Beyond that, I'd say brush up on your data structures and algorithms. In school they would probably focus on the theory, complexity, and implementation, but it's very important to learn how to actually use them in practice. As others have stated, you're going to want to use the generic collections whenever possible. I think if you have a good work ethic, are humble enough to ask for help, and pay attention when you receive peer review, you'll already be ahead. Remember, it's not about being the rock star developer. It's an internship. Get everything you possibly can out of it so that when you start interviewing for FTE or contract work in the future you'll find something more easily. Less interviews == less whiteboarding. Sounds good, right?
&gt; Try changing types dictionary to &lt;EAnimalType, Animal&gt; to &lt;EAnimalType, Type&gt;. Sorry, that was a typo. My actual code is already as you suggest. I've edited the main post to correct the typo. I'm using this because I need a way of referencing a set of properties of one class from another class. The properties' types are all derived from a base class. Currently, I'm using an enum to fill in for the properties' names and trying to store the values in the dictionary accessed by the enum.
 public Animal this[EAnimalType eAnimalType] { get { // This line causes several errors. return (types[eAnimalType])animals[eAnimalType]; } That line is also silly. This is what you're trying to do... 1. Use eAnimalType to fetch a value from animals. `animals[eAnimalType]` 2. Cast [1] into a type of determined at runtime. `(types[eAnimalType])animals[eAnimalType]` 3. Cast [2] back into an `Animal`. `return types[eAnimalType])animals[eAnimalType]. Because step 3, the `return` statement, always needs to return an `Animal`, there's nothing you can do in step 2 that will accomplish your goal.
I see. I thought it would work the same way as a method of type IEnumerable being able to return any class implementing it. Is there no way to accomplish what I'm trying to do?
It’s not clear what your goal is, but no, a dictionary cannot know the derived type at compile time. In your scenario, I would simply have one list per animal. That’s not as clean, but you get proper static typing.
Hey! In case you want another c# discord, here you go🙂 Our official Microsoft shortlink: https://aka.ms/csharp-inn-discord Incase you prefer a discord link: https://discord.gg/Bfme3PD
RTS duhhh should of thought of that, thanks
Does it work if you use ToList rather than ToListAsync? Do you have any filters that might be catching the result?
You should read the man page on open and look at what it returns
 Upon successful completion fopen(), fdopen() and freopen() return a FILE pointer. Otherwise, NULL is returned and errno is set to indicate the error. So basically what you need to do is get a file descriptor from `fopen` and then read it using `read()` into a buffer. 
Anybody can learn to code. Work on those "soft skills" that developers are notoriously bad at.
Eh. EF and MVVM tend to be more application specific. Unless s/he was specifically told one or both will be part of the internship duties, I'd put them on the back burner. Plus, design patterns aren't really something I'd dive into without a solid understanding of the language and framework. There are good reasons to pick a particular design pattern in a given situation, but that's not something a person new to .net should tackle first. With only a month before the internship starts, linq, generics, and async/await would be safer bets. Even that much might be a bit much depending on how much free time s/he has in the month, but all are used pretty regularly throughout all areas of c#.
Removed: Rule 3, Rule 4.
On mobile so I'll follow up in the morning... You could use dynamic variables, though you'll need plenty of unit tests since your errors will be run-time instead of compile-time. However, I'm not sure you really want to go that route. Can you expand on what you're trying to solve? Why do you need to know the subtype instead of relying on the base class? Usually this means you're not correctly doing abstraction or that you should be using composition instead of inheritance. Can you go into more detail about the use case and everything? Don't if it's going to reveal too much company info. 
If I understand correctly you want to store various animals but be able to retrieve them in their proper types. You can use a generic method for this by calling method&lt;T&gt;. Not however that even though it is not 100% type safe since by calling method&lt;T&gt; you are doing a cast, which could allow you to add a dog of type bird. class Program { static void Main(string[] args) { var myBird = new Bird(); var myDog = new Dog(); var myAnimals = new AnimalCollection(); myAnimals.AddAnimalOfType&lt;Bird&gt;(myBird); myAnimals.AddAnimalOfType(myDog); // This works too since &lt;T&gt; is known at compile time so correct "version" of the AddAnimalOfType will be used var retrievedBird = myAnimals.GetAnimalOfType&lt;Bird&gt;(); var retrievedDog = myAnimals.GetAnimalOfType&lt;Dog&gt;(); var retrievedSquirrel = myAnimals.GetAnimalOfType&lt;Squirrel&gt;(); Console.WriteLine(retrievedBird); Console.WriteLine(retrievedDog); Console.WriteLine($"retrievedSquirrel is null: {(retrievedSquirrel == null)}"); Console.ReadKey(); } } public interface IAnimal { } // Made this an interface so you cannot add an object of type simply Animal to the collection, otherwise works the same with a class public class Dog : IAnimal { public override string ToString() { return "This is a dog"; } } public class Bird : IAnimal { public override string ToString() { return "This is a bird"; } } public class Squirrel : IAnimal { public override string ToString() { return "This is a Squirrel"; } } // Only one animal per type here, but could be a Dictionary&lt;Type,List&lt;Animal&gt;&gt; just as well with generic method List&lt;T&gt; GetAnimalsOfType&lt;T&gt; public class AnimalCollection { private Dictionary&lt;Type, IAnimal&gt; Animals { get; } = new Dictionary&lt;Type, IAnimal&gt;(); public void AddAnimalOfType&lt;T&gt;(T animal) where T : IAnimal { Animals.Add(typeof(T), animal); } public T GetAnimalOfType&lt;T&gt;() where T : IAnimal { if (Animals.ContainsKey(typeof(T))) { Animals.TryGetValue(typeof(T), out var animal); return (T) animal; } return default(T); } } Output: This is a bird This is a dog retrievedSquirrel is null: True &amp;#x200B;
&gt; What should I know to be ahead of the other interns? Focus on being your best self. Don't worry about being "ahead" of the other interns. Be *collaborative*, not *competitive*. Help your team mates out. That's the difference between a workplace and a college.
An `IEnumerable&lt;Animal&gt;` will always return things that look like an `Animal`. The key word here is "looks like". Consider the class `Bird`. It implements three interfaces: * System.Object * Animal * Bird Given this information, Bird b1 = new Bird(); //look at a bird as if it were a bird Animal b2 = new Bird(); //look at a bird as if it were an animal System.Object b3 = new Bird(); //look at a bird as if it were a object In all three cases, you have a bird. But you are looking at it in three different ways. 
Bonus lesson time. This is a bad design: public class Animal public class Mammal : Animal public class Bird : Animal Yes, I know a lot of (very poorly written) text books use this example, but this is not what you'd write in the real world. Instead you would use this: public class Animal { public Animal(EAnimalType animalType) { AnimalType = animalType; } public EAnimalType AnimalType {get;} //read-only } Inheritance should be used to add **functionality**, not information**. For example, the `AnimalType` property itself is functionality. The type of animal is information. 
YO ARE RIGHT REDHARPER AND SOLID 
Ask your supervisor. They may have specific tech stacks they want you to use. One specific area you should focus on is the business logic. Knowing the rules and lingo of the industry is half the battle. For example there maybe specific file formats like HL7 is used in the healthcare industry. This will give a big advantage in meetings with sales etc. because most of it is industry jargon.
I've posted this before but I've made a good amount of progress on it since. It's called Fantasy Critic, and it's essentially fantasy football for video games, wherr players compete to draft the games that and up with the highest review scores. Github: https://github.com/SteveF92/FantasyCritic And here's the site itself: www.fantasycritic.games 
The enum here seems kind of pointless to me. You can know what type the animal is because it is that type. I'm not sure what value the enum is providing. Do you have any idea?
You say this is a bonus lesson but I think this really is the most important point. It struck me as very odd that there were derived types AND an enum to specify the type. Pick one. In this case, I think what you're saying makes sense since the derived types aren't really providing any value that we can see.
Where do you set the size for the picturebox so it would definitely fit the image you’re giving it?
I set the size of the picture box to the same size as the resized image if thats what you mean but even without the picture box if I save the image it is not the correct size.
EF is nice, but it’s pretty limited. It will only work if your project is set up in a very specific way already or if you design your project around EF from the very beginning. So it’s good to know that it’s there, but not much reason to learn it this early 
Resharper is not good for new devs. It does a lot for you that prevents you from learning. It very quickly becomes a crutch where people know how to use resharper, not the language itself. For similar reasons, I usually suggest people spend at least some time writing code in a basic text editor. It forces you to know the language instead of just learning shortcuts
Thanks ill check it out
thankyou ill join them both :)
I called it a "bonus lesson" because his original questions were still worth answering. In the past I would say, "no, your design is stupid. I won't tell you the answer because I want you to do it this other way instead". Then as I matured I realized that (a) his design may be correct if not for the example being simplified, (b) he may not have a choice in the matter, or (c) he's just trying to learn a technique and couldn't think of a better example.
Resharper and Rider will go a long way with teaching you how to transform standard logic constructs to linq and other language specific nuances. I run rider on linux. 
am not sure what do u mean . but am sure that am doing some thing very very special and complicated, doing a windows service that act as both client and server is not that easy , specially if it serve a very big project , that lived for more than 6 years and have more than 700table and 10k procedure , NOT EASY AT ALL . but thank you any way .
Thanks bro , really useful stuff \^\^
I always have something brewing on my github, but I am pretty proud of [CookedRabbit](https://github.com/houseofcat/CookedRabbit). It's a high performant RabbitMQ As A Service.
The cast `(types[eAnimalType])` is unnecessary, as the getter does not return that type, it returns `Animal` and the value in `animals[eAnimalType]` is already of that type. It's also rather odd code, as the other posters have noted.
On the non technical side, when you are offering ideas on where you think the code can be improved make sure you carefully word your critique of the current code. You don’t know who wrote the code and if they will hold a grudge for the new guy of all people criticizing his work. Also when working with large legacy codebases, you’ll run into things that just don’t make logical sense why they are implemented the way they are. In those times you have to stop and remind yourself that there is likely a reason why this odd implementation was used and instead of thinking about “fixing it” (EVERYBODY hates a cowboy coder), figure out what was the initial problem that caused the last dev to resort to this odd structure. OPTIONAL BONUS: This is by no means necessary, and may not apply if the documentation already exists, but make a UML of whatever project you are working on. My first dev position I received a surprising amount of praise for making a uml of my current project. We had some outdated diagrams and I thought it would be a good chance to understand the complex codebase. My manager mentioned learning to code is one thing but going out of my way to learn our code is another.
I have not used that for some time, but ... I assume that ProgramAppDomain is the one you are unloading. You call Assembly.Load in your main app domain just to get the assembly full name and pass it to ProgramAppDomain. There is definitelly a better way. 1) I dont think you need to load the assembly into the main domain at all. 2) If you need/want to load it, there is some method thet loads metadata only and allows you to unload it later (and load new version)
The problem is indeed in resizing the image. I'm quite rusty in using System.Drawing, but if I understand it correctly, it uses center of the pixel as its coordinates. So first pixel has coordinates [0.5, 0.5], not [0, 0]. Anyway, quick and dirty fix would be (I checked it, it works for me): var ratioX = (float)resized.Width / (float)cropped.Width; var ratioY = (float)resized.Height / (float)cropped.Height; resize.DrawImage(cropped, new RectangleF(-0.5f * ratioX, -0.5f * ratioY, size.Width * 1.5f, size.Height * 1.5f), new RectangleF(-1, -1f, cropped.Width * 1.5f, cropped.Height * 1.5f), GraphicsUnit.Pixel); The multiplication of total width and height is to ensure that we write on all of the output. Important thing is that ratios of destRect and sourceRect are identical. I haven't quite autopsied to the detail why my solution works, so I'm sure there's a nicer way to do what you want, but this may at least put you on the right track if you give it some more time.
Handlr: Reddit with tags and RSS feeds ( handlr. Sapico.me ), currently used as a self hosted community feed for some cities Own shop platform, need to improve order management. Demo at beta.Belgianbrewed.com 
*Graphity*: A .NET Core library that integrates GraphQL and Entity Framework Core with minimal effort. I started this as more of a concept than a real project, just wanted to see if I could expose a `DbContext` as a GraphQL API, building Entity Framework Core queries on the fly, being sure that we only query what is necessary and be as efficient as possible. Turns out that it's not really all that hard! Since then it's become somewhat a labour of love and I've been tweaking and adding functionality. Today I thought would be a good idea to make it v1.0, yay! It's available as a [Nuget package](https://www.nuget.org/packages/Graphity) or you can view the code itself on [Github](https://github.com/WiredUK/Graphity). Would appreciate any feedback.
That’s quite a vague question. Why do you need to overload something? Which method? And which operation of CRUD do you want?
Guessing you are talking about post, get and such. Try looking at attributes such as Httppost attribute
I am working on a small interpreted programming/scripting language made in C#! The interpreter/compiler is called HelloCompile. Performance is pretty good, preparation on a 10 000 line program is much less than a second.
Great project! Is that hosted in Azure? &amp;#x200B;
I'm still working on my NETworkManager. An all in one tool to manage networks/servers. https://github.com/BornToBeRoot/NETworkManager I've posted this about 6 month ago. Since then, i implemented a lot of new features, fixed some bugs and rewrote/optimized some functions. It's available in 4 languages now.
I found a method called `Assembly.ReflectionOnlyLoadFrom(path)`, which loads the assembly just for reflection and not execution, and I can then access its name and load it that way without doing `Assembly.Load()`. However, I started running into the same problem as described at the end of the post - loading into the AppDomain without using `Assembly.Load()` throws a FileNotFoundException saying "Could not load file or assembly 'd446ee72-5db5-4105-bf93-7e8325877726, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' or one of its dependencies". For whatever reason, loading the assembly by reading all bytes works, while loading using the file path or by ReflectionOnlyLoad throws this exception. And yes, I'm unloading ProgramAppDomain. I have to load it like this, because I can't unload a loaded assembly without unloading the entire domain.
this will be buried at the bottom but here goes. I was a contractor over at McD's headquarters fixing their outdated excel applications. I made friends with another contractor who was doing the same. We're both completely different programmers. He's the typical socially awkward inept math whiz guy who can just start typing code out of nowhere. I was an ideas man. I had imagination. Basically i would see these projects McD's gave us to *fix* and my bro would just start typing away. I would just sit back and think "why?" why does this need to be fixed in this way, and why not scrap it all together and just use something. My friend would type away pages of code and i would just interrupt him saying "excel already has a free add in that does what you're scripting, so why re-invent the wheel?" In my current job at a law firm, the previous guy was heavy into powershell. A lot of it was unnecessary because there was already free shit out there that did what he intended to do, and it was better. My thing is that i know whats out there and i know when to blow smoke up my own ass coding and when to just realize that what i'm doing has been done before. I write in all languages and i really don't have a preference which is why i'll easily swallow my pride and write whatever it is i'm writing in the best language it can be written. So my advice... imagination is what will separate you from other coders. 
Self hosted right now, it's costing me way less
[removed]
So many people fail to read rule 4. If you want people to take the time to help, then take the time to structure a proper question. 
I've had similar issues with assembly unloading, the only solution I've found to reliably unload an assembly is to load it in a seperate process that can be killed and restarted.
Once an assembly is loaded it cannot be unloaded or replaced - unless you have it in an appdomain. Use different names for the assemblies. You can compile them into memory so you don't have to touch the disc.
I know that you can't unload assemblies without unloading the domain, which is why I load it into an AppDomain. I've just finished rewriting the thing to use different names for each version as opposed to replacing one assembly file, but I'm encountering all sorts of inexplicable black magic. Right now I'm telling it to load the file "asm0.dll" in the directory "Saves/b84babfc-bba3-4717-90c2-31a35ea5dcfb", which fails, but when I put the assembly into the "Saves" directory directly, it loads it fine. I was going to assume it has something to do with loading dependent assemblies only in the parent folder, but the fact that it works if I place the assembly file in the parent makes me all the more confused.
You shouldn't have to save it anywhere.
Lately I've been working on a Slackbot, using the Noobot framework, that tracks karma like the old IRC karma bots used to: https://github.com/Mattsi-Jansky/termibot
Clone of the old game, Ascendancy. Now using the Unity platform. Maybe mobile only? Haven’t got that far yet.
Ok, I originally wanted to save the assembly to be able to load it later (when the user quits and opens a save), but I suppose that because I save the plaintext .cs files, I can recompile the assemblies every time it's needed. I'll give it a try then.
C#
How do you unload the previous version of the assembly? (In other words, destroy the old app domain?) You can only load multiple copies of the same assembly identity if there is no load context. Otherwise the Load method returns the already-loaded assembly. Take a look at https://docs.microsoft.com/en-us/dotnet/framework/deployment/best-practices-for-assembly-loading. I suspect that will also help you with your second question. Note: if you’re intending to execute user-provided scripts, I would strongly consider compiling their code to an executable and running it in a sandbox (VM, container, etc). 
What you want is dependent types which are far beyond C#'s type system (beyond most languages' type systems, in fact). In a dependent type, the return-type of a function can depend on the **value** of its input and as you correctly saw, there's no syntax for that. The casting you do in in the indexer's get does nothing because it'll only work if the object you're casting is already, say, a bird. If it isn't, the downcasting from Animal to Bird will fail, and if it is, then it's a no-op (unless you overrode the explicit cast operator), because the return-type of the indexes (Animal) will delete the **static** information that you have returned a Bird. At runtime, you'll still get a bird, but there's no way to communicate this information to the caller of the indexer. With dependent types, you indeed could write something like this (pseudocode). Target bird = typeof(Bird) Target mammal = typeof(Mammal) Target animal = typeof(Animal) public Target(x) GetValue(EAnimalType x) { ... } But that'd require a **type-level function** Target(x) which takes the value of the argument x. For this to work, the compiler would have to do two things: 1. Do compile-time analysis on what the value of x will be, and 2. Support type-level programming, allowing you to implement Target. The short answer is that you can't do this in C# and the caller has to cast the return value to the specific type. If you're interested in dependent types, there's a language called [Idris](https://www.idris-lang.org/) which implements them, but it's not for the faint of heart.
IEnumerable can't return any class that implements it because it doesn't know how to construct arbitrary implementors. new \[\] {1,2,3}.ToList is only available because someone wrote ToList for lists specifically. If you had a class MyDoubleLinkedList, there's nothing in IEnumerable that would enable you to turn an IEnumerable into that, unless you wrote a conversion yourself.
That's a great answer for this basic question, thanks
I'm not sure if I can run it as an executable, I was talking in a very general sense in my post and didn't specify exactly what kind of user content it is. This is for my Unity project, where the user can write code at runtime, which then needs to be compiled and run, and the game needs to interact with the script in both directions - the game code runs certain methods from the script, and the script (user) can run certain methods from the code. I'm unloading the AppDomain whenever I create a new one, but only after recompiling (in order to keep the previous assembly running in case the compilation fails). I keep encountering a FileNotFoundException stating that it failed to load the assembly or one of its dependencies. I've read that this can be countered by making an AssemblyResolve method, but I can't bind it to the event without loading another assembly first (which fails with the mentioned exception). Also, I've read that generally assemblies shouldn't be loaded into other AppDomains, only to the current one, and that assemblies should be loaded using `CreateInstanceAndUnwrap()`, but that also throws the FileNotFoundException.
[AdaptiveClient](https://github.com/leaderanalytics/AdaptiveClient) is going on two years old now and has proven itself beyond my expectations. Unfortunately I have not had time to expand the concept beyond my original vision for it and I think I have only seen the tip of the iceberg in terms of it's potential. I would greatly appreciate it if other students of service layer design embrace, validate, and improve this useful pattern.
Use a Dictionary
Are you 100% sure the regex is right? Have you checked the index values?
I'd probably use `params` with `ValueTuple`s: ```csharp // Definition public void MyMethod(params (string key, object value)[] values) { // Do some stuff // `values` is an array with the key-value-pairs } // Usage MyMethod(("key1", "value1"), ("key2", 2)); ```
Thanks for the input. A dictionary is indeed a thing i am considering, was looking to see if there is a nicer way to do it.
How about: MyMethod(new Dictionary&lt;string, object&gt;{ { “filter”, “lighten” }, { “area”, AREA.ALL }, { “color”, Color.Black } } private void MyMethod(Dictionary&lt;string, object&gt; dictionary) { … } 
Map Reduce. It's a functional thing :) Probably right, I've been awake for 40 odd hours and things are looking odd :)
What is that? Never heard of it! 
With more experience you'll find that's not particularly unique in software development. Plenty of large, long-lived projects around.
I think this statement is too generic. A tool should be used as what it is - a tool - not a semi-automatic way of programming where you just hit _continue_. It's like a navigation system that give you advice, but as a driver you still should take responsiblity for driving. 
If you like, you could check [Rider](https://www.jetbrains.com/rider/), which has ReSharper built-in and _is_ fast.
The real question is why would you want to pass in arbitrary keyvalue pairs when clearly you are making assumptions about what is being passed in. Think a bit more about your design.
Best solution so far, thanks a lot!
Spend some time on [https://stackoverflow.com/questions/tagged/c%23](https://stackoverflow.com/questions/tagged/c%23) trying to answer questions. Use each question as an opportunity to learn more about c# if you don't already know the answer. Don't worry about questions to do with frameworks you haven't heard of, since they'll be less about c# specifically.
The real question is why would you want to pass in arbitrary keyvalue pairs when clearly you are making assumptions about what is being passed in. Think a bit more about your design. I have a hunch that you have way more parameters lined up than what you've shown in your example. In which case: make a damn class with these fields instead and pass that object instance into the function.
I feel like this is one of those situations where if we knew more about the general problem you're trying to solve, you'd get a better response. I mean where do these parameters come from and what are you doing with them?
Use a POD structure that contains all expected parameters and then pass it like this: myFunc(new MyPod() { Filter = "lighten", Area = AREA.All, Color = Color.Black });
I am looking for a nice way to build ffmpeg filter command lines. ffmpeg is a command line utility for a lot of stuff to do with video and audio editing. For those who dont know, a filter might look as such: ``` -filter:&lt;a/v&gt; "&lt;filter_name1&gt;=&lt;param1&gt;=&lt;val1&gt;:&lt;param2&gt;=&lt;val2&gt;;&lt;filter_name2&gt;=&lt;param1&gt;=&lt;val1&gt;:&lt;param2&gt;=&lt;val2&gt;" ``` There are so many filters, i would not want to have to write them all down in code. I am looking for a flexible solution. As for runtime errors, i can handle those. If a user put an invalid command, i can see it via the process exit code.
See the answer i wrote here: https://www.reddit.com/r/csharp/comments/abjnuk/function_arguments_code_design/ed0vhl3
Removed: Rule 4.
So your program doesn't provide information on what valid commands are other than an entered command is valid or not? Why not then let them give the arguments as one string and pass that along to ffmpeg? I'm still not sure I understand the scope of what your doing and what you mean by building command lines.
Yes. It's correct. I had even set the regex to this: `"&lt;div&gt;"` for debugging. Same result. Indexes (or indices) are also correct. The only suspect can be GetPositionAtOffset.
What do your User model and DB schema look like? 
Really nice blog and SOLID are my favorite principles so sorry if I am nitpicking but the Single Responsibility Principle is still broken. `void log(string error)` should be `void log(Exception error)` If you would have to change your logging in any way `ToString()` wouldn't be enough you would have to change the `Post` class.
Yes it shows up, but I found the problem it was because of the ICollection property in my entity class it should have JsonIgnore to prevent referencing errors 
I found the problem it was because of the ICollection property in my entity class it should have JsonIgnore to prevent referencing errors 
Not filters, I have already found the problem it was because of the ICollection property in my entity class it should have JsonIgnore to prevent referencing errors 
I love SOLID. Another idea is to make (objects sealed by default - either design for inheritance, or prohibit inheritance). Personally, I `seal` by default, and use interfaces, which facilitates mocking with TDD. 
Right, this is the typical approach in Python, as you can't eliminate even the most obvious runtime errors you assume they will happen and then it's treated as code flow instead. This isn't necessary in C#. You're approaching this using magic strings everywhere instead of a object-oriented design using classes. This is clearly an opportunity to do some proper class structure. &amp;#x200B; Since you keep mentioning "Commandline" I'd first recommend you check out [CommandLineParser](https://github.com/commandlineparser/commandline) This is a neat little library that allows you to easily create separate commands, and the options that belong to each of them. You use this library with proper classes and deriving from the base class, and from there you know what options you have available, at compile time, when you write logic.
[Here you go](https://en.wikipedia.org/wiki/MapReduce). It turns the problem upside down. Your example talks about ```params``` which lets you pass in a random number of arbitrary parameters. It's good for really specific use cases. If you have a play with the concepts behind map reduce, you'll probably find you don't need a ```params``` style solution :) 42 hours awake and still going strong! 
Right, this is the typical approach in Python, as you can't eliminate even the most obvious runtime errors you assume they will happen and then it's treated as code flow instead. This isn't necessary in C#. You're approaching this using magic strings everywhere instead of a object-oriented design using classes. This is clearly an opportunity to do some proper class structure. &amp;#x200B; Since you keep mentioning "Commandline" I'd first recommend you check out [CommandLineParser](https://github.com/commandlineparser/commandline) This is a neat little library that allows you to easily create separate commands, and the options that belong to each of them. You can even derive from a base-command to share options, if you always want to be able to access certain options, like output file path. You get help notation and all that jazz for free in the terminal. In the project properties - build page you can set what options the program should start with, for preliminary testing. &amp;#x200B; You use this library with proper classes and deriving from the base class, and from there you know what options you have available, at compile time, when you write logic. This is the main reason I dislike Python: assuming there's going to be runtime errors for even the most obvious things that are avoidable is simply silly and rubs me the wrong way.
It's probably worth noting they are 2 products. Tfs is on prem, and lags behind feature wise. There are only 4 releases per year, 2x feature and 2x bug only. Azure devops is their cloud solution which is continuously updated. 
Could be debatable. The fact we log a string whether that’s to console or text file would say this implementation is fine. You would have something else that would build the string which will be logged
These are really bad examples that sometimes don't even compile. In the **Solid** section Class `Post` should not know that there is a thing called a `Database` or that it can be stored in it, nor less own the logic for doing so. `ErrorLogger` somehow contains a reference to the `Database` instance `db`, which doesn't exist in that scope, and is now responsible for writing a log to the database and the file system and knowing where on the file system you want logs to be written. Still have multiple nasty single responsibility issues. In the **Open / Closed** section class `TagPost` cannot override the non-virtual method `CreatePost` in class `Post`. Both classes still have to know that a `Database` exists, and the knowledge of how to add a `Post` as a `Tag` is now pushed into said `Database` because it has the `AddAsTag` method. Problem is resolved, the nasty part just got pushed to the `Database`. In the **Liskov** section the author neglects showing the use of the refactored `MentionPost` and breaks any downstream extensions, i.e. subclasses of `MentionPost`, because his override of `CreatePost` calls methods with side effects. Also, this is a horrible, horrible violation of the Single Responsibility Principle they just covered. The **Interface Segregation** part needs to be used with some experience. Yes, modifying an existing interface is a breaking change to all consumers of the interface. If there are none outside your own system, don't proliferate to `IDoThingVersion34`, you control the consumers too just change it. Segregate your interfaces where rational. For example, if `IRead` and `IWrite` are distinctions that make sense in your storage code then make them. Don't do so if you have to implement `IReadAndWrite : IRead, IWrite`so your internal consumers can take dependencies on `IReadAndWrite` and nobody depends on `IRead` or `IWrite`. If you are writing library code for external consumers, you don't need this advice so feel free to ignore it. 
Yeah while generally true some people do have logging that take strings and it isn’t an issue 
First off, thanks a lot for your interest. I admit, you caught me. I have been writing python almost exclusively for last year or so. Been writing C# some time ago and felt like i want to use it on this project. I guess my approach was not c#-like to begin with. I will try to wrap my head around what you said and come up with a good design. ... Or go back to python for the sake of the task, one or the other. 
You'll get this part done fast with python, but it will hurt you long term for development. Typed systems are much better for long term maintenance and complex systems. Don't get me wrong, I love python, but the code ends up running into a lot of issues because of no typing. Taking the time to properly type your settings will help you solve a lot of future issues. There are tools you can use for command line args. Plus then you'll be able to pass in a JSON settings object, perhaps from a file or an API.... This gives you added flexibility should those things come up on your radar further along the road.
The first example was so bad I didn't bother with the rest. 
Considering the scope of the possible options I'd think it would be quite mad to do this in Python - I'm sure it's a good language for those who are used to it but I get absolutely infuriated by the lack of descriptive parameters and whatever crash happens if something is wrong. I know I'm being a big smug here but I can't help imagining that in the in bigger projects the development process in Python deals mostly with fixing runtime errors and not actually coming up with solutions to the initial problem itself. &amp;#x200B; The library I linked introduces a new concept called Attributes which in .NET is a way to annotate code with extra information. [Reflection](https://docs.microsoft.com/en-us/dotnet/framework/reflection-and-codedom/reflection) then makes use of this annotation. That part is not something you currently have to concern yourself with, but the point is you can make official verbs/options for all of these things you linked, and then in the code when you deal with a certain option set you *know* that you have a bool/int/whathaveyou, instead of having to cast back and forth all the time, catching on every exception because you expect wrong input to happen. &amp;#x200B; The library will tell the user if the input is incorrect and display the command syntax along with the helptext you've written in the attribute.
https://github.com/Steveiwonder/DataMasker DataMasker A free data masking and/or anonymizer library for Sql Server written in .NET If you've ever needed to pull down databases from a live environment to stage or even dev you'll need to think about masking any personal information. There are options out there paid and free, however the free ones I've found do not provide genuine data and the paid options are too pricey when it's only a few tables.
 &gt; If you know some basic LINQ I'd be blown away as a supervisor of an intern. W T F
Kestrel reverse proxy? not smth like nginx?
The implementation may be fine for some usage, but that doesn't mean it doesn't break SOLID. SOLID principles are supposed to give you some benefits, sometime they don't manifest themselves until you need to modify/extend your system. There are two reasons to change this class one is how the DB stores Post and second is how the error handling works. There is not much to debate. You may not have to change that code ever, but that is not concern of SOLID principles. They will only help you when will have to change it. BTW it also breaks DRY principle as you would have to call ToString each time you would like to log something not only in this case.
Currently working on bring Universal Windows (UWP) like APIs to Xamarin development to help Windows Devs build apps with a consistent skillset - https://github.com/jamesmcroft/XPlat-Windows-APIs Still a lot of work to do but happy with the progress so far. 
I'm making some of the components of the start up I'm working on open source. Latest one is called CrossRefCollection and is on GitHub here: https://github.com/3Scribe/CrossRefCollection. It's just a fairly simple wrapper for a multi-dimensional dictionary collection to allow for lookup tables like this: | Red | Green | Blue ---|---|----|---- Red | Red | Yellow | Magenta Green | Yellow | Green | Cyan Blue | Magenta | Cyan | Blue built from this command: ***CrossReference&lt;string, string, string&gt; _TestTable = new CrossReference&lt;string, string, string&gt;();*** and referenced (when data has been added) using ***_TestTable["Red", "Blue"]***. The row, column and data data types can be set when declaring the variable. I just needed some each cross-reference tables for what I'm working on at the moment which is a library to identify audio file types from a byte stream (for an AWS Lambda function so I can't use sox or ffmpeg) and I'll be making that open source when it's done. I'll also put this collection into a NuGet package. 
Why not just Dictionary&lt;string, object&gt; as the input?
Source control. Make sure you understand how to use source control. You don't need to be effective in using it for making your work easier but you need to know how not to create problems for the other devs.
From what I'm gathering, your looking to slice a piece out of your base Animal types collection. If this is the case why not use the .OfType&lt;T&gt;() LINQ extension method?
Preference I'd say. You might argue that it'll be less code at the call site, or it doesn't allocate a dictionary object, but I thinks it's mainly down to preference I think. Also depends on what you're doing with the input. If you're accessing values based on keys, a dictionary would be preferable.
I've written maze generator using Ellers algorithm, then I added it to my Unity game and made a mesh generator for my mazes, everything works fine.
I would just use separate dictionaries per type, but usually the entire point of a base class is to avoid casting them into their derived class, but instead take advantage of polymorphism to customize behavior.
Sorry for the late reply, holidays and wat not. I have looked at Prism before, but as far as i can tell it does not work to well when using a .net standart class library since items like the region manager are not available. Will for sure write a small app and try stuff out! 
Sorry for the late replu, holidays and wat not. The one thing that somewat pushes me off from MVVMLight is the issues it used to have, and the small team that works on it, then again Caliburn seems to be some sort of black magic app. I will indeed setup a view simple apps and see wat feels good!
Hello, sorry for the late reply, holidays and wat not. I did have a look at Prism, from wat i can tell though it does not handle .net standart class libraries all to well. They idea was to have a seperate project containing all the viewModels etc, this to be easly shareable between wpf and Xamarin, but in that case i would be left with no way to navigate (pretty sure RegionManager is not available).
Thank you both, Will setup a test project and have a play with it and see how it suits.
Thank you very much! Could you tell me if MvvmCross functions with .net Standart? due to my viewModels being located in one. I checked the site/github but was not able to find it.
Thanks, will check it out!
Hello. It's seems, the problem is caused by tha wrong PixelOffsetMode. Try this: // An empty bitmap which will hold the resized image Bitmap resized = new Bitmap(size.Width, size.Height); Graphics resize = Graphics.FromImage(resized); resize.PixelOffsetMode = PixelOffsetMode.Half; //add this line to change the pixel offset mode // Resize the bitmap to a new size &amp;#x200B;
Glad you found the answer. Yeah it definitely does use .net standard. I like this option better than prism so I can develop using native xamarin
[https://i.gyazo.com/771c3e39115db02e16ceeba834937abb.png](https://i.gyazo.com/771c3e39115db02e16ceeba834937abb.png)
Aren't roles treated as separate from claims? 
This does in fact solve my problem.
Excellent points, thank you, but... 1. i've read that recursive yield-returns are very memory inefficient, and should be avoided (that way my initial idea when i started, having my trees implement IEnumerable would have been awesome 2. regarding having a special tree type... you're right. i originally reused some old binary tree code i had... will refactor it. I do have several more helper functions but they all ultimately work with nodes, not the tree itself Thank you for your input!
He’s talking about nullable reference types, and how that will change the style of people’s code (I think, based on his edit). Visual Studio intellisense will show you where the code would throw a null reference reception, and help you write code where their would be none. But I think OP thinks this means you’ll never need a try-catch anywhere else in your code, which is just silly. 
Ok, I see you have some new elements on your form. Can you paste the new form's code here?
A few thoughts: * instead of frantically trying to shoehorn GraphQL into your stack, start not with the technology, but with the problem you’re trying to solve. I’ve seen little in your post as to why you’d use GraphQL in the first place, and several arguments on why it’d be a poor fit. * do you really need an “API gateway”? That sounds like rather complicated architecture and at odds with the idea of microservices. * Yes, HTTP is the transport. Why wouldn’t it be? * I’m also not sure what you mean by schema. Surely the schema here, as it were, gets defined by the client’s request. To hardcode it on the server end makes GraphQL pointless. Generally, I think you’re trying to make GraphQL work with plenty of existing assumptions, and I’m not sure to what end. Either those assumptions need to be reconsidered, or you don’t need or want GraphQL. (Either is fine.)
I learned MVVMLight from Pluralsight course made byt the library author himself. I would recommend doing so, as it is imo the best way to learn how to use MVVMLight (yeah, the docs are pretty much non-existent).
I'm thinking of finishing some of the projects I already started, one of them being an interactive map of the Elder Scrolls universe (only Nirn at the moment)
You can reverse proxy with Nginx, IIS, or Apache.
Inject `IApplicationLifetime` and call `StopApplication();`
&gt; I know that you can't unload assemblies without unloading the domain, which is why I load it into an AppDomain. And are you disposing the AppDomain before trying to load it a second time?
if (responseString.Contains("id=\"logout\"") ..... I'm pretty sure there's a better way of doing this. I.e. parsing for the html tag that contains that string and pulling the inner text.
If response has json format like { "id": "logout } You can use [JSON.NET](https://www.newtonsoft.com/json) for deserialization into a [concrete object](https://www.newtonsoft.com/json/help/html/DeserializeObject.htm) or [dynamic object](https://www.newtonsoft.com/json/help/html/DeserializeAnonymousType.htm). Check the documentation of this library Or you can use simple if(responseString.Contains("id=\"logout\"")) { //Do the thing } &amp;#x200B;
Can you confirm that GetCategories is not the problem?
Yeah, this should be verified first. The whole `await GetCategories()` should be moved **before** the `using` block. There's no reason to open the file when you don't even have the content to write.
If you absolutely want duck-typing, C# allows it like so: dynamic result = GetThings(1,2,3,4, new Hashtable { { "test", 5 }, { "Other", "None" } }, "hello", "world"); private static dynamic GetThings(params dynamic[] args) { foreach(var item in args) { try { string key = "test"; if (item[key] != null) return item[key]; } catch { } } return "some arbitrary stuff I guess" } Here I do the typical Python of assuming bad input and just basically making an assumption about the arguments, swallowing the error if it isn't there. The N length array are zero or many parameters using the params keyword. The dynamic keyword allows you to to avoid compiler stuff, like in Python. &amp;#x200B; Mind you, if this wasn't presented as a joke, this is the kind of code I'd fire someone over if it was a C# position and you weren't doing COM interop. The point I'm making here is that C# *can do* the things Python does, it's just *really bad* programming practice.
Have you read Stephen Cleary's [Async/Await - Best Practices in Asynchronous Programming](https://msdn.microsoft.com/en-us/magazine/jj991977.aspx)? Can you verify you're not unintentionally swallowing exceptions somewhere? Are you using .Wait() or .Result somewhere?
I don't think the edit was there when I last commented (certainly not when I last read the post, at least). Thanks for the heads-up! &gt; which is just silly. Yeah, it's nonsense on stilts. If the primary thing they're catching is NullReferenceExceptions and ArgumentNullExceptions, their code must be a real dumpster fire.
What is 'really slow'? Quantitative details are really important in these scenarios
Protobuf is a really fast binary serialization format.
This might help [https://aloiskraus.wordpress.com/2017/04/23/the-definitive-serialization-performance-guide/](https://aloiskraus.wordpress.com/2017/04/23/the-definitive-serialization-performance-guide/)
Is protobuf easy to use for WPF?
If GetCategories works, you could try and serialize one-by-one var originalCategories = GetCategories(); using (var fileStream = new FileStream("cache.txt", FileMode.Create, FileAccess.Write)) { var bf = new BinaryFormatter(); foreach (var category in originalCategories) { bf.Serialize(fileStream, category); } } &amp;#x200B;
Cropping is OK, the problem is in the final step. So try to save the final picture to disk and open it in paint.net. You'll see that top and left rows/columns are transparent. I've just expanded rectangle to be drawn a bit so that even this part of the image gets written over. I suspect it's because of the non-integer coordinates used in Graphics, but I just banged into it until I managed to dance around the problem.
Ok, why do you need a fast binary serializer "for WPF" ?
Message pack is pretty good and simple to use. 
https://github.com/neuecc/MessagePack-CSharp
Do you know if it works good for WPF and Notifyproperty? 
WTH?
I don’t think the default serialiser is the problem here 😉 Just run it on the UI thread in a win forms app - yolo. @OP add some details man, and what you’re currently doing. 
What are you trying to do exactly? MessagePack should work with WPF. Whether or not it works well is mostly depending on your use case. I am not sure why you would need a binary serializer for INotifyPropertyChanged, so I am not sure how to answer that. 
I have *C# 5.0 In A Nutshell*. The series serves as a good reference/best practices manual and seems to be the de facto C# book a la Stroustrup's *The C++ Programming Language.* It's definitely a good book to have on your shelf. I find myself looking through mine fairly regularly just for the best practice suggestions.
Basically the holy bible of c#
Okay, I remember you... You were asking questions regarding the serialization, and then completely stopped responding. Not cool dude.
Great! Do you know anywhere that I'd be able to find an extract from the book? I'm curious on the teaching method, I'm only looking for a short paragraph or something similar. Thank you. 
&gt; MessagePack should work with WPF. Well ... yes to can both be used successfully in the same app. That's like saying that "my TV should work with that lamp. They're in the same room at the same time, both switched on, and there are no problems, so they must be inter-operating well." Was there some expectation that the Serialisation and WPF would _interact_ in some way?
Amazon preview maybe? You’ll learn a lot, but it’s not really a teaching book. Some books actively get you involved and teach through examples that you can follow along. That’s not how this works. It’s more of a concise summary of the language documentation. It’s pretty dry, not dissimilar to college textbooks
I didn't know amazon preview was a thing! I'll have a look Ahh I see, that's fine, I'm used to learning through college textbook style books anyway, I'll see what amazon preview shows and decide from there Thank you for your help 
Ahh that's great! Is it something I could use alongside my classes do you think? Thank you
If you are looking for something more "readable" try "C# in Depth" by Jon Skeet. Forth edition is coming in march but the ebook is already available.
Your screenshot shows the UserInfo entity present in the designer, so what is actually the issue here?
If you look in the solution explorer, visual studio generated an user.cs when I updated the table. But it didn't generate anything for the userinfo.cs.
anyway, I created one manually and it works now, I just hope it doesn't have a bad influence on anything since I added one manually and not let it generate like it did before :/
You shouldn’t be making any of those manually. You just need to save the designer after the models are updated.
alright, so save the designer specifically? I can't find an option for that. Or save the project and re-open? 
The window that is the designer - you need to save the window as if you were saving an individual file. It should generate code after saving.
that works, thanks :)
Is the column set up as an identity column? 
Do you have ProductId set up to be Auto increment primary key? 
No problem!
No problem!
All foreign keys refer to an auto-incremented primary key.
It is.
Are you trying to set the Id property manually? It's database generated.
I'm not although the database thinks I am. That's what I don't get.
I'm not exactly sure, but iirc any value different from 0 is tried to be inserted for key columns/properties. Try with ID set to 0...
The negative id you can see in the screenshot is set by Entity Framework Core (he's clearly using EF Core, not EF). It's a temporary id used for attached but not saved entities.
Setting it to 0 results in the same error unfortunately.
What is the code that creates and/or attaches the entity?
You’ve shown us the Order class but the error is for the Product table. 
Ah, TIL.. No version was stated and I've not yet worked with EF Core, my bad... 
I am truly interested in the crossovers of languages. I'm currently teaching myself Python and I very much enjoy the amount of documentation about things that's out there. C# does not for example have a proper CSV library and I just use PowerShell when I have to deal with that. So it's quite fun to read up on all the things the Python community have come up with. &amp;#x200B; As for console commandline, an example of what I mean is the dotnet.exe utility. If you install the .NET Core SDK you get this tool available in your terminal. It has commands and then for each of those commands it has options, or even sub-commands with their own options. I'm looking into how they've done the options myself right now.
Oh crap, I didn't notice this was being thrown for Product... gosh thanks, I'm bad at EF. This is going to be what's causing it. I'm wondering whether my model for Order is incorrect. public class Order { [Key] [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)] public int Id { get; set; } [Required] public float Total { get; set; } [Required] public DateTime Date = DateTime.Now; [Required] public List&lt;OrderItem&gt; OrderItems { get; set; } public int AddressId { get; set; } public Address Address { get; set; } public string ApplicationUserId { get; set; } public ApplicationUser ApplicationUser { get; set; } } I'm using the last two sections (AddressId-Address and ApplicationUserId-ApplicationUser) to add both those as Foreign Keys in the database. However, when I send that model using my viewmodel to my view, the model still has an Address and ApplicationUser property in addition to their Ids. Is this normal or incorrect design?
OMFG.. I'm trying to add a Product instead of an Order. Fuck me! Thanks a lot!
&gt; Why would it want to write a ProductId in the Product table when I'm trying to add an Order? It wouldn't on it's own, and you didn't post nearly enough code to tell you what you did wrong. Nothing in your `Order` class even relates to any `Product`.
Sorry, forgot about the other models. An order has a one-to-many relationship with OrderItem: public class OrderItem { [Key] [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)] public int Id { get; set; } [Required] public int Quantity { get; set; } [Required] public int ProductId { get; set; } public Product Product { get; set; } } which in turn has a one-to-one relationship with Product: public class Product { [Key] [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)] public int Id { get; set; } [Required] public string Name { get; set; } public string Description { get; set; } [Required] public float Price { get; set; } [Required] public float InStock { get; set; } public string FeaturedImage { get; set; } [Required] public int ProductCategoryId { get; set; } public ProductCategory ProductCategory { get; set; } } &amp;#x200B;
I do, on all PKs for every one of my models.
And we are back to my initial question: &gt; What is the code that creates and/or attaches the entity?
Are you trying to manually set the key? You mentioned a random number. This is like xmas charades :)
The order details are sent to the controller via POST in JavaScript. The \[FromForm\] tag automatically populates my Order model with the POST data. Because I haven't added functionality yet to specify the address or link it to a specific user, I'm currently manually adding an AddressId (exists in the database) and ApplicationUserId (also exists) before I add it to the database. [Route("/shop/confirmation", Name = "OrderConfirmation")] public void OrderConfirmation([FromForm] Order order) { order.AddressId = 1; order.ApplicationUserId = "admin"; var dataHandler = new DataHandler(_db); dataHandler.AddOrder(order); } public void AddOrder(Order newOrder) { _db.Order.Add(newOrder); _db.SaveChanges(); } &amp;#x200B;
 I leave the id as null; however, the application seems to give it a negative value of -2147482647 (which according to StackOverflow is normal) and then is supposed to assign the proper Id when SaveChanges() is called. This has also been confirmed as normal by another user here.
I might have an idea what's wrong.. could it be because I'm trying to add an Order while the OrderItems that are linked to it aren't present in the database yet? I'm not sure whether it will automatically populate the OrderItem table with the data that is attached to the order.
The `order` you send very likely has items and products on it, and that product has an id set. That is what fucks EF Core over. You're not only adding the `newOrder` to the database, but also all entities that are assigned to the navigation properties.
Yeah that's what I just realized.. what's the solution to my problem? Should I create the `order` object with only foreign key ids to my OrderItem and Product and add my OrderItem to the database before my Order is added? &amp;#x200B;
I have a side project called OWASP DevSlop, it's a C# app on .Net CORE, using Azure DevOps. We added security tools to our pipeline and use it to find bugs. Here is a video of me finding and fixing security bugs last Sunday: [https://www.youtube.com/watch?v=5GVemzVPLr4&amp;t=1s](https://www.youtube.com/watch?v=5GVemzVPLr4&amp;t=1s)
Oops, here's the project page: [https://DevSlop.co](https://DevSlop.co) 
There are so many different solutions. Personally I would not use the Entity Framework entities in the frontend, and instead of special DTO objects. Then do the mapping between the types myself.
You're setting yourself up for an [over posting attack](http://www.abhijainsblog.com/2015/04/over-posting-attack-in-mvc.html) and unintentionally did an over post yourself. You're not only adding an Order, but also OrderItems (intended) and Products (unintended). You should create DTOs containing only the properties you're expecting instead of reusing your entities to prevent this.
And I take it if you manually INSERT from SSMS it succeeds?
Try CLR via C#
Could you just write an article please? It's much easier to read through an article and only look at the interesting bits rather than listening through an entire youtube video...
We decided to record the videos as it's usually easier for the viewers to get the concepts, but maybe one day we will decide to write an ebook.
I actually agree with /u/grinderofl in this case. I like what you are trying to do with the videos, but in your case I think an article would be better. Also, there aren't many articles that start from the beginning with microservices.
Your replies make me think you are either using binary serialized wrong or your data models are badly structured.
Can you extract the SQL it's generating? That will tell us what is the problem I would guess. 
I'm trying to serialize all my data to a cache file if the cache file doesn't exist at startup. I'm trying to use this model. &amp;#x200B; private categoryStatus _status; [ProtoMember(0)] public string CategorySymbol{ get; set; } [ProtoMember(1)] public string CategoryName{ get; set; } public object Clone() { return clone; } private void SetPropertyValues(ContractMetaData otherContract) { var propertyInfo = this.GetType().GetProperties().Where(p =&gt; p.CanWrite &amp;&amp; (p.PropertyType.IsValueType || p.PropertyType.IsEnum || p.PropertyType.Equals(typeof(System.String)))); foreach (PropertyInfo property in propertyInfo) { if (property.CanWrite) { property.SetValue( return clone; , property.GetValue(this, null), null); } } } public event PropertyChangedEventHandler PropertyChanged; private void OnPropertyChanged(string propertyName) { if (this.PropertyChanged != null) this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName)); } } &amp;#x200B; Sometime I get this error: ProtoBuf.ProtoException: 'Specified argument was out of the range of valid values. Parameter name: tag (DataAccess.Category.Category)' &amp;#x200B; What have I done wrong?
Those last two are pretty important. I shudder to think about some of the LINQ I left behind at previous gigs because I thought it was nifty that I could do something with LINQ. Very much the definition of, "Just because you *can*, doesn't mean you *should*."
I also refer people to this all the time: https://github.com/SanderSade/common-linq-mistakes Usually happens whenever I see someone use `.Where().FirstOrDefault()`. :P
Could you show us a screenshot of the product in c#? You should probably assign the property as a key in your modelbuilder like so: protected override void OnModelCreating(ModelBuilder modelBuilder) { modelBuilder.Entity&lt;MyEntity&gt;(b =&gt; { b.HasKey(e =&gt; e.Identifier); b.Property(e =&gt; e.Identifier).ValueGeneratedOnAdd(); } } Sorry for the formatting. 
Playing devils advocate...some serializers require side installation, some are implemented as middleware, and not all of them are compatible with .NET Framework or .NET Standard. Combined with recent announcements of WPF running on .NET Core and potential concerns about platforms and CPU affinity...I could see how someone would ask the pointed question of their concern (i.e. Does it work with WPF?). As others have pointed out, though, it is unlikely that [Wazowski](http://www.cornel1801.com/disney/Monsters-Inc-2001/pictures/23.jpg) here actually has those concerns in mind. Asking about 'Notifyproperty' in relation to serialization is still [a bit telling](https://i.imgur.com/IppKJ.jpg).
There's no easy answer to this question, as it depends largely on what your architecture is. I'm assuming this data is being stored in a database. If so, are you using Entity Framework or some other kind of ORM, or are you rolling your own DB interface?
I'm finishing it and so far it's was a very good book. 
Try JSON serialization first. It is simple and fast. If serialization is done on UI thread and causes some visible delay then just clone that data and serialize on another thread. I have dropped assumption that binary serialization is fastest and most compact a long time ago. Binary serializer dumps a lot of type information into binary output. It is not fast and not compact. Protocol buffers are terribly cumbersome to use. Maintenance sucks. Lots of manual work. The generated code also looks terrible. &amp;#x200B;
yes it's stored in my sql db, using entity framework. I have 2 tables so far. User for log-in. UserInfo for userinfo.
Als je me een bericht stuurt wil ik je het 1 en ander wel uitleggen over discord? 
So the basic process goes something like: 1. Get current db context 2. Get object you are trying to change from the context 3. Update object 4. Call SaveChanges method on DB context. [Here's some documentation on EF that should help](https://docs.microsoft.com/en-us/ef/ef6/saving/change-tracking/entity-state).
[removed]
Thanks, you're a lifesaver.
While "CLR via C#" is a good book (that I also own), I wouldn't recommend it as a first read on .Net and/or C#. It is a good resource when you want to go deep into the CLR, but I believe studying the language first is better. My recommended reading order would be: 1. *C# in a nutshell* 2. *C# in depth* 3. *CLR via C#* Then later some area-specific books such as *Concurrency in C# Cookbook*.
U pass it with the call to the controller if u wanted to do something with in the action.Best flow example of this is if you were to generate a web app using visual studio with the identity provider Ud like to use.
I've done that and I see that the template app uses various statements using the UserManager object but I've got no clue how to get the actual user who did the call out of that though.
From memory the default web app Has the bootstrap styled navbar.If you open the page with the navbar U’ll likely see razor code in the navbar along the the lines of httpcontext.userIdentity which displays the current user.This all requires the identity provider to be configured correctly. From that u have many options for using this value that’s retrieved.Please post a link to what you are trying to achieve ie u want to allow or deny permission to access the controller action or u want to display the currently logged in user.What provider your using and what purpose and I’ll try find some simple examples.
I recommend that everyone reads the **.NET Framework Design Guidelines**. It explains why the .NET libraries were written the way they are, including the internal debates they had and which parts of .NET they feel are mistakes. I highly recommend it even if you don't program in C# because the emphasis is on how to design APIs that other people will want to use.
It's the *best* book.
Maybe this is what you are searching https://docs.microsoft.com/pl-pl/aspnet/core/fundamentals/http-context?view=aspnetcore-2.2
Depends. I have the book for c# 5&amp;6 and it's fantastic. However I use it mostly for things like: * how does garbage collection work and what are the implications of using destructor. * I can't remember when you use the yield keyword. It's not an instruction book, doesn't really have anything framework specific, doesn't go into patterns, and iirc the security portion is quite lacking since that's mostly in frameworks. It's really constrained to the language itself. Hope that answers your question.
All the new code basicly does is add every single sprite from that sprite sheet so you can search for them using the textBoxs: using System; using System.Drawing; using System.Drawing.Drawing2D; using System.IO; using System.Windows.Forms; using System.Xml; namespace XML { public partial class Form1 : Form { public Form1() { InitializeComponent(); } private string dir = Directory.GetCurrentDirectory(); private Bitmap[,] imgarray; private Rectangle section = new Rectangle(new Point(0, 0), new Size(8, 8)); private void Form1_Load(object sender, EventArgs e) { Bitmap img = new Bitmap(dir + "/lofiObj3.png"); imgarray = new Bitmap[(img.Height / 8), (img.Width/8)]; Graphics graphics; for (int x = 0; x &lt; img.Width/8; x++) { for (int y = 0; y &lt; img.Height/8; y++) { imgarray[y, x] = new Bitmap(8, 8); graphics = Graphics.FromImage(imgarray[y, x]); graphics.DrawImage(img, new Rectangle(0, 0, 8, 8), new Rectangle(x*8, y*8, 8, 8), GraphicsUnit.Pixel); graphics.Dispose(); listBox1.Items.Add(y.ToString() + ", " + x.ToString()); } } } public Bitmap getImage(Bitmap source, Rectangle section, Size size) { // An empty bitmap which will hold the cropped image Bitmap cropped = new Bitmap(section.Width, section.Height); Graphics crop = Graphics.FromImage(cropped); // Draw the given area (section) of the source image // at location 0,0 on the empty bitmap (bmp) crop.DrawImage(source, 0, 0, section, GraphicsUnit.Pixel); // An empty bitmap which will hold the resized image Bitmap resized = new Bitmap(size.Width, size.Height); Graphics resize = Graphics.FromImage(resized); // Resize the bitmap to a new size resize.InterpolationMode = InterpolationMode.NearestNeighbor; resize.DrawImage(cropped, new Rectangle(new Point(0, 0), resized.Size)); return resized; } private void listBox1_SelectedIndexChanged(object sender, EventArgs e) { } private void button1_Click(object sender, EventArgs e) { int x = int.Parse(textBox1.Text); int y = int.Parse(textBox2.Text); MessageBox.Show(x.ToString() + y.ToString()); pictureBox1.Image = getImage(imgarray[x, y], section, new Size(64, 64)); } } } &amp;#x200B;
Alright thanks and I was wondering, is there a simple way to add an outline to that image?
Yeah I see what you are saying. I would also like to add "Pro C# 5 and .NET framework 4.5" to this list somewhere.
So if the value sent in is 0x1234567800 you don’t see a difference with or without the bitwise and? Note that `uint` isn’t 32bit definitely. 
The result of the bitwise and gets shifted, not the input value. See the and operation as a mask over the input. Only the portion which is FF in the mask gets passed into the shift operation. If the input value were to be shifted the outcome would be different as overflow may occur.
I understand your point and yes agree with it breaking DRY. You are correct about the class as well it should be broken down into separate classes. I was talking about the fact we are passing in the string instead of the whole exception.
I appreciate the videos and will put them up on the TV when doing chores around the house, so they work well for some use cases. Just an idea but maybe you could get an MVP for an article by exporting the transcript with timestamps.
Here's a general gist of what you're trying to do, without more information. 1) Get an Id off the querystring for your Edit action, or utilize MVC model-binding to do the work for you. 2) Use that identifying data to retrieve a particular record from your EF code. 3) Display the data (your GET action for Edit) Now do the same for your POST action, only saving the record and any fields that you care to update, instead of just retrieving and displaying them. You'll end up with some code looking similar to the following: [HttpGet] public ActionResult Edit(int? id) { } [HttpPost] public ActionResult Edit(ViewModelType postData){ // All fields of ViewModelType bound from the request (including Id's, be careful, people can be malicious...) } OR [HttpPost] public ActionResult Edit([Bind(Include = "FirstField, SecondField")] ViewModelType postData){ // Only fields in the 'Include' parameter are bound } 
yea, but why you'd want to do it with kestrel?
No, you are correct. It should give the same result without the bitwise AND. EXCEPT in the edgecase that you have overflow checking on, in which it would throw an `OverflowException` when truncating off the most significant bits.
thanks very much for these videos
&gt; Only the portion which is FF in the mask gets passed into the shift operation. That doesn't sound right. After the "mask" you still have a 32 bit unsigned integer and you are still passing _that_ into the shift operation. &gt; If the input value were to be shifted the outcome would be different as overflow may occur. No, the results are the same. Just tested it to make sure.
Don’t cache to a file - cache to a single-file database like SQLite. It will still take time, but you’ll have control over the serialization (because you’ll be converting them to IDbParameter implementations). 
What are you trying to do?
&gt; I'm learning GraphQL, I don't have a problem :). How am I to know what I can solve with GraphQL if I don't understand GraphQL? Fair. &gt;There seems to be a misunderstanding of what an API Gateway is. For a REST based microservice, nearly all will have an api gateway. Not having one would have the following disadvantages: &gt;You would need multiple ssl certificates, at least one for each microservice &gt;Each microservice would be exposed to the public, allowing a much larger attack space &gt;Each client would have to know of the existence of every single microservice &gt;Each microservice would have exact duplicate logic for things, such as authentication/authorization &gt;An API Gateway solves these problems. You have one location that just resolves down to the correct microservice. I don't think I misunderstood at all. I just disagree with the conclusion. &gt;You would need multiple ssl certificates, at least one for each microservice That's assuming each microservice sits at a different hostname. But even so… so what? Odds are Let's Encrypt will be sufficient anyway, and if it isn't, a wildcard certificate is probably what you're looking for. &gt;Each microservice would be exposed to the public, allowing a much larger attack space Not really. Turn that around, and your API gateway becomes a single point of failure. In both cases, the attack surface is the same. You're just shifting responsibility. &gt;Each client would have to know of the existence of every single microservice Yes, but arguably, that's kind of the point of microservices. &gt;Each microservice would have exact duplicate logic for things, such as authentication/authorization Not at all. Microservices can still share code through libraries. &gt;An API Gateway solves these problems. You have one location that just resolves down to the correct microservice. I get that. But at that point, why do a bunch of microservices _at all_? It sounds a lot like you'd be better off with a larger, monolithic service. It would: * require just one SSL certificate * act as a gateway in terms of attacks * require only one endpoint be known to clients * have no duplicate logic And, as a bonus, there'd be no need for internal use of HTTP. &gt;Take for instance this query: &gt;"query GetData { dataFromApi1 { dataFromApi2 } }" &gt;if you did not have it as a gateway, the schema would not know what exists in api 2 unless you make every microservice reliant on each other microservice (defeating the purpose of microservices, each service now relies on eachothers service to respond). Wait, you want a response that consists of data _joined between multiple microservices_? That does indeed appear to defeat the purpose of microservices. Why are you doing this? &gt;The reason I do not believe http should be the transport for graphql server &lt;-&gt; microservice is because you lose all reasons of http. With GraphQL, you do not respond with HTTP Status Codes like you do with a REST based. If you have an error, instead of returning a "{data{...}}" response, you return an "{error{...message...}}" response. You wouldn't respond with a 404 not found, 204, 202, etc. Response codes are lost in the graphql server, which is one of the big benefits of http. Ah, yes. This is one of the design decisions in GraphQL I find unfortunate. Seems like a repeat of SOAP to reinvent HTTP's status code poorly. That said, it only appears to be a best practice. You _should_ be able to respond with `4xx` errors, and then use the `errors` array for more detailed info. &gt; the schema is defined by the server, the client writes a query to match said schema You may be able to get closer to what you want with https://github.com/graphql-dotnet/graphql-dotnet/pull/592.
The only way I can see this making a difference is if you turn on checked arithmetic.
I second this, it demonstrates how C# evolved from its earliest incarnation to version 7 (I think) and is an excellent read. Its more interesting to read as a narrative of C#’s evolution rather than “here’s all the things you can do in C#, one topic per chapter.”
I think it's probably for code consistency and readability. It doesn't appear to make any difference to the result.
Fuck you, Jayson.
How could that make any difference? Both of these expressions yield `255`. unchecked(uint.MaxValue &amp; 0xff000000 &gt;&gt; 24) checked(uint.MaxValue &amp; 0xff000000 &gt;&gt; 24)
[Zamagon Demo](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) shows both web app and desktop apps. Shows how to structure your model and services and inject a single client that gives you access to all your services.
*Without* the masking, `checked((byte)(value &gt;&gt; 16))` can overflow.
Maybe the code was taken from C/C++ and was experiencing some compiler specific side-effects back then?
I'm afraid that transcript will not be that good, but as I said, I hope that at some point in the future we might be able to collect the overall information in some sort of ebook, articles or slides :).
You're welcome!
But that's not what the question is about. The question is about the one shifted by 24.
Start with System.IO.File.ReadAllLines
First, I'd recommend always searching "msdn {whatever}", searching "msdn string split" brings up the MSDN article on the string.Split method:[https://docs.microsoft.com/en-us/dotnet/api/system.string.split?view=netframework-4.7.2](https://docs.microsoft.com/en-us/dotnet/api/system.string.split?view=netframework-4.7.2) &amp;#x200B; Aside from that, are you using an IDE or something with intellisense like VS Code or Visual Studio Community? I assume you are not, because those tools will show that your method is incorrect and allow you to explore the available overrides for the Split method. &amp;#x200B; End of the story, the string Split method is kind of weird, you need to give it a `char` to split on instead of a `string`. If you need to split on string(s), you can use the Split(`string`, `StringSplitOptions`) overload.
You can draw rectangles with the second Graphics object, so I'd use that.
If I’m thinking about this correctly, it will split it. And then you’ll access the value via the indices. values[“firstname”] = combolist[0] //first name values[“lastname”] = combolist[1] //second name You can use a for loop to iterate through the split as well. That’s the very basic use of the split function. I’m not sure how it would look with the overall code. 
You're both saying the same thing, he meant "portion" of the original value (in the same byte order). I can't tell from your post, but are you *only* asking about the `&gt;&gt;24` shift or about the other shifts as well? I assume that one is simply for consistency with the other shifts.
Thank you. Hm... that's really strange, because setting resize.PixelOffsetMode to PixelOffsetMode.Half fixed the problem to me. Maybe (just maybe) you made the output sprite a bit too small, so the upscaled sprite just won't fit into it and thus it get cropped. You can set pictureBox1's BorderStyle property to FixedSingle to see it's borders.
Google search should net you some good results. What you're wanting to do sounds like some of what i work with at work. Entity Framework code first. Visual studio has a reasonably good built in wizard for creating entities with EF to get you started. Right click on project, add new item, see below. 
I think a textfile is a string? Like John:Berksen John = \[0\] Berksen = \[1\]
Thanks for the recommendations guys, I've bought C# In A Nutshell and I'll look into the other 2 suggestions when I'm ready to move on 
This is very helpful, I am trying to run throug this process now
I'm talking about all 4 that have a pointless bitwise &amp; that can be removed without any consequences and am wondering whether I am missing something since I am new to all these works at binary level.
No, its not. A text file is a text file. You would need to open the file for reading, and then read each line into a string.
Example: foreach (string i in File.ReadLines("file.txt")) { var lines = i.Split(':'); if (lines.Length == 2) { values["firstname"] = lines[0]; values["lastname"] = lines[1]; } } 
Ah, you are missing something: the shift will only cut off the *lower* bits, not the upper bits. For example, the following are equivalent: value &gt;&gt; 8 (value &amp; 0xFFFFFF00) &gt;&gt; 8 This is much different from the shift in your OP: (value &amp; 0xFF00) &gt;&gt; 8 Note the (implied) leading zeroes that are used by the bitwise and to zero-out any bits *leading* the needed byte in addition to those following. You are, however, correct about the pointless `&gt;&gt;24` but only because 32-bit ints are bounded at 4 bytes - there cannot be any leading bits. If the code handled 64-bit longs too the bitwise and would be needed.
Visual studio has made it very difficult for me to use other IDEs, its so good
This is absolutely true, but the cast to Byte will remove the high bits.
Exactly :)
&gt; You are, however, correct about the pointless &gt;&gt;24 I said the pointless "and" not the "shift". And as Dave said there is a cast to byte already getting rid of the leading bits.
Yep. Then after adding the item shown in the link, use "code first from database." That will create your C# entities based on the existing DB. Afterward, it will be the reverse direction, where changes to the C# entities will be pushed up to the DB via migrations. 
Sounds like this violates Rule 1?? "Rule 1: No job postings (For Hire and Hiring)"
You know there are other reasons to catch exceptions other than catching Null Ref exceptions, right? Like, idk, maybe a custom exception you explicitly throw in your own code? I NEED to know you know this.... I need the closure. 
Does it work against any IQueryable, or just EF?
My latest project is Giveth, a super simple library for writing BDD tests: https://github.com/mcintyre321/Giveth Ps I'm only 6 stars away from 300 for [OneOf](https://github.com/mcintyre321/OneOf), help me out!
Removed: Rule 4. You can use `System.IO.File.ReadAllText` (https://docs.microsoft.com/en-us/dotnet/api/system.io.file.readalltext?view=netframework-4.7.2#System_IO_File_ReadAllText_System_String_) to read your file content. (If you have multiple lines, you may need to use `ReadAllLines` instead.) Once you have your line of text (e.g., "John:Berksen"), you can then use the `String.Split` method (https://docs.microsoft.com/en-us/dotnet/api/system.string.split?view=netframework-4.7.2#System_String_Split_System_Char___) to break it up. string fileContent = System.IO.File.ReadAllText(@"C:\Path\To\YourFile.txt"); string[] nameParts = fileContent.Split(':'); string firstName = nameParts[0]; string lastName = nameParts[1];
https://www.amazon.com/C-Depth-Jon-Skeet/dp/1617294535/ref=sr_1_2?s=books&amp;ie=UTF8&amp;qid=1546464251&amp;sr=1-2&amp;keywords=C%23+in+depth C# in depth by Jon Skeet (of stack overflow fame) is really good
It’s a good book. Honestly sometimes it can get a little overwhelming being fairly new to C# as well (just over a year now) but it’s thorough and covers a ton of concepts. You definitely won’t regret purchasing it.
In the controller the base class has a User property. 
I don't think I've ever read a bad O'Reilly programming book.
WPF?
You can pull it from httpcontext. Just stick a call in controller constructor, controller base class etc. 
Yes, WPF. I forgot to include that in the post.
At least fill out a few lines in the description, I wanted to know if this was anything more than entry level command/event integration on a message bus.
Ok, will do.
I see another post about UserManager... so that's really only part of it.. the other part is SignInManager and HttpContext if you're doing identity. SignInManager has two interesting methods CreateUserPrincipal and PasswordSignInAsync. Additionally, you can use the HttpContext.SignInAsync. The last two will generate a authentication cookie and allow you to use HttpContext.User
He doesn't have a provider set up which is most likely his issue. 
Protobuf is also nice because it allows for compatibility with nearly every tech stack.
Agreed. JSON.NET for example is very performant up to about 1GB, and that's considering that it's a generic serializer.
Array.Copy is probably what you want.
I’d look up angelsix’s WPF tutorial on youtube. He starts at the very beginning. You should be aware that MVVM may seem unintuitive at first. The benefits manifest themselves later on, so you need to pull through in the beginning.
&gt;I watched a few video about it but I didnt really understand it. How far have you gotten? Are you familiar with related patterns, such as MVC? Here are the very rough, rambly basics: MVVM, MVC, et al all share the philosophy that, instead of putting all code needed to present a graphical user interface in a single class, the concerns are split into multiple classes. They all share: * a **model**, which is a very simple class (often deriving just from `object`), and contains the properties (and backing fields) that make up the structure of the data you're trying to present. For example, `public class Person` with properties `FirstName`, `LastName`, `Birthdate`. * a **view**, which can be a Window, UserControl, Page, etc., and contains the user interface elements, including their styling. Those elements get data bindings to the view model (see below). For example, a label `Title`, two text fields `First name` and `Last name`, a date picker `Birth date` and a button `Save`. …but why? If you start out simple, that might seem needlessly complicated. But once your application scales, you get benefits, such as: * you might reuse that same model in different views. What if you don't just want a form, but also a list? How about a graphical report? Maybe instead of WPF, you later want a web app. Or a mobile app. Or even a console app! They can all use the same model, because the structure of a person doesn't change. * serialization/storage of the model becomes easier. The model already closely mirrors what a database entity would look like. * testing becomes easier. You can test the model without having to first mock a fake UI. * you might reuse that view for different models, too. Built a fancy list view? You can make it so flexible, it can show not just persons, but also companies, invoices, or inventories. * again, the view also becomes easier to test. You don't need to rely on real data. * more generally, your code becomes cleaner, as the concerns of those two classes have been decoupled. OK, but how do the view and model interact with each other? Here's where MVC, MVVM and others (such as MVP) differ. Note that Microsoft uses multiple of these paradigms — ASP.NET MVC is, well, MVC. But WPF, UWP, Xamarin Forms and other UI frameworks tend to prefer MVVM. With MVVM, the third class you create is called (slightly confusingly) the **view model**. The view model takes your model and adapts it into a new object for your view. In the simplest case, that just means that your view uses data binding to bind those labels, text fields and date pickers I mentioned earlier to properties in the view model. For the text fields and date picker, those simply map one to one. But for the `Title` label, we'll do something special: it's a read-only property that combines those: public string Title =&gt; $"{Model.LastName}, {Model.FirstName} ({Model.Birthdate.GetAge()})" So that the view can present it as: ## Doe, John (51)
I'm in process of learning mvvm with wpf right now. I just watch videos on yt and I'm trying to get from them most important parts. Also I started to copy and learn from mvvm examples on git whose I found through stackoverflow
&gt;C# 7.0 In A Nutshell I also have a copy of *C# 5.0 In A Nutshell* and its a great reference. I keep it in my vehicle and read it regularly whenever Im bored or waiting around. @op Id say it would be great for my commute but I have to watch the road while driving. Might be a great book for your commute though.
Do you have to use an array? Lists are pretty powerful too. 
Along similar lines I'd recommend Inside C#. It's old and so won't teach you modern C#, but it will teach you some of the internals that good devs will love to know about.
&gt; which parts of .NET they feel are mistakes So a chapter dedicated to VB.NET?
If your code requires unchecked arithmetic to not blow up, you should explicitly wrap the whole thing in unchecked() to both notify the reader of what you're doing, and ensuring your code will survive sometime compiling your code as checked by default. By the time you've wrapped it in unchecked, the code is not much smaller, and it's no faster than &amp; 0xFF before the cast anyway (as the compiler will remove this), making this a *premature optimisation*.
Your struct is a [blittable type](https://docs.microsoft.com/en-us/dotnet/framework/interop/blittable-and-non-blittable-types) and thus should be able to be marshaled without additional overhead. However, I have occasionally seen the marshaler behave inconsistently in this regard. If in doubt, just benchmark it.
https://docs.microsoft.com/en-us/aspnet/core/fundamentals/servers/?view=aspnetcore-2.2
Here's some info from [StackOverflow](https://stackoverflow.com/questions/1405739/mvvm-tutorial-from-start-to-finish). The information from Josh Smith (mentioned in the link) and [CodeProject](https://www.codeproject.com/) were very helpful. The CodeProject has a ton of MVVM examples / tutorials you can sift through. When I first started, understanding the INotifyPropertyChanged interface is what got me going. It's what allows changes to be sent from the ViewModel and the View.
I cannot directly answer this question, but I want to stress something important that people may not immediately realize. MVVM is a discipline you follow in your code. It is not necessarily a library, and you do not need a special library to do it. When you are first learning the concept, it may be easiest if you focus on a project that doesn't use an MVVM library so you can focus on learning the rules of MVVM and what it gets you, without having to learn a potentially complicated library at the same time. I do recommend using a dependency injection library though, even if you aren't doing some sort of locator pattern (I personally don't like this pattern and I avoid it.)
Have you searched for [ffmpeg wrappers for c#](https://github.com/mysteryx93/FFmpeg.NET) by any chance? There seem to be quite a few projects worth looking into, including the one I linked. Not reinventing the wheel might give you more time to do what you want with your project—and, of course, is a core tenet of object oriented programming.
Read into [Nullable Types](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/nullable-types/), it might be the issue. DateTime can't be null but `Nullable&lt;DateTime&gt;` or more simply `DateTime?` can be. Actually a good time to learn as the upcoming C# 8 is finally getting nullable reference types(e.g. classes). 
Might depend on what UI/Front End you are using. With winforms I have been using the DateTimePicker.CustomFormat &amp;#x200B; To set the date (or blank date) I use the following: public void SetDateDTP(DateTimePicker dtp, string dateString) { DateTime dateTemp; dtp.Format = DateTimePickerFormat.Custom; &amp;#x200B; if (dateString != null &amp;&amp; ValidString(dateString) &amp;&amp; DateTime.TryParse(dateString, out dateTemp)) { dtp.CustomFormat = "MM/dd/yyyy"; dtp.Value = dateTemp; } &amp;#x200B; else { dtp.CustomFormat = " "; } } &amp;#x200B; I then use the dropdown DateTimePicker Event to set the DateTime format back to the standard we use. private void DTPDate\_DropDown(object sender, EventArgs e) { ((DateTimePicker)sender).Format = DateTimePickerFormat.Custom; ((DateTimePicker)sender).CustomFormat = "MM/dd/yyyy"; }
Though in that case I'd expect they'd have &gt;&gt; 0 on the last line too! I'm more curious if it wouldn't be more efficient as: \`\`\` ConvertIntToByteArray(uint value, byte\[\] dest) { dest\[3\] = (byte)(value &amp; 0xFF) ; dest\[2\] = (byte)((value &gt;&gt;= 8) &amp; 0xFF) ; dest\[1\] = (byte)((value &gt;&gt;= 8) &amp; 0xFF) ; dest\[0\] = (byte)((value &gt;&gt;= 8) &amp; 0xFF) ; } \`\`\`
The evolutionary aspect of it is also great as it tells **why** rather than just **How** things are. Rather than just say "this is how to use generics" it explains what life was like before them and the problem they solve. It may not be how everyone learns but seeing the difference and justification for features 
Definitely agree with that. MVVM at it's heart is very simple, but trying to learn it whilst also figuring out what magic a complex library is doing behind the scenes can make it difficult to understand. Rachel Lim's articles are very good to get started with. [1. A Simple MVVM Example](https://rachel53461.wordpress.com/2011/05/08/simplemvvmexample/) [2. Navigation with MVVM](https://rachel53461.wordpress.com/2011/12/18/navigation-with-mvvm-2/) 
Have a look at the wpf series from AngleSix it a good channel to learn wpf and mvvm
To me, it looks like the 24 value is for consistency, and the rest are necessary. Though I would have prepended the 0s n the rest to make that explicit. ConvertIntToByteArray(uint value, byte[] dest){ dest[0] = (byte)((value &amp; 0xFF000000) &gt;&gt; 24); dest[1] = (byte)((value &amp; 0x00FF0000) &gt;&gt; 16); dest[2] = (byte)((value &amp; 0x0000FF00) &gt;&gt; 8); dest[3] = (byte)((value &amp; 0x000000FF)); If you *don't* mask before `&gt;&gt; 16`, you're potentially doing a `(byte)` on a more-than-8-bits value. A quick test in powershell... $long = [uint64]599 [byte]$long # &lt;-- Error: "Value was either too large or..." [byte]($long -band 0xFF) # &lt;-- 87 *With* the masking, `(value &amp; 0xFF000000) &gt;&gt; 24` would also work in the `ulong` version.
`0x12345678 &gt;&gt; 16` is 4660. `(byte)4660` is an overflow. Though you could also just do `(byte)(4660 &amp; 0xFF)`
Are you using WinForms? If so, have fun with that nightmare of a control.
If I recall correctly, there are mentions of specific VB.NET features such optional parameters. One of the big ones is the use of interfaces. When it was written, Java was obsessively using abstract interfaces everywhere. To the point where it was really difficult to work with their libraries. (And from what I've seen, Java is still doing that shit.) And of course there is the major versioning headaches they had with COM style interfaces. So in order to avoid those problems, .NET over-corrected in the other direction and used inheritance where they should have used interfaces. 
&gt; Rather than just say "this is how to use generics" it explains what life was like before them and the problem they solve. I wish more discussions of principals and design patterns did that. Far too often people say things "program to interfaces, not implementations" without knowing the context behind that quote. 
This looks very cool. I'm excited.
If you're interested in spending a little bit of money, this book was quite useful for me: [https://www.amazon.com/Learn-WPF-MVVM-pattern-coding-ebook/dp/B01M365NCZ/](https://www.amazon.com/Learn-WPF-MVVM-pattern-coding-ebook/dp/B01M365NCZ/)
Man I wish I'd had this while learning. What would you say is the difference between MVC's Controller and MVVM's ViewModel? 
Not OP, but this is a fantastic and extremely illuminating reply. Thank you. 
If you're familiar with MVC, it's very similar, replace the controller with VM. It's been quite awhile since I dove into it, but that's what I remember.
Thank you!
Nice concise explanation. Where are the controls in MVVM? Do you still have a control class but MVCVM was to complicated to acronym? 
The controller is generally used to facilitate putting the view and the model together, where the view will consume the model directly. A view model is like a secondary model that bonds with the view and abstracts the binding from the model. You can imagine a view model directly between a view and model and a controller grabs both and smashes them together. MVVM = Model -&gt; View Model -&gt; View MVC = Model -&gt; Controller &lt;- View So to speak. Sorry, on mobile. Hope that helps.
MVVM is a pretty useful pattern for separating "view" logic from "business" logic. You have 3 components: * View model - This is an object containing properties representing the state of the view. Examples of appropriate properties might be "IsButtonEnabled", "UsersTextInput", "NumberOfClicks". The view model should not reference the view (usually), otherwise you're losing out on the benefit of separation. * View - This is the user interface code itself. The view should only be aware of the view model. The view communicates with the view using 2 main methods - property binding, and commands. Property binding allows you to say "This textbox's input will be bound to the property MyInput. When the user types something into the textbox, MyInput will be updated with the new value". Commands allow you to say "This button will call this function on the view model when it is clicked". There are other ways to communicate but they are less frequently used. * Model - This is the data representing the problem you are solving. This model should not be aware of the view or the view model. It should be self contained. In an ideal world (depending on the problem domain), you should be to take this model and re-use it in a console app or a web app because it doesn't depend on the user interface. The model doesn't necessarily have to be raw data. For example, in an MVVM project I am doing in work, I have something called a "domain model" which provides an interface to the data using terminology related to the domain workflow, e.g. "CaptureNewImage". Whatever exposes this method may internally use multiple services and various sources of data, but this isn't important to the view or the view model - hence the abstraction. Hopefully this helps a bit with understanding the benefit/use of MVVM. I don't have any good tutorials, but I would recommend finding something just to teach the basics and then jump into a project - it's the best way to learn for a lot of people.
&gt; If you don't mask before &gt;&gt; 16, you're potentially doing a (byte) on a more-than-8-bits value. I am not familiar with powershell but in c# when you use bitwise &amp; you are NOT decreasing the size of the number. If you use a mask on a long the result is still a long aka a 64 bit value. &gt; Also, it seems like (byte)((value &gt;&gt; 16) &amp; 0xFF) would work, but only for unsigned. The problem is that the `&amp;0xFF` is an extra step that can be removed without changing the result!
You probably want to write a bot using something like [TwitchLib](https://github.com/TwitchLib/TwitchLib).
 for ( int i = 0; i &lt; 5; i++ ) { arr2[i] = arr[i]; } &amp;#x200B;
&gt; I am not familiar with powershell but in c# when you use bitwise &amp; you are NOT decreasing the size of the number. If you use a mask on a long the result is still a long aka a 64 bit value. Yes, but a) between the mask and the bitshift, you're limiting it to an 8-bit number b) since both the mask and bitshift are constants, the compiler can tell that it's a safe conversion. I just did it in a console application, and I found that a) if you use variables, it works without the mask and the compiler doesn't complain. b) if you use constants, the compiler will complain that `0x123456 &gt;&gt; 8` won't fit in a byte. It correctly removes the error if you do `(byte)((0x123456 &amp; 0xFF00) &gt;&gt; 8)` So maybe the is or was a strict warning mode for `(byte)(aUintVar &gt;&gt; 8)` at some point?
I would prefer the strong typing instead of an `IntPtr`. But for readability and reliability instead of efficiency. There would not be much efficiency difference, if any, and sounds a bit like pre-mature optimization. Do you have a specific efficient problem in the way those methods are invoked?
How about instead of an explanation - I give you a contrast. In MVC, you expect to bind your model to your view. When creating a user, this might be username, password, email, birthday. No problem. Controller saves. Next time the user logs in, do you want them to provide their username, password, email and birthday to login? If in your view you only provide the username and password, the ModelState won't be valid. (I am wildly oversimplifying - there are obviously ways around this). So instead, you might have the model for the Login view be different from the Signup view, which is more 1:1 with the model stored in the database. You might create a model *just* for the view that logs users in, let's call it a **ViewModel**, all expected binding takes place. Here it is a sub-set of the model that only has username and password. When the user submits, the model is valid (all values pass validation) and you can pass/fail.
Hey! I bought a book named „Learn WPF MVVM“ from „Arnaud Weil“. It’s pretty straight forward and teaches you to build a MVVM App from scratch. 
Besides being classes, they have very little in common. a ViewModel describes an object specifically with what needs to be shown at the view, where the Controller in MVC in simple terms handle showing the proper webpages, and often also configures a ViewModel for the View. 
You could try resetting settings &amp;#x200B;
But won't json serialization and deserialization be really slow? if so, what library should I use for this?
You can access HttpContext.User wherever you want in the Controller.
A ViewModel can really be any proxy for models and doesn't actually need any dedicated view. Maybe you just have a `CustomerViewModel` that has lots of extra logic that interacts with separate data, but you never make a `CustomerView`, only a `CustomerListView` with a corresponding `CustomerListViewModel` which contains a `ObservableCollection&lt;CustomerViewModels&gt; Customers`. MVC controllers is specifically about handling requests.
I want to reiterate what u/Arrow_Raider said, it's easier to understand i you make a project that doesn't use MVVM. Create eventhandlers normally, access data directly through a WPF controller's name within those functions in your code-behind. It's easier to understand what *de-coupling* means if you first understand what *coupling* is. &amp;#x200B; The gist of it is that: by doing what I said above, which is how code was traditionally written, your logic code is now dependent on a specific user interface control's existence, with a specific name, and your user interface is dependent on a piece of code existing elsewhere. Both of these things make code re-use extremely difficult. You can't move the graphical presentation elsewhere without copying all your (probably outdated logic) and you can't move your logic code elsewhere without bringing along all the irrelevant graphical stuff. &amp;#x200B; MVVM tries to solve this.
&gt; `private void SetPropertyValues ... var propertyInfo = this.GetType().GetProperties().Where` Why is it necessary to do this "reflection" technique at all? If the class has e.g. 2 properties, `Foo` and `Bar`, why not just do: ``` public void CopyFrom(ContractMetaData other) { this.Foo = other.Foo; this.Bar = other.Bar; } ``` That is dead simple, readable and fast. You are, I think, trying to be clever. You now have complexity that you don't need and it's not working out. Do something simple.
A control is just a view (that happens to be particularly interactive).
The speed of the serialiser is unlikely to be a problem for you. If you haven't _measured it_ to be slow, assume that it's fast enough. &gt; . We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil.
The various implementations of MVC vary on what a Controller does (for example, in ASP.NET MVC, the Controller is essentially responsible for the lifecycle of a HTTP response: it gets called upon a request, prepares data for the view, returns the view, and then optionally gets called again for clean-up; meanwhile, in Apple's Cocoa/Cocoa Touch as used in macOS, iOS, etc., the Controller doesn't have such a linear flow at all and is responsible for the view's workings). In both cases, you don't data-bind to properties of the controller; the controller has no semantic overlap with the model (quite unlike the view model). Generally speaking, a Controller tends to have a wide range of responsibilities, whereas a ViewModel is far more narrowly defined.
I found the solution, Use Devart.Data.Oracle.EFCore Nugget package version 9.6.659 and follow this tutorial [https://www.devart.com/dotconnect/oracle/docs/EFCore-Database-First-NET-Core.html](https://www.devart.com/dotconnect/oracle/docs/EFCore-Database-First-NET-Core.html) Thank you everyone 
&gt;it's easier to understand it if you make a project that doesn't use MVVM. &gt; &gt;Create eventhandlers normally, access data directly through a WPF Window control's name within those functions in your code-behind. &gt; &gt;It's easier to understand what de-coupling means if you first understand what coupling is. Yup. I regret not bringing that up, but my post was getting long. So as a contrast, I'll take my above example, done the non-MV* way: * Create a new WinForms app. * Create a form and open its designer. * Place a label `Title`, two text fields `First name` and `Last name`, a date picker `Birth date` and a button `Save` inside. * Double-click the background of the form. This generates a `Form.Load` event handler and brings you to its code. * Here, you'll manually set this.FirstName.Text = "John", this.LastName.Text = "Doe", this.BirthDate.Value, and this.Title.Text = "Doe, John (51)". This will work, but becomes awkward quick. And we've only done half of the work here: if the user changes the values of those controls, you'll also want a `Button.Click` event handler on your Save button that then manually reads back the values. And you'll be putting all that code in a class that describes the UI. So at some point, you'll want to extract the model into a separate class. And, for the above scenario in particular, data binding (which MVVM heavily relies on) works well to reduce your actual implementation code to almost zero.
That examples probably done as much harm as it has good, everyone's journey through OOP goes through a stage of writing "header interfaces" because that rules so often stated as best practice without the background to what it means.
It is a really good reference book focusing on C# language specification and .net features. it has good explanations and examples. it follows the one topic one chapter style for the light topics and for the meaty ones it has multiple chapters. i have read most of it and was a good read I absolutely recommend it. 
That's a `ClaimsPrincipal`, maybe having a `UserManager&lt;IdentityUser&gt;` from the DI container and doing: ``` private readonly UserManager&lt;IdentityUser&gt; uMgr; public class MyController(UserManager&lt;IdentityUser&gt; uMgr) { this.uMgr = uMgr; } public IActionResult SomeAction() { var user = await uMgr.GetUserAsync(User); // ... } ```
I second twitchlib, currently using it in a project similar to what OP is doing.
TwitchLib is a decent library for what you want to do, I have a project over on my github that was intended to interact with chat based on commands https://github.com/kfechter/RequestHelper
Might be outdated but you used to be able to access and participate in twitch chats with IRC clients years ago
&gt; But, even if you don’t call the Dispose method, those resources will be freed because .NET classes use the Dispose Pattern. This basically means that if Dispose wasn’t called before, it’s called from the Finalizer when the object is garbage collected. That is, if you don’t have a memory leak and the Finalizer really is called. You have to implement the dispose pattern, it doesn't happen automagically. Dispose is only called automatically in a ```using``` block. Finalisers are not even guaranteed to run let alone forced to call Dispose. Something else that's worth adding to the article, JetBrains DotMemory has test support, so you can write unit tests that assert various memory conditions. It's pretty cool imo. 
Thanks for the feedback @TriptychButWith8Bits. I meant that .NET framework classes internally mostly implement the Dispose pattern. I added link to the dotMemory Unit API, Thanks!
Another common thing that causes problems is declaring a string variable outside of a loop and reassigning it thousands of times inside your loop. Best to declare the strong variable within the loop.
Retaining a reference to memory isn't a memory leak. A memory leak is when something that you're *not* referencing anymore is still allocated.
[Roslynator is good for this.](https://github.com/JosefPihrt/Roslynator/blob/master/docs/analyzers/RCS1077.md)
Something that was causing us a lot of pain for a while was LOH fragmentation. Basically, objects larger than 85k get put on the "Large Object Heap" and aren't subject to the kind of garbage collection that smaller objects are. When the LOH gets so fragmented that there's not enough space to put new objects you can get into all kinds of weird OutOfMemoryExceptions that can be a total bitch to track down.
Why?
Judging by some of the code, the data model is also the view model. property change notification might be causing issues during deserialisation.
Removed: Rule 1.
Removed: Rule 4.
I’m not sure. I do know that it is a surefire way to quickly use a LOT of RAM. I guess this isn’t a memory leak as much as it is the GC not releasing unreferenced strings. I don’t know is the Core GC has the same problem.
Honestly never seen anything like that in my time... but then again, allocating strings in loops is going to have memory consequences one way or another
If you're on 2017 Enterprise (maybe community too, not sure) try Tools \[menu\]&gt;Get Tools and Features, then have a look around and install any feature that mentions C#, for example .NET desktop development.
Thanks, I’ve started downloading those. I’ll reply if it works. Thank you so much.
What is the reasoning behind Events if we are going to publish from 1 command only? One purpose I can think of: Keep the Handlers as stateless as possible. But, it does over-engineer the solution since you jump through files just to understand the Command. My suggestion is to introduce Event only if you have 2+ handlers that publish the same event
The idea behind events is to decouple the overall solution. Whether it's a simple scenario like a single command producing a single event, or a whole chain (saga/process manager which we will talk about in one of the future episodes). Since events can be subsribed by 0...N distinct services it provides a great flexibility and it doesn't really matter whether it's a simple CRUD or a complex process.
Maybe switching the types of those properties to DateTimeOffset will help
But in the database, it is used DateTime, which most of the programs use. Can I fix this just in the program?
`DateTime` has no time zone information.
Oh thanks.
But when I read from and cast it to utc, do I have to cast it back to datetime when writing to DB?
Yes, you are responsible of maintaining the timezone information yourself, because `DateTime` does not store it. Or.. be smart and use a type that contains the timezone information: `DateTimeOffset`.
I agree (when the commands increase, and there are multiple handlers) I understand this is a simple example. In practice, I would inject the logger (like in User command) and use it directly, instead of introducing an Event+EventHandler. Later, as multiple commands couple to a shared logic (sending e-mail or writing events to event store), I would introduce Event+EventHandler
Events are just one of the integration patterns, and we simply wanted to introduce them, before getting into more complex topics such as distributed transactions :).
It’s still possible to get traditional leak behavior out of the framework (ever-increasing memory usage, until you hit the OS limit) by using stuff like asynchronous socket operations (old-style, not a sync/await). This happens because a buffer gets locked in place during the call and the GC can’t compact it. 
You can probably convert your bad DateTime values with var correctTime = new DateTimeOffset(dateTimeFromDb, TimeSpan.FromHours(1)) However this is a kludge and won't be robust. A permenent fix would involve either converting the database to UTC and dealing with this in your client programs, or, ideally, storing utc offset values in your datetime fields on the database.
Sounds good, thanks for the good discussion.
Thank you too :).
When I post a query to database to write back, it want a DateTime value. How can I specify the DateTime to be timezone +01
because strings are immutable despite being reference types. inside the body of the loop you are creating n new string objects 
I see some really great explanations here in the comments. I just wanted to add from personal experience. Don't use PRISM. It's way too heavy for most needs. Like buying a Porsche exclusively to make your 15 minute morning drive to work. It can do it, naturally. But the word overkill applies. Just my opinion, take it or leave it. 
&gt; Retaining a reference to an object you don't immediately need isn't a memory leak, Retaining a reference to an object *you will never need again, indefinitely* is a memory leak. Any time you accumulate memory usage uselessly that will never be released is a memory leak.
It's not reassigning the string variable that's the problem, it's string operations that create new strings inside a tight loop that is the problem. Strings are immutable, so `foo + "a"` is creating a brand new string and the old one is thrown away. You create any `new` object inside a tight loop and you're going to get runaway memory usage until the GC has time to deal with it. Use `StringBuilder` (or the new `Span&lt;T&gt;`) for manipulation in a tight loop.
It's really important to emphasize that the finalizer-based dispose pattern is not a substitute for calling \`Dispose\` (or utilizing language constructs like \`using\` that do this automatically), nor is the disposal that may result from a class that implements this pattern equivalent to calling \`Dispose\`. The finalizer-based pattern exists \*only\* to allow managed code to release \*unmanaged\* objects (things like OS handles that are acquired and released via P/Invoke calls) if the object was not properly cleaned up. The rules of finalizers prevent a class from being able to do things that might normally be done inside of a normal call to \`Dispose\`--in particular, finalizer code is prohibited from accessing any other managed references (i.e. instances of any other class), so any other type of cleanup is more or less impossible.
Doesn't change anything.
What you're describing is simply one way to achieve a memory leak. More generally, a memory leak is when an application exhibits an overall increase in memory utilization over the time it's used without a correlating change in behavior. Neglecting to explicitly release allocated memory is one potential manifestation of a memory leak. Memory leaks can event be a consequence of design; consider if Chrome kept an in-memory cache of every page you visited and never removed them and did not provide the user with a way to manage it. 
You cannot. DateTime *does not support time zones* (as /u/AngularBeginner said). If you must use DateTime, use UTC **only** in your DTO and convert to local time as needed when you display the value.
Because calling `ThenBy` makes no sense on a sorted collection, and that extension method is the primary use-case for `IOrderedEnumerable`. You shouldn't be using that interface directly.
Exactly, and this is really important to remember for objects like `StreamWriter`. It implements `IDisposable', but doesn't itself contain any unmanaged references, and as such has no finalizer. If you forget to dispose it, it may get GC'd before flushing its internal buffer to the underlying stream and you can lose data.
They do it inconsistently and there are even classes that implement it but shouldn't because everyone disposes a class that was designed to be long lived. It's a jungle in there. It's one of those chess like problems. Really easy to describe the basics but at some point you're going to get punched in the face with a clock. 
A lot of the causes of leaks he points out are just bad practices in general, but he often fails to show an alternative. Unless it's a pure function, static methods will likely have side effects. Static properties are a concurrency violation waiting to happen. Making things static is often a design issue, and offers little benefits. The alleged performance benefits of even pure methods can be negligible and is often just a symptom of premature optimization. Just instantiate a class. (If it is "too big" that's another code smell you need to deal with.) Don't re-invent caching. The framework already has a very good MemoryCache class. Make sure you set limits for invalidation. Captured members are just another code smell for side effects. The example he shows is a classic where a method modifies an argument, which is arguably a no-no and why languages like F# prevent an entire class of bugs. Don't modify arguments, return the desired result and leave the argument intact. Don't use Threads, use Tasks and Async. Use Task.Delay instead of Timer.
Don't just respond with "It is too!", that's not constructive. We understand that you call any situation where memory is used up unnecessarily a memory leak, but it's something different from the usage of the term in unmanaged languages, and by reusing the name you are making it harder to properly discuss issues without misunderstandings. If someone opened up a faucet and kept filling buckets with water, would you say that there's a leak in the pipe? No, because the way to solve the problem would be different. A memory leak in the usage of the term in languages like C++ is memory that can't be accessed any more, neither by your code nor by the OS. That presents itself with different problems and different solutions from keeping references around that you don't need. So arguing whether it is or isn't a memory leak is pointless. Nobody thought that we needed a way to waste memory and then invented and patented the term Memory Leak™. If people use the term for .NET reference leaks then that usage will stick. It's just not helpful. 
This is the first time I have even heard of this definition of memory leak. Even in java and Python, the garbage collector automates clean up of unreference dobkects.
Yeah I don't agree with that at all. A memory leak is when you *cannot* deallocate the memory you're using anymore. That's why it's a leak. Holding on to things unnecessarily is just holding on to things unnecessarily. There's nothing preventing you from cleaning it up.
I think that first tutorial by Bob Tabor on Microsoft Visual Academy covers it
Which definition are you referring to? Yes, in all garbage collected languages unreferenced objects are freed. The discussion is about whether the term "memory leak" only applies to non garbage collected situations or if it should also be applied to objects that aren't freed because they are simply still referenced.
Just EF right now. It scans the context for `DbSet`s and creates GraphQL fields for them. It treats each individual set as an `IQueryable` though so it wouldn't be hard to add that as a feature. Did you have en idea in mind?
It's a LINQ implementation detail to avoid API clutter, don't derive from this.
Removed: Duplicate, https://www.reddit.com/r/csharp/comments/ac6v68/c_optimizing_the_windbg_dml_parser/ Not your fault though. Both submissions were caught by automod, but their submission was made before yours.
SQL datetime columns don’t store the offset. Use a separate int column to store the offset in minutes. 
I meant the C++ version of the definition. My point was that it was really weird to see the .NET definition. In C++ and Java, memory management is quite different, yet the definition of memory leak AFAIU is the same.
I dealt with an issue like this before, it’s because the flowdocument has both content positions and element positions. There are unseen flowdocument specific tags affecting the reported position. It’s not the TextPointer logic you suspect, its the foreach loop where you are trying to use the regex index to match the flowdocument index. 
Most databases support something analogous to DateTimeOffset and if you want to store values with timezone-info in it, you either need to use those types, or you can create a separate column which stores the timezone's name (the offset isn't enough if you want to do calculations with the datetime-values because timezones have changing UTC-offsets throughout the year, because of DST). More broadly, I recommend checking out [Nodatime](https://nodatime.org/), which has a much nicer/more consistent implementation of datetime-logic than the classes of the .NET framework.
I've been using Xamarin.Forms on and off for about a year now. I just created a simple plugin to display a view with floating navigation menu. [GitHub](https://github.com/shaw-007/ScrollingNavigationView) and [Nuget](https://www.nuget.org/packages/Xam.Plugin.ScrollingNavigationView)
As a side note, Microsoft recommends not using the HttpClient in a using block, to avoid using up too many sockets. Instead, make a static HttpClient inside your class and use that for all web calls. See an example here: https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client Does anybody else know of any other classes that implement IDisposable that should not be put in a using block?
Hello, could you provide me an example?
But it seems like the date only turn out wrong when it is getting serialized, but is correct after getting it directly from from SQL.
`HttpClient` is the only one that I know of. I'd be curious if there are others out there too.
A single double is trivial, this would be more relevant if you want to avoid the entire `MyStruct` being copied, *which it is currently via the dictionary indexer*. The entire point with valuetypes (structs) is the fact that they're being copied. Cheap allocation for small objects, expensive iteration. &gt; Next, reference type assignments copy the reference, whereas value type assignments copy the entire value. Therefore, assignments of large reference types are cheaper than assignments of large value types. [https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/choosing-between-class-and-struct](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/choosing-between-class-and-struct) &amp;#x200B; By storing this in a dictionary you're already in a bind as the heap is now involved. If the objects are large then make them into classes instead. If that's not possible then remove the dictionary and use an array instead. Then you can pass in the MyStruct as a readonly ref (in) argument and use the same values it contains, no copying. Go to Project - Properties - Build - Advanced - Language version - C# latest minor version (latest) - 7.2 is required Also, for demonstration: Properties - Build - Allow unsafe code using System; readonly struct MyStruct { public double M0 { get; } } class Program { private static void Foo(in MyStruct item) { // can't do this because it's readonly - however it is being copied if your struct isn't readonly // item.M0 = 34; // check the item address unsafe { fixed(MyStruct* ptr = &amp;item) { Console.WriteLine((int)ptr); } } } static void Main() { var items = new MyStruct[10]; items[0] = new MyStruct(); // when assigning to a variable, avoid copying with "ref": ref var item = ref items[0]; Foo(in item); // using the "in" keyword here is not actually necessary - but it shows intent. // compare the item address unsafe { fixed (MyStruct* ptr = &amp;item) { Console.WriteLine((int)ptr); } } } } [https://docs.microsoft.com/en-us/dotnet/csharp/write-safe-efficient-code](https://docs.microsoft.com/en-us/dotnet/csharp/write-safe-efficient-code) [https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/in-parameter-modifier](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/in-parameter-modifier) We can further optimize by getting rid of the array heap allocation altogether by using the new `Span&lt;T&gt;` and `stackalloc`. Install the nuget package `System.Memory` Now you can stay completely on the stack: Span&lt;MyStruct&gt; structs = stackalloc MyStruct[100]; Foo(in structs[0]);
Are you using Google Maps by any chance? I remember trying to make a prototype of a interactive Fallout 4 map years ago and was trying something with that. The tiling was weird and tedious. I can't remember since that was 3 years ago
This is sort of a strange question to someone that "gets" it. It took me years to really do that, and I think it's part because I spent too much time with my nose in books and not enough time with my nose in code. This is going to be long, but this is the kind of thing I wish I'd found early. --- ## We shouldn't always use patterns. MVVM is not an incantation that will make your application easier to manage. It is a design pattern. What a *good* design pattern book will tell you is that all design patterns make your code *more complex* in some way. So why do we use them? It's a tradeoff. In return for the extra complexity, design patterns make it easier to manage some different kind of complexity we had before we adopted the design pattern. This means for very simple applications, especially ones with just one Window and less than 10 controls, it often feels like setting up MVVM creates more work than just writing the app without it. *This is correct!* MVVM is a pattern for managing how components in a GUI application manage state. If your application is not large enough to have components that need to interoperate, MVVM is a burden! So while it's good to practice with simple things, it's not until you start writing larger applications you'll get it. I don't think many articles (or any at all) tend to cover this important fact. (If you want a suggestion for a "good" design patterns book, the best introduction I found was *Head-First Design Patterns*. It's old, and it's focused on Java, but patterns transcend languages.) --- ## Presentation Model and Separation of Concerns. MVVM is a very specific implementation of an entire family of patterns called "Presentation Model". PM is, itself, a very GUI specific expression of a more widespread programming idea called "Separation of Concerns". SoC tells us that each bit of code we write should do one thing, and one thing only. This applies to larger and larger units of code that we might expect to do more than one thing by saying, "If the two things are logically inseparable, that's OK." So, for example, we don't expect an `Add()` method to also perform subtraction, and we definitely would think it stinks if it is also the method that controls your application's icon. And if `Add()` is inside a `Calculations` class, we wouldn't be upset if `Multiply()` is also in the same class. Those two things are logically similar so it's OK that the class does both. But if we find `Calculations.PaySalary()`, we get upset. Presentation Model is a pattern that applies that to GUI code, with very little detail. All it says is that the code that worries about your GUI concerns should be separated from your code that worries bout your logic. GUI concerns are both displaying things to the user and handling user input. Presentation Model says that those parts of your code should not know much about the parts of your code that do things like "save data to the database", and vice versa. I like to describe PM patterns as "GUI", "Logic", and "Glue". Even if you're not using a pattern, you'll be surprised you're already writing all of this code: * **GUI** code is the stuff you have to write to display things to the user and interpret user input. That includes layout code, forms, windows, event handlers, etc. * **Logic** code is the stuff that you'd still have even if it was a console application. "Save this to the database", "do this calculation", etc. * **Glue** is the stuff you have to write so when the user interacts with the GUI, the right Logic gets executed. "When this button is clicked, get all the data from these controls, create an object from it, validate it, then save it to the database." Every implementation of PM involves making specific decisions about how these three types of code are implemented and interact. --- ## Presentation Model example: MVC Model View Controller is one of the older, more popular examples of a way to implement Presentation Model. Some platforms, like Mac OS, have required an MVC implementation since the 90s. Microsoft took more than two decades to catch up to this, and WinForms has no built-in support for it at all. But that presents an interesting advantage: since there's no "magic" to the implementation in WinForms, it's easier to describe it. Consider, in isolation, a Form that lets the user input some data to create a new customer. It has some text boxes for name components, a date field for a birthday, and so on. There is a button to save the new user, and a button to cancel the "add" operation and discard the data. In a non-PM approach, you'd make an `AddUser.cs` Form/Window and implement most of the code within. This has a high probability of mixing unrelated concerns. So if we adopted MVC, we'd have three different classes deal with this job: * `Customer` is a "model". That is to say, it represents JUST the data like a name and birthdate. * `AddCustomerView` is a UI type, maybe Window/Form, that has UI that can represent all the properties of a `Customer`. It also has a concept of a "Save" and "Cancel" operation, probably buttons/menu items. * `AddCustomerController` is the glue that connects the two and requires almost all of the explanation. So when the program decides it's time to add a customer, it probably first creates `AddCustomerController`. That instance is passed to the constructor of an `AddConstructorView`. This causes a ton of things to happen: * `...Controller` creates a new `Customer` instance with blank or default information. * `...View` copies all of that information into the appropriate UI elements. * Each control's change events (like `TextChanged`) are configured to tell the `...Controller` instance when they've changed. That causes the `...Controller` to validate the input and either update its `Customer` instance with the new information or note that the data is invalid. * Some events the `...Controller` might raise, such as "when the data is invalid", are handled so the UI can respond to those situations. * The "Save" and "Quit" button click events are set up to call methods on the `...Controller` type that do the real work. So logically speaking, it's like the `AddCustomerController` is a mediator between the GUI and the logic. It handles all events from both sides, and does the actual work to make the changes the events imply. This is tedious as heck to implement by hand. So many people write or use a framework to help automate this process. --- ## MVVM: Like MVC but Magic Honestly MVVM is just 'MVC with WPF data binding'. Let me describe the same bit of an application above, but with MVVM. In a WPF application, we'd make even more pieces, but we might cheat a little depending on our devotion to dogma. First, let's talk about the letters of MVVM: * **M is for Model**, which is just like in MVC. These types tend to be data-centric or logic-centric, and are the types you'd use even if you had no GUI. * **V is for View** and these are still the UI types. They represent Windows, Forms, Elements, Controls, etc. * **VM is for ViewModel**, which is only a *part* of MVVM's glue. Its job is to represent Model types in a way that is compatible with the WPF Data Binding framework, which is the magic part of WPF's glue. VMs do some of the work of controllers, but not all of it. * **D is for Data Binding and invisible**. Data Binding does the controller-y work of making sure if a ViewModel property changes, the part of the View it represents is updated and vice versa. * **C is for Command, and is invisible**. Data Binding only works with properties. Properties aren't methods. Sometimes you want a UI event to DO something, like when you click a button. A Command is a special value that represents "doing something". So Commands are how Data Binding can do work. So they could've called it "MVVMDC", but then it looks like an invalid Roman numeral and not a pattern. Let's talk about how our app segment above would be implemented in MVVM: * `Customer` is still the same, there's no need to change it. * `CustomerViewModel` is probably "Customer plus `INotifyPropertyChanged`. * (This is because Data Binding can only work between special WPF properties called Dependency Properties and/or properties on types that implement INPC.) * `AddCustomerView`is a Window, mostly XAML, that defines the UI elements and how they are bound to properties. (The properties are incidentally the same as those on `CustomerViewModel`, but philosophically speaking any type with the same properties could be bound.) * `AddCustomerViewModel` is a type that represents the "glue" for our concept of "adding a customer". So `AddCustomerViewModel` gets created first. It's got a private `AddCustomerViewModel` and some other guts it needs to do its work. Then `AddCustomerView` is created. It's got a special property (`DataContext` or `BindingContext` depending on platform) that it expects to be set to its ViewModel. The moment the program sets that property to the `AddCustomerViewModel` instance: * WPF automatically creates all the event handler magic needed to connect the bindings in `...View` to the properties in `...ViewModel`. * The Save/Cancel buttons have a `Command` property that is bound to relevant properties in the `...ViewModel`. When the user clicks the button, it tries to run the code that property represents. So if you squint really hard, you'll see this is working exactly like the MVC solution I described, except we have to do a LOT less work to "glue" the UI to the logic. --- ### A squabble 90% of ViewModels aren't much different from their Models, they have the same properties and add INPC. In those cases, some people skip the VM and use the Model directly. Other people think this is a code smell. In my opinion, there are two kinds of developers: * Developers who argue about the right way to do this. * Developers who ship code. --- Annnnd... I'm at the character limit. I hope this helps.
Only HttpClient and the HttpClientHandler if you create your own instance of it. 
Without digging too deep. First thing would be ease of use with good defaults. I'd like to run my documentation XML files and assemblies through documenter and get something useful right away. Like 5 minutes tops for this task. If I see generated readable documentation then I can go further if it is not possible and I have to read for an hours about some obscure configuration files then I am done. Second there should be a markdown export option. Nowadays there are many tools that can format markdown into web pages with nice styling and other goodies. Then there is this crossplatform thing. .net core command line utility would take care of that. However, GUI is still an awesome option so do not get rid of it. In my experience windows devs still like UIs for quick things and in many cases they are more productive than comman-line only people. Finally or maybe it had to be first. Put the link to generated documentation demo in the beginnning of the page. This is what you are selling. Currently documentation generator speed is the first item there. I have not hear nor seen anybody complaining about documentation generator speed ever. Lots of complaints about formats, configuration, styles, etc. but never ever about speed :) Put demo and ease of use and possibility to automate doc building in the beginning. These are things that matter most.
I think inlining could theoretically solve this, but I would be surprised if it worked out that way in practice. If you have determined with a benchmark that struct copies are indeed a significant performance drain, [`ref return`](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/ref-returns) can be used to avoid them. However, this is not supported by the `Dictionary&lt;,&gt;` class and would require a custom/modified collection type.
Thanks. Looks like the only solution is refactoring my large struct to class. Span&lt;T&gt; won't work because my dictionary is class member and returning by reference support only arrays, though my case require collection resizing during runtime.
There are various projects for taking advantage of GPGPU in .NET either via actual cross-compilation or simple interop with the native libraries, but I don't know any specifics about them. Another option that is natively supported in .NET could be CPU SIMD instructions, either via [`System.Numerics.Vector&lt;T&gt;`](https://docs.microsoft.com/en-us/dotnet/api/system.numerics.vector-1) (desktop CLR) or [`System.Runtime.Intrinsics`](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.intrinsics.x86) (Core CLR only).
Yes, unlikely ref return isn't supported by flexible collections. Thus creating class instead struct seems like only way. 
This looks like a great solution for some of my problems! Thank you. I'll still keep looking for a GPGPU library that works for what I need it to but I completely forgot that CPU SIMD was a thing. 
To me, "memory leak" is the observable behavior of a program consuming more and more memory over time without returning it (non-asymptotically). Period. How it's leaking that memory, in C#, is most often dangling references. As this is /r/csharp and an article about memory leaks in C#, that seems pertinent, don't you think? You are correct that dangling references has a very different solution than a native interaction that causes inaccessible-but-consumed memory, but that's what you investigate after you've determined that you had a problem. &gt; If people use the term for .NET reference leaks then that usage will stick. It's just not helpful. Well, I think you're too late. That usage is common among C#/Java/Python/Javascript/perl/etc. developers, too.
Low-level performance isn't a concern for most developers these days, so this is an interesting solution to getting high-performance and reliability.
About efficiency, would `Span&lt;T&gt;` help with anything? About Unity: I very much enjoy how the engine has been progressing. Their roadmap, including their upcoming entity-component system, is awesome, I think Unity has gotten to the point where it is arguably better than Unreal. It's certainly more user-friendly. But like most long-running, complex frameworks, it has built up legacy quirks over the years. * Some of their coding standards irritate me. That's some of the better Unity code I've gone through, but still ... `k` prefix for constants? Lower camelcasing for methods &amp; structs? * Mutable structs? I always heard that was, and I quote, evil. * HPC# sounds, to me, to be a different flavor of C#. They may be doing some very clever, low-level things but it's C#, unless I'm massively wrong. * Unity SDK has some places they allow you to fail. Their new, intriguing entity-component system requires component structs to contain only blittable fields or you lose performance benefits. But they offer no constraints for that. * Really wish they had an army of tech writers &amp; opened up their docs to user contribution. They have a *lot* of material, but it has holes. * Some of their naming isn't clear... The entity-component system's `WorldManager`? What does that do?? &amp;nbsp; That's my unasked for 2-cents. 
Hello, Sorry to bother you with this. Currently got a project setup that uses mvvmcross, and its working very well. but ran into the issue where i want to use MahApps.Metro for window styling, this force me to use Mahapps its window, which is used by MvvmCross. Since you have worked with it before, do you know if its possible to setup up without using the MvxWindow/MvxPage etc?
The naming convensions in the Unity APIs have always bothered me, too. In my opinion if you want to use C# you should use the conventions set by Microsoft or the wider C# community - stuff like PascalCase for method names. I think a lot of the Unity dev team's coding standards may be left over from the UnityScript (JavaScript-based) days. Although that's just a guess.
I wish there was a distilled list of "trust me do this" best practices when it came to this. For example, "trust me, use .ConfigureAwait(false) in your library code". For memory in C#, here's what I have: 1. If an object implements IDisposable, you should dispose (or use it in a using block). Except for HttpClient. 2. If a class owns an IDisposable, the class itself should become an IDisposable 3. /u/g2petter says that objects larger than 85k get put on the "Large Object Heap" and aren't subject to the kind of garbage collection that smaller objects are. I have no idea what to do about this. Clear objects before they become large, and save them into a database? 4. Some of what the article says. Events need to be cleared 5. If A holds B and B holds C. And B becomes null, does C get cleaned up if there are no other references to C? 
Oh, oh I'm starring that.
&gt;/u/g2petter says that objects larger than 85k get put on the "Large Object Heap" and aren't subject to the kind of garbage collection that smaller objects are. I have no idea what to do about this. Clear objects before they become large, and save them into a database? This normally won't cause any problems. Until it does. When it does, things that haven't caused problems in the past will suddenly start causing problems. This article is a decent introduction: https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/large-object-heap
Performance is a tricky thing. I'm just back into C# (because of u3d) and see so many options to optimize the workflow, the game itself, animations, objects, texture quality, lod... The article shows, there are also ways to put an intelligent parser/compiler at it. The IL2CPP compiler already does some wonders if you understand it. If you really get into perf/fps problems, Unity has on of the best debuggers for that. Unity "just" learned about using multiple threads/cores on mainstream computers. Many devs don't even think this way. The new job system requires some planning, how you could really divide your code in tasks/jobs that can be executed in parallel. I expect many games to be more *vivid* if this is properly used. For those who want to deep dive into this, we found some well written tutorials, how you minimize the incurring costs when to call a native ("plugin") dll written in C++ (or C, Swift...) https://jacksondunstan.com/articles/3938
Just because Microsoft implemented their own interface incorrectly doesn’t mean the general rules in the article are mostly right. This is a design flaw in HttpClient, not the other way round.
Actually I had solved this problem a bit ago. But, oh my god the perfomance of the rich text box after 200 &gt; characters is crazy. I have to wait a few seconds for everything to mark then I can continue. And this is done on every textchanged event. It's impossible to work with
You could make a class wrapper with a ref readonly property returning the struct. Pass around the object.
If you haven't mastered object oriented programming yet, that's what you should be doing. If you have, then sure go ahead and learn WPF.
Exactly what I was looking for, thanks for answering. Looks like I'm sticking to mastering OOP for the time being Will leave this thread up for other people who have the same question
Good points! Regarding `Span&lt;T&gt;`, unfortunately you're still in managed memory land so it won't be as fast as Unity's new Native Collection types which are actually unmanaged contiguous blocks of memory. Mutable structs are extremely common practice in C++ because you can edit the struct directly, but the way C# treats them makes them unintuitive to deal with at first, because C# creates a new struct object with the value of the original when returning a struct from an array subscript or passing a struct to a function. A quick example: ``` struct Foo { int value; } void Test() { Foo[] fooArr = new Foo[1]; fooArr[0] = 1; Console.WriteLine(foo[0]); // prints "1" Foo valueCopy = fooArr[0]; // creates a new Foo with the value of foo[0]. This is not a reference to foo[0]! valueCopy = 2; Console.WriteLine(fooArr[0]); // still prints "1", because we edited valueCopy, not the data at foo[0] // all you have to do is assign the value of valueCopy back to foo[0] after modifying it fooArr[0] = valueCopy; Console.WriteLine(foo[0]); // prints "2" } ``` You should check out the `ref` and `out` keywords for modifying structs passed to functions, as well as ref locals. You're pretty much right about HPC#, they just seem kind of intent on it adopting C++-esque styling for some reason. I personally am not really following their in-house style myself as it isn't to my tastes. As for their docs I wholeheartedly agree, but ECS/HPC# is still new and I think it will be some time before we get mature documentation. I spent the last week writing a line renderer with ECS / HPC#, and I had to do a lot of experimentation to figure out how everything works. I'm a long time Unity person and am having a lot of fun exploring HPC# so if you have any more questions about this stuff I'd be happy to chat about it!
Learn win forms. It isn't as flexible or new as wpf, but it still does the trick for basic apps, plus it allows you to focus on OOP
You don't need to understand C# to use WPF. It's a .NET tech so it works with C#, VB.NET, F#. That's not a smart arse answer, you don't need to master C# to learn WPF, and learning some WPF will give you a place you can learn more C#/OO and other tech, because it's always nice to learn in a visual environment.
I think you should start learning WPF now, and continue learning C# while you are at it. You can see WFP as being like windows forms but with a layout language (XAML), which you can view as being a lot like HTML. I'm trying to make it less of a big deal, which is what you should also strive for. WPF can be used this way - it becomes more powerful when you use MVVM, but you perhaps could get familiar with it without MVVM at first, so you can see how it's also very similar to windows forms. Or you could find some tutorials on WPF and MVVM and see how they work out for you. Go for really simple ones, and don't get bogged down in MVVM framework choice - find the simplest tutorials and use which ever framework they use, although perhaps avoid Prism and ReactiveUI for now.
No, this is the worst advice ever, please ignore it. You won't master anything in isolation, and OO is not even one third of the esoteric programming paradigms let alone anything more practical. You program to make software, and software that works requires a bunch of skills. We learn them in parallel. Go learn some WPF, see how it feels. Being an OO master will not help you master WPF, but knowing some WPF will probably make learning OO a bit less academic.
No reason why you can't pick it up while learning the language. Might be helpful if you have an existing codebase to work with. 
Signing up [here](https://visualstudio.microsoft.com/dev-essentials/) (free) gives you a month of access to [pluralsight](https://www.pluralsight.com/paths/csharp) which has a ton of quality tutorials. udemy.com is frequently recommended as well - but not free, so maybe take advantage of that free month of pluralsight, get as much out of it as you can and hop on udemy if you need/want to. there's some helpful stuff in the sub's sidebar too, in case you're on mobile.
I use controllers in MVVM. There exists my generic logic to manipulate my models and trigger events. I can then reference those controllers from my viewmodels commands. All my controllers are instantiated and with public get references on my App object. My base view models has a reference to my current application instance. Then, in my viewmodel command: this.App.PersonController.ChangeName(this.Person); 
Meh. You can boil this down to: "we have more experience in C#, so I think C# is better than C++ for Unity." Which is a *perfectly fine reason*. But then he goes on to inject ridiculous language war statements that pretend C++ is the problem. I'm surprised such a long-time dev is still worrying about justifying their language of choice.
It’s easy to pretend c++ is the problem because c++ IS the problem. Did you even rtfa?
Looks like the opinion has flipped and now most people think its worthwhile to learn I'll give myself a few weeks of trying to learn it and see how I feel at the end of them. Thanks for the advice everybody
&gt; Unity "just" learned about using multiple threads/cores on mainstream computers. Many devs don't even think this way. The new job system requires some planning, how you could really divide your code in tasks/jobs that can be executed in parallel. I expect many games to be more vivid if this is properly used. This is actually a huge unsolved problem for games. This exact form of parallelism has existed in Source Engine for at least a decade. Other game engines have tried it too. I believe John Carmack addressed it at one point during one of his Quakecon talks about Doom 3. The issue they constantly run into is that there are only so many parallel things you can run. All the important stuff required for the game will usually still end up pegging one core with a largely serialized problem and lightly loading one or two others. So what you can try to do is "scale up" some embarrassingly parallel task, like ticking AI think functions more often, rendering more physics objects etc. but even this has its limits as most of the embarrassingly parallel tasks you might do in a game are usually better suited for the GPU which could do them dramatically faster.
MORTAL KOMBAT!!!
I read the whole thing and I can't find any strong points against C++. His reasoning perf-wise is that he's already written tooling for C# to do certain types of portable optimizations. But he glosses over the many C++ libraries that have existed for decades that do the same things. This part of the blog post was almost silly and made it hard to take him seriously. He claims memory safety is of high importance, but a) it's really not hard to write safe code in C++ and b) I know people are really on a basic guaranteed memory safety bandwagon right now with Rust etc. but is it *really* more important than raw performance for games? The two claims that do make sense are that C# is easier to debug, and that it has better IDE support. Lowering the barrier of entry into game programming is huge, and would have been my leading argument if I were the one writing the blog post.
&gt;Regarding &gt; &gt;Span&lt;T&gt; &gt; &gt;, unfortunately you're still in managed memory land so it won't be as fast as Unity's new Native Collection types which are actually unmanaged contiguous blocks of memory. That doesn't sound right, Span&lt;T&gt; is a ref struct and can only exist on the stack - there's no GC.
&gt; Regarding Span&lt;T&gt;, unfortunately you're still in managed memory land so it won't be as fast as Unity's new Native Collection types which are actually unmanaged contiguous blocks of memory. `Span` can actually point to unmanaged memory too! They have more restrictive use than Unity's types, though, so it may still not be as viable.
My first job out of college was doing WPF, which at the time was something that I had never heard of. There are a surprising amount of tutorials out there for WPF, which was ‘considered’ to be absolutely dead at one point. To be honest, you’ll likely have a harder time wading through all of the MVVM drama/dogma than figuring out XAML. 
&gt; Does anybody else know of any other classes that implement IDisposable that should not be put in a using block? `DBContext`: https://blog.jongallant.com/2012/10/do-i-have-to-call-dispose-on-dbcontext/
&gt; PascalCase Yeah, it really bugs me when code doesn't use pascalCase.
Isn't the argument about greater control over the assembly code spat out correct as well?
Going a bit "Dirk Gently" here, development is holistic :) 
I've done a lot of similar optimization, targeting very specific assembly code, in both languages. Actually helped someone with this in C# just a couple weeks ago. They are both pretty similar in the simple cases -- you can usually target specific assembly. C# sometimes makes you work for it a little more -- e.g. manually inlining some code, or avoiding some of its features that enforce safety checks, but can often match C++ if you try. For the advanced cases, C++ lets you use intrinsics (for which there are plenty of zero-overhead cross-plat libraries for e.g. vector stuff) to target very specific assembly. For C#, the options are similar though less comprehensive -- Microsoft has a decent SIMD library that I've used a handful of times.
I thought Ordered collections meant that they returned enumerated items in the order with which they are entered into the collection, whereas Sorted collections return the items in ascending logical sort order?
With OWIN your startup class was defined with the OWIN startup attribute somewhere in your assembly. With Core (Kestrel) it is defined with the generic method you mentioned. If you are starting a project with one of the templates I noticed that they move the Web Host building off into a different method that chains a bunch of calls to configure it. Since they do it this way you don’t really see what it’s doing. I recommend seeing what each method is returning so you get a better idea. And if you haven’t seen it, [this article](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/startup?view=aspnetcore-2.2) is a good reference for getting a better understand of application startup in Core. And if you weren’t using 3rd-party dependency injection before migrating to Core you’re going to want to do some reading on the DI that is stock with Core too!
Removed: Rule 3 Maybe give /r/programmingbuddies or /r/learnprogramming a shot.
Pluralsight will be recommended by a lot of people here for a good reason. I also recommend checking out [Destroy All Software](https://www.destroyallsoftware.com/screencasts) which is not specific to C# but general to all computation. There are also good servers out there like the C# Inn which /u//Kaisinell runs. On there you can find lots of developers from senior to junior experience. It's also a decent spot to start a new project with other people, or just to ask questions in real time. One of the major benefits of working for a company writing C# is having that on-demand access to other developers. It really speeds up learning sometimes to just ask someone if you're on the right track or not. [Microsoft Virtual Academy](https://mva.microsoft.com/) is actually a great resource as well.
I find the AI of many current shooters laughable, still six of my cores do next to nothing. Or waiting 10 seconds for the AI moves in a strategy game. Couldn't that game start analyzing my moves when I start moving the first unit, instead waiting when I moved all of them? Some games already do that. I read a postmorten from some PS3 devs. They pre-constructing parts of the next level while playing the current one, to reduce annoyingly long loading times. This one is actually tricky/advanced in Unity. Some modern engines have full damage models, with correct effects, shadows and everything. Years ago, that would have been rather impossible or a very hard task to do. At the end, that is what engines offer, an simpler abstraction over a layer of sometimes *hard* engineering work. If the argument is "there is not much todo with the extra power" - then I would be tempted to ask Carmack, why Rage had some very aseptic levels like all the other shooters at that time. Four, five adversaries, thats it? ;\^) When Indy film makers could get the extra screen estate of affordable 4k cameras, they used it. Right away. They didn't need bigger sets or more budget. They came from the other side and started with: what are the possibilities with this? Can I make my regular frames more interesting? Can I do things that didn't fly with lower resulutions, like extreme closups? I have the feelings that this not necessary a regular way of thinking, at least what I hear regularly on the AMD side. Newer games, sometimes have harsh FPS pumping/drops. While still some cores do next to nothing.
I don't know much about this, but just as a follow up, how much of that in C++ do you need to do that's compiler specific? I would assume in C# that as long as the IL is the same, then it'll lead the same low level instructions no matter what it's built against?
Brackeys on Youtube has made a really good and accessible beginners guide, if you watch all videos and follow along you will have a pretty good basic understanding of the language, as well as programming in general. You can find the video series [here] (https://www.youtube.com/watch?v=pSiIHe2uZ2w&amp;list=PLPV2KyIb3jR6ZkG8gZwJYSjnXxmfPAl51)
grrrr
&gt; one core with a largely serialized problem Wouldn't Unity3D's "Job dependency" solve this? You split the large serialized task into chunks, and set up a dependency to make them run after each other. Of course the code gonna look really bad. I wish the Job system will somewhat support async methods.
The GPU isn't a magic bullet because the kinds of things you can efficiently calculate is actually quite limited. Branching takes a huge hit, and the task really has to be hugely parallelizable (300 threads and up) to benefit. Also, syncing the results back from VRAM to RAM has quite a lot of latency, so it's unsuitable for realtime physics that is critical to gameplay. Adding to this, the GPU is almost always being pegged by the graphics rendering workload anyway, so most of the time using the CPU is actually going to utilise *more* of the system, rather than less.
So for the simple stuff you really don't need to do anything special in either. All of it is highly predictable. For advanced stuff that might need intrinsics, C++ and .NET are also fairly similar in approach. Both expose low-level non-portable instructions via intrinsics that the compiler/CLR replace with the instruction rather than a call. For C++ these work just like any other function, and for .NET it's not in MSIL, which is relatively basic and portable, but instead just some `static extern` methods that in IL get called like any other method, but the CLR transforms them during JIT. These are very specific instructions and translate directly to what you ask for -- for instance `_mm_loadps` in C++ or `Sse.LoadAlignedVector128` in .NET both explicitly generate a `MOVAPS` instruction. C++ compilers focus on exposing every possible instruction, knowing that someone somewhere absolutely needs some rare instruction to extract maximum perf, while .NET focuses mostly on SIMD stuff. .NET goes an extra step further by also implementing some portable SIMD via e.g. `Vector3`. This doesn't support many of the higher-perf ultra-specialized instructions that e.g. AVX2 might have, but it gets the job done for any project where you simply want it to be faster but don't need critical perf. C++ doesn't itself implement a portable abstraction the way .NET does, but you can find a ton of 3rd party libraries that do it for you.
gRrrr
g-rrrr
Two times i encountered and fixed a #3 issue. First issue was allocating large byte-arrays in a loop. This chunk was sent to Excel. Next iteration allocated new chunk. Fixed by reusing only one large byte array. Could have used ArrayPool today Second issue was having large download-buffer using an API that allocated for me. Fixed by having smaller buffer. 
Thanks for the insight,
Doesn't seem restrictive to me using System; using System.Runtime.InteropServices; class Program { static void Main(string[] args) { int length = 5; IntPtr ptr = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(MyStruct)) * length); Span&lt;MyStruct&gt; structs; unsafe { structs = new Span&lt;MyStruct&gt;(ptr.ToPointer(), length); } structs.Fill(new MyStruct()); structs[1] = new MyStruct { Value = 5 }; SafelyMutateStructsWithoutAllocation(structs); Console.WriteLine(structs[1].Value); Marshal.FreeHGlobal(ptr); var structs2 = new MyStruct[10]; structs2[5] = new MyStruct { Value = 23 }; SafelyMutateStructsWithoutAllocation(structs2); // implicit cast to Span Console.WriteLine(structs2[5].Value); } private static void SafelyMutateStructsWithoutAllocation(Span&lt;MyStruct&gt; structs) { foreach (ref var item in structs) { item.Value += 5; } } } struct MyStruct { public byte Value { get; set; } } It's actually pretty darn cool; you just need this one API to describe all the different kinds of memory, I don't have to change my function signature if you have a managed array of mystructs, or a stackallocated one.
If you have an NVIDIA GPU you can try [CUDAfy.NET](https://CUDAfy.NET) or Alea GPU. You can also take a look at OpenCL wrappers in C# for general GPGPU. Of course DirectX and OpenGL compute shaders/pixel shaders are an option, but not as convenient.
What is your level in c#? Have you downloaded visual studio? 
Just want to give you a heads up that ASP.NET Core 3.0 won’t support the full .NET framework so it might be a good idea to plan for that. Feel free to DM me if you need help migrating or have questions.
Seriously, **again**? You asked this already, and you got answers to this. Why do you delete your post just to post it again? https://www.reddit.com/r/csharp/comments/ac51ow/messagepack_looses_utc_information_of_datetime/ MessagePack does not lose UTC information. That information was never present in the first place. Please, do yourself a favor and look up the basics surrounding the `DateTime` class.
But the datetime retrieved from SQL is correctly, but it turns out wrong when serializing / deserializing. Howcome is this happening=
You got the answer to that question **several times** already.
Whoops, guess my comment got cut off. Thanks for the insight into these. I really only know the .NET stack, but haven't needed to go that deep for anything. It's becoming an area of interest though, mainly to try and build a solid foundation for eventually moving away from development and into security research or another related field. Thanks again!
When I check the items after deserializing, it seem like the property datetime valeus is correct, also the &amp;#x200B; DateTime AddedDT; [AddedDT.Date](https://AddedDT.Date) shows the correct date and time. &amp;#x200B; But only AddedDT shows the wrong. How come?
In one of our legacy Web API solutions we were relying on some libraries that had no way of avoiding LOH allocation. We were able to write ourselves away from some of them, but on some others we still rely on to this day. Our hail Mary solution was to move the entire API to 64-bit, and that has, \*fingers crossed\*, worked perfectly.
Datetime does not have any time zone information.
Really? I haven’t used them yet but as far as I know you initialize them with a plain old array `T[]` which is managed.
That’s good to know, thanks!
They seem more like C++ conventions... which is why I just went with them.
Use the constructor like this: public Multiplayer() : base() { } &amp;#x200B;
You could remove them from the base class constructor and call them explicitly only when you want them to run - perhaps from the code that creates the base class
Span&lt;T&gt; allows for any kind of memory and stackalloc can now be used without unsafe scope. You can stay completely on the stack: Span&lt;byte&gt; buffer = stackalloc byte[4096]; You can use unmanaged memory in a safe context, with index range boundaries: Span&lt;MyStruct&gt; buffer; int length = 10; IntPtr ptr = Marshal.AllocHGlobal(Marshal.SizeOf(typeof(MyStruct)) * length); unsafe { buffer = new Span&lt;MyStruct&gt;(ptr.ToPointer(), length); } ref var item = ref buffer[3]; item.Value = 34; And you can use arrays as implicit spans Span&lt;MyStruct&gt; structs = new MyStruct[10]; And the point here is that your API only needs one signature: static void Foo(Span&lt;MyStruct&gt; structs) { foreach(ref var item in structs) { item.Value = 343; // actual reference mutated, regardless if the memory is managed, unmanaged or stack. } } You don't need to provide index and range overloads like traditional APIs with start index and length `void Foo(byte[] buffer, int start, int length)` Because Span can use Slice on the callsite without allocations. So your API stays clean. Also a new feature is you can now return ref: static ref MyStruct Foo(Span&lt;MyStruct&gt; structs) { return ref structs[0]; } And the caller can then decide if they want a copy or not: var s1 = Foo(structs); // copy ref var s2 = ref Foo(structs); // no-copy ref readonly var s2 = ref Foo(structs); // readonly ref no-copy Basically the argument for C++ isn't as strong anymore.
Right I am familiar with ref returns but I did not know about the index range functionality! That’s super powerful. Thanks for the rundown.
But I want to call these function as soon as MainWindow has loaded.
The base constructor will be called - you have to find a solution that is consistent with that.
use protected and private my d00d
Level #C Sorry.
/u/DualFlash is right - what you need is a third class that has just Initialize(). Both could inherit from this third class rather than Multiplayer inheriting from MainWindow.
XAML is kind of a beast in itself. Learning that will be independent of C#. You'll likely face higher barriers when it comes to understanding MVVM.
Code with Mosh Great way to get up to speed on the basics, concepts and techniques https://codewithmosh.com
Go for WPF honestly. You will learn them in parallel.
I've been working in C++ and C# for over a decade, and am currently working on a game in plain-old C. So, I would like to dispel some of your notions here. I don't work in Unity, so you're probably right with regards to the way the engine works via C# scripting as opposed to the .NET world. `I think the people you often hear calling mutable structs "evil" aren't game programmers, and are probably just prioritizing safety/writing what they consider to be good managed code.` This just sounds like cargo cult behavior, to me. `struct`s aren't evil, but using `ref` and `out` everywhere to avoid using a `class` is a misunderstanding of how reference and value types work in C#. The reason we avoid them in enterprise development is to improve maintainability because many developers aren't incredibly familiar with the different between passing a class instance (by ref-val) and passing a struct instance (by val). Heap vs stack is another confusing part of the two keywords, because that's not entirely clear without forcing it. `Mutable structs are extremely common practice in C++ because you can just keep a pointer to the struct's memory and edit it directly` `struct` and `class` in C++ are the same, with the exception of default protection level. A major reason for structuring data the way we do in C++ is for control over alignment of memory. This is a big deal when talking about cache locality, networking, streams, and operating with APIs that expect aligned memory. Also, directly mutating your data (yes, even in game development) is considered an optimization. You still try to operate in an immutable way and limit memory allocations. *Extremely* common is an exaggeration, at least in my experience. I think that HPC# is advocating for this type of style by being very explicit about what's going on and giving tight control over what the resulting machine code looks like.
Unreal is still more artist friendly than unity. Unity is more engineer friendly.
I dove into it head first. It's pretty overwhelming, but if you power through it, that's a good thing.
Vectorization support in .NET is pretty bad currently. Some improvements are planned with the next major release of .net core. Your best bet right now (without considering GPU stuff) is to implement your computations in C++ and create a native dll. The compiler will then be able to autovectorize the calculations in order to take advantage of SIMD cpu extensions such as sse/avx, something like [this](https://godbolt.org/z/WNTtde)
This is shit advice tbh. It's completely stupid to waste time learning frameworks when you don't even understand object oriented programming. What's he going to do the first time he has to deal with an object? Sit around and stare at it without a clue? Please don't listen to this extremely bad advice, there's a 1000 moving parts you won't have a clue about in all these frameworks if you don't understand the basics of OOP. I don't know how a programmer can sit down a write a comment like this and still take himself seriously. &amp;#x200B;
How about build a single app that handles licence checking and downloading for all the other apps, then just build a single, regular installer for that?
I don’t understand your comment because I am asking about gpgpu. But I don’t want to go down the road of Cuda because I’d like the same code to work on AMD, and Intel GPU’s too. I’m also aware that the scale of this calc is so large that the factor of two improvement I might get using CPU vector arithmetic isn’t as significant as I’m hoping for. 
I appreciate the value-add. That said, I wasn't saying that enterprise folks say structs are evil by themselves, just that [mutable structs are often considered evil by other C# programmers](https://stackoverflow.com/questions/441309/why-are-mutable-structs-evil). I agree with what you're saying otherwise. In regards to how I described C++ struct behavior I was just trying to put the concept into someone more familiar with C#'s frame of reference, (like OP) without going into the weeds. I'm not sure what you mean by &gt; Also, directly mutating your data (yes, even in game development) is considered an optimization. You still try to operate in an immutable way and limit memory allocations. Extremely common is an exaggeration, at least in my experience. Is this not exactly what Unity ECS/HPC# is designed around? Allocate data once, then mutate as needed. The whole point of using structs for everything is that we're trying to stay on the stack
Any more details? Your basically comparing pixels. Not much more complex than that. Trying to write a script for a game or something?
&gt; I read the whole thing and I can't find any strong points against C++. Read it again. The issue is that you can't parse C++ into vectorized ML reliably. The BNF form of C++ is a hellscape of legacy hacks and one-offs. In other words... C++, as a language, sucks, compared to C#.
Yes, im trying to script my buffing routine 
You can do c# for this, but I personally would do python. 
People seem to be conflating XAML and WPF development. You need to know C# and learn XAML and the designer in order to make an app. You should know a good amount of C# before you start WPF applications. Just my opinion.
Dont really know python. &amp;#x200B; Right now im looking into .Net AForge System.Drawing.Bitmap sourceImage = (Bitmap)Bitmap.FromFile(@"C:\SavedBMPs\1.jpg"); System.Drawing.Bitmap template = (Bitmap)Bitmap.FromFile(@"C:\SavedBMPs\2.jpg"); ExhaustiveTemplateMatching tm = new ExhaustiveTemplateMatching(0.921f); TemplateMatch[] matchings = tm.ProcessImage(sourceImage, template); but its quite slow!
Don't use an argumentless constructor then. Passing a configuration object to the motherclass constructor enables your childclass to manipulate this configuration object. `class Mother { public Mother(Config cfg) { InitializeComponent(); if(cfg.DoFullInit) { init1(); init2(); } } } class Child { public Child() : base(new Config{ DoFullConfig: false}) { //child init code here } }
:D
Removed: Rule 4. There are learning resources in the sidebar, /r/learncsharp, and /r/learnprogramming. "Running" can mean different things depending on the _type_ of C# application made. For example, it can be a phone application, a Windows desktop application, a website, a console video game, a Windows background service. First step is downloading Visual Studio Community 2017, then downloading the project and opening the AutomationTestSystem.sln file in Visual Studio. Usually then you hit the "play" button or `Debug -&gt; Start without debugging` menu. Taking a quick glance at the project, it looks like some automation software that automates your web browser. Usually this means automating navigating to some web page, reading the content on there, and entering text, updating form inputs, and clicking buttons. Can't tell what it does beyond that though. Lots of the projects are missing files.
cant give MainWindow an argument for some reason
Tech interviews will reveal lots of stuff you can learn about. Listen to some of these podcasts too: https://www.hanselman.com/podcasts/
Care to explain 'some reason'?
I'm not sure about the Unity design around mutation but, from looking at the code in the article, they even build their functions to be fairly immutable. Execute being the exception, probably because `ref` requires that you already have a fully constructed object and the compiler would have a lot more information at that point. &gt; The whole point of using structs for everything is that we're trying to stay on the stack Honestly, this would be hard to say without understanding more about how Burst works as a compiler. I'd imagine the idea here is to package things in cache-friendly ways, optimize it for processor features, prevent allocations, and make machine code generation more deterministic. Whether or not it uses the free store (or its own allocation scheme) is probably an implementation detail. It looks more to me like you're handing control over the Burst compiler to decide what's best for your code, cache-wise, and limiting the grammar. Not that I think this is a problem, it's actually pretty neat.
That might be a good way, especially when consider that you can run msi installers silently
Strings are apparently no longer immutable, hah! string str = "Hello World!"; string str2 = "Hello World!"; var span = MemoryMarshal.CreateSpan(ref MemoryMarshal.GetReference(str.AsSpan()), str.Length); span[0] = 'J'; Console.WriteLine(str); Console.WriteLine(str2); str is written to because obviously I'm taking the reference. However, str2 is also written to because the C# compiler does string interning - it caches strings and assigns the same addresses.
Removed: Rule 4. As mentioned by others, if you cannot use `DateTimeOffset`, then you should be storing in your database the `DateTime` objects converted to Universal Time. You can do this by calling `DateTime universalTime = myLocalDateTime.ToUniversalTime();` When deserializing, then your times should be in universal time, and if you want them to be localized to a specific timezone after deserializing, you can use the [`TimeZoneInfo.ConvertTimeFromUtc` method](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.converttimefromutc?view=netframework-4.7.2) to do so. DateTime utcDateTime = DeserializeTheDateTimeFromDatabase(); TimeZoneInfo desiredTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Central Europe Standard Time"); //alternatively TimeZoneInfo desiredTimeZone = TimeZoneInfo.CreateCustomTimeZone("My Time Zone ID", TimeSpan.FromHours(1), "(UTC+01:00) My Custom City Or Display Name", "My Custom Standard Time Name"); DateTime localizedDateTime = TimeZoneInfo.ConvertTimeFromUtc(utcDateTime, desiredTimeZone); If you really need to store a specific/different local time zone for each entry in the database, you will need to store that separately in your database or use a different data format altogether.
There’s nothing evil about mutable structs. It’s a common thing to hear, but most of the people saying it don’t even understand why. The only big issue is managing you codebase so you know if you’re dealing with a class or a strict because they behave differently. &gt; HPC# is a flavor of c# That’s exactly what it is - they say that. It’s just writing c# without using the .NET standard libraries 
I started by thinking of what I wanted to make my computer do, and then made a program that did it for me. 
The issue with “mastering OOP” is that you’ll spend a long time on this one problem, work out a mental model of how you think it works, then get into “real” code and discover that your mental model is categorically flawed By jumping straight into project code, you’ll learn by example. You’ll see how the framework uses OOP in some places and functional design on others. You’ll see how OOP isn’t always the best answer even in a language like c#. You’ll get a better idea of why some things work and other don’t.
Yh I've been thinking about this but since classes start soon it'd be hard to really give a personal project the time it needs. I was thinking more along the lines of topics to study or new features to the language etc.
Understandable. Though, the best way to learn the language is by doing it :) I'm sure you've seen, [Microsoft](https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/intro-to-csharp/) has some great documentation over a lot (if not all) of C#. They even have some great examples that you can study as well. If you're unsure of a concept, this is my go-to
..... &gt;but its quite slow! Why is is slow? your searching for a single color across the whole screen. How can you fix it? reduce the search area to a known good or the least non-good areas to search. spiral outward from character location if top down view. remove sky if enemies on ground, remove sides if menus are there,for 1st person view. 
I think the issue with mutable structs in C# is that it is easy for them to be used in a way that causes unexpected behavior &amp; bugs. C# doesn't require .NET libraries, given their high-performance code is sticking with blittable value types.
Come up with a list of things you routinely do, and ask yourself "is there any way a program could make this easier?" Several years back I was working on a manufacturing line. All of the products had a piece of paper called "travelers" rubber banded to them, where employees would write their initials and the date after they completed a step. I had never written a line of code in my life before, but one weekend I went home and taught myself enough to put together a proof of concept digital traveler system. Boss liked it enough to let me work on developing it during work hours. Three years later, that system has grown so much that replacing the paper travelers just scratches the surface of what it does. In summary, manufacturing volume has grown around 85%, head count has only grown about 10%. I also now develop software full time for this company, and have my own support staff. Any idea no matter how small could one day be revolutionary, you just have to start somewhere.
The hard truth is this means your child class should not inherit from the parent. The biggest characteristic of a bad hierarchy is base class functionality that is unused by derived classes. It's even worse when the parts the child class doesn't use are parts initialized by the constructor. It's like deciding that `FlyingFish` should inherit from `Bird` since it needs to be able to `Fly()`. This is also a sign you aren't separating your logic from your GUI code well. That's a smell in a complex project. What you probably need, based on what little I see, is *3* types in your hierarchy: * `BaseWindow` is *just* the shared layout/GUI code. It might be abstract and will definitely have some virtual members. * `SinglePlayerWindow` derives from `BaseWindow` and implements the logic needed for a single player game. * `MultiplayerWindow` derives from `BaseWindow` and implements the logic for a multiplayer game. I have a feeling if I knew more, there is a lot of logic inside your Window that should be extracted to other classes. If you did that, it'd be easier to adopt the approach above. DRY is a guideline, not a dogma. It's OK to reuse some code if it means you don't have to spend weeks figuring out how to share architecture.
This is an excellent idea. I will look into this. Thank you very much! 
Well for starters you aren’t calling anything in your Main() method so if this is a test console all it’ll just start and then immediately exit.
That's an insightful perspective. Thank you for sharing! 
🤯🤡thanks!
I walked to the store this morning. A thousand moving parts I don't entirely understand got me there. Go QWOP bitch. 
i restricted the screen area to buff window and its faster but it still takes 3\~4 seconds to identify and press the button and im running a single image and its intended to look for a few more
so you are new to C# and didn't even try a Hello World app? look at your empty Main method. nothing happening here. &amp;#x200B; Microsoft has great resources online for learning
Mutable structs are evil. You expect every developer to read every single character of your code base to understand your intent? That would be a horrible and incredibly inefficient API to work with. If you make a struct, it should work as a value type except under VERY specific scenarios where it should be documented. &amp;#x200B; Are they evil if you're the only one working on a codebase? Sure, I could see how you could make an argument that it's not, but I'm not going to go read all of your implementations to figure out what you mean, I should be allowed to use what you exposed, and a mutable struct breaks that principle.
Yes you can. What error are you getting?
Your class shouldn't inherit from main window then. Consider giving them a common base class or using an interface. Basically your design is wrong.
 public MainWindow() { InitializeComponent(); InitializeForm(); } protected virtual void InitializeForm() { Function1(); Function2(); Function3(); } internal class Multiplayer : MainWindow { protected override void InitializeForm() { // just call methods you need } }
It's considered an anti-pattern/bad practice to call a virtual method from the constructor, but you can do it here if you _really need to_ and don't want to redesign around it. First, move the function calls to a `protected virtual` function: public class MainWindow { public MainWindow() { InitializeComponent(); Initialize(); } protected virtual void Initialize() { function1(); function2(); function3(); } } Now your `Multiplayer` class can override that `Initialize` method and do however much or little it wants, you don't even need to explicitly declare the constructor anymore: public class Multiplayer : MainWindow { protected override void Initialize() { function1(); //function2(); //let's skip function2 function3(); function4(); //let's do a new function! } } There's some quirks/issues from doing this (see: https://stackoverflow.com/questions/119506/virtual-member-call-in-a-constructor) but with any luck, it won't be a critical issue for your use.
That number there looks like it would be good to fiddle with. Have you tried changing it to see how it affects the speed / accuracy?
Small search. https://stackoverflow.com/questions/17130138/fastest-way-to-get-screen-pixel-color-in-c-sharp http://csharpexamples.com/c-fast-bitmap-compare/ I might have a better idea if i saw what your doing.. :)
g_rrr
We have been using Advanced Installer for years, I'm very satisfied with it. It has support for "Suite Installations" [https://www.advancedinstaller.com/user-guide/tutorial-creating-suite-installations.html](https://www.advancedinstaller.com/user-guide/tutorial-creating-suite-installations.html) 
I can recommend Install4J. It is perfect for Java Applications and knows modules. You can create custom logic in Java (if needed), but you will find nearly everything you need in the Tool itself. &amp;#x200B; [https://www.ej-technologies.com/products/install4j/overview.html](https://www.ej-technologies.com/products/install4j/overview.html) &amp;#x200B; &amp;#x200B;
Funny you ask because I had to do this too. I only did a test app because my main focus is Android right now so I haven't fully tested but this should work. I basically copied the [MvxWindow](https://github.com/MvvmCross/MvvmCross/blob/develop/MvvmCross/Platforms/Wpf/Views/MvxWindow.cs) and instead of inheriting from Window I changed it to MetroWindow public class MyWindow : MetroWindow, IMvxWindow, IMvxWpfView, IDisposable Then my view uses the custom "MyWindow" to get the best of both worlds. Good luck!