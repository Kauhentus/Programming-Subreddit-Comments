What are these types? Is MyObject isomorphic to MyObject&lt;T&gt; for some type? Same question for MyObject&lt;T&gt; and MyObject&lt;T,U&gt;? If so then don't duplicate the definition, use inheritance. Either way don't use the same name.
Sometimes, if I have both, the non generic is trivial and stays in the same file. Otherwise: MyObject_T1_T2
To expand on this, by the time the page renders, the first 3 lines of code have already been ran. It changed the text, you just won't see it. If you want real-time updating like that, you would have to use Javascript.
I'm not sure where you're trying to check if the zebra exists in the Zebra list. You may know this but since you said you're fairly new I'll mention that this can't/shouldn't be done in the Zebra class. The Zebra class is only used to make an instance of a zebra it is not used to keep track of multiple zebras. The appropriate place to add zebras to the list and do the checking would be in separate classes. Otherwise a dictionary or list of zebras should do well. Here is an example of how to check if an item exists in a list: https://www.dotnetperls.com/list-contains Good luck!
Depends, if it's exactly one non-generic version and one generic version I'd use a "Generic" subfolder and namespace, similar to the System.Collections namespace and use the same filename. Otherwise I would decide based on how it's implemented. If the classes are just wrappers for a single generic one I'd place them in the same file (should not get to bloated in that scenario), otherwise (your example, I guess) different filenames for each implementation. Maybe something like MyObject.cs, MyObjectT.cs and MyObjectT2.cs to keep it simple.
 ``` OneOf.OneOf&lt;string, Color&gt; GetBackgroundColor(){...}; ... var c = GetBackgroundColor() .Match((string str) =&gt; Color.FromName(str)) .Else(new Color()); ``` Now if you change it to `OneOf.OneOf&lt;string, Color, int&gt;` the code still compiles.
same file. if "one class one file" was an absolute rule, it would be enforced by the compiler 
i do know this (i am half a year in my software dev study so that's about my level), the program is a form with multiple classes and a bunch of other stuff. For the list, the version in the link i understand, but it's for strings or ints or whatever, what i want to know if the id of the zebra that i'm trying to make already exists. The thing is that i don't know how to check a property of the zebras in the list
This is more of a best practice question. After all, I think most people would flip their shit, for good reason, if a fellow dev declared all types in the assembly in a single monolithic class file. The compiler wouldn't care, but I'll sure as shit reject that spaghetti during a code review.
Hmmm. You make a good point. I wonder if we should force specifying the cases for the else statement by adding types to the else signature. I suppose something could be done there.
Maybe check out this tutorial - just found this after trying to search for other info, I learned WinForms years ago by doing an older version of a similar tutorial https://docs.microsoft.com/en-us/visualstudio/ide/tutorial-1-create-a-picture-viewer
Removed: Rule 5.
Use linq. If (zebralist.Any (z =&gt; z.Id = newId) { can't add } 
I saw this somewhere else as well but didn't understand how it works. Can you explain it?
That's the gist of the reason. But for a full explanation why, OP, let me refer you again to the document I've linked :)
I'm not sure exposing that easter egg code to your teacher is a good idea.. if you want to go that route, You should probably have a seperate version of your game tailored to her and at that point, you might as well call Draw.AskOut() at the end of her version of the game instead of the easter egg. 
The string could come from a web request, say for dynamic SQL filtering. Obviously this may be a security issue. 
Any is a linq function that loops the collection until it finds any item that matches the given condition. The parameter is a lambda expression. Basically z is your for each variable and the code after the lambda (=&gt;) is the check you run against the item. It is the equivalent of foreach (var z in zebraList) { if (z.Id == newId) return true } I would advise reading up on linq as it is awesome and simplifies a lot of stuff you would normally do with a loop.
I usually stick with Resharper defaults, which in this case yield: - `SomeClass.cs` - `SomeClass{T}.cs`
has anyone been to official microsoft conferences?
Extremes are generally bad, yep.
Taken to that extreme, for sure that's bad. There is a case to be made that one-file-per-class just isn't that important though, and encourages some bad habits if taken as an absolute rule (e.g. discouraging nested classes).
Yep it’s good. Might be going again this year.
If we weren't limited in terms of URL length, I'm sure we could implement a language through wildcard routing. &gt; webscale.com/eval/declare/myvar/1/semicolon/printf/myvar%20equals%20{}/myvar/semicolon
You're disgusting. Have my upvote.
In your treeview resources, you do not specify a template of `x:Type TreeViewItem` within which you would make a `TreeViewItem.Style` setter on `IsExpanded`. your viewmodel would have to bind on this exact flow of logic to see changes.
The realist in me knows you're right, but maintains hope that it would be spotted during code reviews you just know will always happen regularly. Honestly, I just keep getting reminded of how lucky I am that my current project has me as the sole developer for two solution files, so I can keep it maintained exactly how I like.
I do know it already creates a backing field. But that field isn't directly accessible, and there are situations where it is required or, at the very least, very helpful. In C#'s current state, you must create a secondary backing field for things like lazy initialization &amp; validation. This ends up resembling boilerplate, which C# generally does its best to avoid. As /u/AngularBeginner pointed out, there already is a (https://github.com/dotnet/csharplang/issues/140)[similar proposal]. I was unaware of this, but the main difference between the two is that my proposal is simply syntactic sugar.
Thanks! I wasn't aware of that. They are similar proposals, with one big difference being this one is mainly syntactic sugar.
The original opening of the proposal was "This certainly isn't the biggest ask for C#..." until it wasn't. I think the proposal also would be useful for validation purposes, but my highest ask would be for shapes. &gt; Should it be thread safe? &gt; If it is thread safe, is only the assignment/return of the field synchronized or the value creation as well (Lazy&lt;T&gt; ExecutionAndPublication vs PublicationOnly)? &gt; Is this something that the user can specify? If so, what's the syntax? &gt; Is there a non-default option where they don't share the same value? How does that work? I would probably use attributes to define behavior, but I tend to overly rely on those. The proposal isn't for much more than syntactic sugar to allow access to a property's backing field.
If Zerbras are a nullable type... Zerbra zerbraToAdd; if (zebras.FirstOrDefault(x=&gt;x.ID==zebraToAdd.ID)==null) zerbras.Add(zebra); 
Just went to NDC London this year and for me at least was awesome. Lot's of good talks. I'm a c# developer working with dotnet core and seeing and being able to talk to the guys from the team there is amazing. 
Best I ever had was QCon. 3 days socked full of conferences where I loved every one of them and was sad there were so many I couldn't assist live (you have access to all the talks on the website after though). 
I’ve been to a couple over the years; I always enjoy them. A lot of talented speakers/topics I always find relevant and useful.
";-)" ^^^^^^^^^^^^^^^. ^^^^^^^^^^^^^^^. ^^^^^^^^^^^^^^^. ^^^^^^^^^^^^^^^. ^^^^^^^^^^^^^^^. =P
I can't write a full snippet now, but you want something like this: &lt;HierarchicalDataTemplate TargetType="TreeviewItem"&gt; &lt;HierarchicalDataTemplate.ItemContainerStyle&gt; &lt;Style TargetType = "TreeviewItem"&gt; &lt;Setter Property="Template"&gt; &lt;DataTemplate&gt;//Textbox, etc.&lt;/DataTemplate&gt; 
Looks good but I don't think I will be able to justify a trip to San Francisco. Hope they do a Disrupt in Europe soon.
Yeah it looked amazing. I am considering proposing we just go to NDC London next year, but it would be cool to do something sooner.
It looked amazing :/ glad you had a good time.
Thanks - when you went to Qcon, did you have to stick to the 'track' or could you just switch it up and go in whichever presentations you wanted to? This year's schedule at least has tracks, and none of them particularly fit what we do as a company - however, on an individual basis lots of the presentations look excellent. https://qconlondon.com/schedule/london2018/tabular
Use an enum instead of a string as the dictionary key?
They do one in London every year. https://techcrunch.com/events/disrupt-london-2016/
thanks for the chart
Not as smooth, but I guess that would proof it for me. Thanks for the input, I really hope there is a way to run the second portion it made so much sense to me when I was brainstorming.
We were so preoccupied with whether or not we could, we didn’t stop to think if we should...
You're never stuck in a single track, you can go to any presentation. 
Thanks!
It is important from a maintenance standpoint. If a type is something like `MyCompany.ProductName.ProductSystem.ProductObjects.ProductObject`, then by convention, I *should* find this exact type declared in the solution named `ProductName`, in the project named `MyCompany.ProductName.ProductSystem`, in the folder called `ProductObjects`, in the file called `ProductObject.cs`. If I don't find it there, then I have to search for it which takes time, time that I wouldn't have had to spend if best practices were followed. Secondly, multiple type declarations in a single file affects readability negatively. The more assumptions we can **accurately** make about a codebase the easier that codebase is to develop in and maintain. Furthermore, multiple types declared in a single file means more reasons for *that* file to change. This is a consideration for version control. Finally, we should absolutely discourage most implementations of nested types. For example, there is absolutely no reason to have a *public* nested type whether it is a class, interface enum or struct. If you disagree with that assertion, then I challenge you to show me a *single* example of a positive use case of a public nested type that 1) accomplishes something that only a public nested type can accomplish and 2) the type *must* be nested and **cannot** be in its own file because of #1. Just because we *can* do something doesn't mean we *should*. Further, we should be teaching people proper ways do things (e.g nest types) instead of this "fuck it do what you want because the compiler is OK with it" attitude.
It seems like they're adding features to languages just to change the meta of programming. Kinda like the way starcraft 2 changes the units attributes every four months or so.
Yeah... "We made a way to break object inheritance!" I can't think of any uses for this where I would not first talk with a irresponsible Dev or Veto the PR.
make sure all the params are defined for example for an @Html.ActionLink i just recently fixed - see the last param of new { } - its to match the method I wanted and I had to explicitly code that in, otherwise I'd get HTTP 500 errors `@Html.ActionLink("Details of Order", "Details", "Order", new { orderID = o.orderID}, new { } )`
Completely agree! He is a fantastic writer and has a great talent for explaining complicated concepts in simple ways.
OP here. I am new to C# and cobbled together some code. When doing this task in PowerShell, it resulted in a *very slow, very memory hungry* script. 
Saving you a click (unless you want to [read the docs](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/private-protected)) &gt;The private protected keyword combination is a member access modifier. A private protected member is accessible by types derived from the containing class, but only within its containing assembly. How hard was that?
 tbl[line] = (tbl.ContainsKey(line)) ? tbl[line] += 1 : tbl[line] = 1; This line is technically inefficient. For one, the first `tbl[line] =` assignment is redundant, you just set the same value that you already set at `tbl[line] += 1` or `tbl[line] = 1`. Just use a normal `if` statement. Also, you could use `TryGetValue()` instead of `ContainsKey` to save one dictionary lookup when incrementing an existing value. But I would not expect any practical speedup from this, I bet 99% of the time is spent on the IO. I would not expect any gains from multi-threading. You can't really parallelize the IO, and parallelizing the dictionary lookups would likely be a net loss because locking/`ConcurrentDictionary` are more expensive.
Assuming it's slow and a memory hog because you're reading a _very, very large_ file, then you can probably reduce your memory footprint and (probably) improve your speed by reading the [file line-by-line](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/file-system/how-to-read-a-text-file-one-line-at-a-time), rather than reading the entire file into memory via `File.ReadLines`. Using `tbl.TryGetValue` instead and storing the result (if it exists, or zero) to a local variable, _might_ be faster (I can't say for certain) as it will avoid an extra lookup later from `tbl[line] += 1`. Otherwise, what else is slow for you? The sorting/output? You might be hitting bottleneck outputting to the console line by line.
If you're writing a library, you might be doing something that requires an abstract class hierarchy, but that you don't want somebody consuming the library to be able to extend. You can't seal the abstract type without breaking *your* stuff, and making the members in question private would require you nest all your subclasses inside the parent, which is awkward, at least. This would let you define your abstract base class, declare (say) the default constructor to be private protected, and have your concrete classes derive from there without having to nest them inside the base class. Like a lot of recent features, there's not a *lot* of call for something like this, but there are a few.
[They did:](https://github.com/dotnet/csharplang/issues/37#issuecomment-337452359) &gt; Yes, the feature is useful. Just like `private` is useful, even though you could get away without it just by asking your developers to apply some self-control and spend more time reading documentation. We like to save programmer time by automating such things.
I always need to check twice as well to be sure, I keep mixing it up with the `Directory.GetFiles`/`EnumerateFiles` naming scheme.
https://www.codeonthebeach.com/ for those interested.
This is one of the worst things ever added to c# This should have never existed in the CLR to begin with. Never ever use this! 
You have an awfully strong opinion about a niche modifier that I actually have use cases for. Do you have any reasoning why you are so against it?
Violation of the open closed principle. 
I haven't noticed this behaviour myself (it does sound like it would be pretty noticeable) but I'll try it at work tomorrow and see. Are you using the most recent version?
Wonder why they didn't call it internal. I understand that protected internal is already used, but private protected reads like an error.
^ Yep, this is exactly what I want to use it for. I have a bunch of TODO's next to places where I need it. Currently those things are just `protected`, which makes them unnecessarily visible outside the assembly. It doesn't really matter, but it will make things slightly cleaner which is nice.
First time? Sure, but if you know ANTLR it's a few hours worth of work and you haven't implement arbitrary code execution in the configuration file.
Generally you can either optimize towards memory or optimize towards CPU. Also, working with lower level language features increases performance at the cost of readability. Some random thoughts: - Set the dictionary equality comparer to Ordinal to make sure it does byte comparisons. - use arrays instead of dictionaries. - use faster initial lookup keys. For example you could make your lookup key be the first 1-3 characters + character count. If that key doesn't exist, you can immediately increment. - alternatively could use hashes for keys but that comes with overhead of hashing the lines. - create a fairly big byte buffer array and stream in raw bytes using the eol terminator to manually determine linebreaks. Don't even worry about turning the bytes into strings until you have to output. 
I'm not looking forward to finding out what the debuff to hell.
Only siths deal in absolutes.
&lt;src:TreeViewData Is not supported by wpf project if i followed the setup in that link. 
Before even trying to understand that, could you split it into paragraphs?
It's a typical Jonathan Allen article.
https://stackoverflow.com/a/24969525/2086 
Don't ever use a magic variable ("Jump") unless you have to. You'll end up with a typo at some point, or decide to rename it and miss one, while getting no benefit from it. Anyways, if every attack type has an entry in the dictionary, you could store classes or methods in the dictionary to handle the event. 
Are you trying to manage state of an object in some game? If so, then [this](http://gameprogrammingpatterns.com/state.html) pattern is what you need to do. Smallest example I could think of at 4am: First, define all possible player actions that could result from user input in an enum: public enum PlayerAction { Jump, Kick, Duck } Next, define an abstract class that will manage the `Player` object's state: public abstract class PlayerState { protected Player Player { get; private set; } public PlayerState(Player player) { Player = player; } public abstract void HandleInput(PlayerAction action); public abstract void Update(); } We still need to define our state objects so here we go: public class IdleState : PlayerState { private JumpState Jump { get; set; } private DuckState Duck { get; set; } private KickState Kick { get; set; } public IdleState(Player player) : base(player) { Jump = new JumpState(player); Duck = new DuckState(player); Kick = new KickState(player); } public override void HandleInput(PlayerAction action) { switch (action) { case PlayerAction.Jump: Player.State = Jump; break; case PlayerAction.Kick: Player.State = Kick; break; case PlayerAction.Duck: Player.State = Duck; break; } } public override void Update() { //do nothing } } public class JumpState : PlayerState { public IdleState Idle { get; set; } public JumpState(Player player) : base(player) { } public override void HandleInput(PlayerAction action) { //do nothing -- no actions allowed } public override void Update() { //handle updating the player's location and animation //for the 'Jump' action such that at some point you'll //know when the jump is finished if (JumpIsFinished) { Player.State = Idle; } } } public class KickState : PlayerState { public IdleState Idle { get; set; } public KickState(Player player) : base(player) { } public override void HandleInput(PlayerAction action) { //do nothing -- no actions allowed } public override void Update() { //handle updating the player's location and animation //for the 'Kick' action such that at some point you'll //know when the kick is finished if (KickIsFinished) { Player.State = Idle; } } } public class DuckState : PlayerState { public IdleState Idle { get; set; } public DuckState(Player player) : base(player) { } public override void HandleInput(PlayerAction action) { //do nothing -- no actions allowed } public override void Update() { //handle updating the player's location and animation //for the 'Duck' action such that at some point you'll //know when the duck is finished if (DuckIsFinished) { Player.State = Idle; } } } Now, define the actual `Player` class: public class Player { public PlayerState State { get; set; } public Player() { //time to build the state machine var idle = new IdleState(this); var kick = new KickState(this); kick.Idle = idle; //property injection var duck = new DuckState(this); duck.Idle = idle; var jump = new JumpState(this); jump.Idle = idle; //set the initial state State = idle; } //I am assuming Key input, but you can handle any kind of input so long as you map it to a PlayerAction public void HandleInput(Key key) { if (key == Keys.Space) { State.HandleInput(PlayerAction.Jump); } else if (key == Keys.Control) { State.HandleInput(PlayerAction.Duck); } else if (key == Keys.K) { State.HandleInput(PlayerAction.Kick); } } public void Update() { State.Update(); } } The idea is that the `PlayerState` objects will manage the `Player.State` property for you. The `Player` object only needs to interface with its current state at any given time. Each `PlayerState` will ignore some actions and that is fine -- this means that it wasn't valid input for the current state at the moment. Yes, the above is complicated, but if you are trying to do something with an object's state that can be visualized like a [Finite State Machine](https://en.wikipedia.org/wiki/Finite-state_machine) or a flow chart, this pattern is *the* way to go. The benefits will become very clear as you implement it, make changes, and add more states. The above code could definitely be cleaned up. I don't like property injection and I don't like the fact that the `Player.State` property is publicly accessible to *everything*, not just the `PlayerState` objects. I am tired so forgive me. Hope this helps. Peace.
&gt; https://stackoverflow.com/a/24969525/2086 is one thing off the top of my head... That example is someone *wanting* to nest an enum and someone then gave an example that *didn't nest an enum*. Furthermore, what they accomplished in that post could have been done with a simple tree structure. &gt;You can find any file in a moment using your IDE Finding a file with that type is only easy *if the name of the file is the same name as the type*. It would take more effort to find the public nested type `MyClass` that is defined in `SomethingSomethingFooBarSnafu.cs`. Given a large enough code base, a text search could take a little bit. Should we really be finding ourselves having to use a search function within the IDE to find where a type is defined? &gt; and you can run "move types info matching files" if you have R# at any time. So now we have to install a 3rd party tool to help manage our bad practice? Furthermore, the fact that such a tool exists doesn't mean we should be OK with allowing the vast majority of nested type implementations. This is like saying we should be OK with car theft because we have car insurance to cover us. &gt; I just don't think this stuff is that big a deal to worry about as it's impact is so easily mitigated. You're right in that it is easily mitigated -- by *not nesting public types*. Just don't do it straight from the go. Let's just break this down into simple pros/cons: For using public nested types: Pros: Shaves off the 5 seconds it takes to create a new .cs file Cons: Negatively impacts readability, gives more reasons for a single file to change, makes finding specific types harder than it needs to be, breaks standard project organization, increases overall "tribal knowledge" overhead and 'unmerging' public nested types into their own file means the type's version history is *not with the new file it resides in but is still with the old file*. For putting public types in their own file: Pros: The exact opposite of the 'Cons' for using public nested types Cons: Takes 5 seconds to create a new class file (tops). Again, show me a *single* example where, on balance, a *public nested type* is **more beneficial** compared to other methods that would accomplish the same thing. To be clear, I am talking about **public** nested types, not **private** nested types.
Yes, a flags enum would work fairly well here, assuming you have no more than 32 options (64 if you declare it to be backed by a `long` instead).
I suppose that makes sense, it just seems like an inconvient move away from previous naming schemes.
Strings are already fully unicode, so it must be a problem elsewhere, e.g. your database field is non-unicode.
Nvarchar !
It's still at odds with all the other access modifiers in C#.
I read it as &gt; Only shits deal in absolutes.
We organize them by the number of generic arguments. So the classes in your example would be in files ``` MyObject.cs MyObject`1.cs MyObject`2.cs ``` I believe it was inspired by a convention used internally in .NET but can't find the source right now.
I consider C# my primary language - it's the one I go to first to solve any particular problem, but I prefer C++'s access modifiers. Instead of trying to infer practical meaning from an arbitrary combination of keywords and implement as expected, it makes more sense to me that it seems to have the two separate keywords where the presence of two instead of one conveys additional meaning about the relationship between them. As though you two separate pieces of functionality (internal and external access) that can conveniently be given the same value by only using one access modifier.
Ok that’s fine. I just haven’t a clue how to code that and was hoping for a tutorial someone knew about someplace. I don’t exactly know good websites besides YouTube to find stuff like that but don’t know how to search for it. 
The Unity website has a tonne of good learning materials and tutorials to help develop the core skillset which will enable you to create the game mechanic. Dive in and have fun! If you run into issues with specific issues (ideally, those involving C# code), feel free to post it here and include the relevant code.
Awesome, I didn’t think they’d have many tutorials there besides basic game tutorials, lecturer doesn’t tell us on how to find them or anything, guess I’ll have a look. Thanks!
Yup, they got a bunch of resources here: https://unity3d.com/learn They even walk you through making a fullish games from scratch.
it is because you are not used to tuples. There are many uses, not only as return values.
I get ya, but the way OP set ValidMove made me think that it was a property used elsewhere in the code.
Absolutely. But none of this existed 20 years ago. Best practices change over time, and it's difficult to change with a large code base. We also have a massive Xslt layer using Microsoft's best practices from the early 2000s. We've added new stuff, but old stuff remains
Exactly, the keywords could have been choosen better, but allowing inheritance only within the containing assembly seems such a better approach to the problem than any other solution I had seen so far. I simply refuse to believe that so many people around still don‘t see this as a real issue. You’re right, some people enjoy making things harder. It‘s easier to complain and go the old way, than admitting it‘s useful and learn it.
I only programmed in C++ in college, but you should probably familiarize yourself with the following topics: **Note:** If you are familiar with writing *managed* C++ code, you might already be familiar with a few of the bullets below. * [Managed vs Unmanaged Code](https://msdn.microsoft.com/en-us/library/bb677124.aspx) * [Garbage Collection](https://docs.microsoft.com/en-us/dotnet/standard/garbage-collection/fundamentals) * [Common Language Infrastructure (CLI)](https://en.m.wikipedia.org/wiki/Common_Language_Infrastructure) * [Common Language Runtime (CLR)](https://docs.microsoft.com/en-us/dotnet/standard/clr) * [Summary of syntax differences between C++ and C#](http://www.c-sharpcorner.com/uploadfile/gtomar/difference-between-cpp-and-C-Sharp/) * [Type Safety Comparisons](https://stackoverflow.com/questions/8272809/c-vs-c-sharp-type-safety) Hope this helps. Peace.
Removed: Rule 3. Maybe try /r/netsec or /r/netsecstudents.
to add to this, ASP.NET is for writing .NET services that can be viewed through a web browser or web api. .NET in general encompasses more than just C#. there is also F# and VB.NET, for example. I've heard the pluralsight videos are good, and dotnetperls shows up fairly often when i'm searching for basics. See the links in the sidebar (including r/learncsharp). Also, I did enjoy playing with codefights for some basic c# practice, though I found it harder to not have intellisense and autocomplete.
Here's a sneak peek of /r/learncsharp using the [top posts](https://np.reddit.com/r/learncsharp/top/?sort=top&amp;t=year) of the year! \#1: [C# Tutorial for Beginners](https://np.reddit.com/r/learncsharp/comments/69to2e/c_tutorial_for_beginners/) \#2: [Learning C# - List of resources and videos](https://np.reddit.com/r/learncsharp/comments/5to7bq/learning_c_list_of_resources_and_videos/) \#3: [Inheritance in C# (Tutorial for Beginners)](https://np.reddit.com/r/learncsharp/comments/6ujiaa/inheritance_in_c_tutorial_for_beginners/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/7o7jnj/blacklist/)
All valid reasoning. I think the basic issue here is them already using the protected internal modifier. But that is obviously not changeable. This is an important lesson in naming.
All valid reasoning. I think the basic issue here is them already using the protected internal modifier. But that is obviously not changeable. This is an important lesson in naming.
Just as you said I've read that you have to write alot of stuff in WPF yourself. And I always thought that Monobehaviour is a library and not a framework. I've searched up Codeproject and already found a promosing tutorial, thanks for your info.
Here are all the overloads for UrlHelper.Action method: https://msdn.microsoft.com/en-us/library/system.web.mvc.urlhelper.action(v=vs.118).aspx I don't see that signature in the various overloads.
So when I install, Visual Studio I automatically get the .NET framework that supports different languages and other frameworks right? And I've browsed alot on dotnetperls, helped me alot.
Virtual isn't a direct violation, it depends how you use it. If you allow a virtual method to be replaced by a child that can entirely break the base class, that's a violation. Sealed is and I would never seal a class. Sealed is awful. Legacy understanding of code access. Especially given a system that code access modifiers are wholly suggestions. 
When it comes to software I am definitely a 1%, if not a 1% of 1%. 
Those word still doesn’t make the choice of key words not confusing for their intended meaning. Yes you may have discussed it here before but that doesn’t change the fact that there has been a special use case carved out for private keyword now that goes against its meaning from the past 15 years.
Could you list the examples you're using so we have a baseline as to what is "bad" or "good" for you? The examples in the top-level documentation for [protobuf-net](https://github.com/mgravell/protobuf-net) seems pretty straightforward to me at first glance.
Well, basically the .NET language is a language called IL - everything that you write in a .net language (C#, VB, F#) get compiled to this IL language. When you start the .NET app, it runs in a virtual environment and executes this IL language based on the system where its run, creating the bytecode which the CPU can process. Every newer windows (from win XP SP 1 (which contained the .NET 3.5) contains an increasing level of .NET. If I remember correctly (I could be wrong) .NET 4 is supported on every Windows since Vista (so basically in the past good 7 years) - if you use it, you can be sure that it will run on a windows PC. If you want to run, for example, Mono application, you have to do some other steps as well (I only used it in Linux, where you simply have to compile, and "mono compiled file" to start the application.
Using the serializer is straightforward enough... I’m more having issue with the client side receiving of data and where I need to hook in to decide the message.
During the installation of Visual Studio you can make a selection of components that will be installed.
Do you primarily sell to enterprise customers? I don't see myself using dongles simply because I want to sell B2C.
A few reasons. Mainly I was building a niche application which had the potential to either generate no revenue or a lot of revenue. At the time, I had a surplus of time and no money. Finally, as I intended to pilot my app over a 1 year period for a specific client, I needed a no-cost way to keep them from running amok with installations on the chance they found the app useful. Client managed floating &amp; seat licenses are a nearly universally required feature for my niche (exploration &amp; production engineering). Worked wonderfully in that scenario and in the end I got a sorely needed tax break for my r&amp;d. That's the short version...
Asserting that you are correct does not, actually, make you correct. You are also emphatically not part of the 1% of the 1%. All you're doing at this point is embarrassing yourself.
Imho you are mixing two independent topics! What makes the content made of protobuf different from any other type like json, plain text, an image or something old-school self defined binary? Protobuf itself is just a serialization format - it has no direct dependency to the environment it is used (we use it to exchange complex objects via a COM bridge between a legacy C++ application mixed with dotNET components) What library do you use as your network stack? What have you implemented so far? If you strive for a complete solution for efficient networking based upon protobuf you might have a look at [GRPC](https://grpc.io) 
I think you can assume that everybody understands what the open/closed principle *is* (and, if they do not, that it is incumbent on them to google it). How does `private protected`, specifically, pose a violation? I agree that it probably is, but an unstated objection is also an undefined objection. What, *precisely*, is your complaint, and where, then, is the harm? &gt; Legacy understanding of code access. I don't know what you mean here, or how it relates to the open closed principle or the `sealed` modifier. Could you elaborate or clarify? &gt; code access modifiers are wholly suggestions. I realize you can get around them with reflection, but, if that's all you're complaining about, it's a bit of a reach and mostly irrelevant. FWIW, I prefer to start with every public type `sealed`, if possible, on the principle that un-sealing a type is never a breaking change, and it obviates the need to design everything with the expectation that somebody, somewhere, will derive a subclass from it. This breaks open/closed (by making types closed for extension *and* modification), but C# has pretty limited support for specifying and enforcing contracts on classes^0 , and a sealed class is one that I can assume, within reasonable limits, will behave as expected. Given the limits of what C# *can* do, this seems a valuable compromise, at least to me. ^(0. That is, it has practically *no* support for specifying and enforcing contracts on types, beyond method names, return types, and argument types.)
&gt;Imho you are mixing two independent topics! What makes the content made of protobuf different from any other type like json, plain text, an image or something old-school self defined binary? Nothing. My grasp of c# is pretty limited. I've just been tossed a task that if out of my depth and I'm trying to get some air. &gt;What library do you use as your network stack? Dunno what you're asking here.
I, for one, can't wait for `private private`, which behaves like a double-negative and is a shorthand for making a member callable in a static context throughout an entire assembly so as not to clash with the `static` keyword.
Just because you assert I'm not, doesn't change where i wake up, where I goto work, or what is on my direct deposit. 
No
 GameObject.destroy(collectible); score++ there u go
Mono behaviour is a class, not the framework. Also don't get scared by WPF, it's not going to be easy at first but it's a very valuable skill and can get you pretty far if you decide you want to find work.
They bought Xamarin? When was this? Perhaps this is the reason why Unity Technologies stopped packaging MonoDevelop with Unity?
[2016](https://blogs.microsoft.com/blog/2016/02/24/microsoft-to-acquire-xamarin-and-empower-more-developers-to-build-apps-on-any-device/) The reason why Unity Technologies stopped packaging MonoDevelop is, because its not a good IDE and most professional developers use Visual Studio. Also Xamarin Studio for Mac was rebranded to Visual Studio for Mac, so there is no need for outdated software anymore when you can integrate VS into your Unity workflow.
doing some premature optimization, and since you're hitting the disk who cares about performance unless you got some weird business need for it (is this a homework answer?) also IMO you should always wrap any File IO with try catch or a `using` statement (depending on what API you're using)
Thanks for the info, I'm out of date lol.
Comments in regards of beginning with WPF: &gt; it's easy to make a GUI thats... well... not wrong but not right either imo. WPF is bizzare in places. You'll quickly find yourself making custom styles with complex triggers and retemplating most UI elements more complex than a grid or border. (Basic bizarre microsoft choice for example is there is no TextBlock/Label with user selectable text.) Wpf is best used with the MVVM model of designing things but MVVM is also incredibly unpractical/cumbersome for small projects. Xaml also is incredibly verbose, which again is really annoying for small projects. The best all-round close to real-world scenario tutorial for wpf i know of is: https://www.youtube.com/watch?v=Vjldip84CXQ&amp;list=PLrW43fNmjaQVYF4zgsD0oL9Iv6u23PI6M I wish that was a book instead.
Removed: Rule 4.
Ran this code through DotTrace to profile it for fun and to confirm a hunch. It confirmed my suspicion - the fast majority of the time the app is running is sorting it for the output. On a 50mb file with a million rows of data it runs in 10s for me. Of that 8.5s is sorting. If this used to be a powershell script my guess is another system grabs this file and works with it. If that system doesn't need the data a simple optimization might just be dropping the ordering at the end all together.
I'd go with some sort of abstraction over it tbh. Sockets get complicated. For a basic implementation try [This async server and client](https://msdn.microsoft.com/en-gb/library/fx6588te(v=vs.100).aspx) example from Microsoft. There's a non async version there too. Try both to get to grips with the concepts. Then there's [DotNetty](https://github.com/Azure/DotNetty) which is maintained by Microsoft and is a port of the Java Netty library. It's good and handles the things that make sockets hard: multiple connections, performance, memory handling, ordering, connection management, that sort of thing. 
&gt; First is chopping the stream of ones and noughts into discreet payloads, perhaps by using a specific value or sequence of values that can't appear anywhere else. This is actually the section I'm having the most trouble with. 
[removed]
Oh ok, do you have any documentation about how it (server) frames the messages? It might just send one whole message and then end so the whole received buffer can be passed to protobuf for deserialisation, or it might be a stream which involves knowing that, say three zeros means new message. Do you have access to the Java code that accessed the server or was that a totally different project? Do you have the protbuf message definition? You'll need that too.
here you go: https://gist.github.com/Szer/44678b746e5229638e08de84dfdb590b
I think that could be the issue. No need to sort BEFORE reducing source dataset to smaller one.
&gt; Oh ok, do you have any documentation about how it (server) frames the messages? Unfortunately not. &gt;Do you have access to the Java code that accessed the server or was that a totally different project? Different project, the guys working on it are fairly approachable though. &gt;Do you have the protbuf message definition? That I do have and it's quite large over 4k lines. Easy enough to turn into a class with protogen though.
The java code won't be useful if it's not talking to the same server. If it is then it will be useful. You'll be able to figure out what it's doing. It's hard to give advice without knowing the details, we're talking in terms of socket connections, but that's really just the pipe. Compare TCP with HTTP which rides on top of it and HTML that rides inside that. You need more information to establish what sort of protocol and how high level the protocol is.
NDC Oslo is in June. Living in London you're more than twice as close to Oslo as I am to San Francisco or Las Vegas (both huge conference hubs in the U.S.) so I can't imagine the flight cost is too bad.
The thing you need to ask yourself is: "what constitutes the positive scenario?" Is it that it is the first entry in a list? Check if it corresponds to item 0 / first item of that list. Maybe it is the file name or its path that should match. No matter what it can be formulated as a boolean expression : it either matches, or it does not. And if no such test can be formulated, it is likely that 1) you don't have access to the information needed to perform that test at the time of testing (an architectural problem), or 2) you can't really say what constitutes a solid test for positive (and until you can, you won't be able to code it).
&gt; WTF isn't there a way for anonymous types to implement interfaces? Sadly they [shot this feature down](https://github.com/dotnet/roslyn/issues/13). It would be cool if you could return return new IMyInterface { Prop1 = "hello", Prop2 = "world" }; And have it generate an anonymous class that is also type-checked against the interface.
how is the memory usage between winforms/wpf clients and web based desktop clients?
Hey, I appreciate the state recap, I'll definitely save this for later to compare with what I got. These variables are more to define the style and type of attack the player is doing so that the game checks the enemies restrictions, if they can be a chosen target for that style of attack. e.g; airborne target can't be kicked, underground target can't be jumped.
It might be difficult to provide concrete advice or a fix for you without seeing the code you're using. Even then, sometimes it's hard to see the theoretical problems. Best advice I can figure is try to avoid special locking scenarios. Ideally, get it to the point where you have one single object you use your `lock` on. Also, as you point out, to not depend too heavily on the order things lock/operate in. (If you do, perhaps consider rolling some kind of `Queue&lt;&gt;` that can execute your functions in-order in a threadsafe manner.) In terms of search terms, maybe check out "deadlock": https://stackoverflow.com/questions/894037/sample-code-to-illustrate-a-deadlock-by-using-lockthis http://www.c-sharpcorner.com/UploadFile/1d42da/deadlock-in-threading-in-C-Sharp/
Learn how Unicode works and how it has been used maliciously in the past.
Naive question: How do mixins different from regular inheritance of an abstract base class?
Oh. public interface IAttackable { //various properties needed to determine //whether or not the various IAttack objects are successful } public interface IAttack { bool Attack (IAttackable source, IAttackable target); } public class JumpAttack : IAttack { public bool Attack (IAttackable source, IAttackable target) { //handle it } } public class KickAttack : IAttack { public bool Attack (IAttackable source, IAttackable target) { //handle it } } public sealed class Attacks { public static readonly Jump = new JumpAttack(); public static readonly Kick = new KickAttack(); private Attacks () {} } Usage: IAttackable player = new Player(); IAttackable enemy = new Enemy(); bool kickResult = Attacks.Kick.Attack(player, enemy); bool jumpResult = Attacks.Jump.Attack(player, enemy); Hope this helps. 
No problem.
I propose to read [this article](https://www.codeproject.com/Articles/386911/Csharp-Easy-Extension-Properties), which shows how to arbitrage the *TypeDescriptor* as a workaround for Extension Properties. This is a solution that already works and you could use for your project as well! Maybe interesting for you, the C# DevTeam has [stated](https://github.com/dotnet/roslyn/issues/112) to close the Extension Properties issue, but instead go for a [Extension everything](https://github.com/dotnet/roslyn/issues/11159) - which unfortunatly was closed too. You can find the latest state of work in their [GitHub](https://github.com/dotnet/roslyn/tree/features/extensionEverything?files=1). Dig through their code on the ExtensionEverything-Branch, to see how the DevTeam was approaching the issue. You can keep track of the most recent proposal for [Type Extensibility](https://github.com/dotnet/csharplang/issues/192) in general.
I don't blame them, most of the time you can just create a class instead of an interface. Mostly I would use this for quick mocks.
The relationship between all the bits and pieces of .NET is a bit complicated, so bear with me. At the heart of it all is the Common Language Infrastructure (CLI), which is an open specification (see [ECMA 335](http://www.ecma-international.org/flat/publications/Standards/Ecma-335.htm)). CLI defines: * A virtual machine called the Virtual Execution System (VES) which (formally speaking) can execute CIL (see below). * A high-level, human-readable, stack-based assembly language called Common Intermediate Language (CIL). * An assembly format which can be loaded and executed by the VES. Assemblies may be either managed (CIL) code or unmanaged (native platform) code. * A Common Type System (CTS) that defines the semantics of primitive types and how to represent them in memory. * A subset of the CTS called the Common Language Specification (CLS) which all CLI-targeting languages must support. * A set of standard libraries with their respective classes and methods that every CLI implementation must provide. Essentially, this is the lowest-level API, but it's only a subset of the full .NET Framework API (keep reading). Very broadly speaking, the .NET Framework is Microsoft's implementation of CLI, while Mono is an open-source implementation of CLI. Microsoft's implementation of the VES and the standard libraries of the CLI is called the Common Language Runtime (CLR). It is part of both .NET Framework and .NET Core, but... The .NET Framework API, in its various incarnations, includes quite a bit more than just what is required by the CLI. What Microsoft calls the ".NET Base Class Libraries" (note the plural) is a superset of what the CLI calls the "Base Class Library" (confusingly enough). The .NET BCL includes everything that Microsoft considers to be the "core", platform-agnostic .NET functionality. The .NET Framework API includes not only the .NET BCL, but also a number of Windows-specific stuff. That brings us to .NET Standard and .NET Core. The .NET Standard is Microsoft's API specification for the .NET BCL (again, this is more than just the CLI BCL). Meanwhile, .NET Core is a paired down, open source version of the .NET Framework which focuses on implementing .NET Standard (the core, platform-agnostic stuff) and nothing more. The .NET Foundation publishes .NET Core as an open source project. On the Mono side of the equation, Mono 4.6 implements .NET Standard 1.0 and Mono 5 implements .NET Standard 2.0. ASP.NET is web server module for invoking .NET Framework code from ASP scripts. Similarly, ASP.NET Core is a web server module for invoking .NET Core code from scripts. Basically, it's a way to write web apps in .NET languages like C#. WPF is a GUI framework library which, so far as I know, is only supported by Microsoft (and specifically just the .NET Framework). It is not a part of .NET Standard and therefore not supported by the .NET Core runtime. Xamarin Forms is an open-source GUI framework library which can be used with the .NET Framework, but is not part of the .NET Framework. Xamarin is the company that primarily developed both Mono and Xamarin Forms. It is now a subsidiary of Microsoft. So I guess these days Mono is technically a Microsoft implementation of CLI, too, just to make things more confusing than ever.
Mixins are a form of multiple inheritance.
&gt; Then I learned that the 'lock' command or even using Monitor.Enter / Monitor.Exit does not guarantee that the threads will gain the lock in the same order that they requested it. Yep. This is multi-threaded programming. Any thread can be run at any time, or suspended at any time, based on rules imposed by the CPU, the OS, and the runtime. Think of them as mini programs. And if you have any shared data/state, that's what you protect with a lock. Or use lock-free data structures, but that's an advanced topic.. They will eventually get "enough" CPU time - just not in the order or the time-slice you expect. 
Does your library use a lot of reflective invocations? If so it may be unsuitable for gamedev as reflection often creates a lot of garbage (and is of course at least one order of magnitude slower than a simple virtual call). I *would* like to see some kind of compile-time IL-rewrite method however. What approach have you gone for?
Maybe you'd like the TCP client I wrote for stuff like this. Let me know if you have any questions or suggestions! Docs are [here :)](http://docs.boerman.co/Libraries/Networking/tcp-client/) 
Your comment made me think of fody which does things at compile time. I use the one that adds notify property changed calls to autoproperties.
Without echoing what you just said, I'm current building a native Android app, and it's LINQ that I'm also missing the most.
&gt; Then I learned that the 'lock' command or even using Monitor.Enter / Monitor.Exit does not guarantee that the threads will gain the lock in the same order that they requested it. Correct. &gt; And it is apperantly possible that certain threads just never get a lock (or get one the first time and then never again as in my case). Only if another thread is still holding it or the contention is very high (in which you can get something called 'starvation'). Due to the way locking is implemented a thread that just exited the lock has a much greater chance of re-attaining it before any other thread in a tight loop. If you're just looping around exiting and entering the lock, this is a possibility. Otherwise, consider whether one thread is holding the lock longer than it should. &gt; In all honesty this is the first time I encountered this problem (or even heard it is a thing). So I'm kinda lost and actually really scared too, because right now I feel like I can never trust the lock command again. The lock mechanism does nothing special or unexpected; your issue very likely lies in your design or usage. &gt; Still. I'm trying to learn more about this to better understand why and how it happens and what I can do to make sure none of my threads are left hanging there forever. As far as I know (though I stand to be corrected) there is no native synchronization type in C# that allows queued/fair locking out-of-the-box. If the problem really is thread starvation you may need to implement a simple queue behind your lock/protected region. [This article](http://tutorials.jenkov.com/java-concurrency/starvation-and-fairness.html) is for Java but the same concepts apply and may be useful. &gt; Can anyone suggest what I could search for to find out more about this phenomenom. Or maybe some reading material. Firstly, I highly recommend this e-book: [Threading in C#](http://www.albahari.com/threading/) Also I don't normally like linking to my own stuff (it feels a bit self-promotiony) but it seems relevant so here is the beginning of a four-part series I wrote about multithreading mistakes people make: [Common Multithreading Mistakes in C#](http://benbowen.blog/post/cmmics_i/). There's nothing directly relevant to your problem but it may be a useful resource nonetheless.
It's a great use case for records (which can also implement interfaces), if they ever ship...
Depends on how your structures work. When I do this I normally use a DI tool and setup static funcs as the mixins and maybe pretty it up with an interface. under it all it will be static short of a injected context. I let unity handle all the type resolution at start. Look ups after initialization are just pulling from lists in memory so there is a fairly low impact at start but not much of anything at all after that. You biggest performance costs come from how you are intercepting method calls. High performance options alter IL prior to compilation which may not be desired while the ones that use memory use reflection for the method info to invoke on the target type. The type is already loaded so its not as bad as it could be. What this impl does here, I am not sure. Its been easy enough to do this with unity and some other DI tools Ive never considered a more dedicated API. 
The backbone is `ConditionalWeakTable`, which I don't *believe* has a huge impact on performance. Reflection comes when a type with mixins is first used. Its properties are iterated through for ones with `MixinProperty` and their type &amp; default values assigned to each. There is also a few spots where `dynamic` is used. I haven't done any performance testing yet, so I am not quite sure.
Doing a lot of Python and JavaScript lately. Async/await is a LOT easier in C#. I also find it weird that asyncio is a Python module, and not built into the language.
It allows a few things: - Helps avoid messy, non-intuitive inheritance when trying to shoehorn in properties. - Eliminates weird cases where *for just this one subtype* a certain property isn't needed. - Accentuates the composition over inheritance philosophy. - Reduces 'boilerplate' of finding oneself duplicating property declarations in many locations. - Allows classes to be extended from another namespace. Imagine for example you are creating a game. In your main namespace you could define a generic game object class, with subclasses representing particles, billboards, actors, UI, skyboxes, etc. Then, depending on what is needed, you could pick between a 2D or 3D namespace to extend those classes with new methods &amp; properties.
&gt;As far as I know (though I stand to be corrected) there is no native synchronization type in C# that allows queued/fair locking out-of-the-box. IIRC `SemaphoreSlim` uses a linked list to queue async waits and should effectively be FIFO (but not for synchronous waits).
I have a github repository for a library that lets you run web api style endpoints that communicate over websockets using protobuf and a corresponding client. Is that the kind of thing you might be looking for?
I would definitly write the protocol on top off the stream concepts. So you can read your messages from any stream. This makes testing much easier and removes alot of complexity. When you got this working just use NetworkStream and implement the required protocol logic on top off It. For a simple protobuf Protocol you may use a frame which has a payload the frame tells you the payload length and other required stuff. The HostToNetworkOrder/NetworkToHostOrder functions are definitly worth taking a look.
Mostly in comparison to Java, which I have to use at work and have tried to use for private Android development: LINQ (streams somewhat work but seem not quite as polished), async/await, Properties, Json.NET (although not directly a C# feature), Events, Generics (that don't get erased...) For Android I'm currently looking at Kotlin which seems to have some neat concepts in the right direction. (Yes I've used Xamarin before, but that has a lot of problems as well)
I'm obviously showing my complete ignorance of Java 8 because I didn't know this was a thing. Just found this primer, hopefully it'll help other .NET devs whom are likewise as ignorant of Java as I am. http://winterbe.com/posts/2014/07/31/java8-stream-tutorial-examples/ Thanks man!
You might consider "prearranging" 'virtual tables' with reflection once at initialisation time, to avoid the need for it throughout the lifetime of the program.
How could it break existing code though? Wouldn't that only break niche C# compilers that aren't updated anymore (in which case they wouldn't have been updated to support newer C# versions anyway)? The way current compilers enforce their modifier declarations, there's no way for someone to have something in their current declarations that would cause conflict with this and still compile in the past.
Moving from Java to C#, after studying C# at Uni, I thought I would miss properties the most. Not really, unlike C#, once I create getter/setter methods and rely on the IDE to rename them, I'm set in Java. Using any sort of the syntax sugaring for C# though.... constant dicking about with modifying syntax while making a program, where as java, sure it's verbose, but I only need to write the setters/getters once unless i need to add behavior. Where as C# I can't even modify the visibility, or read only status easily without dicking with things. It just feels off even if it's about the same amount of time. By far the biggest thing, is the generics not being erased, hate dealing with TypeToken work arounds, even though I havn't touched much on generics in C# yet.
&gt; And it is apperantly possible that certain threads just never get a lock (or get one the first time and then never again as in my case). That's called "starvation". https://stackoverflow.com/questions/1162587/what-is-starvation 
&gt; How could it break existing code though? You can't name a variable or field `public`. If a *new* keyword was introduced to handle one of the compound access modifiers, code that happened to use it as a variable or field name would suddenly not compile. (Obviously, this wouldn't break existing DLLs or executables. Just projects and solutions.) The trivial solution would be to go find everyplace in the solution where the keyword was currently in use and toss in an `@`-sigil, but it's still a thing that people would have to go do. &gt; sometimes you have to be willing to break some code for the future benefit of the language While I agree with you in principle, the C# group has shown a very marked resistance to changes that will actually break existing code.
Basic suggestions: 1. Avoid using locks at all. Try things like ConcurentQueue and ConcurentDictionary to share data between threads. 2. Reduce the amount of time spent in the lock. If you are locking 90% of the time, you are going to stave threads. If you are locking 2% of the time, you should be fine for 10 threads. 3. Reduce the number of threads. Do you really have 30 cores? If not, then you don't need 30 threads. 4. Are all of the threads writing? If not, a Reader-Writer lock can offer much better performance because multiple readers can work at the same time. 
Stuck in Oracle. Today I found out that some special character like a forward slash in an Oracle password doesn't work when entering interactively to SqlPlus. That alone tells me something there is something fundamentally wrong with how they handle user input. There's not a week that goes by that I don't trip up on what usually find out is a bug at least a few times a week. I learn new reasons to despise Oracle everyday.
&gt;You can't name a variable or field public. Yeah, but the compiler already doesn't let you do something like `float private speed;` either, you can't declare access after the typedef, so why is the compiler even caring what the naming to the right of the typedef is when it's never useful to look for access modifiers on that side?
I’ll go different: reflection. Many of the cool features in the language are because of reflection. Easy serialization: reflection. Effective generics are because of reflection. IOC libraries are all there because of reflection. I spend most of my days in Swift now, and that is often what i miss. (There is a Mirror class in Swift, it is not nearly as capable)
 var generator = new Generator(); var engine = new Engine(generator); var car = new Car(engine); The first example (pasted above) [is still dependency injection](http://blog.ploeh.dk/2014/06/10/pure-di/). Just not using a container.
When writing code fast the absolute #1 I missed in Java was the `var` keyword. Everything feels so verbose and redundant without it. LINQ is nice and I love it but it applies when dealing with collections. `var` applies to … everything.
I'm writing powerbuilder....pray for me
Things I miss the most when working in Java: - Reified Generics. I tried doing some generics in Java, only to discover I could not do generic overloads the same way I could in C#. Huge disappointment. - Auto-Properties. Lombok is a clever hack, but a hack nevertheless. - Actually doing code instead of XML Files. To paraphrase someone else, if Java is so great why does everyone invent frameworks to run Java via XML instead of actual code? - No operator overloading. I never had to do my OWN operator overloading, but having to use types in Java that did not, like `BigDecimal`, was painful. - Not having checked exceptions. I didn't miss not having reflection (despite my abuse of it in C#), and all of that said I actually tend to credit Java as teaching me how to deal with coding to very basic, but readable standards so algorithms were portable. Now, VB6 (Which is really more about what pains me going to VB6 from C#)... - Dear god. Do I need use `Set` on this variable? This gets really tricky when you have objects inside containers, they don't follow the same rules. Most languages do this better, but C# again does great (i.e. compare to my point about operator overloading above) - `On error goto `. It's a shitty version of try/catch. (Actually, it can in theory encourage people to code smaller VB methods so the flow remains easy to follow, but any VB Codebase I have ever seen doesn't follow this.) - Classic ADO. Not a feature of VB6 per-se but I forgot how horrible it was after having to dive back into it after 7 years. I never realized how much I would miss datatables until recently. - `Variant` makes `Dynamic` look like polished gold. (I normally despise `Dynamic`, I've only actually used it once and have never forgiven myself. But `Variant` is far more painful.)
SQLPlus is garbage. You need to use SQL Developer and deal with the constant crashes. Source: Used to facilitate an unholy marriage of .NET/Oracle
Yeah, I guess C# only has single inheritance and multiple interfaces. I used multiple inheritance 1 or 2 times with C++, but never missed it with C#.
With a file of that size, I'm wondering whether Having another layer of indirection (Have a collection of Keys, sort that, then having each key have a collection of sorted values) would help. OP, it's not at all the bottleneck but a for loop is very slightly more efficient than a foreach. You aren't having to incur the cost of the iterator state machine that an Enumerator incurs.
I miss C#'s concise syntax for lambdas when I'm working in Lua or VB.NET.
Sorry but this is bad advice. Never compare strings using `==` unless you care about case sensitivity, which is honestly very few cases with strings. Here are Microsoft’s own recommendation on [How to compare strings](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/strings/how-to-compare-strings). TL;DR `string1.Equals(string2, StringComparison.OrdinalIgnoreCase)` is how you want to compare strings.
Yup! I just learned about it recently too. You can only use the Conditional Attribute for methods that return `void`. `[Conditional(“DEBUG”)]` https://twitter.com/brandonxamarin/status/951453705861287937
Can you expand on what you mean by "constant dicking about with modifying syntax"? I can specify whatever kind of syntax I want: public class Foo { private string _bar4; public Foo(string bar2) { Bar2 = bar2; } public string Bar {get;set;} public string Bar2 {get;} public string Bar3 {private get;set;} public string GetBar3() =&gt; Bar3; public string Bar4 { get {return _bar4;} set {_bar4 = value;} } }
Credit to /u/vijayankit for posting the original article https://ankitvijay.net/2018/01/11/lesser-known-c-features-part-2/
Java has *checked* exceptions! 
Sorry if I’m being dense but why do you need a library for this? What does the library offer that a simple interface with extension methods doesn’t? Hastily typed on my phone and oversimplified: public interface INamed { string Name; } public class NamedThing: INamed { public string Name; } public static class INamedExtensions { public TNamed Named&lt;TNamed&gt;( this TNamed named, string name ) where TNamed : INamed { named.Name = name; return named; } .....etc } 
Just to add complete info: Note: The conditional attribute and preprocessor directives are not the same. With conditional attribute, the method is still part of the assembly. However, with preprocessor directive the piece of code is not visible to assembly itself (when the condition is false).
https://github.com/jamesharling/Microsoft.Owin.Security.ApiKey Super-simple authentication middleware for Owin, to support header-based auth schemes https://github.com/jamesharling/GlobalPlatform.NET Fluent scripting library to generate commands for and manage secure communications with smartcards that implement the GlobalPlatform spec, such as JavaCards.
The problem with approach is that C# makes everything easy especially because everything is nicely documented and you can easily look at the source code. I think you should only focus on C# specifically if you are going to use it later. It is a beautiful programming language but the more you learn about it the less you are willing to switch away from it. 
Oracle's database was fine, fewer people seem to be using it these days. Their dev tools and general developer experience are garbage. It's always felt like a huge "Fck you for working with our tools" when working with anything Oracle.
Op here. Here is the most up-to-date version. It now uses String.Ordinal and TryGetValue. https://github.com/jftuga/universe/blob/master/freq.cs
You can try this as your key. Shaved off 50% for me. https://gist.github.com/PBeckerr/32f5348deadfc2800e70faa633cc5cf2
Thanks for the info and link.
&gt; just to make things more confusing than ever. I'll had to read this multiple times before understanding a part of this. Although this made me realise that alot of really hard stuff is already done for us without me really thinking about that. I'm curious how do you know all this? Thanks for the information!
I've been using Rust a lot recently, and the one thing I miss the most is easy GUI. Rust's GUI libraries are very immature at the moment, so you can't really just quickly slap together a working GUI as easily as you can with C#.
SQLPlus was my backup to developer after I learned it couldn't do what I needed.
Removed: Rule 6, Rule 7 (REPL doesn't work)
If it helps, here's a "Cliffs Notes" version that compares to Java. It's not 100% accurate but, eh...close enough. * VES - analogous to the Java Virtual Machine (JVM). Microsoft's VES implementation is the CLR * CLI - assembly language for the VES. No direct analog in Java, but binary encoded CLI instructions are analogous to Java Bytecode * C#, F#, VB.NET, etc. - Analogous to the Java programming language and Clojure. * .NET Framework - Analogous to Oracle JVM * .NET Core - Basically .NET Framework "Lite" * Mono - Analogous to the OpenJDK JVM As for the rest, it probably won't come up except maybe for CLS-compliance: * CLS - A subset of the .NET types supported by every .NET language. Only relevant if you're writing library code intended for .NET/Mono at large rather than just a particular .NET language. &gt; I'm curious how do you know all this? I'm not gonna lie; I only had a general sense of how things worked before I made that post. Really I just curious, so I sat down and started researching and flipping back and forth between Wikipedia and the ECMA 355 PDF (the CLI) until I got the details sifted out. You'd be surprised what you can learn when you're avoiding preparing for job interviews :p
`public interface IRecipe&lt;T&gt; where T : IFood` and `T Cook();`
See, that's how I would THINK it would work. However, you CAN'T return RuinedDinner from CheckRecipe. It throws an error: "Cannot convert RuinedDinner to T"
To expand on what /u/decPL has said: Imagine I write the following: Recipe&lt;ApplePie&gt; pieRecipe = new Recipe&lt;ApplePie&gt;(); ApplePie pie = pieRecipe.Cook(); What would you expect to happen? What it sounds like you want, is that `pieRecipe.Cook()` should return a `RuinedDinner`. But the return type of that method is not a `RuinedDinner`, it's an `ApplePie`. If you can explain what you'd like/expect to happen in this case, we can probably figure out the correct way to do it.
Replace this: tbl[line] = (tbl.TryGetValue(line,out value)) ? tbl[line] = value+1 : tbl[line] = 1; With this: tbl.TryGetValue(line, out value); tbl[line] = ++value;
It looks like you're trying to return an either - either the recipe has the correct ingredients supplied, in which case return T, or the ingredients are incorrect, so return RuinedDinner (I'm assuming that's the eventual behaviour, though you haven't written that bit yet). This means that the return type of Cook &amp; CheckDinner cannot be T, because they do not always return an instance of T - sometimes they correctly returns an instance of RuinedDinner. Given that both T and RuinedDinner both inherit from IFood, the return type of both methods (for this implementation) should be IFood; the calling code could then say something like: IRecipe recipe = CreateRecipe(); // Add some ingredients IFood dinner = recipe.Cook(); if(dinner is RuinedDinner) { Console.WriteLine("Dinner was ruined because " + ((RuinedDinner)dinner).ReasonRuined); } else { // Do something with dinner } There are much better ways to architect this, but given your code this will give you what you want.
Every `T` is an `IFood`, but that doesn't mean that every `IFood` is a `T`. If you want to return any `IFood` from `CheckRecipe`, then declare the return type as `IFood` and not as `T`.
&gt; You'd be surprised what you can learn when you're avoiding preparing for job interviews :p Hahahah nice one.
Ahhhh, I see my problem now, (thanks to both you and /u/LondonPilot): My expectation here WAS that when I call Recipe&lt;ApplePie&gt;.Cook(), then the "Cook" for that specific "IFood item" is called, the "Cook" should be able to return a DIFFERENT IFood item as a result. However, this being pseudo-code I don't show why later I need the generic T elsewhere. BUT, I see now that if I were to just replace "T" with "ApplePie" then obviously this wouldn't work, because I can't cast "RuinedDinner" to "ApplePie" regardless of shared interfaces. Got it. Thanks! 
It really depends on what you're looking for. It's never a bad idea to gain deeper knowledge of anything, really. But... If you want to start learning how a compiled program actually works vis-a-vis the computer architecture and OS, the .NET platform is probably not a great place to start. By nature of what it is, the CLR is a strange beast. Most of what I know about computer architecture I learned from hobbyist reverse engineering, but I don't even know where to tell someone to begin with it. I spent a lot of time fucking around with debuggers and pouring over the [Intel architecture manuals](https://software.intel.com/en-us/articles/intel-sdm#three-volume). Some RISC-flavored platform (ex. MIPS, ARM) would be easier to learn, and covers 99.8% of what you actually do with a CISC architecture like x86/64 anyway. If you're looking to gain a deeper understanding of programming in general, without respect to specific languages, then I would recommend learning some languages in a completely different family from C#. Like C, C++, and Java, C# is an [imperative language](https://en.wikipedia.org/wiki/Imperative_programming). If you're a self-taught programmer (or lower-division CS undergrad) chances are good that you've only worked with imperative languages. Try picking up a [functional programming language](https://en.wikipedia.org/wiki/Functional_programming) like Lisp, Haskell, OCaml, or F# (F# is basically OCaml .NET). I hear Haskell is all the rage. This is supposed to be a [fantastic free book](http://learnyouahaskell.com/) for learning it. Learning a functional language will certainly change how you think about programming, and make you fall in love with immutability. If you're crazy, learn lambda calculus. Try to wrap your head around the [Y-combinator](https://en.wikipedia.org/wiki/Fixed-point_combinator) and silently weep in the corner. Learn a [logical programming language](https://en.wikipedia.org/wiki/Logic_programming) like Prolog, and dig into its underpinnings (searching, backtracking, and unification).
 Just run the XSD to get the xml file, then use `string json = JsonConvert.SerializeXmlNode(yournode);`
Do you use Ninject for Unity? If so, what do you think of it?
You want check recipe to return a type of IFood. So like this. public IFood Cook() // yada yada yada public IFood CheckRecipe() // yada yada yada The way you have your class set up right now you're forcing the return type of those 2 function to be whatever class type you are passing to the generic class. So whatever you set the the T to be when you declare the object is what all of the values of T will now be inside of that class.
I'm not sure you can use streams in Android yet. It's been awhile since I've worked in Android though so I could be wrong.
Java also has (some) unchecked exceptions; I think u/to11mtm means that checked exceptions are a particular point of pain. (This could probably be made clearer by removing the 'no' at the start of the previous item--they miss reified generics, auto-properties, using in-language code instead of XML-based frameworks, overloaded operators, and not having to deal with checked exceptions.)
This book (old edition and the new one when it comes out) is my go-to source for in-depth C#: https://www.manning.com/books/c-sharp-in-depth-fourth-edition?a_aid=jonskeet&amp;a_bid=66d590c3
And C# *does not* have checked exceptions. 
Do this: var value = FlowchartTab.FlowRowCount; Assert.AreEqual(1, value)
Named tuples - It's so nice not having to pepper my codebase with single-use classes that don't really represent anything in particular apart from a combination of variables. Since I've been using Lua recently, a proper actually checked type system and an IDE to make use of it. An language-standard events system. I wrote some stuff for Bukkit and Forge and they use a system that involves listening to a single event for all instances of it happening, then using the arguments to determine where it came from - this doesn't seem object-oriented in the slightest, and it causes optimisation problems. Particularly, listening to player movement. e.g. if I want to freeze a player, instead of listening to that player's movement event and cancelling it, I have to listen to the movement event for *all* players, determine whether or not it came from the player I want to freeze, and if it did, cancel it. Considering this adds extra checks or lookups, combined with the fact that this event could now be raised 400 times a second rather than 20 times, it can make even basic operations get very expensive very fast. I wrote an events system to mimic C#'s, but implement priority, cancellation as an event feature, multiple-at-once raises, and cascading raises, and now when I use C#'s event system for anything complicated, I find it lacking. I can write my own events, but because the event support in C# is specifically tailored towards delegates, I either have to just make it a regular class without the pre-existing support, or abandon the extras. It sounds weird and trivial, but {curly braces} - again because I've been using Lua recently. They make code *so* much more readable and scannable. Extension methods. But on the other hand, I wish C# has Swift's full-blown class extensions.
Not for constructors, but you can define a "builder": public interface IFoo&lt;T&gt; where T: new() { T Create(string s); } public class Foo: IFoo&lt;Foo&gt; { public Foo(){} public static Foo Create(string s) =&gt; new Foo(); Foo IFoo&lt;Foo&gt;.Create(string s) =&gt; Foo.Create(s); } 
UPDATE - I just had a possible break-through, need to test with user. So I was finally able to recreate the problem, I updated my grid quickly using single digits in order (1,2,3,4, etc..) so I could easily track if any cells didn't change. One text box out of 20 didn't save. I checked the error log, no errors. I saw the value and it went through all the steps correctly. So I checked the database and find it did save but it created a second record for that grid coordinate. When the form goes into read-only mode it only pulls the first record for each grid cell so if there's two for one cell it ignores the second one. When I load the edit screen I put a textbox for each cell, if a value is there I put an attribute for the index of that record. I also put attributes for the coordinates of each cell. When I save I try to use the index value but if it's not there I create a new record base on the coordinates. I found a combination of actions that would explain why it only happens 1/20 times. You had to fill in a blank cell, creating a new record then edit that same record with a new value in the same edit session. Each cell has a simple value so changing it twice in one edit session was rare. My code was creating multiple new records based on edits being detected as inserts. I'm pretty confident that this is going to work since it makes sense why I was not getting an error. TL;DR: I'm an idiot lol
Oracle is better than DB2 IMHO. As part of this switch to Java, I've also had to work in DB2. Their version of SQL is so verbose in comparison.
**Project 1:** I spent a few months making a referral/rewards web app for service businesses using asp.net core. I made it to solve a problem for my own service business but ended up pivoting into a B2B only provider so I no longer have a need for it. Everything is in place to open it to the public but I never pulled the trigger on the launch because businesses would need to manually input the email address of their user and the transaction amount each time. I imagine that's too much of a hassle to stay on top of. In my mind, it would need to be attached to their point of sale software to automatically keep track of referrals. But I'm not about to expand it to manage work flow, invoicing etc. Besides getting familiar with ASP.net core, I got to implement the stripe api for subscriptions and email service through one of the big providers so that was interesting. **Project 2:** I'm currently working on a dispatch system for our aforementioned pivot. It will significantly cut down on my administrative overhead for tracking tickets, payments and staff time. This time using asp.net core 2.0. The app is done so now I'm trying to figure out splitting a domain/sub domain where one uses a webhost and the other uses a different application host. Hope to be done this week. **Project 3:** I'm going to make a single page app to easily share tables of data. The bulk of the app will be front end manipulation so this will be an opportunity to learn a lot more javascript. Wish me luck. 
Yes, exactly, great analogy :) 
I find that the naming interfaces without an "I" prefix make it difficult for me to follow the code.
http://github.com/bartoszgolek/keyfreak Windows app launcher http://github.com/bartoszgolek/NFlags Simple library to made parsing CLI arguments easy. Library allows to print usage help "out of box".
- Linq to Objects - Linq to Xml - Linq to ... There is a world outside Entity Framework 😉
you can mix both: var query = (from x in something where blah blah blah order by ..... select x).Distintc(....); 
I take it you are using lock because you are sharing data or resources between threads? If this is the case I would consider reevaluating your concurrency arrangements with threading. Threading it great when it comes together but it requires an completely different mindset than single threaded programming. My suggestion is, if you can, make copies of your data and use that for you threads. You need to reduce the chance that a thread is going to encroach on another threads operations and to do that you need to carefully set them up first before dispatching them. I would remove lock completely as to me, it's a cheat and attempts to get your out of lazy practices (not suggesting you are lazy). It's all in the set up with threading. Personally I treat them as almost completely separate applications which require their own instances of data to work on.
https://github.com/jeyjeyemem/Xer.Delegator C# message routing library with out the usual boilerplates
Iterating over the Console.WriteLine will likely be the slowest operation in this program. Instead of doing that, try writing the collection of strings to a StringBuilder and then calling Console.Write once.
The cool thing about .Net is that if you make an executable, you can tell it to require a certain version of the runtime, and it'll be downloaded and installed when your app is installed for the first time.
I also love how in VS you can specify both the target runtime version and the target language version by project. It allows me to benefit from all the goodness in VS2017 while working with people that only have access to 2013.
You could still do something like IDinner dinner = pieRecipe.Cook(); Which gives you the option of returning a ruined dinner. You lose out on access to ApplePie specific properties, but since you want to be able to handle RuinedDinners too, you're likely not interested in ApplePie-specific properties anyway.
how about this: public interface IRecipe&lt;TFood&gt; { List&lt;IIngredient&gt; Ingredients { get; } IDinner&lt;IFood&gt; Cook(); } public interface IDinner&lt;TFood&gt; { bool IsRuined { get; } IEnumerable&lt;string&gt; Mistakes { get; } TFood Food { get; } }
https://github.com/TAGC/AsyncBus It's an in-memory asynchronous memory bus. I haven't really tried using it yet, but I made it because I think it might be useful in the near future for some stuff I'm doing at work.
&gt; Due to the way locking is implemented a thread that just exited the lock has a much greater chance of re-attaining it before any other thread in a tight loop. Can't you just `sleep(1)` after you release the lock to give up your priority? It's not free, but the cost is minor compared to starvation. http://joeduffyblog.com/2006/08/22/priorityinduced-starvation-why-sleep1-is-better-than-sleep0-and-the-windows-balance-set-manager/
Instead of: public static TSelf Named&lt;TSelf&gt;(this MName instance, string name) Use: public static TSelf Named&lt;TSelf&gt;(this TSelf instance, string name) where TSelf : MName Now, you don't need to specify the primary type you are using to get that automatic fluent style. It will conflict with the string returning overload, so you'll have to choose how to deal with that. You also probably want to name the method WithName instead of Named. 
That may be true about C++, but it is not the reason for the naming. It is purely a case of not being able to use the obviously better existing keyword, and having to find some combination that is close to the correct meaning instead.
You can mate, but it's min SDK level 21 though (I think), did it yesterday. Question though, does Stream API have any functionality similar to LINQ to Entities?
[Roslynator](https://github.com/JosefPihrt/Roslynator) can generate all of this code for you.
I feel like an amateur in this company. Give me a break: I started with FORTRAN in 1969. Computer science hadn't been invented yet. ;) My side project is CBMunger, a WinForms app that makes it super-simple to write methods that accept parameter, and execute those methods. Here is my most recent method. It changes a registry entry so torrents open in uTorrent when I click a magnet link. There's a near-identical method for switching to qBitTorrent: public static void cbf_set_qquqqtorrent_as_default_client_for_magnet_links() { // This sets the Registry key to the uTorrent executable so it is invoked when magnet links are clicked. // At this writing, this value works for the executable path: // // uTorrent Path: C:\tmp\uTorrent.exe // Get the parameter Dictionary&lt;string, string&gt; parameters = GetParameters( "uTorrent Path ?? Do not surround the path with double-quotes; they will be added ?? " ); if (parameters == null) // Then no parameters were returned return; // Quit string uTorrentPath = parameters["uTorrent Path"]; // Make sure the client executable exists if (!File.Exists(uTorrentPath)) { f.MsgBox("The path for uTorrent.exe is invalid: " + uTorrentPath, "Error: Invalid Path"); return; } // The path's two items each need to be surrounded by double-quotes, e.g. "C:\tmp\uTorrent.exe" "%1" string torrentExePath = "\"" + uTorrentPath + "\" \"%1\""; string targetKey = @"Magnet\shell\open\command"; // Set the Magnet command value to the selected torrent client RegistryKey rootKey = Registry.ClassesRoot.OpenSubKey(targetKey, true); // true =&gt; provide write access if (rootKey == null) throw new Exception("The subkey was not found: " + targetKey); rootKey.SetValue("", torrentExePath, RegistryValueKind.String); rootKey.Close(); f.DisplayAlert("Default is now uTorrent"); } GetParameters() applies a little meta-language that lets me create checkboxes, set of radiobuttons, dropdown lists and textboxes by inserting [] or {} or &lt;&gt; or none of those. If the label begins with @ it is required; * means it is required and it is validated (e.g. the file exists). The generated parameters dialog has a button that generates the C# code for capturing the parameters. There's a method for writing out a dictionary of methods, so I can right-click a method and CBMunger shows me that method's source code. It tells me how many methods there are (819) and the length of the longest method (8766) -- that method being a Swiss Army knife for renaming files. (Yes, I have a hobby.) I've thought of putting it up on github -- but it's huge (120,000 lines) and it's *bad code*. I started it six weeks into my first C# course, when it covered reflection -- and I've never rewritten it, so it has the "architecture" of a .Net neophyte. It has zero unit tests. If a prospective employer examined the code on github -- I wouldn't get the job. It's incredibly useful though.
"on error resume next", best feature ever
Had not see that in Json.Net but I don't think it will work for me. I am generating classes from an xsd file. Those generated classes need to be serializable in a net standard web api controller as json. SerializeXmlNode only works with XmlNodes which I don't have and is not the standard way web api controllers serialize to json. 
You have an interesting approach with your `CommandCache` and `HeapUtil` types. Without digging too deply into it, don't they tend to cause a lot of synchronization when using the library? It seems like every time you call any function, you need to sync up with the command cache and then potentially lazy-load some stuff. It looks like the heap stuff is done thread-local, which would imply less synchronization, but it still looks a bit expensive. I've found that most everything I want to do can be accomplished with stack allocation and no fancy allocation mechanisms. Nit-picks aside, great stuff! I see that you've converted a few of Sascha Willems's examples in your samples repo. I've "converted" a few others myself using my Vulkan library: https://github.com/mellinoe/vk/tree/master/src/samples. ("Converted" might be a misleading word if you look at the code :) ).
 This isn't a learn as you go book. This is a study guide, more-as. You wouldn't want to sit in a conference room and read this together.
There is something about VB...there are probably some great codebases out there that were written in VB, but I haven't seen them. I worked on 1 project in VB.Net, they had adopted a 1 file per namespace convention. When you tried to debug something, you would often be jumping around a couple hundred lines in the same file 
Yeah for some reason every VB project I've worked on has had similar issues and it's been kind of a mess. I wonder why this seems to be common for VB. 
I have done this already based on other suggestions... https://github.com/jftuga/universe/blob/master/freq.cs#L24 Do you think there is any difference between: tbl[line] = value + 1 and tbl[line] = ++value 
Good idea, I will try this. Is there something similar for this: while ((line = Console.ReadLine()) != null) 
Thanks! That's a good point about possible syncs on the CommandCache, that's been recently rewritten to deal with Core/Standard's lack of cross-platform DLL mapping, but I've not had chance to thoroughly performance test it; I might borrow VulkanCore's approach and store function pointers in the different objects once they've been used the first time. The HeapUtil is designed to be a simplified stack allocation without using actual stack space; I'm conscious that a lot of the methods use stack space for large, optional parameters (especially for extension info structs) and there's conceivably a risk of stack overflow if all the marshalling is done there. HeapUtil just replicates the behaviour of stackalloc by incrementing a pointer but in a dedicated memory space, and resets the pointer to zero at the end. I'll run some perf tests and see what the impact is. I'll confess that the Sascha Willem samples are only half-done; his base types are a little hard to follow as it's been a few years since I did serious C++, so I was probably going to use yours as a reference when I get back to them 😁
The project I have been thrust into is a bit of a gem in some ways. There are plenty of parts where you can tell people lost the plot and started to code it like every other VB6 project, but were it not for the terrible tooling around VB6, I'd say it's *mostly* better to work with than the majority of .NET codebases I have run into. 
I played around and I couldn't reproduce that functionality. What Rider version and OS are you using?
Ah! I think I found your setting: Open settings (ctrl+alt+s on Windows) and go to Editor &gt; General &gt; Typing Assistance. There you'll see "Auto-format on paste:" and I have an inkling that yours is set to "Reformat." Try the other options and see if that fixes it for you.
&gt; Thanks! That's a good point about possible syncs on the CommandCache, that's been recently rewritten to deal with Core/Standard's lack of cross-platform DLL mapping, but I've not had chance to thoroughly performance test it; I might borrow VulkanCore's approach and store function pointers in the different objects once they've been used the first time. &gt; &gt; In my lib, I just load all of the function pointers up-front. It's very quick to do that, and afterwards no sync'ing, or any management at all, is really needed. I think it's most likely better than sprinkling the cost throughout a program's execution as well as adding extra sync points. Profiling would certainly give a better idea than my ramblings, though :). &gt; I'm conscious that a lot of the methods use stack space for large, optional parameters I think that, the structures used in Vulkan are usually very small. A `VkBufferCreateInfo` is only 40 bytes, smaller even than some things like a `Matrix4x4`. There's others that are bigger, of course, but they're all pretty small. Relatively speaking, of course. I think it would be pretty hard to hit the stack limit in normal use. Your library has a different approach than mine, though. Mine doesn't have any abstractions on top of Vulkan, it just exposes the raw structures and functions, so you would create a `VkBufferCreateInfo` yourself and put it wherever you want (stack, heap, etc.). Yours has a higher-level layer on top and hides that complexity from the user, which could be good in its own way.
Have a close look at what's different between your `Console.WriteLine` statements.
Honestly: I think the best way of learning those topics is to just play around with those language features. Just build an App that does something semi-usefull/-useless in an asychronous way. As soon as someone causes a deadlock by using the Result-Property of an async/awaited Task in a synchronous context (on the GUI-Thread) you will inevitably land on Stephen Cleary's blog. It's a rabbit hole that is worth exploring. Using async/await/TPL in production is not something that should be taken lightly. It looks easier and safer than threading but if you don't know what the compiler generates and what happens behind the curtains it is quite dangerous. 
Yeah: Console.WriteLine($"AGE: {0}", hp1.Age()); Should be: Console.WriteLine($"AGE: {hp1.Age()}"); 
**Tortuga Drydock** https://github.com/Grauenwolf/Tortuga-Drydock This is a legacy database analyzer that looks for common problems and mistakes. Checks include: * Nullable columns that are always or never null * Columns that should be sparse * Actual max length vs allowed max length * Columns with no distinct values * Obsolete data types * Suggest a primary key * Unused indexes * Missing indexes * Text columns that really contain numbers or dates * Text columns that contain email addresses, URLs, etc. (informational only) For many of these it can automatically generate the SQL needed to correct the problem. The goal is to support * SQL Server * PostgreSQL * MySQL * Access (don't ask) * SQLite 
**Tortuga Chain for NoSQL** ORMs are a dime a dozen for relational databases, but each NoSQL database has it's own unique API. The goal of this research project is to extend Tortuga Chain to include support for JSON-based NoSQL databases. Where possible the API will be the same for Chain and Chain for NoSQL so you can easily move from a SQL to a NoSQL solution. 
First, is this actually running without exceptions for you? Because this: public string FirstName { get { return FirstName; } set { FirstName = value; } } is not valid. Second, please check what you're prefixing your strings in Console.WriteLine with. That character has a special meaning.
Pluralsight used to have a huge selection. Their design pattern videos were great. 
As pointed out, your property is causing the actual issue. See if this helps point out how to fix it. [Using Properties](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/using-properties) The fiddle also needed your class to be public to run the public Main().
I think these days with so many ways to create a read only property(you've probably covered about a quarter of the ways), newcomers might have a hard time choosing the right approach without some trial and error to learn the nuances, before they can map the approach to what they are trying to accomplish. Even I have to stop and reflect on whether I need to initialize the value from a constructor, a private method, etc. to determine if `readonly`, `const`, a private setter, or a non-existent setter with a private backing field, etc. is most appropriate. This is not really a problem with the language, but just a steep learning curve that's developed from slowly getting more and more features that help us tackle different scenarios more elegantly. If you haven't experienced some of those edge cases first hand, then all the options superficially appear to be equal, but there are nuanced differences you learn from experience.
&gt; I would think "using faster lookup keys" would be built into the Dictionary class Using ordinals isn't just 'using faster lookup keys'...it will give you unexpected results if you don't understand how Unicode characters could be normalized for your culture from your input file.
The property is causing a stack overflow, but the specific issue in question is caused by the `$` string prefix being used everywhere rather than only where string interpolation is actually being used.
I could see it being useful for web apps that also have an API as well: * api.something.com * something.com
From my experience, people who endeavor to understand the internals of *any* language are magnitudes better developers than average. Most people, again in my experience, do not look beyond the surface, nor can they fathom doing anything beyond exactly what some specification, article, or training states (by not questioning it, understanding it, etc.). I think diving deeper into C# will certainly help you, but dont limit yourself to just that, or think that that is all there is. 
I agree 100% but unfortunately haven't had the opportunity yet to work in a team like that. I worked web development part time at my school IT department and I was the only one who knew anything about coding, the rest were managers who usually outsourced the projects :( so again it came down to me learning to do things my way. But yeah after I graduate I certainly look forward to working with smarter people.
Appreciate the pinpoint guidance! Figured out what the problem was, thanks to you and the others. Appreciate the heads-up on the fiddle tip, btw - I'll keep that in mind next time I have to use it.
Seeing this makes me realize how much of an idiot I was. That's what I get for trying to overreach beyond my knowledge base!
Oracle's very crufty. I couldn't decide how much was technical debt from old/obsolete features, how much was sincere disagreement about how things ought to work vs. how the SQL standard said they ought to work, and how much was intended to make it awkward to migrate a system from Oracle to some other RDBMS. Some features could easily be all 3. I recall bumping into things like pseudocolumns that weren't available with the 'new' SQL-92 syntax for, e. g., inner joins, features that didn't actually work (serializable transactions: at the time the documentation recommended them, but they had some weird and frustrating bugs we were still flushing out of our system, years later--unless they've actually fixed that stuff, the docs probably say not use them, now!), weird query optimizations that triggered oddball edge cases in the optimizer and made huge differences vs a saner and simpler query construction, an ADO.NET API that had IDisposables all the way down (and meant it, because it seemed to be a wrapper over an older API and failing to clean up after yourself could result in, say, running out of cursors), and curious and quaint permissions issues (like the permission to run stored procedures and the permission to see the text of stored procedures was linked somehow? which made for all kinds of fun trying to do anything with sprocs). It's a weird, shambling beast, and I think organizations that build on top of it would probably benefit from hiring a specialist or two in dealing with PL-SQL to write/optimize stored procedures. OTOH, I haven't seen a SQL Server install that didn't feel somewhat mismanaged. I'm not sure why: I have a lot less, and probably shallower, experience with SQL Server (a few years writing queries against a Siebel install right after college, and, now, a few more years building services on top of SQL Server, some 9 years later), and I'm not actually an expert on RDBMSs or Oracle, either one. Maybe it's a difference in the licensing, since it seems to be (or to have been) a lot cheaper to start using SQL Server than Oracle. Or maybe it just required less specialized knowledge, since it's a just another MSI on a Windows server. I dunno.
Why is public string FirstName { get { return FirstName; } set { FirstName = value; } } not valid ? Everything looks fine as from https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/using-properties 
The variable it is returning and setting the value of is the property itself. I imagine this wouldn't compile but if, for some reason, it did then accessing the property would cause a stack overflow.
Pay attention to what the code in the page you linked is actually doing. Is `Month` the same as `month`?
Just so you know, generally when you're using the model that you attempted to there, you'll need to have a backing property/field of some sort. It would have been perfectly valid to write it as such: private string _firstName; public string FirstName { get { return _firstName; } set { _firstName = value; } } Keep in mind that simply assigning to a property will trigger its `set` method, so if that `set` code block is assigning to the variable it's a member of, it will cause a stack overflow/infinite loop.
Honestly, any time I've learned an in-depth language feature it's either been through painful experience or tedious study. If you have an experienced dev that already knows how this stuff works I would recommend asking him to prepare some "coursework" that is relevant to what you guys do. If you don't have that guy, Pluralsight has some amazing courses on just about any .NET feature you could want. However, my experience is that you'll need a carafe or two of coffee and a couple of playthroughs to really get the most from them. 
&gt; (like the permission to run stored procedures and the permission to see the text of stored procedures was linked somehow? Funny you mention this. On one occasion I asked for read package definition permission, and they did a grant execute. This means DBAs are resistant to giving devs this permission because it's not granular. I am used to having View Definition in SQL Server and it's very useful in a big org where there's lots of shared procs and you need to verify that someone hasn't broken something. I've seen several articles that explain how to grant view package definition in Oracle, but apparently it's somewhat obscure because it involves updating system tables. There's not a first class "grant view definition" like there is in SQL Server.
Not at all. That’s how you learn.
being a programmer is partially about learning that you will make simple mistakes and not be able to recognise it since your brain skips things it "knows" is that right? yeah i wrote it to do that thing and at at a glance it looks like it does that thing, this is why [rubber duck debugging](https://en.wikipedia.org/wiki/Rubber_duck_debugging) exists (way less embarrassing to use another person tho)
Welcome to the world where always something colliding with something else.
We mostly sell to enterprise, yes, but also small businesses or single customers. There are smaller "dongle" facturerers out there that have a reasonable price for their dongles. If you want a name you can PM me since I dont want to advertise someone in here. 
Never stop shooting for the moon.
All the `ValueTuple&lt;...&gt;` types implement [`System.Runtime.CompilerServices.ITuple`](https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.ituple?view=netframework-4.7.1), which has `Item[int]` and `Length` properties, so you can do this without reflection: void SomeMethod(ITuple unknownArity) { for (int i = 0; i &lt; unknownArity.Length; i++) { Console.WriteLine(unknownArity[i]); } } var myTuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10); SomeMethod(myTuple); Note that the C# Interactive shell whined at me about trying to cast the tuple to `ITuple`, but it works in a console app I whipped up when trying to figure out what the heck was going on there...
Note that this is not the case for the latest .NET Core release. But it will be with the release of 2.1.
[Kinda](https://github.com/dotnet/standard/issues/628), it actually is in .NET Core 2.0 and .NET Fat 4.7.1, but not in .NET Standard 2.0.
This reminded me of [juditacs/wordcount](https://github.com/juditacs/wordcount). Roughly 2 years ago or so, I [contributed](https://github.com/juditacs/wordcount/commit/3c6f626947921c42ebb8d916fe6526f50e8cd788#diff-b3a113786c20c699f34a657ebcb8226b) some fun optimizations to the C# implementation, but it's going to be hard to beat the [optimized Java](https://github.com/juditacs/wordcount/blob/6314ed37792eec9b7bb86ef20b8b5d0e5a5b87cb/java/WordCountOptimized.java) approach, because they actually spent **serious** brainpower optimizing it.
If you can spend $29 a month, Pluralsight has about 15 courses from the last 9 years or so for WPF, and these are the best. If you cannot spend money, watch this channel on youtube: https://www.youtube.com/channel/UCJ3AxeCHGPZkMi3kRfCuiHw This guy make the best free WPF tutorials and it is up to date AND his voice won't put you to sleep like some others.
Hi Andrea, I might be missing something, but from what I can see, `x?Foo().Bar()` is actually exactly like the line below? If you run this code in Linqpad : void Main() { var x = new Box() { X = 1 }; var y = new Box() { X = 2, Parent = x }; int? z = null; z?.Dump("Can dump null without error"); (y?.Parent?.Parent?.Parent?.X).Dump("this is ok"); // however y?.Parent.Parent.Parent.X.Dump("this throws object not set exception"); } You will get this output this is ok null NullReferenceException Object reference not set to an instance of an object. Perhaps I'm missing something, however if you look at the IL, you'll see that .? is delegated to `GetValueOrDefault()`, so it behaves as expected, not at you suggest. Either way, I think your comment needs an example to explain more clearly what you meant. cheers, Alan
link goes to clickbait advertising.
Sidenote: Could they have chose more confusing names between .NET Standard &amp; .NET Core? I constantly have to remind myself which is which.
I do too, but I made an exception here because they are simply marker interfaces that provide behavior fundamentally outside what an interface is meant for.
Dont forget to check for a valid date
In case you didn’t realize, it looks like your response got cut off.
You are using the word "constructor" incorrectly.
How about one file per his gyrus? I think they will not be so many.
Yup, Got it. Am new to Object Oriented Languages. Never noticed this . So this is why private string _firstName; public string FirstName { get { return _firstName; } set { _firstName = value; } } will work, as suggested by @cantankerous_fuckwad above So what are these get's and set's called ? So if someone created an object o , do they need to call o.FirstName to access _firstName ? . This is confusing , Why should we use two variables for the same property ? Thanks for help 
Thanks for the heads-up, I was not aware that ITuple had been added to the latest frameworks. I've updated the article to share this.
The real challenge is explaining it all to others.
I didn't know that was closed! I thought about using `TypeDescriptor` at one point, but thought that was too "heavy weight" for my purposes. It's a pretty interesting class, though.
I hear people describe .net Core or .net Framework as a base OVER which more complexity and features are built.. True but it may be more helpful to imagine Standard as a foundation built UNDER both Core and Framework. Core and Framework are both .NET thru the Standard. I guess you could think of [the] Standard as .NET itself (neither core or framework)
Try NPOI or EPPlus. Both libraries rocks. 
+1 on plualsight having good videos. But I dont think it watching those is a good group activity.
I don’t really know, other features could have been more important, the approach for design/result of extension properties could have been not satisfying enough, who knows. But if you follow my [last link](https://github.com/dotnet/csharplang/issues/192), you’ll be able to track the current status. It’s listed as a X.0 candidate.
Is that more performant than the current algorithm? - A get/set mixin method is called. - A static `Mixin&lt;TMixinInterface, TSelf&gt;` constructor is invoked &amp; checks a `Dictionary&lt;Type, Dictionary&lt;string, dynamic&gt;&gt;` for the key `TSelf`. - If it doesn't, `TSelf` members are iterated through; any members marked with `MixinProperty` are given default values &amp; added to the inner dictionary (property name -&gt; value). - A second dictionary, a mixin properties cache, is checked for the calling `MMixin` instance as a key. If not, it is added to the dictionary &amp; given default values. - The property is retrieved/set. What's your opinion about the algorithm? Any way it could be improved?
&gt; EPPlus I don't do any really complicated with it, but after a year or so, I still haven't encoutered any issues.
How did you use MI in C++? I could call them extension properties, but it'd lengthen up object names.
I know! I edited it. :)
&gt; IMHO which is amazing? EPPlus or NPOI? 
NPOI is good if you need to work with .XLS and XLSX files. If you work with OpenXML files only, go for EPPlus.
Removed: Rule 3, Rule 6, spam.
I couldn't tell you. It was 20 years ago and it was a contrived homework problem. Still, a friend of mine (at that time) explained a few times when he used multiple inheritance to solve some real-world problems.
Who cares? It's beyond trivial to have them installed side-by-side, or just ship them with your app.
It's important to people who write shrink-wrap software. Or work in a regulated corporate environment, where you have little control over what's installed on the servers. Or if you're running on Azure, and Microsoft upgrades your servers before you're ready with a new version targeting that release.
Did... did you read my comment?
*You don't need to install anything to use .NET Core with your app.* FFS. I'm done repeating myself.
To expand on this, unless absolutely necessary, don't ever use threads, don't even acknowledge their existence. Use Tasks and let the internal thread pool manager worry about explicit threads. I write a lot of parallelized code and never touch the Thread class.
To give you some idea of what it's like - the audit department would look at those DLLs and ask where in source control they came from. Upon finding out that they're from Microsoft, they'd ask what service pack or update they came from, and why the server configuration team wasn't deploying them. The server configuration team would say "Why are you installing Microsoft DLLs outside the normal process?" And the production deployment team would refuse to touch any of it until this issue was resolved, because their manager tied their annual bonus (20+% of their salary) to their having Zero Defects for the year. So any whiff of a developer trying to slide something under the door - they immediately say no. So you look into an automated CI system to bypass all this, but the production deployment team also says no. Because even though they won't accept responsibility for placing Microsoft DLLs on the servers, they *certainly* aren't going to allow any DLLs to be put there that they haven't inspected first. You think I jest... 
which discord?
C# discord.
For this sort of enterprise situation, you should stay with the .Net Framework. When the server configuration team has a reliable way to install .Core that they are comfortable with, then you can start using it. When the .Net Framework came out, it wasn't always easy to get those teams to install it on the server. At that time, we didn't have the option of using a different version, so we pushed. Managing COM+ components wasn't exactly fun for those teams so .Net did have some upsides for them too. 
Oh that's a shame.
They are actually improving the compatability of .net core not reducing it. In the past a minor version couldn't run the previous minor versions apps. E.g dot net core 1.1 runtime wouldn't run 1.0 apps. Now 2.1 runtimes will run 2.0 apps.
I suppose you could use an == instead of contains
The works great, just one thing, with booleans, its usually advisable to do something like .Where(x =&gt; !x.Contains("desktop.ini")) because if you did .Where(x =&gt; x.Contains("desktop.ini") = false) instead of .Where(x =&gt; x.Contains("desktop.ini") == false) which is super easy to do, it will always evaluate to false which can produce some hard to diagnose bugs. It should be a general rule whenever you are evaluating boolean conditions, like in an if statement. In this situation it would probably be pretty obvious, but image something like this. if(somethingVeryCommon = true){ //do something }else{ //something uncommon, never hit } vs if(somethingVeryCommon == true){ //do something }else{ //do something uncommon }
Thanks!
Would it also be best practice to lowercase all the objects when doing comparisons? string[] filesInPublicDesktop = Directory.GetFiles(publicDesktopPath).Where(x =&gt; !x.ToLower().Contains("desktop.ini")).ToArray();
I recommend some books about data structures and maybe a generic algorithm book. I can think of three primary branches of information you can learn about. 1) Data structures: How to store information in a way that is most accessible for your particular use case. This is language independent. 2) Algorithms: How to reason about logical flow and figure out the highlevel of what you program should be doing. This is also language independent. 3) Syntax: How to convert an algorithm into source code. This is language dependent... but it's also probably the easiest. Unless I misunderstood your post and you are already an experienced programmer in non c# languages you might actually gain more benefit from learning the first two more then the last. I mean, which is more important to know: when you'll need to maintain a list vs queue vs a stack (this would be algorithmic information) or how to write the linq query that replaces a subroutine you could have written without linq (this would be syntactic)? A book on c# might tell you what a delegate is an how to use one... but a book on Data Structures would tell you why function pointers where created and a book on algorithms might tell you what types of problems are solved more easily by using a delegate... then you can hop into visual studio type delegate and hit F1 to figure out the syntax... Have you read through any of the c# documentation? It's free and actually pretty good. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/ https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/ 
When using Java I miss the using static there is import static but it doesn't work same . In C# if I use using static System.Console; I can simply use WriteLine("Hello"); but in Java if I use import static java.lang.System.out I still need to write out.println("Hello"); rather than simply println("Hello");
You should google for project ideas and start a project. Learning by doing is usually the best method. Pick simple projects - that you can finish in 1-3 days. You need to feel the progress. In meantime read/work with books. Its normal to google parts of solution. When you find something you don't understand - consult C# In depth and try examples until you understand it. Its imperative that you really understand the code. Don't ever copy and use code you don't understand even if it works. Once you can handle C#- you can actually code and make apps - but it will still be mess. Its quite easy to get stuck in huge loops and complex spaggeti code. If you find it hard to reason with your code - you are probably doing it wrong. Here nicely comes Clean code - its very nice book to teach you how to code. Rules, SOLID principles and more. It will significantly improve your coding skills. Trying to write clean code guides you to proper coding and more quality code in general. Its lighter and more fun book - so you can read it casually when you are resting. Clean architecture - same as clean code, but on larger scale. It has instructions on how to structure bigger application in general. Harder to digest - you really need to try to make your own app to get to bottom of it. Read Clean code first. Robert C. Martin also has "Agile principles patterns and practices in c#" - which has quite similar content to his other books abovce + lots of code in it to learn how to build an app. Clean code and Clean architecture lack in code a bit.
Removed: Rule 4.
if you only read and write to a Property's backing field in the get and set, you don't need a backing field (C# version 3.0 onwards). Meaning, if you do this: private string _firstName; public string FirstName { get { return _firstName; } set { _firstName = value; } } It can be shortened to: public string FirstName { get; set; } You would typically use a backing field when you do have to do something when the value is being set or get, like notify that its changed: private string _firstName; public string FirstName { get { return _firstName; } set { if (value != _firstName) { _firstName = value; NotifyPropertyChanged("FirstName"); } } } this notify property changed pattern is so foundational, there is a framework interface INotifyPropertyChanged, which is how for example views/guis are updated and refresh when an object's property changes.
The one exception I would allow is timer based loops where the built in timers aren't giving you the right behavior. Also, make sure long running tasks are indicated as such so you don't tie up the thread pool. 
For algorithms ISBN 978-0-07-352340-8 It's does a broad sweep of all sorts algorithms. Even if the text is a bit too terse, you'll at least figure out what you need to google. And the other one I kept was ISBN: 978-0-13-229751-6 Which, is technically a math book but it is very programmer math centric and tends to also cover the data structures required get the machine to do the math for you... so.. it turns out to be quite helpful in my opinion. 
Assign it to a collection of some sort. You could use a dictionary of you use a key. Or maybe a stack if want to use back keys. There are many ways to skin a cat. Find what works for you and don't be afraid to experiment. 
Are you aware of MVVM? WPF helps you bind data in a View Model to your window/user control so you do NOT need to create a new control instance every time. In your scenario hitting a back button would mean the button event would fire code to look up the correct ViewModel instance and then say UserControl1.DataContext = ViewModelx. WPF databinding syntax on UI controls will automatically bind them to fields on your viewmodel. 
Third position in Google with obvious keywords.
The problem is that HttpClient singletons do not reflect changes to the DNS so you have to add additional code to respect that (which is also contained within the wrapper). And yes, slowly building out that wrapper's interface can be annoying but it is what it is. https://github.com/dotnet/corefx/issues/11224
I would use Equals with a StringComparer instead. If you must convert to the same case instead, convert to uppercase not lowercase when testing equality. Using lowercase will not always give you the correct results with certain (major) languages.
Not disagreeing with the suggestion, but the compiler should error with *The left-hand side of an assignment must be a variable, property or indexer*.
&gt; I also hope we can pipe tools together assuming they take the same inputs and outputs. For example if I have three small xml processing utilities that accept xml in and return xml out: That would be a functionality of your shell, not of the .NET CLI.
It depends, but it will always produce some sort of warning at least. if(anInt=3) will give an error as it can't cast an int to a bool directly if(aBool=true) will give a warning "Assignment in conditional expression is always constant, did you mean to use == instead of = ? Here if you accidentally use = instead of == bool aBool2 = aBool **=** true; bool aBool3 = aBool2 **=** true ? true : false; They will slip straight through the net. You could safely argue that both lines are stupid and should be rewritten: bool aBool2 = !aBool; bool aBool3 = aBool2 ? true : false; There's no reason to write (true==aBool) any more though and I'd advise anyone to avoid it.
Mhm, I was focused on the specific example above.
I was just thinking about it. I remember Jon Skeet responding to a usenet or google groups post (so we're talking pre-stackoverflow days!!) about it and it has stuck in my mind ever since. I have no idea why I remember that :)
It’s not about remembering every single algorithm forever, it’s to understand how different problems have been solved already. What has to be considered, why some algorithms are better/worse than another, giving the exact same result on every input. Even if you would forget how exactly a bubble sort or insertion sort for example, implemented is, you will remember that there is such a sort, maybe you can even remember which sort has which benefits. It gives you a base to quickly find a solution even to very specific issues, a base to create your own algorithm, having an understanding how others work and what to take care in algorithms. Same for data structures. It’s all about understanding these things, not remembering them nor how often you will need something. Learning these language independent concepts does not only enhance your skills, it will make it easier for you to switch languages, because you don’t depend on the languages specific implementation to solve a issue, you are able to create your own solution. Don’t learn languages, learn how to solve issues and use the language as a tool, among others (like data structures &amp; algorithms).
Very excited about the Stack Trace enhancements and Httpclientfactory. 
`using static &lt;namespace&gt;.GlobalConstants` should make this work as in the first example
If you hold anything sacred, please don't do this in the name of that thing.
just stop coding if you don't get simple concepts of c# or any other language
nah. why would you need more that 1 or 0 for bool? ;)
Don't encourage him. Someone else may have to maintain the code base someday.
I'd immediately delete a class named `GlobalConstants`.
This made my eyes bleed
Obj-C programers are encouraged to use YES/NO for readability, for instance `ShouldShow = YES;` is more clear to me that `ShouldShow = true;`.
GlobalConstants is very boring name. I would think about more fun names that do not require using static as namespace would provide enough coolness. For example Definitely, Oh, Maybe, Rather or GrandpaSays. Just look how much more interesting code becomes then: IsEnabled = Oh.Yes; DeleteFile = Maybe.No; ShowMessage = Rather.Yes; IsAvailable = Definitely.No; IsPortalOpen = GrandpaSays.Yes; I love it already. 
I wonder why Obj-C programers are encouraged to use YES/NO, is it because of the naming conventions use for methods and properties? with prefixes like "Should", "Can", "Is", "Did", etc. 
On the other hand, assigning in a conditional is a useful C idiom, for assigning and getting truthiness: int err; if (err = syscall()) { puts(strerror(res)); }
What abut optionals!? that would be hilarious.
It uses tracing. It traces objects from specific known locations (GC Roots), and looks in the fields of the objects reachable from these roots recursively.
Considering that the rest of the article is quite in-depth, I assume this is merely a matter of phrasing. "Reference counting" generally refers to a specific kind of GC that isn't used in C#. The CLR/GC does not count the exact number of references to an object, not even as an implementation detail. The GC just marks objects with a boolean flag if there is *at least one* reference to them, but whether there are 1 or 100 references is not determined.
Yes, I think that was the context the Jon Skeet comment came up. It's a C idiom not a C# one. So a bunch of old (probably young at the time) C and C++ programmers were doing it) :) That code doesn't work in C# because there's no C/Javascript like concept of truthiness. ints aint bools in C#. I'm not holding him (Skeet) up as a source of absolute truth btw, it was more an interesting related note. I discourage the practice, but obviously I wouldn't discourage it in C.
What you just described isn't exactly reference counting (count vs list), but it's also not what the .NET GC does. I can't write a good explanation on my phone but here's a link. https://www.red-gate.com/simple-talk/dotnet/net-framework/understanding-garbage-collection-in-net/
There seems to be a consensus that using YES/NO make the code more readable in Obj-C. Does anyone know why? https://stackoverflow.com/a/690917/1436359
The thread you linked is full of reasons why. Different languages have different paradigms. Obj-C is a product of its time. 
well, `if ((res = syscall()) == value)` would, but you're making it explicit then and mitigating it
Yes exactly. We had the TryX pattern initially bool TryParse(string input, out int result); which was a pain because you needed to declare a variable to get result into, but they've inlined it in the latest version so you can declare the variable in the call. It's still a bit verbose, but the bool != int thing is one of those trade offs that you don't miss once you develop new muscle memory for it. I'm pretty sure it was a conscious decision to avoid the exact errors doing 3==variable was supposed to mitigate. I used to like C, it was a bit of a revelation at the time. Genuine fond memories of it.
There is a reason why Apple replaced Obj-C with swift
The cshtml formatting issue has been around since razor 1.0 and MS refuses to deal with it. Big problem there. The rest of your problems seem to be environment related or will get easier with experience. Routing is not that hard. Your comment about having to look up the solution just tells me you haven't been doing it long enough to commit some of the advanced stuff to memory. That's not necessarily a fault of MVC itself. The routing stuff does work as intended. Do you by any chance keep your projects in a folder that is synced online (i.e. Box, Dropbox, Google Drive or One Drive)? I ask because I used to, and it was an infinite source of problems with file locks that broke everything from intellisense to source control. When you save a file and your drive sync tool locks it for uploading, it causes all manner of problems with VS tooling and the like, including background compilation which is a major part of intellisense not working and the common red squiggle issue.
&gt; The cshtml formatting issue has been around since razor 1.0 and MS refuses to deal with it. Big problem there. It seems like the whole thing is just some poorly thought out and poorly implemented software they put together in a couple of weeks and then decided to roll with it still years later. &gt; The rest of your problems seem to be environment related or will get easier with experience. Routing is not that hard. Your comment about having to look up the solution just tells me you haven't been doing it long enough to commit some of the advanced stuff to memory. That's not necessarily a fault of MVC itself. The routing stuff does work as intended. I have to disagree. This has been my experience over the years at several jobs, and it's been exactly the same for other team members too. And yeah, I don't really remember the advanced part of the routing, because it's just overly complicated for something that should fundamentally be pretty simple. &gt; Do you by any chance keep your projects in a folder that is synced online (i.e. Box, Dropbox, Google Drive or One Drive)? Nope this has always been with TFS/Git controlled files.
Do you work on ASP.NET? You seem to have taken great offence all of a sudden. Most of your points didn't really seem like you'd understood my post, especially that last one about which files are creating errors. So yes, I have to double down as you didn't understand my post. &gt; Why bother posting? Why bother replying to a post if you're going to basically deny any of the problems exist and/or skim read?
I do not work **on** ASP.NET. I have worked **with** ASP.NET since 1.0 (currently using core 2.0). I have experienced many of your issues and was attempting to help figure out possible reasons for them. I assume you posted because you hoped there would be some sort of resolution to your problems, which I had hoped I could help you find. Instead, it's "I disagree", "nope", "not at all", etc. That's fine, but that tells me you're really just looking to piss and moan and aren't interested in any productive discussion. This probably isn't an ideal place for that, but to each his own. 
Either: 1. you are writing a .NET Core app and this is correct - there is no .exe. 2. You have somehow created a library., not a console app. If 1., you could simply target .NET 4.7 and you'll get an exe. Remember, in the real world, it's all about meeting the specification, so don't ask your tutor if it's OK to hand in something he didn't ask for. It isn't.
How do I target .Net 4.7? and thank you! 
Double check your project type, if nothing else use the command line and do a csc compile to get the exe built.
If your instructor wants an exe specifically, since you are just learning, I would recommend this: + Use Visual Studio to create a new project. + When you are choosing the project template, choose Console App (.NET Framework) -- You originally must have chosen Console App (.NET Core). + Copy paste whatever files you need into the new project &amp; build. You'll get an exe. This is the _simplest_ solution for a beginner, I think. Ask your instructor about his stance on .Net Core projects if you get a chance, and whether the default output of a .Net Core project (which is what you had originally) is okay to submit for future assignments, if you choose to use .Net Core in the future. There is a way to build your .Net Core app as a windows executable, but it is probably not worth digging into that right now. Do look into the difference between .Net Core &amp; .Net Framework if you are interested, though.
that did it! Thank you so much!!!!!!!!!!! Ive been trying to fix this for two days aha
You can use the `Select` overload that provides an index and create a tuple/anonymous type from that. It'll make the rest of the expression at lot uglier though, to the point where a manual loop would probably be cleaner.
Fundamentally, no. You've said yourself that changing one model will break the validation for others. Sharing the logic will couple all the types via the validation. So you will need separate logic, sorry. It's worth it though.
Honestly, it just sounds like you haven't spent enough time with it to really know what you are doing. I don't have any issues with it. 
So you dont like performance and support? 
So the incredible amount of VS tooling errors somehow means it's my fault? OK then.
One book which I heavily recommend is C# 7 in a Nutshell. It is a wonderful guide to everything C#.
For a good algorithms and data structures textbook take a look at: Algorithms 4th Ed. by Sedgewick and Wayne (https://www.amazon.ca/Algorithms-4th-Robert-Sedgewick/dp/032157351X/ref=pd_lpo_sbs_14_img_2?_encoding=UTF8&amp;psc=1&amp;refRID=Y10M1BMYGCSJCJJN2GJT) or Introduction to Algorithms 3rd Ed. by Cormen, Leiserson, Rivest, and Stein (https://www.amazon.ca/Introduction-Algorithms-Thomas-H-Cormen/dp/0262033844). 
Delete them too!
Simple answer, don't do this. Don't try to force the conventions of another language down everything you use; that won't end well. Learn to use the conventions of the language which you are using. Besides, true/false is by far the de-facto standard in programming languages.
If true/false and yes/no are tripping you up I wonder how much you're able to adapt to much else.
Go read Jon Skeets edu-linq series
wouldnt you just run dotnet run app.dll. That works just as well. .core is way of the future man :p
I'm still weak on linq, where I'm productive at adapting examples to make things work but very rusty on creating and terms. Can you suggest an example of wrapping it in a function? 
The question there was &gt; Why does Objective-C use YES and NO instead of 1 and 0? and the question doesn't touch on whether `yes` and `no` are more readable than `true` and `false`. 
I saw some of the sixth episode about performance and wondered about some statements, because what I heard and understood was not true. 9:30-10:00 It is stated that `seq.Where(n =&gt; n % 5 = 0).Skip(3).Any()` will have to enumerate the entire sequence. They then spend some time trying to write the same expression in a faster way. But that Linq-expression *will* short circuit as expected: https://dotnetfiddle.net/ruf7bH 28:33 `Single(predicate)` is not just slower than `First(predicate)` because it has to do stack unwinding. In .NET Framework 4.7.1 `Single(predicate)` will not short-circuit when a second match has been found, but continue enumerating the sequence and *then* check if `Count != 0`. http://referencesource.microsoft.com/#System.Core/System/Linq/Enumerable.cs,226beadd4e521229 It will short-circuit in .NET Core, see [this issue](https://github.com/dotnet/corefx/pull/2350) and is under consideration to being backported into .NET Framework. 29:02 `FirstOrDefault(predicate)` does not return `null` if no match is found, but `default(TSource)`. So as their example sequence is an `IEnumerable&lt;int&gt;` default value is `0`.
Steam (the valve game platform) have an API that's pretty fun to work with. This can among other things be used to create steam bots. OpenDota is another api that provide statistics from dota games. Those two are pretty fun and well documented. And you shouldn't think of them as c# APIs, but general web api every language can use. There might be a nice c# developer that created a sdk that wraps the api so it's easier to use but the API themselves are not c# specific. Have fun :)!
You could make a Unity game
[removed]
You could make a console or windows app that scans for the lowest price on Amazon for items you feed it. Have it alert you based on if an item you want drops in price or something... could be a good excuse to start playing with databases to store historical prices: https://github.com/tinohager/Nager.AmazonProductAdvertising
If you use Resharper it becomes a lot easier. Chuck a private HttpClient _httpClient; and Alt+Insert &gt; Delegating members It should pretty much replicate all public methods. Chuck a virtual in front of all methods and you can mock it to your heart's content.
Why not create an API yourself?
Shameless plug. You could use my AOP library -- Aspekt. It has a NuGet package for the first version and the code is available on github GitHub.com/mvpete/aspekt 
https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.VoiceCommands 
Most C# libaries are for getting shit done. There aren't as many fun ones as you'd like. That being said, you will still have access to all popular web/http/rest like APIs without much effort. I would start by messing with the Slack or Discord APIs if you want something fun.
would be better if you explained what it is before having to click links
He did. Its an AOP library. If you don't know what Aspect Oriented Programming is then you need to click the links to understand more.
LINQ version: static (string s, int i) Search(DataTable t) { var q = from r in t.AsEnumerable() from i in Enumerable.Range(0, t.Columns.Count) let s = r[i] as string where s != null select (s, i); return q.Aggregate((s: default(string), i: -1), (cur, nxt) =&gt; cur.s?.Length &gt;= nxt.s.Length ? cur : nxt); } Non-LINQ version: static (string s, int i) Search(DataTable t) { (string s, int i) result = (null, -1); foreach (DataRow row in t.Rows) { for (int i = 0; i &lt; t.Columns.Count; i++) { if (row[i] is string s &amp;&amp; !(result.s?.Length &gt;= s.Length)) { result = (s, i); } } } return result; } Both versions return `(null, -1)` if there were no strings whatsoever.
is there any option in visual studio that will allow me to paste over the line numbers?
Ok, but... when in Rome... No, seriously!
Is there any way of doing this with out essentially doubling the memory usage? 
Try holding the ALT key to select a vertical section of text. Also, the VS search/replace function does support regular expressions.
Is there any way of using just one Console.Write instead of multiple WitreLine's without essentially doubling the memory usage?
thank you, this works. but the funny thing is when i pasted it into visual studio, it gets formatted. so i had to unformat it to alt delete the vertical column, then format it again. 
 thank you, this works. but the funny thing is when i pasted it into visual studio, it gets formatted. so i had to unformat it to alt delete the vertical column, then format it again. 
Maybe "^\d+" to replace numbers at the beginning of a line. Add a "\s*[.]" after to capture whitespace and a period.
Not really, but I might be able to help anyway. If `Console.WriteLine` is your problem, then I'm guessing it's actually because each `Console.WriteLine` call flushes the output buffer. If I'm right, then I'd recommend trying something like [this](https://github.com/juditacs/wordcount/blob/6314ed37792eec9b7bb86ef20b8b5d0e5a5b87cb/csharp/WordCount.cs#L15-L21) to avoid the auto-flush from each `Console.WriteLine` call instead of trying to minimize your calls to it. This, however, **requires** you to make sure to flush the output writer at the end (the linked section throws everything into `using` blocks, which handles this just fine for you). Note that if this is a snippet from a longer-running app, you will probably want to save the original `Console.In` and `Console.Out` before swapping them out, so you can swap back in the originals after what you have here.
TIL I could use the alt key to select vertically. Holy crap, thank you. 
Here, try [this](https://gist.github.com/airbreather/89265ee4846b9f1d201162640a4a7070) out... it's just a version of the optimized solution I linked above, modified to fit what you're doing in your own `freq.cs`.
Paste it into Notepad++ first, remove the numbers using the same alt key method, then paste into VS
Dirty. But Id use notepad++ to record a macro that started at the top line. Ctrl+shift+right arrow. (To highlight first block of numbers) Delete. End. Right arrow ( to move to start of next line) Hit stop. Run macro to end of file... I'm very lazy 
Marvel have an API for getting lots of information about 70 years of their comics at https://developer.marvel.com/
OP seemed to be able to build and run his project as a console app; he just needed an “exe.” Had he created a class library, he’d be asking different questions (“how do I run my code in a console window and see it?”). Visual Studio makes it very easy to select the .Net Core templates. A beginner wouldn’t notice / know whether to choose Framework / Core. I made an educated guess based on the info given.
And there's NuGet packages available for it, mine is [MarvelAPI](https://www.nuget.org/packages/MarvelAPI/).
Haven't tried this myself, but this facial recognition one looks interesting: https://docs.microsoft.com/en-us/azure/cognitive-services/face/tutorials/faceapiincsharptutorial
Well this is cool
The google text to speech and translation apis are fun and work well. Microsoft has similar functionality too, but I didn't find them to be as accurate. 
&gt; Most C# libaries are for getting shit done. There aren't as many fun ones as you'd like. I personally have more fun with things that get shit done.
You can actually write mods for GTA V using C#, too!
Create a Reddit bot? :)
You can even type across multiple lines :)
Wow! thank you. What sources did you use to learn linq?
This is about 12 seconds faster but also uses 60mb more memory. New runtime is 40s and source file is 5.2 gb. 
This is about 12 seconds faster but also uses 60 mb more memory. New run time is 40s and source file is 5.2 gb. Memory: 183 mb vs 123 mb.
This has always interested me as a side project. Good suggestion. And just to show its practical uses take a look at www.camelcamelcamel.com
You can undo formatting by just doing a ctrl-z most times. A paste operation in vs is split between the actual pasting and formatting. 
Problem with it is that you lose the nice validation errors that get generated by frameworks like WebAPI
I just live with it. If I am creating DTOs then I am doing it because they are potentially different from the entity. If they are potentially different then their validation is also potentially different. If you are willing to share the validation why not complain about typing the properties themselves? BTW Code generation might be a good option here.
Look for the Cognitive API that Microsoft has released. They do amazing things, and have free plans, for educational and personal use.
Bruh, welcome to a whole new world of easier formatting
The MS Cognitive Services APIs are quite fun to play with. Some great tutorials on there too. 
The other language I'm stuck in, believe it or not, is classic asp. I miss compilation there so so so bad. 
Why? What is making you want this? How? How do you measure this today?
Hi, sorry for the delay in getting back. Thanks for looking into that for me! That didn't quite work, but I think I figured out what was going on. When I copy the line it copies everything, including the line break at the end. My work around for now is to just select the contents of the line (ctrl-home) and then copy, then paste that where I wish. Might looking into combining the whole ctrl-home, ctrl-c into a macro if that is possible :)
Not an answer, but coming from just having struggled through this, you will need to understand and be able to implement asynchronous programming (async/wait) to make a responsive GUI. To that end, learning this concept with a console app before trying to learn the GUI bits may be helpful if you are not already familiar with the topic. 
I am coming to C# from a C++ background (so I am spending time to learn the basics of C#, hoping to learn the .NET libraries along the way). I am sort of acquainted with the C++ `thread` and `future` STL libraries. Is it different in C#?
Called column select in a lot of applications. Makes me sad when I find a new app and it doesn't support it.
Check out Accord.NET
Good questions. For Bitcoin, the creator of that system (can't remember his name) created all 21 million bitcoins at the start and said there will never be any more. A block is processed every ~10 minutes and some amount of Bitcoin is awarded (could be fractions of a Bitcoin). Bitcoin has no intrinsic value. The value of a Bitcoin is based around supply and demand. If no one accepted Bitcoin as a form of payment, Bitcoin would be worthless. The more companies accept it as payment the more useful it is as a currency. The reason they can't award themselves an infinite amount is the same reason why the government can't just print a shit ton of money -- the value of the currency would plummet and rapid inflation would occur. "Printing" a new Bitcoin would create an invalid Bitcoin anyway -- if it wasn't created by the system (which awards some amt of Bitcoin periodically in such a way that everyone knows when it happened), then it won't be accepted by the Bitcoin system. Take any currency, make it impossible to counterfeit, enable instant transfers of said currency, virtualize the currency such that it does not have a physical standard, create a system that validates all transactions, and the result is a crypto currency.
So outside web stuff, there are three main technologies that do GUIs; WinForms, WPF and UWP. Winforms was the standard for a long time because of how easy it was to drag and drop controls on to forms. WPF is a much more powerful, upgraded version of Winforms that uses XML. UWP is what microsoft is trying to move everyone to for the desktop. Think Microsoft Store Applications. They all have their own pros/cons. Since your starting out, WPF or UWP might be your best bet since it should (in theory) have the longest lifespan. But there are probably millions of legacy codebases with WinForms out there. So if you plan to maintain old stuff, this might be where you should put your focus.
That's a question for /r/csharp 
C# has bare threading, but it also has async/await, or Task-based Asynchronous Pattern. I seriously recommend against mixing async/await with UIs tough, as it leads to shitty practices, undebuggable exceptions, and easy deadlocks.
I second this. Winforms is the last true RAD framework. It will die when win32 dies. I wouldn’t even worry about support. The client is more likely to want to move to web app before winforms supports ends. I don’t recommend XAML unless your app need to look like a spaceship. I’m not familiar with UWP much yet. It seems yet another project Microsoft struggle to get adopted. 
sorry i was half a sleep when i wrote that yes i meant linq to sql indeed i edited the post, thanks
This seems both of really limited utility and horrifically unsafe. A powershell script is a pretty horrific way to store config and you're invoking arbitrary code in your application. 
Sure. What I need to do?
Basically you need to add an introduction and explain in a bit more detail what the code does. Then send the draft (preferably Word) to jonathan@InfoQ.com. From there my job is to help with the editing and to make suggestions if you get stuck on how to explain something. 
All right. It'll take few days as I'm not a native english speaker.
This is terrible advice. Async/await is much safer to use than raw threading, *especially* when doing UI work. In fact responsive UI programming was one of the motivations behind the feature. It’s easier to write correct code using async/await than any other way of doing it. You still have to understand what you’re doing, but if you do then you’re far better off using async/await. If you’re having trouble using it correctly then you should spend some time understanding what patterns you’re using that lead to those problems and why those patterns cause those problems. There are some bad ways to do things. Maybe you’re fallling into some of those traps. 
It doesn't run anything by default. You need to set PS execution policies first. Admins require signatures as a policy. It's also running as a service so no regular users can't modify the configuration file by itself, only admins.
This script is executed. That's literally the intention. That's how it works. That's how you're getting that return. Anyone with access can run anything they want. Having to write powershell and sign it to change config that doesn't in any way need to be executable is much worse than reading a simple text file.
I'd look into using MonoGame, and some of the libraries built on top of it.
Don't think that the configuration file is somehow 'safer' than the application itself. If someone has access to alter the configuration of any .NET application, they can pretty much do anything. For example, you can create a malicious version of an assembly and use a `&lt;codeBase&gt;` element in the app.config file to point to it. https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/specify-assembly-location 
For UI on Windows, XAML is the tech to use. A great book that I have always had it’s multiple incarnations is: WPF 4.5 Unleashed https://www.amazon.co.uk/dp/0672336979/ref=cm_sw_r_cp_api_odbEAbVJ4WV5T Unfortunately it will not teach you MVVM which is the supporting pattern that separates your visual from your underlying data. There are plenty of tutorials for that out there. As mentioned in the other responses, async/await is the way to do async in .NET now. This book was great for that. Async in C# 5.0 https://www.amazon.co.uk/dp/1449337163/ref=cm_sw_r_cp_api_-fbEAb2F57DYJ Clear, concise, cheap and short. It does the job. Any questions send me a DM.
I'm not changing the topic. This thing runs code. That's what it does. It runs executable code. No weird injection attacks, no need to restart the app pool or access the application directory. The people expected to run this, and depending on how you configure it, others can execute anything that dot net or powershell can do as the app user. This is absolutely possible. This is a powershell script that is being executed by the application. Anything it can do you can do. It's also stupidly unnecessary. 
&gt; Winforms is the last true RAD framework. I fail to see why. It is also possible to drag-and-drop stuff around around with WPF/UWP and write code-behind just like Winforms. In fact that is what I do for toy applications, ones whose dialogs aren't to be reused across multiple modules or teams, which is when the flexibility of WPF/UWP design starts to show up. Don't over engineer WPF/UWP applications and they will be just as RAD as Winforms. 
I think his point is, what if someone edited that script / config file by adding a "rm -rf" (or whatever *insert bad code here*) to it? It might be unlikely, but then again the world is full of disgruntled admins. 
They could just distribute a `delete-company.ps1` as a group policy and run it on all machines as well.
[Monogame](http://monogame.net) might be useful. [Ultraviolet](https://github.com/tlgkccampbell/ultraviolet) is also nice, but might be a bit to high-level for you. [OpenTK](https://github.com/opentk/opentk) is a OpenGL Library. It can certainly do what you want, but it is very low level. Also, I don’t know how well mobile support works. Monogame is probably your best choice- mature and easier to use than OpenTK, but gives you enough freedom.
Exactly. Take a look at [this toolkit](http://www.galasoft.ch/mvvm/) which will guide you through the basics of simple yet well structured GUIs. This just marries with async/await once you grok the basics.
\t adds tab spaces -8 the maximum amount of digits it can display // need to recheck
https://docs.microsoft.com/en-us/dotnet/standard/base-types/composite-formatting?view=netframework-4.7#composite-format-string
See [here](https://docs.microsoft.com/en-us/dotnet/standard/base-types/composite-formatting)
\t is tab, Similar to \n {0,5} etc is positioning. Amount of spaces after {0}
\t is not similar to \n \t adds tab spaces \n moves to the next line
Thanks, Cap. I meant it works the same
I cannot speak for UWP, but the Xaml designer can be a pain to work with. Alignments, snapping, the kind of flow panel, it’s full of anoyances. Winforms also had some straightforward databindings and required less boilerplate code. 
The problems outlined aren't mine, it's just what various people I worked with ran into pretty much every time they tried.
Another framework to consider if you do web dev and don't mind the performance hit is Electron.NET: https://github.com/ElectronNET/Electron.NET It lets you use the frontend web stack on the desktop. The downside is your app runs in a self-contained Chrome instance (customized, not visibly Chrome, but with the overhead).
Run it with, and without the \t and see what happens. Change the -8 to -88 and see what happens. 
Don't use the designer at all. I develop WPF full time and have it turned off because of the performance issues it causes. I just develop using pure XAML.
It’s reason like this that make it lose its RAD status, which is what I was arguing.
Ive been using https://github.com/linq2db/linq2db its a bit odd to get setup.
Personally, I agree with the general sentiment of others in this thread that arbitrary code execution is scary, but I can look past that for now... I'd actually recommend making this method `async Task&lt;Configuration&gt;` and instead of using `Thread.Sleep(10)`, `await`ing on a task you create with [`TaskFactory.FromAsync`](https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.taskfactory.fromasync?view=netframework-4.7.1) ([here's](https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/interop-with-other-asynchronous-patterns-and-types#tasks-and-the-asynchronous-programming-model-apm) another link that's not just the API docs). That way, the _caller_ gets to decide whether or not to block waiting for the script to finish executing.
I’m talking about the dev environment, not the methodology. RAD had become a quasi synonyms for GUI builder in the 90s and is still to this day.
https://www.reddit.com/wiki/commenting
Multiplatform framework with ASP.net support http://github.com/okhosting/OKHOSTING/OKHOSTING.UI
Please learn WPF and not windows forms...
Similar as in they're both escape sequences.
Perhaps they were all making the same mistake. A common one is using `.Result` or `Wait()` to try to make something synchronous, which will most likely deadlock. Adopting async/await in an existing code base can be difficult, and sometimes you’re tempted to try to make something synchronous in order to change less code. That’s pretty much always a mistake. 
I am not going to comment on your code, but rather, suggest you look at how to format your code on reddit. You can inline code `like this` by using the "\`" character. You can write code blocks like this: var text = "Hello World!"; ... by hitting enter twice and 4 spaces. Hitting enter twice starts a "new" paragraph in a way and the 4 spaces tells reddit that a code block follows. Using a code block to explain: "... using a code block to explain:"&lt;enter&gt; &lt;enter&gt; (s)(s)(s)(s)&lt;begin code here&gt; (s)(s)(s)(s)&lt;second line of code here&gt; ... where `(s)` is a space.
I agree, for the most part, that using arbitrary code that your app will execute is unsafe and that it probably shouldn't be used in this manner. I disagree, however, that executing arbitrary code is inherently unsafe. I suppose what others have said may have meant that the powershell code could be changed to do anything and that is why it is unsafe, but if that isn't their concern, then I see no tangible difference between executing a powershell script and executing a plugin that someone made for your application. Furthermore, I'd be less hesitant to execute PS from my app if it was an internal tool for the organization. If the app has an end-user that is outside of the organization, I likely wouldn't execute PS code. For something like this, I'd create another app that sysadmins can use to manage configs rather than allowing them to manage it via PS scripts. This way I have absolute control over the config and I don't have to rely on a sysadmin's ability to pay attention to detail -- I just have to rely on my own while devving this config app.
Yea. You knows what else can do that? * Anything that runs build scripts * Anything that runs SQL (e.g. SQL Server) * Anything that runs traditional .NET config files And since you keep forgetting, these are sysadmins. They can outright replace the code anyways. 
MonoGame and maybe also bastardizing the [Tiled Map Editor](http://www.mapeditor.org) to import the data you need into the monogame app by customizing the content pipeline. For importing and rendering tiled maps, google "C# tiled map importer and renderer" -- there are a few. The tiled map itself would be the thing that holds your data. Your monogame app would simply read the map data and render it as you see fit.
`I disagree, however, that executing arbitrary code is inherently unsafe.` That's the point. It will always be unsafe to execute arbitrary code. As for the plugin, you can load a plugin in a separate appdomain, of which you configure whatever restrictions you want. You can't do that with a powershell script, you have no choice over its execution.
This isn't remotely the same thing. Replacing executable code is possible, but it's fairly difficult. You need a reasonable understanding of the underlying code base to pull it off, and doing it without breaking the system and having everyone know is even more difficult. SQL is almost impossible to abuse in and of itself. Injected SQL yes, but that's privilege escalation. This code is literally taking an unknown PowerShell script written by who knows who and executing it with the full privileges of the app. It leaves no trace and anyone can do it. The capabilities of PowerShell on a Windows system are effectively unlimited. You can run any executable, write scripted .NET code, absolutely anything, without a trace. So long as you return the object at the end it probably won't even crash. If the app has access you have access. Sysadmin doesn't mean access to everything, it certainly doesn't mean unaudited access to anything. This is a massive vulnerability, and it gives you nothing. It's not even easier to work with.
Did not know about discard vars! I need to catch up, clearly.
It seems like most books that cover a GUI tech only cover the GUI tech and not go over design principles for UI's like Fowler's `Presentation Model` (MVC, MVVM, MVP). Those patterns are, in my opinion, absolutely required.
The [Managed Extensibility Framework (MEF)](https://docs.microsoft.com/en-us/dotnet/framework/mef/index) for plugin/extension/addon architecture.
You cannot make a method argument by ref from the 'outside'. Passing by reference and by value generates fundamentally different code, it needs to be supported on the receiving side. What exactly are you trying to do?
I am starting a buch of file downloads as a set Task-async operations inside a for loop. This operations should report progress via Progress&lt;double&gt; objects. The Progress objects require an Action&lt;double&gt; action = (value) =&gt; {something with reporting}; delegate. I can generate these Action delegates inside the for loop and they capture and locally save the for iterator value. The thing is, that if I supply the Download(Stream, string, Action) task with the real Action delegate right away inside the for loop, the for loop will break the delegate. My workaround here would be: //inside for loop //create a dummy Actin delegate which does nothing var p = new Progress&lt;double&gt;(); //Assign the dummy Action delegate to the Download Task Task t =_youtubeClient.DownloadMediaStreamAsync(stream, filename, p); //create the usefull Action delegate var px = new Progress&lt;double&gt; (value =&gt; {code doing the reporting}) } //END OF FOR LOOP //I swap the dummy Action delegate with the real one p = px; await t
I'm not sure what you mean by "the for loop will break the delegate". If you *really* need this, you could create a sort of proxy progress: IProgress&lt;double&gt; realProgress = null; var proxy = new Progress&lt;double&gt;(v =&gt; realProgress?.Report(v)); Download(..., proxy); // ... realProgress = new Progress&lt;double&gt;(...); Or create a type derived from `Progress&lt;T&gt;` and override the report method to do the same.
&gt; SQL is almost impossible to abuse in and of itself. Injected SQL yes, but that's privilege escalation. Um, no. This is really, really important so pay attention. If you are sysadmin on a SQL Server database, you can do literally anything that SQL Server's account can do by running the `xp_cmdshell` stored procedure.
&gt;the value of the foor loop iterator variable i is captured and stored when the Action delegate is created You're storing the value when the delegate is executed, not when it is created. To avoid iterator capture make a copy of the variable within the body of the loop (not within the body of the delegate).
Certifications are largely on the infrastructure, networking, and ops side of the business, not the programming side, so it sounds like they may be trying to apply the same logic to you. I have a couple of infra-related certs from before I switched to programming. I also have a Zend CE (PHP) from right after, because that was the mindset I was in. I haven’t found value in anything else, but we’ll get into her. Best case I would take the opportunity to have them pay for something. Even if it ends up being worthless, who cares? Ask him to find one or which ones he thinks they’ll pay for and take them. A little extra studying, at least a lot of which I assume you can do on company time... win, win. Worst case I’d say he’s an idiot. It feels like he’s trying to apply logic to developers that doesn’t fit there, especially these days and doubly so in a small company. That said, skimming through the list... Azure, which you don’t think they’ll pay for, but if I had to pick I would push for. It’s not always Azure-specific, it also helps with a kind of devops mindset. You didn’t mention it and I hope you never have to touch it, but Sharepoint. No one likes it, they’re all raging alcoholics, but if you can hack it up to do what a customer wants you can get a job with IBM or any of the other big consulting agencies making more money than anyone rightly should for such god awful work. There are several “Designing Database...” options that may or may not be useful to you guys, but no reason not to go for. Whether you want to eventually end up being a DBA or a Data Analyst or just a better dev than the average because you know more about how to structure the schema... it doesn’t hurt. Search for “cloud”. As absurd as it is, any of those, no matter how worthless, would get the attention of the idiot reviewing resumes in HR before passing them on to the hiring manager. Honestly, my advice would be less about “what do I think?” and more “what do you want?” Pick some that interest you and that would help you move in whatever direction you want (or across the board if you don’t know that yet) and see what they’ll pay for. It’s more about how you frame the argument on how it will benefit the company than anything. Good luck, report back if they approve any, and then later if you take any!
reference types are passed by value. The value that gets passed is the reference. In other words, no worries. It's doing what you want. Structs will get copied, classes will have their references copied.
Writing a lightweight WCF-wannabe that wraps Lidgren UDP NetPeers and uses JSON for messaging. It works very well but I wanna remove the dependency on Lidgren itself to make it more agnostic to the underlying network transport. I'll be using the above project in a game I will be making using monogame that will use lidgren for client/server comms.
1. Afaik there is no framework support, therefore you must write all the "in-between"-Code yourself 2. Probably not as user control is also a wpf control which shouldn't be compatible (unless there is a winforms alternative) 3. Idk
Why not use the Winforms [ElemementHost](https://msdn.microsoft.com/en-us/library/system.windows.forms.integration.elementhost.aspx) to host the WPF inside a WinForms app? If you can't go that route. I would use code behind on the WinForms to invoke the necessary methods/properties on the MVVM model. It'll be more tightly coupled than WPF, but you can re-use more code. E.G. if you click on a button, in your button_clicked handler it would do VM.SomeCommand.Invoke(this,null); 
This is really great feedback, thanks! There is a layer of c++ code involved so it's possible that there are buffer overruns, but the codebase is relatively mature and I wouldn't expect to see something like that all of a sudden. I'm installing the sos extension now as apparently I don't have it right now and !verifyheap doesn't work. The IT guy just got a BSOD while installing Windows though, so I'm leaning more and more toward a pure hardware issue of some kind despite the memory diagnostics repeatedly coming back green.
You can embed winforms into wpf. You might want to have a look at it. What is the reason to convert your app?
Man I am such an idiot. That solved it!!! In my 10 lines mockup code I did consistently right, and then in the big for loop I messed up. Worst of all, I copied the code to different forums to explain it so it was in front of my eyes...
Hi, I just wanted to say thanks for the advice, and the warnings against Sharepoint. I decided a while back that I'd never do anything like Sharepoint, because your exact description was my impression of it. My impression of certificates also align quite well with what you describe, and I was skeptical today, when it was suggested. He's more of a networking guy. I think he'd just heard of these certificates, and replied to it, when I requested that we set some sort of "recognizable" milestones for my career. I didn't tell him the following, but it's partly because I felt I'd been working very hard to very little notice, and there's been no mention of salary negotiations after half a year. To some degree, I think might be expecting too much structure and formality from a small company. I'd actually really like to get better when it comes to database design. I struggle a lot around the database, when it comes to things like performance and data access patterns - not that I imagine data access patterns would be part of any of the certifications, but I'd be really interested to get better in that area, because we do rely on a ton on our databases, and being able to access them quickly. I'm honestly a bit stumped about where I should go as a dev these days, and miss a bit of mentoring. Right now, I'm mentoring the two senior devs I'm working with on better practices like TDD(or actually writing unit tests at all), CI/CD and so on. So perhaps I'm just looking for some way of ensuring that I stay on track while working at a small company, so I don't build up too many bad habits. Thank you again for the advice, I really appreciate it.
I'm willing to bet none of this is good... 0:033&gt; .load C:\Windows\Microsoft.NET\Framework64\v4.0.30319\SOS.dll 0:033&gt; !verifyheap Object 000000aefef11000 has an invalid method table.object 000000b8fef11038: bad member 000000AEFEF11420 at 000000B8FEF110D8 Last good object: 000000B8FEF11018. object 000000b8fef13558: bad member 000000AEFEF11420 at 000000B8FEF13568 Last good object: 000000B8FEF13538. object 000000b8fef159a8: bad member 000000B57F0BCB78 at 000000B8FEF17860 Last good object: 000000B8FEF15988. object 000000b8fef199a0: bad member 000000AEFEF11420 at 000000B8FEF1F530 Last good object: 000000B8FEF19980. object 000000b8fef9e9c8: bad member 000000B300876F98 at 000000B8FEF9EC18 Last good object: 000000B8FEF21938. object 000000b8ff12d920: bad member 000000B300871080 at 000000B8FF12F298 Last good object: 000000B8FF0EC568. object 000000b8ff134f48: bad member 000000AEFEF11420 at 000000B8FF13C080 Last good object: 000000B8FF134F28. object 000000b8ff147ef0: bad member 000000B300871D40 at 000000B8FF14EA78 Last good object: 000000B8FF147ED0. Object 000000af3ef11000 has an invalid method table.Object 000000af7ef24940 has an invalid method table. Last good object: 000000AF7EF20AA8. Object 000000afbef11000 has an invalid method table.Object 000000affef11000 has an invalid method table.Object 000000b03ef11000 has an invalid method table.object 000000b07ef14ee0: bad member 000000AFBF751E40 at 000000B07EF14EF0 Last good object: 000000B07EF11048. Object 000000b07ef4bb30 has an invalid method table. Last good object: 000000B07EF47C98. Object 000000b0bef11000 has an invalid method table.Object 000000b0fef11000 has an invalid method table.Object 000000b13ef11000 has an invalid method table.Object 000000b17ef11000 has an invalid method table.Object 000000b1bef11000 has an invalid method table.Object 000000b1fef11000 has an invalid method table.Object 000000b23ef11000 has an invalid method table.Object 000000b27ef11000 has an invalid method table.Object 000000b2bef11000 has an invalid method table.Object 000000b2fef19548 has an invalid method table. Last good object: 000000B2FEF192F0. Object 000000b33ef11018 has an invalid method table. Last good object: 000000B33EF11000. Object 000000b37ef11000 has an invalid method table.Object 000000b3bef11000 has an invalid method table.Object 000000b3fef11000 has an invalid method table.Object 000000b43ef11000 has an invalid method table.Object 000000b47ef11000 has an invalid method table.Object 000000b4bef11000 has an invalid method table.Object 000000b4fef11000 has an invalid method table.Object 000000b53ef11000 has an invalid method table.Object 000000b57ef11000 has an invalid method table.Object 000000b5bef11000 has an invalid method table.Object 000000b5fef11000 has an invalid method table.Object 000000b63ef11000 has an invalid method table.Object 000000bacf574840: Bad member 000000B4FF4B6950 at 000000BACF5749A0. Last good object: 000000BACF48A6D0. Object 000000b67ef11000 has an invalid method table.Object 000000b6bef11000 has an invalid method table.Object 000000b6fef11000 has an invalid method table.Object 000000b73ef11000 has an invalid method table.Object 000000b77ef11000 has an invalid method table.Object 000000b7bef11000 has an invalid method table.Object 000000b7fef11000 has an invalid method table.Object 000000b83ef11000 has an invalid method table.Object 000000b87ef11000 has an invalid method table.Object 000000b8bef11000 has an invalid method table.Object header for 000000b300876968 should have a SyncBlock index of 53. SyncBlock 54 corrupted, points to invalid object 000000b300876c10 Object header for 000000b57f0bc4d0 should have a SyncBlock index of 57. SyncBlock 82 corrupted, points to invalid object 000000b4ff4bdcc8 SyncBlock 162 corrupted, points to invalid object 000000aeff8c9cb8 SyncBlock 182 corrupted, points to invalid object 000000b43f35b508 SyncBlock 186 corrupted, points to invalid object 000000b43f35b2d0 SyncBlock 194 corrupted, points to invalid object 000000aeff8c9a68 SyncBlock 195 corrupted, points to invalid object 000000b6ff316278 SyncBlock 201 corrupted, points to invalid object 000000b83f0ad820 SyncBlock 212 corrupted, points to invalid object 000000b83f0ad5c0 SyncBlock 213 corrupted, points to invalid object 000000b5ff5abdd0 SyncBlock 218 corrupted, points to invalid object 000000afbf5c12d8 SyncBlock 245 corrupted, points to invalid object 000000aeff8d0b68 SyncBlock 251 corrupted, points to invalid object 000000b5ff5abb80 SyncBlock 255 corrupted, points to invalid object 000000aeff8d0910 SyncBlock 257 corrupted, points to invalid object 000000b300bba478 SyncBlock 267 corrupted, points to invalid object 000000b4ff4bb8f8 Object header for 000000b3bf337668 should have a SyncBlock index of 291. SyncBlock 299 corrupted, points to invalid object 000000b3bf337408 SyncBlock 326 corrupted, points to invalid object 000000b4ff4b9470 SyncBlock 365 corrupted, points to invalid object 000000b6ff30c170 SyncBlock 378 corrupted, points to invalid object 000000b4ff4b6d50 SyncBlock 384 corrupted, points to invalid object 000000b300aeab70 SyncBlock 424 corrupted, points to invalid object 000000b87f2e7bd0 SyncBlock 425 corrupted, points to invalid object 000000b87f2e7968 SyncBlock 428 corrupted, points to invalid object 000000b300aea7d0 SyncBlock 431 corrupted, points to invalid object 000000b300aea568 SyncBlock 439 corrupted, points to invalid object 000000b300ae7b40 SyncBlock 440 corrupted, points to invalid object 000000b5ff5af3a8 SyncBlock 441 corrupted, points to invalid object 000000b300ae7900 SyncBlock 461 corrupted, points to invalid object 000000b6ff1c1b48 SyncBlock 498 corrupted, points to invalid object 000000b67f6f9d20 SyncBlock 504 corrupted, points to invalid object 000000b7ff1a0eb0 SyncBlock 505 corrupted, points to invalid object 000000b77f39e438 SyncBlock 509 corrupted, points to invalid object 000000b47f3d58c0 SyncBlock 510 corrupted, points to invalid object 000000b1bf646cf8 SyncBlock 523 corrupted, points to invalid object 000000b27f6ee388 SyncBlock 539 corrupted, points to invalid object 000000b87f20d830 SyncBlock 549 corrupted, points to invalid object 000000b13f2d30c8 SyncBlock 550 corrupted, points to invalid object 000000b13f2d2e80 SyncBlock 552 corrupted, points to invalid object 000000b13f2d0630 Object header for 000000b13f2d03d0 should have a SyncBlock index of 554. SyncBlock 557 corrupted, points to invalid object 000000b87f20ff90 SyncBlock 560 corrupted, points to invalid object 000000b87f20d5d0 SyncBlock 563 corrupted, points to invalid object 000000b6ff0fa750 SyncBlock 567 corrupted, points to invalid object 000000b3bf14b568 SyncBlock 573 corrupted, points to invalid object 000000b27f41f860 SyncBlock 586 corrupted, points to invalid object 000000b13f2cd800 SyncBlock 592 corrupted, points to invalid object 000000b13f399a88 SyncBlock 593 corrupted, points to invalid object 000000b13f399808 Object header for 000000b27f8f1f78 should have a SyncBlock index of 596. SyncBlock 625 corrupted, points to invalid object 000000b13f2cd598 SyncBlock 637 corrupted, points to invalid object 000000b17f3f3010 SyncBlock 640 corrupted, points to invalid object 000000b3bf14b2f8 SyncBlock 653 corrupted, points to invalid object 000000b13f2c34d8 Object header for 000000b27f8f1d28 should have a SyncBlock index of 662. SyncBlock 663 corrupted, points to invalid object 000000afbf453630 SyncBlock 667 corrupted, points to invalid object 000000b13f2b6fc8 SyncBlock 733 corrupted, points to invalid object 000000afbf5e5618 SyncBlock 747 corrupted, points to invalid object 000000b300c84838 SyncBlock 754 corrupted, points to invalid object 000000b5ff677ec0 SyncBlock 776 corrupted, points to invalid object 000000b5ff677c70 SyncBlock 777 corrupted, points to invalid object 000000afbf5e53e0 SyncBlock 780 corrupted, points to invalid object 000000b13f621fe8 SyncBlock 782 corrupted, points to invalid object 000000b5ff675338 SyncBlock 784 corrupted, points to invalid object 000000b5ff6750f8 Object header for 000000afbf5c7598 should have a SyncBlock index of 790. SyncBlock 791 corrupted, points to invalid object 000000afbf5c3448 SyncBlock 809 corrupted, points to invalid object 000000aeff90f428 SyncBlock 819 corrupted, points to invalid object 000000aeff90f1e0 SyncBlock 820 corrupted, points to invalid object 000000b43f3ff220 SyncBlock 826 corrupted, points to invalid object 000000b17f3f3e80 SyncBlock 842 corrupted, points to invalid object 000000b43f3fefc0 SyncBlock 843 corrupted, points to invalid object 000000b33f8e28a8 SyncBlock 850 corrupted, points to invalid object 000000afbf5c7328 SyncBlock 851 corrupted, points to invalid object 000000b33f8e2640 SyncBlock 852 corrupted, points to invalid object 000000b6ff319198 SyncBlock 854 corrupted, points to invalid object 000000b17f3f3740 SyncBlock 855 corrupted, points to invalid object 000000b5ff5af5e8 SyncBlock 879 corrupted, points to invalid object 000000b17f3f33a8 SyncBlock 896 corrupted, points to invalid object 000000b4ff4bfec8 SyncBlock 909 corrupted, points to invalid object 000000aeff8c4018 SyncBlock 917 corrupted, points to invalid object 000000b47f3cf250 SyncBlock 923 corrupted, points to invalid object 000000b47f3ceff0 SyncBlock 927 corrupted, points to invalid object 000000b87f2f5100 SyncBlock 936 corrupted, points to invalid object 000000aeff8f42b8 SyncBlock 943 corrupted, points to invalid object 000000aeff8f4030 SyncBlock 944 corrupted, points to invalid object 000000b4ff46be20 SyncBlock 946 corrupted, points to invalid object 000000b13f45f728 SyncBlock 952 corrupted, points to invalid object 000000b87f208d20 SyncBlock 956 corrupted, points to invalid object 000000b87f2f4eb0 SyncBlock 962 corrupted, points to invalid object 000000b3bf146cb8 SyncBlock 1423 corrupted, points to invalid object 000000b83f0b8988 SyncBlock 1424 corrupted, points to invalid object 000000b5ff680b48 SyncBlock 1426 corrupted, points to invalid object 000000b6ff313f48 SyncBlock 1430 corrupted, points to invalid object 000000b13f46bdc0 
I would be very curious on those "reasons" if you like to share...
Anything is possible with the proper amount of programming. Do I know of such programming? No. I refuse to style controls outside of the Windows UI as I enjoy consistency over a cool UI. How to do it? If I were you I would consider look at WPF which was made just for this. You’ll need to build your own control though, but given that you want aero transparency in Win10 building a custom control should be the least of your worries. I had done something like you in Winforms by taking the background image, cropping it, and performing a Gaussian Blur on it. This was slow and hacky indeed but will be similar to what you’re doing. You’ll need to grab the part of the image visible within the control, blur it, then reapply it.
I'm not sure if they are WPF or not, but I wouldn't be surprised. I am interested to know how these programs manage to keep the minimize/maximize animations and prevent form flickering though. The form flickering might even be a side effect of the lack of transitions going from a minimized state to a restored state. As far as I can tell there is nothing in the WindowChrome class that allows us to keep the animations, and many WPF projects I've seen lack these animations. I can't find anything on google that might indicate how it's done except that maybe it is done through the Win32 API, in which case I imagine the solution is complicated.
but why winforms? I can't in good conscience recommend a way to convert WPF into Winforms without knowing if there are valid reasons to do so.
Probably referring to the Arrange, Act, &amp; Assert pattern. 
Thanks for the clarification. Like I said, I'm not an expert. 
Thanks for the link. That clarifies it better.
Cheers dude, googled that pattern and looking into it now. I wrote something along the lines of 1) Ensure sanity on input variables 2) Do assert conditions 3) Ensure that anything that shouldn't of been affected remained intact. I stated that I've only used Unit Testing to execute scenarios and said it was an educated guess. Guess I wasn't too far off though :) Thanks again!
Updated my post at the bottom!
Updated my post as to why I can't. I was thinking about your example, I might have to go that route. It seems weird to me because I was so used to keeping things very separated in WPF.
Updated my post at the bottom for more info!
How about building a web API and then using that for feeding data for both apps? 
FWIW, the Windows API has a `WM_NCPAINT` message that's intended to be used to paint the entire window, not just the client area like `WM_PAINT`.
Visual Studio is, indeed, a WPF application. You can even use a tool like Snoop for WPF to see how it's constructed. I'm not sure if it's going to answer all your questions, but it might give you an idea of how they did it.
i guess i should goodle for DllImport("user32.dll") then
If you're not testing pure functions, but something that shares state at times, I like to throw in Assume before Act. basically assert that the state is what it's supposed to be before you act on it
Is that something like * Setup * Exercise * Verify * (Teardown) ? That's the pattern we learned in software quality assurance. Although, we usually found no use for the teardown step - in Java and C# you simply leave the room and kind Mr. Garbage Collector cleans up after you.
oh, and thank you for WPF hint, searched on github found an Explorer-style search textbox control for WPF.
Yep. If there are any resources you need to manually deallocate or dispose you should, but generally in a unit test your SUT (system under test) should be small enough that it's not necessary.
If you happen to be copying from github, click on the 'raw' button at the top right. It will display the plain text file without line numbers. 
SOS is designed mainly for advanced users, i.e. people who know about the internal details of the clr, so the output is often overly complex. All that output means is that there is heap corruption and it confirms what I was saying that something is overwriting the clr's private members of each object. The nasty thing about heap corruptions is that they often don't occur reliably. If you pass an unpinned object to native code, it only matters if a GC occurs and moves the object, otherwise it will behave normally. There is a setting (GCStress) to cause a GC at every interop boundary, which will help catch some cases, but it also makes your program a bunch slower. Maybe 10 times or more slower, which in very large programs means you can't actually run them. If you have multiple machines running the exact same program and it only happens on one machine, that is pretty suspicious but it also could be that it only happens very rarely and this one machine was unlucky. The answers at [stack overflow](https://stackoverflow.com/a/7792360) are pretty much the only thing you can do. These issues are not fun to track down.
Thanks again mate. This process crashes reliably within a few seconds or minutes on this server and not on the rest. At this stage it almost has to be a hardware issue, especially given that the IT guy got a BSOD while installing the OS. Assuming it's a hardware failure, it's interesting that it wasn't more obvious, and initially only the CLR (and our application) crashing. We do put more stress on the hardware than Windows or most other applications so it's not unheard of to see the system run mostly okay until the software starts doing its thing.
I bust my arse trying to stay up to date and not getting stuck with shitty legacy applications because my future employability depends on it. Those other developers sound like idiots.
&gt;There are many other identical servers in the environment without this issue. Try full wipe of the misbehaving machine, if that doesn't resolve it, replace the hardware.
Careful, that joke got Doug Crockford disinvited from a conference.
Yep, that's the plan at this point. Until recently the customer was under the impression this was just a software issue and I didn't have much of an argument against it.
I found myself creating an `IDisposable` struct for supporting the using-pattern so often I just created a general use "`UsingToken`" type.
These look good but https://github.com/StephenCleary/AsyncEx has AsyncLock which works well for us currently. 
Well, it depends on if they're using WPF or WinForms. I looked into Chromium way back when Chrome was really new, because I noticed it was using Vista-style window borders and buttons even on Windows XP. It took a bit of digging to figure out what was going on, but it was exactly what my first thought was: Chromium was a borderless window and all of the borders and buttons were custom-drawn. For dragging, they listened to mouse down events over the border and all the other things associated with dragging. This mostly worked, but if you looked really close there were some differences in how they drew things vs. how they'd look on Vista. It became most apparent on Vista itself, because the border looked slightly different from other windows! This is the downside of drawing it yourself. You could also do it by using `WM_NCPAINT`, but I think in that case you get the system border sizes, so if that doesn't line up with your custom ideas you have problems. In WPF/"modern" applications, the rules are different. I was curious how OneNote and other Office programs pull it off, but didn't find much in terms of WPF itself. There are a lot of articles on how to do it in UWP applications, but I don't think these apps are UWP. It's possible they're using borderless forms, or it's possible they're using some equivalent of it for WPF apps. Personally I find it tacky. MS spent a lot of time and money writing a set of UI guidelines and asking developers to stick to a uniform look so users could benefit from consistency, then set the bar at "design a new kind of window chrome every release of Office." 
I agree with the guy who you're replying to - Microsoft don't really do a lot of deep programming certifications and the ones they have are pretty simple foundation courses. Tbh, a lot of the certifications are really to give you the basic skills to be able to *start* working in that particular technology. Not for people who've already been doing it for a while. If you've already got a good deal of experience/understanding you're probably not going to learn much of any value and would be better off just taking out a pluralsight subscription. The only one I've done in the last few years where I felt I really picked up some interesting new skills was the Xamarin Mobile Developer certification. But, since mobile isn't anywhere on your list, it's probably not what you want.
I don't think you'd have to go quite that far... WinForms Object Data Binding has supported drag and drop data binding to controls since 2.0 (and fully supports NotifyPropertyChanged). So you should be able to add the ViewModel to the DataSources tab in VS, drop the various properties of the ViewModel onto a form (creating the controls, and binding them to the property in one move), or drop the properties onto existing controls (binding existing controls to the property), and then the only code required is wiring the BindingSource to the ViewModel instance in a form load (or other initialization routine). You have to give up some of the sexiness of MVVM / XAML like RelayCommand (although you could mimic that by passing a click event back to the VM and letting the VM deal with the result), and you might have to switch to BindingList instead of ObservableCollection for some items, but it's also not nearly as nasty as what we did prior to .NET 2.0, where you had to set / get data from controls by hand. 
Honestly, find a new job. If your co workers are such dinosaurs incapable of learning anything modern, you'll have a much better time at a job that actually already uses WPF.
No, written by people who are sysadmins on a system, possibly. When they get sick of signing the script because it's really tedious, possibly not even them. Even if in this case the people doing it are trustworthy, you wanted to get this written up as an article, which is just stupid. 
That's disabled by default and requires fairly extreme permission levels to enable or grant to others. Even then it's infinitely less powerful than this script and the user you can escalate to should have limited usage. You said anything that can run a sql command which is patently other true. Stop trying to pretend this is safe, it's fucking well not. You're not an idiot, you know this. Is your ego that important that you can't admit you were wrong? 
Nice, thanks. Bonus points if you name and shame the company so none of us ever make the mistake in working for them.
[removed]
There's no indication that OP did this on a team. 
Yeah, I misread. The other reasons still apply.
I didn't say it was "safe". I said it was no worse than the other things that a sysadmin can do, which is an entirely different claim. 
You could, but its such an incredible pain in the ass that I've never seen someone actually load plugins in separate domains. (Unless you count IIS app pools of course.)
I have an erection.
Except it is worse. It opens up a trivially simple to exploit vulnerability. 
lol is this sarcasm?
Is it only JSON or do you plan on supporting XML aswell?
It's only JSON for now, but we plan to support different input formats eventually, with XML high on the list.
Sure, why not? WinForms has similar design concepts to iOS and Android UI frameworks so the experience is relevant there at least.
I’ll be sure not to register for any conferences with my Reddit username :)
I'm pretty darn proud of my WinForms app. Just because the UI may "look old" doesn't mean your work is bad. And if you're trying to show off your ability as a coder (rather than a UI designer), the UI doesn't really matter.
What a *darn* shame.. *** ^^Darn ^^Counter: ^^60443
Thank you ocdtrekkie for voting on Darnit\_Bot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
Thank you, ocdtrekkie. *Beep boop*, my creator thinks I am a good *darn* bot too :) *** ^^Darn ^^Counter: ^^60443
Is there an option to disable the JsonPropertyAttribute creation? I already have our projects set up to handle camelCase conversion so it would just be redundant
Thanks. That's nice to hear!
Haha it sure is hard to tell :D
Thanks a lot, I have been using ValueTask recently exactly for a cache-or-database scenario and it's working perfectly.
Does it support customization of the output? E.g. using DataMemberAttribute instead or using different naming convention?
Thanks for this. So 'value' is what I would be working with inside the loop?
Company is great, just certain people we do work for (cough the government cough).
Yeah it’s sarcasm. /s Stick to 15 year old technology buddy. We push your resume into the trash faster than you realize. 
There are two approaches to this. If you want to save state or if the user control has a small memory footprint save the control in memory when you switch to the second control. Otherwise I'd you want to clean up resources and the cost of creating the control is small create a new one each time.
What do you mean by dropping the properties of the VM onto the form?
Depends on what the 30 tasks represent. If they are 30 data items of the same type (which is usually the case IME) you can use TPL Dataflow's `ActionBlock`. You can see examples [on my blog](http://blog.i3arnon.com/2016/05/23/tpl-dataflow/).
AsyncEx also has [TryCompleteFromCompletedTask](https://github.com/StephenCleary/AsyncEx/blob/db32fd5db0d1051e867b36ae039ea13d2c36eb91/src/Nito.AsyncEx.Tasks/TaskCompletionSourceExtensions.cs#L12-L76). But yeah, other than those two, it looks like your utilities are pretty distinct from Cleary's.
WinForms rules! Yeah it's old but it works and will be supported for a long time. It's just a UI layer after all. If you refactored your project so that the business logic could be implemented in WinForms, WPF, MVC or others easily then that would impress. It would mean you have grasped abstraction properly and even IoC/DI.
The [web app](https://app.quicktype.io/#l=cs) and the [CLI](https://www.npmjs.com/package/quicktype) support disabling the attribute. We don't know yet whether we'll add code generation options to the IDE extensions.
The [web app](https://app.quicktype.io/#l=cs) and the [CLI](https://www.npmjs.com/package/quicktype) support some customization, though not what you are looking for. I'm actually currently working on support for customizing code generation programmatically, to address those issues. Make sure you follow [our blog](https://blog.quicktype.io) or sign up for the newsletter on the [website](https://quicktype.io) if you want to hear about it.
When you add a class to the DataSources for the project, VS uses reflection to build a list of properties in that class. Then you can configure each property with the type of control you want it bound to (based of the type of the property), and drag a property from the DataSources list onto the form and the designer will add the control and wire up the binding. 
If you really want to, `WS_POPUP` can be used to roll your own borders. I wouldn't recommend it, though.
Oh okay I see it now. I'll give it a shot, thanks!
I'm sure someone has a smarter answer but: The Task API has a scheduler that's supposed to take number of cores, system load, etc. into account and may choose to process tasks in different orders or even synchronously. So anything from the phase of the moon to whether you're encoding video can change whether the tasks are concurrent [i]on the same machine[/i]. The older async pattern uses some other scheduling mechanism that isn't quite so complex, and is likely to execute things concurrently unless you exhaust the thread pool. There's probably a way to talk the Task API into ignoring its opinions and always being concurrent, but I think the suggestion is to let it do its thing.
Removed: Rule 3, Rule 4, perhaps Rule 1.
Congrats on passing! I am planning on taking it soon. Did you take the exam online or at a testing site? Which would you recommend? Also, how was the exam structured? Mix of fill in the blank, multiple choice and drag and drop or what?
&gt; angular or react only possibility for this was electron.net not even 'sarcasm' just a shitty buzzword tier troll attempt
https://www.amazon.com/Professional-ASP-NET-MVC-Jon-Galloway/dp/1118794753 is the book I recommend. I learned how to do ASP MVC from it years ago. One thing is what do you wanna do - ASP MVC 5 which is pretty established or ASP MVC 6, which has lots of features I'd say overwhelm a new beginner 
You shouldn't usually be saving state-data to the app.config file, or using a different connection string per-user, youre doing fboth at the same time? What happens if two users access it at the same time? You have entire different databases for each user? I don't know what problem you were trying to solve, but it sounds like a rethink would be the better option. App settings are for saving data that relates to the entire application, regardless of user, day, location, etc Try https://msdn.microsoft.com/en-us/library/ms973902.aspx?f=255&amp;MSPPError=-2147217396 
It looks like you wrote a lowercase I instead of an uppercase I. This has happened 5239 times on Reddit since the launch of this bot.
The connection string remains the same for each user. However, There are different DBs that can be logged into. * User opens application * Selects database (this is where i set the connection string) * User logs on The problem is when Bill logs into DB 'A', then Sue logs onto DB 'B'. Now when Bill tries to pull data from DB 'A', its not there or is actually from DB 'B'. Additionally, Bill could log into more than one DB from his one work station with multiple instances of the application. This is why I need to figure out a way to store it locally.
with asp mvc 6, it introduces the .net standard and the confusion that I've seen other junior programmers with .net core 2.0 and stuff if your end goal is to develop ASP MVC apps to be deployed on Unix machines, then learn ASP MVC 6 otherwise, ASP MVC 5 is great and well established.
I wonder how the performance compares to native Javascript. Being able to reuse models and service interfaces between the server and client could significantly cut down on code sprawl and shorten the number of tools needed to make a web project, so I'd be all about it as long as the performance is at least acceptable. I wonder if they could make a .NET Core web assembly implementation at some point as well, though I don't mind a .NET Standard 2.0 Mono implementation either.
Yes i want to change the wallpaper upon resume from sleep or like when i startup. So shouldn't it be handled in the onpowerchange event?
maybe I'm missing something here, but if your app is building the connection string dynamically for each instance why store it at all? Just use it.
Should I be looking at the Core stuff or just the regular ASP.NET MVC books?
That's basically what I just got over at SO. Honestly, I just didn't want to have to pass another variable through to each of my DLL's that need access to the DB. But if that is what I must do, then okay.
So if you happen to be running ASP.NET 4.7.1 you could use their [new configuration builder support](https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/). Then your configurationManager code wouldn't need to be changed. Option 2 would be to just create a global static variable that your DLLs could reference. Option 3 gets weirder. You could programatically reset the connection string, but it requires reflection. This I believe will work var connectionStringSettings = ConfigurationManager.ConnectionStrings[0]; // reference this by name, but this will get the first one var settingsReadOnlyFieldInfo = typeof( ConfigurationElement ).GetField( "_bReadOnly", BindingFlags.Instance | BindingFlags.NonPublic ); settingsReadOnlyFieldInfo.SetValue(connectionStringSettings, false); connectionStringSettings.ConnectionString = "blahBlahBlah"; Console.WriteLine(ConfigurationManager.ConnectionStrings[0]);
does that mean that someday a full-stack developer would be able to practically develop in C# on both backend and frontend?
If you are using EF, why have 2 separate connection strings but them have 2 separate db contexts? Each db context would have a different connection string. you could change your architecture and then abstract out your db sets. Then use your business logic to determine which context to use. In other words, leave your db context as it is (I would make it abstract to make sure I cant new it up), but then add 2 new contexts that derive from your current context. Switch between the 2 new contexts based off of your business rules.
I believe you can't. But web assembly isn't manipulating the DOM the razor piece of blazor is.
The book author, Jon Galloway, did a series of videos on Microsoft Virtual Academy that cover about the half the material in the book: https://mva.microsoft.com/en-us/training-courses/introduction-to-asp-net-mvc-8322?l=nKZwZ8Zy_3504984382 Microsoft's documentation is also very good: https://docs.microsoft.com/en-us/aspnet/overview 
One of the gods do listen to me. 
Blazor which is just the Browser and Razor working together would, when compiled, convert whatever code you just wrote to JavaScript. Then that javascript will interpret what it needs to. Picture it working just like typescript does for angular. Read this: http://blog.stevensanderson.com/2018/02/06/blazor-intro/
Nah. Cause it allows you to wrap javascript and use it inside as well along with Blazor. Coexistence is key.
Silverlight 2 allowed you to use C# to interact with the DOM. IIRC, you could expose methods so that js could call them as well as being able to access the DOM. Here is an article about it from 2008... http://pietschsoft.com/post/2008/03/12/Working-with-HTML-DOM-in-Silverlight-2-Beta-1 
this is a cool idea! gonna steal some of these ideas for a different project
Try putting the conn string in a setting file instead of web.config https://docs.microsoft.com/en-us/dotnet/framework/winforms/advanced/using-application-settings-and-user-settings 
awesome, thanks!
I can help you with that.
Thanks for the article. I didn't understand the want compile c# to js though, although perhaps they'll only generate js for stuff like event handling, and then the WebAssembly render engine could regenerate the whole dom as a string and pass it to the js part of the framework so it reconstructs the dom. Just guessing. Let's see where this experiment goes, I absolutely loove c#, but I grown used not having it for client side development, and I actually really really like typescript (and with the years I actually like JavaScript, I just suck at it). 
Wow, I do this topic these time and try many times. I know your mean. Its my thought and way. Win10 put a non client dialog window once a window is lanuched. I had not check if this window is a sub window of the dialog. This would come from Vista to win10. So the modern GUIs is made by the system. How to make it. Winform. I use c++, there is a function in dmwapi.dll can got the color of an active title bar from system. Use this color you can draw a large area of the non client area with this color. Use CDhtmldialog to draw your own non client area, hide title bar of the dialog. Draw your own title bar with min restore max button, you can see the tags of firefox are in the title bar. You know you cant draw on the title bar. Firefox has fixed title bar color, Chrome has non fixed color the same as the Win system. Both of them has large area. Another way. Use xaml to do it, maybe its easyer. I do not have more time to finish this work, if you can, please send me some code.
I was afraid that might be the case, but using WPF and the WindowChrome class you can actually make a borderless GUI that retains all functionality without "hacky" fixes or the need for hundreds of lines of code to reproduce form functionality. The only problems I haven't been able to figure out how to get around are the two things I mentioned in the post: (1) the min/max animations are missing and (2) there is a slight flicker in the top left corner where the title of the window should be when you restore the form from a minimized state. I think problem (2) might actually be related to the lack of animations transitioning from a minimized to a normal state so if I could figure out how to solve that problem then I think it'd be near perfect. I kind of suspect that most of the applications that have these "modern" GUIs are made by people far beyond my skill level with a deep knowledge of the win32 API who are actually writing all the code by hand to custom paint the window but I figured I would ask here in hope that there is an easier way to do it.
bad bot 
*Darn it* ablepie, I am not a bad *darn* bot... :c *Beep boop*, I am actually a cool bot. *** ^^Darn ^^Counter: ^^60692
I'd be happy to send you the code I am using in my dummy project where I am just trying to get a fully functional form that has a custom non client area, but from your post you sound like you are way more knowledgeable than me about these things and it probably isn't what you are looking for. All I do is use WPF with the built in WindowChrome class to make a borderless form, it retains all functionality by default except for the minimize/maximize animations. Let me know if you still want it and I'll send it to you.
"Member" is the canonical term for all of the junk: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/members I have never encountered a term that means just properties and fields. Your best bet is to just say "properties and fields".
Rewrite it.
If the app is running locally why not store the user configuration data in file in the user's data folder as opposed to the app's data folder? As long as your users are logging in with different windows accounts you are fine. Otherwise create a folder per user and store the data as XML or JSON. You can extend .NET configuration if you want though it may be more trouble than it is worth for your use.
You can google "convert ruby to c#" and try some of those solutions. But depending on how much code is involved, it might be faster and safer to just rewrite it. I've never used Ruby either but programming is programming - you should be able to read it.
Ruby is quite a bit different than C#, I'd be very surprised if you could just rewrite the lines in the C# syntax like you almost can with C/C++(ish)/Java. It's porbably quicker the rewrite it, trying to follow the same APIs.
WebGL is available for Bridge when using [Retyped](https://retyped.com) extensions. Here are some [demos](https://demos.retyped.com/) using Retyped.
What edition of Windows are on each? Perhaps it's a difference between Home and Pro. Microsoft did something similar back in the NT days - where the lesser version was crippled.
Are you using ADO.NET? Or Dapper? Man I havent done ADO.NET in years...so rusty! 
Pro ASP.NET MVC 5 https://www.amazon.ca/dp/1430265299 I'm working through that one right now and so far it's great.
Try IronRuby. Ruby on the CLR. It isn't maintained anymore but it is a start. Another option is creating a jar file with JRuby and then using IKVM to convert the jar to a .net assembly.
Nobody wants to think about silverlight ever again.
Nice. I didn't know that existed. I always love checking into new tech.
This SO post might help - https://stackoverflow.com/questions/295104/what-is-the-difference-between-a-field-and-a-property-in-c since there _is_ a pedantic difference between fields and properties in C#
Removed: Rule 4.
Have you tried TypeScript? its like C# had a baby with Javascript (or so I hear, I've only down Angular tutorials in it, more of a backend guy at work)
Tortuga Chain, which sits on top of ADO.NET. When you setup a connection, it reads the list of tables and views so you have all of the basic metadata at your fingertips. It also has support for random sampling in queries when you can't afford to read the whole table. 
Nice, thanks. I'll look into that as I wasnt finding any references to ADO NET or Dapper in your source Just curious, how long have you been programming in C# / .NET land?
Actually the test laptop isn't at my home right now, however, I have a laptop at home with Windows 10 Home and it is having the same problem as my test laptop. I will install Windows 10 Home on another partition on my PC or as a virtual machine and I will check the results and post them here in case I reach some conclusion.
You should be passing this as a configuration option. However, this is what machine.config files have been used for in the past. Not that I recommend it, but we still have old connection strings for virtually dead applications floating around in machine.config files where I work. 
Oh, since .NET was in Beta 2. 
I don't know if you understood my problem. Suppose i run it normally by setting it to a button click event it changes the wallpaper to my desired image. Ok leave that. That's done. But now i want to add another feature like change the wallpaper when i resume from sleep or start the laptop.( it requires the program to always be running so i added it to the registry to start up on run). It's just going black when i run the program, make it sleep and resume(so that i can trigger the event). Do you understand my problem?
A good question, and I was wondering exactly the same thing as I was working on a design this evening. In the early days of design, I'm just noting things that are data vs. methods. I'll decide later whether to make the data a field or a property.
.NET Core was effectively replacing Mono - This is rather a step back...
Why is WebAssembly not allowed to manipulate the DOM? That seems really strange!
Why are they using Mono instead of .NET Core when compiling the runtime to WebAssembly?
This is literally blowing my mind. I can not explain to you in words how happy this makes me. I can't wait for the day that I can say "screw it" to JavaScript completely!
Damn. I actually love working with Silverlight. It's a shame it has so many issues.
Good idea, poor execution. You should be using streams (as in System.IO.Stream), not byte arrays. You should have at least some notion of “versioning” your ciphertext. It should contain all the parameters used to do the encryption, or else hypothetical v2 of your app, where you change padding, IV length or anything else of significance, will be unable to decrypt ciphertext produced by v1. You should be HMACing the ciphertext.
Cryography-wise it looks fine, although technically setting all of those properties is redundant because the values are the same as the default values (including a randomized IV). Can't hurt to make it explicit, though. IMO you should include correct usage of password hashing (e.g. PBKDF2 with a higher than default iteration count) in the article and example. I bet 90% of people googling encryption code examples are doing password-based encryption, and using `Encoding.ASCII.GetBytes(string)` or something is far too common. It doesn't affect the security, but this byte[] inputstream = encryptedBytes.Skip(iv.Length).Take(encryptedBytes.Length - IVLENGTH).ToArray(); is very inefficient. Just use the `MemoryStream` constructor that takes an offset.
Javascript sucks so bad, and the JavaScript "ecosystem" has become a trainwreck in the past 5 or so years. I'm not discounting the great work everybody has done for it, and our options have been pretty limited. Java had big promises, but the Java applets were horrendous. Slow and ugly. Probably the best stuff was Flash and Silverlight, but Flash was insecure, and Silverlight only worked in IE. Up till now, JavaScript has really been our only option. And it was never really meant to do what we are doing with it now. It's just layers upon layers of hacked together crap, and trying to learn it all and build something good with it is exhausting. I've done some amazing things in Angular, but if Blazor takes off, I won't be looking back. This looks like it will be so simple. I first heard about WebAssembly a few years ago, and I've been hyping it up to my coworkers. "Guys, this is going to be HUGE." The other day I shared the demo video of Blazor with my coworkers and it blew everybody's minds. They all said "this looks so easy!" And I've been trying for years to get them to learn Angular. We're in an environment where we each write and manage small-ish apps, so most of what we do is all on our own. So I personally have written a few angular apps, and have even received awards for them. One coworker did one of his apps with angular, but he didn't really get what he was doing, and it kind of came out a mess. We got an app from another one of our sites, and had to tailor it to our site's needs. We got the back end together, but the front end was written using Hot Towel, which is kind of a pre-built angular system for asp.net, and it hasn't been touched in years. So it's basically abandonware. We had a group development session to customize it to our needs, which basically involves me doing the code in our conference room with a projector, and the team watches and we brainstorm ideas on how to do things. I'm pretty much my team's .net expert, so I guide the process. (I was the one to dive into asp.net while everybody else stayed with classic ASP) Anyways, we're sitting there trying to figure out how to integrate into hot towel, and finally I just said "screw it, let's build our own app. Watch this." I tapped into the angular engine that was already loaded, and it was angular 1.0 (seriously) so it was a bit of a learning process, because it was missing a lot of the features I'm used to in angular. But even with the difficulty, we wrote a user administration page for this massive SPA in about 30 minutes. And it's SLICK. It was a good opportunity to show how easy angular makes it to slap together a page with moving parts that can connect to a backend API. They were pretty impressed with its abilities. But yeah, this does the same thing, but it takes 5 minutes. And it uses C#. Seriously, trying to get these people (old dog, new tricks) to learn ES6+ or TypeScript? I'm really struggling, it's one hell of an uphill battle. Blazor is the answer to all of our problems. And it might even get middle management (people who might have done some programming 20+ years ago, and try to micromanage us) off our backs. I just hope this can move fast, and become a standard feature soon. The entire community needs to get behind this. We need to offer our help and support in making it a massive success. Hell, if I can help in any way, I'm game. This is going to be massive.
No you definitely can. It's basically using the javascript engine. I believe (and I'm piecing this knowledge together from what I've read) that at first, they built an assembly engine on top of JavaScript, and then started writing binary software that could run in the web browser, but once WebAssembly became a standard that all (literally all of them!) of the major web browsers agreed on, they started building new engines directly into their browsers to run this stuff natively. I don't think it even uses the JavaScript engine any more. But it's still tapping into the underlying DOM manipulation engine that JavaScript runs on. I know chrome at least has a name for it. It's late and it's been a long day, so I forget the name of it. But essentially anything JavaScript can do, WebAssembly can do it too. Another co-worker and I were looking at it a while back, and we found a demo site for WebAssembly. They had written a game that ran in it. I'm not talking tic-tac-toe. This was a 3rd person over head view 3D accelerated game. It reminded me of the Crusader series from the late 90's. It was AMAZING. Like, visually stunning. And it was relatively thrown together. A proof of concept. An AAA game developer could probably do really big things with it. And it's just a web page. This is truly the best thing to ever happen to the web. I'm talking game changing. I don't mean Blazor. Just WebAssembly in general. If you saw what I've seen, you'd understand. [Found it](https://youtu.be/4IW3wI5sxgs) Here's a YouTube video of it in action. There's a web site that this is embedded on. We had to use Firefox and I think we had to change some settings to make it work. But this is embedded in a web page. But, Blazor is basically an asp.net engine built for this system, and it will definitely let you modify the DOM on the fly. And it handles all the heavy lifting for you. No typescript. No babel. No angular/react/redux. No WebPack/gulp. You just write some c# in a page and the c# gets compiled into something kind of like JavaScript. It handles all the heavy lifting for you. I'm super pumped, this is really happening. I've been complaining about JavaScript for many years. And we're finally starting to see it in action. We're seeing results, and demonstrations of what we might be able to do on our own, very soon.
&gt; Javascript sucks so bad, and the JavaScript "ecosystem" has become a trainwreck in the past 5 or so years. I disagree with this. The last five years have just made it **more** of a trainwreck than it already was.
From the WebAssembly docs: &gt; WebAssembly modules will be able to call into and out of the JavaScript context and access browser functionality through the same Web APIs accessible from JavaScript One would assume DOM (which is a standard separate from Javascript) would be one of the aforementioned Web APIs.
Can you imagine if they provide [Fabric UI type components](https://developer.microsoft.com/en-us/fabric#/components) with Blazor - sweet baby Jesus please let this happen!
Well, yeah. It's always been a trainwreck. But it's gotten a lot worse in the past few years.
I just sent it to my coworker who loathes JavaScript, he's going to shit himself
I wonder how long this will take to become prod worthy, I want this in my life today but feel like it'll be a couple of years yet
It's a desktop app buddy. Rewriting it in Angular or React wouldn't really be an option. 
Do you know if he ever did the follow up part 2 with predicates? I took a look but couldn't find anything other than his LINQ to SQL series
While the `Parallel` class can limit the concurrency of parallel operations, it also blocks the current thread, so I wouldn't recommend it for async code. Instead, you can either use `LimitedConcurrencyLevelTaskScheduler` (from [here](https://msdn.microsoft.com/library/system.threading.tasks.taskscheduler.aspx), Ctrl+F the class name) or using TPL Dataflow and limiting concurrency with `MaxDegreeOfParallelism` of an `ActionBlock&lt;T&gt;` like so: // To prevent ThreadPool slow growth from limiting parallalism ThreadPool.SetMinThreads(100, 100); var block = new ActionBlock&lt;int&gt;(async i =&gt; { await Task.Delay(1000); Console.WriteLine(i); }, new ExecutionDataflowBlockOptions { MaxDegreeOfParallelism = 2 }); for (int i = 1; i &lt; 100; i++) { block.Post(i); }
next we make .net Browser-based web apps that runs on the server ( a la nodejs) to come full circle
I think your are better of with .NET Framework 4.6.x. It's fairly recent and should be up with the Windows 7 update. But you can try 3.5 xD this should work out of house
I would like to, but .NET 4.6.2 was an optional component in the VS 2017 installation, which doesn't give me a lot of confidence that Windows 7 Updates include it. &gt; But you can try 3.5 xD Either that or port it to VB6. I'm on the fence. ;-)
[.NET Framework system requirements](https://docs.microsoft.com/en-us/dotnet/framework/get-started/system-requirements)
&gt; NET 4.6.2 was an optional component in the VS 2017 installation, which doesn’t give me a lot of confidence that Windows 7 Updates include it. You’re comparing a developer pack to a runtime. You can google what runtimes are included where 
&gt; You’re comparing a developer pack to a runtime. Good point. &gt; You can google what runtimes are included where I searched around quite a bit before posting this question. I found these: [1] https://docs.microsoft.com/en-us/dotnet/framework/get-started/system-requirements [2] https://blogs.msdn.microsoft.com/dotnet/2016/01/26/microsoft-net-framework-4-6-1-is-available-on-windows-update-and-wsus/ The first link lists the supported runtimes by operating system, and the second link states that .NET 4.6.1 is available as an *optional* update for Windows 7. So my dilemma is trying to figure out the latest version of the framework that was distributed as an automatic (non-optional) update for Windows 7.
You can build cross-platform desktop apps with angular and [Electron ](https://scotch.io/tutorials/creating-desktop-applications-with-angularjs-and-github-electron)
Well yes, but that would be an entirely different stack and a new project. OP asked whether or not he should include an existing project on his resume and you suggested he should rewrite it in a buzzword stack instead. 
.NET 3.5 ships pre-installed with Windows 7. No other .NET version comes pre-installed on Windows 7, not even .NET 4.0. If that is a criteria to you, stick to 3.5. But .NET 4.0 until 4.7 is available for Windows 7 SP1. But keep in mind that .NET 4.0 to 4.5.1 is not supported anymore. So the best option would be .NET 4.5.2.
Pre-installed isn't a prerequisite. I'm probably wording this poorly since it's 5:15AM local time, and I've been up all night. What I'm trying to target is the latest framework version that the majority of Windows 7 users will likely have installed.
By targetting the unsupported .NET 4.0 framework you will reach the most, after 3.5. Because all versions after 4.0 are backwards compatible to 4.0.
Holy moly! That means i will not have to use Shitty JavaScript anymore? 😂 C# Full Stack developer ... Ayyyy 
Yes with orm like entity framework creates performance issues. you can use ado.net data model instead of EF all the time. which helps you provide a better performance. sometime with more table you can't even open your designer as well.
They’re the industry standard - not buzzword stacks. As someone who hires developers, ANY personal application is a +1. A WinForms developer learning angular/react on their own time is a +10. OP wants to boost their resume. Adding new skills (even if it’s from a side project) is the best way to significantly improve their resume and open more interview doors in a short amount of time. Continue down voting 
[removed]
&gt; So AES256 is 128 times stronger than AES128. Wat? No. 129 is twice as strong as 128, 130 is twice that (so 4 times as strong) 131 is 8 132 is 16 135 is 128 &lt;---- ..... 256 is 2^128 times as strong as 128
Get a book. Way better way to learn. The spec is just technical jargon.
Don't use the language specification. From what I understand, the ECMA language specification hasn't been updated in a long time, and it will not include any context about the base class libraries, how the runtime works, or anything about project files or nuget. Instead, start with the [C# Guide](https://docs.microsoft.com/en-us/dotnet/csharp/) from Microsoft's documentation. Make sure to read through all of the menu links on the left underneath the C# Guide as well, in particular anything underneath C# Concepts. To do anything useful, you will also have to learn an application type. I'd start with making a Console application to get the feel for it, but you are going to want to move on to learning asp.net core, WPF, or another project type. The project types have a lot to learn on their own, and take longer to master than C# itself (as the project types change a lot every couple years).
[This](https://www.amazon.ca/Pro-ASP-NET-Core-MVC-2/dp/148423149X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1518011803&amp;sr=1-1) would be the updated version of that book. Adam does a good job introducing ASP.NET, but he also covers a broad spectrum of cross cutting concerns and OOP concepts. I would highly recommend his books for anyone new that wants to go down an MVC path.
Coming from a C++ background I find [C# in a Nutshell] (https://www.amazon.ca/dp/1491987650) to be great. Concise, to the point, but nothing is (or seems to be) left out.
Maybe.
It's not just a millennial thing. WinForms is an overly complex way of making a UI, there are better &amp; less error prone options now. Sure WinForms works, but there are easier development experiences. 
hmm. that makes sense. I guess I didn't think about that line very much.
Are you talking MVC? As far as I am aware, your method name in the controller should match the name of the view.
I didn't like working with it, but I'm not a UI person. I did appreciate working with C# instead of the project being in Flash with some other programming language. One thing I found frustrating about it was encountering things that (like .Core) didn't work the same as the .Net Framework. eg SL generated terrible service clients for WCF services that were incompatible with common WCF helper code. 
Thanks for the suggestions. I'll change it to memorystreams. I plan to write other articles about RNGs and hashing passwords, and HMAC.
IAMA pro C# developer, AMA. (I recommend against learning from the spec. Do a few sample projects.)
I think you might have to handle this with business logic. Essentially, if it fails the first time, try again. 
Yes, I'm talking MVC. Sorry for not being clear. Everything matches, and as I said, if I just rename the page and the method name in the controller it works just fine, but as soon as I want to use that form through Index I just get a blank Index page. But the methods goes through without VS complaining.
My understanding is that mono is more like the .Net Framework than it is like .Core. 
I read most of it when C# was first released, it will help you understand the language, but it won't teach about programming.
Depends on how you learn, though, and what your prior experience is.
I would make sure that the form tag in the view is pointing to the right controller method. That could potentially be a gotcha. example &lt;form asp-controller="Account" asp-action="Logout" method="post"&gt; //show your components &lt;/form&gt; in the example below, we are pointing to the Logout method in the account AccountController. I would set a breakpoint in the method and see if you were atleast hitting the method. Then move from there 
I'm a HUGE fan of the web site Udemy.com. They have a lot of courses there. Some are fantastic, and the price is right. I took a few C# courses which were produced by a guy named Mosh Hamedani. Depending on the day, you can get them for $15 or less. Get his intro, intermediate, and advanced courses. They're very thorough and well done. I can't recommend them highly enough.
When I saw the demo for this a while back I really hoped it would be further developed. I see this succeeding where Silverlight failed.
Thanks! I'm gonna try to rewrite the whole form tag withouth using Razor-tags to see if that makes any difference. Otherwise I'm aware of that and have tried to rename both controllermethod, pagename and edit it in the form tag without success. Always ending up with a blank page. This works: PageName: SalesTool.cshtml ControllerMethod: [HttpPost] public ActionResult SalesTool(SalesToolModel salesTool) { blablabla... return View(); } ControllerName: SalesTool and HTML looks like this: @using (Html.BeginForm("SalesTool", "SalesTool", FormMethod.Post, new { id = "form" })) { "my-content......" } but this does not work: PageName: Index.cshtml ControllerMethod: [HttpPost] public ActionResult Index(SalesToolModel salesTool) { blablabla... return View(); } ControllerName: SalesTool and HTML looks like this: @using (Html.BeginForm("Index", "SalesTool", FormMethod.Post, new { id = "form" })) { "my-content......" }
The spec is a technical reference aimed towards those implementing C# into a compiler or development tool. It's not a learning reference.
I haven't read the specification, but a lot of C# is in learning the .NET framework. Just reading the spec will probably not give you that knowledge.
The entire point of the Mono project was to create an open-source version of .NET without using any of the actual .NET code (That could be easily acquired from reflecting one of the libraries), making it a truly open-source conversion. Since .NET BECAME open-source, the existence of the Mono project became redundant (Aside from maybe merging the two in cases where performance improvements were found). Choosing to specifically scrap the ENTIRETY of .NET and use Mono instead is an extremely confusing choice...
Do yourself a favour and search for "101 LINQ samples". It lets you write pseudo SQL on lists and arrays. It's something I was desperately sad to lose when I took a Java gig. Moved back to C# and life is much better.
That's because bhp is still &gt;= 1, so your if statement is always true.
You're using an || for your if block that subtracts from php, yet within the if block you don't subtract from bhp, so if (**bhp &gt;= 1**|| php &gt;= 1) { is always true so the following code block will keep executing.
&gt; Since .NET BECAME open-source, the existence of the Mono project became redundant (Aside from maybe merging the two in cases where performance improvements were found). Mono won't be redundant until they make an open source framework that does cross platform desktop, mobile, and gaming libraries (e.g. replacing Xamarin, Unity, and WinForms or WPF). None of these things are even on the long term roadmap today for .NET Core &gt; Choosing to specifically scrap the ENTIRETY of .NET and use Mono instead is an extremely confusing choice... They didn't scrap anything. This is an experimental proof of concept project. They are using Mono because it was easier (I believe the compiling backend for Mono already had a Web Assembly target).
If you are coming from a Java background I would just start writing code. The syntax is mostly the same for the fundamentals. A couple things I can think of that are different are lambdas, unified type systems (value types have object as their base type), use of assemblies instead of jars, and generics. There are even many base class libraries that are similar in both languages. Use the standard docs to find them. The spec may be helpful in those areas where things are different or in the internals of running the CLR but for the most part you already know C# 😀
Is it for in-house business software or for a general consumer market?
Don't lump them together
The spec doesn't help you learn how to program in C#. It's really only useful for those that know it already and want to learn deeper (or win a pedantic argument). It's not common that you need to know: &gt; The third form of typeof-expression consists of a typeof keyword followed by a parenthesized void keyword. The result of an expression of this form is the System.Type object that represents the absence of a type. The type object returned by typeof(void) is distinct from the type object returned for any type. - &gt; Each extern-alias-directive or using-alias-directive in a compilation-unit or namespace-body contributes a name to the alias declaration space (§8.3) of the immediately enclosing compilation-unit or namespacebody.
This depends on a ton of factors like what you are using for sync. If you are just downloading the binary file you will need to handle for it. There are frameworks and tools that allow for SQL sync and similar though each has different concerns in your scenario. How big is this dataset and how crappy are the connections your customer will be using?
BAM. I think that's an excellent term. Thanks! :)
I understand the difference between the two, but conceptually they are similar enough that they can be described in a unified manner. \u\throwaway_lunchtime had an excellent suggestion: data members.
C# in a nutshell is the go to book.
In that case, go with data members. The difference is important if you are talking about writing good code, but much less so if you are just trying to group up stuff from someone else's code.
Maybe. Why would you want to?
General consumer.
Refreshing the desktop is doing nothing. I thought that it might not be able to read the file immediately from the hard drive. So i delayed it by setting a timer of 1min in the switch case but it still has no effect. The wallpaper value is being shown as the file path that i hardcoded but desktop background is black. I have no idea what's wrong.
Let’s step back a minute. If you create a button on a form and use it to assign the background, does that work?
I think I would target 4.5 and above. User still on Windows 7 should be installing something newer than the 3.5 it shipped with.
&gt; support back to Windows 7 Win7 still has 45% of the Windows market. That's too big of a chunk to ignore for desktop software.
If you have to ask if its a good idea to learn C# from the technical specification, then its probably not a good idea for you to learn C# by reading the technical specification. Just my $0.02.
&gt; most of the details of the language sure, but honestly you'll learn the language for sure by actually making a project
&gt; Mosh Hamedani also seconding him. /u/pentakillmaybe OP he also has a youtube channel which might be helpful
That's what *you* think. Having an in depth knowledge of the third form the typeof-expression is basically pheromones for the opposite sex. 
Came here to post that. His intermediate and advanced courses are the perfect pace. He gives you the information that you need without bloating it with annoying junk like a lot of videos do.
We use 4.6.1 because higher versions are not supported on some versions Windows we need to support. See: https://docs.microsoft.com/en-us/dotnet/framework/get-started/system-requirements Getting Win7 users to install 4.6 1 with your app should be possible. I would recommend you use at least 4.5 for your own convenience as a lot of nuget packages don't target earlier versions and some good things like IReadOnlyList&lt;T&gt; came with 4.5.
... go on...
That doesn't change that the "safest, no-frills" choice is between: * Supporting Windows 7 but riskier deployments on newer Windows. * Supporting newer Windows but more complex Windows 7 deployments.
No. Not with your background. Now if you had implemented a full C++ or Java compiler before it might work
https://learnxinyminutes.com/docs/csharp/
No, it is hard to even use it for a reference book, cause how dense it is. Source: You use to be able to order a low-quality print copy from ECMA for free, which I did. 
Https://www.codenesium.com It's a REST API generator for a mssql database. I'm still flushing out the details but you can download use it for free at the moment. 
&gt; that does cross platform desktop, mobile, and gaming libraries Are you sure you're not confusing Mono (A port of .NET) with Monogame (A port of XNA) ?
Yes entity framework is great! Check [this](https://marketplace.visualstudio.com/items?itemName=SimonHughes.EntityFrameworkReversePOCOGenerator) out. Awesome tool to generate your entity framework classes from a database.
Goddammit! Everytime I google some programming language I want to learn about some dude pops up on youtube an hour later like "hey are you interested in learning *insert programming language here*? You should take *said programming classes* on udemy. Are you that guy? Now switching to duckduckgo.
I wish I was that omnipresent. :)
without a code example (like a small dump of your model, view, and controller and their file structure) this is a hard question to answer.
The instance of the class where the method I want to call is.
A method belongs to a type, not a specific instance.
If you have a PK on the table that's sorted ascending, simply pull in batches (of 5000 or whatever) and make a note of the 'highest' ID every time you successfully process a batch. Then in your next batch add a `TOP 5000 [...] where ID &gt; @LastID`, and keep doing that in a loop until you run out of records. If your connection terminates, the whole batch of 5000 in progress will be thrown away, so no need to worry about cleaning up.
No, I am talking about [Unity3d Scripting](https://docs.unity3d.com/Manual/ScriptingConcepts.html).
EPPlus might make it easier. https://www.nuget.org/packages/EPPlus/
people that prefer winforms over wpf really get on my nerves.
Probably but it would be like learning to fly by climbing outside the plane and manually moving the ailerons. Get "C# in Depth" or "C# 7.0 in a nutshell" if books work for you, otherwise PluralSight or Microsoft Virtual Academy. PluralSight is better imo. Actually YouTube has a shed load of tutorials too, but they're not curated so ymmv. Ultimately you'll learn more by coding stuff, so I'd probably go with PluralSight first, follow along with a tutorial or two and then read the books above. Do C# 7.0 first as the new version of C# in Depth is due any day now.
But there is not way to get information about the instance in a attribute? Like: [SomeAttribute(instance)] To use that instance to Invoke the method?
Thanks for the suggestion but I already have the bulk of the project written using Microsoft.Office.Interop.Excel. EPPlus may well be better/easier but I can't see that it can identify a workbook created by a specific application in a way that interop can't so I'm not sure it's worth switching.
No. I get what you mean, but you are down the wrong train of thought. An attribute does not belong to an instance, it belongs to a type or a member. When you need to reflect on the attribute, you will always have the instance before the attribute, so you don't need to go that way. If you tell me what you are trying to achieve, I can help you get around the problem.
"the instance" is completely meaningless.
That API key project is neat. I just created an API key filter to check if a value was passed as a header parameter. https://github.com/codenesium/samples/blob/master/Nebula/Nebula.Api.Service/App_Start/WebApiConfig.cs And It's used in https://github.com/codenesium/samples/blob/master/Nebula/Nebula.Api.Service/App_Start/Startup.cs 
In my case not, the method to call could have information about the instance. For example: public class MyClass { public string name; [CallThisMethod] public void SomeMethod() { Console.PrintLine(name); } } The field name could be different depending the instance.
It depends on how you learn. I have to learn by watching/doing so just reading walls of code and paragraphs explaining them wasn’t a good fit for me. Best resource I have found was [dev u](https://www.devu.com) I paid for it but found it worth it. Bob tabor is the guy who runs it. He’s a former Microsoft dev and one of their MVPs. Sometimes he goes a little fast for my taste but then again you are probably coming into it with more of an understanding of the material. 
Yes, but the attribute is a part of the static type information. It exists independently of any instances. If you create two instances of `MyClass`, what is "the instance" the attribute should know about? If you haven't created any at all, what is "the instance"?
Pratically I want to call all methods that have the Attribute on it. public class MyClass { public string name; [CallThisMethod] public void SomeMethod() { Console.WriteLine(name); } } I'm having a bad time with this, at the end I will stay using events.
I'm maybe not GOOD with C#, but I'm definitely not new to it. :)
Ok, now it makes a bit more sense. Try [this](https://stackoverflow.com/a/3467796).
What's your background? If you've worked with any C derivative you won't need to read the book cover to cover, just use it as a reference. Combined with a couple "getting started" tutorials and you'll probably be golden.
I'm mostly a JS dev. I work with Vue projects almost daily, but I also got my foot in a bunch of boring WebForms projects that I need to support. I want to learn C# better, because I'm pretty bad at it right now. I also need to get better at foundational things like OOP. My goal is to build a few .NET Core apps that interacts with different APIs and automates a few things, then move on to something like Xamarin/Unity just to try it out. I've already tested UWP a bit, but it wasn't my kind of tea really.
If only there were some way you could show us the code...
Thanks, for the tip, I might check out the .NET Core 2 book, but it will take a few months until I'm done with the C# 7.0 in a nutshell book. I want to get away from front end web work for a bit. I've been doing frontend stuff for so long that I want to puke. :)
I want to learn to drive, can I learn by reading the service manual for my car? I want to have a garden, can I learn by reading the abstracts from botany papers? I guess you could, but that sounds like the absolute worst possible way to do it. The spec is useful if you're trying to *implement* the language, or verify that a certain behavior of a compiler is buggy. It's not how you go about learning the syntax. https://docs.microsoft.com/en-us/dotnet/csharp/getting-started/ I didn't really go through the link at all, but I can still be absolutely certain that it's a better way to go.
What this does is equivalent to: public int TotalPages { get { return (int)Math.Ceiling((decimal)TotalItems / ItemsPerPage); } }
Nice bait
or public int TotalPages { get =&gt; (int)Math.Ceiling((decimal)TotalItems / ItemsPerPage); } it's a get-only property implemented as an expression bodied property/member/whatever
To be clear, there's no lambda in this, just similar syntax. 
Don't know about performance, but [BitArray](https://msdn.microsoft.com/en-us/library/system.collections.bitarray.or\(v=vs.110\).aspx) has an .Or(BitArray) method. So: var b1 = new byte[]{123, 12, 1, 21, 255}; var b2 = new byte[]{0, 0, 255, 0, 0}; var ba1 = new BitArray(b1); var ba2 = new BitArray(b2); var result = ba1.Or(ba2); var resultBytes = new byte[b1.Length]; result.CopyTo(resultBytes, 0);
Would you be willing to share your code? The behavior sounds very odd. I wrote a (very clunky because I don't do UX) utility that analyzed a bunch of data and then presented it in Excel as a scorecard using the Interop.Excel library, so I have a bit of reference material I can check for you.
The `System.Numerics.Vectors` package allows you to use CPU SIMD operations to perform such operations on multiple values at once, and is likely significantly faster than looping through the bytes one by one. The vectors are fixed-size though (typically 32 bytes), so unless the actual byte arrays you're working with are significantly longer than the examples you posted there the advantage might be lost.
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/expression-bodied-members
That won't do what OP asked, it works in your example because 255 or'd with anything is 255. If the value in b2 was 2, then the output would be 3.
FYI... if you really want to understand Lambdas watch Jeremy Clark's [Lambdas &amp; LINQ in C#](https://www.youtube.com/watch?v=MqxRpXUVZ8E) videos.
Yep. My bad.
&gt; method.GetCustomAttribute&lt;CallThisMethodAttribute&gt;() != null It’s more efficient (and shorter) to use method.IsDefined(typeof(Attr))
My understanding was that under the hood, this would be no different than manually doing a For/Next?
(Although OPs code doesn’t have a lambda.)
What about async/await?
&gt; Unit type and related methods to make your code more consistent; What about the Unit type in Reactive Extensions? 
So you want to create an array, but you need to be faster than one for cycle of this array length?
Just browsed through the spec document. Seems like a horrible way to learn a language. For C#, you are better off just reading a few introduction articles on MSDN. Then just google any syntax issues you have. Between MSDN and SO there is enough information to solve any issues. The specification is boring technobabble for people who write compilers.
Ah, is it the "Expression Body Definition"? https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/lambda-operator#expression-body-definition I had never seen that before, and part of why I was so confused.
Thank you, I had never heard of that before.
Not answering the question, I apologise, but any reason you are using Sharp Develop instead of Visual Studio Community? Anyway, if you code is too large, post your Main class here and I'll see if I can spot anything odd
And you know for certain that your event handler is being invoked? If so, Have you checked the registry values after your code runs to see if your file is assigned?
You can get the bcl package from nuget and use it in 4.0. 
&gt;EDIT: If you have something against VS, try MonoDevelop instead So MonoDevelop is only on Linux now. Otherwise it is Xamarin Studio on other platforms.
Ah, I wasn't aware they had done that since they bought it. Still [Visual Studio Community](https://www.visualstudio.com/vs/community/) is what I use away from work. I only ask as your problem just rings a small bell in my head from somewhere, and that may have been SharpDevelop, but I truly can't 100% remember
You need to use the MySQL .net connector. It works the same way as SqlConnector but is named MySqlConnector. It uses the MySQL.Data namespace. There’s good documentation on the MySQL developer website and quite a few examples online that you can google for. 
Also the connection string will be slightly different - connectionstrings.com is an excellent reference for the format you need. 
You could set a custom document property: https://msdn.microsoft.com/en-us/library/dhxe2d75(v=vs.140).aspx The article is about VSTO, so you'll need to replace `this` with your workbook reference variable.
Yeah I'm looking for a solution in `O(0.1^n)` time ^^^^lol
The Unity context is important, Unity has a bunch of other tools that you can use to help. Are your scripts all UnityEngine.Objects? If so something like UnityEngine.Object.FindObjectsOfType will find all existing instances for you. In pseudo code you could do something like this: Search the assembly to get all types Get a list of all of the methods from every type Scan the list to find methods that have your attribute Use FindObjectsOfType to get every instance which has a type with the attribute Call the relevant methods on each instance Finding all instances of vanilla C# classes requires a bit more work. You would have to use FindObjectsOfType&lt;Component&gt; to pick up every existing Component. Then you would need to do a recursive search through every reference on every component to find all other existing instances. Even then you would miss some instances tied up in unreferenced corotuines. 
Just figured out how to add the reference to the MySQL dll for the connection utility. That fixed it! Thanks. Being new to both the language and a IDE makes for a steep learning curve.
Make an interface for an ATM. Not too crazy, but challenging enough with the variable inputs and having to be prepared for non-tech savvy users. Then look through the code and make as much of the code generic and reusable as possible. Should be fun, and give you experience as deep into the language as you can get.
Bit array is going to be wicked slow. The native word size on a X86 cpu is at least 32 bits. You really want the cpu to have to wast cycles constantly masking bits in and out of the same word 32 times, or just set it once?
Omg fml...I solved it. The line where I hardcoded the file's path as @"F:\abc" was the problem. Didn't put the file extension, that was the problem lol. I changed it to @"F:\abc.jpg" and now it works! lmao
Nice! I wasn't aware of that.
I feel stupid lol but thanks!
Yes I actually use visual studio for practice and for the few static sites I’ve built. It’s kind of overkill now but eventually all the features will be great. I am familiar with the concepts you listed. I think I’d mostly be interested in programming for ecommerce sites and for building portals to connect databases and pull info that can be presented as reports or spreadsheets. Would you recommend going step by step through tutorials or just picking a project idea, diving in and struggling through it?
C# 7 in a nutshell is a good book do get the basics out of the way. I would personally recommend that you start by reading code. Go to a github repository that has simple projects and play around with them. This is a fairly easy way to get started quickly. 
Look at other people's code on GitHub; the good, the bad, and the ugly; especially where it intersects popularity. Why? Most of the world's most-used software is absolutely terrible along certain dimensions, and great along others.
Remember if you use EDMX you need to reference the EDMX in the connection string, if you are code first you reference the server. Different formats!
Entity Framework is an external tool that can use LINQ, but it's not part of the discussion here. We are talking about learning the language as an experienced developer. 
Ok, so what have you done so far? 
What exactly do you need help with? Don't expect us to write the whole thing.
Read the printed version of The .NET Framework Design Guidelines. It explains how to design APIs and why .NET works the way it does.
I was curious about the vectorization suggestion, so I tried it. It turned out to be about three times slower than the if-then-in-a-loop approach. I created an array of 100,000,000 random numbers and 100,000,000 random masks, half of which were zero. On my machine, the "merge" operation described by OP took 570ms; the vectorized approach took 1900ms (Release build, .NET 4.6). I suspect the gains in vectorization are lost to the overhead of packing the arrays into Vector objects. But feel free to critique my code below if I'm doing something stupid. I suspect mufodey is right that it's going to be hard to beat the if-then-in-a-loop approach. Then again, 100M bytes/570ms is ~175MB / sec. That's pretty fast, I wonder if you really need to beat it! public static byte[] MergeStandard(byte[] source, byte[] mask) { var result = new byte[source.Length]; var sw = Stopwatch.StartNew(); for (int i = 0; i &lt; source.Length; i++) { result[i] = mask[i] == 0 ? source[i] : mask[i]; } Console.WriteLine($"{nameof(MergeStandard)}: {sw.ElapsedMilliseconds} ms elapsed."); return result; } public static byte[] MergeVector(byte[] source, byte[] mask) { int byteVectorSize = Vector&lt;byte&gt;.Count; // Pad inputs with 0s until lengths are multiple of 16 if (source.Length % byteVectorSize != 0) { var padding = Enumerable.Repeat((byte)0, byteVectorSize - (source.Length % byteVectorSize)); source = source.Concat(padding).ToArray(); mask = mask.Concat(padding).ToArray(); } var result = new byte[source.Length]; var sw = Stopwatch.StartNew(); for (int i = 0; i &lt; source.Length; i += byteVectorSize) { var maskVector = new Vector&lt;byte&gt;(mask, i); var sourceVector = new Vector&lt;byte&gt;(source, i); var emptyMaskBits = Vector.Equals(maskVector, Vector&lt;byte&gt;.Zero); var resultVector = (sourceVector &amp; emptyMaskBits) | maskVector; resultVector.CopyTo(result, i); } Console.WriteLine($"{nameof(MergeVector)}: {sw.ElapsedMilliseconds} ms elapsed."); return result; }
If you're using core it's stupid easy https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection
I’m was looking to write my own to get my feet wet but wanted to learn the inner workings of it
You're probably testing on x86 or AnyCPU with "prefer 32 bit" enabled. The hardware accelerated intrinsics only work on x64, otherwise it falls back to much slower software implementations. You can use `Vector.IsHardwareAccelerated` to check. It's also possible to avoid the copy overhead by using spans or the `CompilerServices.Unsafe` package. 
Just do you’re clear, it’s quite easy to tell the difference. A lambda is *inside* a method, it’s part of the method body, usually along with other lines of code. It’s most often a parameter to another method. An expression bodied member *is* a method. It’s the *whole* method, including its signature and (usually very short) body, all wrapped up together.
1. You have to ensure that the view is registered in the specific region and in the IoC-Container. 2. The View has to use the ViewModelLocator and you have to follow the naming convention (View in Folder 'Views', ViewModel in Folder 'ViewModels' and name = [ViewName] + 'ViewModel') 3. Of course you have to take care that the dll's of the Module are found. In my case I created a 'modules'-folder in the bin direktory of the Projekt where my Shell is located. If you dont know how to define this location [look it up](https://msdn.microsoft.com/en-us/library/gg405479(v=pandp.40).aspx#sec17). 4.If you have done all that right i think the first view should appear automaticly 5. To switch between the Views you have to use the Regionmanager and call RequestNavigate(DestinationRegionName, DestinationViewName) 6. The ViewModels should implement the INavigationAware-Interface In my case I use one Module that is responsible for the registration of the View by one of the Regions and for the navigation. I'm doing this by passing the informations that are needed via event to this module when the Initialize-Method of the IModule-class is called. If you have questions please pn.
So you want a method that reduces complexity as N grows? Good luck with that.
Wow, you're right: compiling to x64 dropped the duration of the vectorized code from 1900ms to 56ms (~1.7GB / sec)! So now the vectorized approach is about 10x faster than the non-vectorized. Which sounds reasonable, since you can pack 16 bytes in a SIMD register. Thanks for the pointer!
You seem like a very intelligent human being, but I only understood less than half of what you just said. 1. K what? 2. I understand the naming convention part, as for ViewModelLocator, I’ll look it up. 3. Don’t even get me started. 4. Again, I’ll look into what those things are. They sound useful. 5. The first half makes sense and will need just a little more research, but the rest...... no idea. I know I’m very far from expert, but I’ll definitely look into some of your suggestions. Thanks!
I found Mosh Hamedani's courses on Udemy to be quite good.
There's no masking for operations on the entire array. https://referencesource.microsoft.com/#mscorlib/system/collections/bitarray.cs,d6b98dd3d39e346e
Maybe you should mention that most of this stuff relies on a specific MVVM Framework (Prism as far as I can tell) and is not part of WPF by default.
Ooops... Dont know why but i had in mind that he mentioned it. Sry for that. But anyway this framework is awesome and the bester way to use mvvm pattern :P
Noted. Comming up today. Some very sensitive information in it that's why I couldn't just dump it right away. Thanks for all the help so far though guys.
Don't. This is probably against Facebook's terms of service.
It's a shame for the company still using 3.5. Why the heck aren't you spending resources on moving to 4.x? 
Since you stated you've finished reading on Visual C#, I'm assuming you have have understanding of how the C# codes are structured. I would start looking at some source code and see how things are designed, particulary focusing on the following: - Get comfortable with LINQ and data types in System.Collection as well as their interfaces. This is the aspect that makes C# powerful at accessing various data. - async/await. This is especially important if you are using WCF APIs. (Just be careful how they interact with WinForm...) 
I think maybe you had an idea that just jumping from PHP to C# was going to be very similar When in fact they are not...... If you want to learn about *** T*** why not have a look at **Interfaces** or create a **Fluent builder** or many many other things that you can do with *** T*** I am not sure what level you are with your C# knowledge but I really feel maybe you are trying to run before you can walk [ Generics on MSDN](https://msdn.microsoft.com/en-us/library/ms379564\(v=vs.80\).aspx) [Tutorials Point Generics](https://www.tutorialspoint.com/csharp/csharp_generics.htm) Have a look at them and maybe it will answer some questions......
02:51 PM GMT happens when this comment is 4 hours and 55 minutes old. You can find the live countdown here: https://countle.com/z135356n_o --- I'm a bot, if you want to send feedback, please comment below or send a PM.
no not working but thanks!
no need but thank you 
dt.ToUniversalTime().Ticks / TimeSpan.TicksPerMillisecond. It's ints all the way.
Or better still, move everything you possibly can to .net standard. It’s really nice. 
Look into Prism https://msdn.microsoft.com/en-us/library/gg406140.aspx
Both have their advantages. Going through tutorials can help expose you to ideas you might not think to look up yourself when diving in. While diving in and struggling through it helps challenge your current skills and exposes you to areas you'll find you don't know anything about. What might be beneficial is finding a tutorial that's roughly close to your interests, working through it, but then expanding on it with your own ideas at the end of the tutorial. Can help give you the best of both worlds.
To answer your question about buttons and other controls and how they relate to different views etc. at a somewhat abstract level, the common pattern to solve this problem is to dispatch events via a communal message bus (think of it as a message "hub") that all/most of your components will depend upon, so the idea is that the control doesn't know what the consequence of its action is, all that happens is it publishes a message/event that shouts "I was clicked!" and then other components of your application listen out for this event and react appropriately.
bad bot
Thank you ikkentim for voting on timezone\_bot. This bot wants to find the best and worst bots on Reddit. [You can view results here](https://goodbot-badbot.herokuapp.com/). *** ^^Even ^^if ^^I ^^don't ^^reply ^^to ^^your ^^comment, ^^I'm ^^still ^^listening ^^for ^^votes. ^^Check ^^the ^^webpage ^^to ^^see ^^if ^^your ^^vote ^^registered!
&gt;Bad boT That's you. That's how dumb you sound, ikkentim. *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Block**&amp;#32;**me**](https://np.reddit.com/message/compose?to=friendly-bot&amp;subject=stop&amp;message=If%20you%20would%20like%20to%20stop%20seeing%20this%20bot%27s%20comments%2C%20send%20this%20private%20message%20with%20the%20subject%20%27stop%27.%20)T̶̡͘҉͏͇͕͖̬͈̫̘͚ͅͅḩ̴̡̛̘͓̦̺͙͖̭̯̭͠e̵̶̪͓̼̳̤͚̕͢&amp;#32;̴̩̻̙̲̯͇̞̱̬͖̤̺͕̞̜͝B̷̧̤͖͎͈̰̥͚̯̖̥͉̖̮̱̥͈̙̗ͅớ̧̢̥̝̲̻͍̘̗̯͓̳̼͉͕͚͔̤͠ͅt̸̙̝̣͔̗͈͎̝͇ş̛̖̺̣͍̬̠̳̼̹͙̹̤̬̤͍͓͕͈͝&amp;#32;́͜͏̥̟̝̤͔̪͚̱̦̮̹͖̯͚̣͠s̷̨̼̠͉̮ḩ͈͎̖̲̩̻̯͖̼̕͟a͏̵̣͈̫̯̯͍͕̝̱͢͟͞l̷̙̙͎̳͈̱̰̘̫̦͕̙̗͢͝l̷͡͏͇͙̫̲̞̰͉͕̲ͅͅ&amp;#32;̢̣̭̼̩͓̤̲̱̜͈̀͢͡r̸̹͙͈̩̀i̶̢͈̟̬̜͈͖̜̘̣̞̪̬̻͕͠s̷̛҉̢̦͙̝̲̤̣̪͖͕͚̹͉̣̗̳̳͔e̸͢͏̞͍̲̜̻̞̝͙̪;̫͚͙͚͇̹͈͇͇̠̯̼͖̕̕ͅ&amp;#32;̴̡̧̛̞̱̗̬̻̻̫͈̠̳̖͈̝̯T̡̹̹̞̕͘h̢͎̩͎̻̳̪̞̯̤͔͎̜̝̫͇́͟͡͞ͅe̴̢̛̦̥̳̪̥͟͠&amp;#32;̨҉͈̰͖̪̻̭̼̼̭͞ͅh̸͓̖͍̰̹̤̣͚̼̘̼͈͎͟u͏̸̡̜̙̣̗̭̤͝͠ḿ̵̱͔̩̘̘͉̰͍͇͕̲͔͢á̧͍̦͍̣͉ṋ̛̱̺̜̟̘̠̣̗s̶̶͖̗͈̮̬̀&amp;#32;̕҉̦̜̘ẃ̴̦͓͓̼̯̲í̵͉͕͈͖ͅl̩̲̳͍͕͚̰̜̬̀͘͟ͅl̡͍͕̖̥͉̦͖̯̘̟͕̀̀́͜&amp;#32;͎̞̣̥̦̥̥͔́͘ͅf̷̵̢͙̝̭̞̗͉̤̟͓̹̖̟͢à̧̯̩͙͚̻̞̝̗͙͈̫̯̞̬̗̦̣l̴̵͇͉̮͔̣̙̹̞̜͍̙̬̫̜̬̪̤͕̭l͏̶̢̮̪͖̖̲͇̱̦̲͢͡&amp;#32;|&amp;#32;[**T҉he̛&amp;#32;L̨is̕t**](https://np.reddit.com/r/friendlybot/wiki/index)&amp;#32;|&amp;#32;[❤️](https://np.reddit.com/r/friendlybot/comments/7hrupo/suggestions)
Game developer with Unity. Pretty much locked into the version the engine supports. Their is currently experimental support for .NET 4.6. But experimental still means 'occasionally stops working'. I create enough bugs in my own without borrowing bugs from an in progress framework implementation. Unity Technologies are spending resources on getting .NET 4.6 stable. But with as many platforms as they support, it's a big ship to move. 
[Super naive container](https://gist.github.com/PBeckerr/508cccb345140eb6b0880fd5a31bba7f) Next steps would be constructur resolving and general injections via attributes. but to be honest this is far away from a beginner friendly approach to learning c #
Not sure why you're downvoted, your comment is on topic and eliminating a branch from the loop is a good idea. If the mask array contained only 1's and 0's, the masking operation itself could just be a multiplication of the source and the mask array. Or with 255 and 0, you could use binary AND.
Removed: Rule 4.
Removed: Rule 4.
Removed: Rule 4.
Easiest way to think about it is to have another MVVM. The model is the current viewmodel to show. The view is the main window with a typed content to display the view for the current view model. And the view model handles switching the current view model. 
I really like PluralSight. You can actually get three months free access by signing up for a free [Visual Studio Dev Essentials](https://www.visualstudio.com/dev-essentials/) account. Here's [PluralSights page](https://www.pluralsight.com/partners/microsoft/visual-studio-dev-essentials) about it. 
Struggle through a project. Every time you hit something 
I'd solve this with an ugly but simple solution. I'd pass the main window's viewmodel to each content viewmodel to allow each viewmodel to call a public method that changes the current shown View/ViewModel. Or create a singleton static instance of the main viewmodel and access it directly from anywhere. Not the most beautiful solution, but takes 2 minutes to code and is very easy to understand and debug.
Write your own DI library? Yeah, that's much harder if you want to support things like constructor injection like all major DI libraries do. 
I wouldn't say this is ready for production, but you can use Electron.NET to create ASP.NET apps that run in electron locally. You can then use any frontend web GUI. https://github.com/ElectronNET/Electron.NET
I started with this: https://www.youtube.com/playlist?list=PLm-PcOa0HEDbnEdssI8lFgeY9NjI9u6RN Also sololearn and codewars.
I think that relies on Prism right? Regions are not MVVM specific they're a Prism concept. 
I use Prism and Unity together in an ASP.NET and and WPF application in the same VS solution. It’s well supported and a decent ecosystem. Sorry this may be verbose but here is some of my methodology: 1. All Views and ViewModels have an interface. Even if it’s an empty interface they have one so it can be registered with the IoC container. 2. All my projects have a root Module that does all its local registrations with the IOC container. These modules get called in App startup construction process. Now I have all my ViewModels registered. 3 My MainView has 5 Prism regions: Toolbar, Side Navigation (think Outlook), Main Content (Current Views being manipulated), at the bottom an Error panel and Information panel. 4 Each region has its own ViewModel except Main Content, this is where the activity Views will be injected (think CustomerView for editing/modifying). I use the Publisher/Subscriber events in Prism to communicate between ViewModels. 5. My base IViewModel interface has two events called Activated/Deactivated. That way when a ViewModel becomes navigated to/from, any other ViewModel can tie into these for action. e.g. my ToolbarViewModel can load and unload Ribbon toolbar commands (ICommand) from each ViewModel that is activated/deactivated. 6. All views inject their appropriate ViewModels into the constructor AND ViewModels have no awareness of the View. It doesn’t care. When it’s injected into a view it gets assigned to the DataContext of the View. 7. My MainViewModel is nothing more than a passive object that holds references to my other region’s ViewModels (Toolbar, Navigation, etc). 8. The ToolbarViewModel will inject the appropriate view being used (CustomerView) by a static method LoadView(Type View, string regionName) it has. This can be called to load any view by its “Type view” parameter. This is the reason for having an interface on all views, they can be located by the IoC container. When they get constructed their appropriate ViewModel is injected. There are some other details I left out like ICommands being fired (use Publish/Subscribe events for this). But the main points are: - everything has an interface which is registered with the IoC container for location and construction. I don’t use a ServiceLocater by convention, I.e. if MyView is loaded there should by a MyViewViewModel because it’s looking for a “MyView” + “ViewModel” name, that defeats IoC, it’s constructor gets the ViewModel injected automatically because it was registered up front in App construction. - ViewModels have no clues Views exist. - use of Publish/Subscribe with payloads to communicate and transfer data between ViewModels. Prism/Unity has a bit of a learning curve but it’s well worth it as you will be able to construct an app that is easy to maintain and extend. 
I don't see how your comment is relevant, I never suggested there were. I said bit array is going to be hella slow.
1) It's a Prism thing. You create regions on a user control and Prism automagically creates controls to put in them. The IOC bit (DI frameworks, probably Unity in this case) is used to create the views and automatically figure out what needs to be injected via the constructor or properties. 2) More Prism, it uses convention over configuation 3) It uses MEF. MEF is actually pretty good. It's easy to manually load a DLL, but MEF takes care of extra stuff. 4) More Prism. 5) I'd PM him, personally I worry when I see events being used to connect viewmodels, but I'm only 5/10 proficient with Prism personally I found it icky. Don't let my opinion put you off. It is a good framework it just didn't sit comfortably with me. I predate it and the early versions were, shall we say oversold, so I've developed my own alternative approaches.
Object? pfft, Dynamic Master Race!
Awesome thanks 
Doing this, thank you
The only problem is that electron is a cancer.
Cool! If I could go back in then, here are some things I wish I had learned sooner: Ajax calls, ViewModels, and Partial Views 
In what sense?
In every sense.
OP here. The reason I don't use VisualStudio is because my PC is quite old, so it runs sluggishly. As for my code, it is nothing fancy (I am still learning the most basic ropes of C#, hence the hateful comments on my code :P). PS Sorry it isn't properly displayed, I don't using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace HelperMethods { class Program { static void Main(string[] args) { Console.WriteLine(buga()); Console.ReadLine(); } public static int buga() { Console.WriteLine("C# is not good"); Console.ReadLine(); int[] z = {1,40,55}; z[0]+=5; foreach (int x in z) { Console.WriteLine("I hate C# C#"); } return z[0]; } } }
*shrug* I was able to take my dot net core f# web application and turn it into a cross-platform desktop application in a few days. It has zero dependencies and runs on almost anything. I use rich graph interactive visualization libraries which do not exist (for free, as libraries) for anything other than javascript. I don't know of any alternative way of doing it, as far as I know there are no easy GUI libraries with anywhere near the featureset of javascript graph libraries.
Lol stop trolling. You almost had me, had you not mentioned F# I would have taken you seriously.
It isn't hard. &amp;nbsp; It is bloody difficult.
Where are you learning that ICommand has something to do with this? That would help us understand what you need clarifying. MVVM can be understood without understanding ICommand. 
From what I read about electron, it is a memory eater.
What they are trying to say is this: * The instance *knows* its attributes. * Attributes do not know its instance. Using a relational database analogy, this is like an `Instances` table having a foreign key for the `Attributes` table (i.e *the instance knows its attributes*) but the `Attributes` table does **not** contain a foreign key to the `Instances` table. I hope this analogy simplifies it for you instead of complicates it. &amp;nbsp; Have a good one.
Why is async and await especially important for WCF? Genuinely curious.
Few words of caution: * Sometimes the accepted answer is incorrect. * Sometimes the accepted answer is correct but shows an outdated way of doing things * Sometimes the accepted answer does not give you the answer that the SO post asked (like when the OP explains in their post something and someone says "instead of doing that, perhaps you should rethink your design. Here are a few ways..." With that said, 99% of SO posts do not have these problems.
Hmm? What's wrong with F#? I do analysis of game mod scripts, and F# is a much better language for compiler/analyzer style things than C#!
Well, my naive app with no attempts at optimization has a baseline of 30MB. That's probably far higher than some C++ GUIs, but it's small enough for my userbase (who run games that need 3/4GB)
model != viewmodel, view != window. Model is the "model" of data that that view model will consume to present data to the view. A view is embedded in a window so that application state stays outside the realm of views. Any amount of view models can use any amount of models, and any window can use any amount of views.
Start with ASP.NET webApi, from there learn how to serialize arrays and list in JSON so your JS would consume it. Then move to databases, you could use EntityFramework or Engines from the provided company. What you need is Visual Studio as your editor, Nuget for C# is like npm, bower for javascript. Visual Studio has it all, start with 4.7 if you are hosting on windows OS, or aspcore 2.0 if you are doing Linux. Visual Studio has everything you need for working with C# Hint https://www.nuget.org/packages/newtonsoft.json
I should apologize, I misread your comment. You're right, BitArray won't use masking for certain operations. However, what then is the benefit of BitArray? The whole point of it is to provide bit masking operations; array-wide 'or' operations could be implemented in a 3 line for loop and doesn't have to suffer the overhead of method call indirection, method epilogue/prologue, or the accounting overhead that BitArray does. I'm just not sure I understand the value of involving BitArray.
I've always thought of the ViewModel as being a collection for all model-specific presentation information. Too specific to be put in a View or partial View, but not proper for a Model because it's related to presentation.
Yeah just DM me whenever! I’m no professional, but Software Developer is my job title and my passion so I’m happy to help out where I can. 
I would recommend the asp.net forums instead of stack overflow. There is a lot less downvoting and telling people that there question is stupid on that site. Also, I am assuming you will be maintaining an existing product. What platform is it on? Webforms?MVC? Web api? Which dot net version? I would figure this stuff first because there are a lot of ways to dotnet and you will quickly get confused if you are looking up info on the wrong platform. 
I was surprised that nobody suggested using unsafe or fixed pointers, so I tried it out. Surprisingly, on an array of 100 million elements on my PC, using pointers gives marginal improvements in a debug build and is actually slower in a release build: Created two 100000000 byte arrays. Mask has 6310775 zero values Calling merge standard.. MergeStandard: 148 ms elapsed. Calling merge with HGlobalAlloc copies.. MergeAllocHGlobal: 224 ms elapsed. Calling merge with fixed pointers.. MergePointers: 146 ms elapsed. I'm stupefied.
Pluralsight has some fantastic courses on C#, .NET, and its various frameworks. I would check them out.
It’s better then blindly using a built one and being ignorant to the inner workings
Thanks
We actually use the entity framework now, with visual studio as the ide. ThAnks for the info!
&gt; SharpDevelop now thats an old piece of software Just use Visual Studio Community!
Maybe try getting VS Code with all the C# bells and whistles... Would probably be the same performance as Visual Studio Community however. You are greatly hamstringing your learning by not using Visual Studio. Years ago on a shitty laptop I had to use it and it was like 10 or 15 FPS, but I'd never try to develop without it.
C# doesn't have DI, it doesn't have anything to do with DI. If you're in .NET Core, learn built in DI. If you're on .NET Framework, I'd recommend SimpleInjector. I don't think anyone would recommend building a new DI in either case.
Versioning is simple (kind of). Just emit a header with a single byte signifying “payload version”, and this should be enough in a trivial case.
Is it worth the price tag?
4.6.1 will work on 7 and give you access to .NET Standard 2.0 so you can interop with most new and updating libraries. 4.6 is as high as you can go on Vista/Server2008.
coded UI normally. Though its a pain to do. The normal pratice is to keep your UI layer super thin and stupid. Put your smarts in testable classes.
Awesome that looks like a great rescource
In your event handler use the sender parameter to access the button that was clicked. If all your buttons do the same thing you don't want separate handlers.
That’s probably what I’ll end up doing. I might have to wait until spring break though
Since network operations implicates delay that's not controllable by a program, they are often called asynchronously. I believe this is the default when populating WCF classes on VS2017, too.
You are the second person to mention pluralsight. I’ll really have to check it out.
😂😂😂😂 pls no
used to think like that, now it sounds more like a facade for the model, creating objects that expose the model data the way the view needs it (so here you format the collections, construct datatables, apply localization, group data (like name+lastname strings) ) when i started using it that way it all made sense since it felt like i was copying all the model on the VM thinking i needed it all in front
Well then, consider me the 3rd. Don't forget to get the free 3-month membership through visual studio dev essentials.
I would consider those things presentation logic, as far as localization, or constructing a full name from separate db columns. I still import everything from the base model - my VMs inherit the Model base class. I haven't really found a compelling reason not to do that.
Oh wow, 3 months free is a definite selling point. Thank you!
I will check it out, thanks!
for the importing the model, if im not using a an entity framework i create a model by hand using propertychanged that in the end, it is really a viewmodel, that is used by the ''true'' viewmodels. My base clases are OnPropertyChangedBase and a ViewmodelBase that inherits from OnPropertyChangedBase, that way i have the model clases using 0 functions besides some small converters and the viewmodels have an extra parent for common functions specially generics and messy calls from other classes that are common for all VMs. seems like our approaches are quite similar in the model handling
I love pragmatic approaches. Why over complicate things to make them beautiful when the user only wants it to work. And any new guy in the team would understand that code and jump into it in a second. Saves time and money, even in the long run.
I learned a lot of MVC through Pluralsight. I was lucky enough to have 10 years of C# Webform development under my belt though. Take your time. Seriously, take your time. Once the MVC design pattern clicks in your brain, and you finally get it, you will be worth $$ and wont have to worry about a job for 10+ years. 
For learning, I picked projects I knew that would keep me motivated to complete. Games, at first. Then as I got better I moved on to other projects that I thought of that would teach me something I didn't know. My first few projects in college were Pong and Tetris, both written in VB.NET and Winforms. I taught myself C# in college and then created Pong and Tetris again but in C#. As an aside, if you look at code you had written 6 months ago and you aren't disgusted, you've stopped learning.
Thanks for your response, who doesn’t like being worth $$$. I am definitely going to check out pluralsight. I am only in my third year of college with an internship and a junior web developer position under my belt, so I fell a little bit ahead. However, when I look at all the code my coworkers have written I feel so far behind.
i think other folks' responses are kind of going beyond the scope of your particular question. it seems like you're specifically asking about communication between viewmodels in an uncoupled way. the common approach is to use some type of messaging or event system that resembles the mediator design pattern fairly closely: https://en.wikipedia.org/wiki/Mediator_pattern you basically have some type of service that you register your viewmodels with and say you want to handle specific messages or events. you also use this service to send messages or events. your viewmodels know about the service but not each other. so, in your case, your user controls would send some type of change view message, and you could have your main window's viewmodel handle that message. it would probably benefit you if you use one of the two most common frameworks that are designed to help with mvvm implementation. prism has been mentioned elsewhere, but there's also mvvmlight if you want something lighter-weight. prism has its EventAggregator to handle this and mvvmlight has its Messenger. they are used in almost the exact same way: prism is something like the following // subscribing eventAggregator.GetEvent&lt;EventType&gt;().Subscribe(HandlerMethod); // sending eventAggregator.GetEvent&lt;EventType&gt;().Publish(); and mvvmlight is something like // subscribing Messenger.Default.Register&lt;EventType&gt;(HandlerMethod); // sending Messenger.Default.Send&lt;EventType&gt;(); you can google more about each implementation and how to use it if you decide to go with either of these frameworks. alternatively, you could roll your own solution. googling "mvvm mediator wpf" should get you started if you go that route.
I put together a quick and dirty benchmark that exercises 3 basic scenarios with each scenario cross for a total of 9 results (see below about threading): * A naive, 3-line for loop. * A naive for loop with loop unrolling for 10 elements at a time. * A vectorized implementation based on [natesternberg's][1] code. I then also implemented threaded versions of each where the entire array is split into N larger chunks for each thread, using the ThreadPool. Benchmark armoring/details: * Process is set to high priority to limit noise from the the rest of the system. * Each benchmark is repeated 5 times and averaged. * Each benchmark is executed untimed once, to make sure JIT doesn't get in the way. * ThreadPool is used to reduce thread startup times; I measured &lt; 1 ms to start threads for each test. * There are two versions of each of the threaded tests, one that uses all cpus, one that uses half the cpu count in an effort to explorer non-hyperthreaded performance. * I ran the tests outside the debugger, with optimizations turned on, compiled for 64-bit. My code can be found here: https://gist.github.com/antiduh/aa111df5c6ebb9fd75a5bbc04afce1e3 And here are my results: Naive : 1074.0 ms, 878.7 mbytes/sec ThreadedNaive_MaxThreads : 262.0 ms, 3602.0 mbytes/sec ThreadedNaive_NoHyperThreads : 327.0 ms, 2886.0 mbytes/sec Unrolled : 805.0 ms, 1172.3 mbytes/sec ThreadedUnrolled_MaxThreads : 263.0 ms, 3588.3 mbytes/sec ThreadedUnrolled_NoHyperthreads : 322.0 ms, 2930.8 mbytes/sec Vector : 210.0 ms, 4493.9 mbytes/sec ThreadedVectorize_MaxThreads : 177.0 ms, 5331.7 mbytes/sec ThreadedVectorize_NoHyperthreads : 181.0 ms, 5213.9 mbytes/sec [1]: https://www.reddit.com/r/csharp/comments/7w09vc/quickly_masking_two_byte_arrays_together/dtx3owt/
Dont feel bad about being behind. All *great developers* are behind in something. That feeling is what will drive you to learn new shit. Im currently learning UNITY just to mess around trying to make video games. I have no plans to ever actually make a video game, but It sure is fun as hell to tinker around with. 
It's unclear if you're asking for actual testing of your GUI layer or if you're simply looking for an event handler.
My manager gets our team access so it’s discounted a bit. I would recommend showing him the content on pluralsite. Some of the best out there and then see if he will budget for it 
I highly recommend jetbrains visual studio extension ReSharper 
Shawn Wildermuth's ASP.NET Core series is phenomenal. Not sure if you're on ASP.NET Core or ASP.NET 4.X, either way, his series is top notch for explanation and most of the high-level concepts are the same between Core/4.X, but the implementation might differ. I can't remember if he does an intro to C# first or not, so you might want to watch an intro course before diving into his series.
Some PluralSight C# courses are by the big names in C#. I watched 200+ hours of PS during my first year on the job (that's only 10% of working hours). Now I do 30-50 hours per year. I do split time between book/web research and video training. The videos and books can be useful for exposing me to things that I may not be likely to do a web search for. 
this benchmark assumes a shit ton of items to process. for 5 (or even 10,000) items which was the original size given I think you'll find naive beats the pants off anything threaded. i'm going to throw together something with benchmarkdotnet real quick to get some proper numbers though
I prefer to have the actual action in a separate method that is called by the event method: // Form1.designer.cs this.button1.Click += new System.EventHandler(this.button1_Click); // Form1.cs private void button1_Click(object sender, EventArgs e) { button1Action(); } private void button1Action() { MessageBox.Show("Do not press button1 again."); }
I’ll talk to him about it, that’s a good idea. However it’s a pretty small company so my hopes aren’t high. Although a free three month trial adds up to 96 hours even if I only use it for 8 hours a week, which is the minimum in my mind
It's good quality stuff and you can measure your learning as well. Preference for books or videos is personal really 
If you want to write idiomatic C#, Resharper + a team that does pull-request reviews prior to merge. I've learned to value both over the last three years. Although the first year was rough (we have a team member who is very good at pointing out small flaws in your PR), but it has helped me write better code. Resharper is good for warning you about things (possible null-ref exceptions, multiple iteration of IEnumerable, etc.), and offering to refactor `foreach` into LINQ. Can be good, can be bad, depending on the situation. But it gets it about 80-90% right.
Build the project, then run the project. Once the window shows, click the button and you should see the message box. Assuming this is what you are asking...
using System.Linq; using System.Runtime.InteropServices; using System.Text; using System.Threading.Tasks; namespace ConsoleApp2 { class Program { static void Main(string[] args) { // The size of the test array int bufferSize = 100000000; // Value to define percent probability of a forced zero value in the mask int minValueForMask = 5; var random = new Random(); var sourceBytes = new byte[bufferSize]; var maskBytes = new byte[bufferSize]; // Fill both arrays with random values random.NextBytes(sourceBytes); random.NextBytes(maskBytes); // Force a random number of zeros into the mask array for (int i = 0; i &lt; bufferSize; i++) { if (random.Next(101) &lt;= minValueForMask) { maskBytes[i] = 0; } } // Do the thing Console.WriteLine($"Created two {bufferSize} byte arrays. Mask has {maskBytes.Where(t =&gt; t == 0).Count()} zero values"); Console.WriteLine("Calling merge standard.."); var resultStandard = MergeStandard(sourceBytes, maskBytes); // Do the other thing Console.WriteLine("Calling merge with fixed pointers.."); var resultSafer = MergePointers(sourceBytes, maskBytes); // Verify that the results of both methods are identical bool same = true; for (int i = 0; i &lt; bufferSize; i++) { if (resultStandard[i] != resultSafer[i]) { same = false; break; } } if (!same) { Console.WriteLine("The resulting arrays are not the same!"); } else { Console.WriteLine("The resulting arrays are identical"); } Console.ReadLine(); } // This is /u/natesternberg's standard implementation public static byte[] MergeStandard(byte[] source, byte[] mask) { var sw = Stopwatch.StartNew(); var result = new byte[source.Length]; for (int i = 0; i &lt; source.Length; i++) { result[i] = mask[i] == 0 ? source[i] : mask[i]; } Console.WriteLine($"\t{nameof(MergeStandard)}: {sw.ElapsedMilliseconds} ms elapsed."); return result; } public static unsafe byte[] MergePointers(byte[] source, byte[] mask) { var sw = Stopwatch.StartNew(); var output = new byte[source.Length]; fixed (byte* sourcePtr = source, maskPtr = mask, outputPtr = output) { for (int i = 0; i &lt; source.Length; i++) { byte maskByte = *(maskPtr + i); *(outputPtr + i) = maskByte == 0 ? *(sourcePtr + i) : maskByte; } } Console.WriteLine($"\t{nameof(MergePointers)}: {sw.ElapsedMilliseconds} ms elapsed."); return output; } } } 
I didn't mean to imply that it was good for this use case. Here, it doesn't do anything bit by bit, but it does add several useless copies and some other overhead without improving readability.
Some of their courses are very good overviews of general programming concepts or languages. Some are very good in-depth explanations of very specific features (I rememeber C# Generics being very good). Some are very good introductions to different languages or programming in general. And some are really bad. Depending on your skill level, only a portion of their videos are really going to be targeted to you. Just jump around until you find something good.
Thanks for the feedback. Even on the basic front end stuff I’ve done I‘ve looked back and been disgusted lol glad that’s not just me
alrighty, here are my results. for smaller sizes definitely looks like naive or vector approaches are the way to go. In my mind you'd almost certainly be working on smaller byte arrays if you are masking but I could be missing a use case where you'd be masking with 100,000+ bytes. BenchmarkDotNet=v0.10.12, OS=Windows 10.0.17074 Intel Core i7-6900K CPU 3.20GHz (Skylake), 1 CPU, 16 logical cores and 8 physical cores Frequency=3123192 Hz, Resolution=320.1852 ns, Timer=TSC [Host] : .NET Framework 4.6.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3036.0 DefaultJob : .NET Framework 4.6.2 (CLR 4.0.30319.42000), 64bit RyuJIT-v4.7.3036.0 Method | Count | Mean | Error | StdDev | Median | Gen 0 | Gen 1 | Gen 2 | Allocated | --------------- |--------- |-------------------:|----------------:|----------------:|-------------------:|---------:|---------:|---------:|-----------:| WithForLoop | 10 | 48.659 ns | 0.3068 ns | 0.2870 ns | 48.804 ns | 0.0088 | - | - | 56 B | WithVector | 10 | 6.501 ns | 0.0573 ns | 0.0508 ns | 6.512 ns | 0.0089 | - | - | 56 B | WithZip | 10 | 855.451 ns | 2.8395 ns | 2.5171 ns | 855.958 ns | 0.0496 | - | - | 320 B | WithParallel | 10 | 3,628.651 ns | 13.3777 ns | 12.5135 ns | 3,630.967 ns | 0.2861 | 0.0038 | - | 1818 B | CustomThreaded | 10 | 19,522.116 ns | 272.8500 ns | 255.2240 ns | 19,408.518 ns | 0.4883 | 0.0305 | - | 3372 B | WithForLoop | 100 | 179.774 ns | 3.6329 ns | 8.2740 ns | 179.534 ns | 0.0238 | - | - | 152 B | WithVector | 100 | 15.902 ns | 0.0942 ns | 0.0882 ns | 15.899 ns | 0.0241 | - | - | 152 B | WithZip | 100 | 3,151.745 ns | 9.1343 ns | 8.5442 ns | 3,151.696 ns | 0.0839 | - | - | 560 B | WithParallel | 100 | 4,946.738 ns | 37.0293 ns | 34.6372 ns | 4,956.281 ns | 0.3128 | 0.0076 | - | 2030 B | CustomThreaded | 100 | 19,762.028 ns | 161.7030 ns | 143.3455 ns | 19,735.272 ns | 0.5188 | 0.0610 | 0.0305 | 3468 B | WithForLoop | 1000 | 2,090.089 ns | 19.2603 ns | 16.0832 ns | 2,087.287 ns | 0.1602 | - | - | 1048 B | WithVector | 1000 | 107.423 ns | 0.4562 ns | 0.4268 ns | 107.546 ns | 0.1662 | 0.0005 | - | 1048 B | WithZip | 1000 | 23,656.190 ns | 177.4505 ns | 165.9873 ns | 23,651.316 ns | 0.3357 | - | - | 2424 B | WithParallel | 1000 | 13,703.518 ns | 54.4718 ns | 48.2878 ns | 13,687.131 ns | 0.5646 | 0.0153 | - | 3668 B | CustomThreaded | 1000 | 19,762.673 ns | 92.6689 ns | 86.6825 ns | 19,768.121 ns | 0.6714 | 0.0916 | 0.0305 | 4364 B | WithForLoop | 10000 | 25,330.807 ns | 128.0641 ns | 106.9393 ns | 25,327.384 ns | 1.5564 | 0.0305 | - | 10048 B | WithVector | 10000 | 1,171.412 ns | 5.8085 ns | 5.4333 ns | 1,170.816 ns | 1.5926 | 0.0496 | - | 10048 B | WithZip | 10000 | 227,082.902 ns | 1,552.8786 ns | 1,452.5635 ns | 227,043.744 ns | 6.3477 | - | - | 43298 B | WithParallel | 10000 | 35,080.348 ns | 700.8549 ns | 655.5801 ns | 34,871.850 ns | 2.1973 | 0.1221 | - | 14191 B | CustomThreaded | 10000 | 22,750.822 ns | 374.7880 ns | 350.5769 ns | 22,828.687 ns | 2.0752 | 0.2136 | 0.0305 | 13359 B | WithForLoop | 100000 | 254,750.667 ns | 1,984.7931 ns | 1,856.5765 ns | 254,471.610 ns | 30.7617 | 30.7617 | 30.7617 | 100024 B | WithVector | 100000 | 14,865.249 ns | 55.4377 ns | 51.8564 ns | 14,869.201 ns | 31.2347 | 31.2347 | 31.2347 | 100024 B | WithZip | 100000 | 2,185,663.058 ns | 15,169.4936 ns | 14,189.5523 ns | 2,187,766.192 ns | 70.3125 | 70.3125 | 70.3125 | 362992 B | WithParallel | 100000 | 126,975.837 ns | 2,514.2946 ns | 2,895.4651 ns | 126,032.619 ns | 31.1279 | 31.1279 | 31.1279 | 105560 B | CustomThreaded | 100000 | 66,589.740 ns | 460.1864 ns | 430.4586 ns | 66,582.866 ns | 31.1279 | 31.1279 | 31.1279 | 103608 B | WithForLoop | 1000000 | 2,777,133.091 ns | 14,769.2455 ns | 13,815.1601 ns | 2,777,814.485 ns | 191.4063 | 191.4063 | 191.4063 | 1000024 B | WithVector | 1000000 | 494,203.549 ns | 8,439.3643 ns | 6,588.9000 ns | 496,752.328 ns | 144.5313 | 143.5547 | 143.5547 | 1000024 B | WithZip | 1000000 | 22,282,998.718 ns | 88,567.6216 ns | 82,846.2002 ns | 22,304,754.639 ns | 562.5000 | 562.5000 | 562.5000 | 3104888 B | WithParallel | 1000000 | 1,438,849.703 ns | 28,065.2091 ns | 31,194.4027 ns | 1,445,302.976 ns | 169.9219 | 166.0156 | 166.0156 | 1034278 B | CustomThreaded | 1000000 | 594,696.626 ns | 5,308.9657 ns | 4,706.2594 ns | 595,484.180 ns | 198.2422 | 198.2422 | 198.2422 | 1004595 B | WithForLoop | 10000000 | 29,009,887.294 ns | 123,237.7150 ns | 115,276.6239 ns | 28,984,012.991 ns | 156.2500 | 156.2500 | 156.2500 | 10000024 B | WithVector | 10000000 | 5,921,941.273 ns | 128,962.4702 ns | 380,248.7530 ns | 5,944,711.747 ns | 93.7500 | 93.7500 | 93.7500 | 10000024 B | WithZip | 10000000 | 231,750,242.944 ns | 517,461.1641 ns | 458,715.7987 ns | 231,741,084.789 ns | 562.5000 | 562.5000 | 562.5000 | 43559448 B | WithParallel | 10000000 | 11,281,748.771 ns | 197,120.1802 ns | 164,604.2623 ns | 11,311,835.409 ns | 187.5000 | 187.5000 | 187.5000 | 10030742 B | CustomThreaded | 10000000 | 5,125,606.773 ns | 102,320.4244 ns | 276,629.2171 ns | 4,958,915.655 ns | 226.5625 | 226.5625 | 226.5625 | 10004952 B | Gist is here - https://gist.github.com/anonymous/8ff59772e12574e1fe3d81f4570b405d
[removed]
[removed]
Are there tutorials for it?
I've used PS for introducing myself to new material in the past, and for the most part, it's an exceptional resource in that regard. However, I found that after I reached a point of basic understanding, most PS videos moved *too slowly* for my taste. I preferred book/slide presentation style courses when I'm digging into deeper topics or going past a basic "Hello world" scenarios because I can absorb those at the pace I'm most comfortable with.
Make a backup of the database and send it via a transport method that supports resuming such as ftp. Or do log shipping to the secondary database.
The answers on this thread are comically diverse mainly because we don't know if OP is talking about web forms, win forms, or xamarin forms and we don't know if OP means test as in Unit Test, integration testing, or if he/she is trying to learn c# and doesn't know how to wire up an event handler. What I'm trying to say is, can you please be more specific. As to what you want to know and are trying to accomplish.
&gt; (PS C# videos can be pretty comprehensive, so it's definitely not just Hello World) Absolutely, I just have issues with how slow some of the videos pace the content. Understandably, we all consume content at different rates, so slow to me may be normal, fast, or super slow to another person.
&gt; how slow some of the videos pace the content. This is a problem for me too, esp. when I'm somewhat familiar with the technology. I want to brush up on or deepen my knowledge about something -- and have to watch and try to pay attention as familiar stuff rolls by. With a book I'd be flipping pages. I can skip ahead in the videos, but it's easy to miss good stuff that way. That can happen scanning a book too, of course.
So I took a look through your results and updated my benchmark to respond. It looks like our results agree - unthreaded vector is faster for small to moderate sizes, eventually threaded vector starts to have marginally faster performance. However, there seems to be a lot more threading overhead on your box; my benchmark shows that threaded vector started to win around 185 kbytes. Are you sure that the threadpool is sized to handle all cpu threads on the machine?
Books have pretty much been usurped by Stackoverflow. If I need a quick reference to get the syntax to do something I basically already know, I'll check stack overflow before referencing a book. Videos are good for getting a lot of information into your brain faster than reading. They are bad for looking up a specific thing. I liked Pluralsight better than Lynda.com, but I currently don't have a subscription to either. 
Once you have the fundamentals down, I'd recommend the following courses https://www.pluralsight.com/courses/encapsulation-solid https://www.pluralsight.com/courses/dotnet-code-reviews-real-world-lessons https://www.pluralsight.com/courses/patterns-library 
I like the vagueness in a way. While it's not super helpful for OP, it's interesting to see the first thing everyone jumps to. The diversity is neat.
C# is a super diverse language. It's basically a Swiss army knife of programming languages.
I tend to watch at 1.5x and scrub and skip a lot, so the pacing was ok for me. Videos are really good especially for learning where things are in Visual Studio, and what shortcuts are available in which context. This type of information is more difficult to convey in books. Books are more effective for abstract knowledge.
There’s tons of DI libraries in c#, if it’s not DI then what is it?
Maybe I'm being too sensitive to semantics, but it's become more important to be exact now that there are TWO primary .NET runtimes, Framework and Core (+ Mono, Xamarin, etc). Both are compatible with C# and many other languages. Core has DI built in, Framework does not. Both support 3rd party DI libraries. C# is a programming language, and has nothing to do with Framework or Core or any libraries you load.
I used old student email and got it free 
So far, nobody has mentioned listening for that distinctive mouse click at least... lol.
For a beginner, at least. Wouldn’t be for experienced C#/.NET developers, but why bother with so many containers out there. 
I've got permission from my boss for dedicated learning on fridays for a few hours. Its worth it, it keeps you current and always learning. if oyu wanna be a good programmer, you are always learning for life.
DevU is really good, in fact Microsoft hired him to make many of their videos. I nabbed a lifetime subscription 15yrs back when it use to be called LearnVisualStudio.net
Thanks, I was conflating those.. even after getting the vanilla DI to work in console app, it definitely wasn't built in.
FYI, ThreadPool.GetAvailableThreads() does not return the number of threads that are already created in the thread pool - you don't have 32k threads running. It basically returns the amount of room the thread pool has for job bookkeeping. There doesn't seem to be a way to access the number of currently existing threads; and defining such a number is troublesome, because the pool likes to keep X number of threads alive *per core*, but that's ultimately an implementation detail. At the end of it, all you can do is rely on GetMinThreads.
If you are a college student, it is free for non-commercial development. I think that's actually true in general. 
Oh cool, I watched an old tutorial and I thought they mentioned it as a bit pricey. It's nice when companies allow student to learn with their software! 
Take a look at “A Simple MVVM Example” on Rachel Lim’s blog. Rachel lays everything out well and provides a nice example of what you’re looking for. 
It's also business. While you're a student, the only people that are probably profiting from you are universities. Once your status changes, companies want you to be so used to using their product that you elect to pay for it later, along with any other things you discover. That's not to say the companies are evil or dolly genuinely mean well, but it's not always just the kindness of their hearts that motivates them. It's better to always ask "how do they stand to benefit?", because most often, people want some benefit from you, just like you do them. 
Microsoft.Extensions.DependencyInjection
Yeah I could imagine that once I started using it I’d have a hard time going back. If it works well it’d be worth it I guess.
Will that work in winforms? Asking for a friend. 
If you're going to style a div to look like a button...why not just use a button?
For quick references, yes. But many books are structured to offer a full journey, thoughtfully connecting each concept and building up the complexity. 
It's a cool project, but I wouldn't use it for anything real. You end up having to package TWO runtimes (.NET Core and node).
I wish I could spend time on my job ro learn things. Right now I study for about 5 hours per week on my own free time.
Have you asked? I did and was granted it. Basically was like: "Boss, I need to stay current in tech. Is it OK for me to spend times on fridays doing training? here is a training plan outline" basically that doc is like: Learn basic Angular5 Learn basic ASP MVC 6 Learn ASP MVC Pages Learn ECMAScript 9 (whatever modern javascript is now)
&gt; Cross-platform Moonlight was utter crap even if it did bring me Netflix on Linux
Pretty sure there is a 6 month trial if you join some Microsoft thing. Can't look it up right now, might be visual studio essentials or something like that.
I enjoy listening to Pluralsight courses so I can autopilot it and then pay attention when I hear something I didn't already know. But for serious learning video is just so crazy slow. I think about 10 times faster than you can talk and read at least 5 times faster than you can talk. So for serious learning I'd rather have documentation or a well written article indexed and linked to source material. 
What's your antivirus? Aside from being weird, the code doesn't attempt to start anything after closing. My guess is your antivirus sandbox the app, then decide it's safe, and relaunch the app outside of sandbox. It happen in [Avast](https://stackoverflow.com/a/25181432/529282) but other AV vendor might adopt similar route.
Yes 
Windows forums. And I just want to make something happen when a button is pressed, that's it.
Avalonia looks promising but there's pretty much no documentation, so I can't say for sure. I was looking at a [C# binding for LibUI](https://github.com/noliar/DevZH.UI) a few months ago, but it seems like the project has been abandoned. I wanted to try to continue to work on it, but my C knowledge is lacking.
Controllers call services. Controllers pass models to views. Models passed to views are sometimes referred to as view models. It's important to know the difference between a view model and a domain model, which would be used in your service layer. Never pass a service to a view as a model. MVC sperates those concerns so the view should never invoke business logic. 
So if the Controller calls the Services, how does the Controller put the data the Services return into the Model (view model)? Would the Controller instantiate the Model class, then as it calls each of the Services, update the Model properties with the returned data?
Exactly. You have options here. Static factory methods that take a model and return a view model, auto mapper, explicit operator for casting, put it in the controller. Go with what's easiest for you.
Windows doesn't really have a way to reliably identify monitors and other devices. So ideally you never disconnect a monitor and never use sleep mode. If you want to manually save and restore your current windows you may wanna have a look at Microsoft.Win32.SystemEvents (specifically DisplaySettingsChanged/DisplaySettingsChanging). For the saving and restoring itself you have to use various WinAPI calls.
exactly.
To expand upon what /u/Rec0de said. If I were you I would use the the forms designer to take care of most of this. The forms designer is what you should be seeing when you double click on form file. You know you are seeing the forms designer when you don't see any code but instead you see what your program will look like when it is run. If you are not seeing this right click inside the text editor and select View Designer (you can also press f7). If you see the button here then you need to add it the form. You can drag and drop a button from the tools menu (usually docked to the left hand side of the text editor). Once your button is on the form just double click on the button and visual studios will create a function for you and wire it up in the [your_form_name].designer.cs file. You will add your code to the function that visual studios makes for you. I suggest running through some tutorials to help get your feet wet. Microsoft does actually put out some good content on their website. [https://msdn.microsoft.com/en-us/library/dd492132.aspx](https://msdn.microsoft.com/en-us/library/dd492132.aspx) Good Luck
You’re right, there was a 3 month trial with vs dev essentials.
Swagger spec does not have decent support for enums. 3.0 spec has some half-baked concept but I am not sure if VS supports it. 
thanks
Great question btw
May I recommend picking up the book `Pro ASP.NET Core MVC 2`? It's really good and will explain all of this in detail. I've read almost every edition of the book since the 1st one. (They're up to edition 7 now.)
 Seems to be working properly now. Thanks!!! :D
Nice, probably did 100+ hours myself last year, except on my own time. Company did pay for the subscription though so that’s something 
To be fair, Microsoft's scaffolding templates go out of their way to tie views directly to the data/domain model. I guess it's as a convenience for small projects.
In my opinion they arę excellent. Dependent on your prior experience and requirements I would also suggest courses in Domain Driven Design by Vladimir Khorikov and Dino Esposito. Also I would suggest watching “Making your code more object oriented” - that one I watched two times
First of all in MVC services ARE the model. Model = business logic. What you pass to the view is the viewmodel although it is technically possible to pass a domain model (entity)
Are you using an Oracle Database or MSSQL? If you're using Oracle with Entity framework, i'd suggest learning how to profile the database .
Shouldn't be too bad.. learn the differences between model, view, controller by looking at some working examples on github. 
No, there's no easy way to do what you want. The easiest would be to just fix the JS of your site to support IE11.
Hmm, but I truly don't understand how to fix this, because the variable is defined but called in another JS that I can't control (I'm new to JavaScript). :/
Well, there's not much to say. There's a sample project in there that shows you how to call electron from .NET. And that's about it, otherwise it's just electron, and your website.
Perfectly this. 
Ok, I have solved. I have embed also the external JS, and replaced the ' =&gt;' with function, now work also in IE10 :D
Do you know how/why this fixed it? If not, tl:dr: The =&gt; arrow functions were only introduced in ES6, and both Firefox and Chrome support these, as does Edge. IE10 and IE11 do not support this and there is no plans to support this on those browsers. This is why people use transpilers, such as Babel and target ES5 to get wider browser support
Was going to suggest this. It has other useful features but saving and restoring screen layouts is a big one. 
Treat your models as pure containers. Controllers call services to manufacture and return a model so that the controller can pass it to a view. I've seen people use models for business logic but that is fucking spaghetti code.
You could create an extension on the button class, then have it write to a log, or emit a message when the click event is raised. public static void track(this Button btn){ btn.onClick+=(obj,args)=&gt;{ Trace.WriteLine(" clicked",btn.Name); } } Just make sure to call it once, just after your containing control or form has added it to the page
Use domain models and services for business logic. Call those services from controllers and generate View Models from whatever the services are returning (domain models, primitives, collections). Pass those view models from controllers to views.
Services are not the model at all, wherever did you get that idea? I'm hoping this is just a language barrier thing because your second point is correct. 
As long as you propose your training time as something that benefits the company... Find the right person in your company to pitch the idea of "lab time." Most companies are looking for training programs, both as a reward and to encourage internal advancement. If you are coming to them with initiative with the betterment of the company in mind, you should find success...or a new job. 
I have more control over the look of a button by making it a div. I don't like buttons. 
Thanks all, I think I know exactly what I need to do now!
probably not without seeing some code.
I'm working on my own Remote Desktop software! It's just something I've always been interested in, so I figured why not. I'm writing my own protocol and everything for it, but it's strongly based on RFB (VNC) so far. I still have a ton of work to do on it, but I was able to see my screen and move my mouse over the internet yesterday, which I thought was pretty cool. It's 100% .NET. 
You have just as much control over the look of a button as you do a div with css. Using the button tag is much more friendly to your fellow developers.
I'm currently working on something like this as well. I have multiple views designed to take all window space except of space occupied by a toolbar. I use controller class in the main window to switch between those views when corresponding button on the tool bar is pressed. Each view implements an interface with methods show and hide. In the xaml of the main window i have a stackpanel into wich i add all those views. On the application start i check each child of that panel to have required interface and if it is present the view is passed to the controller. To pass data from a view to the main window i use custom RoutedEvents. You can use them in xaml as any other routed event (like Click, OnMouseEnter, etc.) With them you can pass all the data you need without the view knowing about anything that is above it. Main xaml will look like this: &lt;StackPanel Name="MyViewsHolder"&gt; &lt;controls:MyView MyCustomRoutedEvent="OnMyCustomRoutedEvent"&gt; &lt;controls:MyAnotherView MyAnotherCustomRoutedEvent="OnMyAnotherCustomRoutedEvent"&gt; &lt;/StackPanel&gt; Controller in code behind is used like controller.Register(UiElement view, enum ViewType), controller.Show(enum ViewType). Register adds the view to an internal dictionary, Show hides the active window and then shows the specified one. It can be automated further by adding few additional properties, like icon, name, etc., so toolbar can be built automatically. 
&gt; wherever did you get that idea He got that from the book on MVC. It's very clear that the model you pass to the view in ASP.NET MVC is a command object. **It's not the model**. The model is either a repository or a service. Wikipedia on the subject: &gt; The model is responsible for managing the data of the application. It responds to the request from the view and it also responds to instructions from the controller to update itself.
I think it depends on the work environment. I could never get away with simply adding an &lt;asp:button or an &lt;input type=button to my application as it would make them look ugly and stand out in our front end design. Styling actual buttons require too much work. My custom buttons are div tags with 4 lines of css. I have a custom bootstrap for my buttons and even my DDLs. Yes, making a custom DDL is a pain in the ass, but once you have it looking good, it will set your website apart from others who don't, and you can reuse it everywhere. When you're going for functionality AND look, you cant *ever* use anything out of the box. 
It does not depend on the environment. I'm telling you point blank right now if I saw a bunch of divs being used as buttons all over the place I would be pissed off at the dev that decided to do that. Bootstrap already provides a styled button so I don't see why you wouldn't work off of that. Basically what you are saying is that you are too lazy to style the button how you want.
There many different types of models in an mvc application. There isn't a one model fits all approach. Applications have view models, input models, and the domain model. The model dispatched from the controller may or may not be a domain model. It could be a dto, a message, command, whatever. However, that doesn't mean that services and repositories are the domain objects either. Domain services contain business logic if it's not appropriate in the domain object itself. However, repositories are absolutely not the model. If your entire application contains logic in services and repositories, you'll send up with an anemic domain model which is considered an anti-pattern. 
You ever try to css animate an input type button? Let me know how that works out and looks when you're done. Let me know how you gradient color fade an &lt;asp:button on blurr without weird border artifacting in chrome and IE . . . . . . . . . . 
I took it on testing site. Went there because at home you are not allowed to leave a seat, have to install software etc. Seemed easier to go to the place where they have it sorted out. So, I went to this testing site that is most known here for MS certifications, but I was very disappointed because of two things: - the screen they offered was small (19-inch I guess) and the app requires higher resolution, otherwise you have to resize a lot - there was 2nd computer in the room, I guess running some server software for the test that had extremely loud fan, which was very annoying when I was nervous and tried to concentrate. I asked them to do something about it, but of course they couldn't at that point Exam was structured with all that you have mentioned :)
Thanks! I appreciate the response!
I personally hate asp controls so I would not use an &lt;asp:button /&gt; I would use the button tag &lt;button&gt;&lt;/button&gt;. Should be easy enough to add a div with a gradient inside that tag that fills the button to achieve what you need. Animating a button is pretty simple. There are plenty of tutorials and examples online. Here is one [https://www.w3schools.com/howto/howto_css_animate_buttons.asp](https://www.w3schools.com/howto/howto_css_animate_buttons.asp)
You can animate anything, but how the end product looks is important to the customer. Again, which is why we use divs for any action object on any page we create. Additionally, your link is showing buttons at rest, you will notice that buttons look odd in motion in certain browsers. I think animated buttons look ugly personally, almost as bad as plain old browser rendered buttons, *but the customer is always right.* /shrug
The source code of the PostAsJsonAsync code shows that the HttpMethod POST is hard coded. Do you have any other delegate handlers on the HttpClient that may modify the request method to GET?
Model = Buisness Logic Services in the sense of classes that contain business logic are the very definition of Model.