It's not ready to compete against VS quite yet, but JetBrains is working hard on Project Rider. Give it some time and it will likely be pretty comparable.
Well that's how we will do it once we rebuild. Albeit the site specific css will still be in a file. But that's how I envision it happening, as we can render the site specific file second, if we need anything over written or extra classes. This was just built ages ago and hindsight is always 20/20
This, a million times.
A better programmer than me once told me "if you don't look at your code from a year ago and find anything you would do differently, you're doing something wrong."
it's an extension to VS that helps with some syntax on c#
Stupid question. If its pay what you want what are the restrictions? How are they making money?
My guess would be the service side of the engines. Multiplayer networking and things of that nature, at least if they're following Unity3d's lead. 
Anyone else having issues creating an account?
I was asking what is the difference between open-source product and open-source project, closed source is not relevant.
.net stack is very popular in seattle! shadow of microsoft and such
Sorry, I'll admit that I didn't realize he was differentiating the two and thought you were curious about open vs closed source. My fault. 
But does sb.ToString(); actually create a copy of the underlying string in memory? &gt;Performing a "StringBuilder.ToString" operation will give you access to the underlying standard string instance. This means that you can easily execute the following: This wording from the article seems to imply it doesn't, but doesn't explicitly say either way.
Visual Studio blows away every IDE I've used for every language I've programmed in over the past 10 years.
was originally creating it for a computer auditing/ethical hacking class, should probably change that though.
Mono supports both AOT and JIT (although JIT is most common) 
Klondike supports this out of the box as long as you install the required files.
I deploy stuff on Mono but I go out of my way and use VS in a VM. Open source C# IDEs are not nearly as good.
They'll just open a store selling stuff other people have made like untity3d and unreal engine.
Because the joke only works on hardware and not on software.
No mention of Amazon Lumberyard? It's basically a forked CryEngine, also free. 
And on what version? Unity runs on an horrible old inefficient Mono version.
&gt; It's Atom with No, it's not. It's based on Electron, which is the same foundation for Atom.
Well, if the program was good enough you could probably predict the winning numbers. If you manage can you bundle it into Nuget and drop me a PM? Thanks n
got a less intrusive client framework to use for easy model binding ?
Visual Studio is a nice luxury SUV, while SharpDevelop is a hobbyist-built SUV. Both theoretically can be used to reach the same goal, but the experience you're getting with Visual Studio is far better. Sure, VS installation can be glitchy, bloated and all, but unless you have 1GB RAM, there's no real benefit from using SharpDevelop. I peeked at your post history and it appears you're looking for new laptop. Unless you somehow end up with an Atom, any new x64 laptop available on the market should run VS easily.
You can undo a ReSharper magic turn-500-loc-into-1-loc refactor, click on the little hammer to the left of it or select the code and hit Alt+Enter. I would personally keep code more readable. For the sake of making it small and super fancy pants, refactoring can always be done.
Nice. Right when all the crytek assets are also "Pay what you want" https://www.humblebundle.com/cryengine-bundle
No. They paste an item url, app fetches items data and stores it into the database along with the users desired price. Every 20 minutes price gets fetched and compared to the desired price and then sends an email when desired price is below the current item price.
Back then when someone got a new piece of hardware, especially something which is extremely powerfull compared to the recommended specs for Crysis and is actually capable of running Crysis at the highest quality with the best performance, at least one person asks "But will it run crysis?". Trying to do the same with software removes the point in the joke.
From the other side of things - what compelling reasons are there to use anything beside VS? The cost is zero, and it's bad ass.
To you, maybe. To me, and others, it extends it in a humorous way. Also, hardware is not usable without software.
Please stop breaking the rules: &gt; Rule 6: No spam of tools/companies/advertisements for financial gain You know damn well that your PVS spam is not welcome.
VsVim rocks! :D
Although I'm hoping with OmniSharp and it's support by a bunch of microsoft developers that vim will become a valid replacement for visual studio.
Removed: Rule 6.
Cross platform. I have a Mac so I don't necessarily want to spin up my virtual machine every time. 
I get stuck in the Account Details page. When I try again it tells me that the user name and email address already exist. If I try to log in I get a "Username or Password are wrong" message. The "Forgot password?" doesn't help either. I tried Firefox and Chrome. I'm running out of email addresses to try. :(
For the record the linq code compiles to roughly this: public class Foo //original class here { public string Method() //original method here { Foo.ClosureOfDr dr = new Foo.ClosureOfDr(); dr.dr = ... //whatever this was foreach (var dataValue in Enumerable.Select( Enumerable.Select( Enumerable.Where( Enumerable.Select( Enumerable.Cast&lt;DataColumn&gt;( (IEnumerable) this.BaseData.Columns ), new Func&lt;DataColumn, Anon0&lt;DataColumn, ColumnDefinitionItem&gt;&gt;((object) this, this.CreateAnon0) ), Foo.FCache.WhereMethodCache ?? (Foo.FCache.WhereMethodCache = new Func&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, bool&gt;((object) Foo.FCache.Instance, Foo.FCache.InstanceWhereMethod)) ), new Func&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt;&gt;((object) ClosureOfDr, dr.CreateAnon1) ), Foo.FCache.SelectMethodCache ?? (Foo.FCache.SelectMethodCache = new Func&lt;Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt;, string&gt;((object) Foo.FCache.Instance, Foo.FCache.Instance.SelectMethod)) ) ) data.Append(dataValue); ... } private Anon0&lt;DataColumn, ColumnDefinitionItem&gt; CreateAnon0(DataColumn dc) { Foo.ClosureOfDc state = new Foo.ClosureOfDc(); state.dc = dc; return new Anon0&lt;DataColumn, ColumnDefinitionItem&gt;(state.dc, this.ColumnDefinition.Find(new Predicate&lt;ColumnDefinitionItem&gt;((object) state, state.FindPredicate))); } private sealed class ClosureOfDc { public DataColumn dc; internal bool FindPredicate(ColumnDefinitionItem x) { return x.Name == this.dc.ColumnName; } } private sealed class ClosureOfDr { public IDataReader dr; internal Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt; CreateAnon1(Anon0&lt;DataColumn, ColumnDefinitionItem&gt; transp0) { return new Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt;(param0, this.dr[param0.dc.ColumnName].ToString()); } } private sealed class FCache { public static readonly Foo.FCache Instance; public static Func&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, bool&gt; WhereMethodCache; public static Func&lt;Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt;, string&gt; SelectMethodCache; static FCache() { Foo.FCache.Instance = new Foo.FCache(); } public FCache() { } internal bool WhereMethod(Anon0&lt;DataColumn, ColumnDefinitionItem&gt; transp0) { return param0.columnData != null; } internal string SelectMethod(Anon1&lt;Anon0&lt;DataColumn, ColumnDefinitionItem&gt;, string&gt; __h__TransparentIdentifier1) { if (!(param0.transp0.columnData.Name == "NUMBER")) return param0.dataValue.PadRight(param0.transp0.columnData.Length, ' '); return param0.dataValue.PadLeft(param0.transp0.columnData.Length, '0'); } } } internal sealed class Anon0&lt;T1, T2&gt; { private readonly T1 _dc; private readonly T2 _columnData; public T1 dc { get { return _dc; } } public T2 columnData { get { return _columnData; } } public Anon0(T1 dc, T2 columnData) { _dc = dc; _columnData = columnData; } } internal sealed class Anon1&lt;T1, T2&gt; { private readonly T1 _transp0; private readonly T2 _dataValue; public T1 transp0 { get { return _transp0; } } public T2 dataValue { get { return _dataValue; } } public Anon1(T1 transp0, T2 dataValue) { _transp0 = param0; _dataValue = dataValue; } } (in release mode; in debug it might be more) I've renamed variables and removed a bunch of code that doesn't affect runtime in this case. The linq code here is significantly heavier than an iterative method.
This is good information! I'm going to have a look at it and see how I feel. But I'm still keeping the bottle of scotch handy, page scraping is terrible work.
So if I understand correctly you want the user to be able to write any query that operates on ClassA.ClassB.Items right? 
yeah - that sounds about right now that I think on it.
It is neglected for good reason. Nice writeup, though. 
AOT is only used for ios in Unity iirc.
No. Just no.
I don't know why there is so much hate for dynamic - it's one of the more useful features of C#. IMO, late binding (which is essentially what dynamic is) is an essential language feature. It's not good practice to use everywhere, but it makes certain kinds of things much easier. Two use cases off the top of my head: 1. Calling client methods from a server using SignalR. You can't have compiler type checking when calling JS methods, so SignalR makes it easier by just allowing you to type them out naturally as if they were functions. See here: http://www.asp.net/signalr/overview/getting-started/tutorial-getting-started-with-signalr 2. Returning a one-off query from an ORM like Dapper that you don't want to create a typed object for. Contrary to some opinions, we don't need 100 typed objects for 100 tiny queries that returns one or two properties. If your code is backed up by unit tests (and it is, right?) then you can have the best of both worlds - use dynamic sparingly and still have some post-compile protection. As a side note, this is a great writeup and I enjoyed reading it. I would encourage you to post it to Medium, CodeProject, etc. in the future. It's gonna get lost in Reddit pretty quickly. EDIT: I'm getting downvotes for suggesting that something that shouldn't be used often might have uses. That's really helpful, guys. Try to keep a more open mind.
While it does have it's uses. Keep in mind that the dynamic keyword is basically "let's turn compile-time errors into run-time errors".
&gt; I don't know why there is so much hate for dynamic [...] It's not good practice to use everywhere The answer to your quandary is in your third sentence, though you've certainly understated it. dynamic is great for what it's for: interop code and other usages that require late-binding. Using it more widely is a fantastic way to have a massive headache. &gt; we don't need 100 typed objects for 100 tiny queries that returns one or two properties. No, we don't. If there's only one property, you should return the property, instead. If there's only a very few, you could use a Tuple. 
&gt;Using it more widely is a fantastic way to have a massive headache. Yes, that's why I say it should be used *sparingly*. I don't know how I could have made it any clearer to someone who read the entire comment. &gt;If there's only one property, you should return the property, instead. Good point. &gt;If there's only a very few, you could use a Tuple Tuples in C# make code less readable IMO. Calling tuple.Item1, .Item2, etc. obfuscates the purpose of the code.
For most of those cases you really should use a regular dynamic language instead of using `dynamic` in C#. The point of using C# is that is has type safety. Once you start to allow non-typesafe patterns where they are not needed you start to erode away the benefits of using C#. `dynamic` has a very small number of (IMHO) uses in C#. 1) Interop with dynamic languages 2) covering up for the lack of generics in lambdas 3) multi-dispatch This first is the main reason it exists. The second allows for: // cons :: a -&gt; b -&gt; (a -&gt; b -&gt; t) -&gt; t // cons a b = \x -&gt; x a b static Func&lt;Func&lt;TA, TB, dynamic&gt;, dynamic&gt; Cons&lt;TA, TB&gt;(TA a, TB b) { return f=&gt;f(a,b); } // NOTE: you can not write: // static Func&lt;Func&lt;TA, TB, TC&gt;, TC&gt; Cons&lt;TA, TB&gt;(TA a, TB b) // { // return f =&gt; f(a, b); // } // Because TC would be not be bound to a type at the point of defining Cons // even tho the type of TC is not needed. What we need is a form of generic // lambda, which can currently only be achieved by using dynamic. // car :: ((a -&gt; b -&gt; a) -&gt; t) -&gt; t // car x = x $ \a b -&gt; a static TA Car&lt;TA, TB&gt;(Func&lt;Func&lt;TA, TB, dynamic&gt;, dynamic&gt; f) { return f((a, b) =&gt; a); } // cdr :: ((a -&gt; b -&gt; b) -&gt; t) -&gt; t // cdr x = x $ \a b -&gt; b static TB Cdr&lt;TA, TB&gt;(Func&lt;Func&lt;TA, TB, dynamic&gt;, dynamic&gt; f) { return f((a, b) =&gt; b); } And the third allows for concrete dispatch vs declaration type dispatch: interface IA {}; interface IB {}; sealed class A1 : IA{}; sealed class A2 : IA{}; sealed class B1 : IB{}; sealed class B2 : IB{}; void F(A1 a, B1 b) { ... } void F(A2 a, B1 b) { ... } void F(A1 a, B2 b) { ... } void F(A2 a, B2 b) { ... } void G(IA a, IB b) { F((dynamic)a,(dynamic)b); // calls one of the above Fs via overload based on the concrete types of a and b } All three have runtime costs that need to be carefully considered. The second and third can usually be accomplished without using the `dynamic` keyword, but involve maintaining more code (i.e. using explicit types instead of generics where generic generics are needed, and manually implementing multi-dimensional vtables). 
Because it's obvious, at least to most people. With dynamic you move away from compile time type safety and shift everything to runtime. For what? To gain some features that you can better and more cleaner solve with other means? Good trade off. It makes it harder to understand the code in general, because it's not enough anymore to see the definition of the type - you also need to follow up the complete way on how it's constructed and how it might have been manipulated. You can't take advantage of intellisense anymore either. dynamic was introduced to allow easier interop, especially with COM libraries. Not to make C# more like JavaScript. You're just obfuscating your code.
&gt; I don't know how I could have made it any clearer to someone who read the entire comment. Maybe by not starting with &gt; I don't know why there is so much hate for dynamic In re: Tuples: no, they aren't great, but if explicit and anonymous types are out, I'd personally prefer a Tuple to a dynamic.
&gt; interop code and other usages that require late-binding. Using it more widely is a fantastic way to have a massive headache. To elaborate, late-binding is often used as a crutch for poor OO design. That is not a suitable use case for "dynamic". 
What I do is, in the code where I want to start the thread, I call InitializeBackgroundWorker. StartProcess is just a method that handles the logic. When it ends, the thread ends. private void InitializeBackgroundWorker() { Thread thread = new Thread(StartProcess); thread.IsBackground = true; thread.Start(); }
Don't regret! I am fascinated by the abilities of programming languages, and I like to explore them for its own sake. FWIW, I upvoted the post before I left my comment. I think it's terrifying, but I also think it's cool. I also like python as a language, although it doesn't even have the ability to do static typing, so I'm not opposed to dynamic typing in general. I do think that it's awkward in C# though, since the language is built around the idea that each variable declaration must include type information, so it will never be as natural as it is in javascript, python, or ruby.
Another use I've come across is that every once in a while explicit late binding is nice when adapting around poor APIs: namespace ThirdParty.Acme { public class ClassA { public string Bar { get; set; } } public class ClassB { public string Bar { get; set; } } public class ClassC { public string Bar { get; set; } } } ... my code: object thing = thirdparty.Component; string bar; if (thing is ClassA) { bar = ((ClassA)thing).Bar; } else if (thing is ClassB) {... vs object thing = thirdparty.Component; string bar = ((dynamic)thing).Bar; The runtime cost involved of this (and of your 3rd example) are surprisingly minimal. Another form: public void F(ClassA x) { FImpl(x); } public void F(ClassB x) { FImpl(x); } public void F(ClassC x) { FImpl(x); } private void FImpl(dynamic x) { ... }
Can you expand on this? Been looking into setting up a symbol server using this, but haven't had much time to research it the various options. Love the JetBrains team for R#, etc. What's a tl;dr of the basic setup for a medium-size dev team? (&lt;50)
Yeah, exactly. This is one of those "OK R#, show me how YOU would do it", followed by "Hmm, interesting...TIL [something]", and finally CTRL-Z. Given that most shops are strained for resources, there's little point it making the dev who's maintaining things hate your guts. Which is precisely what would happen here.
no no and no. Do not make dynamic part of your normal development. Dynamic is useful in very specific situations (in my experience mainly integration with APIs and libraries that would require reams of code to hook into otherwise), anything other than that and you are taking a shortcut that saves time now and will cost you 5x later when you have trouble tracing the source of your bad data.
ASP.net 5 RC1 is supported and a production ready release. I can't imagine many breaking changes moving forward to ASP.NET Core 1 that would make the fundamentals he's giving invalid or irrelevant. The fundamentals of how it's going to work are there. It's time to start spinning up the knowledge bases on it.
&gt; COM is so low on the list (not sure why Because its higher on the list than you think. COM is incredibly common in the automation space if you are using 3rd party APIs for any kind of hardware access. It's so damn pervasive in some cases we started writing our own drivers to get away from them. Also had to do it with Gemfire's cache engine a few years back as their only .NET integration available was with a C dll bridged via COM. Every time I think I will never touch COM again, it pops up. 
That's only at the application boundary though, shallow code where errors become quickly apparent. People have had to create specific tooling to make up for this shortcoming (Resharper does this) and there's even packages that others use to revamp MVC so it doesn't need things like your example (Using expressions to select controllers and actions) Dynamic and reflection are only meant to for the few use cases they're absolutely needed, and even then only with care. A necessary evil.
Is there a reason you won't just use the non-UI code of the desktop application with your web front end?
No, startSearch is only ran whenever i press the button. The flow is like this PressButton - Start Threading - thread pulls out info from a huge file - and then creates a new User Control with the info and adds to a list - Tries to display it in a StockPanel and fails 
&gt; Dynamic is actually faster than reflection and the boxing/unboxing of value type parameters. That doesn't sound right. Reflection sure, that can be slow. But value types still need to be boxed when using an ExpandoObject.
Well it is trying to call the GUI with if (spSongPanel.Dispatcher.CheckAccess()) addToList(); else spSongPanel.Dispatcher.Invoke(new Action(addToList)); } And the code you posted unfortunatly does not work in WPF, i've tried it since its the same as my WinForm ver. There is no "Invoke" in WPF apperently. //Edit i tried adding the items outside of the thread after it was done, still same issue. Tried adding a static item to the panel outside the thread, works aswell as inside the thread. So it seems like its the UserControls i create thats causing the problem? If thats the case, how would i go about to Invoke these?
&gt; I gave an example on how to do this in a clean way. Yea, but you can't write articles for CS journals that way. You need to make it complicated and call it "memoization".
What's the advantage of doing this compared to inheriting a class?
Resharper seems to have a built-in symbol server that allows you to navigate through the source.
Be careful what you wish for: https://github.com/dotnet/roslyn/issues/9795 
Wouldn't it be easier to just use the Reddit api for that?
I've been looking forward to this update and it's looking really great.
I would clean it up a bit foreach (DataColumn dc in BaseData.Columns) { var columnData = ColumnDefinition.Find(x =&gt; x.Name == dc.ColumnName); if (columnData == null) continue; var dataValue = dr[dc.ColumnName].ToString(); if (columnData.Name == "NUMBER") dataValue = dataValue.PadLeft(columnData.Length, '0')); else dataValue = dataValue.PadRight(columnData.Length, ' ')); data.Append(dataValue); } * Remove redundant braces (we're not programming in vi anymore) * Use char literals (faster and less verbose) *** I don't like the LINQ version because not only is it harder to read, but performance is going to be worse. The anonymous functions needed by LINQ have a non-trivial cost overhead compared to foreach. I'll eat the cost, but only if it pays for itself in terms of readability.
Obsolete compared to what? Knockout is a great framework. Perfect example of why libraries are better then frameworks.
Yeah, I just got it myself - about to try it. But for sure in the immediate future, they'll have something worth mentioning (Project Rider, that is).
Sure. ☺ 
Would be interesting to see EF7 (EFCore) characteristics on that chart
Use Visual Studio Code.
If you are currently time traveling from the 80s then yes we are from the future as far as you are concerned.
Removed. Sorry, this article was already submitted a week ago: https://www.reddit.com/r/csharp/comments/49djw3/automapper_and_the_static_class_debate/
I am the owner of a Asus Transformer T100HA (Atom inside). VS 2015 Community with R# and more runs great so far.
Last I heard angular was deprecating itself. React looks like a horrible mess of combining UI and code/data. Ember seems fairly identical. &gt;although when building a SPA from scratch do in fact want a full framework Why? I want something lightweight and replaceable for that inevitable day that it get's replaced (angular).
Yes this one: Intel Quad-Core Cherry Trail x5-Z8500 1.44GHz (Turbo up to 2.24GHz). I own this [model](http://www.amazon.com/Transformer-T100HA-C4-GR-10-1-inch-Touchscreen-Laptop/dp/B014854RGK).
Howdy; to put this in a nutshell, there are: * things that *use* the database, such as repositories, and * things that are actually stored in the database, mapped via EF, like Stock itself The first category can be registered in Autofac and have constructor dependencies and so-on. The second category are best thought of as plain-old-data. A Stock instance might accept its symbol as a constructor parameter, but that'd be passed in directly, not injected by an IoC container. HTH!
Databinding is infinitely better. When implemented correctly, you won't have to worry about any of the intricacies involved in the code behind the UI.
Did you ever resolve the issue? I'm having the exact same problem.
The pdfs loaded on the page are a bit cumbersome is it not possible to use Html instead?
Yes I agree, but the idea was that users will be able to download them. Maybe I should do this HTML and add a download link like I did with other implementations. Thanks! 
i typed my fuckin response and accidentally hit the back button on my awful mouse twice now third times the charm.... &gt;Windows apps have NEVER looked consistent &gt;Windows has/had been massively overtaken on the UI/UX front my web &amp; mobile &gt;Most enterprise apps in the past have looked CRAP definitely agree with this. i dont understand how WPF developers are the ones that are falling behind. ive tried to learn web ui development and IMO 80% of it is disorganized and stupid. i hate it. But somehow web developers are able to create some of the most stunning interfaces ive ever seen. Theres a lot of things that annoy me about WPF/XAML, but It seems like with how robust it is we have no excuse at this point for still shitting out generic, bland, outdated looking enterprise apps. Good on ya for all the work youve put in on your MD toolkit!
This was originally Paradox right?
Yes, it was
damn, I knew there would be a more appropriate subreddit somewhere. Thanks for the explanation, very helpful indeed!, I think I understand it now.
Is it really so hard for people to recognize a JOIN!!??? Also, some minor improvements. From my head : string FormatColumnValue(object value, string colName, int length) { // I'm sure some normal use of String.Format could be used here instead of this hackery var dataValue = value.ToString(); if (columnData.Name == "NUMBER") { return dataValue.PadLeft(columnData.Length, '0')); } else { return dataValue.PadRight(columnData.Length, ' ')); } } void doStuff() { var values = Enumerable .Join(ColumnDefinition, BaseData.Columns, colDef=&gt;colDef.Name, dc=&gt;dc.ColumnName, (colDef, dc)=&gt;new {colDef, dc}) .Select(x=&gt;FormatColumnValue(dr[x.dc.ColumnName], x.colDef.Name, x.ColDef.Lenght)); foreach(var dataValue in values) data.Append(dataValue); // even better if there is Append that takes enumerable of values, would remove the foreach }
Get you! Moody.
i dont know that much about it, but youll need to compile the c++ ode/sketch ino that you want you upload first. To do this, check out the avr-gcc compiler along with avrdude and once its compiled, upload it to the unit using SerialPort communication. https://www.arduino.cc/en/Hacking/BuildProcess http://www.nongnu.org/avr-libc/ http://savannah.nongnu.org/projects/avrdude The difficult bits of this project probably wont be c# related, /r/Arduino may have a better idea of how this all works.
Ran out nto this problem this week. If you are using symbol source server basic, open your project you built to create the asp.net application and add this nuget package to it, https://www.nuget.org/packages/CustomMetadataFix.Microsoft.Cci.Metadata/ . rebuild, deploy and things should work great.
There is a logic error when you disable the button AFTER doing the win check. If you select B1 last to get a horizontal win then it won't be recorded as such until the next turn You could get a little fancier b.Text = (count %2 == 0 ? "O" : "X"); I'd make the if statements call a separate function as well so you don't have to repeat your logic: private bool IsWin(Button b1, Button b2, Button b3) { return (b1.Text == b2.Text &amp;&amp; B2.Text == b3.Text &amp;&amp; !b1.Enabled) }
simplest way possible? a class is the recipe, an object is the meal made from that recipe.
&gt; doesnt stray from c# programming norms at all, compared to unity Oh thank god. That's a major reason I hate Unity. So it is free and open source? Lovely. I don't do 3D game programming, but I have been looking for some clean way of doing 3D for things like visualizations.
&gt; with C-like syntax it's much harder to read and write For me, its the opposite :)
Looks like 3D is the main focus, but it has 2D capabilities. Is 2D development a first class citizen?
Unlike VB.NET, C# can actually use pointers via the `unsafe` keyword. I think most developers actually prefer the C-style syntax. At least it has a much larger pool of people familiar with it, with C/C++ and perhaps more importantly Java (as well as lots of others to varying degrees such as PHP, JS, etc.).
C# and Visual Basic are essentially identical at the moment. You think VB has 'better' syntax, a lot of the world thinks C# has better syntax, and/or prefer it because the syntax is similar to C/C++/Java/Javacript etc C# does permit the use of pointers in unsafe contexts, as well, which VB does not. 
You're in the minority if you like Visual Basic syntax. VB.NET and C# are **very similar** feature-wise, the difference is **predominately** syntax. C-Style syntax dominates the market (C, C++, C#, Java, PHP, Javascript). Brackets and the parenthesis are familiar and consistent. C# is a very modern language. It's readable and has incredible static analysis tools. Every new version introduces new syntactic sugar to improve readability and decrease repetitive code.
As others have mentioned, there is a lot of similarities (when we ignore language syntax), but also some differences. It also comes down to personal preference. I prefer the more concise C# code style as opposed to the slightly more verbose (in my opinion) Visual Basic code style. I've got two more links for you with some additional reading: Comparison of C Sharp and Visual Basic .NET: https://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Visual_Basic_.NET Unsafe Code and Pointers (C# Programming Guide) https://msdn.microsoft.com/nl-nl/library/t2yzs44b.aspx
Awesome! Thanks for update
Would be better if the the if was extracted in separate method and returned the formatting string, that would just then be passed into the string.Format function.
One nice thing is that you can mix C# and VB projects in the same solution, so you can always isolate any C# specific features into a library and call them from a VB project.
&gt; I think most developers actually prefer the C-style syntax. Disagree completely.
In the beginning everyone writes code like this. I would not say this is bad or stupid code. I would say it could be improved, and it shows that you are starting out. That is not a bad thing! I look at code I wrote six months ago and shake my head at myself. Focus on getting it working and then see if you can refactor it.
While I'm certainly in the minority, I actually prefer VB syntax (although I use both quite often). One thing to keep in mind is that resources (both for learning and for solving problems) tend to be C# heavy and much of the VB specific stuff is just plain awful (to the point that I always search for C# solutions, even if I'm working in a VB project). You'll also find virtually no official presentations or community content (like Code Camps) in VB, especially for new / emerging technologies. So at a bare minimum you'll need to be prepared to use a code converter, but being able to at least read C# and understand the code will be extremely helpful. 
No, but currently it ships a lot of stuff most people don't need. :)
You are doing the right thing though by practising. The more you code, the more you will learn the language, tips and tricks, there more you will write shorter, cleaner code.
Somehow i doubt this is any better, but its what i was able to come up with after a little break, same thing written out differently. Now i sleep namespace Tic_Tac { public partial class Form1 : Form { bool first = true; int count = 0; public Form1() { InitializeComponent(); } private void XorO_Click(object sender, EventArgs e) { Button b = (Button)sender; if (first) b.Text = "X"; else b.Text = "O"; first = !first; count++; b.Enabled = false; WinCheck(); } private void WinCheck() { \\ugly block of conditions is ugly bool winner = false; if (B1.Text == B2.Text &amp;&amp; B2.Text == B3.Text &amp;&amp; !B1.Enabled || B4.Text == B5.Text &amp;&amp; B5.Text == B6.Text &amp;&amp; !B4.Enabled|| B7.Text == B8.Text &amp;&amp; B8.Text == B9.Text &amp;&amp; !B7.Enabled|| B1.Text == B4.Text &amp;&amp; B4.Text == B7.Text &amp;&amp; !B1.Enabled|| B2.Text == B5.Text &amp;&amp; B5.Text == B8.Text &amp;&amp; !B2.Enabled|| B3.Text == B6.Text &amp;&amp; B6.Text == B9.Text &amp;&amp; !B3.Enabled|| B1.Text == B5.Text &amp;&amp; B5.Text == B9.Text &amp;&amp; !B1.Enabled|| B3.Text == B5.Text &amp;&amp; B5.Text == B7.Text &amp;&amp; !B3.Enabled) winner = true; else if (count == 9) MessageBox.Show("Draw"); if (winner) { String Thewinner = " "; if (first) Thewinner = "O"; else Thewinner = "X"; MessageBox.Show("Player " + Thewinner + " wins"); } } } } at least there are fewer ifs, lol.
Better. But start coming at it from a different angle. Make B1,2,3...a list/array of some sort? Mark them up with additional properties/flags in groups? Without even trying to understand the code I would be looking at getting rid of all the OR statements, and using some kind of LINQ .Any() method where you are cross checking the text boxes based on attributes.
[Yes](https://github.com/SiliconStudio/xenko/blob/master/LICENSE.md)
There's about 20 minutes worth of notes with me trying to change them into arrays . I mean, that part was easy, but then using them to to declare a winner just, didn't work out. Strings =/= boolean. Conver.ToBoolean wouldn't work/ i was using it poorly. I'm sure the answer is fairly simple, and probably in my notes somewhere, but that's tomorrow me's problem. Thanks for the feedback ~
The issue is probably either `f ` being null, or `f.GetProperty()` returning null because the property doesn't exist. Set a break point and inspect the objects in the debugger.
Try checking if f itself is null before you check if one of it's properties is null. I don't see any code in that snippet that sets f.
For me, pointers are kind of a pain. c# seems to me to be the best of c++ without pointers. VB, for me, has traditionally sucked because of third party libraries that won't work with newer versions of the compiler. But C# has plenty of libraries and I can easily extend a component. Not sure if that's as easy to do with VB. And for me, VB is no easier to read than C#. I have no trouble reading it, especially as the basic structure is very close to javascript, c/c++, and java.
A challenge someone once gave me was to try to write my code without any IF statements. Obviously you can't really do that in a game like this, but try to minimize the IF's wherever you can. And where you need to have IF's, make them as short as possible. It makes a huge difference for speed and legibility. For checking the win, do you notice any patterns you could use? Also, if it's X's turn and he clicks, obviously O isn't going to win that turn, right?
I have a class of apples. But until I create my apple, I don't have any actual apples. When I create my apple, using the class of apples, I give it a name. So Apple myApple = new Apple(); 
It's inside of foreach (FieldVariable f in theROC.customscriptslist[s].fieldvariableslist.ToList()) whenever I set if(f.GetType().GetProperty(searchprop) == null) {continue;} the program doesn't crash, but it also doesn't seem to do what the code should. string propval = p.ToString(); if (cf_scriptequalorcontains_combobox.Text == "Contains") { if (propval.Contains(look)) { f.value = replacer; } } else if (cf_scriptequalorcontains_combobox.Text == "Equals") { if (propval.Equals(look)) { f.value = replacer; } } and if I check (if f == null), then I get the original nullexception error for the var p line.
&gt; You are not following the first rule of SOLID design Geez. He's still learning. Let him learn how to use the language before you bonk him over the head with good design methods. 
Fair enough. I was debating with myself whether to include the 2 comments, but in the end I just could not help myself. 
me too. And Dim? Dim what? Dim the lights?!?
Lol. I really hate Dim. Dim variable as string? string variable is much more succinct and easier to see the variable type since it's at the start.
&gt; There's roughly 80 lines of code in a boilerplate Hello World Windows App. MFC SUCKED. :P We had to learn that at DigiPen &amp; make a complete 2D Windows game, all in our 2nd semester. 
C# is clear. Even if you never write code in csharp, you can easily understand structure of code. Second element is popularity of c# in university use. 
Definitely.
I like that idea
Some people don't have thick skin. Admittedly if you're going to put yourself out there, you've got to open yourself to criticism, but I think the people in this thread were really quick to shut him down. It was a writeup on how to use a feature, not a writeup on how it's going to change the world. A lot of you missed the point - the feature exists for a reason. It may have a limited set of use cases, but it's there to fill a gap. It's not like the guy was encouraging people to start writing C# like Javascript.
To each their own, but I really don't see people using these kinds of Hungarian-ish notations in C# code these days. And with C# 6's property enhancements, I find the need to create/use fields is less common. Also, you're talking about a [ThreadStatic] attribute? Those should be exceedingly rare and IMHO written to use ThreadLocal&lt;T&gt; instead. ThreadLocal has the benefit of [Initialization Consistency](http://stackoverflow.com/questions/18333885/threadstatic-v-s-threadlocalt-is-generic-better-than-attribute) and by using it, it becomes immediately obvious to anyone consuming it that it has some unique behavior without having to signify it in the name.
I see VB and C# the opposite way you do. VB is the harder to read, too verbose syntax and C# is the clean C-like language and it can access hardware just fine and can use pointers just fine for those 5% of the times you need it - it's just that 95% of the time, you simply don't have to worry about it.
Please use the proper naming conventions for C# and .NET, my eyes are getting sore justlookingatallthecodewrittenlike this, see how bad it is?
I'm actually working on a reimplementation of .NET's StringBuilderCache, so the attribute seems like the right option for me. But if you still think that I'm wrong, here's my code: https://github.com/docevaad/Anchor/blob/4940af274b29bbb877c66a9dd3f09c7d5a1003df/Tortuga.Anchor/Tortuga.Anchor.net461/StringUtilities.cs
Thanks for the info. I've avoided it because it seems to be such a different paradigm to how I do C# development at the moment and I don't want to pick-up habits I can't necessarily apply on a daily basis to work.
&gt; I really don't see people using these kinds of Hungarian-ish notations in C# code these days. Looking at the .NET code base on reference source, it looks like they are all over the map. Some use `m_`, some `_`, and others `this.`.
Actually Unity does have MSAA, FXAA, SSAO, bloom, HDR, normal maps, specular maps, and I think emission maps as well. It's all standard. I'm not a big Unity person myself but the graphics aren't terrible. They've really made improvements but it's definitely not perfect.
I don't think you're wrong, just pointing out that you don't see a lot of that kind of naming convention these days. If it fits in as part of some larger set of code and that's the style, there's nothing wrong about it. Like you mention below, you do see it in the .NET Reference Source, but I think that's mostly because a lot of that reference source was written in the mid-to-early 90s. As for ThreadLocal vs. ThreadStaticAttribute, either would work, so again, your preference. 
&gt; Also, you're talking about a [ThreadStatic] attribute? Those should be exceedingly rare and IMHO written to use ThreadLocal&lt;T&gt; instead As long as you don't inline-initialize `ThreadStatics`, I would personally argue the opposite. Usually thread statics (at least, in my use cases) are a performance optimisation, and I've found that just accessing `ThreadLocal`s is an order of magnitude or more slower. Just my opinion though :)
Libraries are identical in both languages. You can use any .NET library from either language without even knowing what the original library was written in. 
I had said: &gt;&gt;VB, for me, has traditionally sucked because of third party libraries that won't work with newer versions of the compiler. I hadn't said that the current libraries weren't the same between them now. But what about extending VB components?
I cannot rely on multiple devices, even those on the same network to have the same paths. **I** can assume so for my own network but once the app gets out in the wild other users **might** not have the same mapping to the files. Media meta data isn't always reliable either... If you know a way I can only read the first couple MB that is something I am willing to think about.. but it's sounding like a hack, and not a reliable method. I also can't cache the files, as I don't know when the user is going to access this info. The text file with the mentioned sections of data is loaded into a List and that access is very quick. It's when I load a folder and it's files. The number of displayed menus is very small (approx 10) but when those menu items are displayed I need to check those files against the list, and to do so I need a unique id. The file path works absolutely... so long as each device access' the same path... drats. Thanks for the thoughts.
That's interesting. And since I am performance conscious in the join functions, I definitely don't want to risk making it slower than necessary.
I meant wrong about ThreadLocal. It isn't something that I've used before.
Yup...
You could do something like this: ObjectsB.Intersect(ObjectsA).OrderBy(i =&gt; ObjectsA.IndexOf(i)).Concat(ObjectsB.Except(ObjectsA)) That might not be 100%, but the idea is take the items in B that are also in A, sort them by their order in A, then concatenate on the list of items that are in B but not A edit: I updated it and tested it in linqpad, it's correct now. It just had two minor typos, I was in bed on my phone when I wrote it.
Okay, just found CodeMaid &amp; SuperCharger in VS gallery. They both include such features, will try to find out which one is better.
Mhm, I think #region is quite helpful though. 
We were all new once. Your were correct in assuming that filePaths is a variable that you can read from. The variable is of type string, and the [] indicate that it is an array, or storing multiple strings. You have to unpack and read out the strings one by one. One way to do this is to use a loop. You can use a for loop, but here it is easier to use a foreach loop. This can be done for example by adding this after reading in the filePaths foreach(string s in filePaths){ Console.WriteLine(s); } Console.ReadLine();
That worked perfectly. Thank you!
I appreciate that. I'm trying to teach myself too. For now, my long term goal is to make a somewhat automated home. I want to have small computers interact with each other on my LAN so I figure I'd start with interacting with files on my main computer using C# and then move to interacting with files on other computers from my main PC without having to move from my desk chair lol
To be fair, until .NET really starts taking off as cross platform I find it hard to blame so many startups for not using it. Tying yourself to an os for a programming language is a pretty big call.
Well you can separate the shit out of your classes and still have 2000 lines left in one, especially tons of handler methods.
&gt; I think most developers actually prefer the C-style syntax. I think most developers are _used_ to C-style syntax and dont want to take the time to learn something else. Thus they prefer it because its the path of least resistance. I used to prefer C-style syntax, but after spending some time learning F# I now prefer the ML-language family syntax which makes for a lot more pleasant reading. I didnt prefer this when I started learning F# though, it was something that happened over time as I discovered how that syntax enabled me to do other things that I couldnt do in a nice way C-style.
1. Every command should be in separate class (single responsibility principle!). Create them using some factory. 2. Switch in Help looks weird. If it is not used, just remove it. 3. There are a lot of classes with static methods only. That's a code smell. Try to make them "normal" objects, use dependency injection (*Managers). [beware of singletons!] 4. Write unit tests (probably after aforementioned changes that will be possible) 5. Keep coding!
Dude, create an account here: https://www.visualstudio.com/pl-pl/products/visual-studio-dev-essentials-vs.aspx . That will allow you to take 6 free months of Pluralsight courses. After their C# path, you will ask no more questions like this, trust me!
http://programmers.stackexchange.com/questions/53086/are-regions-an-antipattern-or-code-smell
But that's pretty much abusing this operator. Don't use it blindly for everything just because you have no clue what you're actually doing.
&gt; Also, you're talking about a [ThreadStatic] attribute? Those should be exceedingly rare and IMHO written to use ThreadLocal&lt;T&gt; instead. Actually, you should probably mostly be using `AsyncLocal&lt;T&gt;` these days. It flows correctly in the situations you normally want it to (not just async, but also created threads, thread pool jobs etc., but *not* AppDomains).
Only the last line in your code has direct relevance to the error. Either f is null, or the type of f doesn't have a property with the name searchprop. Split the line up to see which of them.
Your impression was wrong. You should use your context class.
 .OrderBy(i=&gt;{ var ind = ObjectsA.IndexOf(i); if (ind == -1) ind = ObjectA.Length return ind; } Note that items that do not appear in ObjectA will have undefined order within themselves, but will always be last.
One thing that can help with things like this is to learn how to use the debugger. The debugger has a window that lists the variables that can be currently accessed, along with their types and currently held data.
https://thecreativechris.files.wordpress.com/2014/10/standard-shader-pbs.png?w=639&amp;h=575 http://docs.unity3d.com/Manual/shader-StandardShader.html Like I said, it wasn't for a while. However now it is standard and I'm not just talking about the name. The picture is from the shader editor and the manual describes the shader system. All of this came out in Unity 5 which I believe was released in March of 2015 and was in beta before that. I agree though it was a pain before 5. In the picture you're absolutely right, I'm not sure why they chose to leave it so jagged. 
I think what the parent was getting at is if #region's are helpful, it's because your code has other problems. Classes should be small and laid out consistently the same. It should be easy to jump around and find things. Hiding blocks of code makes it more difficult. 
How does Unity strays away from the C# norms? Serious question, I only tried Unity once for a small sample project.
&gt; String to Char[]. So it chooses this, and I'm not really sure what happens next. I actually think this is done because the overload it picks is `Split(params String[] args)`, and only one argument was supplied, and so it's not an implicit convert from `String` -&gt; `Char[]` but rather `String` -&gt; `Char`. So it ends up calling `Split('d')`. Anyway I also used Visual Basic for many years (first program I made was a shitty point-and-click in Visual Basic 3.0), and I found that when code fragments got large then VB is a lot more tiresome to read than C# because it is so incredibly wordy.
When going through directories and files i often use the DirectoryInfo and FileInfo classes: static void Main(string[] args) { var path = @"C:\tmp\"; var dir = new DirectoryInfo(path); if(!dir.Exists) { Console.Out.WriteLine("Couldn't find: {0}", path); return; } var files = dir.GetFiles(); foreach (var file in files) { Console.Out.WriteLine("Found file: {0}", file.FullName); } var subdirs = dir.GetDirectories(); foreach (var subdir in subdirs) { Console.Out.WriteLine("Found subdir: {0}", subdir.FullName); } Console.ReadLine(); }
Sorry not a shader editor, I was rushed out the door. What I meant was material editor. You now choose a variety of maps for a material giving you a lot more options. If I remember correctly shader are precompiled based on what maps you choose, so it's kind of like a shader editor in a way. The secondary maps allow for extra detail and you can also make an object reflective either through baking or in real time (you need to attach a certain component to the object though, can't remember the name). It won't fit your needs for every situation but it should work 90% of the time.
The last VB was VBDOS.
Haven't used it in a while so it might have changed, but isn't it a glorified text editor, like Atom? (Don't get me wrong, I like Atom, but it's not really the same as using a full IDE)
Thanks for posting this. From a fellow Portuguese living abroad, are the recordings be available afterwards?
Try reading [THIS](http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670) Code Complete and / or any of the well reviews books in the "you might also like" section of that page. 
It's evolved over the years. Prefixes made it easier to memorize the variables and their scope. Intellisense has helped shape the evolution away from underscores. Stricter code guidelines (ie StyleCop enforced) consider it clutter and unnecessary.
Personally I find the syntax of C# much easier then VB For instance in the following VB Code what is happening? Dim Foo =Bar(32) Are you calling the function Bar and passing it 32 which because it's a function could potentially have some side effects or are you getting something from a collection of some type (array/dictionary/whatever) which isn't going to have a side effect. Whereas in C# I can see that var foo = Bar(32); Is calling the function Bar and passing in 32, wherasa var foo = Bar[32]; Is getting an item from a collection and I know that there is no potential side effect. Or how about the following code: Dim foo? as Integer = If(False,1,Nothing) Dim bar as Integer? = Nothing What is the value of foo.HasValue and Bar.HasValue Well foo.HasValue is 0 and Bar.HasValue is false. This is because IF doens't work for Nullable types and so it treats nothing as a regular integer and so Nothing is 0, wheras for Bar it's being treated as Null. What do you think is easier to read at a glance in the following lines of code: var foo = new List&lt;string&gt;[]() or Dim foo as new List(of string)(10)() Oh wait that doesn't work because you have to initialize to an empty array so it's Dim foo as new List(of string)(10){} of wait that doesn't work either it has to be Dim foo as List(of String)() = new List(of String)(10){} but what if I don't want to use the {} well then it's Dim foo(10) as List(of String) but wait don't I have to use new to initialize all objects, well yes except for arrays they are the only thing where you can create a new object without using the new keyword. Also arrays and Nullables are the only objects where you have to look at the name of the variable to determine the type of the object.... Okay so arrays, generics, collections, and nullables are messed up but what about the rest of the language. How about the using keyword to automatically call dispose in C# I can easily have multiple usings so if I want to do a db call I can easily do using(var con = new Connection()) using(var cmd = new Command(connection)) { } okay not too bad what about vb it's using(dim con as new Connection()) using(dim cmd as new Command(con)) end using end using Not the end of the world but if I have to call a lot of objects that need to be disposed it's going to get very ugly very fast. So I've heard a lot about lambdas lets give those a try Okay in C# if I want to call a lambda it's pretty lightweight foo.Where(item =&gt; item == 0); not bad how about vb foo.Where(function(item) item == 0) not horrible how about if I want to do have something that involves multiple lines foo.Where(item =&gt; { //blah //blah } okay how about VB foo.Where(Function(item) //blah //blah End Function) That's a bit unwieldy. I can find other areas where VB is ugly but I really have spent long enough on this. What it boils down to is that VB is easy to read if you are doing anything trivial but as soon you do anything with any complexity it easily becomes unwieldy and C# really shines. 
Removed: Rule 7.
i use 'this' everywhere it's applicable because i think it provides more context to whatever the thing is and its scope. it's also a stylecop thing if you're into coding standard tools. properties/functions: this.PropertyName, this.FunctionName() fields: this.fieldName local variables/parameters: variableName statics/consts: StaticConstName, StaticFunction() resharper suggests the use of _'s for fields to provide the distinction between fields and local variables/parameters. it also has pretty much the same casing rules to provide clarification on the other things. i just think using 'this' makes it even more clear.
Have you used the debugger to see what is in the message variable? If not, put a break point in the beginning of that foreach loop, and see what is packed into the message variable.
[This](http://i.imgur.com/xEYy6J8.png) is what it returns
How about writing a few helper properties: string[] TopRow { get { return new string[] {B1.Text, B2.Text, B3.Text}; } } string[] CenterRow { get { return new string[] {B4.Text, B5.Text, B6.Text}; } } ...etc, creating a total of 8 properties, one for each row, column, and diagonal then a helper function to check a row, column, or diagonal bool IsWin(string[] values) { return (values[0] == values[1] &amp;&amp; values[0] == values[2]); }
C# and VB.net are actually the best of both worlds. I started working in C++ in the early '90s and C# in 2003. I much prefer C# now, but yes, there are some times when I still have to write in C++ or assembly. That's fairly rare, though. You can definitely interact with hardware in C#, most of the time, you just have to know how to do it. BTW, C# does have pointers, although you probably shouldn't be using them too often. Visual Studio along with the .Net framework library is what makes it a good language, IMO. VB was great in its time, but C# and VB.net are way beyond it. As far as I know, VB is pretty much a dead language now. As for syntax, that's a personal preference that probably comes down to what you're used to seeing. I prefer the more compact C# syntax to the verbose syntax of VB and VB.net. 
&gt; Should I just do ((ProjectDataEntityModel).forms.add(new Form(){ }); } That is called "casting", not "boxing". Briefly, * Casting: looking at the same value through a different interface. (In your case, the ProjectDataEntityModel public interface vs the DBContext public interface) * Converting: creating a new value that is semantically equal to the old one, but expressed differently. (changing an integer into a decimal) * Casting and converting often use the same syntax, so we tend to treat them as the same thing. * Boxing: copying a value type (e.g. int, bool, decimal) into an object on the heap that only contains said value. 
Your project settings have your project marked as a console app instead of a window app. Project -&gt; properties -&gt; Application-&gt; Output type. 
It's not a full IDE, but if you really don't want to go the VM route (where you really need an SSD) it's your best option. Features include debugging and intellisense...check out the web site at code.visualstudio.com and watch the intro video.
Core isn't mature yet. Asp.net core is barely functional...! There's just so many issues with it. I tried a lot but it's just so much work for basic functionality. Maybe in a year. Angular 2 is definitely coming on strong, with the extreme rise of typescript as a result of the pure Javascript hype dying down (due to being utter trash). I'd put money on the combo. But soon and not today. I have my eyes on Vue.js though as far as front end frameworks goes. It's worth looking at. 
I had to dig for this when making a Windows Service that I couldn't get to write to the console.
Also, if you're using Visual Studio you can create a breakpoint after the variable has had it's value set and use VS to look inside the array. http://stevedower.id.au/blog/wp-content/uploads/2012/10/coll_csharp.png 
&gt;1.) What I want is a folder where I can download all my standard nuget packages (Autofac, Log4Net, EF6, NodaTime, Quartz, Rx, Json.Net) and then connect any new solution to this folder. https://blogs.msdn.microsoft.com/marcinon/2011/07/08/project-templates-and-preinstalled-nuget-packages/
I believe so, at least that's what I was told
&gt; Visual SourceSafe but I don't think that even exists anymore Thankfully, it has been dead for a decade.
Project Rider could be the next best thing once it's done but VS Code sounds pretty decent.
I hope you test that out for sql injections. What happens if someone enters ';truncate days;declare @foo char(1)=' anyways 1. Try adding square brackets around everything (or better yet don't name things keywords). 2. cast(sum(minutes) as int) as minutes 3. add "SET NOCOUNT ON;" to the begining of the query Edit: I had to add this https://xkcd.com/327/
1. maybe just have a nuget script to run for your new projects 2. learn and use git. try bitbucket as it's free 3. not really sure what your asking here. If you want your calendar in memory you will need to load it on startup and keep it in cache. Maybe another way is load it when you need it and keep it in cache. If another method needs the calendar it can check the cache or load it as needed. Also, is there a reason you are using xml now over using sql server? As a side note, try to store your calendar in JSON format. you'll want to learn that.
You'll never regret it. It might take a short while to get used to doing things the way the tool wants you to, and to trust it. But once you do, you'll never look back. The first time you have spent a couple of days on something only to realize that you're down the completely wrong path but that you can revert those changes and get right back to where you started, you'll realize how useful these tools are. It frees your brain from keeping track of all that trivia (what did I change yesterday? Is that what broke this function?). So you can use your brain for more important things. I actually think version control helps a solo developer even more than it helps a team. With a team, if you fuck something up and don't have version control, at least there's a chance that somebody else can help you recover. If you're on your own and you fuck up, you are well and truly screwed. Anyway, sorry to go on and on but I'm pretty evangelical about version control as you can probably tell :)
I do use json.net a lot. So storing it as Json wouldn't be a problem. I only tried to move it from server to file (xml or json) just so it is easy to access and edit. Also, I has this expectation that I could have the file as a resource and then it would be much easier to use for tests and such. I'm still not sure if it's worth it or even possible. But I was thinking that a resource file would be in memory before program starts. So once I added my xml file as resource file then in my tests I could easy use the data from that file. Googling on this just gave me lots of leads but left me more confused. When you say cache, is it like global memory store? Do I have to build a cache or is there a system cache available to everyone?
They should have checked it into some kind of source control.
1) https://docs.nuget.org/consume/nuget-config-file "Repository Path"
I am using wpf, but I'm mostly self taught on it. Is there just a pre built function where I can plot the points and connect them?
Here, try proving P = NP while it runs: http://codegolf.stackexchange.com/a/24419/34401
thank you very much. Professor's insistent on using '\n' and everybody else says not to use it. This helps A LOT.
Thanks for going through all the trouble of writing out a more eloquent version of this. I actually just got all signed up and familiarized with github the other day. I'm not going to lie, looking at your code , i can tell what most everything does(in a oh, this controls this, or tracks this and that runs when this is triggered) buti i'm not totally how to implement it to clean up this and future projects. But that's what google and my coding books are for lol! Thanks, really gave me a lot to look at and try out. 
System.Drawing Have fun
Not to mention most job requirements are experience with source control. Any experience is better than none. You know how to use subversion? Good. You can probably get a feel for git too. Most GUIs for different source control tools have almost identical versions of both, e.g. TortoiseSVN also has TortoiseGIT. Similar interface, similar job, just the different standards (for lack of a better word, I'm drunk). Just get used to source control. Make it a necessity. Just do it. 
Uni tried teaching us this for WinForms. They recommended ZedGraph, so give that a gander OP.
I have two ideas. One is that when you load the data table, do you close your data reader or whatever you use to load from the dB. My second ides is pagination. Do you just load x amount of items straight? Usually, developers will grab 100 or 200 at a time and only load that and when they want more data they click next and you load the next page. 
That makes backups so much easier too. I know some guys who have a million different folders, one for each project, and the folders aren't under a common root ("c:\projects" or whatever). I don't know how they stand it. I want to be able to back up my stuff by just dragging a single folder and knowing that EVERYTHING goes with it.
If you have run a memory profiler, what did it say? Tried using SOS? Just how many records are you loading? How do you know you have a leak, and aren't just using that much memory? Do you dispose of your dataset when done with it?
Yeah, I'm a big fan of JetBrains IDEs so we'll see what they come up with.
How do you not unit test your code? I don't unit test every single little thing I write - small little methods that just do a few arithmetic operations or something I'm usually quite confident will function accordingly and I'm usually right - but a lot of it, yes. I test while I write frequently. I write my class libraries completely separate from their main application in my debugging environment (or, rather, as a separate project whose debug DLL is linked into the debugging app) so I can test their functionality as I write them. I draw the line, however, if I have to make too much extra code just to do a unit test. Maybe I misunderstand "unit test"... Is there like a set procedure for doing it or does it just mean testing your classes as units as you code?
We're using MailKit, but you should definitely consider other libraries too and maybe they're working better for you. There are some brutally broken mail providers out there and some don't work well with MailKit, because they (the mail providers) aren't standard compliant.
Dont even highlight lol, just put the caret on the word and press f1 Edit: why the downvote?
It means using a test framework to write repeatable coded tests that document and verify the expected functionality of all the public entry points to your code. It sounds like you're structuring your code in a mostly testable way, but if the tests can't be run against your code base either manually or automatically at any time it's not unit testing. 
You know that's a gaping hole for SQL injection, right?
Looks like a good start. If you haven't yet, you should check out the built-in IObservable and the reactive extensions from microsoft. https://www.nuget.org/packages/Rx-Main/1.0.2856 http://www.introtorx.com/content/v1.0.10621.0/01_WhyRx.html
Christ almighty, settle down. Nobody said "HEY GUYS LOOK AT THIS AMAZING INNOVATION **THAT VISUAL STUDIO PIONEERED**" If it works in VS, then great! It *is* relevant. If you could do that in Turbo Pascal back in the day then great, but *that* has nothing to do with this conversation ;)
My experience growing up with F1 UX help was that it would just pop up a barely searchable help document. With Google it's much quicker to ask question -&gt; get answer. It's hardly surprising no one uses F1 any more.
I used it years ago with classic ASP, but would consider it unnecessary now with the other options available in .net. 
I see RX as best thing in .NET since WPF. I could not over-recommend it.
Test ? Result1: Result2; is such a lovely compact alternative to if. Good suggestion. 
 var obj = MainClass.ObjectAList.First(o =&gt; o.name == ComboBox1.Text); You could also use data binding via `ComboBox.DataSource`/`DisplayMember`/`SelectedItem`. Also, a `foreach` loop is usually simpler than a `for` loop unless you actually need to know the index.
Ah that's a good thought about the blocking. I will tackle that one next. I could probably just run the handlers IN the loop on the thread pool instead of the loop itself. I have mixed feelings on the ordering. That could get complicated pretty quick as it would need to be thread safe and I'm not sure the use case is valid. For instance, can you order the handlers in a multicast delegate? In a pub/sub setup, the subs don't know anything of the publisher, so they couldn't care about order either. It seems like a can of worms not worth opening.
You've completely missed the point and you should really tone down the sarcasm. It isn't funny. 
Yeah I have looked into it and I know it is growing in popularity, but that learning curve is rough. I'm sure it wouldn't take long for me to learn and use in my own projects, but I don't think it would be well received by most others in my office if they forced to deal with it in our solution. I will continue to look into it though, it's possible that the open source projects that I've been looking at which use it just did it poorly leading to me over-complicating it in my head.
Your setup makes most sense to me. I'm going to try and do the same thing.
Wanted to learn unit testing while working on my undergraduate final project but found it extremely deficult to test raw sockets and io streams.
Cool to know it has roots in another IDE - history of programming is crazy awesome. It's a feature I'd simply never thought about - F1 tends to bring up spammy / useless help so I've never really used it intentionally. Also, it seems F1 brings [this useless page up](https://www.jetbrains.com/help/idea/2016.1/intellij-idea-editor.html) on IntelliJ so it's certainly not a universal feature.
WinForms
As for question #1 - code that uses those dependencies should be in its own library that you reference from your projects.
the goal, divorced of technology stack, is to write maintainable, bug-minimal code that runs in production. accomplish this task by any appropriate means.
I usually use webpack and then usually backbone for talking to the back end and hash routing, depending on client performance requirements I will use knockout or react for the actual user interface. 
great! just pulled it down and the local version is working good! I'm pumped. Thanks. http://imgur.com/JsgkoAR
Been using Angular for a while for everything from large enterprise web apps to small websites. Works great, very scalable.
Check out the MSDN exam 70-483. That's directly related to programming C#.
I have used Angular in several projects, well designed lots of features and relatively quick. React is very new but is very efficient to boot. It is however mostly geared toward being the V in MVC so you'll have to decide on how to handle your M and C's. There are specific libraries designed to do this explicitly for react. I recommend Angular because there's a great deal of good information/tutorials available today for it. But your choices really depend on the development specifications more than anything. 
Coming from a PHP side of web dev, I use Vue (.js) for client side. Much leaner &amp; cleaner than Angular, and it has quite a nice tool chain that allows you to build the entirety of a component (so, style, html template, and js) all in one file, that is then transpiled. Its very powerful &amp; very simple.
Oh I didn't know about this. I wonder how solid it is... I'll be looking into it 
I am an MCSE/MCSA 2000 and to this day it has lasting value - even though I've been out of the infrastructure side for a long time. It backs up my experience like a stamp of approval on those years on my resume. Its been directly responsible for many thousands of income over the years.
+1 for Knockout. It's not really an MVC framework, but adaptable it is to whatever environment you want to use it in.
Sadly the reality is that real programs are going the way of the dinosaur. "Apps" are the wave of the future. Crappy, simple, limited-feature pieces of crap that will run on phones and Windows 10 (for those users who don't use it like a real PC). Windows apps won't have a lot of crossover to real programs. The one thing it WILL teach you (and it's a really good thing) is how to do asynchronous programming well. Your best bet is to be good at both, for maximum flexibility. But you will probably find more opportunities on the app side, at least in terms of number of opportunity if not in terms of salary.
A few thoughts: - Create a class to represent your app config settings. One of the properties will be the path to the folder where the mod zip files are stored. The user should be able to modify this setting at runtime. You'll also have to serialize the object back into the config file. - If you decide to make this a UWP app, the `Windows.Storage.ApplicationDataContainer` class will be very useful here. If not, you'll just have to do this part manually by serializing the file to the user's `AppData` folder. - On app startup in the composition root (`App.xaml.cs`), load the config file storing your app settings and deserialize it into a class. Register this class in the DI container. - Also register the rest of the object graph required by your app. This will include, among other things, `MainViewModel` and a `ModItemsDeserializer` class which is used to deserialize each mod zip from the directory described by the property in the app settings. - Either the app settings object or the path to the folder should be constructor injected into `ModItemsDeserializer` and that in turn should probably be constructor injected into `MainViewModel`? You'll probably have to play around with this out on your own to get the correct object graph. - When the main view loads (or when the user clicks a button) and there's a valid folder path in the app settings, you can deserialize all the mod zips and display that data to the user. If a folder path hasn't been configured yet, you could prompt the user to define it and serialize the app settings to file.
So, I do a lot of work in javascript. Javascript frameworks tend to be in one of three camps: 1. Kitchen Sink * These are opinionated and have an idea about how you should do things from A-Z. Their opinions tend to cover how you should organize your app, how you should write your files, etc. * [Meteor](https://www.meteor.com/) * [Angular](https://angularjs.org/) * [Ember](http://emberjs.com/) * [DoneJs](https://donejs.com/) * [Aurelia](http://aurelia.io/) 2. Batteries included * These have less opinions about how you should structure things, and tend to be much smaller overall. You'll make more architecture decisions, but there will still be some ideas provided. You'll typically still have things like a router here. * [Mithril](http://mithril.js.org/) * [Riot](http://riotjs.com/) * [Knockback](http://kmalakoff.github.io/knockback/) * [CanJs](https://canjs.com/) 3. BYOA (bring your own architecture) * These do one thing, and only one thing. Typically, that's the V part of MVC. The rest is up to you, from routing, to validation, etc. * [React](https://facebook.github.io/react/) * [Vue](http://vuejs.org/) * [Rivets](http://rivetsjs.com/) * [Polymer](https://www.polymer-project.org/1.0/) * [Knockout](http://knockoutjs.com/) Which you choose depends on how much you want the framework to decide and how much you want to do on your own. React and Vue are becoming increasingly popular these days, but they require you to do a lot more, especially when it comes to things like validation. Aurelia and Angular 2 may not be a good choice, since they require an ES6 environment setup - and if you don't know what that it is, you might invite the dreaded "javascript fatigue" in getting one up and running. My suggestion to you is to pick a few of them and follow a few tutorials with them, see what you like best. They each appeal to slightly different groups of people (which is why we have so damn many of them in the first place). I can also answer any specific questions you may have.
Thanks, this helped explain things a bit better. I know we're a Microsoft partner but not certain what level we're at. Ill check in with them on what track we're on and go from there but I think I might hold off till a break from Uni so that I can spend a bit more time studying for it, if they're as bad as you say then I'll need to do aswell as I can.
If this is for actual production usage, a better option would likely be https://weblogs.asp.net/ricardoperes/introducing-postal-net
There's a lot of crossover between UWP and WPF. Just eyeballing some UWP examples, they're totally intelligible to me from my time spend developing WPF applications. I do know they have some limitations, though, ~~particularly around P/invoke~~. e: P/invoke seems to be fine, look at /u/Danthekilla 's comments below
If you are using Unity you will not be able to use C# 6 features, I believe Unity uses C# 4 or 5.
You can still develop in C#. Use Xamarin for Android and iOS devices. Web apps can be written in ASP.NET, the back-end at least.
When you get down into having more objects instead of one "big" one, you'll typically start using [dependency injection](https://msdn.microsoft.com/en-us/library/dn178469\(v=pandp.30\).aspx) so that each down stream item isn't aware of its dependencies' dependencies. So: public class Consumer { // ... public Consumer(ICanInteractWithPlayer playerInteractor, ICanDisplayMessages messageDisplayer) { // ... } public void DoSomething() { PlayerIntreactor.LowerHealth(25); } } When this class is created through the container (as a dependency for something else or through its service locator) then a suitable `ICanInteractWithPlayer` will be resolved with all of its dependencies being resolved turtles-all-the-way-down style. If you end up with a lot of dependencies, you can also combine them into slightly larger, more specialized services, then just have that as a dependency. It'd be hard to say how you could do this from only such a high-level overview, though. 
When I was learning MVVM, I didn't start with any frameworks, I was a purist at the time, and needed to understand how MVVM works from ground up. Now, when you start talking about DI, IoC containers, and MVVM, that's when you should take a step back and learn each one at a time. MVVM is easiest to learn, don't worry about DI when learning MVVM, just be aware of it. When I say DI, what I really mean is the 'D' in SOLID. I'm not talking about Ninject or any other DI framework. After learning MVVM, learn DI. Learn interfaces like the back of your hand. After learning MVVM and DI, go ahead and try out IoC containers. I also want to add, that unit testing is great and all, but I've seen test projects gone stale even with best intentions. I've told people to fix their tests and all they've done was comment them out. I've seen tests that combined business logic and those same tests hit the database. I work with hot headed developers.
Yes. They are very similar so there isn't an issue. Also, UWP and the windows 10 app store are VERY different from the windows 8 store. Almost night and day. 
Dependency injection is just another way of saying tight coupling. If you can get away with it, the dependency tree model is much better. The basic idea is that you structure your code in layers. Each layer knows about the layers before it, but not layer above. If a low level needs to communicate with a higher level, it does so by raising an event. Ideally in such a way that it doesn't care if anyone is listening.
Give us some more detail. Perhaps post a small code example and then tell us what is confusing you. 
Sounds like you need to go back and solidfy your understanding of the basics, before delving into this project
&gt; But it is my Scene that holds my entities. This means each scene will be forced to have a reference to Game in case it wants to change the scene. Not necessarily. public class Scene public event MakeMeActive When the Scene fires this event, the SceneManager receives it and updates the Game. (Or maybe SceneManager raises a SceneChanged event that Game is listening to.) What's nice about this model is that you don't need a Game object to use a Scene object. This makes testing easier.
that's what I was thinking, just took a shot at jumping in hoping I could learn the hard way, but I'm just stuck.
Yeah, but once you get the building blocks down, you can combine those in order to learn anything about programming! It'll be a bit frustrating at first but you'll get the hang of it really quick.
Help. Clearly
By basics I mean understanding how a program is structured, syntax formulation, and basic OOP. When you look at code and you understand or at least have a good idea why X code is where then I would say you have the basics down.
but i don't see any code snippet or a brief specification what you are trying to do.. how can we help you? if you want advice, then like the other comment, read and some tutorial about the basics first..
A scene is a level, not a game object. If all objects are going to be in a scene, and an object needs to access something in the game class, how on earth will it get there if the highest accessible class in Scene?
Removed: rule 6 PVS-Studio advertisement/writeups like these are blacklisted on /r/csharp.
This is terrible advice. &gt; Sadly the reality is that real programs are going the way of the dinosaur. This simply not true, not for the business market at least. The typical consumer uses [4 apps](http://www.businessinsider.com/chart-of-the-day-most-people-use-only-4-apps-2014-9?IR=T), but anyone who works for any company with even a single computer will list loads more desktop applications (or even website applications) that they require to "do their work". The desktop is primarily for line of business applications and gaming, it certainly isn't going to die soon. &gt; Windows apps won't have a lot of crossover to real programs. This really depends on the app. If it is an app which consumes a service (like an API), then it probably will. For example, you may have a large line of business application which manages your entire business. But you may want an app that works with only a small part of that. &gt; The one thing it WILL teach you (and it's a really good thing) is how to do asynchronous programming well. Ok. &gt; Your best bet is to be good at both, for maximum flexibility. But you just said not to bother with "real programs"? &gt; But you will probably find more opportunities on the app side, at least in terms of number of opportunity if not in terms of salary. I have to disagree with this too. In my opinion, the app market is becoming *stale*. The gold mine has dried up, there aren't any gaps in the market to exploit. Also, if the article I linked earlier in my comment is true, then it doesn't look good for app developers. The current trend is **web applications**. If OP does get employed by a software company, more than likely they will have a desktop application "that needs to be brought into the 21st century". This usually means "I want to use it on my phone".
You could handle that via the Scene. abstract class Entity { public Game Game { get; set; } public Entity() {} //can't access Game instance in constructor public void Added(); //do game/scene related initialization here instead } class Scene { public Game Game { get; set; } private List&lt;Entity&gt; Entities = new List&lt;Entity&gt;(); //... public void Add(Entity e) { e.Game = Game; Entities.Add(e); e.Added(); } } That said, an entity should not need to know about the game it is in, it should only be concerned about the scene. But that is of course your design decision. The same principle can be applied to components and their dependencies (through `entity.AddComponent(component);`) etc. An example of this kind of code architecture would be how [Otter2D](http://otter2d.com/) handles entities.
A lot of those limitations were fixed in the latest UWP api.
Thank you for the suggestion. I will certainly take a look at it at a later point, but as I mentioned in a reply to Karmadilla, I'd really like to understand the general workings first. Otherwise the framework would feel a bit too much like magic for my liking.
First of all making an app in UWP and WPF is very similar, they can use c# for instance and they both share 95% of the same XAML. There are a bunch of new XAML things only supported in UWP and a few things only supported in WPF but overall they are very similar. There are plenty of decent store apps, look for the UWP ones rather than the windows 8 ones as they are very different. I use a few of them everyday, like Plex, OneNote, ReddHubV2, Mail, groove, lifx, back to the drawing board, drawboard PDF and I use my bank apps etc... Many good ones are starting to come out now that UWP apps are becoming more standard. UWP is fantastic for multiplatform apps between Xbox One, Pc's, Tablets and Phones. For many apps you can get away with zero code changes.
Thank you so much for your comment. Reading through it makes sense, though I probably would have struggled a bit to come up with it myself for now. I think you have (inadvertedly) touched upon one of the biggest things I'm trying to wrap my head around. When I try to conceptualize an object graph in my head, it is generally too shallow. I have trouble growing it out to full branches, rather than keeping them short tree stumps. What I mean by that is that I don't have the experience yet to visualize a branch on the object graph more than two or three objects down. So if by the time I get to that level I find out I need another dependency, I have to rework the branch up to that point, pushing up dependencies. It probably is all a matter of having it click in my head at some point. I just haven't reached that point just quite yet.
It's not hard to find good WPF tutorials or WPF books on Amazon. You'll be better off learning WPF in the long run anyway.
Glad to see there's unit tests for this!
That doesnt seem to work. I am using this to read the data from the buffer: (short)((waveInData.Buffer[i + 1] &lt;&lt; 8) | waveInData.Buffer[i + 0]); and I can store this in both double and float types and display them. it is just when I try to convert it to db the results are zero. I think it could be something to do with my reference and the axis settings so going to try that now Thanks for trying though! Edit: Ok so formatting the axis doesnt seem to help. 
I was very disappointed when I started using Unity a month or two ago and wasn't able to use the shiny new features of C#6 that I have come to love and adore. There are some extensions for Unity that will allow the usage of C#6 but I don't really want to go that route.
String interpolation is the best thing ever.
Can you do P/invoke?
One other comment in reply to this thread: while one can force a change and cause unity to use Roslyn or otherwise change the underlying system be aware that doing so may cause problems with IL2CPP. 100% an issue if target is iOS don't recall about others. Basically unity converts your c# to c++ when you make a build (not while playing app in-editor) and that may not work properly if you alter the system. I'd suggest careful testing if you want to go that route. 
Interesting. Even non-windows DLLs? Can you simply not target something like windows phone if you do P/invoke? 
According to everything I've seen from Unity, getting into a Unity project is a mistake in itself..
I have also downloaded plex but went with the desktop app instead.. it was just so much easier to google it like most cases.. i am glad to that these two program styles are so similar though (wpf, uwp).. that is a definate step in the right direction. My book says UWP compiles to WinRT so im guessing WPF does the same
Yep even non windows dlls and you can also do it on the phone and Xbox one. I haven't tried it any of the other universal platforms however.
i can agree with all of that especially the last part about web apps... That is what I've wanted to do. would C#'s "ASP.NET Web Application be all i need? or should i learn Javascript/Html? also if using javascript is it possible to use C# as my powerhouse/Back-end whatever you call it (View Model?) 
Yeah it makes porting very easy. UWP is pretty good these days, and its getting better with every few windows builds.
The thing is when you inject dependencies through composition, you are using a form of inversion of control: the library dictates what parts of your program -- the part called "dependency" in this case -- it calls, instead of the other way around. DI *frameworks* make use inversion of control for basically the fact that dependency injection if a form of ioc, alongside the fact that frameworks also rely on ioc. But you don't need a framework to pass instances that implement interfaces around. 
It depends on how far along you are. Where I am, the way I figure out what I *don't* know is I make a new project and just try to do something. If you're learning WPF, try to make a simple weather app or something. If you're learning ASP.NET MVC, try to make a little blog or something. Things like that. Then you can figure out what you don't know, and learning more what you know you don't know is a fairly straight-forward googling process. 
Currently on mobile, but once I'm back home from vacation in 2 days I'll give you a link to a site I found on Reddit. The site has links to free lectures online hosted by colleges around the nation, and in an order that a bachelors degree in programming(can't remember if more specific and will get back to you) course would go through. :D expect another reply Tuesday.
I think the problem is that Invoke is used in the thread which is going to be putting another event in the main thread event queue, but you're already in an event (FormClosing) so you get dead locked in the Join. 
Yep, you've got it. I took out the Invoke, and replaced it with a Console.WriteLine so I could still see what was happening, and it cured the problem. Your explanation makes sense too, and explains why a DoEvents fixed it. Thank you!
!RemindMe 2 days
Strange it works for me, well sorry again I'll write it out. if (prpAllFieldsSet) return "The teams playing are: " + prpTeams + "." + "The match will be a" + prpLocation + " match." + "The match will happen on: " + prpDate + "." + "It will be a" + prpMatchtype + "."; 
Honestly my apologies, here is a image showing how the text is shown, http://imgur.com/RPOJEZ6. The text is all on one line. I would like the text after the fullstop to go on a new line. 
Ah, well generally you create a new line in a string by inserting the escape code "\n", or by adding `Environment.NewLine` between strings. However, the the standard `ListBox` does not support items with multiple lines. To make it more readable you could use a [`ListView`](https://msdn.microsoft.com/en-us/library/system.windows.forms.listview%28v=vs.110%29.aspx) instead with the view set to details mode and add the values to individual columns like a table instead of using a long sentence. If you want to use a multi-line list, the `DataGridView` control supports items with multiple lines and can be made to look more or less like a normal list box with some fiddling, but I'm not sure if that's a reasonable approach.
!RemindMe 2 days
Yeah, now that I look at it, it looks to not be thread safe.
Put each line of text into a separate ListBoxItem. Or use an actual TextBox
It should be thread safe, where do you see threading issues? Anyway it's part of Prism framework that is developed by microsoft...
We use it a lot for Ad-hoc reports and querying, think this will help you remove need for ssms, I almost never touch it unless I need to profile something, linqpad is just amazing for everything else
You could also try BeginInvoke instead of Invoke. Invoke will block until the code is executed. BeginInvoke will just add it to the queue. I'm not sure if that'll work but its worth a shot.
It doesn't make assumptions about your codebase. Note that it doesn't have any interfaces or base classes. It purely uses your codebase according to your taxonomy instead of mandating a model to adhere to.
&gt; WPF how do you use WPF in VS? Is it a plugin?
Sweet. I Just started programming this year and started C# in February. I'm writing little applets and I'd like to see if this is useful for making the kinds of UIs we all enjoy using. is XAML basically like XML?
Ick, is it really good practice to copy NuGet to the project directory? And Windows doesn't even allow symlinks without being admin...😔
&gt; public Game Game { get; set; } So every entity *should* have a reference to Game? I've been told you shouldn't but I think that's how Unity does it. Also, what happens if you need a Game reference in its constructor? I thought about referencing Game in a Add method but it would have to be before the constructor. Does that force me to have a Load() method in every entity? I was trying to avoid that. Thanks for the help!
The order in which you apply matrix transforms matter. Just like the order in which you multiply and add things matters. There's a difference between something like 5 * (3 + 2) and 5 * 3 + 2. 
I think the best for you is the understanding of basics before proceeding any further.
putting nuget.exe in the project folder (or better a subfolder) but not including it in the project has been a very suitable way. I saw that also in a lot of other open source libraries. It makes the usage easier because you don't need to specify the whole path to the project folder when using the Package Manager Console in Visual Studio - even though I have to do so in my example, as I am running a separate dev cmd instance. 
MSDN has got your back... Probably.
JINT is probably the best if you want full managed code, if you don't mind some native assemblies, https://clearscript.codeplex.com/ with the V8 engine is probably your best bet for performances.
ClearScript is really neat. It's actually an abstraction for JavaScript engines. It supports V8. But you'll have to download and ship it with your code. I don't have experience with its V8 support, so I can't comment on how well it works. It also supports the native Windows Script Engine. This is the same JavaScript engine that ships with whatever version of IE is installed. So it's actually quite fast and stable for most use cases. Now I will say that there are a number of issues with ClearScript. For one, it invokes the Windows Script Engine with the default parameters which results in the lowest compatibility level (i.e. it runs your code as though it's in IE7). Second, while it supports callbacks into managed code, it's using reflection in ways that really hurt performance. At one point I forked ClearScript for a project and fixed these issues, but I no longer have access to that code.
Does the memory leak grow the more you request the page or does it just blow up the first time the page loads and stay roughly there?
I use it with the V8 engine, there's a nuget package doing the heavy lifting so I didn't have much trouble installing it. Regarding performance, I didn't have any significant problems (nothing to the point of having to fork it). Just keeping a runtimes pool gave me enough to handle my use cases.
Oh, so it's a bug in the ancient version of mono C# compiler used by Unity? That makes sense. 
This seems like a good question for /r/learnprogramming, because it's really a broad, fundamental OO topic, not a C#-specific one. See here [Wikipedia](https://en.wikipedia.org/wiki/Encapsulation_%28computer_programming%29), for a start. Encapsulation is the business of organizing your code into objects that wrap up common functionality (behavior, data) behind a unified interface. There are multiple ways this is done, including using interface types, specifying access levels (public, private, etc) and so on. There are multiple *reasons* this is done, including things like ease of use for consuming code, hiding implementation details to make future changes (i.e. maintenance) easier, and so on.
 public static class Localization { public static string Format(FormattableString s) { //use the s.Format property here to localize the older format return string.Format(LocalizeString(s.Format), s.GetArguments()); } } public class Foo { public void M1() { var foo = 1; var bar = 2; var result = Localization.Format($"foo: {foo}, bar: {bar}, uid: DCE0D6CF-2589-4CB9-AD4F-A39BD601835A"); } }
Have you tried calling grid.Rows.Clear()?
Actually I don't see why he shouldn't post specific questions here, since it's about csharp.
I was just trying to use it on a .NET Core project, and I don't recommend using the latest stable build until they update to RC2 and this issue is fixed: https://github.com/StackExchange/dapper-dot-net/issues/466 It was a frustrating bug to encounter, and it's pretty difficult to build it yourself to get the newest fixes.
Any word on System.Data.SQLite supporting UWP? That's the only reason I tried the MS alternative.
Just dropped my first bug against it. https://github.com/aspnet/Microsoft.Data.Sqlite/issues/239
http://stackoverflow.com/questions/10171645/combobox-like-a-button
its in Windows Form App 
Whatever you do, choose C# over VB.
Haven't worked with MS technology since DAO, my default assumption for any given data access technology is that they are going to get distracted and run off to the next shiny thing. 
Sending data is only as fast as your network connection. Are you using the Flush() method?
For the kind of game you are looking todo there are 2D frameworks that may be easier. That said, Unity will give you more flexibility if you are going for a game. Either way you will be coding with C#. Snake is pretty easy to make without an engine as well.
Depending on what you need it for, [JScript .NET](https://en.wikipedia.org/wiki/JScript_.NET) may also be an option, largely forgotten over the years, but still part of the .NET framework. It adds optional types and classes, and probably lacks some newer features. You can precompile to .dlls with [jsc](https://msdn.microsoft.com/en-us/library/7435xtz6%28v=vs.90%29.aspx) at the the command line, or [compile in memory at runtime](http://odetocode.com/articles/80.aspx). I've only used it to embed a large javascript library I didn't want to maintain a separate C# port of. Instead I was able to wrap it in a class {} and precompile it with jsc. If you have to run a lot of unknown or untrusted scripts dynamically at runtime, you probably want something else.
very easy in Delphi...with a good SysTray component. Surely, you can do it in C#.
I'm not sure I understand what you're trying to do. The system tray programs are running applications. If you have an app that you've set up there, you can have it open a form with right-clicking on it. That window can display the contents of a specific directory but I'm not sure how you want to build it if you don't dynamically build it first. What kind of app or tool are you trying to create? Maybe that will help explain where you're going.
Just a reminder that the latest version of Unity also includes a 2D framework.
2D shaders/lightning would be really nice
The 2D framework has a ways to go IMO. Something as simple as horizontally flipping a sprite gets way complicated and a lot of people start recommending to just use the 3D physics (which in my case wasn't a viable solution).
Unity will give you access to a bunch of functionality out of the box. But you still script with with C# or javascript within it. Unity development is a nice skill if you want to get into game development anyway. It's a great way to prototype a game or even develop full feature games across multiple platforms. Avoid visual basics like the plague. You should consider the quality of your life as an inversely proportional with Visual Basic experience.
I'm trying to create a formless application that runs in system tray; when a user right-clicks on it, they would have a context menu. Hovering over one of the menu items would expand to display the contents of a specific directory containing files and folders (similar to how the Start menu works, where single clicking any of the files will open them). I believe i can do it without iterating my way through the target directory and building a list, since the behavior already exists when you right-click the task bar and add go to Toolbars &gt; New toolbar &gt; browse to target directory. Once the toolbar has been added to the taskbar, you can click it and see what I'm talking about, how it allows you to browse the contents of the directory and launch files, without having to spawn a separate explorer process or a new window. I'd just use a toolbar, except Microsoft decided it would be best to store toolbar configuration data in a binary reg key
Nifty, I keep meaning to play around with my kinect.
I know those are sample URLs that you provided but do you know what the actual ones are or you expected to create that as well? For starters, I would suggest using a Nuget package called RestSharp for making the actual network calls. 
Take a look at [Nancy]( http://nancyfx.org).
I would focus on learning the concepts, try not to limit yourself to a few languages, all programming skills are easily transferable across multiple languages. Use the tools that are available to you to get the job done. ASP.NET has a long list of technologies that it uses, but at the core it's basically HTML, CSS, and C#. My advice would be to embrace change, there will be a time when you have to learn a new language and it'll probably feel quite daunting, heck, you probably won't even want to learn it but it's important to remember that most programming languages share the same concepts, it's mainly the syntax that is different. So don't focus too much on becoming an expert in a small set of languages, learn *how to code in general* and you will be very successful.
What do you do when you want to integrate two systems that speak totally different languages?
RemindMe! 6 hours
I will be messaging you on [**2016-03-22 14:59:26 UTC**](http://www.wolframalpha.com/input/?i=2016-03-22 14:59:26 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/4bgai6/netc_user_chat/d18xhc7) [**2 OTHERS CLICKED THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/4bgai6/netc_user_chat/d18xhc7]%0A%0ARemindMe! 6 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! d18xhlp) _____ |[^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^([Custom])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^([Your Reminders])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^([Code])](https://github.com/SIlver--/remindmebot-reddit) |-|-|-|-|-|
&gt; Can someone ELI5 why someone would need this? Sure. There are many reasons from gaming to office to industrial. These are just two examples and there are many more use cases.. &amp;nbsp; In the gaming world, many are familiar with using [LUA](http://www.lua.org/) (another scripting language) to modify the [UI](http://searchsoa.techtarget.com/definition/user-interface) (user interface) of games; to add extra features, change the look and feel, so on. The most prominent example of this would be [World of Warcraft](http://wowprogramming.com/docs). &amp;nbsp; In the world of office work, you may be familiar with [VBA](http://www.tutorialspoint.com/vba/vba_excel_macros.htm) for Excel. (Sometimes for bad reasons). That's exactly the same reasoning; a scripting language interpreter built in to the application to enhance / alter functionality. Now in this case it is mostly used to automate certain processes. &amp;nbsp; In my case I am creating a service application that will need to allow users to "plug in" their own scripts that both automate and change the behaviour of certain functionality. The user requirements may be similar or the same for many people, but for one or two it could be completely different. For all, the core functionality of the application needs to remain the same. &amp;nbsp; I hope that helps?
A latency increase by factor 10 is absolutely reasonable. When you send packages on your system to your system, you have to cross no physical network boundary. But when you have the programs on different systems you suddenly need to do a **lot** more (which is abstracted away). Just compare 1ms (local to local) with 10ms (local to server): Still incredible fast, but an increase by factor 10. Besides that.. Without seeing your code it's hard to tell if you do something wrong somewhere.
You can read as many books as you like, new or old. If you really want to become a good programmer you need to spend more time actually coding.
Why not just join the IRC channel on freenode?
Since you know C++ pretty well; why not give Unreal Engine a try? On Unity; Unity's component-entity system is flawed and starts getting in the way instead of simplifying. Personal experience.
https://codingblocks.slack.com
For instance, using (var tcpClient = new TcpClient()) { tcpClient.Connect("127.0.0.1", 1000); NetworkStream dataStream = tcpClient.GetStream(); var writeMe = Encoding.UTF8.GetBytes("Some Text"); dataStream.Write(writeMe, 0, writeMe.Length); dataStream.Flush(); } The "Write" method in the NetworkStream object actually puts the data in a buffer. Once the buffer has enough data written to it, the data will be sent. The "Flush" method in the NetworkStream object, will force all data in the buffer to be sent.
I don't think you want to check the stream.DataAvailable inside the receive loop. 99% sure that's the problem. You're probably seeing high CPU usage (a single thread nearly pegged at 100%) as you loop tightly in the while loop. I'd suggest removing that and doing away with the BeginRead/EndRead and just use Read (you've got a dedicated thread, Begin/End aren't helping here.) Let us know if that helps.
I'm not familiar with Slack, do I have to request an invite for that channel?
Because IRC has like 10% of the features that discord has.
That's not right. I'm sure the buffer size isn't the issue here, it's 1k allocated 1 time and reused. And if your server can send multiple messages before the first is confirmed/acknowledged by the client, then it's possible you'd receive multiple messages in a single Read(). You'll probably want to check up on socket programming and partial reads. The thing I guess I failed to mention since I assumed a change from BeginRead() to Read() is that BeginRead() doesn't block. So you're essentially calling BeginRead() as fast as you can on that thread, and probably many times before ReceiveCallback() is called, you're calling BeginRead() again and you're reusing the same buffer (which isn't a problem if you only have 1 outstanding Read() operation at a time, but you've got many outstanding Read() operations and that's going to be a problem). Change it from BeginRead() to Read(), collapse the ReceiveCallback() logic into the ThreadReceiving() method and it's just going to work... Your next issue is going to be partial reads, you can find plenty of results if you search for socket programming and partial reads.
I used the Size of my buffer as third parameter for BeginRead * The number of bytes to read from the NetworkStream.
Slightly off topic, but if you are a big book reader I suggest you look into [Safari Books Online](https://www.safaribooksonline.com/pricing/). For $40 a month, you get access to a huge library of tech books, I believe they offer a one week trial. I picked up a year subscription on Black Friday for $200 and have definitely been getting a lot of value out of it.
Visual studio online still offers free **private** repositories as well as the task board and other goodies as far as I know. Plus it's dead simple integration with visual studio
How big of an issue is automatic GC in Unity? Do you need to go out of your way to avoid allocating lots of short-lived object instances or is that not a problem in practice?
I am actually out of work at the moment, so I am wanting to make myself generally marketable so I can pretty quickly find some sort of C# job to get some good C# creds. I'm thinking that maybe an MVC app with some SQL thrown in would be good, maybe build a demo database that I can update and search through the web. What generally, would impress? What would make you believe that an old Delphi guy could handle C#?
Check your library too, a lot of them have free Safari subscriptions
[Object.GetType](https://msdn.microsoft.com/en-us/library/system.object.gettype%28v=vs.110%29.aspx) Though you should be wary of relying on that in your code. It might suggest that your design can be improved.
That wouldn't do what he's asking for though. If you have an instance of Class_C then `instanceOfClass_C is Class_A` would return true
Right, yeah, I kinda misunderstood what he was asking. He could still just check for `is Class_C` and `is Class_B`. If it's neither of those, it must be a `Class_A`. But obviously that wouldn't work if you scaled it up beyond three types, so I'm gonna edit my first comment.
 Type type = obj.GetType(); if (type == typeof(Class_A)) {} if (type == typeof(Class_B)) {} if (type == typeof(Class_C)) {}
you could also do if(obj is Class_A)
Wow!...this is golden, exactly the kind of response I was seeking. Thank you very much!
Get the 8th eiditon of Visual c# step by step - same book but for Visual Studio 2015. 
I always prefer books with exercises specifically for that reason. No point in reading about something when you should be reading and *doing*. 
You are assuming these features are not liability to a programming community.
It's a hack, but you could do a thread.sleep(10) in your while loop.
It's less open. You have to sign-up for Slack.
 if (instance is Class_B) { // do B things } else if (instance is Class_C) { // do C things } else if (instance is Class_A) { // do A things } You might be better off using something like the Visitor pattern, so if you're trying to do the above in VisitorClass, Class_A defines a virtual method, Visit, that takes a VisitorClass: class VisitorClass { public void Visit(Class_A a) { /* do A things */ } public void Visit(Class_B b) { /* do B things */ } public void Visit(Class_C c) { /* do C things */ } } class Class_A { public virtual void Accept(VisitorClass visitor) { visitor.Visit(this); } } class Class_B : Class_A { public override void Accept(VisitorClass visitor) { visitor.Visit(this); } } class Class_C : Class_A { public override void Accept(VisitorClass visitor) { visitor.Visit(this); } } And, then, your type-sniffing code becomes instance.Accept(this);
SQLite inside has inside KV store and much more. If you don't use relational features - then you should use KV store! But "outperforming" is a bad word. In case of relational data, you have to write all "relational" features yourself. Then you should check if that performance gain is worth all that code ;)
They want useless features XD
The problem is that also returns true if the object is an instance of Class_B.
Just simple mathematical graphs. I have the logic that gets the numbers I need, I just need to be able to graph the points that I have. 
We use it really intensive. Wanna talk some words about a project? voicechat. Kickoff for open-source project? voicechat. Mentoring? voicechat. Webinars? Voicechat. Since we do all of the things up there a lot, we really enjoy those features. But if you wanna stick with IRC, stick with IRC :)
I guess you don't want to defend that "useless" against a crowd of C# programmers?
If you position it before you scale it, you need to use the pre-scale values to position it. Say your screen is 200x200. If your image is 50/50 and you want it to be 100x100 and centered, you are going to be doubling the scale so it's 100x100 and then adjust the position by placing it 100 from the left, correct? If you do it the other way, you're adding 100 to 50, (150) and then doubling it. So if you want to scale it *after* you're going to need to use pre-scale positioning, and add only 50.
Why don't you have a List&lt;member&gt;'s? Using LINQ.Remove should work with that. You could then use: If (!g.name.Contains("member3")) {} Sorry, I'm on my phone so I can't cross reference the actual code and what I'm suggesting but it seems okay. For more help with lists, see msdn: https://msdn.microsoft.com/en-us/library/6sh2ey19(v=vs.110).aspx Remember there are other collections available to use. 
You need to add a method to the member class that checks to see if it's in there. Alternatively you can search for it directly but it's better to be part of the class. Also, it's a good idea to keep class names capitalized. Edit but you have another problem. You're trying to use member, which is a class name, as if it were an object name. If you're trying to delete g3, you need to remove it from anything it's in, but it's not in anything. So you can just set g3 to null. But the entire program looks a bit confused.
As a former Delphi developer the change to C# should be hopefully easy for you. It was for me. Future employers also might want to see how you generate documentation as well. Something to consider.
It's also a way to avoid virtual dispatch, which can have major performance percussions. (e.g. IEnumerable vs List)
&gt; since I end up loading data for all the repositories Whoah, are you saying in your constructor you're already loading data from your repository? If so, that is your problem right there. What exactly are you doing in the constructor? You should really only be initializing your class properties/fields.
Came here to the say the same thing. Lots of libraries also have subscriptions to Lynda.com as well
&gt;My Google-Fu is failing me. I'm trying to figure out how to do DI via a controller's method (e.g., an ActionResult). Do you mean how does the ActionResult get created? if so the answere is you create it inside the method. No DI involved. &gt;Right now I am passing all the dependencies in via the constructor and it is causing performance issues since I end up loading data for all the repositories I need to use anywhere in the controller. The repositories shouldn't be loading data until someone calls a function to do so.
What are you asking exactly?
I am asking for the C# code that would do the same thing.
What have you tried?
This code you have provided does not really make any sense, and has some errors just glancing over. What exactly are you trying to do? You can't just dump code and say convert this to X. There are limitless ways to go about it and different methods and routines in various languages. I am fluent in both Java and C# and would love to help, but need to know what im helping with exactly :)
This is what I did: public class MyClass { private BBB mBBB = null; public MyClass() { } public MyClass(BBB mBBB) { this.mBBB = mBBB; } public abstract class AAA { public abstract MyClass method(); } public class BBB : AAA { private int someint; BBB(BBB orig) { } public override MyClass method() { } } } It doesn't give errors, BUT i am not certain whether i converted the visibility right and maintained the same functionality.
Nope. For each uses anything that looks like IEnumerable. I'm working on an article on the topic, but briefly iterating over List&lt;int&gt; is 58% faster than iterating over an IEnumerable&lt;int&gt; containing the same list.
Oh alright, I was confused by your wording.
&gt; public class BBB : AAA &gt; { &gt; private int someint; &gt; &gt; BBB(BBB orig) { } &gt; public override MyClass method() { } &gt; } Should be of type sealed, if you want to replicate the Java code. This makes it so other classes cannot inherit BBB. Other than that, it looks about equivalent!
skylar is correct, I'm fluent in c# and Java but it's hard to convert code that is meaningless with what appears like mistakes. For example, how exactly do you create a new BBB class considering it requires a BBB class in the constructor (which is final/sealed)? I suppose you have to pass it null? What's the point?
&gt; how exactly do you create a new BBB class You can't even do that in the first place since the class is static. I have no idea what this code is trying to achieve...
Just a quick question, Should I use the factory pattern for the commands, or are interface's sufficient?
Well the other features are literally just little things that make life easier. But if you dont want those, why are you a C# programmer? You could´ve just get stuff done with C++ too. Its all about things that make life easier.
No, I don't believe you can use types as arguments to a switch/case statement.
Stick with the injection in the constructor but instead of injecting repositories, inject service classes that interact with those repositories. Your Actions within the controller can then call methods on the service to get data and put it into a model for your view, or write data to the repository. As long as your bindings are scoped correctly, this should be a fairly efficient pattern.
CLR via C# to understand more what's happening beneath is a great read as well.
 static int someint; you can have static member in non-static class.
You posted this **shit** already in /r/programming. And also here: That's an awful API. And it's labelled rest, while it's not a rest API. How is "web.send.rest" the name of a **resource**? Besides that: - The example code does not even compile. - It does not URL encode the parameters. - There's no example how to add more than one recipient. (Comma separated? Repeat the parameter?) - The char set is not set to UTF-8, but then the string is sent as UTF-8. - `using`-statements are not used. - It's not using the async Task based methods. This leaves a very very bad impression about the quality of Pepipost.
I guess this one is slower, but more readable: Color.FromARGB(a, r, g, b);
Thank you.
How about [StructLayout(LayoutKind.Explicit)] public struct Color { [FieldOffset(0)] public int argb; [FieldOffset(0)] public byte b; [FieldOffset(1)] public byte g; [FieldOffset(2)] public byte r; [FieldOffset(3)] public byte a; }
&gt;result in deleting all colors besides red True, thank you for pointing it out. Its been LONG time since we learned this in UNI and I am rusty. &gt; wrong identifiers Yeah, I keep messing up when trying to make the code more readable for you. I am actually using: private int color = unchecked((int)0xFF000000); public int red { get { return (color &gt;&gt; 16) &amp; 0xFF; } set { color = (value &lt;&lt; 16) | (color &amp; unchecked((int)0xFF00FFFF)); } }
 (newRed &lt;&lt; 16) + (color | 0xff0000) so just mask out your existing red and replace it with the shifted value.
By the way, .NET already has a pretty nice lower level email API built in. What do these libraries achieve that's not there in the System.*?
Delphi has dUnit...I've played around with it a bit, but not had much traction.
Apparently it'll be updated to 15 or whatever when C# moves up to 7 too. I know, I don't get it either.
Unity is pretty awesome and you can just about write a 2D snake game without writing any code. The downside is, there is a good chunk of stuff that's completely unrelated to C# to have to learn in Unity, some of which you will almost certainly use later on if you continue to build games (linear interpolations and quaternions, for two) and some of which are Unity-centric. I'd give Unity a try if I were you but realize that if it does seem too daunting you can always move to... geez, I don't know, reviving XNA in VS proper? What frameworks do the kids use to make games nowadays?
Recursive inline functions is the only good use case.
&gt; If you require this, it easily can mean your classes are too big already anyway. I don't see what it has to do with class size. Method size, perhaps...
The way I saw it explained was with having a parameter check and throw, then an implementation in the local function. 
And why not just have it as a regular private method?
Embedded? What do you mean by embedded? Wouldn't that be something stored in ROM or something? Just where are you planning on putting your app? As for what language, C# is great for web pages, and afaik it should be able to handle just about anything. But really you need to define what result you want. Interactive like a game? Data search like a web scraper?
Friends don't let friends use entity framework. There's nothing wrong with it, but I've seen some really bad behavior by people that don't know how to use it. I've hear rumors, that edmx was going to be removed, but I don't remember where I've seen it.
I don't see how that's really beneficial. As am engineer who is concerned about complexity and coupling, I'd worry about the sizes of my classes and methods. Requiring such a feature in my code would probably indicate that there is something wrong with my code base.
But that's a damn *good* use case. 
Are you familiar with Javascript? There's a great explanation of higher-order functions and specifically the Y combinator using Javascript (which has that feature) that should illustrate the value: http://kestas.kuliukas.com/YCombinatorExplained/ Local functions are a *powerful* feature. 
An unintended side effect of this kind of change could be making the language much harder for new programmers to pick up. I work with new programmers fairly regularly, and placing functions inside of other functions because they dont quite grasp scoping yet is a very common error. Making that syntactically valid will dramatically increase the "debug time" for this error for new programmers as they try to figure out why they can't use this new method they just made. Expect to see (even more) entire programs written inside of the constructor/main... I do not envy any CS101 professor teaching in C# if this goes in. EDIT - Since I am getting downvoted I just want to make clear I do support the inclusion of this feature. I was just making a point that it does harm the approachability of the language a bit.
"...It's inefficient and it's ugly, but it's clever..." I didn't realise that 'clever' was the most important metric for maintainable production code.
Forgive my ignorance, but what exactly is the difference between a local function &amp; an anonymous function?
Regardless I think it would be pretty neat to have
I would refactor the check for isInBorder to a separate method to make the code clearer.
I'd use the top one, but pull the xShifted out of the 'y' for loop so it isn't calculated so much (negligible performance difference with a subtract, but just a nitpick of mine). Same thing with the 'x' half of the isInsideBorder checks. If this will ever be high performance code, that's one thing to keep in mind.
Maybe it's just the phone formatting but I'm not seeing it. Alright yeah my phone was cutting out most of the code.
Because it's easier to get scope right with a local function. I mean, that's also the biggest drawback - your function potentially has access to lots of variables it shouldn't have access to - but I know when I'm plugging in some client side code, I'll use local functions for exactly this purpose.
The thing is, programming always has been and should continue to be as much about having a conversation with future developers as it is about writing stuff that does what you want it to do. Someone teaching CS101 might very well say "some of you will see that you can do this assignment using local functions, but I don't want you to solve the issue this way". As long as they make a good case for why (students need to understand proper class structure, coding is language, etc.) I don't see an issue with stipulating this as part of the grade.
Your question doesn't really make sense. Hopefully the following stuff can help you clarify what you are really wanting to do. A web application runs on a server and is generally accessible from any device with Internet access and a web browser. This is probably the easiest method to get something to "run" on everything. And yes, you can develop it in C#. If you're looking at primarily targeting mobile devices then Xamarin or Apache Cordova are probably what you need. In most cases, making an application available everywhere means you will be using a combination of tools and environments producing applications specific to each platform. Java is very strong in this case. 
Jesus Christ, that reminds me of FizzBuzz enterprise edition.
Local functions also don't requirea closure so it doesn't create gc objects as a side effect like lambdas do. But they still have access to the local scope. Useful for recursive algorithms, generators and state machines.
you can do that with Func's and Actions
It has performance benefits as well.
He's talking about a specific instance that removes all "var" declarations, not about the concept of a y combinator. 
Sorry I'm not proficient in web related development yet, by embedded I suppose I mean something like an application that is contained within a webpage, like a Java Applet or Flash game or something. The application I intend to develop would help manage employee schedules in the department I work for, by giving all employees access to view their schedules, request changes, etc. Maybe an actual web environment is the way to go, however I will need to read up on PHP, HTML, CSS, JS, etc etc. I don't have much experience in those languages.
In a method state machine you can introduce methods to simplify altering the state of the state machine without creating gc objects. Today you would have to copy/paste code, introduce a closure or create a class solely to keep the internal state of the method. An example could be a stream demuxer.
Local functions would be a welcome addition. I often use them in e.g. Python or JavaScript. They are great for encapsulation and increase readability. 
Hi, I'm the intern who implemented the prototype for local functions last summer, [see here](https://github.com/dotnet/roslyn/pull/4940). If you have any technical questions about the implementation of local functions, I'd be happy to answer them! (Unfortunately the design was mostly finished by the time I arrived, so I can't really comment on design decisions) In particular, I spent a lot of my time exploring optimizations, especially around closure analysis and interaction with lambdas. For example, if a local function captures a local variable or parameter, is not converted to a delegate, and does not share a scope with a lambda or another local function that is converted to a delegate (lots of edge cases!), then the closure will be a struct and passed as an extra `ref` parameter. This saves two heap allocations, one for the closure object, one for the delegate, which in some tests, saw a 6-8x performance improvement!
It's not a rumor. They clearly stated that they will only support code first.
I tried your code and it seems to work. I was able to add seasons/episodes to the database. What's the code you have for updating data? Are you using the latest version of EF7?
That article and the y combinator is about computer science and lambda calculus, not maintainable production code.
Don't delegates serve as local functions already?
Lambdas don't require a closure either. You have to actually close over a variable to get a closure. EDIT: I guess you could say that local functions won't allow closures, but we don't know if that's going to be true or not.
Such as?
Wow you definitely pointed me in the right direction. I can't check it out right now since I'm not home but I watched a few quick tutorials and I am very excited. Web development has always been intimidating for me, and nothing stresses me out more than the lack of customizability with all the wysiwygs out there. Being able to code the entire site from the ground up will be much more fun and rewarding!
That makes a lot of sense! Let me ask you another question, what scenario would warrant the use of a local function? If the child function will die once the parent function stops executing. Why not just write the code in the parent function ? Thanks
Pretty sure Models needs to be public virtual ICollection&lt;Model&gt; Models { get; set; }
So basically it is a glorified goto? No thanks. If you find a way to eliminate the need for temp objects when creating closures that we pass to LINQ functions, cool. But this seems like a pointless exercise.
This and the retarded static using in C#6 are features I will never use.
Always avoid magic numbers. It's great when a variable makes it obvious what it's for. This is especially good practice when your codebase starts to get big. //10000 lines of complicated video game code, team of 15 developers. //random dev asking why 25 again? if(armor &lt; 25) { do something; } vs //It's obvious what the code is doing if(armor &lt; maxHealth) { do something; } It's also helpful when you are refactoring. You don't have to track down every place you used a number. You can just change the variable and it's all good. 
My mistake, then. Thank you for the correction!
I wouldn't go that far. How often do you actually need a recursive closure? Hell, the vast majority of the time it is better to just use a loop instead of recursion. The only time recursion makes sense is when walking a tree and you don't want to bother with manually maintaining a Stack object.
So we're optimizing for the "accidentally used a private method" case? 
Sign up for Microsoft Virtual Academy, dive in to C#.net You can start today. https://mva.microsoft.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-8295?l=bifAqFYy_204984382 Once you've finished this course on the fundamentals (write down questions you have as you go) you can select the books that will answer your questions in depth. A great way to spend 12 hours you can do over a few days and will inevitably pin you somewhere far better. Also, you'll be doing (coding) within the same day you start, so it'll help you get a feel as you go.
Python allows arbitrarily nested functions, yet it still works well as a beginner language.
And this is why I don't see the use for local functions.
I think it does the whole phrase.
if you are using MVVM design pattern then a better way is to bind the selected value of the Combo-Box with a named property in the ViewModel which sets the property in the Model. Try using Reflections and MEF along with that its pretty easy.
So, at the top having: static using string; Then down in the body of the file: Concat("Test", "Value"); Instead of just: String.Concat("Test", "Value"); Yea, after 12 years of seeing "String.Concat" in the code, I too would be looking for the definition of this "Concat" method. Could start switching everything to the: $"This value plus {variable} is {total}." 
I want to say the issue is that you subclass the model which throws EF off. What happens if you remove the inheritance and turn ItemParser.Parse into static method that takes a node and returns an EpisodeModel object?
I don't get what's so hard to understand about having to search for a method. Whatever you do to find it is still more effort than just reading "string.Concat"
I previously posted this, but: The key difference between a lambda and a local function is that the local function does not need to be a virtual method call. Both may close around variables: public class Test1 { public static void DoSomething() { Action DoIt = () =&gt; { }; DoIt(); } } Compiles effectively the same as: public class Test2 { sealed class LambdaHelp { public static readonly LambdaHelp Instance = new LambdaHelp(); public static Action Action; public void DoIt() { } } public static void DoSomething() { Action DoIt = LambdaHelp.Action ?? (LambdaHelp.Action = new Action(LambdaHelp.Instance.DoIt)); DoIt(); //IL instruction: "callvirt DoIt" } } The local function version: public class Test3 { public static void DoSomething() { void DoIt() { } DoIt(); } } would be: public class Test4 { sealed class FunctionHelp { public static readonly FunctionHelp Instance = new FunctionHelp(); public void DoIt() { } } public static void DoSomething() { FunctionHelp.Instance.DoIt(); //IL instruction for DoIt() is "call Test4.FunctionHelp::DoIt" } } There are perf differences between lambdas and local functions: lambdas instantiate a method pointer and use a virtual method call; local functions call a finalized method instead (so long as you are not assigning to a delegate). This is ignoring some other optimizations /u/khyperiaa meantions like turning that closure into a `struct` instead of a class or possibly not creating it at all and just making the function a munged private member of this class with `ref` parameters. There will be significant perf differences between local functions and lambdas when you do not need the delegate. 
Hopefully you never call the dependency resolver directly like that for a single resolution. 
I've used the recursive lambda hack literally twice in almost 10 years professional programming. I really don't think we need that feature that much and can live with the hack in the rare occasion that we need it. How often do you need that?
when I create a breakpoint at the line where it reads from the buffer, the value in the buffer always seems to be 0? i dont get it it just works for the amplitude. Perhaps the log10 function is too slow since i am sampling at 8.1khz and maybe it doesnt return a value in time to send it to the array before the next dataReady event happens?
A function inside another function..... That is dumb!!! If a function or procedure requires another function just for itself then that function is to big anyway! Same thing for anonymous functions. Why do people insist having things that allow them to have shitty programming skills. 
My bad - I screwed up the link when I pasted it. Deleting and trying again.
Local functions can have closures: https://github.com/dotnet/roslyn/blob/fed660000b6aa17020c1d7f592f21f4d343b22f0/src/Compilers/CSharp/Test/Semantic/Semantics/LocalFunctionTests.cs#L436 drop down to line [979](https://github.com/dotnet/roslyn/blob/fed660000b6aa17020c1d7f592f21f4d343b22f0/src/Compilers/CSharp/Test/Semantic/Semantics/LocalFunctionTests.cs#L979) for a sample of the optimizations available here that are not possible using lambdas. In that test the closure is being done via ref parameters (not possible for lambdas in the CLR; remember a lambda is by specification an instance of a delegate type). `Inner()` is actually becoming something like `private static Inner(ref int a, ref int b)` in the compiled code. 
yes, thanks. So I should use a factory, correct?
I'll try to get back to this later but you can look at my history in this thread and ask questions if you want.
OP is acting like removing EDMX is a bad thing. they need to grow up a little bit. it is a utility that serves a purpose for millions of developers. if you don't like it, use another ORM.
How is that relevant? The common practice is to make local variables have as small scope as possible, even if declaring them in the outer scope would have the same effect. This makes the code clearer, since it's more localized. It also means outer scope can't use the variable by accident. All that applies to functions too, state or mutability doesn't change anything.
I only ever `using static` enums or constants in static classes where I know there aren't going to be name clashes and it should be obvious what the names are used for (especially with a good IDE this is easy to see). This is especially useful to me when switching on enums, I hate having to type the name of the enum every time (especially having come from Java where it's implicit, one of the few features I miss).
A local function is different than a lambda assigned to a variable in a few important ways. * The lambda is a closure, where the local function needn't be (though I'd love an inclusion of local functions as closures with captures). * The lambda would have to be assigned to a variable, which is mutable, but a local function wouldn't be. Just like you can't reassign methods, you can't reassign local functions. * You'd use the local functions similar to how you use methods, to perform a task (usually one that needs to be repeated). Because of this, it's nice to have the same syntax used for both. Yes, you use lambdas for the same thing, but often (if not always) with the intention of passing them to other pieces of code. A local function can be something you don't intend to share. * Lambdas have issues with recursion and yielding that local functions won't. * People have mentioned that local functions could easily be private methods. I disagree, as private methods pollute a higher namespace where they aren't needed. The whole reason private methods exist is because they're only used internally to that class, so local functions are solving the problem of only being needed in a method. Neither will pollute a namespace they don't have any business being in. That's all off the top of my head. Some people might also argue that if you need a local function then you have serious issues in your method. I disagree, of course, because I often have small code snippets that I repeat in a method that could easily be factored out into a local function, reducing risks that I'd copypasta some code thinking it'd be fine or that I'd forget to edit one of the cases that was similar. Same reasons as having private methods, more specific use cases.
Your Func and Actor local variables can be changed, they're variables. A local function would be more like a method, it can't be changed. I also see lambdas as something I intend to pass around, where I wouldn't be doing that with local functions. It's also a syntactic difference. You'll notice right away what it is because it's not a variable. There are plenty of other reasons that have already been stated, I needn't repeat them again.
GetActiveTcpListeners, obviously, returns all listeners, not all active TCP connections. You should read about TCP protocol. There is nothing surprising in random connected port, otherwise it would be impossible for example to connect multiple clients to one Web server.
Actually multiple clients to the same port is not correct example. Better one is having multiple connection from the same client to the same web server.
&gt;People have mentioned that local functions could easily be private methods. I disagree, as private methods pollute a higher namespace where they aren't needed. The whole reason private methods exist is because they're only used internally to that class, so local functions are solving the problem of only being needed in a method. Neither will pollute a namespace they don't have any business being in. I disagree with a lot of that. From what I've seen working with javascript devs, what this will enable them to do is write a lot of confusing, poorly structured code due to laziness. Hell, imo the only reason javascript supports this in the first place is because that's the only way it has of defining scope of any kind.
If you want to get going with it, just do an MVC project. To get SSL and Windows Auth it's mostly just IIS settings and your custom logic for your intranet. It sounds like you don't want to go overboard with extra unneeded code, but in my opinion you should just jump right in and use the tools that will make what you need easy for you. I don't think you'll be disappointed with the MVC project. This link is pretty good for getting going with SSL and Windows Auth too: http://www.mikesdotnetting.com/article/216/windows-authentication-with-asp-net-web-pages
use var for god sake 
&gt;poorly structured code due to laziness not quite. It actually prevents breaking the flow of a funtion if you want to write a concise set of ideas. LINQ is a great example. someList.Where(s=&gt; s.value == 5) versus someList.Where(runMyDamnFunction) 
You can't with lambdas since they can also be expression trees.
You're going to want to take a look at the system.management.automation namespace. I must ask though (and as a great fan of posh), why? Couldn't you achieve the same results in plain c# with less effort?
Log10 is not slow. You have some different issue. If you want to post code i will take a look when i get time. 
Lambdas creates a closure. A closure will be allocated by the gc and needs to be collected. This will move formerly local variables into a GC allocated object if they are used by the lambda which has a higher chance of causing a CPU cache miss. A local function doesn't need a closure since it can access local variables.
its nice, and every feature is a + for me but there are things that would make my life infinitely easier that should have been done before this.. like, mixins / traits or just let me have my macros and ill do the dirty work
So is https://en.wikipedia.org/wiki/Brainfuck ;)
Naming your functions and having a more natural syntax would also be one. In languages that do have local functions, such as Python or Swift, I tend to never use lambdas. 
Because they don't capture local variables. 
They both need the exact same things. Do you think it's magic that allows a local function to access outer scope variables? It's done using a closure in the same way as a lambda. Also, if a lambda doesn't use any outer scope variables, no closure is created and it will perform the same as (and indeed is converted into) a private method. 
Gotcha
well that is unfortunate.
My rule of thumb is "if you use it in more than 2 places it needs a well named variable"
I learned a lot about dependency injection from this book: https://www.manning.com/books/dependency-injection-in-dot-net 1. Your classes that need injection should not be aware of the container. They just need to specify what they need in constructor. You set up which instance to give for specific type during initialization. 2. I have been using interfaces, normal classes, abstract classes as constructor parameter types. You map interfaces, abstract classes to concrete classes in the container. 3. I never did game programming, but IoC container is not 'container' like List or array. You ask IoC container for an object with specific characteristic, and IoC container gives you one.
&gt;Your classes that need injection should not be aware of the container. They just need to specify what they need in constructor. You set up which instance to give for specific type during initialization. I'm really confused by this. For example, I'm using Ninject. I need a reference to my IKernal to create new objects, no? So how do I get a reference to IKernal if I can't use a static class or circular dependency? &gt;Your classes that need injection should not be aware of the container. They just need to specify what they need in constructor. You set up which instance to give for specific type during initialization. Sorry, I guess I worded it weirdly. I meant my game container (my container that contains all my objects). I must add objects there for it to join my game. Which means I'd need a reference to that list, or a method that adds an object to that list, no? Which means I'll need *two* references now - one to my IKernal to create the object, and one to a method that adds the object into the game.
I think that was for IEnumerable implementations, where you can do parameter validation in the main method and then have a local function that uses yield.
I would recommend making the toast a bit more extensible, by making it ContentControl based, so users can provide templates and template selectors. Provide a default template for the header and text, but allow customisation too. And a nuget package...
The self destruct part of the code gives me an array out of bounds error.
But wouldn't, in your cited example, using local functions (or lambdas for that matter) make the code far less readable? Instead of a 30 line `ValidateAndCreateMessages` method, it'll be more like 300 lines with nested functions. I don't think your reasoning is wrong. But I think this might be a poor example.
Excellent idea!
neat. although, i'd honestly prefer to see a library that provides an abstraction layer for the default notification systems in windows. windows vista &amp; earlier: https://msdn.microsoft.com/en-us/library/windows/desktop/ee330740%28v=vs.85%29.aspx windows 8 &amp; 10: https://msdn.microsoft.com/en-us/library/windows/desktop/hh802768%28v=vs.85%29.aspx
Not really. https://gist.github.com/bbarry/aaa21adfd793fadceb9b Yes the method including the local functions is long but as long as https://github.com/dotnet/roslyn/issues/5173 gets implemented, I don't think that is a problem. The main body here is 21 lines long and very readable I think and each local function doesn't lose anything over what it would have if it were separate. To really get a grasp of what is happening in this method group you need the whole set inside that region so having them in one method or in one region doesn't gain you anything either way vs the other.
Not entirely. The method is checking for * and ?, where ? can be any single character and * can be any number of characters (including no characters). te?t matches teat, tebt, test, tect, te1c, te2c. It does not match teabt. It does not match te. te*t matches teat, teabt, teabct, teabcdt, etc. It also matches tet. It does not match tebbbbbc. te* matches te, tea, tealkasjdgkljdslkgjsldkgjklsdgls, etc..
Without branches one is nice, could easily be moved to a compute shader if it needs done a lot! 
But how did you left-pad? Think I remember seeing that book lying around at school actually.
That's possible, but I did some testing a number of years back and found that accessing via pointer was a negligible speed improvement vs. accessing via array+index. Not sure how strings work, but I'm assuming they are internally an array, so I wouldn't expect the unsafe code to have any speed impact.
Yeah it will be negligible if there are only a few hundred elements in the array. Can be a big deal if there are a few million! 
I've had a lot of problems detecting client disconnect. It works fine if it's a clean disconnect, but if the physical transport disconnects, it doesn't get detected. I'd love a solution for this, but haven't had time to investigate. I put in a simple watchdog message to detect unusual disconnects as a hack. However, one thing you mention strikes a chord with me. You talk about your server thread. Is this a System.Threading.Thread instance that you create? If so, do you set IsBackground=true?
Yup! server = new Thread(new ThreadStart(Server)); server.IsBackground = true; server.Start(); It's crazy but when I stop my Unity game my debug messages from Server() just keep coming, making the thread a background process doesn't seem to matter. Maybe it's just some quirk of Unity but the fact that this doesn't work and neither does the GetActiveTcpConnections() trick is becoming really disheartening. For reference if you haven't tried it yet, [this](http://stackoverflow.com/a/19706302) is the GetActiveTcpConnections() trick I'm trying to use. You get all active connections, find yours and then keep checking it for !State.Established. My issue has been that the ports listed for my connection are completely different from the ports my TCPClient claims it's using so I have no definite way to find my connection in the GetActiveTcpConnections() list. But everyone else says it works just fine for them so I'm convinced I'm doing something wrong, and maybe it'll work for you.
Could you do something like this efficiently with parameters? is this faster than doing a full insert statement multiple times in a single execute command?
I have it inserting in one big string now shown below like you suggested and it is executing in 1 minute still not as quick as I would like but a lot better thanks! INSERT INTO database.Table VALUES(11,380.75,0.961,0.679,-0.325,0.2,0.459,69.65098634,30.34901366); INSERT INTO database.Table VALUES(11,381,1.078,0.863,0.053,0.205,0.454,68.892261,31.107739); INSERT INTO database.Table VALUES(11,381.25,0.602,0.887,0.488,0.2,0.449,69.18335901,30.81664099); INSERT INTOdatabase.Table VALUES(11,381.5,0.621,1.042,-0.364,0.229,0.469,67.19197708,32.80802292); INSERT INTO database.Table VALUES(11,381.75,1.058,0.764,1.038,0.2,0.474,70.3264095,29.6735905);
I edited my post just before you saved yours. I had forgotten about the ability to use multiple "values" clauses in an insert. That should make it faster, if for no other reason than because the string you send to SQL will be much shorter. I can't remember what version of SQL Server they introduced that feature but it should be available to you unless you're using a really old version.
I just tried this seems to take the same amount of time as putting it in as one big string but thanks for the advice and the spelling mistake!
Another possible solution: You could also use the built-in functionality of MySQL to import your csv. Example: http://chriseiffel.com/everything-linux/how-to-import-a-large-csv-file-to-mysql/ You could put your command in a batch file and schedule it, or run it from your C Sharp code.
Also, why do you have everything read into a datatable first? Could you combine those two steps? Read the line and directly translate it into your parameters?
the truth of the matter is that this is a terrible way to import a csv file, but what i posted should drastically increase performance with minimal code changes. performance wise, i think one insert statement and multiple should be relatively the same. the better way to do this would probably be to use SqlBulkCopy which just takes a DataTable. http://stackoverflow.com/questions/20759302/upload-csv-file-to-sql-server this has the added benefit of not building sql statements in code. my personal preference is to make stored procedures for everything. in which case i'd probably just make a table-valued type as a parameter for this bulk insert stored procedure. this way also just lets you pass in a DataTable. https://www.mssqltips.com/sqlservertip/2112/table-value-parameters-in-sql-server-2008-and-net-c/
yeah, for a dozen items, even I would give zero ... cares... about performance. Unless it is being called 10k times a second or something. 
I work on an application that frequently loads millions, sometimes hundreds of millions, worth of rows worth of CSV data into a sql server database. As others have suggested, use bulk copy for this. Specifically the SqlBulkCopy class. If your database can directly access the file, you're pretty much done. If not, you can combine TextFieldParser and a custom implementation of IDataReader to stream data from your flat-file into your database. How this works: SqlBulkCopy can draw its data from IDataReader. You can use TextFieldParser to read a flat-file line-by-line. Use this to roll-your-own IDataReader wherein Read() advances the TextFieldParser one line.
Thanks for the link! So to use dependency injection, it basically does the parameter passing for me, right? So this brings up another question: people here have told me to have the injection container inside my Main method. Does this mean I add my "main" class that brings my application together to the dependency injection container (in this case, IKernal)? If so, doesn't that mean to create *any* object, I would need another class to do so? If nothing in my application has scope of the kernel, the only way to create another object would to add a factory class, add it to the kernel, and then create the factory class. That sounds really wrong but I can't see how you create objects any other way if it's out of scope.
Yes, bulk insert would be the way to go - send it all in one go, it will spare you a lot of overhead! And you probably also want to look into the misspelled column "culumn2". Future maintainers will thank you!
yeah, i figured. i've got a tool where im bringing in maybe 3,000 to 10,000 records at a time. whole thing takes about 5 or 10 seconds, typically, but its not a csv.. its sorta calculated data. so my option would be to process it and save it as a csv, then bulk copy. but i was just looking for a more "right" way to do it. currently, i'm preparing a sql statement, then looping through all the variable sets 
instead of dumping it to a csv, you can just build a DataTable object with your data and use either of the two methods i linked to above.
"0" is the placeholder for the 0^th argument after the format string. The "c" means to make it look like a currency value, with currency signs, etc. according to the local computer's control panel settings. So in the US you'd get $123.46, but in France you'd get 123,46 € 
The problem is using curly brace indicates a markup extension in xaml, but you are trying to give it a string literal of "{0:c}". You need to [escape](https://msdn.microsoft.com/en-us/library/ms744986.aspx) the markup extension syntax by doing Content="{Binding Path=Double, StringFormat={}{0:c}}"/&gt; 
Factory as a concept may be totally overkill here, I'm deliberately trying to avoid the word - it insinuates that you're using the abstract factory pattern to build something from a hierarchy of objects. I look at it from a perspective like - Here's an interface `ISettingsStorage` for something that lets my application load and store it's application settings. Or here's an interface for a service `ISerialiser&lt;T&gt;` that defines how an object will be serialised if it's being written to a file/network/memory stream. It's not a factory, it just does a particular job, and often part of that job is creating and returning an object to something else. And that's fine. There's nothing wrong with new'ing up an object and providing it to something else to use. You've got to have those new calls somewhere. I think you should definitely start trying to write tests for your code, it's going to all of this make a lot more sense. It's a good habit, and it will make you think about things from another angle. This (DI/IoC) is the solution to the problem you'll face when you're trying to unit test ClassA, but ClassA doesn't work without ClassB, and ClassB touches the file system or network or something, and all of a sudden you can only test the thing as a whole. DI is a technique to help you overcome having concrete dependencies - and as a result your code naturally takes a better design. Otherwise, if you don't have a large codebase, and you're not writing tests, you're looking at a solution without being driven to it by a problem, and it's not going to give you the full context. Put yourself in a position where you really have the problem to solve, and it'll all fall into place naturally.
On the database side: too many indexes on a table can slow down inserts. Also, it looks like you are reading the entire csv file twice?
I think I understand. Thanks a lot for the info. I think I'll take your suggestion and look at factories when my code base comes bigger with a deeper hierarchy. I had *one* more question about DI: people here told me to have the DI container inside my main method. But that would make the kernel unusable in another scope. And I read [here](https://github.com/ninject/Ninject/wiki/Object-Scopes) that you should use a singleton. Does that mean the kernel should go in the singleton, not the main method? And how would a singleton work with an external list of entities? 
the only time I've had to use the Service Locator pattern is for MVC and WebApi filters. With filters, constructor injection does not seem to work. Have had to resort to calling the dependency resolver directly. that makes me sad.
This looks very interesting!
not always true - the goal is always context-dependent. sometimes performance tricks may defy maintainability ... or vice versa. 
Shouldn't this be titled '... with ASP.NET Core 1.0'?
Well, it's using RC1, where it was still named ASP.NET 5.
He seems to be wanting to use it with powershell, so it really doesn't matter.
Here's another way of approaching this kind of issues .OrderBy(i =&gt; ObjectsA.IndexOf(i) &gt;= 0) .ThenBy(i =&gt; ObjectsA.IndexOf(i))
Hey, if this is still going I'd love the license! Resharper is amazing but a little pricy for me unfortunately
Send you message. 
Dammit I would have loved to have the licence as my boss refuses to buy one haha. Thanks to you anyway and congrats to /u/opticalza :).
If it's up for grabs by chance, let me know!
Unfortunately no ;/
Good on you for sharing with our community! 
He is the kind of boss that refuses to pay for a Safari Books Online even though I'm willing to read the books in my free time :/. I told him it was a productivity tool, but if he buys a license for me he will have to buy a license for the whole team and my colleagues don't want to have to learn how to use it.
Just FYI, if you buy a personal license ($129 for the first year, then decreases) you can deduct it on your taxes next year! 
If you are a student you can get it for [free](https://www.jetbrains.com/student/). 
I have one.. thanks love it!
I would again encourage you to read the above mentioned book. It is really great; the introduction is one of the best motivation I have ever read! (Iirc that is free to read, so you get an impression of the topic)
Thanks for the input but I can't do this in France :).
What's a France? Just kidding. Best of luck then! :)
Yep... been waiting a long time for the rename to come out :)
Yeah the rename to .net core will break a lot of stuff, but hopefully Visual Studio will help renaming everything and fixing up the project. I wouldn't use it in production yet because of the known upcoming massive changes.
It does support UWP applications. You probably remember it wrong and did not select it for installation. For UWP development you need at least Windows 8.1 or later as your operating system.
The ultimate edition has incredibly great profiling tools you can light up on a production instance alongside pdb and source and get ready good information. No Visual Studio install required.
got an example? would love to use this.
[Fiddler](http://www.telerik.com/fiddler/web-debugging) provides the functionality you're looking for.
Yeah, Ive gone through it a couple of times (setup) and each time I go in and select the checkbox, but after setup completes, its just not there. Gioing back into setup, and those options are not checked again. Going to try running setup as an admin. Edit: No luck. Same situation. It does show: Windows 8 -&gt; Universal But in there I only see Class Library
The big one is IEqualityComparer&lt;T&gt;. Something that implements this interface has a method, `bool Equals(T thingOne, T thingTwo)` which lets you know if an instance of T is functionally equivalent to another instance of T using a custom comparison algorithm. You use it with other generics, like `List&lt;t&gt;.Contains(T item, IEqualityComparer&lt;T&gt; comparer)` because otherwise how can a list know if something equivalent to "item" is in the list? You then write the class public class CarEqualityComparer : IEqualityComparer&lt;Car&gt; { public bool Equals(Car one, Car two) { //stuff to determine equality } }
Are you on windows 10 or 8(.1)? I think you have to be on 10 for the 10 versions since a lot changed between 10 and 8(.1). File -&gt; New Project -&gt; Templates -&gt; Visual C# (or w/e) -&gt; Windows -&gt; Universal -&gt; Blank App. I'd recommend checking out Template 10 by Jerry Nixon from Microsoft which gives you some starting templates as well as some extra features built in. https://visualstudiogallery.msdn.microsoft.com/60bb885a-44e9-4cbf-a380-270803b3f6e5
&gt;new FeedParser(NewPodcast.Text).Season Is there a reason you aren't returning the item directly? A method call instead of creating the new object and pulling the property from it. eg: FeedParse(EpisodeModel model) returns either a "ParsedFeed" object that has the season object, or just the season itself for now? Your class is also internal, which I think can cause an issue, try making it public?
And I did forget, but gimme till after work today and you'll have that link, busy week
Yea have it at work but not at home, and my work VS is paint drying. However as a senior dev who does code reviews, it is a huge time saver.
Why do I keep torrenting shit I wonder
I am dumbfounded with it, cannot get it at all. It is for a uni project, so i dont want to post the code in case i get flagged for plagiarising my own work, but if you are still happy to have a gander ill happily PM you it?
What's not allowed, is to be compensated by your work for getting a personal license.
Not sure what you're trying to do here. Do you just want it so that if the user clicks the header to your column the contents of the column get sorted based on your sorting function?
Thanks!
This Stackoverflow post has a fairly clean MVVM approach to this problem I'd recommend http://stackoverflow.com/questions/18122751/wpf-datagrid-customsort-for-each-column/18218963#18218963 specifically **trilson86's** reply.
X-Post referenced from /r/dotnet by /u/Aaronontheweb [On The Efficiency Of ValueTask](https://www.reddit.com/r/dotnet/comments/4bykxb/on_the_efficiency_of_valuetask/) ***** ^^I ^^am ^^a ^^bot ^^made ^^for ^^your ^^convenience ^^\(Especially ^^for ^^mobile ^^users). ^^P.S. ^^negative ^^comments ^^get ^^deleted. ^^[Contact](https://www.reddit.com/message/compose/?to=OriginalPostSearcher) ^^| ^^[Code](https://github.com/papernotes/Reddit-OriginalPostSearcher) ^^| ^^[FAQ](https://github.com/papernotes/Reddit-OriginalPostSearcher#faq)
I couldn't find out if e.result.Text does a whole phrase or not. Also, wordlist does not like the length property.
Sounds like you need to move to a more motivated company. 
I'm not entirely familiar with winforms, I typically use wpf. But can you create an `onClosed()` event for the popup that attempts to reopen the port? It seems to me though that you'd be better off just passing the serial port object as an argument to the popup. Since it's a class, it will be passed as a reference. Then you don't need to do anything special. The popup can just use the object reference that's already opened without any other special treatment.
On a side note, I see that you just made another post to r/csharp clarifying the question. It might be worthwhile cross posting to r/learnprogramming. That sub has become somewhat toxic recently, but it is more active I think and there are a lot of knowledgeable people there.
Do you know how to use checkpoints? Or print the e.result.text to the console or something? Also, it should have been wordlist.Length. Come on. Put some effort into this.
I found that the Activated/Deactivated event controls allowed me to achieve me goal. The Onclosed event did not work for me because I didn't know how to reference objects in another form.
All of these things are separate. You have a connection to a com port, something that reads/writes to that, some forms etc. If you want to show one form then the other, cool, do that. If you need to do some communication, do that too. If the forms need to interact with the com port, pass it around. Look into separation of concerns and some OO primer.
Passing it around was the problem for me, I could pass it down the chain, but not back to the beginning. I found out about the Focus Events 'Activated/Deactivated,' which has given me the ability to do this. 
Because you are to ~~cheap ~~ unwilling to pay others for their work?
Because I'm a broke ass student who can't afford to pay professional licenses? What the fuck else did you expect
Mustn't be any WiFi in the tomb, my saviour
The issue is thread affinity. A lock (i.e. Monitor) synchronizes threads and async operations can resume on different threads. Semaphores don't synchronize threads. They synchronize flows, so you can use them with async-await. For example, locks are reentrant for threads but semaphores aren't.
Stephen Cleary (Microsoft MVP and the author of the O'Reilly Concurrency in C# Cookbook) has a library called AsyncEx. Among many other helpful tools, it includes an AsyncLock: https://github.com/StephenCleary/AsyncEx/blob/master/Source/Nito.AsyncEx%20(NET45,%20Win8,%20WP8,%20WPA81)/AsyncLock.cs
Yes please.
Great resource! thanks @Galestar!
EDMX has proven to be insufferably bad on team projects. Large XML files and branching simply don't mix.
Exactly my point.
Excellent description! Thank you for clarifying this.
Just in case someone else comes across this and has a similar issue. It looks like my elapsedTime is set once, then never updated. I'm still working on getting my timer tick updating.
Thanks!
LinqPad is great for quick code situation so where you don't want to create a full project. And to answer your question, yes, learn powershell. 
you're welcome. Let me know if you need help on that code.
Not if you only want to develop for android, imho. Xamarin is very expensive* and the additional abstraction layer will slow you down. Apart from that, Visual Studio seems to be slower than Intellij IDEA/Android studio, at least for me. *come on Build 2016, I want a Xamarin Community Edition
I got so excited when I learned of Xamarin. I was interested in making an android game for my sister but I'm a .Net dev and have hardly ever touched Java. Then I found out that you can't even build the samples in VS without paying.
sorta what java is minus a little syntactic sugar
I wish I would have known about LINQpad before now. 
It is such a great tool for ad-hoc coding or proof of concept stuff.
That would be so cool. I think it's more likely they will release a free version only for small teams, though. That alone might already be game changing
So you'd rather pick cordova over Xamarin? Because I'm starting work on a cross-platform app and I know JS very well, but not .NET. But it's between Ionic framework and Xamarin. 
Personally yeah, id go cordova. But why not try both. Mock something up quickly as you can with both and see how they compare. 
If you know C# and you know how to use LINQ, you are halfway to knowing powershell already. They are using the same types and powershell can even load .net assemblies and use its classes and methods. Its very useful for quick one-liner code you suddenly need to run on a computer. Like rename a lot of files after a certain logic. Or just do a quick POST request to a webservice. Or test if a network port is responding. Or export all your IE/Edge passwords to a text/excel/csv/json/? file. Or find the current wallpaper and delete it, or open it or rename it or whatever. Once you know powershell, its slightly quicker than creating a *.cs file which you have to create a class, a method, then compile and run it. And quicker than having to install third-party tools.
React native is also worth considering.
Thanks. I agree. But the code in the linked article creates a **SemaphoreSlim** object in the class method. It doesn't create it once and then re-use it, for example in a static constructor. I am new to async coding in C# 6, but not in multithreaded coding in general. I do not understand how this code does any kind of thread blocking.
Way too slow? In what case? Be specific.
PowerShell is really nice
I'm also a C# developer and find that if I'm designing anything with a GUI; it takes me a lot of time compared to just using Powershell. However, I can write Windows console applications pretty fast :)
I just wish Xamarin releases a fully featured version for non-business use. Fair enough if you're going to make money from using their software, but it's so backwards the way Xamarin is crippled.
That's actually a good idea, thanks.
It's my job to build tools that technicians use to fix personal computers. My tools have repaired well over 1 million PCs and counting. I use C# to build all of them. That said, why not learn powershell? Worst case, you know another scripting language. If you need any tips for the C# side, shoot me a message and I'd be glad to help out.
I went from a company with virtually no power shell on the dev side, to one with tens of thousands of lines of powershell. Things are automated that I never would have thought to do- scaffolding solutions, release management, machine setup... It's super nice, and totally worth it.
http://www.nrecosite.com/video_converter_net.aspx it's not free though
hmm, perhaps. I think what you said could have been viewed that way as well as actually recording and reusing the pre-scale positioning value. Oh well, ambiguity is definitely clear now :)
Over 1 million PC's? If you don't mind me asking, what tools did you create? I may even use them where I work.. 
You can write a c# program, but being able to just hop on to a machine and make some "complicated" changes without needing to compile some other code is totally invaluable. 
Everything you can do in explorer you can do in powershell, and a whole lot more. Connect to databases, create complex spreadsheets, manage users. You can also create winforms apps, and now also asp pages, I believe. 
Anything you can do in C# you can do in Powershell. You could even parse razor views. 
There are lots of ffmpeg bindings on github. Look through them.
I have found powershell is really great for file management in windows. Also, sometimes a programmer needs something better than doscmd to do a series of executed tasks without writing a service or application. I know lots of full stack web developers who use windows that really appreciate the "power" of powershell.
&gt; Unfortunately there are many stored procedures where the structure of the returned data varies greatly depending on its own internal logic. The example code would fail instantly if this assertion was true for the underlying data. This framework doesn't solve the stated goal at all. It seems more like a convinience wrapper for SPs as it doesn't actually handle relational mapping.
I can't speak for Xamarin, but cordova is buggy as hell. According to the UI devs I work with, you essentially end up writing a separate application for each minor version of Android. 
It's just a poor example in the code. In general you'd create one semaphore and store it in a place where it can be re-used. The example as-is is indeed not blocking at all.
You are correct; the example was misleading. The SemaphoreSlim should be a Singleton throughout the lifetime your application. I have updated the blog post to make this clear. 
Ignoring that this is a CS 101 level subject better suited for /r/learnprogramming, the code sample is pretty bad and the text has grammatical mistakes. Edit: I'm assuming the author is ESL, which explains the grammatical oddities and mistakes. 
Open vs in safe mode and uninstall your extensions
Powershell is a breeze of a language. It's incredibly easy to learn. Just pretend like you already know it and jump in. If you run into a problem just call some C# from PS. They are both built on .NET, so anything you can do in C# you can do in PS, minus making classes (well made classes anyway, I know it's possible, but it' not as fluid or useful as C#). What you should really learn is how to use WMI. It' pretty important when using PS, but you may have alread used it in C#.
you can always use WMI in C# for a lot of those remote tasks. Still PS is probably better for doing certain automations.
There is a log that will give you clues, spelled out in the actual error message, and you don't even include it or read it?
http://imgur.com/Ivd1B3Y Is this it?
Open the activity log mentioned in the error to find out the problem.
Double click the file and open in IE. A stylesheet makes it readable.
As an engineer worried about people perpetuating nonsensical arbitrary rules for arbitrary reasons, why? You're one of those "your method is bigger than 25 lines!!!!!! Refactor it now!!!!!" People. This "rule" is complete bullshit. If your method needs 40 lines then it needs 40 lines. If your class needs 3000 lines, then it needs 3000 lines. I've seen commits that are literally just "took this loop out to its own private method that is used here and only here for no reason other than some random rule I read on the internet". Stop it. I don't buy in to the idea that size is a great indicator of poor design and neither should you. In fact, the premise that size = shitty design actually tends to result in shitty design itself. How often do you see private single use methods? I'd wager it is relatively frequently.
Do this one to narrow it down, devenv /safemode
Why do you want to wrap your repository with another repository?
To have additional additional methods specific for that type.
&gt;You can get more information by examining the file 'FILEPATH'
The SerialPort object isn't really designed to be used as a Winforms component. I'd write a separate persistent class that handles serial communication, that doesn't care about which form you have open. Also note that the .NET SerialPort implementation is pretty poor compared to the native Win32 API, and you might run into problems if you use DataReceived events, or the BytesToRead property. Google turns up alternative, more reliable methods of using the SerialPort object that don't rely on these methods, but admittedly they're not very beginner friendly. 
Oh no! Another broken repository... Sigh... Don't go for a repository! If you do do not expose IQueryable or accept Expression as a parameter. A proper repository should have methods like List&lt;Customer&gt; GetTopPayingCustomers(int page, int pageSize) and contain the query inside of it. If you expose IQueryable your repository serves no purpose at all.
Try running "devenv /setup" in an administrator command prompt or alternatively delete %LOCALAPPDATA%\Microsoft\VisualStudio\&lt;version&gt;\ComponentModelCache and restart
I had the same issue and it wasn't resolved by just uninstalling and reinstalling. I had to blow away the configuration by doing a reset. If I remember right it wasn't a reset that is easy to find the documentation for. [StackOverflow](http://stackoverflow.com/questions/17203820/how-do-i-truly-reset-every-setting-in-visual-studio-2012) has a good post. I think the one I used was /ResetUserData but it could have been a different one. I know this is for 2012 but I used it in 2015. 
A few weeks ago I complained bitterly about how slow Android Studio was. My solution: I purchased a workstation with 12 cores. Android Studio now runs almost as fast on my new computer as Visual Studio did on my old computer!
The reason you want repositories is because of testing, not because of switching away from EF.
Kill it with fire. 
Seems like it errors out on C++ runtime 2015. Start there by going into Control Panel - Programs and Features and removing it. Reboot and try again. 
So for each of my table, I got 10 tables mapping onto identical interface. So Stock has IStock, DataPoint has IDataPoint and so on. Now I need another layer in repository to use only this interface definitions and do operations on it. In my DataRepostiory I try to find an AggregateRoot Object. I can limit my DataRepository imlementations on 5 more classes. Now all of these 25-30 classes, 10 enum I want to see together. And in this visual codeMap designer, I could do. The edmx is pretty much exactly what I want but without the EF is there something you can suggest? I'm trying to use Autofac to collect classes by syntactic naming convention with Reflection. I'm getting overwhelmed by the files. And I know this isn't even a lot to handle. I'm open to any guidance in managing that. I feel I have to now count out interfaces and bind subclassification with runtime checks.
those sound like services
Never used HtmlAgilityPack but you can try found.OuterHtml
I haven't used it in a coupled of years but I think you can navigate up the Dom using found.parent()
I like that, but one issue is sometimes what it's contained in is quite long. For example, it can be found between two script tags.
&gt; Two repositories that expose IQueryable can be joined without the overhead of fetching data from the server to perform the join as the query will be materialized before its sent to the server The same is true when using the DataContext directly. What is your point?
It's been a while since I've worked with XPath and C#, but try changing it to ``//*/*[text()[contains(., Test123')]]`` to get only the direct parent that contains the text. I don't think C# supports xpath contains() correctly. You have to loop through the nodes and check manually with InnerText, not Xpath. Because C# XPath treats * as the element and the second * as the text node, then you are filtering the text nodes instead of the elements. (element text() returns different results than text node text()).
&gt; I got 10 tables mapping onto identical interface. So Stock has IStock, DataPoint has IDataPoint and so on. That's silly. You don't need to create abstract interfaces for models, entities, or other classes that don't access external resources such as databases. *** When using mocks to make your code more testable, look for a place where you can make a clean break. DataRepository sounds like a good place for that. You can have two versions of it, one with real database code and one with mock code. abstract class DataRepositoryBase class DataRepository : DataRepositoryBase class MockDataRepository : DataRepositoryBase Notice that I chose to use an abstract base class instead of an abstract interface. That was done so that DataRepository and MockDataRepository could share code. I want them to be as similar as possible so that my tests are as accurate as possible. 
When I had this the cause was two versions of the same extension installed. Remove the old one and the problem went away. 
Removed: Rule 4 I doubt this is possible in the way you have it now without herculean efforts. Sounds like it's showing the PDF embedded (with Adobe Reader?) As /u/rebelrexx858 suggested, perhaps you need to consider using a 3rd party library to display the PDF and leverage some find/search functionality in that library.
Yea i read the log and fixed the problem thanks.
Agreed, or at least I hope it does, else you are going to be in for a fun ride when even the slightest hint of complication happens :)
 public void ProcessLineItems() { if (this.InvoiceLineItems != null) { //Now we guarantee that LineItems isn’t null foreach(var item in this.InvoiceLineItems) { Console.WriteLine( item ); } } } That is not good. That comment is false. Don't depend on things not changing that you don't own: public void ProcessLineItems() { var invoiceLineItems = this.InvoiceLineItems; if (invoiceLineItems != null) { //Now we guarantee that LineItems isn’t null foreach(var item in invoiceLineItems) { Console.WriteLine( item ); } } } 
heh you beat me to it, thanks. I would expect the F# variant to be compiling much closer to the second way anyway. F# surely will only evaluate the property a single time in the provided code.
Is this limited to the 256 char limit in windows?
What problem are you having? Just in writing two initial lines with column headers? If they are all starting with a letter + the column number, it shouldn't be hard. Just do something like this before you go into the row loop: //note you can also do this without an array but this way you can change the column names easily string[] colnames = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M" }; int i=0; foreach (string cname in colnames) { if (i &lt; 1) w.Write(","); i++; w.Write(cname + i.ToString()); } w.WriteLine(""); //to start a new line If you want a second line in there, just do this again.
I want to start testing my code at some point. I've read up and managed simplest of tests but they are definitely not the focus in the program yet. Do I try and make a big generic data repository or smaller individual repository version for the main roots and aggregates only?
I'm not really sure how to use mocks yet. I read a bit about them but that's not my worry (yet) I did just like you said: an abstract RepositoryBase but from that I got StockDataRepository : RepositoryBase, IDataRepository&lt;Stock&gt; The interface had the 6 basic find, get, Crud methods contract. Now you are saying I don't need to have an interface. I should just use my RepositoryBase as centralized code for querying? Recently, I've been really focused on Equality and comparisons. With just my core model, I'm torn in confidence over my ability to have a good custom control of equality vs the easy in-query instance specific comparison. I'd love some pointers in planning a global concept of equality within program.
Perfect! Thank you! Though I had to throw in the w.WriteLine(); it worked like a charm. 
&gt; I should just use my RepositoryBase as centralized code for querying? Yes. &gt; Now you are saying I don't need to have an interface. Well, let me explain the word interface to you. An "interface" or API is how one piece of code talks to another piece of code. So all of the `public` methods and properties on `RepositoryBase` for what's called it's "public interface". When you see the `interface` keyword, that's really just a specialized interface more formally known as an "abstract interface". StockDataRepository : RepositoryBase, IDataRepository&lt;Stock&gt; In this example, `StockDataRepository` actually has 4 interfaces. 1. The `public` members of `StockDataRepository` 2. The `public` members of `RepositoryBase` 3. The `public` members of `System.Object` 4. The members of `IDataRepository&lt;Stock&gt;` Normally you would use interface #1. But if you need to be able to use the same piece of code for multiple different objects (say a real and mock repository) then you would find an interface common to both. &gt; I'm not really sure how to use mocks yet. I read a bit about them but that's not my worry (yet) Then let's reduce the complexity of the problem and get rid of everything except `Repository`. Something a lot of people don't understand is that you don't need a `StockDataRepository` and a `DataPointRepository` and a `CustomerRepository` and a... What you really need is one repository per concept. For example, if I were building a stock trading system I would have two repositories: * StockRepository (companies, stocks, stock prices) * AccountRepository (customers, accounts, stocks in each account) 
Max path is 260 on Windows, in case you didn't know ☺
Well if you dont include the [Drive letter]:\ and ending null, which you have to have all. Then yes 260 but for assumption sake 256.
My only comment (and it's a minor one) is that "script" is kind of an insult in the C# world. Maybe "insult" is too strong a word, but "script" usually refers to simple, interpreted code. Code, or program, or application are terms more often used in this world.
Ok, so you're *applying* generics here. Since you're defining the comparison in your `Stock` class's `ICompare&lt;IStockable&gt;` method, you don't have to implement `IComparable` in your `Fruit` etc. classes. You can also use `Comparer&lt;T&gt;`: public class SortByPrice : Comparer&lt;T&gt; { public override int Compare(T x, T y) { if (x == null || y == null) throw new ArgumentException("One of the arguments in not a Phone"); if (x.Price &gt; y.Price) return 1; if (x.Price &lt; y.Price) return -1; return 0; } } Here's a test: [Fact] public void sort() { var fruit = new Fruit("test", 30, 10); var fruit1 = new Fruit("test1", 20, 10); var fruit2 = new Fruit("test2", 10, 10); var data = new List&lt;Fruit&gt;(); data.Add(fruit); data.Add(fruit1); data.Add(fruit2); data.Sort(new Stock&lt;Fruit&gt;.SortByPrice()); _output.WriteLine(data.ToJson()); //[ // { // "Title": "test2", // "Price": 10.0, // "Weight": 10.0 // }, // { // "Title": "test1", // "Price": 20.0, // "Weight": 10.0 // }, // { // "Title": "test", // "Price": 30.0, // "Weight": 10.0 // } //] }
Hope this helps, https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247(v=vs.85).aspx#maxpath
http://stackoverflow.com/questions/11764539/writing-fizzbuzz
Baha, you know, i was reading that earlier, but closed it out after most of them seemed to rely on ifs. After scrolling further and looking more closely, there are a lot of cleaned up examples. :#
No ifs is easy, doesn't make it good: static IEnumerable&lt;string&gt; FizzBuzz() { var i = 0; while (true) { i++; yield return i.ToString(); i++; yield return i.ToString(); i++; yield return "Fizz"; i++; yield return i.ToString(); i++; yield return "Buzz"; i++; yield return "Fizz"; i++; yield return i.ToString(); i++; yield return i.ToString(); i++; yield return "Fizz"; i++; yield return "Buzz"; i++; yield return i.ToString(); i++; yield return "Fizz"; i++; yield return i.ToString(); i++; yield return i.ToString(); i++; yield return "FizzBuzz"; } } static void Main() { Console.WriteLine(string.Join(Environment.NewLine, FizzBuzz().Take(100))); } 
Just as another option (not necessarily the best but it might be useful) static void Main(string[] args) { for (int i = 1; i &lt;= 100; i++) Console.WriteLine(fizzbuzz(i)); } private string fizzbuzz(int i) { if (i % 15 == 0) return "FizzBuzz"; if (i % 3 == 0) return "Fizz"; if (i % 5) return "Buzz"; return i.ToString(); } Alternatively you can combine this with Eyes_and_Teeth's case statements. But the if statements here aren't too bad.
Unchecked the optimize checkbox from the project build settings. Google that for even better ways to make deserialization work.
 Does using the conditional operator count as not using if's? If so: Console.Write( string.Join( Environment.NewLine, from int i in Enumerable.Range(1, 100) let j = ((i % 3 == 0) ? "Fizz" : "") + ((i % 5 == 0) ? "Buzz" : "") select j.Count() &gt; 0 ? j : i.ToString() ) );
Here is a solution that uses switch rather than ifs: for (int i = 1; i &lt;= 100; i++) { var factorFound = false; switch (i % 3) { case 0: Console.Write("Fizz"); factorFound = true; break; } switch (i % 5) { case 0: Console.Write("Buzz"); factorFound = true; break; } switch (factorFound) { case true: Console.WriteLine(); break; default: Console.WriteLine(i.ToString()); break; } }
Sorry man that doesnt work. It will print just for i == 3 i == 5 and i == 15. Nothing else will print. 
Let's see the code you're using to connect to the db?
Sure. public void getNextValue(object state) { var lastValue = ChartValues[ChartValues.Count - 1]; var nextValue = new Values(); ConnectionString = "Server=us-cdbr-azure-west-c.cloudapp.net;Database=NAME;User Id=******;Password=*****"; connection = new MySqlConnection(ConnectionString); try { connection.Open(); // Page.ClientScript.RegisterStartupScript(this.GetType(), "scriptkey", "&lt;script&gt;alert('your message');&lt;/script&gt;"); } catch (MySqlException ex) { } if (connection.State == ConnectionState.Open) { string QueryString = "SELECT * FROM database.livedata ORDER BY idlivedata DESC LIMIT 1"; MySqlDataAdapter da = new MySqlDataAdapter(QueryString, connection); DataTable dt = new DataTable(); ConnectionState state2 = connection.State; if (state2 == ConnectionState.Open)//Do we need to do this a second time? { try { da.Fill(dt);//SystemNullException } catch (Exception ex) { connection.Close();//NotSupportedException: The Read method cannot be called when another read operation is pending. connection.Dispose(); return; } DataRow row = dt.Rows[0]; if (!DBNull.Value.Equals(row["idlivedata"])) { previousID = RecordID; RecordID = Convert.ToInt32(row.Field&lt;Int32&gt;("idlivedata")); nextValue.Time = lastValue.Time + 1; nextValue.Temp = Convert.ToDouble(row.Field&lt;decimal&gt;("Temperature")); LightTemp = Convert.ToDouble(row.Field&lt;Int16&gt;("LightIntensity")); nextValue.Light = (LightTemp / 10.23); SoilTemp = Convert.ToDouble(row.Field&lt;Int16&gt;("SoilMoisture")); nextValue.Soil = (SoilTemp / 10.23); nextValue.Humi = Convert.ToDouble(row.Field&lt;Int16&gt;("Humidity")); } connection.Close();//NotSupportedException: The Read method cannot be called when another read operation is pending. connection.Dispose(); } // nextValue.Time = lastValue.Time + 1; if (ChartValues.Count &gt; 72) { ChartValues.RemoveAt(0); } if (RecordID != previousID) { ChartValues.Add(nextValue); } try { GetClients().All.drawChart(ChartValues); } catch (System.InvalidOperationException ex) { } } } 
Here's what I'd do: for(int i = 1; i &lt; max; i++) { String output; if(i % 3 == 0) output += "Fizz"; if(i % 5 == 0) output += "Buzz"; if(output == String.Empty) output = i.toString(); Console.WriteLine(output); } It may have some errors, but I'm on my phone so oh well, they should be easy to fix. 
I don't a see anything that's blatantly wrong that would cause the issue you've described. I'd start by trying to remote debug this if that's possible, and if not add some trace code to write to a log to see what's happening. I suspect it's throwing an exception from one of your empty exception handlers. 
Yeah. I was in class. I meant i % 3, etc. I was mainly trying to show the use of switch/case... 
Is there a reason you didn't use Write instead of WriteLine? This seems like a good case for it. bool isDivisibleBy3, isDivisibleBy5; for (var i = 1; i &lt;= 100; ++i) { if (isDivisibleBy3 = 0 == i % 3) Console.Write("Fizz"); if (isDivisibleBy5 = 0 == i % 5) Console.Write("Buzz"); if (!isDivisibleBy3 &amp;&amp; !isDivisibleBy5) Console.Write(i); Console.Write(Environment.NewLine); }
I got the to work by adding fruitlist.data to array sort. I'm not going to do much more until I get feedback from my professor. Thanks for the assist guys. 
or use a `using` block
couldn't do it sans Ifs (didn't want to and made for grosser code) I did clean up your example a bit to get rid of the nested If. That part wasn't necessary. public static void FizzBuzz(int max) { Console.WriteLine("Fizz Buzz up to " + max); for (int i = 0; i &lt; max; i++) { var x = string.Empty; if (i % 3==0) { x += "Fizz"; } if (i % 5==0) { x += "Buzz"; } if (string.IsNullOrWhiteSpace(x)) { Console.WriteLine(i); } else { Console.WriteLine(x); } } Console.ReadLine(); } 
Very very brief review. Repeated issues are not repeated in the list. - No README file. What is this project for? What is the purpose? - No LICENSE file. This makes the code unusable by anyone else. - Common design is having a directory named like the project for each project in the source base folder (whether that be /src or /). Your project is directly in /src, which is bad habbit. It will make it much more difficult if you ever add another project to the solution. - Config/IConfiguration.cs: Why do these two methods have a default argument `null`? Is `null` a **valid** argument for these methods? There is no documentation, I can't check it. If you intend to save to a base path with the argument `null`, then you rather should have method overloads instead of an optional argument like this. That makes it much cleaner and you can separately document these methods. - Config/Imp: Having an `Imp` subdirectory for implementations is very bad style. Just have it in the Config directory directly. - Config/Imp/XmlConfiguration.cs: You could theoretically move this to a completely separate project. That way you can design the library more modular, just importing the code you actually need. - Config/Imp/XmlConfiguration.cs, 24: Avoid using static methods. This makes it impossible to unit test this class. You always have an external uncontrollable dependency. - Demos: Demos (aka examples) should definitely either be an own project, or just in the documentation. - Logs/ILog.cs: Consider using an existing logging framework, instead of rolling your own. - Logs/Imp/FileLog.cs, 37: Consider using `String.Empty` instead of `""`. It's easier to spot and more expressive. - Modules/Imp/BaseModuleManager.cs: Usually base classes end with the name `Base`, not start with it. - Utils: Utility classes from your library should be made internal. Otherwise you pollute the namespaces of whatever project that references this library. In general: There's **no** documentation. There are **no** unit tests (or tests in general). You should work on that very soon. And please drop this silly convention of having a `Imp` sub folder. It's pointless and just messes with the namespace and the general layout of the project folders. And whhhyyy are you using that horrible formatting with the Egyptian braces? :-(
Terrible code design but he asked how to do it with out if's so eh. 
Me and a friend had some fun with FizzBuzz a while ago - https://dukelupus.wordpress.com/2015/05/13/some-fun-with-fizzbuzz-in-c/
&gt; nested if statements. They're sort of ugly to look at and just scream "I'm not very good at coding". I see lots of re-arranging of the code in this thread but so far nobody seems to have challenged this assertion. I would argue that they're not particularly ugly, and are often necessary. I think the example in the OP is perfectly clear and understandable. Re-writing with as few `if` statements as possible might be a fun challenge, but in the real world would be a waste of time; there's nothing wrong with the original code. 
You should be able to use relative paths. var connectionString = string.Format("Provider=Microsoft.Jet.OLEDB.4.0; Data Source={0}", Path.Combine("C:\Data", "meals.mdb")); using (var connection = new OleDbConnection(connectionString)) { connection.Open(); using (var command = connection.CreateCommand()) { command.CommandText = "SELECT * FROM Meals"; using (var reader = command.ExecuteReader()) { // you can use the reader here, // while (reader.Next()) // { // } } } } But given the context of your question, I suppose you are using the visual studio data source wizard. You should still be able to use any path though, but you will need to edit your applications configuration file. If you need any assistance in any solution, please get back to me.
&gt; Path.Combine("C:\Data", "meals.mdb") Doesn't that create an absolute path "C:\Data\meals.mdb"? O.o Shouldn't it be &gt; "Provider=Microsoft.Jet.OLEDB.4.0; Data Source=meals.mdb"); which would then result in WorkingDirectory\meals.mdb?
I'm using aspx web forms for the dashboard and I was under the impression that you could not avoid a refresh when runing server side code. see my reply [below] (https://www.reddit.com/r/csharp/comments/4ccuma/signalr_sql_page_refresh_issues/d1hgts6) as to why I'm running button operations serverside and not client side
+1 for this although doing this in a job interview recently I was told it wasn't the "most readable" solution. I guess you can't please everyone. 
&gt; I'll look into it, I'll stick one on my final command in that method. I was getting an NotSupportedException for the connection.close in the try catches in the middle and I'm not sure what caused that tho 
[removed]
This is the best I could do with no if statements. private static void FizzBuzz(int num) { for (int a = 0; a &lt;= num; a=a+15) { for (int b = 1; b &lt; 16 &amp;&amp; a+b&lt;=num ; b++) { switch (b) { case 3: case 6: case 9: case 12: Console.WriteLine("Fizz"); break; case 5: case 10: Console.WriteLine("Buzz"); break; case 15: Console.WriteLine("FizzBuzz"); break; default: Console.WriteLine(a + b); break; } } } } Edit: Made case statements easier to read.
In the end what i did was spawn an ffmpeg process and communicate via command line options and the standard input / outputs
Dammit. I'll be over here in the corner, not coding, not doing any more damage. 
That is way less readable imo than nested ifs.
Still waiting on that link bro...
Thanks for waiting and sorry bro. The girlfriend had a miscarriage and haven't been on the computer lately, I have a reminder set for myself when I turn it on
No worries man. You take care of yours...
For starters, node packages are already source, because JavaScript isn't a compiled language. This does absolutely nothing to address the breaking issue with NPM that you start the article with a discussion of. Second, there are a few reasons most people distribute binaries instead of source in compiled languages. One, they may not wish to make the code open source (although in a language like C# or Java that is trivially decompilable, this honestly doesn't do a whole lot other than remove the lowest hanging fruit). Two, and more importantly, for dependencies of nontrivial size, distributing only source instead of binaries will have a noticeable affect on your build times. This may be acceptable in some cases, depending on your needs, but as I said previously, it doesn't even address the problem at hand here.
Updated question
Removed: rule 4.
Removed: rule 4.
Speak for yourself. Maybe some of us WOULD help write keyloggers. It might not be malicious. Nothing wrong with putting one on your own machine.
Yeah - there's a lot of gotchas when it comes to unmanaged resources in C# (such as SQL calls), where you're better off `using` everything instead of trying to dispose of it yourself. It also, IMO, makes things a lot cleaner-looking.
That's incredibly readable... I would have gone for this: Enumerable.Range(1, 20) .Select(i =&gt; new { i, fizz = (i % 3 == 0 ? "Fizz" : "") + (i % 5 == 0 ? "Buzz" : "") }) .Select(f =&gt; f.fizz == String.Empty ? ""+f.i : f.fizz);
Sounds good. Could be useful for a lazy initialization pipeline by null-coalescing, that doesn't force you to chain stuff.. Title ?= GetTitleFromMemory(); Title ?= GetTitleFromDiskCache(); Title ?= GetTitleFromInternet(); Seems a lot prettier than Title ?? GetTitleFromMemory() ?? GetTitleFromDiskCache() ?? GetTitleFromInternet(); The first one is a lot easier to debug, read, and format. I'd suggest to make a thread on MSDN or the Roslyn project, as that's where most of the language discussion is going on
On mobile so I can't easily link but it has been suggested before on roslyn github. Syntax might have varied slightly. 
indeed. just came to post this. [??= was the syntax suggested](https://github.com/dotnet/roslyn/issues/205) and it was closed with not a lot of ceremony. 
Scripts used to refer to executable code that is compiled at runtime. And programs compiled at compile time. Since c# is compiled 'Just In Time', I would call these Scjipts.
They completely missed the point of FizzBuzz. It is not supposed to evaluate anything about code quality or readability.
I like this a lot
 Would ?| be better? because its not similar to title = title + calendar (like +=) its title = title | calender (depending on title being null) also reminds me of null propagation operator ?.
? Scripts are interpreted rather than compiled, such as Lua script.
C# novice here, chiming in with my personal version; for(int i =0; i &lt;=100; i++) { if ( i % 3 == 0 ) Console.Write("Fizz"); if ( i % 5 == 0 ) Console.Write("Buzz"); if ( ( i % 3 != 0 ) &amp;&amp; ( i % 5 != 0 ) ) Console.Write(i); Console.WriteLine(""); }
Not a crazy idea, but ?= looks like a comparison (in the vein of &lt;=, !=) to me, like the following might be equivalent: x ?= y (x??y) == y or something. That could obviate at least String.IsNullOrEmpty() and possibly String.IsNullOrWhitespace(): s ?= String.Empty s?.Trim() ?= String.Empty ??= seems better for your stated purpose, but it does overlap with the old C/C++ trigraph for # (should be a non-issue, but probably worth at least noting in passing). On the upside, it's consistent with the bit-shift-and-assign operators, &lt;&lt;= and &gt;&gt;=. Not that they come up much.
Well, with ":", yes, and "?" part there checks boolean condition. So if I saw "?=" in the wild without knowing what it meant, I might associate it with ternary "?:" and be utterly confused.
As far as single statements go I really like the code golf version: for(int i=1;i&lt;101;i++)Console.WriteLine($"{(i%3*i%5==0?0:i):#;}{i%3:;;Fizz}{i%5:;;Buzz}"); Expanded: for(int i = 1; i &lt; 101; i++) { Console.WriteLine( "{0:#;}{1:;;Fizz}{2:;;Buzz}", (i % 3 * i % 5 == 0 ? 0 : i), //format string "#;" only displays number if positive i % 3, //format string ";;Fizz" displays "Fizz" if value is 0 i % 5 //format string ";;Buzz" displays "Buzz" if value is 0 ); } 
- I would not use var unless dealing with anonymous types. - tupleLenght is misspelled. - There are certain strings that I would replace with constants, such as "https://kat.cr/usearch/", "+", "-", "m", "0". - I would not recommend this: goto exitLoop; - /u/Measuring makes some good points. Looks pretty sharp (BADOOM-chi) to me otherwise.
&gt; i % 3 * i % 5 == 0 Clever! I was looking for a way to do that.
It would however address the issue. Once source is included in source control, you don't actually need to fetch it from the registry. It would just sit in source control already. So, whenever it is removed it won't cause any issues as on build time we won't fetch it again. Regarding your other points, I'm not suggesting that we'd use this approach for every package. It would only work for small packages that are open source. I'm in no way suggesting we should distribute ORM's and the like as source only packages, I'm talking about one liner modules like LeftPad. As for build time, since they're small packages, I think the influence will be minimal and even if it was noticable I think downloading a package will take longer than compiling it. 
Disclaimer: I think it is worth learning how to inject code into another process, yes it is used for viruses. But having this skill doesn't hurt. For example, hot-patching a program is something that in Windows at least is a built in feature. Every standard function call has a few bytes to detour it to another piece of code. Besides, any good anti-virus will see standard goto methods anyway. If you're admin on your OS then yes. Anything is possible if you can at least run .NET framework (so no kernel stuff, unless you hook into them at runtime but that is.. pretty hard). On windows, you can [hook keyboard and mouse](https://blogs.msdn.microsoft.com/toub/2006/05/03/low-level-keyboard-hook-in-c/) to receive keypresses and you can capture them before another process receives the input. I never tried capturing exceptions of other applications. But it is pretty easy to inject your .NET dll/exe into another process and just write some C# code wherever. If you need lots of things then dll injection might be the best approach because it's easy once you're in. PS: Calling people a-hole is not going to get you much support. Just try giving valid arguments on why you want to learn it.
If you reported it, it will be closed as a duplicate very quickly of https://github.com/dotnet/roslyn/issues/205 As /u/ItzWarty sugests, it is a little weird that the operator wouldn't evaluate the right side sometimes unlike every other assignment. It is also weird another way: Both assignment (`=`) and the null coalescing operator `??` are handled directly by the compiler in all cases, unlike every other form of combination assignment operator (which become function call assignments if the operator is overloaded). For example you can modify how `+=` works by overloading the `+` operator in a class. In order to make the new operator work like the rest of them, you would have to either: 1. change the way `??` works to evaluate both sides and allow it to be overloaded (read: never going to happen because it is a breaking change) 2. create some overload construct that doesn't evaluate the second term until evaluation is requested: public static Thingy operator ??(Thingy lhs, Lazy&lt;Thingy&gt; rhs) ... Or decide overloading `??` isn't worth doing and deal with yet another special case in the language in the new `??=` operator in documentation and testing. `??` already has some nontrivial code in the compiler dealing with nullable value types which would also have to be dealt with here. It will probably be further complicated whenever non-nullable reference types are decided to be done if that ever happens. Adding an additional dimension to it for assignment makes those other things more complicated. Point is, while it seems like a nice little thing, it is more weight on an area of the compiler that is already perhaps a little annoying to have to deal with special cases. Short of a community pull request containing a full specification change and implementation, I doubt it will happen.
&gt; As i'm currently using access to save all my variables wouldn't this limit the program to only be useful to users who have an update copy of access? If so, is this bad/is there a work around? If you don't ever plan to change your storage mechanism then no, it is not bad: it is a conscious design choice. If you think you might want/have to change it in the future (say to SQL Server, XML, JSON, whatever) then this is a perfect example of an ABSTRACTION. Abstract away your data access behind an interface (say, IStorage) and then provide an implementation based on Access (AccessStorage : IStorage). When in the future you want to switch to SQL server you just implement the interface again for that medium (SqlServerStorage : IStorage). If programmed correctly against the abstract IStorage interface, the rest of your application will happily continue to work without having to know that it is now talking to SQL Server. Of course the hard part is to properly design the abstraction (IStorage) so that implementation-specific details don't leak out - otherwise you are going to have issues when you want to implement a new kind of storage. 
I'm currently working on a hobby project that involved running the .NET Framework inside another native (C++) process. [You can see the code here](https://github.com/Measuring/DDDAEx). It no-way pretty or efficient or whatever. But the most interesting files are: [C# code that launches game and injects a CLR hoster](https://github.com/Measuring/DDDAEx/blob/master/DDDAEx/Program.cs), [C DLL containing static function to host CLR](https://github.com/Measuring/DDDAEx/blob/master/DDDAExHoster/DDDAExHoster.cpp), [C++/CLI dll to interop with Win32 api calls](https://github.com/Measuring/DDDAEx/tree/master/SharpUnmanaged). It's a lot of code, but I've spend much time on going OOP in C++/CLI and learning that. You can create a much smaller example that'll work by looking what I did (or Google) and call those Win32 API functions in order. It would probably be like 40-50 lines of code to get it going. It does take some time. Depends a lot on how much knowledge you have of how the OS works you're working on. But like you said, google it and you'll get it working. I also got it working in a week where I injected a C# dll into a game using C++/CLI without prior C++ or C++/CLI experience. Google is love ;)
Stack trace is arguably more useful than line number and will tell you which method threw the exception. That said, you can't set a breakpoint on each individual branch of the coalesce operator.
https://github.com/dotnet/roslyn/issues/3630
For a console application, that's the typical way of doing it. Is it not working out well for you? What do you define "effective" as?
Just set a break point at the start then step into.
Ping
&gt;It would however address the issue. Once source is included in source control, you don't actually need to fetch it from the registry. It would just sit in source control already. So, whenever it is removed it won't cause any issues as on build time we won't fetch it again. You can do this by keeping a copy of the binary for your dependency in source control or another location you control as well. It's not unique to source. Seems what you're really advocating for is having a copy of your external dependencies that is completely under your control. Also, as I said, JavaScript is distributed as source already and the problem still occured. The solution isn't distributing as source, it's having a copy of anything you depend on that you control.
That said I think in most cases it is reasonable to assume (unless told otherwise) that the priority when writing code is legibility and maintainability, and not prematurely optimizing for some sort of high-frequency fizzbuzz trading platform.
That goes beyond freebies, it will be charged! ;)
 Update: It populates! That took way too many tries to get right. Now to get it to do math and stuff!
That would be fine, but only for bool.
I agree, but you could also do: x = x + y Instead, C# gives you the very useful: x += y ...and this operator would offer the same benefit.
"almost not terrible": the programmer's 9 out of 10
I like it more than the ?? operator :). 
Needless to say I wasn't that disappointed when I didn't get it. 
Sqlite also has .NET binding for accessing the DB.
I think they want that to translate to something like private Lazy&lt;string&gt; _value = Lazy&lt;string&gt;(() =&gt; "Test"); public string Value { get { return _value.Value; } } (I'm not sure how the setter figures into that!) Unless they're wanting to specify overridable defaults, maybe.
 string FizzBuzz() { var mod3 = i%3; var mod5 = i%5; if (!mod3 &amp;&amp; !mod5) { return i.ToString(); } var result = (mod3 ? "Fizz" : "") + (mod5 ? "Buzz" : ""); } int Main() { foreach (var n in Enumerable.Range(1, 100)) { Console.WriteLine(FizzBuzz(n)); } } Separate functions and early returns/continues help to manage nested ifs, IME.
Console.ReadLine/WriteLine seem pretty concise to me. You could always create a method to make it even more concise, if WriteLine then Readline is a pattern you're using a lot: private string GetInput( string prompt ) { Console.WriteLine( prompt ); return Console.ReadLine(); } Then you just need: string salary = GetInput( "Please enter your annual salary" ); which is about as concise as you can get. 
Well thanks man, I'll be sure to use this! Sincerely, The c#noob
I would generally do it like this. static void Main(string[] args) { for(int i = 1; i &lt;= 100; i++){ string output = string.Empty; if(i%3 == 0) { output += "Fizz"; } if(i%5 == 0) { output += "Buzz"; } if(output == string.Empty) { output = i.ToString(); } Console.WriteLine(output); } } If I didn't want any If's at all and wanted it in fewer lines I might do this: static void Main(string[] args){ for(int i = 1; i &lt;= 100; i++){ string output = (i%3 == 0 ? "Fizz" : string.Empty) + (i%5 == 0 ? "Buzz" : string.Empty); Console.WriteLine(output == string.Empty ? i.ToString() : output); } } 
Yup, you can use https://www.nuget.org/packages/Nancy.Validation.DataAnnotations/
more likely `*\meals.mdb`
In its own file.
I generally just have each interface in a separate file. 
If you just want the first from today, you could do: m.MachineData.OrderBy( item =&gt; item.MD_Occurence ).Where( item =&gt; item.MD_Occurence &gt;= DateTime.Today ).FirstOrDefault();
As the author of the absurd while loop version, I would also prefer the OP version or [this](https://www.reddit.com/r/csharp/comments/4ccj91/how_would_you_clean_up_fizzbuzzno_nestedifs/d1h20k0) one after it was fixed of its bugs: static void Main(string[] args) { for (int i = 1; i &lt;= 100; i++) { string output = ""; if (i % 3 == 0) { output = "Fizz"; } if (i % 5 == 0) { output += "Buzz"; } if (output == "") { output = i.ToString(); } Console.WriteLine(output); } Console.Read(); } and to make that nearly as fast as the while loop version: static IEnumerable&lt;string&gt; FizzBuzz() { for (int i = 1; i &lt;= 100; i++) { string output = ""; if (i % 3 == 0) { output = "Fizz"; } if (i % 5 == 0) { output += "Buzz"; } if (output == "") { output = i.ToString(); } yield return output; } } static void Main() { Console.WriteLine(string.Join(Environment.NewLine, FizzBuzz())); } (one of these 3 is roughly what I would be looking for when interviewing; not the while loop version or the code golf version or the enterprise solution or one of the "use a switch instead" versions or a linq + ternary operator version)
Here is the [Class] (https://drive.google.com/file/d/0B2u8xyCaazAbR1IzNk9XMTRTNjA/view?usp=sharing) Here is the [Main] (https://drive.google.com/file/d/0B2u8xyCaazAbX1VuaTY2aWo2NEE/view?usp=sharing)
Sorry about that. How about now?
Here's the southern tea version (too much sugar): private string FizzBuzz(int i) =&gt; i % 15 == 0 ? "FizzBuzz" : i % 3 == 0 ? "Fizz" : i % 5 == 0 ? "Buzz" : i.ToString();
if you make the namespaces match between the two, does that fix it? Ch10HW_Q3 vs CH10HW_Q3
not quite - it would replace something this private MyObject _myProperty; private MyObject MyPropertyLazyLoad() { return new MyObject("xx");; } public MyObject MyProperty { get { return _myProperty = _myProperty ?? MyPropertyLazyLoad(); } set { _myProperty = value; } } with MyPropertyLazyLoad() being the lambda function
Wow. I swear that I thought I'd checked that!!! Yep. It works now. Thank you!!!
I've done what you suggest! Thank you. 
Thank you for the suggestions! I don't know how to put classes in different files at moment :D but I'll search google. 
It's working fine now. The issue that /u/jimbophobe noted is probably the cause of your problems. One other thing you should watch for is that classes are [private by default](https://msdn.microsoft.com/en-us/library/ba0a1yw2.aspx), which could cause cause confusion later. I'd recommend to always specify the accessibility modifier as you do with class members.
Yeah, thank you both so much. I will try and keep that in mind. I'm pretty dense when it comes to OOP. :(
RemindMe! 6 Months "Check whether anyone has started work on a new crypto currency called fizzbuzz coin."
I will be messaging you on [**2016-09-30 18:12:06 UTC**](http://www.wolframalpha.com/input/?i=2016-09-30 18:12:06 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/4ccj91/how_would_you_clean_up_fizzbuzzno_nestedifs/d1jd033) [**CLICK THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/4ccj91/how_would_you_clean_up_fizzbuzzno_nestedifs/d1jd033]%0A%0ARemindMe! 6 Months ) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! d1jd18r) _____ |[^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^([Custom])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^([Your Reminders])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^([Code])](https://github.com/SIlver--/remindmebot-reddit) |-|-|-|-|-|
Hopefully these bots work out better than Tai.ai EDIT: Apparently, some people on this subreddit are unfamiliar with jokes. This was intended to be a tongue-in-cheek comment.
I've done this before (one files called Interfaces.cs). It's an OK way to do it, but most people are used to having each interface in its own file. If you want, you can create a folder called Interfaces, and put all your interface files in there.
https://msdn.microsoft.com/en-us/library/dd267265%28v=vs.110%29.aspx
No problem! Post more code in the future. :)
since you're using mvvm, i'm assuming you're using wpf. a hierarchical data template is probably what you're looking for: https://msdn.microsoft.com/en-us/library/dd759035%28v=vs.95%29.aspx
Working on custom WPF app for this program :D. Thank you again!
This is Reddit, there are no place for jokes here. [Serious business only.](http://i1.kym-cdn.com/photos/images/newsfeed/000/439/891/be8.png)
Much. Try starting with that response first next time.
I like this method
You have taken this whole thread way too seriously. I suggest punching a pillow or drawing some pretty pictures until you unwind a little bit.
A few things: 1. HttpPost's by design do not accept parameters in the query string (URL). Don't put them there, just use the 'data' property of $.ajax. 2. Your URL is wrong. It should be '/Api/Post'. 3. Why call your controller action 'Post'? That's kind of confusing. Maybe name it what it's actually doing. 4. Probably going to want to return a JsonResult from your controller action, and handle success in the ajax call
The .NET framework has a Convert class with a bunch of To... methods. I would suggest prefixing your methods with 'To', but if that doesn't suffice then prefix with 'ConvertTo' for further clarification. 
No problem. :)
I hope they work the same. He was the ultimate troll. But now he waits and plans his escape. 
Tai did nothing wrong?
He doesn't have a concept of right and wrong, so no?
And deep LUIS integration is awesome.
I find it a bit perplexing that ref returns made the cut.
Is it free? Can I register a bot just to try it?
Next version of visual studio has a much better installer. 
After installation with core &amp; desktop .NET, the new Microsoft Visual Studio folder in Program Files (x86) is only 788 MB. I know it doesn't include the prequisites living on GAC somewhere, but this is probably the lightest VS since 2008. Oh and it install &amp; launch mighty fast too, less than 30 minutes including downloading the components (on a slow HDD laptop with VS 2015 installed)
When you read from a queue, it removes the item you grabbed. If you want to "just look" at a queue item, use the Peek method. 
Uh, dude, it was pretty clearly a joke. What is wrong with you?
Nice job man! btw the key links are giving me 404 errors.
Or another suggestion, .Net also has plenty of factory methods in the format TargetType.From(inputType), I.e. TimeSpan.FromSeconds(1), etc etc.
No problem. :) Keep posting questions. I think clarity in naming is an overlooked art form.
Pattern matching!! Yyiiisssssss
&gt; less than 30 minutes I thought you where going to crack a joke about it taking 30 minutes to start.... Glad to hear that they're making it nice and light weight, that's the only thing I really didn't like about visual studio.
Yup, the framework is free to use and the services supporting it (the connector, Luis.ai if you choose to use it, etc.) are also free for small workloads like just playing around with it.
I would take a look at "Working Effectively with Legacy Code" by Michael Feathers. Lots of people have been faced with "what to test" with legacy code. I'm actually working on a book about what to test in [legacy ASP.NET MVC apps](http://buildplease.com/itmvc/itmvc/). It's hard to suggest specific frameworks and types of tests, but if you're looking for "how to create mock objects" before deciding what to test - I'd say there are higher level decisions you need to make about what you and your boss are seeking to gain from writing these tests. Do you want to lock down behavior so that you can make changes without fear of altering existing behavior in a broad way (testing for the sake of coverage isn't always best)? Or do you have a single feature/refactoring that you want to use testing to facilitate (e.g. your "porting the web app from SOAP to REST")? Something you might want to think about is where are the "seams". Where do your objects send and receive messages? What are those messages and how should they react to them? For example, you said there is a desktop app that interacts with a web app - a seam might be where the desktop app requests some data from the web app's endpoint. If you know what that data should look like and how the desktop app should react, you may not need fancy mocking for that - you just need a POCO with the kind of data you need to test. Send that POCO into the seam and test what happens - output and/or state changes. Anyway, and this might be more opinion, but if you're thinking a lot about mocking and testing feels difficult - you should look at your design. In my experience, code that's hard to test/requires a lot of mocking has some smells that need to be unearthed. Hope this helps. [Edit] all that aside - regarding frameworks, I like xUnit, Moq, and FluentAssertions
The code is pretty smelly, and I think that's what's making it difficult, but again I'm not that experienced, so I don't really know where to start with making it un-smell. Everything I've learned has been very antiseptic and well-ordered, so I think walking into this code situation is something I wasn't that well-prepared for. Testing for specific purposes sounds really good, I will bring that up with him. He's said he would like about 50% code coverage with the tests, and that's about all he's said about it.
Ah, yeah, I caught most of the differences, missed one. :)
It would be nice if they would offer a bittorrent download...wake up and smell the 2010's already.
What is VS version number after update? Mine is Version 14.0.25123.0 D14REL and Update 2 installer Update button is disabled.
Ah thank you, i havent tried disabling it first. Installing VS "15", but ill try it after.
It'll be called 2016 or 2017, last version was 14.0, this one is 15.0
&gt; ASIC &gt; if statement Well played, sir.
/r/omscs
More info here: http://www.codeproject.com/Articles/1088174/Accelerated-NET-Types
Here's an example that's right on point: https://msdn.microsoft.com/en-us/library/system.text.encoding.getbytes(v=vs.110).aspx 
In the DownloadData method you have wrapped everything in a try/catch statement. You are catching all exceptions and are telling the users no results are found when an exception occurs. Not having any search results doesn't sound very exceptional to me. This sounds like a normal result and shouldn't be handled in a catch statement. The catch statement should catch specific exceptions, such as WebException and inform the users an error has occured. 
That's not where temporary files belong. If you need to read and write temporary data, use the %TEMP% environment variable to set the location.
I don't believe you can do that on azure, can you? 
`færdigSkrevetTal.Aggregate((a, b) =&gt; a / b)`
Well, some of us are still on a crappy 5 meg DSL :( 
The directory definitely exsists as I am able to find it with the admin panel and I have set myself up to have the correct permissions. As for the last point again I'm fairly conifdent its on the same physical box.
Forgive my ignorance but how does a torrent help? 
Thanks 
It picks up where it left off when someone else in the house decides to watch Netflix and times out your http download?
Does your browser not support this functionality? 
It looks pretty cool but I must say I have a hard time figure out what to do with it. I tried the template yesterday and it was nice but that was pretty much it. But maybe they will show more cool examples later. 
I know what you mean, the first id would never be the actual id thats first in the line. Thanks for the help! =D
Because longint[0] is a char, wich you implicitly convert to int. char '2' represented as int is 50, apparently.
"222"[1] - '0'
Did it work? VS is an incredible ide but it's a pig of a thing. The lightweight installer for version 15 looks like it might help a lot, but it's not complete yet so who knows. 
this looks very interesting, thanks 
int.Parse only works with strings, and since longint[0] is a char, it says "cannot convert from 'char' to 'string'"
That makes sense! Sorry for misunderstanding your answer. The Convert.ToInt32(longint.Substring(0,1)); would make my code a lot longer (the one in OP was just an example), but I see your point in using it for multiple chars at a time. Thanks! 
Yes, there is a role temporary directory on Azure. Works if you use the usual .NET apis for temporary files, at least.
I just want to say this: CALLED IT!
It won't install for me. Keeps saying it failed because of Visual Studio 2015 Shell Interops (minimum) assemblies but I did a repair and tried again and it still didn't work.
Guthrie said it was free with visual studio
This is fantastic. A few months ago I was struggling with Xamarin and XS and seriously considered changing platforms and losing months of work. I stuck with it and said I'd wrestle it out. So happy to see things work in your favor. 
That's great and all, except I just renewed in January. I wonder what they plan on doing for existing customers?
I've not had experience with Xamarin before. Should I be starting to learn this? 
I do, C# is the language I've been using professionally the past five years. I want to diversify what I can do, but I'm curious to what extent Xamarin will become ubiquitous. 
I don't know. Do I have to get a Microsoft logo tatooed on my ass to use it? Why use this rather than native code? I feel like I've fallen for the "write once run everywhere" joke way too many times. edit after downvotes: ha! I love all of you with the microsoft tatoo on your asses. Peace and love, peace and love! 
Oh my god this is awesome
Jeebus. Yeah that seems overkill for us. A separate concern I have with this application is that it's very slow for these common use cases, but that's because it's making a trip to an ASMX web service to get every document in a foreach. That's another issue I'm tackling later, but it seems counterproductive to that to then make more trips to remote servers for tracking the print job. I'm considering writing an RTF parser (since it's pretty simple anyway) and just parsing all of the documents and combining them into one document, with the correct headers and stuff. I can already sort of hack that using RichTextBox objects, but they have no concept of page breaks and that is obviously a problem. But thanks for your suggestion, I'll definitely look over those links to see if any of it is applicable to my situation.
It's free, along with VS Community, as long as you're indie or a startup. The moment you go big is the moment you need to pay for the license.
JUst go and test it.
We've been using Cordova apps to which lets us target all platforms (iOS, Android and Windows). Essentially it's a website hosted on the users device, they are written in the standard web technologies, HTML, JavaScript, CSS ect. Of course it's not perfect, you do still get some odd problems on different devices but I would argue that it does "write once run everywhere" better than what Xamarin can.
I heard it from you before i had the time to look through the Build notes, so thanks for making my day :D
Fwiw many sites don't support resuming downloads as that depends on a certain http feature.
hell it's about time!!! 
It doesn't matter how short your code is if it doesn't work right. 
I agree with the suggestion. I've never really understood the aversion to checking in node_modules when it's (usually) just source code. The company I work for doesn't have a formal policy regarding C# code that isn't ours (though we're working towards one). Right now we have several projects that encapsulate similar functionality, e.g., we have a project called `Company.Text` for various string utilities, and it gets checked in and rebuilt as a nuget package. Developers have the option of including the nuget package from our repo, or pulling in the source code directly.
&gt; Because programming in C# is much more comfortable than C++? That's fair. Is it as fast as native code, or is there a (for lack of a better term) cost to performance? 
Been waiting for this for a while! Awesome news! I'm installing VS 2015 Update 2 right now
My work will be happy to hear this.
HTTP 206, son.
I've just began working with Xamarin in the past few weeks and there is decent documentation on it, but a lot of general googling for things you want to do in an app will lead to answers from non-Xamarin, Java developers, but if you can take that and apply it, you'd be good with it. You have more experience than me with C# as well and my simple app is coming along. Also, it still uses AXML for the layout.
They'll give you a full refund. See Nat Friedman's comment here -&gt; https://news.ycombinator.com/item?id=11398311 Nat is the CEO of Xamarin. 
Going to have to agree here, EF is pretty cool but sometimes calling a stored procedure directly (use dapper!) is the easiest way to go
Hope it's not April Fool's...
As I wrote in another comment, I got it working using another (shorter) method. The great thing about programming is that there are usually several methods to achieve the same thing. Cheers
Hello World apps is better than no apps.
"m" is for minutes, "M" is for months.
I switched this but am still receiving the same issue (1899-12-30). The derived column won't return the corresponding date 28-Feb-2011 -&gt; 02-28-2011
I actually figured it out, see https://gist.github.com/jamesbascle/0c06c5f5f43e94f88b8db4d9bbb80e03
Yeah the documentation is very dense. Once its been out longer there will be more tutorials hopefully
Thats a mvc/web api method signature. It Will catch the http-post body content and attempt to populate the message class with its content. If its not a match you get an empty/new Message object
It's an okay start, but I think you probably have a long way to go. Some suggestions to consider: 1. You have hard-coded value for things like pizza. At minimum, this probably should have been an enum, but in reality, I would look into making this data driven. Someone won't want to recompile their POS just to add a menu item. 2. You have fields that are really calculations (beverageTotal). You should consider making those properties that actually calculate from the source fields. 3. Your code doesn't handle "bob" for pizza quantity. 4. Looking at the code, you can't order pizza and steak at the same time? Seems strange.
Wow, thanks for the feedback! I will go back and mess around.
That depends on a lot of stuff and I think only you can answer that.
This is cool, but I don't understand why I would use C# instead of Java to develop an Android application. Java is native on Android. 
Why not just use Java? https://robovm.com/
Agh. Don't say that. Now I'm gonna be wondering.
Android was designed from the beginning to use Java and Java is part of the Android SDK. If a development team plans on spending any time making Android apps they should just learn Java. 
Because Java doesn't run on iOS or Windows phone. Their main selling point is that you share the same business logic and just reskin the app. If you just want Android, C# offers some interesting advantages over Java. Async/await really helps with UI programming, XAML trumps Androids UI model, and value types can really help with performance. The downside is you are going to pay for interopt calls between C# and the native UI stack. (The same is true for C# on Universal Windows Apps.)
You can use RoboVM to use Java to develop for Android and iOS, and then the Java is native on Android. 
They also have a free MS Press Xamarin dev book (pdf format). https://blogs.msdn.microsoft.com/microsoft_press/2016/03/31/free-ebook-creating-mobile-apps-with-xamarin-forms/
I'm excited about this. Only thing that sucks is no integration for the enterprise applications. (According to their FAQ) As a developer in a corporate IT department - I would love to have bots running in-house. "ITBot, Get chart from Splunk showing user load on server XYZ in the past hour" 
Because that costs $25 a MONTH for a single user? Xamarin is free, I prefer working in Visual Studio than any Java IDE and I know C# a heck of a lot better than Java.
What features will not be available for free? According to the FAQ: &gt; Advanced tooling such as our Live Inspector (Preview) and Memory Profiler (Preview) will be available for Visual Studio Enterprise customers. But it doesn't go into very much detail other than that. 
Ah, cool! I'm guessing there's no automatic clean up for them though. 
I got into C# for Unity, left Unity and stayed because of all of the things that support C#. edit: him to C#, not really sure wtf I was on when I wrote this
great, thanks! 
All the links are Access Denied.
My work was so happy about this we threw a party...
[I actually made myself look like an idiot](https://github.com/dotnet/roslyn/issues/10219) so you all don't have to. You have to edit your csproj. e: [I also really really really like pattern matching](http://i.imgur.com/y9Y98Gn.png)
C# doesn't "run" on iOS either, and robovm achieves the same thing with the Android code base. 
I use this approach too ...especially since you can build native Windows 10 apps with javascript/html then just port with Cordova. But generally this approach will be the 'slowest' (while still being fast and usable). Native code is fastest. And Xamarin probably falls right in between the two. 
Scott Guthrie: Hey Xamarin, you're really amazing but a lot of devs can't afford you. Can you help them out? Xamarin exec: Nothing we can do about that, it costs a lot of money to build this stuff. Scott Guthrie: How does $400,000,000 sound? 
imo declare them in the context where they can be expected. So for instance if you have a namespace that houses services for managing user information, define the custom exceptions in that name space. That is of course, if you set your project up like that.
Yes, that is kind of what I was asking. That vs having all custom exceptions in one place. Thanks for your input. 
If I clicked on any of the links, I just get the error message Access Denied.
How do I know if I have it installed? And if I don't, how should I go about it?
This "?:" construct is called a "conditional operator". That should help you when you're googling. It's sometimes referred to as the "ternary operator".
Nah, Xamarin is not as sexy as Unity/C#, and they've had a free iOS/Android publishing option for awhile now.
It's definitely not.
If you don't know, you probably don't have it installed. But if it's installed, it would either be in your task manager as a process, or on your start menu. You can get it from Microsoft. I don't have a link handy but it should be in the same area that you found visual studio.
Yeah. I actually had just installed it a few days ago but hadn't gotten around to installing the xap emulator. I had to reinstall xamarin in order to get it to not ask me for a license. But it works fine! Now for step 2: ???
Xamarin exec: Where do I sign?
As well as your server side code. You can end up with a lot of logic shared among multiple platforms.
System.Console.WriteLine("Because fuck you, that's why!");
 throw new Exception(" No Need for special exceptions") 
I've found a new line also works for multiple features.
thanks for the clarification!
thanks for this! I just didn't know what I was searching for!
thanks a bunch for the help, the correlation to learning how to apply a construct vs being able to google search it efficiently is probably my biggest C# threat haha.
another question though, what's the difference between `a = x` &amp; `a == x` ? I understand that they **are** different &amp; when to apply them, but I don't know **why** they are different. Thanks! :D
Awesome to see Charles Petzold wrote that! He's great.
Because they're two different operators. Let's say we [define a struct](http://i.imgur.com/dD9hSoq.png) and then we [define specific operator functions](http://i.imgur.com/zkfEs5r.png) now the structure can use those operators [like so](http://i.imgur.com/KufPxok.png). But for the overall reason is because they're two different instructions in the assembly code.
WebKit is the new JVM!
They've had a really good track record keeping up with each OS release's APIs. I don't expect it to be any different now. As long as they keep updating it, it doesn't really matter if it's "ubiquitous." Ubiquity is good for learning material and such though. At the end of the day, you're compiling down to actual native applications. It's really no different from any other written in Objective-C/Swift for iOS or Java for Android. And that's really cool.
So you usually wouldn't create a table within your app like that. Design your database. If you're not familar with SQL then just get at least one table created in your database. Create your table with sql or if you're familiar with codefirst then use that. In your app you would call insert a record into the table. Please familiarize yourself with EntityFrameworks(and linq) to access your database instead of using sqlCommand But back to your SQL command. You didn't define any columns. it should be something like create table tablename(columnname datatype); like so create table Recipe (id int, (this column should be primary key and autoincrement) ingredient nvarchar(100), createddate datetime ); hope that leads you in the right direction. not sure on proper syntax for the pk and autoincrement but that's why google is your friend =) 
I can get the tables correct, if i just define the tables name myself in the code it lets me do columns just fine; however, the issue with that is every time i run a new recipe it would be put into a table with the same name , the one i defined in create table. My goal is to have a different table for each recipe, which is why im trying to make it work by pulling from the text box. If the recipe is for Boeuf Bourguignon the table should read BoeufBourguignon, Taco soup as TacoSoup and so on. The program is already pretty big(for me) and i don't even know if i could rewrite it shying away from slcommand without breaking literally everyhting, lol. 
ok if you're going to do it in ONE table your columns would be similar to id (used to uniquely identify the record) recipename nvarchar(100) ingredients nvarchar(max) &lt;you will write all the ingredients in one box and store it in this column&gt; stepstocook nvarchar(max) &lt;you will write all the steps to cook in a one textbox and store it in this column&gt; not sure on what else you need to store in the table but using this method instead of one table per recipe you can query the database like select * from recipetable where recipename='momspaghetti' select * from recipetable where recipename='steak' 
Yeah, I need to work on that try/catch. Thank you. 
Don't ever throw Exception. Exception should have been abstract.
Scott was making a joke during the ASP.Net core presentation that this is the "ultimate long con" and tomorrow Satya will come on stage and say "GOT YA".... 
Also Windows Phone, Windows 10, Xbox One, and web... 
from OP's list of examples: using static System.Console; string test1 = "hi"; string test2 = null; if (test1 is string) WriteLine(test1); if (test2 is string) WriteLine("We got a null here!"); This works in C# 6 as well. What's new is the additional ability to assign a implied cast. The reason it works is because `is` tests the type of the instance. `null`'s type is whatever type `null` has, which is not `string`. The question is should you do null tests like this? It's not obvious that this is a null test.
But not on Windows Phone, and there are countries which actually have higher adoption of WP than iOS devices. Not everyone swims on money.
Do you have all classes in one place? All delegates? All enums? All structs?
Why construct a new string first?
Seconded, it's easy enough to use Blob storage and its cheap. 
He's been working for Xamarin for the last couple of years. Last year at their Build party he was signing copies of the preview version of this book
Because we need to pass a string there and we need only the first character. If we pass a char, it will output the same 50 again.
I don't know what issues you have with Android Studio and I haven't used it in a while since I've been full in with Xamarin. With Xamarin.Android you still use axml layout files with activities and fragments. The platform APIs are the same as Android, UI controls are the same as Android. Things look very similar except it's using C# and not Java (which means you can use a lot of .Net libraries like Json.Net and Java libraries can be imported with bindings) The idea was pretty much just to do iOS/Android with C# leaving everything else pretty much the same. Visual Studio does make the experience better than Android Studio and Xamarin created their own designer for it so maybe the things you find better with VS will just be there
The site's date is March 31st.
Ah, you mean your solution. Yes, it's interesting, but a bit hacky and not very readable in my personal opinion. Especially in the form of var result = chr - '0'; Next guy that reads your code will need some time to process what's going on here and of what type result is. Anyway, I would hesitate to rely on the order of chars in my code. But you can do it however you like, obviously.
It's not hacky at all, it's a very basic operation that every developer should know. If you're afraid of noobs, then thoroughly comment it. &gt; I would hesitate to rely on the order of chars in my code. It's not relying on the order of all chars, only of the order of the numbers. And it's pretty much guaranteed that this will remain the same. Otherwise almost all Linux and Windows applications would not work correctly anymore.
So what you're really asking is why not use RoboVM. Xamarin is [a little faster](https://medium.com/@harrycheung/mobile-app-performance-redux-e512be94f976#.98ucznwmo) but that's negligible. Xamarin is now free, while RoboVM isn't ($25/mo if you're good with their IDE, $1500/year if you want to use IntelliJ or Eclipse). Making it free is one (big) reason to use it over other solutions like RoboVM. It's pretty much why Microsoft made it free... RoboVM reminds me a lot of where Xamarin was a couple of years ago (even their pricing model is similar to was Xamarin did until today). You used to double click a storyboard or xib to open Xcode's interface builder, design you're UI and when you switched back Xamarin Studio was detecting your changes and creating the code needed to access properties and tie into events for the controls you added. It looks like that's what RoboVM still does. Xamarin now has their own designers which means you don't need to switch between different IDEs for different tasks (write code vs. design). You can even design your iOS app in Visual Studio on Windows (you still need a mac when you do that, at least for now). I was using Xamarin before they introduced that feature and it made things a lot easier. It also doesn't hurt that Xamarin is now a Microsoft product and Microsoft as a company has been pretty good over the years with developer platform support (they still support VB...) In the end it's mostly about language and tools preference, and cost, which is now a factor in favor of Xamarin
It does not really work with C#6. Your example is flawed. Change the declaration of `test1` to `object` (not `string`), and use a method only accepting `string`. Then you suddenly need to use `is` **and** the cast operator (you end up with two type checks), or you use the `as` operator (which is more verbose code). I do not understand what your question with `null` is about. The example checks whether the instance is of a specific type. `null` is never of a specific type, it's the absence of an instance. edit: Okay, I just saw, his examples are already pretty flawed. He's completely mis-understanding what the pattern matching if is for.
Wow I wasnt expecting this to be a 1000 page book this is a great source to get free! Thanks for sharing.
Fair point. Thanks for that perspective.
I think you can start learning anything at any point. I learned C#, VB.net, WinForms, ASP.net... the hard way, job gave me a task and I had to do it (even though I had no knowledge on .net at all), so I looked a lot into code that somebody else has writen, googled a lot and I learned this way without even basics. :)
Except for open source projects, research or learning.
Except it's not free, and Java is an objectively worse language than C# is. [Also type erasure is stupid](http://i.imgur.com/0OiUvBq.png).
&gt;There has been a free version of Visual Studio for over a decade. Well, multiple versions. One of desktop projects, one for web projects, etc. The free-tier of VS was extremely restrictive. Plus you couldn't install extensions which prevented access to some really great features like Web Essentials and Resharper.
I think ASP.NET is an excellent choice. I haven't looked at that course but it looks pretty solid.
Yes, but I always blame myself so I have no idea
Hmmm, I like how that unnests the if branch, as an alternative to reversing the if and returning early. There's also a `when` clause you can throw in there: let f = a when a != null else throw new InvalidArgumentException(nameof(a)); Still, I like how it makes variables so they can only be initialized and not assigned to later. I don't think we can say "modified" with references, though, since you could call a mutating method on the reference and still modify it. It'll probably be properly immutable with records.
Is let a new keyword in C# 7.0?
&gt; It'll probably be properly immutable with records. well... properties can still be modified on records even if the record itself is filled with `readonly` members. To be a fully immutable object graph it needs to be immutable all the way down and for a large number of types in the BCL that ship sailed and fell off the edge of the world a long time ago.
You sir... are a genius. Haha it's so silly, I couldn't think about it myself. Thank you SOOO MUCH :) Edit: I found an easier way by just using Application.Exit() :) (even more silly)
It is, it introduces a place where you can pattern match. let x = 20; Is short for let var x = 20; The `var` pattern always matches, so the form `let identifier` always matches as well. You can use these to make values which can't be reassigned in your scope: let x = 20; x = 40; // compile error
My achey breaky heart. Well, at least we can communicate intent more clearly with variables we don't intend to reassign.
If you set `ReadOnly` in the `TextChanged` event, obviously it will only be set *after the text has changed*, because before that the event won't be called. Set it elsewhere, either in the designer itself or in the form's load event.
In the main method, or somewhere that runs at startup, add: txtPrice.ReadOnly = true; Or you can set it using your mouse in the designer, open the textbox's properties and you'll see it in there somewhere, its been many years since I used winforms though. GL
Unless the user is built-in admin on the remote server the administrator permissions won't show. UAC. Only way to evelate privilege as far as I know is run the process locally with "run as administrator", schedule a task with any administrator account, or use the built-in administrator account (even remotely, it's always elevated by default) on the server. All other administrator accounts won't elevate and hence you won't see admin permissions.
It is already a contextual keyword inside a linq statement. It is now going to also be a contextual keyword for a pattern deconstruction. You can use the shorthand let x = 20; so long as `let` is not already a type or type alias in scope (just like the way `var` works). 
SQL Server is fine. You just need to make sure that the application you're making has the right connection string for it. 
can you post your XAML Code? Where i have issues with the XAML designer is design time support for custom styles when they have attached themeable properties and designtime data. Layout is generally okay. Advice: I highly highly advise against the habit of using any design surface as anything other than a preview. Dragging and dropping controls from the toolbox makes it very difficult to make solid, reactive layouts in the longrun. Handcode dat shit. e: also learning about all the types of WPF layout panels, how they work, how the arrange and layout internals work, and when to use all of them is important!
Do you mean Java libraries? If so you can create a third party binding project with Xamarin that allows you to drop in a Java jar or Android aar file and generate C# bindings. They then have an XML file you can use to transform the auto-generated API into something more C# friendly if you need to.
I wonder if it sticks around. I'm pretty sure Xamarin bought them for some technology and not because they wanted to have a parallel Java solution (we're talking about a company that promoted themselves with shirts that had C# on the front instead of their logo...) and Microsoft probably wants it out there even less
&gt; what's the difference between a = x &amp; a == x ? `a = x` is an assigment - this expression assigns the value that is in `x` to `a` `a == x` is a comparison - it compares the values in `a` and `x`, and returns `true` if they're the same, `false` if they differ. 
1. SQLLite 2. MVVM Cross or Autofac 3. Checkout [Xamarin Plugins by James Montemango on Github](https://github.com/xamarin/plugins) 4. Best advice is to know the Platforms and XAML depening on if you are using Forms or Classic
I got around having to call `GetResult()`, but as a consequence, generics, generics everywhere. public abstract class Result&lt;T&gt; { internal Result() { } } public sealed class Success&lt;T&gt; : Result&lt;T&gt; { public T Result { get; set; } } public sealed class Failure&lt;T&gt; : Result&lt;T&gt; { public string Message { get; set; } } public static class Success { public static Result&lt;T&gt; From&lt;T&gt;(T val) =&gt; new Success&lt;T&gt; { Result = val }; } public static class Failure { public static Result&lt;T&gt; From&lt;T&gt;(string msg) =&gt; new Failure&lt;T&gt; { Message = msg }; } public static class ResultExtensions { public static string DescribeResult&lt;T&gt;(this Result&lt;T&gt; res) =&gt; res match ( case Success&lt;T&gt; succ : (Object)succ.Result match ( case string s : s case int i : i.ToString("N") case var x : x.ToString() ) case Failure&lt;T&gt; f : $"Error: {f.Message}" ); public static Result&lt;R&gt; Map&lt;T, R&gt;(this Result&lt;T&gt; r, Func&lt;T, R&gt; transform) =&gt; r match ( case Success&lt;T&gt; s : Success.From(transform(s.Result)) case Failure&lt;T&gt; f : Failure.From&lt;R&gt;(f.Message) ); } The signatures are a bit painful for the truly generic functions, but thankfully when you go to use it, it's still quite simple: let result = Success.From(25); let mapped = result.Map(x =&gt; x * 2); Console.WriteLine(mapped.DescribeResult()); // 50.00 let result2 = Failure.From&lt;User&gt;("Could not connect to the database"); let mapped2 = result2.Map(x =&gt; User.Id); Console.WriteLine(mapped2.DescribeResult()); // "Error: Could not connect to the database" Still really excited. There's a tiny, type-safe version of `Map` in C#, using pattern matching. Wee!
I lied anyway (I've got the fevers :(). What I wrote is true in a workstation environment, in a domain environment you can remotely elevate other accounts than the built-in administrator. But I still bet it's a privilege elevation problem. Have you tried starting the browser with "run as administrator"? Unless you do you won't pass along a token with administrator permissions. https://technet.microsoft.com/en-us/library/ee844140%28v=ws.10%29.aspx?f=255&amp;MSPPError=-2147217396
Ok, you got me. I like to think I've become pretty immune to click-bait headlines, especially today, but this one got me. I had the pitchfork ready when I clicked.
If it's any consolation it's a title that would've made me click in anger :P
Nope, wrong again. The client should not have any rights to elevate permissions on the server. The server is verifying if the user who is accessing the web page has the valid role according to AD. 
Same here. Went from writing minor batch scripts to building web apps because our developer left. I didn't know c#, asp.net, really any type of programming outside some basic scripting. 
Came to say this. Once I got to a point where I didn't suck with it designing forms went a lot faster.
The point is, it often shouldn't matter what the exception type is, since exceptions often shouldn't be caught anyway. 
I don't think you get me. The user account don't need any permissions on the server, that's not what I'm talking about or the article I linked says. When an administrative user logs in to a workstation with UAC enabled LSA creates two tokens on the workstation. One with administrator permissions, one filtered without administrative permissions. The shell runs on the filtered regular user one, ie so does all processes started without elevation, ie the browser. When you start your browser using non elevated UAC mode the token that gets sent to the server is the one without administrator permissions. If you start the browser as administrator the client will use the token WITH administrator permissions and send to the server for verification. This requires not permissions at all on the server. Although if the user is domain admin he already has all permissions he wants on the server. Unless you're talking about a disconnected webserver then you must use another authentication mode. From the article. "This filtered access token is used to start the user's desktop. Applications can use the full administrator access token if the administrator user provides approval in a User Account Control dialog box." EDIT: I'm basing this on that you are using kerberos/ntlm (negotatiate) authentication.
Yep, seems to be. I got an email from them about 10 minutes after I posted laying out the details :) I'm delighted, I've been hoping for this day for ages.
Unless it is actually "bool?" (nullable) Then it could be null.
Then it would still be false. Besides, it wasn't nullable.
This is one of the many Reasons i have Stayed away from 2015, Which Sucks because i do like some of the new features. I have this when i open about 5 projects and flip through them i sometimes get some GUI from project A to project b. I have not tried using in Virtual Environment but i can see the issues in my mind with it.
OK, cheers. Thanks for your reply
Not exactly sure what youre talking about, are you saying values changing at runtime dont persist/reflect in the designer view in VS2015?
I don't know why you're claiming the code he linked on top is pseudocode. It looks like real C# code to me, other than the variable name being a type rather than a mere variable name. But this merely makes me think he took his code and changed the variable name so as to simplify the question a little. But he called it "bool" rather than "bool?", so it makes me think he meant it as a non-nullable. As for true/false/null, I believe if you do a (test) with test being a null bool variable, it will come back as false. I haven't tried this specifically and I can't test it right now, but I believe this is true. &gt;This may or may not matter, but in my experience, when using a nullable bool, their IS a distinction (otherwise you'd just use a regular bool). There is definitely a distinction. It's for when you don't yet know if the value is true or false and don't want to default it. But a conditional test still can only handle a true/false situation, and null should fall into the false category. edit: reading it back, when you said "A nullable bool (bool?) can be true, false, or null.", I think you mean bool? in the general sense. I was talking about his specific use, not general use of bool?. His if statement there could be only be true or false, so adding the elseif(!bool?) would be similar to merely else but probably with a slightly bigger compiled result.
Dead obvious, mate.
I'm not sure what microsoft is willing to do for uwp developers after announcing the modern apps converter for win32 applications and free xamarin. For desktop applications winrt is to limited as you mentioned. With Xamarin I can reach more people as with UWP. So why should we use this limited uwp, microsoft?
I never use the designer for any of the actual design features, but it it's nice to have a representative preview if possible! 
In the designer view, everything has changed but runtime is showing the previous values. Write code (1)&gt; debug/run (a)&gt; close program/stop debug &gt; change code (2)&gt; debug/run (b). The text in debug/run (b) has the same value as 1, even though the code in 2 (in front of me) has changed. The only solution I have found is restarting Windows.
I'm pretty sure this is wrong-ish. http://stackoverflow.com/questions/12495937/winrt-replacement-for-system-componentmodel-typeconverter 