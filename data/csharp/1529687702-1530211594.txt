I inherited a Surface 3 Pro from my father when the screen became too tiny for his declining eyesight, and the 128Gb drive is positively ænemic. Fast, yes; the surfaces had M.2 SSDs in them, but even as a backup unit for photos while on vacation it is hard to justify. I have to drag along a 1Tb external drive just to store shit.
I have a 2GB Western Digital that goes with me everywhere. 
What video games? I have 3 games and they are 48GB + 13Gb + 32GB lol I just bought a second drive for games, I don't know how anyone can survive on 128GB.
There is nothing inherently wrong with using object initializers.. why would you despise them?
Glad I could amuse you; it’s a common (and derogatory) term in IT to clearly and distinctively highlight the format of older non-SSD drives to customers and non-technical people.
Static constructor could initliasise and add your items 
No. I have. 128 SSD and I'm constantly worried about space. Going to upgrade my ssd to something bigger soon.
What does it matter which video games when they're not included in the count?
This is useful, I wasn't aware of this. Would have given me the exact line!
In your static class definition (I find it's better to initialise collections within the class definition and then add in the constructor, but to each their own) var dictionary = new Dictionary&lt;string, int&gt;(); Constructor: static testclass(){ //do stuff } Not to nitpick, but your naming conventions aren't so great. Start the good habit now to save yourself heartache later.
Not OP, they have their purpose, but in this case it's just adding to confusion and hindering readability. There are also some cases where you shouldn't use an object initialiser, mostly experienced this with issues in Entity Framework.
All of these kludges to get something simple like drag and drop going are yet another reason WPF will never be as great or easy as winform. 
&gt; Not to nitpick, but your naming conventions aren't so great. Only one variable in my test example has the same name as in my actual code, `modeLookup` (which I actually just renamed to `_modeLookup`) My classes are `LikeThis`, members `_likeThis` and methods `LikeThis()` - I thought this was conventional?
The content of page is the problem. You've duplicated, verbatim, [Jon Skeet's post.](https://codeblog.jonskeet.uk/2018/04/21/first-steps-with-nullable-reference-types/) Even if you had his permission to rehost it (which I'm not confident of, but feel free to PM it to me), it's essentially blogspam. A submission to his [original post](https://codeblog.jonskeet.uk/2018/04/21/first-steps-with-nullable-reference-types/) would have been accepted here no problem. Also the fact that you are an employee or owner of the Hashnode website, puts you on very thin ice with regards to submissions; this reduces the leniency offered when considering rules. That said, there is no explicit clause in Rule 7 mentioning blogspam. So if you can show viable evidence that Jon Skeet allowed permission to rehost his content, then I'll allow this submission. I will be adding a "blogspam" clause to Rule 7, so future submissions of this style will be removed as such.
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/interop/how-to-access-office-onterop-objects https://msdn.microsoft.com/library/microsoft.office.interop.excel.aspx Just about anything you can do through the Excel UI, you can do through the COM interop libraries. It won't necessarily be an enjoyable experience, though.
Then how is it working just fine for me?
Lol. OP has PM'd me 6 times asking for help, I don't even know how / why he pm'd me as I haven't posted on any of his threads. Says he doesn't want his hand held, he just wants "specific, step by step instructions on exactly what to do". Unreal.
On mobile right now, but for Excel, you can try EPPlus. It doesn't need Excel installed to create, read, or modify Excel files (as long as they are .xlsx). It's a pretty easy library to use and fairly fast. It's the base of a lot of projects I've done for creating reports. You can also try Office Interop for both Excel and Word, but you need them installed. You also need to be careful when using them because they use COM interop and if you don't access objects correctly, you can end up with rogue instances that stay running even if you try to close them programmatically. To prevent this, anytime you go down an object's hierarchy, you may need to create a variable that references each step of the way down. You can also use NPOI, which I believe has both word and excel libraries. I don't know much about it though. 
I'll check it out but im sure its better than fiddling with excel functions and VBA
You sound like a person who knows what they're talking about, so hopefully you'll allow one more question! I realize the jump from a SATAIII to a nvme SSD won't be as dramatic, but will the performance boost be noticeable? I've been seeing a few SSDs on slickdeals recently, and I wonder if it's worth considering. 
I disagree that Swagger pushes you to implementation first. Swagger is all about the API contracts, and when combined with tools like Postman or (SwaggerHub)[https://swagger.io/tools/swaggerhub/] to setup mock servers, you definitely have a "design then implement" approach.
&gt; public static class testclass &gt; modeLookUp These are what I'm referring to. modeLookup is a collection but is named as a function, while testclass could literally be anything. Case, prefixes, etc., are still important, though how important is a bit debatable. 
Hey u/margelef Just wanted to say thank you. As a DBA, I'm alright and digging around c# but not great. You really got me out of an annoying sticking point yesterday. And I'm learning a ton just digging around this old ass code. Thank you so much!
no
Don't bother with the COM interop libraries. Use Docx for Word documents: https://github.com/xceedsoftware/DocX Use EPPlus for Excel documents: https://github.com/JanKallman/EPPlus 
Fuck no. Don't do it. Visual studio is a space whore. Trust me. I've gone through it. It will eat that hard drive, making it near damn impossible to update properly. 
Np. Glad you got it sorted out
Doesn't `HttpHeaders.TryAddWithoutValidation` skip parsing?
Nobody in here has asked this but I will, is there a reason you must use your local PC retailer to get your card? I obviously know nothing about where you're from but you can get western digital SSDs many places online for like $75 for a 256gb and $110 for a 500gb if that's an option for you and would last you much much longer than a 120 would
Hard no. 
I really wanted this to be a one line article that just said: &gt; We stopped allocated large objects But annoyingly it's actually a bloody good read, and not the joke I wanted :) Thanks OP :)
Relay for Reddit 4 life 
I have a 120 GB ssd and widows 10. It's constantly full, to the point where windows can't update (blessing in disguise?) but it keeps bugging me to clear up some space for updates. I don't have a whole hell of a lot of other stuff on the drive, so yeah I guess what I'm getting at is its a tight squeeze and I wouldn't recommend it. 
eeeeh i'd not be so sure. For actual data manipulation etc sure! Since you get to use c#... or vb.net ... but the actual interaction API isn't too different from VBA. So formatting is still a bitch. You still need to actually run fucking excel with alerts and visuals disabled... but now as a bonus you'll need to look through any running Process if it happens to be the "EXCEL" process you started and kill it since you can't trust excel to quit properly when a bug/friday happens. If you google for that factoid you'll find a stackoverflow answer upvoted hundreds of times going as far as recommending to manually call the garbage collector on any interop object you defined O-o
I struggled with a 250 GB hard drive that had VS and Win 10 on it (also had like photoshop and other programs), so no, go with AT LEAST a 500 GB hard drive (which is actually more like ~476 GB since retailers use GB instead of GiB or whatever)
Absolutely! But if you plan to save any personal data on that our install any games be sure to get a second data drive
Offhand what do you need to do to manually compact the LOH?
Don't do it. Probably you will try more than one VS, try .NET Core, some other stuff like data base. I have 256 GB and I am looking to extend it. Go for 512 GB minimum. 
Set [LargeObjectHeapCompactionMode to CompactOnce](https://msdn.microsoft.com/en-us/library/system.runtime.gcsettings.largeobjectheapcompactionmode(v=vs.110).aspx) and then call `GC.Collect()`.
Nope, considering you will end up having other unplanned programs installed I would say go 240 GB to be safe. I have Windows 8.1 with VS 17. It uses more than 120GB with extra minor programs installed. 
uBlock fucking Origin. I can't believe I have to explain this to programmers.
Short answer is no. 
I wonder how many of us have made an internet logger app for the same exact reason? I made one too for my ISP.
&gt; public static class testclass This is literally the first thing I typed into dotnetfiddle.net to get a minimal possible example of the problem I was having. To be clear: I copied code out of my actual project, into another, smallest-possible example test code project to demonstrate. I would never actually name a class `testclass` in a real code base. &gt; modeLookup is a collection but is named as a function No, it isn't named as a method. The convention in C# is for methods to start with an uppercase character. If it was a method, it would be named `ModeLookup()`. All the .NET libraries follow this convention. In fact, if I name a method starting with a lowercase character, Visual Studio gives me a warning telling me it doesn't follow the convention. If you are referring to the fact that "lookup" is a verb and not a noun, you may have a point, but it is short for "lookup table", and it can't be called "mode" as that is too ambiguous, and it can't be called "modeDict" because Dictionary is the type. &gt; prefixes These are rarely appropriate in C#
\&gt; reddit mobile app #YIKES! browse the desktop with CSS styles turned off, my dude. been doin this since 2010 😊
Money it’s not the problem but the fact that i have to pay more shipping fees than the product itself makes me buy the 128GB SSD.
I got an another hard disk for other data, i just need the SSD for VS and Windows.
C# in a Nut Shell and C# in depth https://www.amazon.com/C-Depth-3rd-Jon-Skeet/dp/161729134X https://www.amazon.com/C-7-0-Nutshell-Definitive-Reference/dp/1491987650/ref=pd_lpo_sbs_14_t_0?_encoding=UTF8&amp;psc=1&amp;refRID=7BGPV3BGE9GZWZZ6C3W9
Most of my projects will require a database so it will be installed for sure.
I use Windows LTSB so updates are not a thing in my machine, I have also a WD HDD so other things would be saved there. Thanks
I live in a country when the fees are more expensive than the product itself.
I never knew this either 
&gt; but will the performance boost be noticeable? It's really hard to say but I would guess probably not. People who do things like editing extremely high res video and scrubbing forward, or editing hundreds of medium format hi-res RAW photos in lightroom. For software development I can't see it making a meaningful difference unless your project is huge.
Ff is slow as shit though Tried using it for a while but got fed up at the sluggish performance 
Speaking as someone who is very particular about performance, absolutely. You definitely notice it with bulk transfers, as the speeds are typically 1.5-3x faster there, but the drives also tend to have better IOPS numbers and will make any storage activity slightly faster. It's something like the difference between 15K RPM SAS and 5400 RPM SATA drives, but the price difference is negligible by comparison.
I do exactly this...... and run out of space all the time. Every day I wish I just spent an extra $35 for a 240GB.
I own both SATA-based and PCIe SSDs, and the performance difference is quite noticeable. But if you’ve never used a PCIe SSD, you’ll think SATA SSD performance is great vs old spinning disks. If you’ve use a MacBook Pro or high end Windows laptop with PCIe, you’ll be frustrated with SATA. 
so with c# you'll want to specify what GUI framework you have in mind. You could do this in Winforms, WPF or UWP. If you are choosing WPF (good choice): https://stackoverflow.com/questions/3034741/create-popup-toaster-notifications-in-windows-with-net read this. Try some stuff. Get it to look shitty and half work. Ask follow ups here =) at 1 week of experience this reads as the posterchild of "i don't even know how to start". Create a window with the dimensions you want and the look you want and containing the data you want. Ask followups if you have difficulties. But specify UI framework. For the time fadeout question that kinda matters. Winforms and WPF timers are different.
Gotcha, thanks for the response!
Hmmm alright, my next question then is are you set on an SSD for a particular reason? I know it's obviously much faster, but I personally might steer you towards a disc drive as I think your computer is only as powerful as it's largest bottleneck and 120gb of storage is quite the bottleneck, especially if you start talking about getting like SQL Server Management Studio, possibly postman, web browsers, emulators (if you're interested in web or mobile dev), etc. Honestly i think the difference between an ssd and a disc drive for your particular application (especially if you're considering one as small as 120 gig), will be a matter of less than 3 minutes every time you get on your computer, and getting something like 500gig disc drive will serve you much, much better in the long run. 
Why the hell doesn't Microsoft make the following behavior Default (or at least opt-inable): - Try to Alloc - Not Enough memory - Try to GC - Still no contiguous block? - Nope, Then try to Compact the LOC and give it one more go before blowing up. 
&gt; I don't know how to use something so it sucks
probably best to just use the built-in windows notification stuff: https://stackoverflow.com/questions/32214716/showing-a-windows-10-toast-notification
You can get a LITTLE closer to what you want with [something like what Akka.NET uses](https://github.com/akkadotnet/akka.net/blob/dev/src/core/Akka/Util/Internal/SynchronizationContextManager.cs). 
Regular expressions are used for a lot more than that. They're not just for use in an ide, but programmatically as well. See `System.Text.Regex`. You can do stuff like find phone numbers in a block of narrative text, or fail to parse html.
interesting, is it super common to use it in something like a game? Any examples?
I want the message to automatically clear after 1 or 2 seconds so I shouldn't be able to see it in the notification menu, is that possible?
Firewall and http redirect rules.
Probably not. Here's a line from the file I have open on the other monitor. Regex.Replace(prop.Name, ".?[A-Z]", m =&gt; string.Join&lt;char&gt;('-', m.Value.ToLowerInvariant())) It replaces `PascalCase` with `snake-case`.
the manager has a history property which gives you an instance of this: https://docs.microsoft.com/en-us/uwp/api/windows.ui.notifications.toastnotificationhistory
I want the message to automatically clear after 1 or 2 seconds so I shouldn't be able to see it in the notification menu, is that possible? I'm not too concerned about the UI as long as the script is able to display the text I want at the right time. I only have 1 monitor so monitor setups shouldn't be an issue.
You can create virtual public methods in your base class with your attributes on the methods, and then override those methods in the subclass without having to add the attributes to the overridden methods. But to be honest it is hard to understand what you are trying to accomplish here. What is the output you want to see from your logger? Or put another way, what is the execution path you want your code to take? 
Why not just store a bool to indicate if it has been run. And return if it has. That way it will only run once.
Drag and drop is simple to implement. These "kludges" all have many other features baked into them. WPF offers more versatility than winforms anyday.
Aha! I'll have to give this a shot. Thx
Not sure. This was on .NET Framework v4.5 and C# 5, quite old now. So maybe it does these days. Or maybe not. Perhaps I should run some tests when I finally get back to blogging and write up a report.
&gt;, or fail to parse html :P
Full install of Visual Studio runs 80+ gigs.
You really should learn it. Most programming and scripting languages supports regex, and most text editors. And there are so many times it can save you hours of work when working with anything text related. * You will need to know it if you ever do input validation (email validation, etc..). * It is very useful for quickly adding line breaks to some text or a list (replacing ';' with ';\\n'). Or just adding a character to the end or the beginning of a line in a text document (replacing '$' with ';' to add a semicolon to the end of the line).
You'd think considering the alternative is to blow up the program :/ You could probably write your own GC as a wrapper over the existing GC that will do this, but that's really overkill.
Even a 64GB SSD is more than enough for just Windows and Visual Studio. I wouldn't recommend 32GB though.
if only those two, sure go ahead
I can only recommend WinForms for now. WPF is slow and overly complicated. UWP is Windows 10 exclusive and no one seems to like it.
I have a 250GB SSD. I wish I got the 500.
I've decided to do it this way [https://www.addictivetips.com/windows-tips/show-a-custom-toast-notification-on-windows-10/](https://www.addictivetips.com/windows-tips/show-a-custom-toast-notification-on-windows-10/) but how do I get the message to automatically clear from the notif menu?
Thanks. But it look like I can use forms and buttons but with script and code not visually drag and drop.
I use regex a lot while I'm programming. * Taking several lines of data and reformatting them into SQL insert statements. * Converting a look up table into an enum. I use them in code if I'm parsing data. I use [EditPad Pro](https://www.editpadpro.com/m/index.html?wlr=1) as a text editor, not an IDE just a scratch area and a place to use regex. I also use [RegexBuddy](https://www.regexbuddy.com/m/index.html?wlr=1) as a GREP tool. Both of these programs cost money, and there are free alternatives to both, but it's just what I like. Not paid by the folks at Just Great Software, just like their stuff.
Why not just call it 2.1.1 - this naming nonsense gets so confusing when nothing matches.
I've decided to do it this way https://www.addictivetips.com/windows-tips/show-a-custom-toast-notification-on-windows-10/ but is it still possible to get the message to automatically clear from the notif menu?
I'm not familiar with Xamarin, but it sounds like the color type has an implicit [conversion operator](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/conversion-operators) to `int`.
Thanks for ur reply. :)
Because that's not pit of success. As a a programmer you need to manage large objects. Garbage collection was intended for small things. If they implemented that they'd just get people bitching about how slow c# allocation is.
Just off the top of my head, we use it to search through diagnostic logs to find exceptions for summarized error reporting, parse connection strings into their component parts, part of the CI build process to dynamically set the assembly version, For validating certain inputs, parsing the prompts and returned information that is given from a telnet-controlled Fuel pump, parsing extra document information that is tracked via "extra" fields, finding certain content/code usages in some very old Mainframe BASIC code. It's also useful for certain configuration options as it provides for some flexibility after deployment. eg a configuration that allows or blocks certain text strings to skip over speciflc customers, items, departments, etc. Think if it like String.IndexOf but ridiculously more capable.
PowerGREP is another pretty great tool they have for file searching. Not hugely more capable than chained *nix tools but the interface I find more friendly and straightforward to use and interact with.
"the lack of performance with a spinning-rust drive will be dwarfed by the lack of usable room on a 128Gb SSD." That makes no sense to me. When SSDs were still pricey I was using 128gb for my work machine and it performed great. Unless you are getting above 80% usage on an SSD then you're not going to see any performance degradation. And unless you're working with projects that have large assets or you have large amounts of test data loaded in a local database, 128gb is plenty. I would gladly trade in a 1TB HDD for a 128gb SSD any day.
I've never tried it, it is pretty expensive compared to Regex Buddy. Is it worth the money?
Can you just use a async/await? And do the numbers in the list have to be processed in a specific order?
VS 2017 with many/most options (I do a variety of things) can suck up a lot of room, to say nothing of plugins like ReSharper. WinSXS can easily bloat it’s way to over 40Gb of room with no easy way to prune or reduce unless you enjoy reinstalling everything every time you brick. Full-stack work will also include many different ancillary programs, not the least Photoshop and a few others, plumping up your requirements even more. And since I often receive files from clients from various programs or with various processing needs, I need to have those installed as well - yes, interop is a thing, but it isn’t perfect. In the end, even a basic spread of programs (no data) has me hoovering up over 140Gb of data. Plunk program and user data into it (AppData dir, primarily) from 2+ years of work and it’s getting close to 200Gb. It’s why I run with a 250Gb SSD and still have a 1Tb spinning-rust drive for holding my virtual machines, projects and databases. And I was directly comparing frustrations, not drive access speed.
I used to work in eDiscovery (electronic evidence like emails and spreadsheets for court cases), and we used Regex **constantly**. I had a monster Regex expression that, combined with a very simple MS Access database would convert million record delimited files (think CSVs but more complicated) into something that has more in common with a poorly structured JSON document. It would do in 90 seconds (plus &lt;5 minute setup time, including finding the files and copying them) what my coworkers took 6 hours to do.
wow that’s crazy 
The actual release **is** called 2.1.1: https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.1-download.md 
Would you say it’s particularly hard to learn? Just curious where I should be spending my time/ in what order
Damn just checked, and I don't remember paying THAT much for it. Remembered it as the same price as RegexBuddy/Editpad... At that price though it's hard to say. It's probably saved me at least that value in time manyfold since I got it, though- changing some tiny part of hundreds of files scattered within various directories for example is made pretty trivial.
No specific order 
&gt;fail to parse html [oh no](https://stackoverflow.com/a/1732454/1406930)
The cool part was when I got written up for spending 8 hours throughout a week working on it. It saved me about 6 hours a week over 6 weeks before I found a new job. The boss hated it because no one else on my team wanted to use it because they thought MS Access was black magic (let alone the string of random bullshit that a Regex looks like). As a cool bonus, I got denied a position on the company's engineering team because of the write-up. Solving problems like that one is their entire job.
I’ve used another library (Processing/P5.js) and it’s the same way. There is a color type but it’s actually an int under the hood. 
sounds like you were underpaid
I underestimated it i see lol
I know, but why call it "2.1 June Update"? Even "2.1.1 June Update" if they need to put the month in there. Just reeks of some corporate naming policy they are being forced to follow.
If order isn't important, then you might be able to use async/await and call each request in your loop asynchronously. Basically every request in the list would get executed, but they would return at different times as they complete. The key to that is using Task.WhenAll() so that they will all run in parallel. It's a little more involved than just creating an artificial delay between requests, but would look something like the solution to this question on Stack Overflow (of course): [https://stackoverflow.com/questions/19431494/how-to-use-await-in-a-loop](https://stackoverflow.com/questions/19431494/how-to-use-await-in-a-loop)
It's useful if you're manipulating lots of text, in possibly very complex ways, otherwise, you probably won't need it that much.
According to [the docs](https://developer.xamarin.com/api/type/Android.Graphics.Color/), you're right. I would link directly to the implicit conversion operator's docs for it, but it 404ed on me when I clicked on it. It makes sense, too... Android.Graphics.Color is just a struct representing an ARGB color that has methods to get the alpha, red, green, and blue colors independently instead of having to do bit shifting.
No it is not, might seem like it is at first but you will run out of space quickly. You are better off with a hybrid drive or an at least 256GB SSD. 
So to make sure I understand, I should be using manual presigned urls to get and put objects?
thank you 
Great article, look forward to seeing more in the future!
"That’s like saying, 'when cars were pricey I got my fuel for 15¢/gallon and it was great, what’s your excuse here and now?'" Did I say "When SSDs we're expensive I bought the pectricity for 13 cents a kilowatt."? If I did then your anaology would have had some relevance. But since thatha no where close to what I said, what's your excuse? One of my portable machines has 128gb SSD in it and has been upgraded to Win 10. The only problems I had were related to incompatible drivers and that's long been resolved. "Win10 will run, and maybe even acceptably, but the system’s drive won’t be “cavernous” to Win10 like it was to Win7." I already qualified the reasons you might need more than 128gb. I'd take the 10x performance over 10x space I don't need. I'll benefit from the performance. I wontw benefit from space I don't need.
2.1 June Update with .NET Core SDK 2.1.301, ASP.NET Core 2.1.1 and .NET Core 2.1.1. Glad to see all versions starting with 2.1. 
You can learn it in 10 minutes. It’s not something you use very often, so you’ll likely forget how to use it and end up googling it every time you need it. 
I think what you may be looking for is the [NotifyIcon](https://msdn.microsoft.com/en-us/library/system.windows.forms.notifyicon(v=vs.110).aspx) class. Specifically the BaloonTip attribute. 
I've tried putting this code into Powershell ISE: [void] [System.Reflection.Assembly]::LoadWithPartialName("System.Windows.Forms") $notifyobj = New-Object System.Windows.Forms.NotifyIcon $notifyobj.icon = "c:/assets/icon.ico" $notifyobj.BalloonTipTitle = "This is a title" $notifyobj.BalloonTipText = "Stuff goes here" $notifyobj.Visible = $True $notifyobj.ShowBalloonTip(2000) $notifyobj.Dispose() however I can't make it disappear from the notifications menu automatically https://i.imgur.com/8TbIlk1.png
Wait... Your writing your code in PowerShell ISE? 
I suspect OP is expected to know this stuff, and is trying desperately to find someone to make him look like a hero. Hence the unwillingness to pay more than $20 (actually, up to $100 as of last comment, which he can pay later when he has more money). If the business needs it, they can easily pay at least $200-300 for someone to code it. But from the sounds of it, they actually need someone to completely reimagine whatever this project is and build it correctly. Sounds so hacky.
Well that's how it's done here [https://www.addictivetips.com/windows-tips/show-a-custom-toast-notification-on-windows-10/](https://www.addictivetips.com/windows-tips/show-a-custom-toast-notification-on-windows-10/)
Lol first off let me apologize for the tone of that comment. I was in the middle of editing it when you replied. Just so you know that wasn't intended in any way shape or form to be condescending, truthfully you caught me way off guard there I was not expecting that Lmao. If I may make a suggestion, I would strongly advise you download and install Visual Studio (Community for windows Code for Mac) as it's going to make writing your code so much easier. Not to mention all the debugging help. The NotifyIcon class I mentioned before, that you tested in ISE, the reason it's not going to dissappear on its own is because, the timer on show method won't start counting down until it detects some form of user input. This can be avoided by implementing an additional timer that starts counting down in the event thrown by the NotifyIcon when it appears. There is something else I was going to mention in my first post but forgot to so here it is now. it's not necessary to use task scheduler to run the program on startup. For this there are 2 options, the first is to drop your exe into the startup folder which can be accessed by typing `Shell:Startup` into a run window. The second option is a bit more advanced where, instead of creating a program you create a service. Implementing a service instead of an application ensures that your code is always running and has recovery features built in in case of failure/crash 
Are you talking about winforms, webforms or WPF implementation of listbox? If you're confused about something the framework is doing, you can try looking at the code behind the curtain: https://referencesource.microsoft.com
Transparency. Ability to review change scripts and know exactly what's happening. If I need complex data movement or seeding any code tables, I want to review that. My limited understanding of DACPAC is that it does dynamic analysis of differences at deploy time to decide what needs to change. This makes me a little uneasy in cases where my pre/post scripts are handling complex data movement or seeding and I need to be certain of the order schema changes are applied. I'd rather have a baked in script I can sanity check visually and run in preproduction environment and not gamble on dynamic analysis. **I admit alot of that uneasyness is lack of knowledge of how DACPACs behave.** When I've tried to read up on them, alot of articles glaze over the details and make it sound automagical, which is too little detail for me to be comfortable with. All of these automatic schema deployment tools have nuances to their balehavior, EF migrations included, and I want to know those nuances before I run the tool against production. Also alot easier for someone else to inherit. If they know SQL then generating and running change scripts doesn't introduce anything new to them.
By "low-code tooling" I presume you're referring to OpenXML SDK, is that right? Note that you can use its Productivity Tool to generate a snippet code that you need and thus speed things up. How this works is you create a document with MS Word, you place the element that you desire (in your case a Table), you then open the document in Productivity Tool, select the element and click "Reflect Code". Nevertheless, if you can say anything more about your exact use case, maybe I could suggest something additional that could help you. Also just as an FYI, someone suggested NPOI note that it does not support newer formats (DOCX, XLSX), it supports only older ones (DOC, XLS). Last I'd like to add that I had great experience when working with GemBox libraries, ([GemBox.Spreadsheet](https://www.gemboxsoftware.com/spreadsheet) and [GemBox.Document](https://www.gemboxsoftware.com/document)). They can simplify various tasks and the API I find to be really straightforward and easy–to–use. You can even create a document in a way that's similar to syntax from System.Xml.Linq (how XDocument can be created, you know that constructor nesting).
yes. https://docs.microsoft.com/en-us/uwp/api/windows.ui.notifications.toastnotifier.hide You could start a field of type https://msdn.microsoft.com/de-de/library/system.windows.threading.dispatchertimer%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396 DispatchTimer with your interval and wire the eventhandler so your notification gets hidden. Just make sure that whenever you create a new Notification any old one gets hidden aswell.
Sorry, I should have specified! I'm using winforms. And I will definitely check that out.
(Azure) Service Fabric? 
Theoretically, you could. In practice, no. Windows updates and Visual Studio updates are going to eat your space before you know it. I have a 256GB SSD in my work laptop and a 512GB SSD in my personal laptop. I recommend 512GB.
Its used a lot in game tools. Script parsers. 
The schema compare you use in VS uses the DACFx to do the schema compare. In fact, when deploying a DACPAC, the DAC service performs the same schema compare to generate the same change script. When deploying the DACPAC, it generates the schema changes (the same changes you would apply by generating that change script) and combines those changes with the pre-deployment script and post-deployment script into one deployment script. The pre-script SQL is ran before the schema changes and the post-script SQL is ran after. The vast majority of pre and post scripts are written to be idempotent -- that is, each script can be ran against any database without negatively impacting the data. For example, suppose you are dropping a table but you need to migrate the data to a new table. In your pre-script, you'd write something like "if table exists migrate data to temp table". Then, in your post-script you'd have "if temp table exists migrate data to new table and drop temp table". The act of removing the table from the SSDT project will cause the SQL to be generated to drop the table. In this way, the pre-script and post-script I mentioned is only really ever ran once. However, you want to keep that script in the SSDT so that older databases can be hit with those scripts as well. If you use the DACFx (you can reference it in a C# app), you can not only generate the entire deployment script (pre, schema and post script), but you can also generate an XML deployment report which summarizes exact what schema changes are going to be made like tables dropped or constraints added. I'd still recommend generating the full deployment script and reviewing it before deployment, but only to review. No need to check it into source or anything -- just deploy the DACPAC. DACPACs are just zips, btw, and right-clicking on DACPAC should show an option to unpack it. I think this requires SSDT power tools, though. Inside, you'll see the pre and post deployment script as well as a few other items. As a side note, you don't need to register a DAC when deploying. In fact, registering it can cause deployment issues because it will fail deployments if the database schema has changed from what was deployed. While there are a few cases where that would be useful, it is mostly annoying. If you add a new login to a registered DAC (thus causing a schema change), you won't be able to deploy a DACPAC to it unless you disable the registration option (which we always do). Hope I didn't tell you a bunch of stuff you already knew.
Feels like a bug in .NET to me. Though it's tough to follow their ancient winforms code to see exactly how it's happening. Seems if the most recently selected item (even if the selection has since been set to null) is the last in the list, and it is removed and the control refreshed, it breaks. In this state, even trying to set DisplayMember to null / other property has no effect - the DisplayMember property doesn't actually change. I'd suggest to set the selecteditem of the listbox to one which is higher/earlier than the item you're trying to remove, if such an item exists, before removing the item.
Considered using a message bus? Scalable, Persisent, high throughput, mirror able etc 
On my job I have to parse a lot of input files containing, among other things, coordinates. I take each line in the file and match it against: ^X(/d+)Y(/d+)$ If it doesn't match, I know it's an invalid command. If it does, the regex parser has already extracted the coordinates for me (the two groups denoted by the parentheses). In general you can use to verify that your input matches the expected structure and extract data from it without having to reinvent the wheel.
It’s cute to suggest using lambdas instead, but interfaces are not classes so that doesn’t work. Anyway, I do have to wonder why there’s so many people on reddit who take any chance they get to hate on this feature, when it will have absolutely no impact on you if you do not want to use it.
I have encountered a couple of situations in which I had to use regex in my game programming job, but can't recall what was it. Maybe something to do with parsing text data that a designer had filled with content (like, an specific column in an speadsheet that had a weird format for whatever reason) but even in those cases you'd want to keep it simple. Just know that it's a tool that is there, to find stuff in texts but also to replace it! Substitutions are a very powerful tool. In the IDE as well, they've helped me recently with a huge refactor.
His point is about the way of implementation. Because of bad design it will pollute into other .Net languages (f# in particular) so he gave example how it might be implemented in right way (with separation between parameters and provided methods) 
Nope, we're using UiPath. Its more suited to SAP automations and automations with my company's internal tools but you can use it for word and excel as well. Its a tool well suited for people who don't know how to code but honestly the way it works for me is I end up having to find bizarre ways to do something I want to do with that tool that I could have done in a few lines of code. The tool itself allows code insertion, but thats in VB.NET and its... ugh... And yeah I definitely need xlsx and docx as opposed to the older formats to NPOI is out of the question. I'll check out the gembox libraries though, thanks for the tip.
I don't see where he suggests any implementation changes.
Maybe you use a framework or other tool which is not yet compatible with the latest version. For example, the game engine Unity3D was only able to support .NET 3.5 until it's Mono port was updated to .Net 4.6, I think.
But at the same time you can have a Qt app for example, much smaller and much faster. It's definitely not a blessing for the users. It's the opposite. But it is great for developers. Easy, nice, highly customizable ui.
No, that's not the case
.net versions and c# versions are not the same thing. .net is a set of APIs (like System namespace), and isn't necessary for c# programming.
Its faster in benchmarks, on user experience, both are instant. But just look at qt apps. Teamspeak, rpcs3 etc, it always look like windows 95 app. We want it to look pretty for user.
You mean for pet projects where you are running solo? No reason to not use the latest. 
Telegram is a qt app, and it looks just fine. Qt itself doesn't limit you. But I agree it's much harder and especially more expensive to get good developers for anything else than "web". So in that way, yeah, it's good for users to have better, nicer apps. But I'm not sure if it's worth the cost.
If its just Win 10 / VS17 then yes. I run a 120GB with both installed with the full shebang including Xamarin, and a bit of other junk, as long as you keep your projects on a different drive your fine for space 20-30gb left over.
Build servers need updating if you use them, but there are unlikely to be other backwards compatibility issues. I'm not sure if VS2013 got developer packs for 7, but I assume it did (There are still people who use 2013 for legacy reasons). The biggest problems with adopting the new syntax of 7+ is developer familiarity. If you work in a team you can introduce bugs if you don't understand the latest syntax optimisations, or even worse, if you do and your colleague who gets the code next doesn't. Hold briefing sessions on new syntax and provide a test fixture/library which demonstrates the old to new syntax (Doesn't have to be a test fixture, I just find it convenient).
Its just thinking from another age, where computing power is scarce. Novadays, a fridges can have 8 core processor with gigabytes of ram. We have to push hard for users to upgrade hardware, so that's a bonus for me even.
No :)
In that particular case, the .NET Framework limitation came from the old Mono compiler used, which means it also restricted the language version to whichever was current when the compiler was made. In this case, C#5
That's true, unless you compile your code to a DLL, rather than letting unity compile it; in which case, you can use any language version you like.
Yes, because the Mono compiler targeting .NET 4.6 is built to understand C#6 Language support basically depends on which compiler you're using, the final compiled IL can be interpreted by anyone.
And they said they are working on C# 7 support already: https://blogs.unity3d.com/2018/03/28/updated-scripting-runtime-in-unity-2018-1-what-does-the-future-hold/
Windows LTSB it's the reason why i don't update my laptop.
This sounds like the correct behaviour for a new MVC/API project. What do you think is missing? You need to click 'Change Authentication' when creating the project if you want authentication scaffolding.
My work machine has a 256gb SSD and it's a struggle to keep it from filling up. I guess if the only program you use is VS it'll work, but that's rarely the case
How about - let's use visual FoxPro and start primary keys at 2,000,000,000. Oh FoxPro dies at 2,3mrd of auto incrementing? Well let's create a function that increments the value +2 after an insert.
C# 7 is already available in latest beta versions, beginning from 2018.2.0b7 I believe.
Agreed. Lots of new candy in newer versions of C#. I think, that even in a workplace (as long as there isn't any "real" reason not to), it's a good idea to stat "up to date", even if it costs a little.
Lazy team mates not having installed Visual Studio 2017 :-(
Typically not, but if you can't guarantee that everyone is on the latest and greatest, it becomes a problem: * your build server * all your colleagues/team members who may make changes to the code and then try to compile it * if you're generating code, anyone who consumes that generated code
&gt; What do you think is missing? You need to click 'Change Authentication' when creating the project if you want authe I do user identity authentication and still no controllers
 &gt;Lots of new candy in newer versions of C#. `static async Task Main(string[] args){ ... }` Saved me so much .GetAwaiter().GetResult()
Maybe. I had a weird bug with the new `in` arguments in 7.3 where they wouldn't work between assemblies. Kept getting a `MissingMethodException`. I still haven't been able to nail down a reproduction. Just be aware there may be reasons they aren't currently the default.
Yeah but it can become a challenge if not the whole team is on the same version.
To expand on the answers here, the main reason to use a previous version is due to external factors, not because the version is itself flawed. Those external factors could be your deployment environment, such as under-updated Windows 7 workstations all across the enterprise, or perhaps a library that does what you want but doesn't support a new version. Or because nobody else on the team wants to adopt the new version and they have the ear of management -- this happens unfortunately more often than you might think. 
I'm thinking of just creating a script for each notification &amp; then running each one via task scheduler at the time I want the notification to show. If I have all the messages in 1 piece of code that's going to make things too confusing if I ever want to change something. If you could provide a sample file for 1 notification message (with a built in timer) that would be great as I don't want to go through the trouble of creating windows services &amp; Hardcode/External files. That seems like way too much work to just make a message disappear from the notification menu.
&gt; Are there any bugs or unexpected things in fresh versions? There have been -- there was something about optional method arguments and the `default` keyword in 7.1, I think.
You have to set the input mask to accept only valid digits using a regular expression. I am guessing this is a textbox field on a Windows forms application. https://stackoverflow.com/questions/463299/how-do-i-make-a-textbox-that-only-accepts-numbers
I wrote an example in acess and vba in 3 days..., why are your quoting me 3 months?!?!
The idea (if you want to be progressive), is to ask them to upgrade.
You know DDD, TDD? We need COD - Consumer Oriented Development, where we don't focus on bugfixing, or stable releases but features, features and many `IF THIS.Company = [cmpA]`
Those are certainly fair points! Under the right circumstances, you can definitely mirror the approach. What I’ve seen with most of my colleagues is that Swashbuckle/Swagger is used as an afterthought to document/annotate already implemented code. I’d love to see some examples of folks leveraging OAS for Design first! Maybe it would be something we could evangelize as an alternative path to RAML- choices are important!
We do scrum == we installed jira and have micro management meetings every day for 40 minutes!
Why spend X amount of money if you can hire a part timer to develop something *like* that for less than that - and no subscription cost - ***doh***
Is it free if I already have a 2015 license?
Yes
If by "selecting", you mean the setting in Project Properties -&gt; Build -&gt; Advanced in VS (the `langversion` compiler flag), note that this does **not** select an older version of the compiler or enable some sort of compatibility mode. The only thing it does is to throw compiler errors if you're using a newer language feature ([See Eric Lippert's blog post](https://ericlippert.com/2013/04/04/what-does-the-langversion-switch-do/)). So, as I understand it, in the case that a new Roslyn version introduces a bug that's not limited to new language features (changing the behavior of old code), a lower `langversion` setting won't help. So it seems one might as well select `latest` unless coworkers are using older versions or tooling doesn't support it.
&gt; Are there any bugs or unexpected things in fresh versions? If you select an older version, you're still using the newer compiler, just in a restricted mode. So if you were hitting some bug in the newer compiler, selecting the older version would almost certainly not help you.
Do yourself a favor and use the Nerdle.Autconfig library.
Planning meeting: We really need feature X because ive said nothing all meeting and i need to look smart and contribute something. Soooo yeah, we need feature X now.
Regex [link](https://stackoverflow.com/questions/26874938/how-can-i-limit-my-textbox-text-length-takes-9-digits-only-using-regex) 
There is a lot more uses for regexes then Cntrl+F in the IDE. You can use a regex to validate that a person gave input, like for a phone number or an email account. Another common use is to search through log files for particular types of events. A regex can be used to identify which file in a folder need a particular type of processing
Let's use 7z for versioning source code (that is held in SVN) and put it on a shared folder that is backed up all few hours. Hint: Visual FoxPro has a binary source format (pjx, vcx, scx) Other dev: hey there is Bin2Prg (OSS on GitHub) for VFP, that can two-way convert **Xcx** to a human readable text based format. Lead: Nope, we don't own the software, what happens if dev stops working on it, we can't maintain that. Dev: 7z it is.
Oh my gosh! A corporate policy!!?!!? WTF are you talking about. 
This is only partly true. C# as a language spec has some requirements on CLR and Framework. The last most popular requirement was 4.6 for Tuple. If you don't have use 4.6 and want to use C# 7.1 Features, you need to install System.ValueTuple as a NuGet Reference.
Yeah, we develop Umbraco sites and while Umbraco itself is absolutely fine on later versions, one of the tools we use (Modelsbuilder) is stuck on C#6, meaning everything builds and works just fine until you try and run it. Then it all blows up. Found that out the hard way. Beyond that, no reason not to upgrade to the latest language version.
How do I get that code to work with Powershell?
See my reply: https://www.reddit.com/r/Xamarin/comments/8stur8/uiviewcontrollers/e15xirx/?st=jirj6bfu&amp;sh=373eb5a2
Im using console application and when I put 2-digit or more the consolle app just crash :(
For console application. You can read follow this https://stackoverflow.com/questions/13106493/how-do-i-only-allow-number-input-into-my-c-sharp-console-application
One of the changes with 2.1 was that Identity is now included as a Razor Class library. You can scaffold the code if you want to modify functionality but you still won't get the controllers. It will be brought in as Razor Pages. You can read about it here: [https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&amp;tabs=visual-studio](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/scaffold-identity?view=aspnetcore-2.1&amp;tabs=visual-studio)
The app still crash and I can anyway put more than 1 digit number. That is part of my code: Board(); try { choice = int.Parse(Console.ReadLine()); } catch { } if (choice &gt;= 1 &amp;&amp; choice &lt;= 9) { } else { Console.WriteLine(); Console.WriteLine("Not valid", choice, arr[choice]); Thread.Sleep(2000); }
Can you use int.tryparse instead of int.parse? 
Just Doom is like 70GB.
Not sure that's right. It depends.
Ideally the whole team is using a repository and with selecting the C# version means that you are updating the required framework for the project. Either they keep their PCs up to date, or they don't work on the project.
&gt;fear of change Something like that. To be precise it is fear of bad sudden change and what it would be mean for future C# code that we have to deal with. Interfaces were introduced as contracts and I think it was a clean design choice and usage as opposed to the java one where they were used to solve many issues in a messy hacky way (functional interfaces, avoiding concrete types in the standard lib e.g collections like List&lt;T&gt; and acting as a hardcoded extension method-like behaviour). I use interfaces as contracts and expect them to be used as such in 3rd party libs. Making them have implementation after so many years IMO adds complexity to the language for newcomers (inteface vs abstract class. hint: state) and is pure confusion(not lack of understanding) for veteran users. Of course, we will swallow it easily and possibly use it. I think a good design pattern for this would be that "trait" interfaces only be used as such (all members have default implementation). IMO it is especially useful for Xamarin and some .NET internals but not for your everyday C# dev. There are many issues that deserve more attention such as typeclasses and pattern matching. IMO typeclasses and the way interfaces are headed would be a perfect mixture. Typeclasses would be the new (and better) way to make a contract because it can handle everything an interface can AND static members and possibly operators and one would use a trait interface to avoid explicit re-implementation boilerplate on both api designer and consumer sides. Of course, we also have mixins(extension methods) in the bag which can extend anything. Having first class support for mixins (extension everything) would also be pretty awesome and the end result would be the usual clean consistent design plus features that empower C# devs. `TL;DR` having interfaces with implementation doesn't mean anything for your code base but it introduces new capabilities that a small portion of C# devs may benefit from. But honestly this wasn't an issue for most of C# devs who were expecting some new features (that were delayed because of this) rather than redefining such a fundamental type that was accepted and loved as is.
C# 6, 7, and 7.X are not the runtime. They are just the compiler understanding of advanced syntax. For example, you could build a .Net 3.5 binary that uses C# syntax available in C# 7 and it would still run on .Net 3.5. I like the features in the later version that are available for easier coding. Use the latest, force the change.
(this solution)[https://stackoverflow.com/a/45899958] works and is pretty clean
Honestly, if you have a vision of what you want to create, in this case games, then push forward with Unity. It's a lot to take on, so my one tip will be, every big problem is lots of smaller problems, and many of those smaller problems are just tiny problems huddled together. That's your crowbar. Think big, have a goal, then break the impossible into lots of tiny possibles :) Good luck :)
I think of interfaces as "shared functionality" and base classes as "shared structure". It's a bit simplified but it helps quite a bit. So when I think of default implementation, it still fits because when I use an interface, rhe implementation is not important to me but the result. When I create a new version of an interface, using default implementation helps me solve an annoying problem of versioning. If I implement an interface, then I need to consider default implementations, and that's a price I'm willing to pay.
[This](https://visualstudio.microsoft.com/vs/support/already-paid-visual-studio-2015-need-pay-visual-studio-2017/) says otherwise?
Give the official unity tutorials a try, they walk you through the basics of the kinds of C# scripts you'd use and you'll be able to tell pretty quickly whether your C# knowledge is up to scratch. Also, you won't be moving from visual studio to unity, you'll be using them both; unity for creating the actual environment of the game, visual studio for writing the C# scripts.
Wouldn't I be writing the scripts in mono develop
Mono develop and visual studio are both IDEs (integrated development environments), just pieces of software for writing code. You can write your scripts in any IDE that supports C# but visual studio has a unity add-on you can get from the installer that makes unity development a lot easier. I've never used mono develop before, done all my unity stuff in vs with no issues.
There are other IDEs though. I prefer the minimal VS Code over the bloated VS any day (using .NET core almost exclusively). There is also rider, which i heard is phenomenal!
I usually do a .web project, which is my actually ASP.net core project, with controllers, views, etc. Then I do a .lib project that contains plan old c# objects, no reference to ASP.net or to database code. Here I define any interfaces for interacting with a data store as well as my domain classes. Lastly I do a project for using a database. I'll make a repository that implements an interface defined in the Lib project. Then in the Web project, I inject the specific implementation. From a dependancy perspective, you have your Lib project which doesn't reference either of the other two. The database project references the Lib, and the web project references both. Is this overkill? Maybe. But I like to be very clear about where my database code lies. And this let's me do that. 
is visual studio better then mono dev?
Nice find. That definitely improves the readability aspect.
I’ve always found that just making a project is the best at way to learn something. Yeah it’s slow to begin with but as you move forward you’ll find thing you never thought about at the beginning. Plus it’s more fun cause your making something you enjoy
Under what circumstances are you retrieving the result of a controller method? Is this for unit testing? If so, in that context, you would use assertions to ensure that the returned value is of the type you expect before testing its properties. That's how [unit testing controller methods](https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/testing?view=aspnetcore-2.1#unit-testing) works, is all. If not a unit testing context, then it probably doesn’t matter. Application code shouldn’t be calling controller methods. That's for the framework to call. I can’t _easily_ imagine a scenario in which that would be reasonable to do, aside from maybe awkward backwards-compatibility attempts? The framework doesn't need to know what the underlying type of the `IActionResult` is – it calls `ExecuteResultAsync`. 
In a workplace, it can be beneficial to stick to a few major versions of C# and the .NET Framework That way you avoid having to constantly switch: You'll get a bunch of projects using one version, then another bunch of projects using another... rather than every single project being slightly different. At worst, you lose out on that "candy" for 12 months at a time, but that's not a big deal when it takes most of us 6 months to catch on to the new stuff anyway, and another 6 months to get out of the habit of doing it the old way xD
Removed: Rule 4.
The newer the better imo
very cool, could you tell me more about your game job? That’s my dream job 
It all depends on how you're liking it IMO. If you want to know what else is out there or if you're not 100% comfortable with the IDE/language, by all means, try others. If you're simply looking to become a better developer/engineer, start reading about software designs and software patterns. They are high level concepts that will apply to most languages. Then start looking into learning several frameworks and how to properly pick one over the other and tweak them. Algorithms, logic processing, discrete structures, etc. are all great. They give you a more comfortable application to a specific problem to solve. You can stick with .NET while studying these and later apply them to others like Java. The take away here, keep learning and look back at what you enjoyed about it. 
As another reply says, it’s rare that you’d need to call an action in MVC and use its result in the way you’re suggesting. But putting aside MVC, and thinking about object oriented theory in more general terms, you said: &gt; This seems convoluted compared to just settings the return type as ContentResult This would work *if the return value is always a ContentResult*. The reason MVC doesn’t do things this way is because often the return value is not a ContentResult. A simple example would be an HttpNotFoundResult, which is an ActionResult but not a ContentResult.
Yes. The mono dev is essentially a spin off of visual studio. The intention of the Mono project is to make an open source VS and .net. If your happy with VS then stick with it. I'm a big Linux and open source user but I keep windows just so I can use VS
You know what, you might be on to something. &gt;The tutorial mentions that there may be cases when you need to return various action results therefore you can use set the return type as IActionResult as all of these classes implement it. /u/jusAsking24, this is referring to returning various action results from the _same action_. if (result == null) { return NotFound(); } else { return Ok(result); } …is an example of when this would be needed. `NotFoundResult` and `OkContentResult` can't both be there return type of this method, so `IActionResult` should be used. 
I see. That actually makes a lot of sense. I wasn't talking about actually doing this with MVC but at a fundamental OOP level like you mentioned. Thanks for the help.
If you don't want to make things better, fine, but no need to get pedantic and say stupid things. If you want to agree with nonsense just because you're worried someone might not like the way you think, that's fine - just do it somewhere else.
RSACryptoServiceProvider can generate keys as well as do encryption/decryption as well as data signing.
Meh, I work for a shitty mobile game company, so it's not that exciting.
Www.goalkicker.com
Hello there friend. I'm sorry it took me a while to get back to you, I am kind of in the process of moving right now and as a result, my Development Server is currently Shut Down. Because of this I only had access to a small portion of my script library and had to work on my Surface Pro 3. I was able to patch together a sample for you. I probably did a lot more work than I should have, but I decided there was value in building and having a Notification Framework in my Script Library. You can find the sample on \[Pastebin\]([https://pastebin.com/KkpCEDRr](https://pastebin.com/KkpCEDRr)). I've added comments on quite a few lines in an effort to explain what things are doing and to help you out. If there is anything else I can help you with feel free to comment on this or send me a PM. The final thing I'm going to say here is this, PLEASE PLEASE PLEASE download and install Visual Studio Community (Windows) or Code (Mac/Linux) and stop trying to run code in powershell. I realize that it can be done and that's the way the tutorials you are following are doing it, but its really not proper. Visual Studio provides you with features that will make learning to code far easier than using PowerShell ISE such as, Syntax Highlighting, IntelliSense (Tells you when there is an error in your code and sometimes how to fix it. Also provides you with details about methods and parameters you are using) and most importantly a COMPILER that will build a proper .EXE file for you to use.
Hey at least you have your foot in the door for an opportunity yet to come. I’d kill to be in your position 
Yes, but you can't just say "generate a key set," it has to get saved to your hard drive in a container, which isn't gonna work given the circumstances.
Visual studio has unity integration now. When installing vs2017 unity is one of the optional components you can add.
No. If you have a subscription, you get the newest; if you have a 2015 license, you do not.
I make well over double what I made then. I'm pretty happy now. Leaving was the best thing I ever did.
I tried clearing the selection and also setting it to the new "last item" and neither seemed to make a difference unfortunately. First tried listBox.ClearSelected(), and then sceneListBox.SelectedIndex = sceneListBox.Items.Count - 1; Very weird. :\
Nothing is saved to your hard drive, I’m not sure where you got that from. Look at the sample code on MSDN: https://msdn.microsoft.com/en-us/library/system.security.cryptography.rsacryptoserviceprovider(v=vs.110).aspx You can import/export keys as XML if you want - I’m not entirely sure what you’re trying to achieve though, could you clarify? 
You don‘t seem to know enough to be efficient with Unity. Keep on learning in „just“ C#. If you want to do something more game-like grab MonoGame and you can easily create simple stuff without fighting against a game engine. Yes, I wrote „fighting against“, not „working with“, because essentially you never work with the engine but instead try to make it do things it doesn’t know how to do yet. MonoGame has the same problem, but you still have more control over the whole application. Also, you can look at the source code of MonoGame and maybe learn from it, something you probably won’t when you look at Unitys code, because it mostly just links compiled C++ with managed Code and is not very informative.
The problem is RSACryptoServiceProvider has a pretty weird API Surface. You can take the Key generated on a new object and save it via `.ToXmlString(bool)`, but the odd part is you reuse that saved key by newing up another one without any parameters and then using the `.FromXmlString(string)` method on that new instance. [Here's an example in Linqpad](http://share.linqpad.net/rte9l5.linq). I'll note that I've sinned here and `RSACryptoServiceProvider` should always be wrapped in a `using` statement or otherwise disposed. This will probably be some useful reading for more info: https://blogs.msdn.microsoft.com/alejacma/2008/10/23/how-to-generate-key-pairs-encrypt-and-decrypt-data-with-net-c/ Yes, they show Files being used for the key data. BUT you could just as easily have those read the Key data from memory. (This is the part where I mention that keeping the key in memory is usually considered a bad idea from a security perspective.) Some more useful reading: https://stackoverflow.com/a/5845191/2937845 
[It *can* save the key](https://msdn.microsoft.com/en-us/library/system.security.cryptography.rsacryptoserviceprovider.persistkeyincsp.aspx), but it doesn't have to. I assume that's where the confusion comes from.
TIL. Thanks! 
Huh. I read it somewhere on StackOverflow. Anyways, import and exporting keys as XML takes a lot of unnecessary overhead. It would be quite convenient if I could simply have the keys as byte arrays, stored in memory. As for key generation, a simple function where you pass in P &amp; Q, or P &amp; Q are chosen at random automatically, is ideal.
See the sample code in my last link, it does exactly that. Keys are held in memory then you can pass them as arguments to your encrypt/decrypt methods. 
&gt; I think a good design pattern for this would be that "trait" interfaces only be used as such (all members have default implementation). You can already get (awkwardly) close to this with Extension methods on an interfaced type. LINQ is a good example of this being done well. But those are public methods that don't mutate state.
Alright, this helps. Thanks!
Will do
&gt; "We need to rewrite the application from scratch! Its too hard to maintain. It will only take us 9 months plus testing." Its the same programmers that wrote the last version. It will take them at least 1 year to write. Any new features from the huge backlog will need to be added to both versions of the application. So if you do the maths their estimated velocity over the next 2 years will drop to about 25%. And as they havent learnt anything it will be ready for another rewrite in 2 years.
Microsoft enterprise partner and the old devs are still using VS 2012.. 
I can see where the F# people are coming from. On the other hand it seems like Syme is very much against Mixins. I personally would have rather he be the one to introduce such a feature (since his insight into generic programming has been most helpful in the evolution of .NET) but apparently he didn't *want* to. So instead we have this thing. I'd have to play with it to see if it has the surface area I'd *want* out of such a feature. It might fit the bill, but at the same time I think it would be a little less polluted if there was a way to make the members involved in the process protected. BUT, then that runs afoul of the whole idea of interfaces, which makes me feel like this is, in fact, some sort of wrongness.
I highly recommend this [course][https://www.udemy.com/unitycourse2/). It's great for begginers in both C# and unity but most importantly games you make in it are really fun. Also authors pay a lot of attention to good coding practices, so you can pick them up early on.
I use Swashbuckle for my dotnet core api and love it
This is probably overkill for smaller projects, but depending on the overall size of what I'm dealing with: - ProjectName.DataAccessLayer (or ProjectName.Storage). I keep this separate from core for slightly better encapsulation. - ProjectName.Core. Is usually a term I use for very Core functionality. I wouldn't put things like EF in there. I might put in special interfaces, perhaps configuration classes, anything that has a massive likelihood on being used everywhere in the problem space. But this core library should ideally have minimal dependencies. - ProjectName.Application : The application Layer. Business logic. meat and taters. - ProjectName.WebAPI : If this application is going to have more clients than just the MVC consumers (i.e. There's an android or iOS app version) I'm apt to put my WebAPI bits into it's own project. - ProjectName.MVC : If I'm doing MVC, this is where presentation goes. One nice advantage of this is it's pretty clear at each layer what your unit tests are going to be testing. This is where you start to get overkill: - ProjectName.Authorization. Usually this can just live in core I only bother with this if my application was large enough to not always require it, or require different flavors depending on use (i.e. if I've got windows services that never need auth, or maybe they need SPECIAL auth to talk to the WebAPI). - ProjectName.Domain (Common Domain Objects). I usually only have this if I'm dealing with a very large project and want to avoid having to pull in core functionality everywhere. I.e. if I'm dealing with an application large enough to warrant multiple services.
Do both, you don't need to code in the editor Unity defaults to, change it in the settings so that you can keep the richer experience of using Visual Studio. One piece of advice though; don't rely upon your limited knowledge of arrays, collections of data are important in all programming, especially manipulating and locating specific data. This is especially important in games where efficiency is key. Read up on C# Collections, learn List&lt;T&gt; first (relatively similar to an array[]). Then learn my favourite, Dictionary&lt;TKey, TValue&gt;. Then look into LINQ which is hands down one of the coolest features in the C# tooling. Re what I've said above; T = Type, which could be a humble integer, or a complex class object like an alien in Space Invaders. Where you use an array, you're limited with what you can do, you can add to it, but not in the middle, and you can take away, but also not in the middle. To do so you've got to iterate over it and make a copy of the array, making the changes as you go. The Collections implementations I mentioned, specifically LINQ extension methods, abstract away all of that and just get it done. Now, what I've mentioned is going to be pretty over the top for you, but even just reading up a little bit on List&lt;T&gt; will help you greatly (literally said "a list of type T", or "list of T objects", or in the example case "list of SpaceInvaderAlien objects"). Keep learning by building, but challenge yourself to use inheritance, encapsulation, structure etc etc. Google anything you don't understand, and do let yourself go down the rabbit warren that is learning this wicked language. I'll edit this reply in a minute with a very simple example you can play with.
Is something like [Microphone](https://github.com/rogeralsing/microphone) what you are looking for?
I can’t remember the name of it and I’m a bit drunk now so I can’t be arsed checking but there’s a VS extension that will make all the needed sizes of icons for you. Just google it. 
Absolutely valid! However, if you always strive to stay @latest, its easier to "migrate", because a) you do it often, and b) updates are not so dramatic.
I use and external program - greenfish. Design graphics at 512. Down sample (also using this program) to the desired set of resolutions.
Switching C# is essentially free though. It's not like switching .NET versions.
Visual Studio might be the greatest IDE ever created from a pure technical standpoint (the fact that its Windows only is real sticking point though). You could do a lot worse than Mono, but if you have the ability I'd stick with VS.
But that's not a CLR requirement, which is a much bigger deal.
What template do I load it in? &amp; do I need to install any packages from NuGet?
this is one thing I'm not sure how they do the new actionresult&lt;t&gt; stuff in 2.1. sometimes its a result, sometimes an error. dont really want to have a massive union type. 
I wrote that using a C# console application template. You can use it in any template really, WPF (windows presentation foundation) and WinForms are both for creating GUIs. WPF is the newer of the GUI options and it adds a quite a bit of robustness to design by using XAML for styling. WinForms is the OG GUI option, that being said it doesn't have the same level of customization as WPF but is arguable more user friendly with less steep learning curve. As for NuGet packages you don't need any. However if you decide to load the code up in a console application, there is one simple thing you will have to fix, it's super easy and only has to be done once for the code I've supplied. On the right side of the screen you should see the `Solution Explorer` in it, look for an option called References and right click it and select add reference from the menu. Make sure assemblies and frameworks are listed on the left side of the window and scroll through the namespaces until you find `System.Windows.Forms` click the checkbox and then OK. If you haven't done so already, go to your code page and add `Using System.Windows.Forms;` under the existing using statements. 
C# 6 was the last update with a CLR requirement if I remember mads statements correctly. You know... Async and all that jazz
Yikes. 
I done what you said but there is still red lines under the code [https://i.imgur.com/tiK5r6X.png](https://i.imgur.com/tiK5r6X.png)
Async itself is implemented purely by the compiler. No CLR updates are necessary. 
Ok I see where the problem is and its super simple to fix. When you are looking at the Code Page you should see something like this namespace Notifications { Class Program //The code you write should go between this curlys { Static Void Main(string[] Args) // { } [Your Code Goes Here] } }
There's tons of places online that will let you upload an image and it will generate an icon file for you. Need to be careful with your image because downsampling is imperfect at best, but if your icon is simple this method could work. Start here and if it doesn't do what you need keep trying others. http://icoconvert.com/
I got it to work but there's some instances where I want 2 messages to pop up within a minute. How can I time the messages to the second? For example, how would I structure this: Monday 25th June: 08:10:15 AM: "Good morning!" 08:10:40 AM: "Remember to load Anki" 10:15:20 AM: "Check calendar" 11:45:00 AM: "Make food" Tuesday 26th June: 13:12:05 PM: "Turn off phone" 16:20:15 PM: "Take shower" 16:20:45 PM: "Put clothes in laundry basket" Also, would I need a .EXE for each day?
Yeah, I've started from there using Multiple PNGs to One ICO and results are as I mentioned above. It's bothering me, because I do not really know if it's a problem with this converter, Visual Studio or OS going full reta * d. I guess I will try using greenfish mentioned below, but I'm not really sure that it will help in someway
To get those perfect icons, it's going to take a lot of time and/or knowledge to get them just right. Drawing pixel drawings is an art all to itself. You could try Fiverr or a site like that so you don't have to take the time to learn it.
Lol.. confusing English? Is English not your first language? ;)
Yes, building on the raspberry pi can take forever (literally hours for things like numpy), but luckily (I guess, not really maybe?) there is no dotnet sdk yet for ARM, only a dotnet runtime. Meaning you *have* to cross-build it on a regular x86/amd64 machine for now. Luckily it's supper easy too, just add `--runtime linux-arm` to your publish command, and scp to the pi. 
Except that this isn't strictly true, and you'd need to upgrade your .NET framework alongside some of the language updates. Recent example, to use C#6 features, your application needs to be run on .NET 4.6 or above.
Use unity. Basics will come to you when your project demand it. Just learn how to make things you want to be in your game by using google
&gt;there is no dotnet sdk yet for ARM, only a dotnet runtime. I think you are mistaken, the [dotnet sdk for ARM32](https://www.microsoft.com/net/download/thank-you/dotnet-sdk-2.1.301-linux-arm32-binaries) can be found on the dotnet downloads page. I was able to build assemblies using dotnet build on my pi (for an empty console app, though it took forever). 
You're right, this is frequently how it plays out. But that's a behavioral problem, not a tech one.
 Honestly, unless you're building a library for external distribution, there's very little reason to target anything older than 4.6 anyway. Only 4.5.2 is currently supported in the dotnet 4 line below 4.6 and it doesn't offer any additional supported platforms.
I stand corrected. You're right. I never saw it before. 
Which C# 6 features? Last I checked, they required new libraries, not runtimes, so you could just add the missing features yourself. (Either via Nuget or by backporting from source)
Get started with unity. 
Unity is a great way to learn. Honestly just pick something you want to build and try to build it, when you come across a road block go to YouTube, unity Tut's and forum and stack overflow will most likely have the answer. You'll learn much more from researchimg and solving problems yourself than just going through tutorials.
With my new project I'm using Project for the client (React Redux), Project.Data for models (client generates TypeScript bindings from these), Project.Logic for actual application logic, Project.Api to use the Logic library and expose an Api, and then Project.Tasks for AWS Lambda tasks. The idea is that the tasks don't want to know about webserver related things like the Api does (also keep it small to start faster and ensure being below 50MB). Both Api and Tasks need common code for logic, and everything needs to know what models are available.
The video is cut. You can see his clock advances by 5 mins at that point
Fortunately, most seems to be syntactic sugar. In my most recent project, we couldn't use string interpolation or null propagation in the application because it was an ASP.NET MVC project built on .NET 4.5.
For new projects, sure, but every new project started today is going to experience the same kind of issue in the future. I love the idea of always being up to date, but you risk running into situations where migration isn't quick.
For the most part, breaking changes in framework upgrades are fairly rare. Upgrading isn't trivial, but it's definitely a lot more trivial if you're diligent about upgrading rather than waiting till you're jumping several versions.
Yea, that's true, and I agree with that. That's a much better way of expressing the thought I had initially, so thank you.
Start with generics like IEnumerable. That way you get more understanding of types like list and how it works.
Oh nice. I'm finding all over the net for keyboard shortcut haha lol
IEnumerable is not a *generic you can start with*, please try not to mislead new coders with incorrect information. IEnumerable is an interface implemented by the Collections I've referenced; refer to the MSDN documentation. &gt;[SerializableAttribute] public class List&lt;T&gt; : IList&lt;T&gt;, ICollection&lt;T&gt;, IEnumerable&lt;T&gt;, **IEnumerable**, IList, ICollection, IReadOnlyList&lt;T&gt;, IReadOnlyCollection&lt;T&gt; &gt;https://msdn.microsoft.com/en-us/library/6sh2ey19%28v=vs.110%29.aspx And &gt;[SerializableAttribute] [ComVisibleAttribute(false)] public class Dictionary&lt;TKey, TValue&gt; : IDictionary&lt;TKey, TValue&gt;, ICollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, **IEnumerable**&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, IEnumerable, IDictionary, ICollection, IReadOnlyDictionary&lt;TKey, TValue&gt;, IReadOnlyCollection&lt;KeyValuePair&lt;TKey, TValue&gt;&gt;, ISerializable, IDeserializationCallback &gt;https://msdn.microsoft.com/en-us/library/xfhwa508(v=vs.110).aspx And if we're going to get specific, you're referencing the term **generic**, however Connections are **not** "generics" (Even though they exist within the System.Collections.**Generic** namespace). https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/generics/
Honestly it's a hard call. I mean, I know for a fact that you learn faster when you have something to chase. I started out just wanting to make a Discord meme bot, and I've ended up learning in about 3 weeks what would take others 3 months to learn. Having Unity games be your goal would certainly help you accelerate your learning curve. But at the same time, you've gotta limit your goal a bit, or you'll muddy up everything with a bunch of different learning paths progressing at once. Unity isn't just a C# machine. It's got it's own entire system for every aspect of a game that you have to be somewhat proficient with to make a decent game. And then there's a whole lotta vector maths. And quaternions. Which have a Euler adaptation because quaternions are so mind-numbingly complex that the entire concept has to be dumbed down for us mere mortals. And on top of all of this, Unity is just now introducing the ECS scripting model, which is gonna revolutionize the way scripting is done. And it may seem that I'm somewhat knowlegable on Unity but I'm a complete noob. I think it's starting to become clear that you'll be too busy learning Unity to learn C#. If I were you, I would wait a little on jumping into Unity, possibly until ECS becomes stable and the new standard, and in the meantime set my sights on slightly smaller undertakings. Staying within the vanilla .NET/NuGet ecosystem will keep you foucused on learning C#, and once you've completely tamed the language you'll have a much better time learning Unity with proficiency under your belt. Just my two cents. If you've really got your eyes on Unity and just really want to go get a game made, then more power to you. 
Looks neat, but you should probably put some examples in the `README`. The first four things I tried all failed, in that `-O`, `-I`, `-v` and `-o` aren't supported. That's stuff I frequently use, raising the question: what **is** supported?
Love it, a simple idea well executed. I have a buddy who would have killed for this last week :)
If you do put the examples in the read me, keep the examples on the main page itself as you have it. I immediately looked for some example buttons, found them and got a result which is how it should be :)
There are a number of common issues people run into starting out with async code with databinding. [This resource](https://msdn.microsoft.com/en-us/magazine/dn605875.aspx) is aimed at helping with your kind of problem, I recommend giving it a read. 
My guess issue is somewhere around someNumber variable and lazy working lists? So 400? 
Probably 201
401 because the two linq-queries are executed after someNumber is set to 200
Why arrays and not list? 
Where did you find this code? It's really difficult to find this pattern in real life, imho. It's really interesting. 
Just a personal preference. Framework guidelines indicate not to expose / use lists on public interfaces, so it probably stems from that. I use ToList when I actually need a list though or whatever the appropriate collection is required 
The guidelines apply just as well to arrays. The idea is more that exposing general purpose collections comes at the expense of flexibility, read-only behavior, change events etc., rather than `List&lt;T&gt;` in particular being evil. Also, `ToList` is typically a bit more performant on `IEnumerable`s for temporary allocations.
This particular pattern (which is presumably just a simplified repro) may be unusual, but every other week someone posts a question on this sub about the underlying 'problem' of lambda variable capture.
Sure, but you'll generally use Lists on your POCO/model classes and use separate DTOs for anything leaving your system. Most of the code you write should be using Lists, assuming that the collection should be mutable.
We're looking for a full stack C# dev in SW Michigan. Population is about 3,000 and the nearest city with population over 10,000 is like 15-20 miles away. I'm guessing that's not really 'NW USA', but let me know if interested.
The description of the submission implies it is OK, or at least it seems pretty clear to me.
The real lesson here is to not reuse variables.
 public async Task&lt;JArray&gt; GetRecentDocuments(string userPrincipalName) { var docsResponse = await GetGraphObject($"/users/{userPrincipalName}/insights/used"); var docs = docsResponse["value"] as JArray; var detailsTasks = docs.Select(doc =&gt; GetGraphObject("/" + doc["resourceReference"]["id"].ToString())).ToList(); await Task.WhenAll(detailsTasks.ToArray()); return new JArray(detailsTasks.Select((details, i) =&gt; new JObject { ["details"] = details.Result, ["doc"] = docs[i] })); } This is the actual code I was dealing with. It's a version of map reduce. GetGraphObject returns a Task&lt;JObject&gt;. Without ToList(), each of my tasks would execute twice, one because of detailsTasks.ToArray() and a second time internally by the JArray constructor. I was coming from a lot of JavaScript and wasn't familiar to the behavior of Select() And IEnumerable in general when compared to map()
&gt;Lambda capture is fine, it's IEnumerable's lazy evaluation that I wasn't aware of.
good catch
Absolutely right. Using a variable and capturing it like that makes it more confusing. Have a look at the original version. 
You might have to create your own data binder. Sometimes the default one doesn't want to work. 
This code only needs to enumerate `detailsTasks` once, but does it three times. public async Task&lt;JArray&gt; GetRecentDocuments(string userPrincipalName) { var docsResponse = await GetGraphObject($"/users/{userPrincipalName}/insights/used"); var docs = docsResponse["value"] as JArray; var detailsTasks = docs.Select(doc =&gt; GetGraphObject("/" + doc["resourceReference"]["id"])); var detailses = await Task.WhenAll(detailsTasks); // Here's the one enumeration. return new JArray(detailses.Select((details, i) =&gt; new JObject { ["details"] = details, ["doc"] = docs[i] })); } ("details" appears to be the unit here, so I called the collection "detailses".) Enumerating any particular `IEnumerable&lt;T&gt;` only once, ever, is another good way to avoid this kind of problem. (And others.) 
It worries me that people use LINQ without understanding deferred execution.
While true, there are a lot of applications where any risk is intolerable, and “diligent updating” is still riskier than “leave it alone, it’s been thoroughly tested as is”
No. There are a bunch of applications which have inadequate testing and huge amounts of technical debt, and kicking the can down the road isn't making it better. When the application **has** to be upgraded you're going to be doing it on a massive deadline and you'll have no time to test at all. When the application **has** to be upgraded you'll probably find your OS is going out of support or you've got three years of windows patches to run through. It's 2018. The days of sitting on old shit are over. There are live exploits for code that only got introduced yesterday, and if you're years out of date you're already screwed.
There are couple excellent video tutorials via YouTube. But, no - there's no magic pill to learn C#, you just have to dig in and do it. Follow along with tutorials, take notes, take it one step a time. It will eventually become second nature. Except it to take few months before you're comfortable doing anything on your own. You will not be programming anything next week. With this saying (Two Monitors) On Left - Visual Studio on Right - Video Tutorial.
It's actually super important for large datasets and say differing where clauses for example. You do not want evaluation until your filters and selects are complete. What this means is you can apply a chain of wheres (like write separate functions to filter for X, Y, Z) and not eval until you've finished applying all the filters you want. Makes it super easy to write the filter functions in a nice clean readable manner.
I use lynda.com and pluralsight and they have the downloadable projects with the courses, but they are paid. There's also a few good series on YouTube like Jesse dietrichson ones with some downloadable projects. The best way is to just figure out a project you want to do and start working on it.
That doesn't sound right. Unless you mean the razor view engine, which uses a different compiler than your normal C# code.
The book "C# Game Programming: for Serious Game Creation" by Daniel Schuller taught me a lot about OpenTK and making my own engine in C#. https://www.amazon.com/Game-Programming-Serious-Creation/dp/1435455568
I'm new to C# and horrified there's no keyword to make local vars immutable.
I have been using Udemy and I like the courses. I have had lynda suggested before. I however have not spoken to anyone who has used both Udemy and Lynda. Have you tried Udemy as well? I would be interested in hearing the differences. Thanks for the YouTube suggestions and I will probably end up signing up with Lynda at some point. 
The underlying nuance here is that you should be exposing IList or IEnumerable, etc regardless of whether your using List, Array, etc.
There is. "const".
This function in VS is called 'IntelliSense'. Maybe this helps to find more information
That's a compile-time constant, is it not? What if I don't know what the value will be until the method is called, but I just don't want the values passed in to be mutable? It seems like "readonly" isn't compile-time but you can't use it locally in a method or on a method parameter, like you can with Java's "final"
That you can use const in a method block but not readonly is really bizarre. Who puts constant definitions inside method blocks rather than at the class level, anyway?
Generally you do this by creating a class and creating an instance of that class object. The methods, variables, etc in the class will be accessible after the period (scope and accessibility dependant.) If you are referring to the additional details that are provided then that is accomplished with SUMMARY tags. 
Break down the problem in its parts and you can come up with a solution. If I'm understanding you correctly, you'll need to do the following: 1.) Figure out how to detect that the user has entered a period. 2.) Read what the users has typed directly before the period. 3.) Determine from what the user typed directly before the period the list of strings can be displayed. 4.) Display those strings. If you solve those component parts of your problem, your solution should present itself. I don't know how exactly you're implementing this, but if you were going to do something simple like WinForms, you could look at the Control.KeyUp event. If you were doing web you might have to look at detecting user input with Javascript (I haven't personally done something like that.) Reading the user input would determine what you were using to accept the user input. For everything else you'd want to determine what data structure best holds the information you're looking to store, then reading from it.
That advice (from the Framework guidelines) is for public APIs (published library APIs). For internal implementation it is fine to use Lists directly as properties on your classes to improve performance and to simplify assumptions about implementation (you don't have to wonder if your system implements custom IList classes somewhere in the codebase, a List is a List everywhere it is used).
Thanks for the idea. I'll look into it.
I agree, it's absolutely fine to use lists, but for public and internal Properties of a class I would expose it as an IList or IEnumerable. The idea that I would care, let alone wonder about, what the underlying implementation actually is is troublesome. An IList is an IList everywhere it is used, and if I refactor underlying implementation I haven't broken a shit ton of dependencies that were using the property but don't actually care about the implementation. There is just next to no advantage to exposing your List as a List rather than as an IList.
Might consider using the Microsoft.AspNet.WebApi.Client nuget package which adds a lot of useful extension methods on System.Net.Http.HttpClient. 
Maybe I didn't make it quite clear. I actually meant like simple string manipulation.
I appreciate your reply. I have been using two monitors for years to luckily I already have that one down. I know it takes time as all skills worth learning do. Luckily I have also cut my teeth on python but never really made it past console work. GUI interaction with back end programming is where I feel my largest current lack of knowledge lies (I don't know what I don't know). However I know my programming skill is rudimentary at its very best. 
So more like an auto predict/complete kind of deal? 
Yeah. My guess is that I should split at the periods and get the next element, but I'm actually not sure how to. Any ideas?
String.Substring() or String.Split() would work well here I think. SubString requires a start and ending index (to which you could use the IndexOf on the period to get). Split consumes a full string and splits it on a specified delimiter (in your case the period) and outputs the split strings into an array. 
\&gt; An IList is an IList everywhere it is used, and if I refactor underlying implementation I haven't broken a shit ton of dependencies that were using the property but don't actually care about the implementation. You will every time you use reflection, model binding, or serialization. It will also matter every time you want to optimize a tight loop using a List (the overhead is really small, but it could make a non trivial difference for certain algorithms). \&gt; An IList is an IList everywhere it is used, and if I refactor underlying implementation When was the last time you made a custom IList implementation? Typically anytime I see a List access that needs that needs interception or tracking, I'll refactor the class to expose methods for those operations instead of depending on the List access directly. While implementing a custom IList might be easier in a large codebase that already depends on IList, I haven't yet once seen a case where it was more useful than putting the methods on the class (that was exposing the List) directly instead. Using IList is the same as saying "I plan to use custom List implementations to get more control of List access". While that might be viable, it now means you end up with list implementations that do specific things, and you either end up with one custom implementation that gets used everywhere, or custom implementations in pockets for each area. In the latter case its usually just easier to use a specific collection class, because then you don't have any serialization or reflection concerns. You could argue this is less proper, but its the approach that Microsoft uses all over the BCL...you don't see many IList properties exposed in the BCL.
At the price of being insanely over complicated. 
If you want to use OpenGL, I'd recommend using something other than OpenTK, nowadays, like [OpenGL.NET](https://github.com/luca-piccioni/OpenGL.Net). As for OpenGL itself -- the best way to learn is to simply follow along with a regular "native" tutorial. I recommend http://learnopengl.com/. There is no difference between using OpenGL in C and OpenGL in C#, other than very slight syntactic differences (e.g. `glXYZ()` vs `GL.XYZ()`). You might also be interested in looking at my library [Veldrid](https://github.com/mellinoe/Veldrid), which provides an abstraction over OpenGL, Vulkan, Metal, and Direct3D.
&gt; There are a bunch of applications which have inadequate testing Those aren't the applications I'm talking about. I'm talking about, eg, medical software - where being right is more important than anything. As for live exploits - nobody gives a shit on a non-networked machine
I’ve been using OpenTK for a while and haven’t used OpenGL.NET. Would there be any reason to switch? Does it have any benefits to it over openTk? 
OpenTK pretty much is raw OpenGL apart from window and context creation. So what you really need to learn is just OpenGL which is the same API in all programming languages.
Sorry it took a while for me to get back to you. &gt; How can I time the messages to the second? Adding Second Precision is fairly easy overall and you kind of already did it in the examples you provided. In the method that creates your \`Notifications\` Array, all you have to do is add the number of seconds to the end of the timing string (i.e. 12:12:05 --&gt; "121205"). Once you've done that you will have to add a line to each of the TimeModifiers that add the seconds to the timing. Notification = new string[,] { {"070000","Time to Wake UP!"}, /* [1] */ {"120000", "Time for Lunch!"}, {"140000", "Break Time!"}, {"170000", "Quitting Time!"}, {"200000", "Miller Time!"}, {"230000", "Bed Time!"} }; DateTime Today = DateTime.Today; Today.AddHours(Convert.ToDouble(Notification[i, 0].Substring(0, 2))); Today.AddMinutes(Convert.ToDouble(Notification[i, 0].Substring(2, 2))); Today.AddSeconds(Convert.ToDouble(Notification[0, 0].Substring(4, 2))); //[2] \[1\] Notice the Time String now has 6 characters rather than 4, those 2 additional characters allow for to the second precision. \[2\] Just like we used AddHours and AddMinutes to adjust the notification time, we use AddSeconds to add Second Precision. Note that this will have to be added to each of the TimeModifier Blocks.
C# Tutorial: https://www.youtube.com/playlist?list=PLrW43fNmjaQXhWOKalftye87ObZA-xNIJ WPF Tutorial: https://www.youtube.com/playlist?list=PLrW43fNmjaQVYF4zgsD0oL9Iv6u23PI6M Hope you enjoy! :)
I would recommend this tutorial https://www.youtube.com/playlist?list=PLRIWtICgwaX0u7Rf9zkZhLoLuZVfUksDP. Author decided to use Java, but the OpenGL interface is the same on each language, so I had no problem following it using c# Presenter actually explains the things he's coding, and that helped me out a lot
It looks like you're using the HttpClient under the hood. If I issue a non standard Http request e.g. a Post without a content-length header. I assume the HttpClient will automatically add this. The reason I'm asking is that we currently have a number of legacy applications issuing these types of non-standard requests, which have been difficult for us to replicate. One way we do so is by using CURL, another is by reconstructing the request using TCPClient.
https://github.com/dotnet/csharplang/issues/188
Working through projects you can download is best. I started off with source code from a vb project and got comfortable with VB then decided I wanted to try and copy that project over into C#. So far it’s my first C# project, and it’s coming along, but it definitely takes time, but tutorials and previously done code makes it easy to work through and begin to actually understand the code!
The big thing is that OpenTK doesn't support .NET Core. They will probably get to that eventually, but there are alternatives that already support it. If you're already using OpenTK without trouble, though, then there's no big reason to switch. The OpenGL functionality in both is going to be more-or-less identical.
With questions like these, it's often helpful to say what you expect the result to be and why.
Try using long instead of int.
Integer underflow
I need to use int would there be any other way around this 
Why is that? Int can hold numbers from -2^31 to 2^31 - 1
Just one of the restrictions for my school project might just add a statement to divide it by at some point 
Why would they restrict you to a data type which can't hold information need to calculate? 
Its more my way of going about it I guess im using DateTime.Ticks which returns huge numbers so I should just switch to Seconds or Miliseconds
&gt; I just expected the int to keep rolling over like it normally does when it goes over 2.147b It does; you just have the exact multiple that adds to 0 e.g. test = test * 1700397057; // == -1110835200 test = test * 1700397056; // == 0 test = test * 1700397055; // == +1110835200
Nope, referring to the code outside of the View/Partial. Looking deeper into it today, it seems that my previous comment wasn't 100% accurate. Some forms of string interpolation will work fine from .NET 4.0+, but not all. https://stackoverflow.com/questions/28921701/does-c-sharp-6-0-work-for-net-4-0 The more I'm thinking about this, the more it seems this is less work than I thought. Which is good, but also a bit frustrating to have run into so much resistance when the idea is brought up.
Start with learning the basics. And by basics i mean. Variables classes functions structures memory management / how does garbage collection work etc etc. / how does C# handle it control-flow. arrays Then move on to Queues Stacks Linked lists/double linked lists..etc etc Bin-trees / if you wish, not really needed. When you master the above, you can pick any language you wish with great success. And then you specialize in winforms, wpf, gtk, databases or whatever you desire. As a beginner, its suicide to start off with GUI programming or similar. Because you will try to understand something that is beyond the skill level that you are at. You will also spend a fair amount of time on it, witch dosen't really benefit you in the long run. The about i mentioned is core skills used in programming in general, and does apply to most programming languages, so if you work on the core, and decide at a later point in time that C# is crap, then the same core principles applies across languages, it's merely a matter matter of syntax. So yes there is a magic pill, its called Core, or fundamentals. 
Check out Fuzzing. Or simply write some code to generate every permutation of options. 
All strings are immutable so in a way you have a keyword for it :)
Accord is copyleft so that rules it out for a few potential applications 
Even for seconds/miliseconds, you should still use a long. There's no reason why you shouldn't just switch from using ints to longs, you could even just cast both for multiplication. For example: int test = -1110835200; long result = ((long)test) * 1700397056L; Console.WriteLine(result); 
Ah, interesting.
These guys opensource
I am not familiar with copyleft, what about that rules it out for my use case?
It’s LGPL, with some restrictions on some modules. That should be permissive for most applications. 
I thought about every permutation and the place I started was with decision tree but the application I am testing has hundreds of forms with different states so it would be very hard to write or generate that. I thought of possibly taking snap shots of the visual tree as my current tests run so that I could use them as input for the tests as good states of what the tree should look like. I thought that might make good training data since I know they are good states. I will look into Fuzzing, I have read that Markov Decision Process could be useful for this as well but I don't that as a class in the [Accord.NET](https://Accord.NET) API. Not sure if their is a means to combine some of the models to produce that or if some limitation of Accord prevents it from being implemented.
Lgpl still requires you to publish derivatives 
So you can receive the library. Use it as is. But if you improve it, you have to give back? Sounds fair. 
&gt; It looks like you're using the HttpClient under the hood? If I issue a non standard CURL Http request e.g. a Post without a content-length header. I assume the HttpClient will automatically add this. Yes, you're correct, I'm using HttpClient. AFAIK there's no way to remove Content-Length header from a request using HttpClient.
Works based on library are derivative works. E.g. if you link to it, you have to license as lgpl
No, with LGPL you can link to a library without having to release source. Not so with GPL. 
Did you miss the NHS issue last year? Medical software isn't safe, and non networked machines almost always end up on the network for one stupid reason or another. Medical grade software needs strict test processes, but it's even more vital that it remain up to date. 
I work for the NHS in IT... I definitely didn't miss a thing last year. But the systems that had issues weren't due to a lack of updating the .NET version, or through not using an update version of C#. In fact, it wasn't even due to the rest of the software being out of date: WannaCry wasn't patched until after the attack. So you're just pulling an unrelated event out of your ass and using it as a (bad) example... Oh, and WannaCry was an attack against Windows, not against any medical software, nor against an un-updated .NET version.
Most of the time the deferred execution is little more than an implementation detail, rather than something that changes the semantics of the code. So it really shouldn't be surprising that people don't understand the capturing rules.
&gt; When was the last time you made a custom IList implementation? Every time I inherit from `Collection&lt;T&gt;` like we're supposed to.
It is almost never appropriate to expose an `IEnumerable&lt;T&gt;` as a return type. The only time you should do that is when you are returning something that has deferred execution. Otherwise return at least an `IReadOnlyList&lt;T&gt;`. If you really care about being able to refactor your collections, then follow the FDG advice and expose a strongly named collection (e.g. `CustomerCollection`) rather than just an interface. 
There's nothing in the Framework Design Guidelines to suggest that is even remotely true.
yeah that would be ideal and how I would do it if I could but I digress 
I appreciate the great advice. Do you have any suggestions on the best way to learn this knowledge? Possibly a place where there are pre-built programs that I could study or try to emulate? Possibly the best place for online classes? 
Where are you downloading these projects? I know I could probably find some in a random location but I was really hoping to find a few that are well documented. Any ideas?
Have you read any guidance on when we are supposed to inherit Collection&lt;T&gt;? I have seen CollectionBase used a couple times as a base class in the BCL, but there are also a lot of classes that expose collections as IList&lt;T&gt;, IEnumerable&lt;T&gt; and as generic interfaces of key value pairs and dictionaries and just use a List, Array, or Dictionary internally to implement the interface (look in some of the new [ASP.NET](https://ASP.NET) Core repos on Github at collection classes, like IServiceCollection, etc...)
Really enjoy using Flurl. We use it for our integration testing suite to write easy to read fluent tests against our API.
The compiler or the IDE? Obviously a static class cannot be instantiated and would not compile.
I'm just using regular VS. Just reinstalled it yesterday so its pretty much stock. I'm disabled resharper, maybe that's it?
Just so we're on the same page: VS is an IDE that uses a compiler to build your projects. So, if you're asking about error highlighting while you code, that's an IDE thing. Compiler errors only show up when you try to build. Resharper could very well have the extra features you're looking for: it will examine your code as you write it and point out possible issues that VS doesn't look for.
In my experience when you write a piece of code that won't compile you get a squiggly red line underneath it. I just want that functionality back. I assumed that was intrinsic to C# in VS but apparently not. 
In short, yes, that should be the case. If you're not getting those (fairly standard) warnings it could be that VS hasn't finished examining your project, or it could be a setting that I'm not aware of. But yeah, you generally should get those warnings in near real time as you code. I'll see if I can find any settings that change that for me and let you know.
wait, does the last line really work like that? Multiplying by 0 doesn't give you 0?
There are three seperate lines, I think.
The reference is still mutable though. You could change which immutable string object you're referencing. I know this is an attempt at being cute but it doesn't really have anything to do with my complaint.
It sounds like an exercise to learn about the behaviour of data types.
Wannacry was patched two months before the outbreak, at least on supported operating systems. The XP patch was released after, but XP wasn't supported at all. If you're not upgrading dotnet because it's too scary, you're probably not patching either, if you are patching server patches are much riskier than framework upgrades. Also, given NHS IT was running networked Windows XP boxes, your patching regime sucks.
It's not like they're difficult to understand and remember, though; surprising and non-intuitive (capturing reference vs capturing value), but completely logical when you understand why they work like this, and the kind of thing that everyone who doesn't know is guaranteed to hit their head on eventually. 
The most important thing for future proofing is that you have a class you can control. That way you can add methods directly to it later. Yes, extension methods can often get you out of a jam, but they are far less discoverable. People have to know they exist or they won't look for them, unlike methods that appear in the documentation. CollectionBase was the pre-generic base class, Collection&lt;T&gt; is easier to use. Both are preferable to List&lt;T&gt; because you can intercept add/removes to add validation and custom logic. 
First thing I did before was add this to my main every time. [`Task.Run`](https://Task.Run)`(async () =&gt; {` `...` `}).Wait();`
 IServiceCollection is a special case. Normally if I expose a Foo class and a BarCollection as a child of Foo, I own both. So I should follow the FDG advice. But in this case, I own IServiceCollection but you and six other people have your own wildly different implementations to match your different DI frameworks. 
I have a python script that I run against all solutions as part of our deployment pipeline that automatically updates C# and .NET versions. Has made updating our services so much easier.
ohh ok i get it now, they aren't part of the same code
What kind of a school project restricts to int? They taught us about `long` in my 8th grade Java class. We could use it just fine. 
Post your code, VS version, plugins, everything you're using so we can see exactly what you're seeing.
I'm getting a bunch of rubbish errors in ~ the latest release. Xamarin project that has its resources generated - but after building successfully it still doesn't see the generated class. I think you should search for "symbols" and possibly delete the .suo file in your project's .Vs folder - that will delete all settings though. My problem seems to have been with the actual release, so maybe update if you're on an "old" version?
The code I used was "bool x = 5;" VS2017, the only pluggin I installed was ReSharper and that is disabled. I tested it with it on and still the same problem. As I suspect, I opened up Unity3D and everything works fine. 
Unchecked is default and it does wrap around. 
*Pseudo sudo is the command. :)
If you can't find the specific option, you could try Tools&gt;Import and Export Settings&gt;Reset all settings (after exporting them of course for a backup if it doesn't work).
"sudo" and "randomly" should never be used in the same sentence. "pseudo" and "randomly" on the other hand - That's perfectly fine :p
It's not bizarre. `const` is basically just a text substitution at compile time, and thus it makes no difference if it's at class level or within a method. But what is truly bizarre, and what you probably mean, is that we **still** have no way to declare variables whose value can't change.
Just pointing out: If you replace the `ToList()` call with a `ToArray()`, then you can just use that result and psas it directly to `Task.WhenAll`.
&gt; Interfaces were introduced as contracts [...] &gt; I use interfaces as contracts and expect them to be used as such in 3rd party libs. Interfaces remain contracts with this change. A contract does not mean that it doesn't have any implementation. A contract means when you get ABC, then you can use ABC. The contract `IFoo` says "I have a method `Hello()`, so when you get an `IFoo` you can be sure that you can call `Hello()`. Interfaces having a default method implementation changes **nothing** regarding this.
you only have to share it with the people you distribute the binaries to. also if it's LGPL you don't even have to do that (unless you changed the original source).
Dynamic objects implement IDictionary. Try using it that way. 
Use the indexer of `JObject`: https://www.newtonsoft.com/json/help/html/P_Newtonsoft_Json_Linq_JObject_Item_1.htm Or deserialize to a proper data structure and use a `Dictionary&lt;string, T&gt;`.
Can you grab it by index? Like string clientLanguage = JsonObject\[i\].data\["507526043"\].client\_language
Resharper disables normal intelligence, if u disable resharper u lose analysis
Try this wrapper: https://github.com/wot-tools/wg-api-wrapper/tree/master/WGApiClient 
Yes, it absolutely matters. For small data sets and cold code paths it doesn't matter that much, but on larger data sets knowing the difference between, as you bring up, linked lists and array lists is imperative for good performance. Same with algorithms. It's useful to understand tradeoffs like time complexity, memory use, recursion depth (to avoid blowing the stack), etc.
Read and learn for yourself, if you want motivation for learning then look at the question/problems that they solve. On it's own nobody cares about knowledge it is the applications that make it worthwhile. Algorithms are also fun on their own, but it is not easy to grt to the point of enjoying them for their own sake. 
This worked perfectly! I'm not quite sure I understand how it works though, could you explain it?
I actually got the source from my boss and it’s unfortunately software owned by my company, but, I have found a few on Microsoft’s website. In the forums people have dropped links to their projects!
Everything is abstract until you use it. The trouble is, a lot of the stuff you're learning is leading you to the good bits. You need to walk before you can run sort of thing. I haven't implemented a linked list in... 30 years, but I care about the performance characteristics of the common structures and know how to implement funky stuff where there's a performance issue. They're all based on the basics with specific optimisations allowed by the implementing language. Fun example, and I am doing this from memory, so it might be a bit hazy and include spiders... Stack Overflow had a performance issue *spider* which they solved by building a dictionary style structure keyed on the first three characters of the username. This released a huge performance gain for them *spider spider* Regarding interviews, understand O notation, and put up with some of their crap. If you've seen those videos where an expert explains a concept to a child, teen, student, post graduate and expert, these sorts of questions turn up in the teen/student end of the spectrum. 
Learning about data structures and algorithms makes it easier to select the right tool when solving a real world problem. For example a client asks you to allow import of their propriety data format which just happens to be multi level nested. I defy you to write the appropriate parser without knowing what a tree is and how to use a recursive algorithm.
Depending if your professor can take a joke: Int64 test = -1110835200; It technically says int there :P
Contrary to other comments in here I'll say that I don't believe it matters. After a decade of working I am yet to take part in the project where data structures and algorithms are discussed prior to encountering problems with whatever the go-to solution was for the developer who implemented it. I consider myself a proficient developer and I've never had issues with landing a job. I have no idea what the difference between linked list and array list is, and frankly I don't care. If I need to, I'll look it up.
But how will you know if you need to?
Hi, What is the reason for using canvas? Charts?
I agree! Who cares how to implement a binary search when the database gives you a log log n search? Data structures are seriously just talking points for entry level position interviews.
I'll look for a solution to a particular problem I am experiencing. I'm not going to pretend I know it all or that I know best so if I come across of a performance issue, I'll look for solutions on how to work around it. The solution may very well be &lt;insert programming technology/methodology/solution here&gt;, but it doesn't matter what it is exactly as long as it solves the problem I'm experiencing. Pretty much all real, live, production applications I've worked on were a pile of shit once you started looking through the code after a while. They all started as well designed pieces of software but from experience that doesn't really last that long. Performance bottlenecks are most of the time somewhere else (network, db, etc.) and not in particular way of implementation. I just don't believe that there are that many performance critical applications relatively to all software that's out there.
I'd say that it's not relevant if it's binary search even. You have a performance problem, find a solution to it. It could be a binary search, another database, more caching, whatever else. There's no way to know all the best solutions to every problem in advance, so might as well not bother, and learn as you need it.
Throw better hardware at it, is one solution :P
I bet you didn't touch games and game development
Most of the time it's actually cheaper to throw more hardware at the solution instead of spending hours tweaking the codebase for maximum performance. There are edge cases (with either massive scale, or hardware limitations) where performance matters, but those are hardly ever built by a common blokes. 
To properly format your code on Reddit: - Have an empty line between code and text (before and after). - Indent every line by 4 spaces. Please fix your post. The code is unreadable. You should also post your relevant C# code.
I did, but barely, and not any bigger projects. I will admit though, I completely forgot about games when making that comment, but I still don't think data structures matter that much even in game dev. Algorithms do, but it's not like you have to know them all off hand. There are algorithms that are right for a particular use case and it takes 5 minutes to find out which one is good for what you need to do. No matter how much you know when you begin a project, you will learn a lot of new things by the time you finish it. Data structures and algorithms are not any different. I don't know every library BEFORE I need to use it.
For most C# projects, Knowing when and how to use List&lt;&gt;, Dictionary&lt;&gt;, and HashSet&lt;&gt; is very beneficial. A few months ago, I was asked to build a view into some data that required a lot of number crunching and searching through lists of data. My initial pass used List&lt;&gt; exclusively. I ran performance tests and for a reasonable set of data, it was taking \~20 seconds to process. I changed a few lists to HashSets and a few to Dictionaries and saw the same test pass in under 50ms. I don't remember the specifics of 90&amp;#37; of the data structures I learned in college, but knowing they exist and certain applications is extremely important. The reason you're having difficulty understanding their importance is likely because you don't have a real problem in front of you that any of them could solve. 
Yes, I meant that it's bizarre that when I researched this, I often encountered "but const works I'm method blocks!" as if that addresses the problem. I did not mean to imply that const *shouldn't* work in method blocks. Poor phrasing on my part.
It's unlikely you will be paid to design a new linked list or a new sort, but you will be expected to recognize when to apply them to solve a problem. 
I will make sure I keep a lookout for a few projects.
Algorithms are really handy for interviews or doing Code Wars problems, and certainly I've made decisions influenced by what I know...but in 15+ years of programming I've never had to roll my own sorting algorithm. I think data structures are more practical and I do actively make decisions based on the trade-offs that I know of. For example, stacks and queues are useful solutions to many problems, and hash tables are much faster for look ups than arrays or vectors.
It's not about learning all solutions, but the concepts that enable to find evaluate solutions.
Ups did not see that the code got in there wrong, fixed that and added link to GitHub repository
Separated the lines
The class you are binding on, `Item`, does not implement `INotifyPropertyChanged`. When you change the property `Description` of the class `Item` it does not call `OnPropertyChanged`.
Not knowing the difference between a linked list and an array is not ok. The difference is massive and picking between one or the other without knowing is a recipie for disaster. Everyone should know *about* the most common data structures and in what situations they are suitable. You don't have to know exactly how they work, but you should know of them.
You should know *of* the most common data structures, but you don't have to know every little detail. Just enough to know which to pick in a certain situation is a good start.
Hmm I thought that was why BaseViewModel implements INotifyPropertyChanged, so it would be handled in that class.
Algorithmic analysis (which you'll probably learn as part of the algorithms course of study) is useful for figuring out why a particular operation might be especially inefficient, like when you find that you've created an O(x^3) algorithm where an O(x^2) approach would do. You likely won't need to reimplement quicksort any time soon, but understanding why it works and being able to put that sort of analysis on stuff you're working on will be valuable. And an understanding of data structures is pretty useful for a lot of coding. You probably won't need to reimplement them from scratch any day soon, but knowing which to use where is extremely valuable, and that means knowing what they are and how they work.
First Order Usage: Knowing what data structures to choose to solve a problem best. Even in a situation when the language or environment you are working with has all the data structures and algorithms you need built in, you need to know which one to choose. Knowing when you should use a linked list, vs an array, vs a tree, vs a heap, vs a sorted array, vs a graph can mean the difference between a horribly slow implementation or a very fast one. Being able to choose properly is not always obvious (for instance, linked lists and trees are often chosen when arrays are actually faster on modern hardware) and having an intuition for it makes you a lot better at what you do for no ongoing effort. Second Order Usage: If you ever want to go beyond being a mediocre programmer, you will occasionally need tailor made algorithms or data structures. While some people never have to do this, by being \*able\* to do this you can get more interesting, higher paying jobs when you can do it, or do a better job at whatever you are doing. Sorting is a good example of an algorithm where you can do better than built in libraries when you know something about your inputs. 
Learn that stuff. Now they ask about it on every interview, no matter what. And yes, from time to time you will apply some of that knowledge in your code too.
Wouldn't it also be sufficient to expose a Collection&lt;T&gt; or an IList&lt;T&gt; and then use a List&lt;T&gt; for the implementation until you need some form of interception, events, or anything more than what List offers?
&gt;Most of the time it's actually cheaper to throw more hardware at the solution That really depends on the type of workload. Not everything is a distributed system running in a datacenter. If your website is slow because you're getting too many requests, then yeah, it's easier to double the server count than to make each request twice as fast. On the other hand, if your selfie sharing app works fine for people who only have a few pictures in their camera roll, but the top users complain that it gets slower and slower with each new photo they take, you're not going to be able to upgrade everyone's phone to keep up. &gt;instead of spending hours tweaking the codebase for maximum performance. Spending hours tweaking the codebase with nothing to show for it is exactly the kind of time-waster you can _avoid_ by knowing about data structures and algorithms.
Other than code to keep things connected, data structures and algorithms are pretty much all of coding, and selection of data structures and algorithms for any particular project can make or break the project. 41 years in, started with Knuth. 
What if you need to add a public method to the class? By making your own strongly named collection class, you can without it being a breaking change.
You might want to reply to the comments, instead of replying to your own post. Yes, The `BaseViewModel` does implement `INotifyPropertyChanged`. But it only calls `OnPropertyChanged` for `Title` and `IsBusy` (the `SetProperty` method invokes it). In none of your other view models you have properties like `Description` where you invoke the `OnPropertyChanged` method.
Hmm I thought that was why BaseViewModel implements INotifyPropertyChanged, so it would be handled in that class.
Yeah, that's a shame. There are a number of old C# design decisions that are not great, looking back. Enums come to mind as well, and operator precedence.
Swift defaults to eager execution, which I think makes some sense, since most uses will probably want that.
That could be called a language problem, then?...
Yes well, everything is completely logical when you understand it.
&gt; I agree! Who cares how to implement a binary search when the database gives you a log log n search? You don't always have access to a database. You may be able to do better than log(log(n)). Someone still has to implement that database search. &gt;Data structures are seriously just talking points for entry level position interviews. If you're getting interview questions about implementing data structures, and it isn't a systems programming position where you'll actually be doing that, then it could be that they just want to see if you can write code, and they picked out a problem they thought you'd be familiar with. In that case, it's probably good to actually be familiar with it.
Fair enough. I guess my view here is a bit naive, because I typically add that kind of functionality to the owning entity and not to a custom collection (and don't expose the underlying collection except as an IEnumerable). Functionally that is very similar to a custom collection, but I could see how the way I do things would have worse code reuse in some code bases.
&gt; I typically add that kind of functionality to the owning entity and not to a custom collection That's pretty common and, under most circumstances, is probably the right way to do things. &gt; and don't expose the underlying collection except as an IEnumerable Please don't do that. If you do, then I have to copy that into a second list because I don't what will happen if I enumerate it twice. A naked IEnumerable says to other developers "this can hit the database, file system, or external web server, use it with caution". If you insist on returning an abstract interface, choose the one that gives the people using your code the most flexibility: IList or IReadOnlyList as appropriate. 
Our patching regime was fine, we weren't an affected trust ;)
There really aien't no best way, because if there was there would only be 1 book, and 1 vid to cover everything he he. Anyways if you decide to go with C#, witch i assume. Start by picking up the C# Yellow Book, i haven't read this book, but i did browse trough the index, and it looked pretty good. There is a link on the right side, and it's free :) I can not stress this enough, learn to use the build in debugger ASAP. For the most part i don't recommend online courses because they make you fall asleep, its like watching a tv chef making something, and they make it look so easy. But when you yourself try it, well it seldom yields you an eatable result. Don't get me wrong there are some excellent courses out there. Personally i prefer books, and short vids, fx a vid on how qsort works explained on a blackboard. As a beginner you shouldn't really focus on studying other peoples work, mostly because if you study hacker jacks cool app, you will also adopt hes bad habits if he has any. Here is a little example. class myClass { static MyPrivateVar int; public void doSomeThing () { for (int c=0;c&lt;100;c++) { Console.WriteLine ("Hell Ya for loops rocks");} } } I leave it up to you to figure out whats wrong with the above example. Anyways have fun learning programming it's a fun journey with no end :) PS github is the place to roam around, after you finished the fundamentals.
Property change notification requires all the types ‘between’ the property and receiver of the change notification implement INotifyPropertyChanged. Take a look at [fody PropertyChanged](https://github.com/Fody/PropertyChanged) for a tool that can automate the implementation of INPC on each of your classes, it saves a ton of boilerplate code. 
As with most things, there are some people who get super anal about it and will have day-long arguments about the merits of this vs that. They're the same people who believe every developer should have a full in depth knowledge of every data structure in xyz book, etc etc. These people are more than just a bit ridiculous, and should be ignored. However, data structures are so common (literally everything we do will involve various data structures), and make such a difference to performance particularly, that it's certainly worth understanding the differences - the advantages and costs of using each particularly, and their limitations. Eg using a doubly-linked list when you only needed a forward linked list is slower. Most of the time you don't care, but when you're doing something where performance matters and the data set is huge, it makes a big difference. On the flip side, there are some things which are much faster when you can traverse the list backwards (using the "double link") as well as forward, and where traversing backward would otherwise require a (very slow) scan of the data set, or work to track the index required (error prone). And knowing when to use a hashset can be invaluable So while I wouldn't necessarily worry about knowing off the top of your head exactly how to write each data structure (because you'd almost never write one from scratch when an optimized one is already part of .NET) and the specifics of operation, I'd certainly suggest understanding the differences from the perspective of the person using it, and where each is better/worse/unviable: Otherwise you'll find yourself just using List&lt;&gt; everywhere, and missing opportunities to make your life easier and your code faster. Algorithms, I'm far less convinced - most algorithms focus on searching and sorting. 15 years ago I'd have said understanding that was more valuable, but so much sorting is now "baked in" to .NET that understanding the tradeoffs of sorting algorithms isn't as valuable. That's not to say there's no value at all in understanding them, and there are times you'll want to specify your search/sort algorithm for very specific use cases... but 999 times out of 1000, in most jobs, you just don't care enough, and .NET does it fast enough anyway. I'd certainly look at algorithms out of interest, if you find it vaguely interesting - and it can be nice to know the difference and be more confident you're making the right choice - but I've forgotten half of what I ever knew about sorting algorithms because it simply isn't as relevant to me any more in my job role. Your mileage may vary depending on what your work requires, though - in mine, I've never had a problem with implementing a native sort, then coming back if it's slow and choosing a faster algorithm. Understanding recursion and iteration, and where to use each, can certainly be valuable, though, and can come under the banner of "algorithms".
Following this thread so I can know the answer, too, lol.
`dotnet publish -c Release` Distribute `bin/release/dotnetwhateveryouuse/publish` Then to run your app, open up the publish folder and run `dotnet Your.Project.Name.dll`, with Your.Project.Name being the project you want to run. I wouldn't mess with producing environment-specific code unless your client hates having to install the dotnet framework on their machine.
No. You are a moron and nothing will help you become a programmer.
Learning this! We went from being a small accounting software to a huge accounting software and we had to restructure so much because we couldn't deliver the same speeds on a large scale.
What Software Engineering industry do you work in? If it's fast 3D games or real-time embedded then maybe important. All I can tell you is that I studied Computer Science at University and went right into Web Applications after graduating. Never once did I use a linked-list - it was always either an array or Hash. If I was unsure which to use, I sometimes just wrote a simple command line program to assess the differences with a large data set. I've never bothered to learn big-O notation either except for a few YouTube video tutorials. It has not stopped me from finding almost 20 years of employment in Software Engineering, even as I transition into back-end/services engineering. You're on holiday - forget about all of this and enjoy your life. It can wait until you are back.
Is OP trolling? I mean, does grammar matter for a spokesperson?
If you'd rather stay away from self-contained deployment, then yes the best option would be to include a .sh file to run your .dll on OSX and Linux like you would with a .bat on windows. Something like the following should work: #!/usr/bin/env bash dotnet path/to/your-app.dll "$@"
&gt; If you've seen those videos where an expert explains a concept to a child, teen, student, post graduate and expert Not OP, but I've never seen this and I very much want to.
I understand other people in this thread may have different experiences, but I can't ever remember having to explain data structures or algorithms in an interview. Lots of explaining how SQL joins/group by/whatever works, JQuery selectors, LINQ, Agile development, how to use a specific IDE, other specific questions about the frameworks used there, etc. I still think the best way to land a job isn't cramming algorithms but showing some kind of experience in the tools the employer uses. Yeah all developers need to know the difference between a List&lt;T&gt; and a Dictionary&lt;K, T&gt; and the difference between O(N) and O(1) but that isn't setting the bar high and a developer can do amazing things never knowing, say, what bloom filter is or how it works. Like, if you're able to explain the value of caching and Redis, you're probably proving to them that you know at least the simple stuff.
&gt; Algorithms, I'm far less convinced - most algorithms focus on searching and sorting. Pathfinding is a pretty important class of algorithms that you probably won't find in standard libraries.
http://lmgtfy.com/?q=expert+explains+a+concept+to+a+child%2C+teen%2C+student%2C+post+graduate+and+expert
It’s also a class of algorithms that you either need, or don’t need. If you apply for a job where you need an understanding of pathfinding, it’s quick enough to learn: otherwise, you’ll just learn it and forget it because it’s not important. I learned pathfinding algorithms in depth at college and university, but I can barely remember any of it now because it’s never come up in a decade. Also, while it isn’t in standard libraries, there are a whole bunch of libraries that cover it - I see 14 in Nuget, and a quick google brings back more results than I can be bothered investigating, but the first few look fairly comprehensive. A couple of days of research should be enough to understand, if you ever need to, which algorithm(s) suit(s) your use case.
Thanks for the answer. Will definitely use this
We're all learning here
&gt; I understand other people in this thread may have different experiences, but I can't ever remember having to explain data structures or algorithms in an interview. Neither can I. But I've definitely had to _use_ data structures and algorithms in interviews: `defaultdict` and A* search, for example. And as an interviewer, one thing I'm looking for is picking algorithms and structures that will be reasonably efficient in the situation I ask about. &gt;I still think the best way to land a job isn't cramming algorithms but showing some kind of experience in the tools the employer uses. That's good too, although it's not really an option at companies that rely on their own in-house tools. I mean, I wouldn't recommend _cramming_ to anyone. They want to see that you're experienced and confident at solving problems with code, not that you can recite page numbers from CTCI. That might mean not knowing the right algorithm, and just explaining how you'd work around that.
[Here you go buddy](https://www.youtube.com/results?search_query=explain+5+levels+) The musician one explaining harmonies is just great. They all tend to start off as explanations and by the time you get to the expert it's more of a comfy two way discussion. That's sort of what I was getting at in my original point :) They are good though :) 
I think you need a service
Yes, that's basically all the depth you need for a general interview anyway. I knew the name "A-star" and had a vague idea of how it worked, tried to implement it on a whiteboard once and failed, but still got the offer - interviewers know people aren't going to memorize every detail of every algorithm that might be useful someday, as long as they can recognize when that day arrives and know where to find the details.
How do I turn my scripts into services?
I've found data structures way more important than algorithms. In fact, other than here on reddit, I don't see any developers talking about the various types of algorithms.
You sound upset about something
Yeah my bad, I was wondering if it was a magic number but was too lazy to test 
Google "building windows service c#". Lots of useful tutorials out there.
Do I need to code my notification scripts again? They're currently written in Powershell.
Your column size is set to auto and your style doesn't contain any width. - it's working but invisible.
I have a job for you. Look through an unordered warehouse for a specific item out of millions. The next task if for your friends to do the exact same thing but you can't tell your friend where it is. Welcome to data structures and algorithms. The most important part of performance for programming is understanding these things. Literally every operation you do it an algorithm. Even if you don't see the underlying operation. Everything thing that act upon is a data structure in some regard. One simple example that is often used is string concatenation. Every time you add a string you allocate a new string in memory whoes length is the sum of the length of the two original strings and then copy each character in both strings into the new string. A + B = X A + B + C = X + C = Y A + B + C + D = X + C + D = Y + D = Z This means that to add 4 strings together you have to allocate 3 strings. When concatenating multiple strings you should instead use a buffer with a length that is reasonable to assume can hold all of the data but not to much or a resizable structure to help. With this buffer we can copy in all of the characters with a single allocation for the buffer and a final allocation for the resulting string. Buffer [] Buffer [A, B, C] Buffer.ToString() = Z As you could imagine if you have hundreds of strings to concatenate it would be much less costly to use a buffer than a cascading string + operation.
Well made point
Data structures and algorithms were the difference between AltaVista and Google. 
javascript / jquery code will get executed only on the client's machine. so scale doesn't really matter for that. might help to use a CDN for the JS libraries to have less impact on your servers. The APIs are the only portion I would worry about in regards to requests / performance. Would need a thorough test on that
I didnt see the resources on the side! thank you for pointing that out! 
Yes I spent a LOT of time fixing massive performance issues in code. Most of it is because someone googled how to do X and slap in a loop without thinking of the way the data was enumerated. Having the right understanding for the actual execution load and how to efficiently process makes the world of difference from a usability perspective. You should be able to theorise how much work something should take then replicate that in practice. If it doesn't line up, then something you have done in code is likely not working the way you understand. Functional accuracy is only one part of being a good coder.
Well I tried anyway. Thanks for the downvotes. A lot of people are going to have a hard and sudden realisation when you realise that this is what pays in the industry. If you don't enjoy solving difficult problems, get out now whilst you still can.
First, knowing the existing data structures enables you to understand the cost of the various collections that your language exposes and to implement them when needed. Second, but probably more important, knowing the data structures and the problems that they solved helps you learning how to approach and solve new problems.
They matter very much in a way you can only appreciate with a lot of experience. Here's an analogy. I hung some shelves in my house this weekend. It's the 5th or 6th time I've hung shelves across as many dwellings. I botched the first few installs because I was inexperienced. I didn't know not to try putting anchors in studs. I didn't know the kind of anchors I bought weren't appropriate for my wall. I left tons of pencil marks and lots of scars in the wall from holes where I screwed up. So last week, I spent several hours reading all I could about hanging shelves. I learned a lot of neat tricks, like using masking tape so I could mark the wall to my heart's content. I read pages about each kind of anchor and when to use them. These shelves went up the fastest and most level of any I've ever done. Data structures and algorithms are how we, as software engineers, feel we should implement good solutions to very common problems. They also tend to come with the special cases where we know they don't work very well. So if you know a lot of data structures and algorithms, you're generally better at solving problems efficiently and correctly on the first try. Without data structures and algorithms, you have to reinvent the wheel over and over and over again. You will make mistakes, misapply ideas, and be far less effective. So a developer who hasn't even casually studied algorithms is like a handyman who never reads instructions *or* building codes. He might get the job done, but it could be with materials or techniques that lead to more problems down the road. That's not a person I want to hire. And when you're in his shoes, it can be frustrating. Why should you have to reinvent the solution to a problem thousands of other people have solved? Why not reuse their best solutions?
If it helps, the design-time error checking is called "intellisense" which may be broken because of your ReSharper and/or new install.
Sorry, I passed out right after writing this and about to get on a plane. /u/AngularBeginner posted the link to the Json explanation but it’s explained in a bit more detailed here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_accessors I believe this is a JavaScript feature rather than json(definitely could be wrong) but you have multiple ways of accessing a property, mainly literally with the property name or the string index of the property. 
This has absolutely nothing to do with JavaScript... Nothing.
More like re-affirming what he already knows to be true, but to post on reddit for social interaction? IDK. I mean, knowing linked lists, stacks, and queues is like learning the ABCs before speaking english. However, knowing how to do a radix sort? yeah, no thanks. then that particular sort is very useful for the unique edge case, when you can look up the implementation rather than have it from memory.
The DOM is just a linked list on steroids (a tree, really), so yes. the fundamentals are still being used every day.
&gt; I have 5 other tabs that sequentially perform Linq queries that depend on ItemsSource1 to refresh themselves on a save method. Off the top of my head, you could probably improve latency significantly by persisting these separately and applying per-item changes to each one. The way you're doing it now requires you to re-process *all* of your data 4 times whenever *any* of it changes. 
I mean, in C# you'd just use String Builder instead of your own buffer....
LOL and then they wonder why Raja, Rajesh and Durgesh are taking their jobs.
I'm going to ask why, if only because you were asking how to do RSA with `RSACryptoServiceProvider` less than a week ago. What problem are you trying to solve?
I'm trying to encrypt things. Also I was asking for a library, not necessarily using C#'s builtin system.
When you build on the command line the C# compiler stops after finding syntax errors and does not do semantic analysis. If you fix those syntax errors and build again, you will then get semantic errors if there are any. In the IDE, the the diagnostic system gathers both syntactic and semantic errors. It does gather the syntax errors first, so you might be able to obverse them appear in the error list before the semantic analysis is done.
Well, if you can post the answer I can try to explain it. I'm still curious as to why you feel a need to bring in an outside dependency. If it's a unity thing you can say so, we won't judge. ;)
No, it's not in Unity. I'm working with things that will be sent over the net, thus I need to be able to specify an encryption/decryption key by using a string or byte array. While this is possible using C#'s builtin RSA system, there's a lot of unecessary (and admittedly confusing) data when converting to XML, and seeing as public keys will be stored in a database I'd like to keep things light (i.e. I only store the public key and modulus, not all of the other XML bits). On top of this, RSACryptoServiceProvider is just unwieldly and difficult to use. I might make my own RSA lib, but I don't want to reinvent the wheel.
&gt; but knowing they exist This is my whole university baggage. I worked with some people who never attended or dropped out of higher education and it's very apparent when they hit a wall. It's good when you can bring back memories from cold storage, apply some google-fu and end up with a nice solution.
For stuff like this I will usually have the program first attempt to save to the same location as the executable (You can get this with some statics in the Assembly class). If it encounters an exception doing so, it will instead use an appropriately named folder in the Application Data folder creating it if necessary. This way if it's "portable" like on a USB stick the configuration information is right there, and it can also be installed to a system and store in the correct location for that scenario as well. There is no reason to include these files as part of the solution, IMO.
StringBuilder is an expandable buffer... That is the whole point. Just because a language might abstract it doesn't mean you shouldn't understand it and know why it is better in order to apply it to other places.
Thanks! I think this is what I'm going to do. I've been troubleshooting and thinking of ideas. It appears if I exclude a true file path and indicate just the name of a .txt file, my debugger will store and use the same file located in the "bin" folder. This seems fine for now. Once I compile the program outside of debug mode (I've never gone through a process like this), I would assume a similar bin folder would be created and any .txt file I create will be stored there unless I explicitly list a directory. Is this true?
&gt;linked lists and array lists Now that you bring it up, let's continue this ancient discussion. I say Arrays are faster than Linked lists. Change my mind.
The only honest reply in the whole thread.
Do you need to know how to change a tire before driving a car? No, until you do.
It is not the "debugger" opening and saving files, it is your program. If you use only a file name, then it defaults to the *current* directory, which is not guaranteed to be the same as the location of your program executable. That is why you would want to explicitly determine the path within which your program is executing from.
&gt;Thanks and thanks for correcting me. I'm happy to be learning!
Faster at what?
It depends a lot on your application. If you're doing high-performance code like 3D gaming, it matters a _lot_. If you're doing a typical LOB application, it's less important. You should _always_ know _basic_ structures, like `Array` (which you'll mostly interact with as `someType[]`), `List&lt;T&gt;` and `Dictionary&lt;TKey, TValue&gt;`. Occasionally, you may also use stuff like `HashSet&lt;T&gt;`. C# also offers some fancier stuff like a ConcurrentBag and a SortedDictionary that you might occasionally run into or might useful. Beyond that, more specialized data structures from linked lists to tries and trees will probably only matter when you're trying to optimize a performance bottleneck. If that _does_ happen to you, the knowledge that you might be using an imperfect data structure for your algorithm is quite worthwhile.
Being able to evaluate the complexity of different solutions (lets say O(n) vs O(1) depending on how you structure your data, be it in code or sql/nosql) is quite important. Maybe not if you're making homepages for your local mom&amp;pop shop, but for anything that starts involving large amounts of data, data structure is #1, the code that uses it comes second or third.
Being allocated!
This is of course a totally fine way to carry on, and there is much need for developers who write decent code without necessarily understanding all the internals. But it seems to me from a personal point of view to be a bit of a shame. You're basically saying, "I'm fine with being an OK developer - why bother becoming a great one?". When I started at my job there was an extreme performance issue, although it hadn't been identified as one. There was a particular calculation that we had coded up, which had to be done in response to a user request (viewing a page on a retail site). This was working fine. However, a new product was being developed and instead of doing this calculation one time, it had to be done a few thousand times per product for every product on the site. The initial prototype of this had taken ten hours to do this. This wasn't quick enough, so at first a multithreaded version was written, and then a distributed version, and it was down to 12 minutes. I looked at the code for the calculation and it was entirely written from the point of view of "I don't care how this works as long as it solves the problem". There was no single point where swapping an array for a linked list was going to fix it, the entire calculation module was written with that attitude. I rewrote the calculation part. Once this was done, it could perform the calculation in question twenty million times per second, on a development laptop, with a debugger attached. It changes the concept completely from a batch process that can run once a week to something that can run in real time in response to user actions. The idea that the code itself was slow wasn't even something that had been considered. And there's no way that googling would have helped - it was a systemic problem, not a case of using an array instead of a linked list. Now we have a technical screening before a candidate gets an interview, and to be honest, it sounds like you wouldn't get through it. Wouldn't it be fun to learn this stuff? To feel like you know exactly what's going on when you run your code, and that it's the way you've chosen, not just the way that passes the tests?
I’m not real sure what you are referring to. 
I would use a database and dapper for something like this. 
Checkout PRISM framework and the MVVM pattern. 
I think time is better spent learning HttpClient well, and finding out how to test it using a custom HttpMessageHandler e.g. http://hamidmosalla.com/2017/02/08/mock-httpclient-using-httpmessagehandler/
Do you want the co ordinates stored on one pc to be available when the executable when run on another pc? If this is the case then you’re right there’s not really a way of achieving that in c#, at least not in a sane way. Your best bet would be to write to a network share if that’s an option or a database. If it’s not important to have access to the data from other pcs that the executable has run on, then I’d say make use of the appdata directory. Have your program create a directory for itself under local app data (or roaming app data if you want other users to access it) and save your data there in whatever format is appropriate.
What is a large data set though? 100 records, 500... 5000?
DB feels a little heavy for something like this. It’s easy enough to create a type that you can simply serialize to a file and deserialize at app start. As long as you keep the members primitive then the serialization can be done automatically. I’m assuming you don’t want to transfer this between PCs, or you’re going to have to keep track of screen resolution. The same coordinates on different boxes won’t necessarily match. As a previous person noted, you can use the app-data folder for writing stuff like this. It’s the preferred locale in Windows, as you’re not supposed to be writing to the app location. You can use the Windows.Environment namespace ( I think it’s called) to determine the app-data folder location for the current user. You can do whatever you want in there, pretty easy. I believe in the default Windows 7+ setups, attempting to write to anything under the Program Files folder will result in a file being written to a temporary folder that gets cleaned up when you close the app. Windows, rather than throwing an exception because it refuses to write, allows the write but silently fails to a new location. This is all about trying to mitigate malware activity, I believe. 
What works to validate your data depends entirely on the type of data you're working with.
It sounds like you need to move your current notifications scripts into a class. Then you can re-use that class with the service infrastructure instead of the console app infrastructure.
How would I go about doing that?
Meh, I learned about more data structures from experience and research than i "learned" about in university. For reference I attended university after learning programming on my own. I think lots of university CS degrees are absolutely terrible.
You'd be surprised. I never thought I'd ever have to use binary trees in the wild, because most software libraries abstract away (and optimize) searching. Then one day I had a project requirement to draw a graph on screen (and the ability to print it as well) that represented a tree of marketing research results. After staring at it for way too long it suddenly dawned on me that all of my class experience building and traversing trees was actually a skill worth having. 
&gt; roaming app data if you want other users to access it Isn't roaming app data more for the same user accessing data when logged in on different machines?
Substring actually takes a start index and a length. Just trying to avoid some frustration! :)
&gt; but in 15+ years of programming I've never had to roll my own sorting algorithm. It's not about rolling your own sorting algorithm, it's about being able to craft your own algorithm to tackle a new problem. Granted, most jobs aren't interesting enough to actually have to do that, either.
Most Crypto Providers are going to fall into one of two categories: - Stupidly easy to use but good luck doing anything outside of design spec. - Stupidly hard to use. Much of the reason RSACryptoServiceProvider (and other libraries) are unwieldy to use is because there's some expectation that things should be hard to get at, both inside and outside the code. That's why the default usage of a Key assumes it's on a local machine keystore or a file, and you're supposed to have using statements around almost every part of an operation: All those dispose methods do their thing to make sure the key and other state stays in memory a minimal amount of time. I've personally not found BouncyCastle any easier to use than the built in Crypto providers (I wasn't using RSA, I was doing HMAC JWTs.) All of that said, [Here's a linqpad script showing how to initialize `RSACryptoServiceProvider` with just Modulus and Exponent.] (http://share.linqpad.net/r49sa8.linq) The types are both Byte-arrays. Note that in my example I didn't do the private key via byte data, but I'm pretty sure you can do that too, it would just require a true instead of false and dealing with all the properties on `RSAParameters`.
Thank you kindly, this is quite helpful. I'll keep all of those things in mind.
Uh, yes? It's basic CS knowledge that every developer needs to know.
It's because they're fun and let us interact with the viewers in a chat a bit more. Part of the fun is that you can run the commands as I write them! Some people try to test/break them.
Oh wow I can't believe I didn't see that typo until now. Where it says end index that should have been a length. Good catch thank you. *facedesk* 
Your entire statement. It's completely unrelated. The code is not JavaScript, so the way you can access properties in JavaScript is **completely** unrelated.
Right, is there a light wrapper equation I can throw on the data to quickly validate it as "good" data. I guess like a lighter CRC?
Off the top of my head, maybe extending roslynator by adding your own rule? perhaps VS provides code analysis rules natively, idk, https://github.com/JosefPihrt/Roslynator/blob/master/docs/HowToConfigureAnalyzers.md
Try around 15 billion per hour. At least, that's what I was involved with 15 years ago. Could have grown since then; I have no trouble imagining use cases larger than that. Think: phone calls. IP packets. emails. etc.
Data structures are probably one of the most useful things you will learn about. Don't bother with the specific inner-workings (memory management and pointers.etc) just learn how to use them properly. Their use definitely defines whether a program will be readable/efficient/well structured since it's probably as core to programming as conditions and loops. I've used List&lt;&gt; literally 1000s of times and also having a good "static Dictionary&lt;string, Action&gt;" is so so so useful. Also getting and setting a "Dictionary&lt;string, CLASS_X&gt;" using "Dictionary.TryGetValue" is godly compared to 99% of the things other languages use. Basically data structures in c# are core and one of the defining features of the language! Study them and you will understand any program given to you.
It's good to have a fundamental understanding of how they work, why and when they are used, and how they are typically implemented. In actual real life coding, you'd never use your own data structures and would always use one from a standard library. Unless you work for a compiler team that writes the language libraries. 
Surprising that EF Core allows that. 
&gt; Are they of any use? I think you're at the stage where you know a little, but have no clue as to how much you don't know. So the answer is "maybe". If you don't want to learn it for the sake of learning it, you might not be on the best career path. (Then again you might, and maybe you just haven't found your niche yet). I've pretty much never had a job where all of those weren't *very* important - and that's over 40++ years. But I've been pretty heavily into the scientific side of things - medical simulation, data analytics, trend analysis and predictions, military reconnaissance etc. 
You seem to be incorrect. Even in the link he provided there are references to Javascript, and not just a few. It isn't JS code, but it behaves like part of it (to my understanding) and hence is related to JS.
Thanks! 
Right you are! Roaming “roams” with the user profile, you need the public app data directory for shared access. My mistake!
It'll just materialize whatever it gets into memory, IIRC.
I was hoping someone won’t say this. Relate the idea of learning or not to learn it to my career path. I want to be good at what I do. At my job as a software developer and I know to do this, I need to study a lot. I also need to pass interviews. As a result, I feel I should learn the pressing things first. Things that will get me to where I’m going ASAP. Just trying to learn what is needed as soon as possible. If a particular topic is not heavily needed, it will take a back seat. Or is this the wrong mentality to have? I respect all you’re saying. Considering you are a veteran of the industry. Hence why I’m responding to get more info. Thanks 
To be honest handling data from an API using JavaScript isn't that good. I think a more rigid solution is needed.
Yeh, it's the tough edge cases where you're hitting performance bottlenecks that knowledge of data structures, linear/geometric scaling, and sorting/search algorithms will help you tackle a performance problem systematically. Where as others without that background will shoot in the dark. But 90% of the time it's more about getting things done and having clear code.
&gt; learn the pressing things first Prioritization... Welcome to the real world! I've been working as a software developer for decades... although my education was in physics and electrical engineering. Much of the hardware control world of my youth has gone to software/firmware etc. The point is that my theoretical knowledge of computer science is ... spotty. I never took a compilers course - but I wrote a compiler out of necessity and brute force. I never took a data structures/analytics course... I learned it the hard way (and I bought Knuths books and used them extensively). I do think it's good to have a theoretical background, because it makes the practical side easier. Example: I finished my physics degree in 3 years, then stayed on to take 2 years worth of EE my 4th year. The theoretical background from the physics (and associated math) made the compressed 2 years of EE *relatively* easier. But as others have said, there may well be interview questions about all that stuff you don't currently care about. I'd certainly totally blow that kind of interview. I get jobs based on a) extensive niche knowledge and b) I know where a lot of bodies are buried... [still got the shovel](https://www.youtube.com/watch?v=mn60YWO218k) .
http://geekswithblogs.net/BlackRabbitCoder/archive/2011/06/16/c.net-fundamentals-choosing-the-right-collection-class.aspx
What makes you different from the other person that had the same question? The one spent time to learn it makes a better developer.
Don't know about analyzer but I configure my contexts to log. In the debug window while developing. Check the log and I see the queries. 
medior?
There is no good and bad data except in the context of your problem space. What is valid to me may not be valid to you. There is no universal equation for validity.
It is foundation knowledge 
If you are not curious how this is done under the hood - isn't it a time to reconsider what degree you're doing/career path your are choosing? If data structures and algorithms are already boring for you, further it'll get even more boring 
You can derive it from scratch if you know how it works. None of the stuff you're likely to encounter in an interview is that complicated.
Appreciate that but /u/AngularBeginner is right. I went strait to JavaScript and totally didn’t address the error you posted. That clearly is server side and I should have addressed the question accordingly. 
mediocre
Yes.
There's two types of programmers - those who care and those who don't care - you have to decide which ones and pay accordingly.
You might get a better answer if you expand the acronym. A cursory search didn't find anything that resembled what I would expect from you question
It totally depends on the type of problem and algorithm. I've seen poor algorithms that work fine on 5 records, seem slow at 8 and will never possibly complete at 10 (that particular one was a recursive, combinatorial N+1 database query wtf where every record needed every other record N! times and went to the db to query for each individual record and never saved any of them). 
I think an awful lot of jobs come down to efficiently picking values out of collections and/or putting them into collections. Sorting may be a component of that but various general purpose sorting algorithms have almost always already have been done on the common types of collections most people use. There are still many picking and putting problems left to do.
&gt;As a result, I feel I should learn the pressing things first. Things that will get me to where I’m going ASAP. Just trying to learn what is needed as soon as possible. That approach can only work if you have a specific idea about which job you want to get: you need to know _where_ you're going, with more specifics than "I want to be a software developer". What kind of software? Server side, client side, desktop, mobile? Big company or small company? Etc. If you don't have a specific goal in mind, your best bet is to assume that the things people say are important really are, and trust that you'll understand the reasons once you have more experience.
This project looks abandoned but you may be able to grab a working example of a non-canonical method Roslyn analyzer out of it https://github.com/jumpinjackie/roslyn-ef-linq-analyzer. That would give you static analysis at build time.
Mind sharing how to set that up? Would love to have this going on my projects. 
You will want to use Entity framework and linq. If you have a SQL query you need to convert to c# you could turn it into a stored procedure and call it with entity framework or you can rewrite it using linq.
Why are you splitting the list into two arrays? And what changes? It sounds all of this could be done in one loop, e.g.: 1. Open file 2. Read a line 3. (Optional) Change the value 4. Save to List&lt;string&gt; 5. Go to step 2 unless EOF; if EOF go to step 6 6. Write List&lt;string&gt; to file 7. Close file/handle/etc Profiling would help find the culprit, but it sounds like excessive copying. .ToArray() and .ToList() will copy all 70k lines every time you use them.
Not trying to be a dick but surely finding out all this info and doing the research yourself should be part of the process?
The txt file is formatted like this. 100/t ff I only want the last two. So the ff. Im checking to see if its ascii representation is equal to my variable. If it is im changing it to a different hex value. The first column gets bigger than three chars. Goes up to FFFF 
Yep whenever you First, FirstorDefault, ToList, and some other ones that are escaping me at the moment.
The important thing to know about a radix sort is not the implementation. It is to understand that there are other boundaries on the problem you can use besides the obvious ones. Whereas other sorting algorithms take a set of numbers and compare them by value to each other, a radix sort looks at the data set and notes that all the values are in a fixed size structure and that components of that structure all sort the same way as the structure as a whole does. And these implementation details are useful for looking at the problem in a different way. The same conceptual leap that gets from heapsort to radix sort is what gives us "pseudopolynomial time" approximations for otherwise intractable problems.
 var quickerArray = File.ReadAllLines(path).ToList(); Do not read the lines one at a time if you need all of them. If you can initialize a list with the required capacity, it cuts down on reallocation of larger arrays. But also, you're not providing enough code to determine what the problem is. Your program does not necessarily do what you think it does; nobody's perfect, and if there's an error in your code but not your logic, there's no way for anyone to help you with it if you don't post code.
Thats what I was trying to get at, pretty much. If you asked me to write a quick sort right now, gun to my head, it would take me a while. However, I do know the algorithm conceptually, so I could work it out.
I know sorry im adding my code on my break. Im at work :( 
Do you ONLY care about the last two characters of each line? If so, then that makes things easy. You can splice strings easily, and if you want to get even crazier you can use the new `Span\&lt;T\&gt;` to get even better performance (although only available in newer C# versions, not sure if you have access to that).
I know, im just at work. Im going to add my code when im on break :( . Ill link it.in about 15 minutes 
GroupBy, up until 2.1
[https://msdn.microsoft.com/en-us/library/dn469464(v=vs.113).aspx](https://msdn.microsoft.com/en-us/library/dn469464(v=vs.113).aspx) Change it to this though. It gets removed for non-Debug build configs. context.Database.Log = System.Diagnostics.Debug.Writeline;
 dotnet publish -r &lt;runtime identifier&gt;
Also `IEnumerable&lt;T&gt;`. Never forget.
Yes , I only run the check method on the last two characters but at the end it has to add both the left and right back together. 
It's probably SoftBridge Basic Language which is from the 90's and similar to maybe VB 6 or VBA.
Omg. I literally only changed readlines. To read all lines. And it is soo much faster. Thank 
It's not built into visual studio, but linqpad will show you each query that runs, and there is a nifty plugin that will show you the sql plan too
Dude, thanks. I changed my read lines to read all lines. It finishes in about 3 seconds . &lt;3
Yourcontext.Database.Log I inject a logger in the constructor. Nlog. Use nlog config file depending on environment. Debug in VS I configure to output to console. Prod environments to file, appinsights, etc 
Second Linqpad. It’s amazing. 
Sure, but OP wasn't asking if they should learn how to create novel algorithms. They just wanted to know if it was worth learning the textbook ones.
Or don’t buy into everyone’s obsession with EF and use dapper instead. Then you don’t have to covert any SQL queries into C# :P
Sounds like 'yall need better code reviews..
Happy to hear it!
Okay, API and the database both will have to be tested at various loads, right? Or only API testing will be enough? What frontend framework would be extremely lightweight to use? 
What solution do you suggest?
Put the file on an SSD. Optimization complete.
Most of the Bouncy Castle types are directly related to components in the RFC standards. If you really want to understand what's going on, you should make sure you understand the RFC standards. There's alot of nuances in things like padding schemes that you won't understand just from looking at code. You'll need to understand the underlying algorithms if you want to fully understand the code. From there the Bouncy Castle unit tests can be useful to see the different things you can do. Bouncy castle gives you a very granular level of control. In alot of cases you shouldn't need this and the built in .NET options are sufficient. I've seen alot of people try ro implement encryption at a low level and make critical errors that lead to vulnerabilities. It's best to follow the standards and stick to the simplest inplementations.
On it 
Okay, then. You're done optimizing.
I would suggest not storing `Hexvalue`; instead read your data into a `List&lt;char&gt;` by immediately converting it while reading. something like (not sure what UnitType has to do but you may want two loops and an if statement?): var lines = File.ReadAllLines(path); var values = new List&lt;char&gt;(lines.Length); var addresses = new List&lt;string&gt;(lines.Length); foreach (var line in lines) { values.Add(Asciirepr(line.Substring(line.Length - 2))); addresses.Add(Asciirepr(line.Substring(0, line.Length - 3))); } then: var data = new string(values.ToArray()); data = data.Replace(serialnum, newserialnum); then write the file back: using (StreamWriter fs = File.AppendText(path)) { int i = 0; foreach(var value in data) { fs.WriteLine("{0}\t{1:x2}", addresses[i], (int)value); i++; } } also don't open the file inside a loop like that... think of it this way: anything you put in a `using` statement is expensive to create and destroy so you want to do that as few times as possible
You can configure EF warnings when there is client side evaluation. I have set it to throw on my debug build. It is not static analysis but you can catch these kind of queries during development. using Microsoft.EntityFrameworkCore.Diagnostics; // ... services.AddDbContext&lt;MyDbContext&gt;(options =&gt; { options.ConfigureWarnings(warnings =&gt; warnings.Throw(RelationalEventId.QueryClientEvaluationWarning)); });
Exactly. I'm just trying to prioritise things. I have a long list of of topics I plan on covering. A lot on the list I've been able to see the practical use of. Wasn't sure about Data structures, as it felt like I was trying to learn how things like linked list worked under-the-hood. It was simply a case of 'learn how to use it' and/or 'learn how it works'. I know how to use it, but should I really care (at the moment anyway) about how it works? Now I know I should, or at least have an idea of it.
I do have a specific idea. Aim on becoming a full stack developer. Currently working more on server side. Hoping to move to client side, with an emphasis on web and cloud technologies. All the replies have indeed given me an idea of why knowing them is useful.
This is the conclusion I seem to be getting at too, after weighing all the replies against each other. Being able to understand the difference between the various data structures and not necessarily how they work in detail. That said, I will aim to understand them as much as I can, but more important to know the difference and benefits of one over the other. Hopefully, I've got the right idea.
Best practice could look something like this... Front end: web based with React or Angular (I like Vue but any of them will work fine) Back end: ASP.Net (C#) or Python based Database: MySQL or Azure SQL (maybe Cosmos if you're going non relational) I'm into the Microsoft stack so my suggestions only apply if that's your aim, of course.
Came here to say this.
thanks for this.
You mind me asking how long ago this interview was? Just curious
I disagree with this. I'm sure there a good mid-level developers out there. Infact, I'm sure there are well experienced developers out there that have no idea about data structures. Don't get me wrong, its good to know. Curiosity of how things work under the hood, can help make a good developer. Not necessarily though. So, I don't think the prerequisite in choosing this career is the need to always know how things work under-the-hood. If that's the case, we should all look into how the garbage collector works etc.
I use it for basically half of my questions regarding il, given the native support for presenting il. Also good for figuring out c# optimizations. 
I am building a hotel, it must house 1000 people and be very modern, is brick a good material or should I use wood?
It is not JavaScript, it does not behave like JavaScript. In this particular case you can access it the same way, but it works **completely** different from JavaScript. In JavaScript you can use the `obj['property']` to access a property of an object, it's equal to `obj.property`. But when you write `obj['property']` in C# code, then it's not used to access a property named `property`, it's used to invoke the indexer of the type, aka `Item`, which in the case of `JObject` is implemented to return property of the JSON object it represents. It looks similar, but it's completely unrelated.
https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
[OzCode](https://www.oz-code.com) does a lot with linq. Might be worth checking out if they also detect this stuff. And, yes, it’s a huge problem. I’ve gone so far as to ban all use of linq when it comes to data access. Better write the data queries in a isolated place, using ‘native’ query language. 
About two years ago.
Between a junior and senior.
To provide a bit more info, you have a [Schlemiel the painter's algorithm in there](https://en.wikichip.org/wiki/schlemiel_the_painter%27s_algorithm) with the original approach. It's around the call to `.ElementAt` where you get the temp variable. `File.ReadLines` returns you an enumerable of the lines. This is something that you can traverse by moving from one element to the next, but you can't access by index. Thus, when you call `.ElementAt` it iterates through the items one by one until you reach the desired number. You're doing this inside a for loop, so you have this iteration happening for each execution of the loop. So item 1 in the for loop, you go to the first element and return that. Item 2 in the loop, you go to the first element, move next to the 2nd and return that. ... Item 1000 in the loop, you go to the first element, move next to the 2nd, and carry on doing that until you get to the 1000th and return that. If you have 65,900 rows in your file then you're iterating over things more than 2 billion times. And you do this twice!! It's also worth pointing out that the enumerable that you get from `File.ReadLines` is something that doesn't even load the contents of the file until you iterate over it too, so you're potentially doing IO at all of these steps as well. This is why it takes a long time. What /u/Enlogen suggests is to change things to `File.ReadLines`, which returns an array (the extra .ToList isn't strictly needed). This is an entirely in memory structure, so no more doing IO as you iterate over things. It also allows you to access items in the array by index. .NET has an optimisation in the `.ElementAt` method to use this way of getting things rather than iterating each time if the data structure supports it. So by moving to an array you've reduced the number of operations you're performing significantly as well as reducing the IO.
Why don't you try it out? Either use something like [LINQPad](https://www.linqpad.net/), or [.NET Fiddle](https://dotnetfiddle.net/) or just create a simple console application, write some test code and see what happens.
There is nothing wrong with adding an empty event like that to an other. When you invoke your WinEvent though, you need to check for null or better yet use the ?. operator WinEvent?.Invoke(42); And remember, when in doubt, just try it yourself, you will learn much more by experimenting simple things like this and then asking questions about what is out of your reach for now.
I do a lot of different stuff, and installed VS Community 2017, with the options available to do those things. It, with the NuGet packages for my software, uses the majority of the 256 GB partition that I have Windows on.
You should look up "Filters" (ASP.NET MVC, ASP.NET Web API, ASP.NET Core all have it). They're used for checking such pre-conditions and have an early exit before even hitting your actions. If you use ASP.NET Core you could also place it in a middleware, to be independent of ASP.NET Core MVC. Also, instead of `ehr.token.ToLower().StartsWith("bearer ")` you could use `ehr.token.StartsWith("bearer ", StringComparison.CurrentCultureIgnoreCase)`.
Learn Programming Logic first. This made learning to program very much easier. I learned C# in a week, after learning some other languages, and now use it more than the other languages I know. If you write a UWP application, and you want the app to update what image to display, use ObservableCollection, just like a list. You can bind that to the xaml code. It's a good language.
[https://www.infoq.com/articles/default-interface-methods-cs8#anch160623](https://www.infoq.com/articles/default-interface-methods-cs8#anch160623) !!!This feature is controversial!!! I did not handled it in the critical way. Because of this feature does not break the interface contract concept. C# is multi paradigm programming language and I do not see any reasonable reason to forbid this fearure in C#. My tip for C# developers, just think before you are use it and compare your solution with the other alternative techniques. I can understand why Don do not want this feature in F#, but finally, if you want to keep the interopablity betwen F# and C# you have to take hard decisions. 
Same can be said about using ADO .Net instead of an ORM or writing your own DI container or even your own CQRS and Event Sourcing framework. Frameworks can be useful but can also hide the fundamentals. 
Do not make your own authentication scheme. Use Identity and keep things simple. Use Entity Framework and MSSQL. Use ASP.NET Core 2.1. Use MVC if you want to develop something quickly. Go for WebAPI if you want a JS front-end. Maybe React-Native if you want the option to transition the store to native code later. Vue or Angular are also compelling. Can't go wrong with any of the big three. I can guarantee you that you will not finish this project unless you have some obsurd lasting spirit and comitment to a year long project with no tangible benefits at the end, except for the tech you have learned. There is much more to software development than build it and they (customers) will come.
Hahahor
Personally for large scale I'd build it from the DB up. at least third normal form structured tables, stored procedures, functions, views, transaction logic etc. Throw some encryption in there for PII to reassure companies with regard the GDPR. I'd have a RESTfulApi for interactions between sites/apps/third parties if required. Then build your site against the API. That way your site can be made using whatever flavour of tech you're comfortable with. Choose your hosting wisely if you are expecting high traffic, get your security and pci compliance sorted if required. A stand alone well designed database gives much more control than a code generated one. Some devs aren't comfortable with db design but I've loved working with it over the years, very powerful, very easy to mess up also if you're not careful :P
You are welcome to your opinion good sir. As I said, it depends which domain you are working in. With big data then of course. All I can tell you is that in my many years of experience I cannot even remember anyone even mentioning O(n) and all that jazz. That is not to say optimization is important, things need to be performant, stable, memory efficient etc. OP needs to bear this in mind. More and more code-shops are moving to Agile where you work in two week sprints to create a MVP. Sometimes "good enough" is just fine.
What exactly are you trying to avoid? I mean: var q = from c in ctx.Customer select new Customer { CompName = SomeClass.Foo(c.CompName) }; is perfectly fine code and shouldn't bode a problem at all. At least with a linq provider doing the right thing. I mean, the ORM should convert the whole projection lambda to a compiled delegate anyway, accepting an IDataReader so at runtime the lambda performed at the location of 'select' would be: r=&gt;new Customer() { CompName = SomeClass.Foo(r.GetString(0))}; and that one is then invoked, which calls the function locally. Also, local functions can be mapped to DB functions, so they're evaluated at runtime and if a mapping is present, they're not executed but transformed to the mapped counterpart and run inside the SQL query in the DB. So I suspect you're talking about the latter where there's *no* mapping available and you don't get an error? 
I think the app data might be a good way to go for me, as well. I’ll do some research on the matter. It’s not very important for the data to be shared or accessed later; probably just once or twice before the data is purposely written over.
Thanks! I hadn’t read much about the App-data folder until this thread. I do think this will be the way ahead for me.
Yep, the latter. When efcore can't map, it maps what it can then evaluates the rest locally
Removed: Rule 5.
Hmm that's indeed pretty odd. I'd expect it to throw an exception that a method isn't mapped. (I think EF6 does that). I now understand your question. 
If you're going to use File.ReadLines(), use a foreach loop instead of a for() loop, Count(), and ElementAt(). This could be most of your performance issue all on its own. ReadLines() returns an IEnumerable&lt;string&gt;, which doesn't offer constant-time operations for size or positional indexing. This means that Count() and ElementAt() have to iterate over the entire collection to get the number of elements or the element at a given index. Your for() loop is basically O(n^3). Unless there's a compelling reason they *must* be humongous arrays, Hexvalue and Hexaddress should probably be List&lt;string&gt;, instead. Use Add() to add items to the list. It will save you memory on smaller files and may let you deal with larger files. There's probably more, but I'm still on my first cup of tea, this morning.
Have you heard of NoBrick? It lasts 10,000 years and is strong enough to construct high rise towers with no tradeoffs. You should definitely just believe me and not ask any questions.
It's not possible to give you only the x.AddItem calls of the class you're working in because you can cast instances of your helper classes to the interface and then CodeLens would not know which implementation of the function is called. But I agree with you, it can be annoying.
This looks like the best option. Thanks a bunch!
https://blog.codinghorror.com/regular-expressions-now-you-have-two-problems/
Once I clicked the ad, answered a question and the found out that they don't serve my area. 
That makes sense; didn't think of that. Thanks :)
This is confusing, I think you have confused intelisense with code lens, Also what you are describing doesnt make sense, for example : Let interface I declare method AddItem() Class A : Interface I (implemented) Class B : Interface I (implemented) then I ia = new A(); I ib = new B(); can you explain what is your problem with ia.AddItem(); or use some more code in describing your problem. 
So I have the following: public interface IDataObject&lt;TViewModel, TDataModel&gt; { public int AddItem(TViewModel vm); // TDataModel is used elsewhere on the interface; I left it out to keep things clear. } public class PatientsHelper : IDataObject&lt;PatientViewModel, Patient&gt; { public int AddItem(PatientViewModel vm) { // Do stuff. } } Now, when I'm in PatientsHelper and I want to see references for its AddItem function, all I want to see is where PatientsHelper.AddItem is used. My page at `~/Patients/New.aspx` for example... Instead [I'm seeing this](https://i.itsosticky.com/1x9jfow.png). Note the last 4 or so items listed... Those are the only ones I want to see right now...
Good point, sorting algorithms are a great way to study algorithms as a whole. Lots of carry over with other algorithms.
In that case, might it be easier to massage the scripts into VB.NET form and from there to C#?
Removed: Rule 4. The latter is probably the best. Consider it a separation of concerns. The first form's job is to log in. That's it. It's the second form's job to display all the relevant information. Best to just feed the user ID/name into the second form, and let the second form retrieve and display the data. Consider this, if you add a Mailing Address to users, should your first form know or care about that? Probably not.
Do not refactor that into a function - asp.net core is especially made for features like that. As already mentioned, look up middleware. Also check the default jwt implementation, that will handle everything for you: https://developer.okta.com/blog/2018/03/23/token-authentication-aspnetcore-complete-guide
Pluralsight is my go-to, but only because my employer provides the account at no cost to me. They do have courses on advanced language features and debugging, but it's very hard to teach application architecture and design. Trial and error may be the only good way to get a grasp on what you really need to know. &gt;With all this I still feel like I'm still only scratching the surface and don't have a firm grasp on the advanced elements of C#. As far as I know, it's normal to feel this way until at least few years after creating your first major successful program, so do your best to acclimate to it.
ASP.NET MVC 5 is part of the .NET Framework which is Windows only. .NET Core is cross-platform. 
Core is it’s own thing, you can basically take only what you need for your project.
[Visual Studio Dev Essentials](https://visualstudio.microsoft.com/dev-essentials/) gives {three months access to Pluralsight](https://help.pluralsight.com/help/im-a-visual-studio-dev-essentials-user-what-can-i-get-on-pluralsight-how-do-i-redeem-it) for signing up. That should be long enough to see if it would be worth the cost to you.
Well my personal and honest opinion is that MVC just works but is windows only while Core is the typical linux stuff, hence filled with bugs and incompatible addons but you save money since you can run it on Linux servers
IMO Flurl doesn't give you that much extra compared to the other things you mention
That's what I would try. I don't use CodeLens, so I'd be curious to know how it handles this. I expect that if you're calling the method on an interface it won't show up as a reference to the implementation of the method.
Script Kiddie = a "programmer" who doesn't understand algorithms and data structures.
&gt; As far as I know, it's normal to feel this way until at least few years after creating your first major successful program, so do your best to acclimate to it. I am glad that is the case, because as soon as I start feeling like I understand a good bit of C#, I read some code and go oh wait I actually don't know anything. Read a blog post and go oh I don't even understand the language at all.
They are different things. ASP.NET Core _MVC_ is the successor to ASP.NET MVC. It runs on either .NET Core or .NET Framework (unlike ASP.NET MVC, which only runs on .NET Framework). ASP.NET Core 2 is more of an umbrella term of all current server-side .NET web stuff.
Why do you think because its linux it will have bugs?? I like Windows and Linux and both operating system have their issues.
Thank you all for the replies. Apologies for not being clear about SBL, as bluHaloLabs is correct that it is SoftBridge Basic Language. We are trying to go directly from SBL to C# I'm not familiar with Entity Framework but I'll google it (thanks for the suggestion). Either way, it sounds like I have my work cutout for me as I have to convert 100-200 of these from SBL to C# --- woot!
If you can handle the bone numbing boringness of their videos then PluralSight is likely the best place to go. I can only handle about 20 minutes before I get the overwhelming urge to end it all by jumping off a roof.
You can't really run a C# app in the browser. Usually, C# is used to write a “backend“, and you need a “frontend“ (i.e. a website) to use it from the browser. So typically your backend will have a HTTP interface, and your website will call it to fetch or manipulate data from the backend. Mabe take a look at ASP.NET Core.
I've used this set of tutorials: [http://neokabuto.blogspot.com/2013/02/opentk-tutorial-1-opening-windows-and.html?\_sm\_au\_=iVV3P14fTFrk0rsH](http://neokabuto.blogspot.com/2013/02/opentk-tutorial-1-opening-windows-and.html?_sm_au_=iVV3P14fTFrk0rsH) They're well written, generally well explained, and the code looks nice. However (like most tuts), it doesn't go very deep into the math behind the 3D concepts. For that, I'd recommend this site: [https://www.scratchapixel.com/](https://www.scratchapixel.com/)
Is your program a console program? If so, then - as DJLaMeche pointed out - you will have to create a web app that uses the logic from your console program, but outputs it in a different way (via html). Does that make sense?
Not saying your lib isn't useful, but almost every example given is a bit dishonest because the WMI examples are given in full, while your lib's example code is generally a snippet that doesn't do the same thing, makes it harder to compare
I think the best approach is to use IEventAggregator. Create a class called "ChangeViewMessage" or something like that. In your ShellViewModel subscribe to ChangeViewMessage events by inheriting from IHandle&lt;ChangeViewMessage&gt;. And of course calling the EventAggregator.Subscribe(this) method in the constructor. Now that you have the ShellViewModel wired up, from inside your UserControl call EventAggregator.Publish(new ChangeViewMessage()); and it will bubble up in the ShellViewModel. From the handler in ShellViewModel, make sure you do the view changing there. It's pretty easy. Doing it this way follows the pubsub pattern which works well for MVVM projects.
I just finished doing a lot of tutorials for [asp.net](https://asp.net) and everything is looking good in a browser and then i am ftp uploading all files of the program to the place my website is hosted via Visual Studio ftp publish. From here I can't view the .aspx file as anything more than text. It no longer works in the browser as an application. Is it because the host is not running what they need to be running for this application to work? Are there settings I need to apply to the application? Will this just not work and I need another type of user interface to work with the C# code? 
I haven’t done this either but I have worked with C# and web development just not together. I’d imagine your host does not have the .net framework on their servers as they are usually apache or another Linux based OS. I’d hold off trying to publish a web app in asp.net until you have the basic understanding of the environments you’re working in and targeting. Unlike html and css the browser cannot just render C#, the server will need to run the compiled code and you will need a web page that will interface with said application. Your some ways off from the looks of things I’d advise some more tutorials on web dev
Learn Core, it's the newer and more modern framework.
I definitely am just at the very beginning but, my kids and my best friend wanted to see what I've been working on and I'd like to show them but, school has not yet taught me how to do this. How does an application get from Visual Studio to a downloadable application a friend can see and play with? That's where I am. Those are the kinds of tutorials I need. I wanted to try doing it via web browser because its just less hassle to send a link to something. 
Hm, I have never worked with this kind of ASP, sounds a bit like PHP. Maybe the host needs the .NET runtime or framework or something?
So only server that runs on Windows can handle [ASP.NET](https://ASP.NET) 5 web page, but both Windows and Linux servers can handle web page created with [ASP.NET](https://ASP.NET) Core, is that right or I missed something?
Some are soooo slow! 
Would you recommend to learn about ASP.NET 5 or [ASP.NET](https://ASP.NET) Core?
I’m not by a pc atm so I can’t verify this is exactly what you need, but I think you need to do something along the lines of either [this](https://youtu.be/IwbKquNBNgQ) or ask your hosting provider if they can configure your server for asp.net 
It was originally a small .xaml application. when i did the asp tutorials the interface file became .aspx which seems to be a combo of .html mixed with windows forms/asp stuff. drag and drop text boxes and buttons and things. Its viewable in Chrome on my local computer but not on the uploaded site. I think it is because it was on linux. That is what people are saying.
Check out the docs about requierements, the server will need some runtime to run your app
Plus the vast majority are ripped and placed online. YMMV depending on your tracker.
Removed: Rule 4. There are a few C#-based methods of doing this. Try searching for something like "Xamarin image circle" and you'll get a few hits. (for example: https://github.com/jamesmontemagno/ImageCirclePlugin) Dive in and give it a shot. If you run into specific issues, feel free to post and include your code and errors that you get.
My cshtml knowledge is rusty as it's been a while, but it should simply look something like this: &lt;span&gt;@(ViewBag.FirstName)&lt;/span&gt; Not sure what you're trying to do with String.replace()
Look into .NET Core. It's pretty easy to get started with great tutorials and you can host c# web applications on Linux (or just using IIS and Windows) https://youtu.be/yYr0seXj7qA
EF6 (and earlier) does that, you had to explicitly call AsEnumerable (or whatever the method was called) to materialize the results and run C#-side processing on it.
With string.Replace() I'm trying to add an element &lt;span&gt;&lt;/span&gt; around a substring. The result should be a string of: &lt;span&gt;Carl&lt;/span&gt; Johnson
That's correct
Asp.net core isn't widely used yet. However, it's not very different conceptually from Asp.net 5. You can learn Core and still understand the other
Okay, it is possible to parse strings as html elements but frankly this is really dirty code. I would suggest heaving getters for FirstName and LastName separately: &lt;span&gt;@(ViewBag.FirstName)&lt;/span&gt; @(ViewBag.LastName)
hi. if you have a console app or something you're trying to share with others maybe try https://dotnetfiddle.net/ 
bit dated, but http://www.hanselman.com/blog/ASPNET5IsDeadIntroducingASPNETCore10AndNETCore10.aspx
&gt; I highly recommend this [course](https://www.udemy.com/unitycourse2/). It's great for begginers in both C# and unity but most importantly games you make in it are really fun. Also authors pay a lot of attention to good coding practices so you can pick them up early on. Hey I am not OP, but I bought this course right now and I hope it's good. I am start watching it!
 victory = false; I'm having trouble understanding your question, but your problem is probably that ResetGame() does not set round to 1 or victory to false.
I actually did it few mins ago in the ResetGame: ((Button)X).Enabled = true; ((Button)X).Text = ""; ((Button)X).BackColor = default(Color); round = 1; victory = false; But now seems like Draw window come out every time you reach last turn, even if win
I have a button for reset, but seems a "rough" solution, anyway If I have no chance I will use it
Remove CheckDraw() and add a third elseif in CheckVictory() as else if (round == 9) { MessageBox.Show("Draw"); ResetGame(); }
UPDATE: deleted DrawCheck and put it in VictoryCheck, it works but just somwtimes .-. code: private void CheckVictory() { if (button1.Text == "X" &amp;&amp; button2.Text == "X" &amp;&amp; button3.Text == "X" || button4.Text == "X" &amp;&amp; button5.Text == "X" &amp;&amp; button6.Text == "X" || button7.Text == "X" &amp;&amp; button8.Text == "X" &amp;&amp; button9.Text == "X" || button1.Text == "X" &amp;&amp; button4.Text == "X" &amp;&amp; button7.Text == "X" || button2.Text == "X" &amp;&amp; button5.Text == "X" &amp;&amp; button8.Text == "X" || button3.Text == "X" &amp;&amp; button6.Text == "X" &amp;&amp; button9.Text == "X" || button1.Text == "X" &amp;&amp; button5.Text == "X" &amp;&amp; button9.Text == "X" || button3.Text == "X" &amp;&amp; button5.Text == "X" &amp;&amp; button7.Text == "X") { AImoves.Stop(); victory = true; MessageBox.Show("Player Wins"); playerWins++; playerScore.Text = "Player Wins - " + playerWins; ResetGame(); } else if (button1.Text == "O" &amp;&amp; button2.Text == "O" &amp;&amp; button3.Text == "O" || button4.Text == "O" &amp;&amp; button5.Text == "O" &amp;&amp; button6.Text == "O" || button7.Text == "O" &amp;&amp; button8.Text == "O" &amp;&amp; button9.Text == "O" || button1.Text == "O" &amp;&amp; button4.Text == "O" &amp;&amp; button7.Text == "O" || button2.Text == "O" &amp;&amp; button5.Text == "O" &amp;&amp; button8.Text == "O" || button3.Text == "O" &amp;&amp; button6.Text == "O" &amp;&amp; button9.Text == "O" || button1.Text == "O" &amp;&amp; button5.Text == "O" &amp;&amp; button9.Text == "O" || button3.Text == "O" &amp;&amp; button5.Text == "O" &amp;&amp; button7.Text == "O") { AImoves.Stop(); victory = true; MessageBox.Show("Computer Wins"); ComputerWins++; AiScore.Text = "AI Wins - " + ComputerWins; ResetGame(); } else if (round == 9) { if (victory == false) { MessageBox.Show("Draw"); ResetGame(); } } }
This is not stackoverflow, the question is how to use replace in this and similar cases :) In the real code the FirstName equivalent variable is not that easy to just fetch and store
&gt;Is it because the host is not running what they need to be running for this application to work? Yes, this is most likely exactly the problem. If you want to run on Linux, you will most likely need to use [ASP.NET](https://ASP.NET) Core. Most [ASP.NET](https://ASP.NET) tutorials probably assume you're hosting on Windows, with the full .NET Framework, and using IIS.
I changed it, now when last 2 slots are empty the AI fills both of them .-.
Create a new [ASP.NET](https://ASP.NET) MVC Web API application based on .NET core, not .NET Framework. Add a Controller class and a single method that returns either IActionResult or Task&lt;IActionResult&gt;. You can either put your program logic in that method or encapsulate it in another class that this method calls. You can deploy your app to an AWS instance running Ubuntu. They have Ubuntu images already setup with .NET core, but you are going to have to install and configure NGINX or some other web server software to make it publicly available.
ASP.NET 5 MVC was a deceptively bad name. &gt;However, naming the new, completely written from scratch ASP.NET framework "ASP.NET 5" was a bad idea for a one major reason: 5 &gt; 4.6 makes it seem like ASP.NET 5 is bigger, better, and replaces ASP.NET 4.6. Not so. https://www.hanselman.com/blog/ASPNET5IsDeadIntroducingASPNETCore10AndNETCore10.aspx Sure, naming is hard, but naming it 5 should have been an obvious no-no. 
This is the way. In combination with this, have a look at React to make your UI pretty. It's what all the cool kids are using today
You should have the least logic possible in your views, and this replace function seems like some complex logic, especially if you want to replace it with HTML. The solution is really to have the value split from before it enters the view, and then just wrap each part with its tag. You could have first and last name, or you could have the Declaration of Independence. The answer is the same.
Ok now it works, should have changed round == 9 to 10 cause it start at 1, thanks a lot for help ^^
Also the tone of the person can be great or awful. top two I hate: too cheery/fake happy tone and inflection, or vocal fry.
Thanks!
Microsoft is generally pretty terrible at naming things.
Oh god yes. It would be nice if PluralSight (And they might, I don't do videos for them) had some guidance on blowing your nose before starting a presentation, and not sounding like you're convincing a psychiatrist that your failed suicide attempt was accidental. Also, while I'm being cruel, there are some parts of America that clearly have smart people, but theeeeyyyy tallllllkkkkk, .... too s. lloooow. Come to London, you can commute for a week and that will get you talking fucking fast I assure you :)
irwiss I do not agree, I may have not printed to the console on some example but I tried to make clear the difference in what refers to more "readable" code. Anyway thank you for your time reading the article and for writing your opinion! :D
Southerners talk slow, I dont mind it. Unless its a tutorial or something. Us west coast USA people talk pretty fast.
New Yorkers, Coloradans (? Coloradians?) and yep the West coasters. You're right though, I found the southerners super relaxing when I used to travel over there. It's like chatting to Valerian sugar tea.
https://docs.microsoft.com/en-us/onedrive/developer/rest-api/api/driveitem_list_children#list-children-of-a-driveitem-with-a-known-path returns the file names, filter them and fire off requests for the specific files you want.
I made the assumption UI was not necessary based on OP's comment about running a "program". If UI is necessary, it's better too use an MVC template over the Web API template because it will wire up some additional stuff that you'll have to manually add in an API project. 
It's basically the same. Stack overflow and here are allowed to tell you that you are doing something dumb.
I had a work trip to the south recently. As a yankee, holy shit you feel like you're in a different country to be honest. everyone has a southern drawl and phrases you feel are so weird to hear/oversee that isn't on TV or something. 
America used to amaze and amuse me. I haven't been in quite a while, I used to visit for business. It's like pretty much every country in that the people are always kinder and more multidimensional than the stereotypes, but with the added advantage that in most cases I understand the words :) 
I’m on mobile, so this may not work, but something like: &lt;span&gt;@ViewBag.FirstName&lt;/span&gt; @Model.name.Replace((string)ViewBag.FirstName, string.Empty) should roughly work. However - if the first name exists within the surname (e.g John Johnson) it will do strange things. You may be better doing: @{ string lastName = (whatever code you like, can be multiple lines) } &lt;span&gt;@ViewBag.FirstName&lt;/span&gt; @lastName 
&gt; In the real code the FirstName equivalent variable is not that easy to just fetch and store Then you're doing it wrong. Sorry, not trying to be a dick, but that is a definite sign that you should refactor. Why is the FirstName coming from the ViewBag? Why doesn't it exist in the model? Your model should have a `FirstName` property that is set to the appropriate value (including your 'String.Replace', if that's really necessary) before it gets to the view. If you are doing any sort of processing/logic in the view, it's probably time to take a step back and think about it again.
Naming it was bad all over the place. The ASP.NET part was bad because it it isn't really derived from ASP.NET 4.6; none of the types are the same. "5" was bad because of the reasons listed in that link "MVC" was bad because it is dozens of libraries covering a wide variety of features (Identity, compression libraries, templating, hosting, etc). with the rename ("ASP.NET 5 MVC" to "ASP.NET Core 1.0"): ASP.NET was bad because it makes it difficult to find documentation specific to one side vs the other. The Core part was bad because it is not part of .NET Core, but rather a library and isn't special any more than other libraries like Kestrel, XUnit, NewtonSoft.Json, SharpZipLib, and so on. --- If they wanted to give a nod to certain roots they should have named it something like "Anchor." They could have even come up with a backronym like "Asp.Net Core Hypertext Operation Resources" 
I'm not familiar with these courses, because I learn mostly over google/stackoverflow/youtube, therefore I can give you *my* source: [AngelSix](https://www.youtube.com/channel/UCJ3AxeCHGPZkMi3kRfCuiHw/playlists) on YouTube has some good videos/playlists covering the basics of C# and advanced WPF applications. Here two other YouTube channels with (good) C# content: * [Derek Banas](https://www.youtube.com/playlist?list=PLGLfVvz_LVvRX6xK1oi0reKci6ignjdSa) * [IAmTimCorey](https://www.youtube.com/playlist?list=PLLWMQd6PeGY3t63w-8MMIjIyYS7MsFcCi)
Personally I'd go for some .net MVC pattern. Sorry if I came across badly before i don't have anything against javascript, using it with other things like firebase.etc is awesome but... That's a lot of people hitting your website so you want peace of mind really.
Based on what your code currently looks like, I imagine it would look something closer to this to init: https://pastebin.com/kHtYdP5M
I actually agree with irwin's assessment ManagementObjectSearcher searcher = new ManagementObjectSearcher("root\\CIMV2", "SELECT * FROM Win32_PnPEntity"); foreach (ManagementObject queryObj in searcher.Get()) { Console.WriteLine("Name: {0}", queryObj["Name"]); Console.WriteLine("Status: {0}", queryObj["Status"]); } is one example, and the comparison was: WMIHelper helper = new WMIHelper("root\\CimV2"); var devices = helper.Query("SELECT * FROM Win32_PnPEntity"); And you go on to say, "You see the difference? Two lines of code," where the first does the same thing in two lines of code also. I think highlighting the ease in which you can access the values without knowing the names is super wonderful (and I say that as I've spent my day with WMI), but it's not apples to apples.
If I need a start &amp; stop method, what does the code which you put inside the main method do? Also, how do I determine what to put inside the start &amp; stop methods? I just want the service to start automatically when I turn on my PC &amp; stop when it shuts down...
ASP.NET 5 **is** ASP.NET Core. It was the name used during development, and a few years ago it was renamed to ASP.NET Core.
It's not very different conceptually from asp.net 5, because asp.net 5 is asp.net core. It was the name used during development of asp.net core.
&gt;"MVC" was bad because it is dozens of libraries covering a wide variety of features (Identity, compression libraries, templating, hosting, etc). The meaning of MVC hasn't really changed between ASP.NET MVC 4 and ASP.NET Core MVC: it's a server-side framework for websites vaguely following the MVC paradigm. All the other stuff is more or less ancillary to that. &gt;The Core part was bad because it is not part of .NET Core Ultimately, they called it Core because all their fancy new stuff is called Core, much like, y'know, [lots of stuff](https://en.wikipedia.org/wiki/.NET_strategy) briefly being called .NET despite having nothing to do with each other. "Core" is the hip new suffix for modern .NET stuff. And ASP.NET, of course, has always been a vague umbrella term for web-related server-side .NET stuff.
Thanks, I’ll look into those.
&gt; If I need a start &amp; stop method, what does the code which you put inside the main method do? The code in the main method helps topshelf know how to configure and run the service. The `Start` and `Stop` hooks correspond to code that is executed when the service is told to start or stop via the services widget or a command from powershell/cmd. &gt; Also, how do I determine what to put inside the start &amp; stop methods? Think about what needs to get cleaned up. If something implements `IDisposable` it should probably be cleaned up in a stop. If you're dealing with an application that has any State that needs to be saved, `Stop` would be a good place to put 'last resort' code of that nature. &gt; I just want the service to start automatically when I turn on my PC &amp; stop when it shuts down. That's based on how you run [your installer](http://docs.topshelf-project.com/en/latest/overview/commandline.html). If you do `myService.exe install` it should do just that. &gt; The code you gave me restarts the service every minute, I don't want that as there's some instances where I might have 2 notifications display within a minute. I know that Topshelf's docs aren't on par with, say, Akka.NET or SimpleInjector, *but* [if you did some reading on the API](http://docs.topshelf-project.com/en/latest/configuration/config_api.html#service-recovery) instead of trying to follow a SO post without larger context, you would be able to see that that the code in question configures how the service restarts in the event of a crash (i.e. if your application fails with an unhandled exception.) &gt; Isn't there a sample script that I can just copy? Please please please don't start throwing things around like *constantly running background services* unless you understand what you're doing and the APIs you are working with. If you want to do a simple sample script, I'd look up how to do a Dialog box from Powershell or VBScript, and just use Task Scheduler. If I want to write a C# app I'll understand what I'm using as a tool.
ASP.NET MVC 5 != ASP.NET 5. ASP.NET MVC 5 is the last version of classic MVC. ASP.NET 5 was what Core was called during development.
ASP.NET MVC 5 != ASP.NET 5. ASP.NET MVC 5 is the last version of classic MVC. ASP.NET 5 was what Core was called during development.
That's why 1.5/2.0x speed is your friend.
My code just shows notifications at certain times so I think nothing really needs to be cleaned up or saved in stop but I'm not sure what to put in the start method. Here's what I done so far: [https://i.imgur.com/hMag7NY.png](https://i.imgur.com/hMag7NY.png). I need a service because I want the code to run in the background so it can't be disabled or viewed by the user, I've already tried doing it the task scheduler way.
You are so damn right about how hard is to learn design and architecture! One thing I did that helped me a lot was to read something like Wikipedia's MVC article and then tried to apply the concepts in a small program with simple requirements. Do you know good resources (courses, talks, articles) worth time?
Another learning approach is to find an enterprise-level app on Github that does at least some of what you want to learn, then download it, break it down into pieces, and dissect each piece. Start small and work your way up.
This quickstart is probably the best starting place: [http://docs.topshelf-project.com/en/latest/configuration/quickstart.html](http://docs.topshelf-project.com/en/latest/configuration/quickstart.html) You would implement the `TownCrier` class and probably follow the example of setting up a timer. Then when the timer elapses, you can do a thing! 😀
my guess is the designers knew they can't predict run-time behavior with regards to polymorphism and inheritance in all scenarios so they probably just erred on the side of caution. I mean, if you're using interfaces, you want those interfaces to be propagated to your DI Container anyways so, if that's the case, CodeLens is doing it's job. 
You could return a tuple containing your two values. You should probably avoid using ref in general.
I haven't heard that before is there a reason to avoid it in general?
&gt;One of the features of the most recent version of .NET, not included in Unity, is a Tuple type. 
If intOne and intTwo are logically related, why don't you put them as fields in your own class and then pass as single parameter and return from a function as single parameter?
Do you know how to use ref and other parameters together? I cannot use tuples in Unity and am just trying to get two variables to be returned from a function, but I need to pass variables into the function too.
I mean at the very least you can create a class that has all the properties you need to return and return that but it seems like overkill to me. I'm pretty sure tuples are supported I'd be very surprised if they aren't 
I haven't got to learning about classes yet and am very new to C#, but have a ton of experience with lua. In lua getting a multiple outputs was trivial, so I had that in mind when I started looking for how to do it. This is the actual code that I am working on. I am trying to get the distance and hit position returned. I was using return until I realized that I needed the hit position too. float GetDistance(ref float dist, Vector3 pos, Vector3 up) { Ray ray = new Ray(pos, up); RaycastHit hitInfo; float distance = 0; if (Physics.Raycast(ray, out hitInfo, 40, mask, QueryTriggerInteraction.Ignore)) { distance = ray.origin.y - hitInfo.point.y; Debug.DrawLine(ray.origin, hitInfo.point, Color.red); } else { distance = 0; Debug.DrawLine(ray.origin, ray.origin + ray.direction * 40, Color.green); } dist = distance; } void FixedUpdate () { Vector3 fPos = transform.position + transform.forward; Vector3 bPos = transform.position - transform.forward; Vector3 down = new Vector3(0, -1, 0); float distanceF = 0; float distanceC = 0; float distanceB = 0; GetDistance(ref distanceF, fPos, down); GetDistance(ref distanceC, transform.position, down); GetDistance(ref distanceB, transform.position - transform.forward, down); 
Color me surprised.
 AdddF(ref myIntOne, ref myIntTwo, 1); The ref keywordgets added to all ref parameters in the arg list, and you're missing a semicolon. In the future, include whatever errors the compiler is giving you. You might also benefit from passing in and return a struct or something, instead of refs.
But back to the code you posted you're missing the ref keyword when you pass intTwo into your function. I thought that would be a compiler error but I think that may be causing some of your headache 
 public class MyParameters { public int One { get; set; } public int Two { get; set; } } class Program { MyParameters AddF(MyParameters par, int intParam) { par.One += intParam; par.Two += intParam; return par; } void Start() { var myParams = new MyParameters() {One = 1, Two = 1}; var result = AddF(myParams, 1); } }
Is using a ref along with other parameters not possible? Nobody has addressed that and I don't know if I am doing it wrong or if it can't be done. I might go back and replace it with a class once I figure out how classes work (any help there would be appreciated), but right now I just want to try to work on the thing that needs the two variables and am trying to stay focused on that. 
It is absolutely possible the problem in your code is that when you call AddF( ref myIntOne, myIntTwo, 1); you forgot to add the ref keyword to your second parameter myIntTwo. It should be AddF(ref myIntOne, ref myIntTwo, 1); look at u/Canthros answer
Thanks, but I never actually ran that code. I tried to type a simple example because I am trying to ask if the ref parameter can be followed by other parameters. 
So you posted code that you were unsure of without actually running it...? I admire your caution but C# has some really helpful compiler errors, that I think are worth while to look at before asking for help. 
I think I see how that works. What I am doing is a bit different than my example, so to bring it more in line with that. public class MyParameters{ public int One { get; set; } public int Two { get; set; } } MyParameters AddF(int n) { var myParams = new MyParameters() {One = 1+n, Two = 1+n}; return par; } void Start() { var result = AddF(1); } Would this also work?
Silly person... :) Create an object\class with fields for the data items you want to pass in and receive out. public CustomObject DoSomething(CustomObject customObject){ code here } 
Sorry, I was just trying to ask a general question about how ref works (If it works with other parameters too, because I couldn't find any examples of that online). I thought this would be stupidly simple yes or no question. 
No worries it totally is, the answer is yes you can mix ref params with normal params
Thank you. This was what I wanted to know. I didn't want to troubleshoot the actual problem until I was sure that I understood what I was trying to do was valid. 
Return a new value and assign it from the function. There's not often a need to maintain the exact reference to a value type. If I find myself thinking "I need to to ref here," I probably didn't think about what I was doing 30 seconds ago. 
You can still create a class and return that from your function. 
I used a tuple (I can't use the named ones because I'm using unity) looked at it then just defined a a class instead. The original tuple implementation is a bit clumsy. 
With your help and a tutorial, I understand classes now and everything works.
&gt; public int One { get; set; } These are properties, and are called getter and setter properties respectively. This specific example involves auto-implemented properties. They were introduced to avoid boilterplate code. These are actually compiled to something similar to the following: private int One; public int GetOne() { return One; } public int SetOne(int val) { One = val; } Why would you need methods like this? Typically, if you need certain conditions. For example, if you have a double called Balance meant to represent a bank account balance, you could have logic that does not allow transaction that would result in a negative balance. With properties, you can also specify access modifiers. For example, &gt; public int One { get; private set; } In this case, reading the value of the variable is possible to anything that can access the class, but writing a value to the variable is only possible to code inside the class (there are other cases where you can access a private variable, but I find them hard to explain). The compiler takes these properties and compiles them into methods (`public int GetOne()` and `public int SetOne(int val)`) and a backing field `private int One;`, like the first example I showed. So, if you did something like this: var one = new OneExample(); one.One = 5; Console.WriteLine(one.One); Because `One` is a property, you aren't actually reading/writing a variable, you are calling methods. This is why you cannot use properties with `ref` and `out`, because `this.One` is calling the method `this.get_One()`.
True, a named tuple is just more convenient.
Oh sometimes that makes it sound too weird, but it does help get over the slow bits :)
This: create a simple struct, which hold the two values you want to return.
I know you said you prefer reading, but honestly Kevin Dockx's courses on API and REST are amazingly good, I can't recommend them enough
I haven't used it in a while, but I believe Unity is using mono with C# 4, so no tuples.
Just return a tuple. 
Tuples get messy and gross fast 
OP is using Unity, so, apparently, tuples are out, but using a tuple (with names!) to return two values within a single assembly ought to be A-OK unless things get weird.
I forgot named tuples exist now 
What is worse, coding every possible solution or sticking with the default names for controls?
Silly is a bit condescending. This person is trying to learn, and calling them silly isn't necessary it very nice. Also, I'm not sure what version of C# Unity supports, but you could also use tuples. https://docs.microsoft.com/en-us/dotnet/csharp/tuples In fact, if I was doing a code review that had a custom class/struct just to return multiple values, I'd make a suggestion for tuples.
Is it inefficient to return a small int array? 
Can confirm his courses are excellent. We also hired him a couple of times as a consultant and I can only talk positively about him. The guy knows his material.
I didn't realize you were using C#4, so yeah, no tuples. I'd just create a container, if you're going to persist these values for a while, or keep a very many of them in memory, use a small class. If you're going to consume and discard the values pretty quickly, use a struct. Ref parameters are usually to be avoided because they have non-standard behavior that affects the caller (and have unintended/unexpected consequences). If you're in your own project scope, it's not as bad, but if other people or applications are going to use the code it can make a difference. Imo, it's better be in the habit of using standard behavior. So pass back multiple values in a container rather than passing the actual references. I'm sure someone more eloquent then I am can give a better explanation. As for out parameters, that's kind of the same boat as ref. Though I have to say the only time I use out parameters are in TryParse calls, so I'm not an expert on those.
Honestly, that's an incredibly shitty attitude to have. Asking for help before you've even bothered to try to fix it yourself, without the real code and without your actual problem is really fucking rude. 
It is a bad idea to modify parameters, and can be avoided in many cases. Why not just create a class (SomeFunctionResult) that wraps everything you need? Much less likely to cause pain. Read about side effects and pure functions to learn more.
If you indent code by multiples of 4 spaces in your comments the code is readable. void main() { SeeThis(); } silly person. 
You'd need to use reflection as per the [marked answer on stackoverflow] (https://stackoverflow.com/questions/7613782/iterating-through-struct-members) I would, however, seriously question if a struct is appropriate given that iteration is required. An array or other collection may be more suitable depending on what you're doing.
If you have a struct like public struct Thing { public string Field1; public string Field2; public string Field3; } And a local variable of that type, `localThing`, you can set the fields like localThing.Field1 = ""; localThing.Field2 = ""; localThing.Field3 = ""; If you had a collection of those (say, a `List&lt;Thing&gt;` named `listOfThings`), you could do the same thing inside a foreach loop: foreach (var x in listOfThings) { x.Field1 = ""; x.Field2 = ""; x.Field3 = ""; } *but* string.Copy() doesn't work the way you're suggesting in C#. If `Thing` implemented IEnumerable&lt;string&gt;, you could maybe use a foreach loop to walk through the fields on the object, but you wouldn't be able to change their value through that interface.
You should consider using an immutable struct instead. Let any change result in a new copy of the entire struct. DateTime works this way. If you modify it, you will receive a copy, with the original left unchanged. It is what I would expect from a struct. And you can find many creepy stories on the web about what mutable structs lead to.
I'm reading "Programming ASP.NET Core" by Dino Esposito and, for now, seems quite good and well written. It's been published on May and it's totally focused on .NET CORE 2.0. 
You're right. I apologize.
Found this article today that's related to your question... https://blogs.endjin.com/2018/06/garbage-collection-a-memorandum-on-memory-in-csharp/
I doubt OS will give you the password under which the service is running. But in domain you don't really need this. How about SmtpClient client = new SmtpClient("IP Address of mail server"); client.UseDefaultCredentials = true; client.Send(message); 
 I can't find the example of setting up a timer, where is it? I just want the service to start automatically &amp; only stop when I shut-down my computer. I'm planning to run it on a non-admin account but I'm going to do something to the file using an admin account that requires changing or even deleting the service. Also, do I put the service code inside the console application code? Or will I need to turn the console app into a .exe &amp; then make a service which runs the .exe file?
 In general: https://docs.microsoft.com/en-us/dotnet/core/docker/building-net-docker-images . If the sdk version isn't what you want: Looks like core sdk 2.1.200 supports c# 7.3. There are installation instructions here https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.200-sdk-download.md. 
Thanks, I'll have a look with the guy who manages the docker. I think we are running on 2.1 docker image (microsoft/dotnet latest), so I didn't expect to install an older SDK and thought it might "just work". 
I will give it a go, thanks
If you're running the latest microsoft/dotnet docker image (`2.1-sdk`, right?) then you can already use C# 7.3. I would guess that what you're missing is the setting in the project to enable it. Try setting `&lt;LangVersion/&gt;` to `latest` or `7.3`. 
this is great!
how cool is that? i love this!
thank you!
thank you all i love these responses. now i have a couple of directions to head in next. 
A Dictionary seems more appropriate Dictionary&lt;string, string&gt; myvars = new Dictionary&lt;string, string(); myvars.Add("FieldName", "FieldValue"); foreach (string fieldName in myvars.keys) { Console.WriteLine(myvars[fieldName]); }
I think the problem is that there are four sets of AddItem: 1. SomeHelper.AddItem() 2. IHelper.AddItem() (where IHelper is SomeHelper) 3. IHelper.AddItem() (where IHelper is not SomeHelper) 4. OtherHelper.AddItem() But the compiler can't tell the difference between 2 and 3, as it might be a runtime decision. So, when you find all references, which do you want? a. 1 b. 1 + 2 + 3 c. 1 + 2 + 3 + 4 If you pick a, then you're missing other possible references, which would be really bad if you're trying to refactor. So it gives you b (I think).
I set it to 7.3 in the project expecting it to work but it didn't, maybe we are using the wrong image. We use "FROM microsoft/dotnet:latest AS build". Is there a "-build" equivalent we should be using instead? 
The official MS docs are a good place to start.
I was sort of in a similar situation. Started my career as someone really skilled with front-end stuff. Was using .NET Web Forms for a couple years. Move onto more front-end projects... Eventually my back-end skills in C# surpassed my peers (at the time) and I'm now primarily a C# dev. I played around with Laravel (which I highly suggest as answer to your question) - which is fantastic. But, as a C# dev, I can't transfer my knowledge totally. All that to say, .NET Core is the way to go if you know C#. If not... I would suggest picking a language and spending a while really coming to understand it (i.e. master it). If Javascript works for both ends (front + back), maybe start with that. Also take into consideration jobs in your area. But ya, for me, ,Net Core is da bomb.
 I was able to get it to work using: docker run -it -v %path_to_your_local_project%:/app microsoft/dotnet then root@c05ce68de9aa:/# cd app/ root@c05ce68de9aa:/app# dotnet build Microsoft (R) Build Engine version 15.7.179.6572 for .NET Core Copyright (C) Microsoft Corporation. All rights reserved. Restoring packages for /app/DockerCSharp7_3.csproj... Installing Microsoft.NETCore.DotNetAppHost 2.1.0. Installing Microsoft.NETCore.DotNetHostResolver 2.1.0. Installing Microsoft.NETCore.DotNetHostPolicy 2.1.0. Installing Microsoft.NETCore.Targets 2.1.0. Installing Microsoft.NETCore.App 2.1.0. Generating MSBuild file /app/obj/DockerCSharp7_3.csproj.nuget.g.props. Generating MSBuild file /app/obj/DockerCSharp7_3.csproj.nuget.g.targets. Restore completed in 6.9 sec for /app/DockerCSharp7_3.csproj. DockerCSharp7_3 -&gt; /app/bin/Debug/netcoreapp2.1/DockerCSharp7_3.dll Build succeeded. 0 Warning(s) 0 Error(s) Time Elapsed 00:00:10.39 root@c05ce68de9aa:/app# dotnet run The value of 'j' is 1 Hello World! &gt; DockerCSharp7_3.csproj &lt;Project Sdk="Microsoft.NET.Sdk"&gt; &lt;PropertyGroup&gt; &lt;OutputType&gt;Exe&lt;/OutputType&gt; &lt;TargetFramework&gt;netcoreapp2.1&lt;/TargetFramework&gt; &lt;LangVersion&gt;7.3&lt;/LangVersion&gt; &lt;/PropertyGroup&gt; &lt;/Project&gt; &gt; Program.cs using System; namespace DockerCSharp7_3 { class Program { public class B { public B(int i, out int j) { j = i; } } public class D : B { // out parameters in constructors are a new 7.3 feature public D(int i) : base(i, out var j) { Console.WriteLine($"The value of 'j' is {j}"); } } static void Main(string[] args) { var d = new D(1); Console.WriteLine("Hello World!"); } } } 
Traditional ASP.NET has its place in the industry as it has been around for more than a decade and is used in many enterprise systems, but it doesn't offer many advantages for new novel stand alone systems. For entrepreneurial goals I would only consider ASP.NET Core running on .NET Core today. You are asking this question in the C# Reddit, so you are going to get a answers weighted towards favoring .NET. That said, there are definitely some benefits to learning the platform. ASP.NET Core has much better performance than Nodejs and that might be important for entrepreneurial systems where managing your early hosting costs could be a make-or-break deal. ASP.NET Core with an open source data store technologies (postgres, sqlite, mariadb, mysql, elasticsearch, redis, cassandra, mongodb, etc..) running on a linux VM with proper caching can support a large number of users per dollar invested. You can develop using a free VSTS account to auto deploy your application, or a free tier of Azure App Service (maybe for a test/CI environment at least) and use Visual Studio Code to develop both your C# and TypeScript/JS code and to do your commits to avoid the cost and hassle of using/installing VS (though its a great tool too). You will likely find ASP.NET Core development simpler and more productive than WPF development. While WPF was a great system, it had more gotchas and very little of the development transferred to other systems, whereas when building applications using ASP.NET Core about 70% of the work is just generic web development using HTML/CSS/JS and frontend frameworks like React, Angular, or Vue. You only really use ASP.NET Core for the Web API, push/hub messaging (using SignalR), for configuration of environments (test vs production) and for hosting the front end files. From that standpoint, if I were you, I'd create some simple web apis in parallel on Nodejs/express and in ASP.NET Core and see which one is easier for you to work with...most of the front end approaches won't change much no matter which tool you use to host and run your API.
I haven't used Laravel myself, but a dev that left our team touched base with me and said he was working with it, and it was light years ahead of where old-school php development used to be and he highly recommended it. I have no personal experience with it though.
I don't think you need to do anything special. It works just fine for me with `microsoft/dotnet:2.1-sdk`: $ docker run -it --rm microsoft/dotnet:2.1-sdk root@b5be874ad6b8:/# mkdir app root@b5be874ad6b8:/# cd app root@b5be874ad6b8:/app# dotnet new console Getting ready... The template "Console Application" was created successfully. Processing post-creation actions... Running 'dotnet restore' on /app/app.csproj... Restoring packages for /app/app.csproj... Generating MSBuild file /app/obj/app.csproj.nuget.g.props. Generating MSBuild file /app/obj/app.csproj.nuget.g.targets. Restore completed in 536.16 ms for /app/app.csproj. Restore succeeded. root@b5be874ad6b8:/app# sed -i '6i&lt;LangVersion&gt;7.3&lt;/LangVersion&gt;' app.csproj root@b5be874ad6b8:/app# sed -i '9cSpan&lt;int&gt; arr = stackalloc [] {1, 2, 3};' Program.cs root@b5be874ad6b8:/app# dotnet build Microsoft (R) Build Engine version 15.7.179.6572 for .NET Core Copyright (C) Microsoft Corporation. All rights reserved. Restore completed in 78.59 ms for /app/app.csproj. app -&gt; /app/bin/Debug/netcoreapp2.1/app.dll Build succeeded. 0 Warning(s) 0 Error(s) Time Elapsed 00:00:08.68
Thanks. You're a good dude.
I would suggest learning asp.net core. The concepts are very similar but core seems to be the way everything is moving. I would also suggest learning c# in depth before doing either.
I'm not really sure if winform experience has ever been that marketable of a skill. I would think WPF is more marketable. Let's hope web-forms support isn't coming next.
Wooo that’d be fantastic, I love win forms!
/u/phuber , /u/svick Hi, thanks for you responses, we just realized that its not the initial build that fails, it the call to publish. So 7.3 is there but something isn't quite right :S &gt;RUN dotnet publish -c Release -o out FROM microsoft/dotnet:latest AS build WORKDIR /app COPY . . RUN dotnet build Name.Api.WebService/Name.Api.WebService.csproj FROM build AS publish WORKDIR /app/Name.Api.WebService RUN dotnet publish -c Release -o out 
.NET Core all the way. A bit of Docker and some Node. My preference. .NET Core for back end services and Node to host the front end. You can do either in either, but I like the separation it gives, plus I have C# skills so it makes sense to me. Start with a project idea, reimplement Facebook or Reddit or something if you can't think of anything. Courses will fill your head with disconnected concepts, writing software will force you to research the useful bits and then glue them together, both in the software and your head. Don't feel like you have to know anything in depth before starting. You just won't know anything in depth if you don't use it. That said, reading the odd recommended book, or watching a few videos while writing code will help you decide what to read/watch and you'll benefit more.
If you want to take you winforms skills to the web you should look at Wisej.
.NET Core is where things are moving toward and the stuff you learn there you can always pick up easily if you're doing something in .NET Framework. Also the documentation Microsoft has been doing lately when they moved it over to Github has been absolutely stellar and it feels like the .NET Core documentation is updated all the time now that their documentation is open source and you can make your own pull requests to update things that may not make sense when you're going through them.
What's the error message?
"Error CS8107 Feature 'enum generic type constraints' is not available in C# 7.0. Please use language version 7.3 or greater." 
I can't check the courses right now but this question does not make sense anymore. It was a good question 2-3 years ago but today just go for ASP.NET Core
That usually means your csproj does not specify `&lt;LangVersion&gt;` correctly. Maybe it's conditionally specified only for the `Debug` configuration? --- Also, what's the point of having a two-stage build like this? I don't see any reason to have a separate `dotnet build` stage at all. I have seen a separate `dotnet restore` layer (not even a stage) and that makes sense if it only depends on your csproj file, since it means when that file doesn't change, that command doesn't have to be rerun. But I don't see how similar logic could be applied to `dotnet build`.
Thats kinda how razor pages seem to me. Except theres no session state per se (unless you count 2 way binding as session state) and theres no gui editor. 
Why do you want to do that? What is the underlying problem that you're trying to solve?
[Your `foreach` code won't compile:](https://sharplab.io/#v2:C4LglgNgPgAgDAAhgRgCwG4CwAoHMDMCAzsAE4CuAxsAgCoAWYAdgOYIDeOC3ShKiAMTABTCABNkWbD15JkgkeIBMUmQTkLRY/FIC+OPEoQBhDlx4xUCALIAKADJgSAHgbMWAPgQQnwAPIAZm6sRACUZtIyPAEA9qTCAIaU9Ai2AG4JpAgAHgjM3r6BwSxhEVHlOQB0QlrICAC8CABETaoVMtnVimJGjS1t7dydNeKEfa3m5fqR3NO6QA===) &gt; error CS1654: Cannot modify members of 'x' because it is a 'foreach iteration variable'
huh, TIL (more like I once knew, then forgot). Thanks!
Really? There is probably more enterprise WinForm code out there (by far) than any other desktop UI platform. A metric asston of stuff got moved from VB6 to C# WinForms in the mid '00s and a lot of that is still being actively developed.
I guess the language version element was missing. I thought I had verified it in both Debug and Release, but reverting changes and starting again, "it just worked". I'm not sure why there is an extra build. Things still work if it is removed. I just created a new project with VS with docker support enabled to see what it puts in the dockerfile. It seems to build 3 times FROM microsoft/dotnet:2.1-aspnetcore-runtime AS base WORKDIR /app EXPOSE 54645 EXPOSE 44306 FROM microsoft/dotnet:2.1-sdk AS build WORKDIR /src COPY WebApplication2/WebApplication2.csproj WebApplication2/ RUN dotnet restore WebApplication2/WebApplication2.csproj COPY . . WORKDIR /src/WebApplication2 RUN dotnet build WebApplication2.csproj -c Release -o /app FROM build AS publish RUN dotnet publish WebApplication2.csproj -c Release -o /app FROM base AS final WORKDIR /app COPY --from=publish /app . ENTRYPOINT ["dotnet", "WebApplication2.dll"] 
&gt; Seems a bit pointless. This is, IMHO, a clear indicator that they plan on eventually deprecating .Net Classic and moving the entire installed base over to .Net Core. They can't do that without their enterprise customers that have a ton of legacy WinForm code and those customers don't care about cross platform desktop.
True, you could move your platform independent bits to .NET Core if you wanted. My choice on using it or not would be based on my trust in their commitment to .NET Core. I am not fully convinced about this after Silverlight, but I am guessing they are more committed this time.
The Memory/Span stuff hitting core and not yet hitting Standard or Classic was a huge warning sign of where things are headed. Core is clearly where the R&amp;D effort is being spent.
Removed: Rule 4. You'll have to parse/read the XML properties then add each property value to their respective columns. You already have there the code to add parameter values to your SQL query, so change the query to use multiple parameters and set each value individually.
I haven’t followed things closely the last few years, but that sounds like it makes sense, thanks for sharing the insight. I started investing in.NET Core more on a gut feeling and all the chatter not too long ago.
Bother. It works with a class, but I guess I don't mess around with mutable structs enough. Attempting to do this with a for loop and indexing results in a warning, because it would result in a copy of the object being changed, and not the original object: for (var i = 0; i &lt; listOfThings.Count; i++) { listOfThings[i].Field1 = ""; // also won't work. Compiler issues warning "Cannot modify the return value of 'List&lt;Thing&gt;' because it is not a variable" } So, one thing that *does* work is to use a for loop, assign the value to a local variable inside the loop, update the variable, then *assign the variable back to the position in the collection*: for (var i = 0; i &lt; listOfThings.Count; i++) { var local = listOfThings[i]; local.Field1 = ""; listOfThings[i] = local; } Which works because it creates a copy in the local variable which *can* be trivially updated, then copies the copy back to the original location. If the extra copies are a huge deal, you could use an array, instead var arrayOfThings = new Thing[10]; // whatever other initialization you have goes here for (var i = 0; i &lt; arrayOfThings.Length; i++) { arrayOfThings[i].Field1 = "FOOBAR"; } but that *only* works if the collection is an array, because arrays are special. If you get farther into the weeds, this would also work if the collection indexer had a ref return, but I don't think many of the built in collections do that, yet (except arrays and Span&lt;T&gt;, maybe none). The better advice (as others already noted) really is to make readonly, immutable structs, at least in the general case.
&gt; I just created a new project with VS with docker support enabled to see what it puts in the dockerfile. It seems to build 3 times I think that's not necessary, so [I asked about it on ASP.NET Core GitHub](https://github.com/aspnet/Home/issues/3273).
But doesn't that mean it's going to be open source and the community can work on porting it to other plattforms? Or is this still too much effort, and it's easier to write an own solution from scratch?
:D
My man, I just went through this last year! JS and .net core def the way to go. Don't get bogged down in one over the other, learn the basics of programming and object orientation with JS, maybe play with a little JQuery, then learn the basics of C# syntax and .net core MVC and Visual Studio, and if you want to work on a team, Git and GitKraken. [Lynda.com](https://Lynda.com) programming fundamentals, latest C# and .net core courses are great. [Sololearn.com](https://Sololearn.com) is great MS documentation is great: [https://docs.microsoft.com/en-us/dotnet/core/](https://docs.microsoft.com/en-us/dotnet/core/) [https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/razor-pages-start?view=aspnetcore-2.1](https://docs.microsoft.com/en-us/aspnet/core/tutorials/razor-pages/razor-pages-start?view=aspnetcore-2.1) This concise book is fucking awesome: [https://www.recaffeinate.co/book/](https://www.recaffeinate.co/book/) And lots of youtube videos to fill in the gaps when you don't understand something the way someone is explaining it in one video. I can't tell you how valuable it has been to just google when something seems confusing and get 2-4 different peoples ways of explaining something. Also if you can find a good JS or C# meetup. I found one and it's invaluable to ask a question and have several people respond and talk about it amongst themselves and be able to respond to other peoples questions too. I've learned soooo much by talking to other humans face to face or over vid/screenshare. Hope that helps my man! Also just stick with it consistently and persistently and regularly. Too many people give up when it gets hard. Cheers and good luck
Even the large scale corporations that keep legacy programs around are starting to slowly move towards .Net Core 2.0. Many were reluctant at first, especially because of all the issues and libraries that were missing. But since 2.0 and 2.1 are so feature rich now, the incentive to move to something with more performance and something that works better with the rest of the web (such as SPAs), many large scale companies are moving there now. I would highly recommend moving towards .Net Core, especially since there is now a lot of learning material out there to get up to speed. I remember starting in beta and you basically had to figure out everything on your own when there were literally no guides.
I hadn't noticed at first that it was on the desktop only portion... and so, after seeing that I agree with w0ut that it seems a bit pointless especially since I was under the impression that currently any .net core code could be referenced from .net standard code but not vice vesa... Am I wrong in that .net core can be referenced from .net standard, or do you mean to say that eventually .net standard is likely to disappear with only the desktop package in it's place? 
WinForms, WPF and UWP all heavily depend on the underlying Windows APIs. Without those APIs (Win32, DirectX and UWP itself) the .NET code is largely useless. The majority of WinForms code is just glue between .NET methods and events and Win32 calls and window messages. WinForms and WPF are already open source [as part of the reference source release](https://referencesource.microsoft.com/#q=system.windows.forms) a couple of years ago, by the way.
I think you are confusing .Net Standard w/ .Net Framework. Standard is the set of core APIs that can be used by any of the higher level runtimes (Framework, Core, Xamarin). So what I'm suggesting is that the classic .Net Framework that ships with windows will eventually disappear and be replaced with .Net Core. Among the bigger gates to this are the enterprise customers with WinForm/WPF desktop apps and this is why I think they are even considering a .Net Core version of WinForms.
Has anyone ever purchased anything from the Windows 10 store?
I did have an actual problem and I did try to troubleshoot it. I wasn't asking anyone to code anything for me or fix anything. I was asking if I understood a concept to fix it myself, because I had an error and had absolutely no idea what I was doing. I seriously regret asking the question. The entire process was insulting and unhelpful, with the exception of two comments. I haven't needed to ask for help coding in years and hopefully I can learn C# fast enough to never need to deal with this again.
I would jump straight into code. ASP.net mvc 5 is easy to pick up, and your core knowledge can be transferred back. 
it's relevant in almost the same way that php is still relevant. there's a shit ton of legacy code to maintain and there will be plenty of jobs available for the long foreseeable future. php has a leg up on winforms and that it's still being actively improved, while winforms is really just being supported in maintenance mode. wpf, and to some extent uwp, would be the more relevant .net desktop ui framework to know. that .net core support is really just designed to allow people that maintain legacy apps to use .net standard/core libraries that will be developed going forward. microsoft has been doing a few things to make migrating to .net standard/core as easy as possible for everyone and this is the latest one.
It generates a json documentat and a UI, but from there you can also autogenerate clients for almost any programming language.
&gt;This concise book is fucking awesome: https://www.recaffeinate.co/book/ I can't recommend this book. I have worked with it, and tried to teach from it and it makes simple things complicated and painful. Instead of getting the CRUD out of the way by using the Scaffold from the models, he tediously writes it out page by page. Sure he's trying to show how it works, but wtf. nobody does that. you just lose your mind trying to follow it. Its a poor way to teach creating an app, and showing the principles. A better way is just to make it, which takes 5 minutes for a simple CRUD program. learn the tools to whip something out. Then learn whats happening when you mod it. 
I published some apps in Windows 8 and Windows phone 7 store when I was in uni. Got paid ~$200 in total for really shitty apps lol.
&gt;Really? There is probably more enterprise WinForm code out there (by far) than any other desktop UI platform. I mean if your only choice is Winforms, you'll use winforms. As was the case for a very long time. So of course it's widespread. Doesn't make it a very good or maintainable framework though.
The comment/question wasn't on the merits of WinForms- it was if WinForms was a marketable skill. 
iuiukukauio9ioi9
Having done a little bit of both I would say learn ASP.NET first, because Core is basically ASP.NET but easier. I think the hardest thing by far when learning it is figuring out what the magic code created but the template is actually doing for you.
&gt; If you get farther into the weeds, this would also work if the collection indexer had a ref return, but I don't think many of the built in collections do that, yet (except arrays and Span&lt;T&gt;, maybe none). Taking that even further, in C# 7.3 [the following code can also work](https://sharplab.io/#v2:C4LgbgpgTglgZgTwD4AEBMACFBGA7BgbwFgAoDcrAFgwFkAKASkNItYzAEMoMBjAewA2AiD2Aw+AOwwBeDBIgB3WggDKABxEwOAgMKDho8RIA8AFQAWMCQHMAfIwDcpFm3Jw+UCBx7mMdT3DsXBgAHhhWvPoiYpJMxGSubCEAdABiMBACACbYMhgARPlOCYkUKemZWZiyhcWlrOUZ2QDMebUurgC+HRjdJH2k6Mrqmtp6QtFGZrbMJVitQwCiEgCuALbQHMAes6WmvCtQnhLAdYk9rCitARj7OofHwDIzNzwPECfFFxRXGABGfEEtD4kAAchAQsBGM8MHBtABnCBncgDOa/ZbrTbbbgAcQgwAxGygWw80OkM3kSkJWNJDGKqN+8OAUBWolulhsux+C2wAAYMBVsthkfMsHyBU0qiLfjh+YKss16UA===): foreach (ref var x in collection) { x.Field1 = ""; x.Field2 = ""; x.Field3 = ""; } But, similarly to what you said, it requires a special kind of collection and none of the built-in ones quality (not even arrays).
butWhy.jpg. Seriously. Structs are meant to be *immutable*. If you want a mutable type you should be using a Class. If you really want a struct for some reason, you're better off making a method that gets all the pieces, and just makes the struct at the end.
&gt; This is, IMHO, a clear indicator that they plan on eventually deprecating .Net Classic Which is called .NET Framework, and I agree. 
WinForms is just a thin shell on top of win32, so it doesn’t really matter if it’s open source or not. 
Which is a horrible name that confuses everyone :)
In all fairness, IIRC MVC 5 wasn't a completely seamless upgrade. Breaking changes would warrant a full version bump.
Oh, sorry. In that case yes. Even carving words on stone tables is a marketable skill in the right region and field. There is always a need for legacy application support.
&gt;it just worked Story of every developers life. 
No one is carving words on stone tables in 2018. However a lot of WinForm code is still being written in 2018.
Basically this is painless. I think there was a post of scott hanselman about this a while ago. (Desktop Bridge) what kind of apps do you want to port to the store and what exactly do you mean by ‘converting’ ? 
These applications mainly do very basic manipulations on images. Another idea was to make a few dumb games. I was just wondering if the whole converting from a WinForm or WPF app to deploy to the WinStore was pretty easy for anyone that has prior experience to doing it.
What I have bought: - Drawboard PDF - Paint.Net all other apps are basically free would also like to pay for a lot of other apps, like Inkscape, Unigram
Any other method would be appreciated as well.
I bought a sweet IRC client for $10 from the store. It just works way better than anything else and it installs itself almost instantly when I want to use it on a new machine. It's kind of like I have an IRC client built into Windows now, which is completely worth it to me.
Yes.
If you want to balance your efforts between useful &amp; polluting the app store, I'd look to see if you can port some existing open-source apps for practice; then leverage that experience into building full apps.
Thats pretty much the goal :D
Just don't be a jerk &amp; pass off someone's code as your own. Link / offer necessary sources, and invite good feedback. 👍
&gt; I am not fully convinced about this after Silverlight As far as I know, Silverlight was never at the forefront of .Net development, the way .Net Core is now.
It's exactly the other way around. You can reference .Net Standard code from .Net Core code, but you can't reference .Net Core code from .Net Standard code. That's the whole point of .Net Standard, that you can reference it from any compatible framework.
I believe it's not clear yet if it's going to be open source.
You can already use .Net Standard libraries from Winforms applications running on .Net Framework. .Net Standard is not interchangeable with .Net Core.
Which IRC client you've bought?
I don't feel super comfortable being an ad for them, but if you go search IRC on the Microsoft Store then you'll find several options at different prices, some free.
Well... There's only one at 10$. 😂 Cheers!
I published several small games on Windows Store few years ago, and earned like 2$ or something (I don't know how I earned that, because all my games are free. Maybe I published one as a paid game, then changed it to free soon later). The most popular game of mine is [this one](https://www.microsoft.com/en-us/p/zombies-deads-fall/9wzdncrcs28s?rtc=1). It has been download 10k times; and still a few times/day now (keep in mind that I published it since 2014, and has not touched it again). It has been reviewed 66 times in total, but the Store breaks reviews by countries. I stop publishing games to Windows Store because Unity3d has an issue with lighting when publishing UWP (or if I'm not wrong, this platform is not great for gaming; that why Unreal Engine doesn't support it). This issue maybe fixed by now, but I haven't came back yet.
There ya go. Cheers ;)
Ty
For me it was the other way around. It can be finished in an afternoon and I think it provides a good starting point for newcomers. I tried a fair amount of different books and video tutorials but I had the same impression as op that almost all of them assume some sort of knowledge of the framework despite labeling themselves for beginners. Sometimes I would really love to see how many ppl who upvoted or recommended those books/videos are actually using/working with the information gained from there. It is often such a wild incoherent mess of cobbled together information that I have a hard time believing that there is an actual audience for it. 
Great comment! I am in the position of having to learn it and then teach it. So I see a lot of videos and tutorials. I went through this with my studnets, after rewriting the original material to make it more comprehensive ie: what is DI. But it was soooo tedious, with all this repetitive donkey coding that we all hated it. I am now rolling around for the second year, and just writing my own stuff again right now. First we get a site up and running, - a visitors management system - for people coming into a business having to sign in. 2 tables. Then we look how MVC binds together all the pieces Now I am up to moving data between Controllers and Views They can see it all running and we change the created project. Then we will look at creating custom classes that hold our processes, and use DI to link them in to the Controllers. etc
why node for the front-end? 
&gt;No one is carving words on stone tables in 2018 TIL engraving is no longer a thing.
I’ve done development in both. For enterprise apps winforms is by far the better choice for rapid development. It’s basically VB6 level productivity.
I would do that, but I've still never even opened the Microsoft Store. Not sure I want to start now. Not even sure if I can since I haven't created a Microsoft account.
You didn't get the memo? All the stone engravers are now using WPF.
Meh, MS kinda killed WPF as their new shiny toy, and a lot of investment went into Silverlight, which they stuck to until version 5. But then Steve Jobs killed Flash and browser plugins were dead. I guess that factor is not a risk this time.
Open for infrastructure, software, and software architecture consulting and development. I am most experienced with web development, but can code for just about anything (embedded, mobile, desktop). Experienced with enterprise companies, legacy code, SOA, etc. [StackOverflow profile](https://stackoverflow.com/users/1801382/aholmes). Message if you'd like to know more.
Paint.NET is actually also free, if you get it from site. They take money only for Windows Store version as i understand.
Not hard to be light years ahead when you set the baseline at classic sql and html injections and `real_mysql_escape_but_for_real_this_time()`
It definitely was marketable before WPF existed. 😁😁😁 "Ever" is a big word.
Mono has a partial implementation of WinForms. It works well enough for basic usage. It's not really maintained and the official advice is not to use it.
Several reasons, all of which have perfectly good counter arguments for doing it another way, so it's largely a matter of choice. First it separates the client from the server side almost physically. We could do that with two asp.net core projects of course. Second, the development experience for front end feels better when using Node. The documentation is better and the examples are better and more numerous. Third, while you can do .NET in VS Code, I'm used to full VS for C# with resharper or roslynator, etc. However, I've found the VS experience of doing web stuff less comfortable that using VS Code (It's my preferred editor, insert Sublime or vi or whatever you prefer). I also think it helps encourage simplicity in the client. That's really hard to quantify and it's just an experiential thing. 
Did you need an Authenticode certificate? I looked into it about 7-8 years ago, but at that time Microsoft required that the apps be digitally signed. They wouldn't accept the lower cost Comodo ($) certs - had to be either Verisign ($$$) or Thawte ($$). Plus, the whole submissions process back then was a huge pain in the butt.
I thought most people bought lots of things from there. Why wouldn't you? It's a much much much much better install (and uninstall) method than the old ways, and far better for security too. Also you get multiple licenses for your devices it's fantastic. Look up the paint.Net blog on why he has put his app in the store. 
The store Version updates seemlessly and supports the development of it. Much better imo
Haven't yet seen any compelling reason to do so. My applications are what they were on Win 7. Anything I've needed to purchase since then hasn't been through the app store.
We have had over 4 million downloads of some of our free games and over 1 million downloads of our paid games with a 9% conversion ratio. For some context. 
As many have noted, you shouldn't need to do this. If you do then your struct is too large, or a struct is not what you want. However here is a function that allows you to set all fields of a specific type on a struct. It however doesn't cache the compiled code, so it should need some cache strategy in order to be efficient. But at least it doesn't box :P void Fill&lt;T, TValue&gt;(ref T input, TValue value) where T: struct { var inputParameter = Expression.Parameter(typeof(T).MakeByRefType(), "input"); var valueParameter = Expression.Parameter(typeof(TValue), "value"); Expression.Lambda&lt;SetValue&lt;T, TValue&gt;&gt;(Expression.Block( typeof(T).GetFields().Where(x =&gt; x.FieldType == typeof(TValue)).Select(x =&gt; Expression.Assign(Expression.Field(inputParameter, x), valueParameter)).Cast&lt;Expression&gt;()), inputParameter, valueParameter).Compile()(ref input, value); } What this code does it that it creates a function specific for that structure and datatype, and fills every field of the specified type with the specified value. It's called simply by this: Fill(ref myStruct, ""); It will fill every field of the struct with type string with "".
I know, but I was using it for years with out donating so i thought it was time.
I was about to ask for links about how to release stuff to UWP - in case anyone's interested, I found these videos from Microsoft: [https://mva.microsoft.com/en-US/training-courses/developers-guide-to-the-desktop-bridge-17373?l=oZG0B1WhD\_8406218965/](https://mva.microsoft.com/en-US/training-courses/developers-guide-to-the-desktop-bridge-17373?l=oZG0B1WhD_8406218965/)
Interesting. You should look at Win2D, which could make it very easy to rewrite your app. (image effects and stuff), it would also be easy to allow annotations using the InkCanvas. Id love to see more good apps on the store. (I am actually developing one too)
No, I just need an Developer account (I got it free in some promotions for dev); then I signed the game/app from Visual Studio. And 7 - 8 years ago? Was it Windows Store Apps? Because I did not need services from 3rd companies. &gt; Plus, the whole submissions process back then was a huge pain in the butt. Agree. The process (Unity3D -&gt; Visual Studio -&gt; Store) is a nightmare. That also discourage me to continue publishing to that platform.
In your ViewModel that is a BindingContext for your page you declare: public ICommand MySaveCommand { get; set; } = new Command(p =&gt; DoSave()); DoSave is the method that does actual saving. Then your save button xaml can have this to call it: &lt;Button Text="Save" Command="{Binding MySaveCommand}" /&gt; And if you need this to be called when you leave page you declare in page codebehind: protected override void OnDisappearing() { var ViewModel = (MyViewModel)BindingContext; ViewModel.MySaveCommand.Execute(null); } Also i like to suggest you to use Fody.PropertyChanged nuget if you don't already. After you add it you just need to add [AddINotifyPropertyChangedInterface] before your ViewModel class declarateion to have all properties of that class auto implement property changed events on compile. And you can also do this: [AddINotifyPropertyChangedInterface] public class MyViewModel { public string MyTextValue {get;set;} void OnMyTextValueChanged(object before,object after) { //Do something when user change text in a textbox. } } [Here's what else Fody.PropertyChanged can do for you](https://github.com/Fody/PropertyChanged/wiki)
Yes, It should run. However, if it is a critical piece of software I would still test it before shipping. You can do that on virtual machines. You can properly find free trials around the web.
Your powershell knowledge will probably help a great deal as you’ll already know a lot of the .net framework. In c# you’ll just be addressing it slightly differently. Much of the .net documentation on msdn actually includes code examples in powershell, c#, vb, and f#, so for some functionality it’s fairly easy to compare how the syntax differs between languages. Try replicating one of your powershell scripts in c# to get a feel for it, then move on to building apps and whatnot. You have to remember that powershell is an interpreted language and c# is compiled, meaning you can’t treat c# code as a script you can just run. But both use similar paradigms - both are primarily object oriented, but both can be treated more functionally too. Powershell is dynamically typed, but c# is strongly typed (most of the time).
While .NET 3.5 is included in all versions of Windows from 7 onwards it is not pre-installed on Windows 8 or 10 so the user is still going to install it on those. See (here)[https://blogs.msdn.microsoft.com/astebner/2007/03/14/mailbag-what-version-of-the-net-framework-is-included-in-what-version-of-the-os/]
With older .Net frameworks you have to explicitly install it. Windows 10 out of the box doesn't come with .Net 3.5 support. Targeting a later framework would be better or having it compiled with more than just 3.5 will make it so it will run on more machines. 
Sadly you actually need to manually enable .Net 3.5 on Windows 10, which requires either interne t or a Windows disk/image. I can't remember if that's so for Windows 8/8.1. I would suggest targeting 4.0 if compatibility is your concern. Install .Net 4.0 on Win7 is much eaiser. 
But to the best of my knowledge, binaries targeted at older runtimes will run okay on newer runtimes.
If compatibility is key here, write it in c/c++ with no dependencies? Why risk future changes to Windows / .net compatibility breaking your deployment?
.NET 3.5 cannot run under .NET 4.x - I think Windows pops up and offers to install 3.5 the first time you try to run an app written in 3.5.
/u/DeltalJulietCharlie made a similar point but it doesn't seem to be inline with my experience/very brief research. I made a post here if you have any input :) https://www.reddit.com/r/csharp/comments/8uhtn6/i_made_a_tiny_c_program_targeting_net_35_am_i/e1fjqxj/
/u/DeltalJulietCharlie made a similar point but it doesn't seem to be inline with my experience/very brief research. I made a post here if you have any input :) https://www.reddit.com/r/csharp/comments/8uhtn6/i_made_a_tiny_c_program_targeting_net_35_am_i/e1fjqxj/
But as you've seen I don't have any hints of having 3.5 installed in my Program Files, and Microsoft's literature seems to suggest it will be okay. Again, I'm not having a go, I'm just trying to make your points, and my experience, not conflict in my head.
It definitely doesn't work. We have a program that we use to write a bird meeting agenda that targets Windows 10. I had to write a script that installs .Net Framework 3.5 ok no addition to the other frameworks that are already installed in Windows 10. Check to see that you may have already installed the feature without realizing it. https://docs.microsoft.com/en-us/dotnet/framework/install/dotnet-35-windows-10
I probably could have, but this is not a fundamental production thing, it was just a quick test and this Reddit point was mostly just out of curiosity :) I'm very familiar with C#, and not so much C++, so I started with that, but you're right in that it could have been a better choice.
It looks like that may be the case! https://i.imgur.com/AriBHxI.png I'm still confused as to why the literature I linked to would seem to suggest that it would be okay, but maybe I misinterpreted.
I just looked it up and it is confusing. Found this where people talk about it https://www.reddit.com/r/windows/comments/6mln68/is_net_backwards_compatible/
It is a windows feature rather than a installed program. Go to "Turn windows features on or off" to check if it is installed. Just checked on my Windows 10 laptop and it is not installed.
I think you found the answer. Particularly the following section seems to suggest it can run but it needs to be told to do so. &gt; In other words, apps and components built with previous versions will work without modification on the .NET Framework 4.5. However, by default, apps run on the version of the common language runtime for which they were developed, so you may have to provide a configuration file to enable your app to run on the .NET Framework 4.5. I won't have seen this as I seem to have .NET 3.5 enabled in Windows Features even though it doesn't show up in Program Files.
What issue are you experiencing exactly? I made a quick peek on your code and it looks almost good, the only thing that bothers me is your implementation of the wallpaper class, you are wrapping the Wallpaper instances into an ObservableCollection&lt;Wallpaper&gt; collection and then binding it to the ItemsSource property of a GridView, and because you dont have any property inside the Wallpaper class, the GridView have no methods to evaluate for building each item, and also you are not specifying any mapping between an item display value and your backend Wallpaper class. What will happen is that the GridView will never display any item at all and you will probably get binding errors from WPF on the output window. Data binding in WPF works with Properties ONLY, and more important, Dependency Properties. You only have fields inside your Wallpaper class. Convert them to Auto-Properties first, then add an ItemTemplate to your GridView so it knows how to render each item you pass via the ItemsSource property, and more importantly so it knows *which properties on your Wallpaper classes to evaluate when rendering each item*
I was just reading your "all it does is" blurb and thinking that's like one windows API call... anyway, sometimes these deployment requirements aren't known up-front and it's good to know what .net targets will work in various OS versions.
That's fair, yeah. I suppose the upside with .NET Core is going forward the runtime can be bundled which will be handy for situations like this.
Let me know if you are able to get that to work after uninstalling 3.5. My only fix has been to install those frameworks. 
Just configure the correct supported runtime. See https://www.codeproject.com/Articles/886256/NET-Versioning-and-Multi-targeting-on-Csharp-Appli I do this for utilities that I download from the web too. Even if the author didnt think about it, this still works. That way I dont have to install extra dotnet runtimes.
Very interesting. Sounds like you can use the configuration to force a 3.5 binary to run on the 4.5 CLR. It does come with a warning however that CLR changes can cause unexpected issues so you'd want to test it pretty thoroughly.
You are correct, they run fine on later runtimes, see my other post in this thread and this: https://docs.microsoft.com/en-us/dotnet/framework/migration-guide/how-to-configure-an-app-to-support-net-framework-4-or-4-5
It can, but you have to configure the app to do so.
Nope! https://i.imgur.com/bchKxmm.png Question answered, I suppose, I'll update the post description for anyone who might find this useful in the future.
Thanks! This is really helpful and insightful, I did just start looking through this on solo learn to get the basics down and it doesn't seem too daunting just yet haha
I like your "small project first" approach, makes it easier to pin new information to the relevant places. Are there any resources for learning Core that you would recommend? I settled more or less with the Freeman book from Apress for now. It is close to what I want but it doesn't hurt to look around a bit.
It is amazing how bad the Microsoft documentation is. They make it seem like it should work. 
You can create IHostedService implementations to run background jobs to process queues and send updates through signalR. The advantage to this is that your background tasks startup and shutdown will be enlisted in coordinated cancellation using CancellationTokens. This Hosted Services features is new in [ASP.NET](https://ASP.NET) Core 2.1 Other things you can do with background services which are fun with signalR: * Keep performance counters and metrics for your background services and send them to an admin hub dashboard to see how your services and instance are doing at a glance * Pub Sub changes to data in near realtime (works really well if you have a full javascript frontend and optimistic concurrency on the backend). This can be good for coordinated data entry and processing, but requires thinking carefully about your UX. * The obvious one: send push notifications to your users based on background events to show in the top title bar (think 'you have new messages' icons). This is similar to what OP was showing, but is coded differently than a dedicated page for showing job status.
.NET Native might help if you like a single executable without the extra fuss https://github.com/dotnet/corert/blob/master/Documentation/intro-to-corert.md
This is a cool feature, I will look into it. Thanks to bringing this to my attention. Here is some documentation about this [https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.1](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.1)
Is it in Store? 
I looked into IHostedService when I started with this blog post but decided to try and keep the background job part simple and chose to use Coravel for this reason. Coravel uses IHostedSevice under the hood: https://github.com/jamesmh/coravel/blob/50b96f247b49b9b2adc5178effa86611d6e5a2dd/Src/Coravel/Queuing/HostedService/QueuingHost.cs#L12 Very nice use-cases you mentioned!
[Paint.NET](https://Paint.NET) is available as a normal Windows application. Why do you use the Windows Store?
How can I join you to work on something fun and actually make money?
Dont overuse transparency just because you can ;)
Seems like an interesting project. The differentiator being that you have all the types shown. I will try to find some time to contribute your project. Interesting [file](https://github.com/praeclarum/FuGetGallery/blob/master/Data/PackageData.cs) First thing that I saw was your manual parsing of the nuspec file. I would want to use this [XSD](https://github.com/NuGet/NuGet.Client/blob/dev/src/NuGet.Core/NuGet.Packaging/compiler/resources/nuspec.xsd) official file and generate C# code to make parsing easier. Also, unit tests. Good job guy
Well sadly we are now primarily working on business apps since our artist had to leave and we are mid way though an Xbox one game project. Best of luck finding something good though. You can always just make something small yourself. 
That's.... pretty great. One feature request immediately, though - could the search box try to predict what I'm searching for and bring it up as I type? It feels much more natural than typing, hitting enter, and seeing what comes up.
I wish nuget had a option to filter by licence type
&gt; I will try to find some time to contribute your project. FYI, it's not my project. Since the author didn't post it on reddit himself, I'm assuming he won't see your post here. If you want to make suggestions, creating an issue on the GitHub repo is likely the best option.
Mhh, it looks like this procedure (which should be a function returning bool) just checks, it the file exists. So maybe you could use System.File.Exists?
I'm not the author, I suggest you to create an issue on [the project's GitHub repo](https://github.com/praeclarum/FuGetGallery).
Ah okay - the title "Introducing fuget.org" would usually imply it's your project
Learn ASP.NET Core to the point where you can create API's. Don't spend too much time learning ASP.Net's Razor engine to develop the UI. Use the popular front-end framework to do that (ie: Angular, React, Vue). I wouldn't spend time learning ASP.NET unless you have to support a legacy system that requires it. 
It's gonna be a heck of a lot more efficient to parse this way than rely on deserialization.
Ok its just strange that you posted it to 2 different subs. You that excited about it?
Caching and easier
&gt;What I don't understand is that this will work in a listview and a datagridview but I don't know why. [...] In this code, button1 crashes as expected but button2 and button3 both work. Wouldn't all be changing the list that is being enumerated too? Throwing an exception in the enumerator if the collection is modified is an implementation detail of the `List&lt;T&gt;` class (and some other types). It's not an inherent feature of enumerators and not all collections implement such a safety check. &gt;listBox1.Items.OfType&lt;string&gt;().Reverse() The `Reverse()` method will copy the entire contents of the source to a new temporary collection. So you're not enumerating the collection that's being changed, but a copy of it. The same can be achieved with `ToList()` and `ToArray()`, for example.
Thanks man! I have pondered over it for a few days and I am going to focus on .NET Core. I know JS and C# pretty well and I think I want to be a part of .NET Core and it's rise. I know it is already headed in an upward direction, but I agree it's the way to go. I am going to remake websites like you said. I'm also going to look on Git for open source projects. Thanks again for your input!
What makes this different from all the similar sites there are? Cause I've seen a number of nuget-like nuget mirrors.
This is one of [Frank Krueger's](https://twitter.com/praeclarum) projects. He's a wizard. He cohosts the podcast [Merge Conflict](http://www.mergeconflict.fm/) with [James Montemagno](https://twitter.com/JamesMontemagno). They're both cool dudes you should become obsessed with. Frank's got some other cool projects like [Ooui](https://github.com/praeclarum/Ooui) which is really gaining steam. He also wrote a C# mobile IDE called [Continuous ](http://continuous.codes/)which is really awesome.
I would be if I had found it first. Are you not?
It's just the title of the blog post.
Would you consider remote for the right candidate? 
Yup.
I understand that now, just stating that the convention is that the author "introduces" something, so it could (like I just did) lead to people assuming you're the author :)
It's not a mirror. It lets you see what's inside a NuGet package, including its API and source code.
Start by moving as much as possible of your invoked code to managed C#. As far as I can tell, most of these things can either be done in managed code, or do not have an equivalent outside of Windows (for example, setting the console font, which typically depends on the user's theme). Judging by the code, you may want to look at implementing this in a cross-platform GUI framework instead, such as Avalonia or GTK+.
Yes, the native APIs and libraries for Linux/Mac (which are Unix based and are typically POSIX compliant) are very different. My first question, however, is why you are trying to do it this way rather than just using things like the existing `System.Console` class, which abstracts all the OS specific calls away.
Our management and CTO won't consider it, unfortunately.
Probably not much use, but I made a start at converting the Nehe OpenGL tutorials to OpenTK a few years ago. I actually updated them to OpenTK 3 a couple of months ago. https://github.com/spec-chum/OpenTKNeHeTuts
It's included but not installed. 
The System.Console Class is good for applications where you want to use the console like a scrolling list of commands and output like cmd or bash. But it is really very slow at attempting to use the console as an ASCII output window... This method: public static extern bool WriteConsoleOutput( SafeFileHandle hConsoleOutput, [MarshalAs(UnmanagedType.LPArray), In] CharInfo[] lpBuffer, Coord dwBufferSize, Coord dwBufferCoord, ref SmallRect lpWriteRegion); Is extremely fast and allows you to inject an arbitrary block of CharInfo to a similiar shaped block in the console output buffer... an equivalent function using only System.Console methods would be something like public static bool WriteConsoleOutput( CharInfo[] lpBuffer, Coord dwBufferSize, Coord dwBufferCoord, ref SmallRect lpWriteRegion) { System.Console.SetCursorPosition(dwBufferCoord.X, dwBufferCoord.Y); for(int sY=0;sY&lt;dwBufferSize.Y;sY++) for(int sX=0;sX&lt;dwBufferSize.X;sX++) { var nxtCharIndx = sY*dwBufferSize+sX; var oX=nxtCharIndx%lpWriteRegion.Width; var oY=nxtCharIndx\lpWriteRegion.Width; var nxtCharInfo = lpBuffer[nxtCharIndx]; System.Console.SetCursorPosition(oX+lpWriteRegion.Left, oY+lpWriteRegion.Top); System.Console.BackColor = nxtCharInfo.BGColor; System.Console.ForeColor = nxtCharInfo.FGColor; System.Console.Write(nxtCharInfo.char); } } And doing System.Console.SetCursorPosition(oX+lpWriteRegion.Left, oY+lpWriteRegion.Top); System.Console.BackColor = nxtCharInfo.BGColor; System.Console.ForeColor = nxtCharInfo.FGColor; System.Console.Write(nxtCharInfo.char); for every cell in the console is extreamly slow compared to simply copying raw data directly from one buffer to another. 
When i have to remove items from listboxes i always use something like: &gt;for (int i = listbox1.Items.Count - 1; i &gt;= 0; i--) &gt; &gt;{ listbox1.Itesms.RemoveAt(i); }
It might be worth describing these problems and requesting a new RawBuffer API or performance fixes over on CoreFX in GitHub (assuming other solutions don't work).
Avalonia and GTK+ are Graphical Guis... I am trying to create an ASCII Gui. I have ported everything to managed code except this last class. This last class is in it's own assembly (because it needs to be marked unsafe to compile). It seems unlikely that there is no way to set the console font in linux... but It IS unlikely that it is possible in strait up c#, which is why I need to PInvoke Linux C Libs. By far, the single most important functionality that is required is Bliting Character Data from a supplied buffer to the console output buffer and toggling the console visibility on and off. It doesn't need to be a 1:1 exact equavalence.. I just need the ability to blit the data buffers, toggle the console visibility and preferablly be able to set the font, collect Mouse/Keyboard events into a/(a set of) buffer(s). The keyboard buffer isn't explicitly required as that CAN currently be done through System.Console... but System.Console Doesn't provide mouse event handling. 
Smart! I've started with redoing my personal site w Node, C#.net core razor pages, and rolling out a .net core based or agnostic blog like Butter, and hosting on azure. Then, along with a database when I end up needing it, I will have a full blown .net core playground without limits, and can fork repo's and host them live very quickly
Thanks for the critical viewpoint, I really appreciate knowing the gaps of the learning material I'm pulling knowledge and habits of! And I agree, small project first is smart. I thought his task system project seemed pretty small, however even simpler that teaches the concepts better is obviously superior. Did you happen to post the rewrite you guys made? I'd love to go through that!
Looks like a network issue. What results do you get from the PowerShell / CMD command: ping api.nuget.org ?
Mouse support on Linux/Mac is even harder. Unlike Windows, there isn't a "single" source of truth for the UI layer. On Linux, it depends on what UI system they have installed (xlib, wayland, unity, etc). On Mac, older systems use Carbon and newer ones tend to use Cocoa.
Nice, i'm sure i'll get some use out of this.
 D:\Utils\cmder_mini λ ping api.nuget.org Pinging cs22.wpc.v0cdn.net [152.199.19.160] with 32 bytes of data: Reply from 152.199.19.160: bytes=32 time=9ms TTL=59 Reply from 152.199.19.160: bytes=32 time=20ms TTL=59 Reply from 152.199.19.160: bytes=32 time=10ms TTL=59 Reply from 152.199.19.160: bytes=32 time=12ms TTL=59 Ping statistics for 152.199.19.160: Packets: Sent = 4, Received = 4, Lost = 0 (0% loss), Approximate round trip times in milli-seconds: Minimum = 9ms, Maximum = 20ms, Average = 12ms
Which isn't relevant for running inside of a terminal; you would have to use the control codes specified by the terminal; which can be different. 
OP, prepare for having to implement terminfo parsing and IOCtl calls, or really just invoke ncursesw directly. (Alternatively, use [gui.cs](https://github.com/migueldeicaza/gui.cs))
 var filename = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), "Topics.db") return File.Exists(filename);
This is something I have in my head for adding exactly this use-case as a future Coravel feature! It would so sweet to do something like: `app.AddCoravelDashboard()` It would rig up a dashboard at whatever port and give you a real-time look at all your scheduled tasks, queued items, and (once I build it) your current cache, etc.
Coravel uses ILogger support now btw. It's in heavy development... sry!
why not ?
Do you have any firewall rules blocking outgoing connections from the Visual Studio program?