\*Waves to the summer marketing intern\* You're not making your company look good by posting an advert here.
The rules I follow: * One PUBLIC/INTERNAL type per source file (class, interface, enum, struct). Private/Protected nested types are OK (when those are OK to use). * File name matches the name of the type declared in the file. * Folder structure in project matches the namespace of the file. Exceptions: * When writing extension methods for things like `Microsoft.Extensions.DependencyInjection.ServiceCollection`, the namespace for the extension class will match the namespace of the thing it is extending unless the extension class is only going to be used for the project it is declared in. I don't always do this but I consistently do it for anything involving configuring stuff at the composition root. * When inheriting a codebase, `partial` classes can be useful to breakdown "god" classes without altering functionality. This aids in reasoning about the code which may (hopefully) aid in refactoring the class later. * Partials are also pretty much required when class files are generated and changes to its definition is allowable. * When writing adapter/proxy/facade classes for large interfaces, especially when the interface methods are simply calling the same method on the internal type it is protecting, it might be better to implement the interface in a partial. However, this should be used very sparingly and the partial class file must live next to the main class file. * Partial classes are also an OK way to organize the public API of a class that only exist in certain configurations because of compiler directives. For example, a class may have a method that only applies to Windows and does not apply to Linux or macOS. Most of the time, though, such a class can be refactored into multiple classes where the entire files are included/excluded from compilation completely or the parts that are different can be abstracted out and be added as a composition of the original class. To expand on that last bullet, imagine a scenario where you have a class that exposes a public method that retrieves some information about Windows that does not exist on other OS's. For other OS's, it either 1) returns null or 2) throws an exception. What if we could simply not compile that method when the compilation isn't targeting Windows? Whether or not that is a better option than 1 or 2 depends on the nuances of the situation.
I will definitely never work with /u/valianttechnosoft and will strongly recommend everyone else to not work with them either.
Just fucking release it already. Half the planet have already put it into live deployments ffs
Ask the founder twitter.com/psluaces
Removed: Rule 6, spam.
I use both. Especially on Mac, since VS for Mac is still pretty far behind VS for Windows and, in some ways, VS Code. VS Code is good for taking quick looks at code files. It handles a lot more languages than VS for Windows does. Sometimes I just want to see how 2 or 3 related files are set up and I don't feel like waiting for VS to load. All the power of VS is great, but if I'm just using it as a file reader it feels like a waste.
3 is basically useless. You've type-cast it to `IEnumerable&lt;T&gt;` which means it's no longer doing a query and is now all in memory, and not using expressions etc. etc. etc.
It varies depending on what you are building. The most common use of the Session concept is with web applications where a particular users requests are marked so that you can store data on their behalf server side. You will see it quite a bit in older .NET web apps. In new ones you can do session though a lot of people prefer stateless reactive systems since they are easier to manger and test.
Events are an implementation of the Observer pattern. People can nitpick that they are implemented slightly differently, but I think it's moot. Nitpickers get too obsessed about the specifics of the reference implementation. The spirit of Observer/Observable is you want to decouple "a thing that wants to know when something happens" from "a thing that knows when something happens". Events pull that off. Think about `INotifyPropertyChanged`. All it asserts is it represents a type that has an event, and the event will be raised when one of that type's properties change. The thing that handles the `PropertyChanged` event doesn't need to know *specifically* what type it's listening to. It probably has some guesses, but that's context-specific. By asking for "something with INotifyPropertyChanged" it's broken its tight coupling. That's what Observer/Observable tries to do. Mechanically, a delegate *is* an interface method. There's no semantic difference between what these promise: public interface INotifyPropertyChanged { event PropertyChangedEventHandler PropertyChanged; } public interface IPropertyChangedObservable { IDisposable Subscribe(IObserver&lt;PropertyChangedArgs&gt; observer); } Both of these interfaces say interested types have a way to register for notifications when a property changes. The mechanism of that registration is different, but the things you expect aren't. Other people are bringing in ideas like which thread events happen on, but I've never seen a high-level definition of Observer/Observable that dictates this behavior. *Implementations* such as Reactive Extensions have conventions, but that was a choice they made, not a strict requirement of the pattern. If the documentation for the event/observable you are working with doesn't explicitly state how it behaves with respect to threading, it's best to assume it has no special behavior.
Boring. Here is the free tip: most of the time nobody cares about the software you write until something breaks.
Here’s my code for the ray casting and destroy: [Code](https://imgur.com/a/IDS6X0e)
Thank you so much for the help!
i use VS code for everything now, works great
True. But you can still use it for in-memory collections
This could be an issue on your side. Are you going through a proxy, like in an office?
Seems like someone disconnected from the marketing folks 😉
I just wish they had a linker built in to roslyn or something. Having a 60 file+ deployment is annoying.
How is caring about the environment a meme? It's a serious issue. Reducing compute time means less energy used and at a global scale, it's important.
As someone who's company of 100K+ is still on 2.1? no, half the planet is not there.
I agree, climate change is a colossal issue. But it's inclusion came out of nowhere, like the post was missing a sentence or two or three
You can use the Dynamic Language Runtime to dynamically pull out and try to apply the operands if they exist: dynamic globalVariableValue = LuaInterface._global_variables[myQuestStep.globalVariableName]; dynamic comparitorValue = myQuestStep.comparitorValue; switch (myQuestStep.ComparitorOperation) { case QuestStep.OperatorEnum.LessThan: return globalVariableValue &lt; comparitorValue; } This will fail at runtime if the operand doesn't exist for the given types, but it sounds like you're making assurances elsewhere that this is going to pass. Now, you want to basically be adding your own operands like checking for substring, but this doesn't sound like a comparable operand to me though. Do you mean something more akin to [`String.Contains`](https://docs.microsoft.com/en-us/dotnet/api/system.string.contains)? Perhaps you'll instead want to create some collection of operations (which it looks like you're doing already with `QuestStep.OperatorEnum`) that includes these custom operations. Maybe you can enhance your `enum` here into a full blown class and use delegates that return a `bool`: public class QuestOperator { public static readonly QuestOperator LessThan = new QuestOperator((left, right) =&gt; left &lt; right); public static readonly QuestOperator GreaterThan = new QuestOperator((left, right) =&gt; left &gt; right); public static readonly QuestOperator Contains = new QuestOperator((left, right) =&gt; left.Contains(right)); //add more operations here private readonly Func&lt;object, object, bool&gt; Operation; private QuestOperator(Func&lt;dynamic, dynamic, bool&gt; operation) { this.Operation = operation; } public bool Evaluate(object left, object right) { return Operation(left, right); } } Console.WriteLine(QuestOperator.LessThan.Evaluate(1.5, 2)); //true Console.WriteLine(QuestOperator.GreaterThan.Evaluate(1.5, 2)); //false Console.WriteLine(QuestOperator.Contains.Evaluate("Hello World", "Wor")); //true Console.WriteLine(QuestOperator.Contains.Evaluate("Hello World", "John Doe")); //false Then you can manage it however you want. If you want to switch/case and pull out the correct operator, or do some dictionary lookup, or simply you assign the operator to your quest step: myQuestStep.Operator = QuestOperator.GreaterThan; If you don't have access to the Dynamic Language Runtime, you can still do more or less this same pattern, but you may have to do a bunch of extra work and casting in the operator's expression, or do some silly work via reflection.
And another PVS-Studio post..
&gt;This will fail at runtime if the operand doesn't exist for the given types, but it sounds like you're making assurances elsewhere that this is going to pass. Yes I am. Thanks. \&gt; Now, you want to basically be adding your own operands like checking for substring, but this doesn't sound like a comparable operand to me though. Do you mean something more akin to String.Contains Yes along with other types of checks that will be performed between two operands and even other state based conditions on a wider scope for quest steps in a game. \&gt; Perhaps you'll instead want to create some collection of operations (which it looks like you're doing already with QuestStep.OperatorEnum ) that includes these custom operations. Maybe you can enhance your enum here into a full blown class and use delegates that return a bool : Yep, good idea. &amp;#x200B; Thank you very much for the detailed response, I'll investigate this :)
It never ends.
Don't guess, look up the process holding the lock https://superuser.com/questions/117902/find-out-which-process-is-locking-a-file-or-folder-in-windows
The observer pattern is used for languages that don't have events. Which leads us to an important point: **Design patterns are contextual** The design patterns you use will vary by language and type of application. Also by the size of the application, it's performance and reliability requirements, the size of your team(s), etc. One of the biggest mistakes in how we train developers is by giving them the false impression that there is a finite list of design patterns. Or that design patterns necessarily have names.
I’ve had issues in the past using a SOAP web service if the project was saved on a network drive. Only worked if I saved and ran off my actually desktop. Not sure if that’s your issue but figured it’s worth mentioning.
Well, firstly, you could make `Element` implement `IComparable&lt;&gt;`, and then you can just call `Sort()` on any of those collections. If you're iterating through all those lists, is there a reason you can't have a `List&lt;&gt;` of Lists? e.g.: `public List&lt;IEnumerable&lt;Element&gt;&gt; Lists {get; set; }` , then you'll have a single `foreach` to go through them and call `Sort()`.
HTTP2 does not require SSL. This was proposed but shot down. Some browsers are still requiring it, but HttpClient does not.
I appreciate that but it’s def in my c drive
Yes this is in an office and that’s what I’m afraid of. Gonna try it at home later
It hides some code. But it does the same thing
Figured it was worth saying just in case, as it took me a long ass while to figure that out. Sorry I couldn’t be of more help.
Why not do all of your grouping and sorting in the database call? I don't think you are using your database well if you have a lot of post processing on your data.
I try not to have business logic in DB
Starting another set of C# 8 articles. Some new stuff, some updates on features you've already heard about.
You don't need it to be there. It can be in the query itself.
?
Whatever is hard locking the process isn't showing up under any method I know of to search for locking processes, just my other spawned instances, which leads back to my original question: what could cause a file marked with read/write sharing to fail to be read due to locking.
&gt; Is there any way to make this more efficient. Have you actually identified this as a performance issue that needs addressing?
I really like the readonly member feature, that'll help make math and vector code more efficient.
It produces more readable code, and avoids all that LINQ sorting.
The company behind PVS-Studio is known for constantly spamming their product promotions everywhere.
You got me. Nothing looks wrong in your code.
That's what's driving me crazy, this is such a simple bit of code. The only thing I can think of is that when the stream is disposed at the end of the using block, something is happening that causes another process to be unable to access the file very briefly.
You have to realize that codelines run one after another. So whatever you put in an if block will execute if the statement is true. &amp;#x200B; Say your program looks like this: String colour = Console.ReadLine(); if(colour == "red") { //do something here when the colour is red } else if(colour == "green") { //do something here when the colour is green } else { //do something for all other inputs } And the user enters "red", then everything in the first if block (denoted by "{", "}") will get executed, and all other blocks will be skipped. Just add your logic in there.
uhhh, keep as ienumerable, and when you want to see the result .tolist(). Not getting why you would need to debug your linq query, seriously if it's that complex, maybe you should simplify it and split it into different parts. Remember it's all ienumerable until it's enumerated so splitting it isn't hurting any.
https://docs.microsoft.com/en-us/dotnet/api/system.string.compare?view=netframework-4.8
I guess you could just throw a retry loop around it, but that feels icky. Are you running Dropbox, OneDrive, or some other continuous backup software?
Thank you this was helpful
And also mention that you think it's a terrible idea to save state in session and that you go out of your way to never use it.
I see on your profile that you are still young. Programming is not something you can learn in a few hours, it takes time. Don't give up when you hit the first wall and good luck on your journey :\]
Probably take a look here / if you want something native threadsafe: &amp;#x200B; [https://docs.microsoft.com/en-us/dotnet/api/system.collections.concurrent](https://docs.microsoft.com/en-us/dotnet/api/system.collections.concurrent) &amp;#x200B; Or take some blocking object / event per list and if a refresh of one of your lists happens, you could create a Task which should refresh the values in the list. You "just" need to observe the current state and if it is not representing the actual state anymore, don't work with the data until it has been refreshed.
A retry or while(fileislocked) definitely has a serious code smell to it. No Dropbox or anything, we've even temporarily killed in-office AV protections on the azure test box with no luck. We've settled on a temporary work around of creating a new temp copy of the file for each process for the time being until we can refactor this more effectively.
This has been answered, but I'd also like to add, when coding in any modern language, avoid 'goto' as if it were a plague with herpes.
Why is this? What is the better way?
Another file maybe is using the fileshare readwrite to open for writing but using fileshare none as it’s argument which blocks you. Can you try it with fileshare none to prevent others from accessing it?
Debugging is a huge thing. The usual path is, that you start in something simpler and when you realize that you need to do things outside the ide way to often (starting/stopping servers, copying files, packaging, etc) then you realize you need something more "intelligent" to have a productive work setup. For example, I have three large monitors for my dev work and I have ensured that the test build always starts on the third monitor because I don't want to always move the window over. Those little things add up fast.
The specification doesn't require it, but wikipedia and [caniuse.com](https://caniuse.com) both say that all browser implementations require HTTPS (though they haven't been updated in a while). [ASP.NET](https://ASP.NET) Core only supports HTTP2 without encryption for use in development. I was under the impression that unencrypted HTTP2 was primarily desired for use by GRPC on internal networks where the encryption wouldn't be necessary.
Can I just ask- do you use a profiler to identify bottlenecks in your code?
I've only used it in C++ so far, but yes.
I have my personal license key, can I use it or do I need to buy a new License?
ThanQ.
&gt; For licensed users: To enable the Pro/Developer/Premium features of LINQPad 6, you'll need to upgrade your license to Version 6 if you bought your license before December 2018. Your new license activates all versions of LINQPad on your machine. Major updates require a new license. It was the same when he released LINQPad 5. I just checked, and my update would cost 58,95 €, which is a fair price for a tool that I use on a daily base. And it's really not like he's releasing a major update every year.
You can check using your current key here: [https://www.linqpad.net/CustomUpgrade.aspx](https://www.linqpad.net/CustomUpgrade.aspx)
What is your anti virus program? In general your program should expect that IO operations could always fail at any time.
I've also seen it mentioned in the CoreRT project lol. It's kinda tongue in cheek, even if it makes sense seeing it a certain way.
Well, this is the csharp subreddit, so I could see how somebody might think that developers here would be interested in solutions to common or novel projects written in C#. &amp;#x200B; Unfortunately, as this subreddit has grown over the years it's started turning more and more into a negative dogpile like many of the other popular subreddits. &amp;#x200B; I haven't listened to this episode yet but it's coming up in my queue. The show is a fantastic resource for .NET devs and I'm looking forward to learning something from this one too.
I do enjoy your posts here.
Indeed, unencrypted HTTP2 is most useful for internal microservices. This is why HttpClient allows it.
Goto allows you to jump around in a very uncontrolled way, and the compiler can't help you much. In your situation, look into methods [Methods] (https://www.tutorialspoint.com/csharp/csharp_methods.htm) These allow you to declare a block of code as being a separate thing, give it a name, decide who can call it, declare what parameters it has, and say what it should return. This helps in a few ways: * you can code a method to not be affected by anything other than its own parameters, and to not affect anything other than its own return value, which helps you write bug-free code * the compiler will help you spot errors like passing the wrong stuff to a parameter * you will always start at the top of a method, and you can code so you always finish the method at the bottom. * you can move a method around without accidentally changing behaviour
By putting `Destroy(rHit.collider.gameObject);` inside of if statement `if (rHit.collider.gameObject.tag == "Enemy") {` `//put it here` `...` This way it won't destroy everything it hits.
Hey there! It looks like you have some valid answers here already but I'll add my two cents. If you have more than two different possibilities for answers, I might recommend you look into using a switch statement instead of if statements! Also, don't forget to convert their answer using the .toLower() or .toUpper() functions to protect against them typing RED or rEd if you are not specifying if it is case sensitive. Switch statement how to: https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch
Thank you for your help
It's nice to see responses like yours for the newbies, good work man :)
as an image processing nerd - what is HEIF/HEIC images? https://github.com/dlemstra/Magick.NET i use the above for image manipulation for certain things
It only extracts the master image and not the collection... sadly
Uh what? what is HIEF/HEIC
[read this !](https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format)
seems new and pretty obscure, so you might be out of luck :(
Windows Forms in Action by Erik Brown, one of the best IMHO
Thanks! Will look into it
HTTP2 was mostly created for browsers, not microservices. Its a happy accident they also work with microservices, but effective alternatives (such as TCP based connections, reliable queues, or even websockets) have all existed for internal microservices to use for some time.
Have you checked Azure for the hosting?
No, it’s not bad practice. It has its uses. It can also be misused, as is the case with everything.
i did but it's to expensive. or I don't know how to configure it to be cheaper than 100e a month.
Its been out there for years now. There is already a [C++ Library](https://github.com/strukturag/libheif) that take use of the [Nokia Code](https://github.com/nokiatech/heif). There is also a [JS tool](https://github.com/introvertautist/heic2jpg) to do incoding and decoding of HEIC images within the browser window. Check this [Online Demo](https://strukturag.github.io/libheif/)! The format is used out there .. thats why I am looking for the C# version of those libraries
From what I can see, the B1 tier only runs about 48 Euro per month. I'm not sure how much Azure charges for domains but I would assume it's similar to other providers in that regard and that's usually just a yearly charge.
`goto` is a weird thing. It can mean either: 1. The person using it doesn't know any better. 2. The person using it chose to do so *with incredible care* based on careful analysis of profiling results, and it's the best option for reasons that go all the way down to the machine code. SO MANY people are taught it's wrong in all cases it's usually best to assume (2), hunt down the person who did it, and ask them what's up. Here's a good exercise. Look at the code. How would you do it without `goto`? Write that up. Take it to the person who wrote it and say, "Hey, I stumbled into this bit of code and thought I could take the goto out this way. What do you think?" That's less likely to get them defensive than, "Jeez, why'd you use a goto man?"
Yea, I agree with you, the second point sounds good. Maybe my post looks a little bit defensive of Microsoft’s approach with goto and this is exactly why I posted it. To understand in which cases it can be used and to break my stereotype about “using goto statement is always bad”.
Removed: Rule 4.
Yes, it can be misused, but you know it is like all people, books and tutorials says that “don’t use goto, it will produce spaghetti code” and other quotes. I mean their opinion is based on some experience and here I have found a goto in official repo. And thought “hmm, does Microsoft writes wrong code and it is impossible, because it’s Microsoft, they probably know how to write good and maintainable code. But why goto is presented in repo?”. Something like this.
No, but yes, we have posted this in multiple reddit channels! But only once per subreddit!
They may be referring to sessions in ye olde ASP.NET WebForms. There were some serious security implications to this if not used correctly. Despite looking an awful lot like server-side (therefore private) data it was actually also injected into the client-side page in an `&lt;input&gt;`. I'd elaborate but... oh god... I'm having flashbacks.
Their “opinions” are mostly based on an ancient text by Dijkstra and repeating what they’ve been told. Not by actual experience. Its just a “because Dijkstra said so in *1968* it must be true.” Or because they’ve been told that Dijkstra said so. Dijkstra himself didn’t want to even have the text with the headline it got but we know editors... Everyone has been running away from goto so much that I’m sure most of them haven’t even seen one in real life ever. https://homepages.cwi.nl/~storm/teaching/reader/Dijkstra68.pdf The people writing .NET Core do know a thing or two about programming, performance, readability etc. Yet they use goto here. You’re correct to ask about it because it is a trend to claim one shouldn’t use goto ever. Here we see professional people using it. Of course I can’t say why they did it, that can only be answered by the authors. But surely they wouldn’t even add `goto case` feature into the language if it shouldn’t be used. After all, C# was invented decades after Dijkstra’s essay etc. So it’s something that was specifically added and should be used, when suitable. Here it is used in a state machine, which is sometimes used as an example of a case for using goto. They could’ve changed the whole switch case into multiple methods and called them around but I don’t think it would’ve been any clearer or better. The code is complex and it takes time to understand the flow no matter what.
You rock. Thank you for this reply. Maybe people can’t see goto because all of them trying to avoid it?(it sounds like a joke, but maybe it is). In my practice(almost 1.5 year), I saw only one goto in legacy project. I will get acquainted with provided text by you.
https://stackoverflow.com/questions/1606349/can-i-prevent-a-streamreader-from-locking-a-text-file-whilst-it-is-in-use Looking at the answer from this stackoverflow article, your code appears to be very similar, however in your example you’re calling File.Open instead of creating a new FileStream. I suspect you’re actually passing a file to the StreamReader and not a fileStream, thus causing it to actually lock the file.
Why not override the operators for the types in question. You can even do type conversion in the class so your business logic can be more concise.
quite the long ozcode advertisement
Also possibly useful is Donald Knuth’s text from 1974 where he talks about structured programming using goto. It may shed some light on how it could be used. But in any case these texts are very old and things as well as languages do change. In general it may be better to tell beginners to avoid goto since it’s easy to misuse it, but it’s definitely not the monster many make it look. https://pic.plover.com/knuth-GOTO.pdf
maybe i should change that, but my idea was like 50-60 year, or maybe 80 as is just to put some tests etc. not really a professional website.
How would I use a single generics based compare class that doesn't require a test for the underlying type?
I am hosting https://www.medievalands.com on Digital Ocean. The cost of the droplet vm is $72/yr. The .com tld is an additional $12/yr. You should be aware that if your app does not live 100% in the cloud, then you will need to pay for code signing. I pay $99/yr for MacOS code signing and about $200/yr for Windows code signing.
It really depends on the diversity of the compares you are doing. if it was me I would put the commonly compared properties into a base interface everyone inherits and likely an abstract base to handle the operator overloads. By narrowing down things to a couple common interfaces you dont have to check the concrete type, just work with the interface types and the commonalities you are comparing. You will only need to check type if you want this to work with more than one base interface as you would need to see which interface the type in question inherits. If you can boil it all down to a single interface this code gets even easier. You may also want to look into Type attributes as what you are looking for may be to use some custom metadata to tell you what to do. Combine attributes with enums and you have the ability to not even look at the type at all other than to extract the meta-data you added to class.
Oh PER YEAR. Yeah that’s going to be a tall order I think. Azure does have a free tier but that doesn’t allow for custom domains. Maybe an option if it’s just for testing.
hummm i will have a look thanks.
I appreciate you explaining your solution and understand the concepts you mention, but without a code example I'm still struggling to see your solution as to how the comparing of the two variables will work without some conditional branching involved. This afterall is what I'm trying to avoid. &gt;Finally, don't fear reflection, it's not the killer people say it is done properly. I had this working with reflection, I just want to avoid conditional branching based on types or metadata. I think I'll stick with the dynamic types /u/FizixMan suggested earlier. It keeps the code clean, simple and just works. Calls to this function are quite infrequent so the slight performance hit is not important. Thanks.
Glad to hear it. While the money is nice, I mostly do it mostly because for the conversations it sparks here.
If you are comparing 2 disparate types they must have some compatible properties you are comparing. Take all the common properties that you are comparing, pull them from the concrete types and put them in a single interface, then have all the concrete types inherit that interface. Your compare can then work with just the interface while higher up in the code you are using concrete types if you wish. Dynamic is easy, once you break away from safe typing you can introduce an entirely new class of bugs and exception scenarios that you never really deal with when you stick with the type system. Dynamic is not bad, and I use it for some smart shortcuts myself, just be aware of the risks, esp with future code changes as its often drift that causes the first head scratching bug in this realm.
Just iterate through each row object in the table object and at each row, and the column index of that row that your file names are in, add that value to your list... kinda like this: List&lt;string&gt; files = new List&lt;string&gt;; foreach(DataRow row in YourTable.Rows) { list.add(row[fileColumnIndex]); }
What ORM are you using? Tortuga Chain natively support scalar lists: List&lt;string&gt; files = datasource.From("MyTable", filter).ToStringList("Filename").Execute(); As does Dapper using (var con = new SqlConnection(...)) var con.Query&lt;string&gt;(sqlStatment); EF Core can use a projection List&lt;string&gt; files = dataContext.MyTable.Where(filter).Select (x =&gt; x.Filename).ToString(); (All examples off the top of my head.)
While it's not technically wrong, loading that all into a DataTable is a bit heavy-handed. Especially if you are returning more columns than you actually need.
Heroku can host your app in a docker container. Hobby plans are free and you can have a database as well.
iPhone photos are stored in that format, so far from obscure
The software world is full of hyperbole. A long time ago, goto was basically the only way you could transfer control from one part of a program to another. People just hadn't settled on a better way to do it, and it corresponds nicely to a "jump" instruction in assembly so it was easy to understand at the time. The "problems" with goto are mostly that if it's used heavily, it can be difficult to understand how the code is flowing. C# has `if` statements, `for` loops, `foreach` loops, `while` loops, `switch` statements, and a couple of others I might've forgotten or chose to omit. You can implement all of them with `goto`, but the problem is it's hard to tell offhand which one you meant. That's especially bad if you made a mistake. A `foreach` loop and a `while` loop do very different things, but don't look very different when implemented with `goto`. So most modern programmers never, ever use it because there is almost always a more explicit tool to get the job done. And since programmers like to be hyperbolic, "Goto is not the best tool" has evolved into, "Goto is terrible, if you ever see it you need to fire the person who used it". One really famous programmer wrote an article titled "Goto considered harmful" as a joke and the entire industry took it as gospel. The exception is *sometimes*, when writing very, very high-performance code, implementing a specific algorithm with `goto` can present a performance advantage. Even the people who know when that is do performance `comparisons` before accepting it, because it often represents a maintainability burden. The people who know how to use `goto` properly are worth orders of magnitude more than the people who never use it. On the flip side, most people will never, ever be in the situation where it would've been better.
There seems to be a typo in the first code snippet. Should it be A a3 = a switch { B b =&gt; b, C c =&gt; c, _ =&gt; throw new System.Exception() };
TIL. thx all.
You might be a pioneer here and be maybe you can port an existing library into C# and release it as open source? &gt; Nokia provides an open source Java HEIF decoder[26]. https://github.com/nokiatech/heif java is pretty dang close to C# so would be an "easy" code-transfter
dont you spam this discord like once every few days dude also pokemon past age 20 lmfao
Use azure, you can register free account with free 200$ for the first month and then use free domain, sql and other things for 12 months. But be careful and select F1 plan
i see is doing it with Docker, interesting, I will try during the weekend. its good to know that hobby plans are free. thanks for that
Thanks so much for your help! The instructors just weren’t getting back to me. So it helped so much. Been stuck for 2 days haha. Now that that’s fixed I threw in a ln ontrigger teleport function:)
I always [search on github](https://github.com/search?l=C%23&amp;q=heif&amp;type=Repositories). All I could find was [HEIF.NET](https://github.com/Work-Stuff/HEIF.NET), but I'm not sure if it's usable at all. It already looks abandoned to me. You might be able to use some of his code though.
Yep, thanks
Azure costs a fortune.
Each instance is doing nothing else with the file in question, it's very confusing.
I think you need to be more specific where you think the problem is. You linked your whole repository, but without knowing where this logic lives, I literally have to just start clicking until I recognize things. From your description, I'm also not sure whether your lookup tables are database tables or in-memory data caches. You really need to narrow down where someone can help look for the problem. Have you run the code in the debugger and stepped over the logic? Do you have control over the lookup tables, or is it managed by EF somehow? Have you verified that the data being put into the EF before the saves doesn't have empty rows? Is it possible the database is just not inserting data that is invalid, but the lookup tables don't have the same criteria? Have you checked the data in the database without using EF (just using sql management studio or whatever) and see if there are empty rows in there, but aren't being returned because of joins filtering them out?
Hm, maybe surround the place where it’s crashing with a try/catch block (on the open call?) and debug it to check the state of the environment when it happens
Yeah you're not wrong that it can be a bit tricky to get going with Key Vault, but once you do I promise the results are worth it. And it just so happens that questions regarding Key Vault have been coming up a lot recently so I just wrote [this answer detailing my implementation](https://www.reddit.com/r/dotnet/comments/bzypcz/storing_sensitive_strings_in_aspnet_core_mvc/eqzj0wm?utm_source=share&amp;utm_medium=web2x) the other day! In short, while my implementation is a bit scattered right now, it does work and very cleanly (solves a lot of the trouble you're having), and I'm working to pull it together into a library sometime soon. I hope it helps, good luck!
Oh shoot, I forgot to mention the other project I use it in that actually uses Key Vault for encryption &amp; decryption, not just secret storage: [ET](https://github.com/rpj/et)
Hey, thanks for responding so quickly! Your code is still daunting (but great nonetheless) as I'm just now starting to wrap my head around DI, and how Startup and Configuration work for .NET Core.
That is an awesome point, and thank you for stating that so that I can fix my error. The tables are Code First in the Models section on the DataAccess project. To be more specific under the Demographic folder in Models. The main table is built through Survey.cs found in Models as well
“Premature optimization is the root of all evil.” - [Donald Knuth](https://en.m.wikiquote.org/wiki/Donald_Knuth)
There are also [switch statements](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/switch), which can be good if you just want to compare one value against several cases (like you are doing here). There's no huge advantage to using them, though.
It doesnt really. You can run several AppServices or functions on the basic production Plan for ~48$. A .net core app needs barely any resources. Limiting factor is mostly the network not the CPU/RAM.
&gt; “Premature optimization is the root of all evil.” The quote belongs to Sir Tony Hoare, and was only popularized by Donald Knuth - Knuth dubs it "Hoare's Dictum" in "The Errors of TeX". The full quote is: &gt; We should forget about small efficiencies, say about 97% of the time: premature optimization is the root of all evil. Charles Cook rightly expounds: &gt; I agree with this. Its usually not worth spending a lot of time micro-optimizing code before its obvious where the performance bottlenecks are. But, conversely, when designing software at a system level, performance issues should always be considered from the beginning. A good software developer will do this automatically, having developed a feel for where performance issues will cause problems. An inexperienced developer will not bother, misguidedly believing that a bit of fine tuning at a later stage will fix any problems.
Mainly for my own use at first. I wanted something with a natural syntax to me, and does everything in the server. Although it turned out to be much more complicated than I wished, it was still a great learning experience for designing a "framework".
I think this was also mentioned but a better way, instead of == is to use the string.Equals(string1, string2, culture) method. Because in the culture part of the method you use use StringComparison. InvariantCultureIgnoreCase. That will make it so if someone puts capital letters or accented characters it will still compare them as if they didn’t. There’s a whole bunch of different StringComparison types too if that’s not what you want. Or you can even eventually come up with your own!
Sounds like you need to run though them and calculate the average difference. The smaller the difference, the more likely that the planned path is the actual path
Basically `dt.Rows.Cast&lt;DataRow&gt;().Select(dr =&gt; dr[0])`
I’m no expert on this stuff, but it seems to me that you could create a polygon by combining two lines (and maybe closing the ends) and measure the area of the resulting polygon as a way to measure how different they are. The combination with the least area would be the winner. The NTS library is probably the easiest way to do the type of calculations your looking for in c#. https://github.com/NetTopologySuite/NetTopologySuite P.S... I work with some smart folks that are deep into this stuff working on precision agriculture problems (imagine tractors driving around instead of planes flying). I’ll see if they have any better advice.
Maybe take a look at this guide? Seems like you can pass a CspParameters object into your RSACryptoServiceProvider instance: https://docs.microsoft.com/en-us/dotnet/standard/security/how-to-store-asymmetric-keys-in-a-key-container?view=netframework-4.8
&gt; you'll need to upgrade your license to Version 6 if you bought your license before December 2018. [Aw :/] (https://i.imgur.com/BlRgFud.jpg). A bit sad that I won't be able to use .Net Core 3 with Version 5. As a student this is a really steep price to upgrade, given I just bought in November last year. Only ended up biting the bullet to purchase a premium license because I thought it would have been a nice investment going forward.
Returning more columns than you need shouldn't be an issue if you don't request those columns when building the dataset. Just "select filename" instead of "select *"
I used the NiDAQ drivers as well. These applications are all going to be used on Windows anyway. Appreciate the response.
This makes the most sense to me. If you know your color criteria at the time the DB is queried, and your DB supports it, have the query select the color as well. Then your data can come out sorted and you don't need to do any extra processing.
I've just found this package which is going to help loop through and compare distances. &amp;#x200B; [https://github.com/ghuntley/geocoordinate](https://github.com/ghuntley/geocoordinate)
As a junior C++ developer about 15 years ago, I came across a “goto” written ten years prior with the following comment: /* If you don’t know what this goto is doing, or why it’s here, don’t f--- with it. */ So I did what any self-respecting, semi-competent junior dev would do: I exorcised the “goto” demon by adding 150 extra lines of code, seven layers of nesting, and five years worth of emergent bug reports assigned directly to me. This was in a module that hadn’t had a bug report in over three years before I touched it.
Unfortunately it's the same as the other one. It only extracts the master image 😅
You make decent money from your blog?
Maybe it is the ancient code that was developed back in 1993 or so in C and then was ported from language to language until it ended up in [ASP.Net](https://ASP.Net) Core. The original author is probably long retired and can tell a story how he (most likely not she) wrote the entire function on one weekend night fueled by Jolt cola or beer. This code is atrocious. Gotos and ref parameters. It screams C written by assembly programer. Jesus.
That sounds like a cool project! 1. WPF vs. WinForms can go either way. I'm in the WPF camp because a) styling is easy, b) xaml markup is nice to read, and c) netcore support. I use WPF on apps that operate with USB and use lots of native code so it would work for you I'd imagine. 2. Check out ConEmu. They have an embedded shell that can attach to arbitrary window handles. Same thing that's used in git extensions so it might work for you. 3. I have had no problem with C dlls using dllimport. Obvious take caution with the calling convention but otherwise things work as expected. Performance wise, as long as your not crossing the managed-unmanged boundary excessively, the cost is nominal. I've integrated lots of win32, USB, and other complex libs and C# makes it pretty painless.
If you already have a VPS and database through Azure, you can just deploy straight there with the credentials they give you, then your site can be accessible through their [sitename.azurewebsites.net](https://sitename.azurewebsites.net) &amp;#x200B; Where are you getting the publish URL?
This sounds like exactly the information I needed. I'm most definitely *not* a GUI programmer, so I need something to keep it simple while learning. Sort of looking forward to it - I've not touched that code in ages and have some improvements that are long overdue. Summer projects FTW!
Nice experience xD
I already started reading a bit about JavaScript. However the amount of core to transfer is overwhelmingly large.. it will take me months just to wrap my head around
Just did some digging into ConEmu and it's not exactly what I'm after. I see how git extensions use it, but I'm looking for something a bit more polished. I guess, depending on license, I could grab the code and muck out the bits for what I need. Hmm, that might be a good learning experience all by itself lol. Thanks again!
Linode which tiers at $5 a month, got the recommendation from a Microsoft developer evangelist in his tutorial on dotnet core. Linode, who offers linux virtual private servers, requires you compile your C# for linux. Namesilo provides domains (specifically .com) for $8 per year. - forever.scg
Airborne surveying? If the recorded flight data has no concept of line numbering from the planned ideal flight path, as stated above you're going to have to do some geospatial operations and NTS (NetTopologySuite) is a great tool for it. Off the top of my head you can try something like the following: * Create a new class or extend the ones you've listed above that contain fields for the NTS geometry objects needed ie: add a "Path" field with the type of an NTS LineString * Convert your start / end points from lat/long to the local UTM datum easting/northing so you're working in metres (geographic coordinates suck for this sort of thing) * Create "Path" LineStrings from your planned and and actual start and end points * Perform a .Buffer() operation on your planned Paths by half your line spacing (or about the max distance the pilot would have strayed from the ideal) if you're doing an evenly spaced swath pattern. This will give you swath boxes of your planned flight paths that we can test if you actual flight paths are within * Perform an .Intersection() operation between your actual Paths and your operational area Polygon (if you have one). This will clip your actual Paths to around your planned endpoints * You can now run through each Planned "swath boxes" and test which Actual paths are either fully contained within it or at least intersect it via the NTS .Contains() or .Intersects() respectively * This will allow you to match your partial actual lines to your planned lines * I'll leave the optimization up to you but looping through each Planned and comparing it to each Actual will run at O(n^(2)) \-
I think you'll find WinForms to be a lot more similar to the Win32 API than WPF. It's pretty dated now, most people have switched to WPF or UWP, but I still prefer WinForms as my daily driver. As another poster said, you can use dllimport to use C dlls, but it's a bit tricky dealing with the managed/unmanaged (aka with or without garbage collection) memory conversions. You have to do tricks like marshaling unmanaged pointer arrays into managed C# arrays, etc.
My blog? No, not a penny from either of them. The news organization I work for pays 75+ USD for short forms news pieces and occasionally more for educational articles. Looking for some extra beer money? I can hook you up.
About 3: p/invoke can do everything but there is .net wrapper for sqlite. That said, a person who knows C++ really should prefer C++/CLI, but that's not in the new NET (yet, and I didn't hear the MS (or other) compiler people have the intention to put it in).
.NET Core 3.0 will support it, but only on Windows.
The only reason I used to move between Visual Studio and VS Code for C# dev was multi line editing. Until I found the Select Next Occurrence extension.
In the case of the linked source file: they implemented some state machine with a switch-case. That typically has internal state changes which are simple to implement by... jumping to the state, hence `goto`. There's huge amount of thinking around FSMs though, what we see there is kinda primitive. But hey, it works.
Story of almost every rewrite is: "now **I** know what this does!" 😁😁😁
Thanks, as you have to enter a colour i will try to implement this. I currently have to different if statements I.e i If (colour== “Red”) { { Else id (colour == “red” { }
I wrote "I didn't hear"... So I went looking, indeed there's work: https://github.com/dotnet/coreclr/issues/18013. In there, the .NET Paint guy says "I'll be a guniea pig", funny :-). It's funny (not) how all of all .NET is being copied into the new one, too.
If you are using VS, you can just straight up press publish and choose azure, it will ask for credentials and stuff, but it's pretty straight forward, it even opens the newly deployed app after the publish.
Wpf has dotnet core support as much as winforms does https://devblogs.microsoft.com/dotnet/net-core-3-and-support-for-windows-desktop-applications/ .NET Core 3 and Support for Windows Desktop Applications ... WPF is the more 'modern' option but still well old. Winforms is usually easiest to throw some GUI together when don't want to really concentrate on GUI work if you get me. Its simple, it's quick and it does the job usually. WPF is very powerful and create some really nice UIs but it is very much a large learning curve. So it depends if you just want a GUI quick and easy or if you want to learn about writing GUIs...
I'd start with winforms as you will spend more time working on C#. Once your comfortable with the language try WPF.
https://stackoverflow.com/questions/37413837/c-sharp-rsa-encrypting-text-using-a-given-pkcs1-public-key i think you need bouncycastle nuget pkg
Fuck. The. Fuck. off. If u really known Win32 c++, then C# is trivial to pick up. LPSTRSZ? FUCK U! WPf is dead. U are either a retard or a joke.
&gt; I thought it would have been a nice investment going forward. Well, I have excellent news for you: It still is a nice investment going forward! LINQPad 5 will continue to work just fine. Your license won't expire. And depending on the scripts you run you might not even be able to use LINQPad 6 (5 runs on .NET, you can use .NET libraries, 6 runs on .NET Core, you can use .NET Core libraries).
Why dont you just use the console? WPF or Winforms only really makes sense when you use them, if you'll just make them the container of a console-like window, just use the console directly. (Also, WPF is simply the newer, easier of the two. Where you can, use WPF)
Did you mean that code in linked repo is bad?
1. WPF sure is more modern in its capabilities, but the initial styling is just plain white and ugly. Takes a lot of initial work to make it look nice, and there's a lack of many out-of-the-box controls you learn to expect from Windows. So if the project is small, I still prefer to go for WinForms. 2. What's wrong about a multi line text box with some standout, stderr redirects? Unless I don't understand you properly. 3. Like others said, p/invoke is powerful enough to bind to any C library, and COM interop is also possible, but many well known libraries already have C# implementations. Just find the right Nuget package and you're good to go all C# style. Another small thing: if you want to use some well known API, you can always go to https://pinvoke.net/ instead of fighting of figuring out the correct signatures yourself.
As far as I know they just use mysql client directly.
Yeah omnisharp could use some extra love. I've mapped: { "key": "ctrl+alt+o", "command": "o.restart" } for the times it goofs up (and `ctrl+alt+r` to `workbench.action.reloadWindow`) --- So, to OP: Both is good, i'm at about 75/25 VSCode/VS. I've been using VSCode in an instance-per-project manner on medium solutions, restarting omnisharp several times a day. It's frustrating but i still find i am more productive using VSCode for the basics and breaking out big bro VS for any in depth debugging or refactoring sort of stuff. (Having used VS back to '02 fwiw)
There is also 3. The person prefers it over the alternatives, for example to exit nested loops since C# doesn’t have scoped breaks. Doesn’t have to be clueless or genius.
Poster above doesn't have a clue what they're talking about. &gt; Maybe it is the ancient code that was developed back in 1993 or so in C It's part of the ASP.Net Core MVC pipeline, so no. &gt; Gotos and ref parameters. The logic is structured as a case statement with gotos *clearly* for performance. It's also a common way to implement a state machine, but you don't need to crack open a profiler to know that performance is the driver here. &gt; It screams C written by assembly programer. It screams some people will need to run this code billions of times a day, and many will need to run it millions of times a day, and they won't appreciate me wasting cycles here. ASP.Net Core is just about the fastest web stack there is, and you'll likely have to go quite a ways down the list before you see another that you'll recognize by name.
Do you need specific C libraries that only exist in that form? Because the 'normal' thing to do would be to look them up on nuget. There'll either be a pure C# version of it, or some bindings. Either way, it'll be better to use those than to drag all that pointer and handle stuff into your project. And since you're new to C#, you'll just keep using C/C++ patterns and miss out on the opportunity to learn how things are done in C#.
I don't really understand why people still use WinForms. You can totally use WPF as you would WinForms, so why bother with the latest?
[removed]
What ANSI terminal? Only pretty recent Windows 10 have ANSI terminals which needs to be enabled in each console application.
Came here to say there is a huge difference between goto Case and goto Label (under the hood all these things are jumps) because goto Case is fundamental to good state machine design and I have very rarely written one without using goto Case at least once. It's something more people should know about but do not run from.
private const string base64Cert = "publicKeyStringHere" var cert = new X509Certificate2(Convert.FromBase64String(base64Cert)); RSACryptoServiceProvider rsa = (RSACryptoServiceProvider)cert.PublicKey.Key;
Another classic /u/Lwkowski question. What have you tried? What other regular expressions? Did you look up what RegEx provides you? Come on, show at least a minimum amount of effort when asking for help.
Most people nowadays just use the Microsoft provided one. The provided functionality is in most cases correct. Besides that there are several comparisons available on the world wide web.
DataTable is fine, reading from the dataReader directly into a string list is better if you are only reading one column.
Datagridview
&gt; I'm most definitely not a GUI programmer, so I need something to keep it simple Then use WinForms. It's essentially an updated version of VB 6, designed to be novice friendly. WPF is much harder to get started with. For experts they are equally difficult, but you need to know more on day 1 for WPF.
I wish WPF just presented itself as more approachable for beginners. Tiny changes they could make, like hiding the XAML by default. The initial impressions people get when opening a project matters so much, so when Winforms only presents the user with a designer, toolbox and a property view and the assumption of drag-and-drop, then they're happy to start trying things out. Could you imagine how daunting it would be if the default view showed all the code-behind being generated, next to the designer? &amp;#x200B; So when WPF shows this big box of XML underneath the designer, that's scary. Already lots of text that you apparently should understand. It's a whole new world people aren't prepared for, and simple decisions like ignoring it entirely in favor of the basic drag-and-drop experience feels like a huge decisions for beginners. They never get to the point of realizing they *can indeed* just drag-and-drop and input stuff in the property view, just like in winforms. &amp;#x200B; Personally I had the opposite impression; I thought it was really cool to have a window that showed me what happened "behind the scenes" of what I made in the designer, but I can understand why people think it's more confusing than helpful. &amp;#x200B; Also because of the lack of adoption of XAML the tooling goes under the radar. How many are aware that 'Visual Studio Blend', an XAML designer tool is installed alongside Visual Studio?
You hit the nail on the head 100% People who come from years of Win Forms development from when it first began/web dev are likely to be happy with the tools provided with the jump to WPF, providing a lot more maneuverability. But exactly as you said, the initial impression is WPF looks super complex, and everyone consistently mentions mvvm and other high level models, that WPF just becomes daunting. Also, i have a tiny laptop screen and WPF designer is super cluttered, the properties/events dialog is also messy. Even though as said in this post, WPF can be used exactly like winforms with all the code attached to control events etc no problem, but people are reminded constantly that "this isn't the right way to do it" and get overloaded.
&gt;Goto allows you to jump around in a very uncontrolled way, and the compiler can't help you much. "Uncontrolled"??? it does exactly what you tell it to do.
`string1.Equals(string2, culture)`?
It's a way to affect how case statement fall-through affects things. It's not inherently bad in this specific case (ooo pun). &amp;#x200B; Goto outside of this case is cancer.
FWIW, I endorse this message.
No! Don't make me fetch a rolled up newspaper.
Was this ye olde base 64 encoded state thing? I never coded in WebForms but I had to web scrape stuff and often just hard coded that a request (because it worked). Many years ago, so it's barely a memory :)
Exactly right. Also, if you know how to, for example, iterate a list quickly, then it's not pre-optimisation, it's just being a better developer. I think it's an important distinction. Optimisation is quite specifically the process of taking something suboptimal and bringing it close to optimal.
Boy there really is no winning with developers, right? Try to soften "never use goto" to "use goto very judiciously" and the only thanks you get is, "NUH UH you forgot one case." I can't call it invalid, but in 15 years of professional C# I have yet to find myself in a situation where I *need* a `goto` to write an algorithm. I can contrive a scenario where the specific implementation decisions I made make it feel as such, but that doesn't mean those implementation decisions were correct or the only approach. You can break on different conditions if you use a while loop. I can imagine that getting complex, but struggle to believe the answer to "loop 5 needs to break to loop 2" is as often a `goto` as "Wait, why are we 5 loops deep?" so often it needs to be its own point, as prominent as "`goto` has performance characteristics".
dt.AsEnumerable()
Its still missing the line: Kids dont use gotos, you dont need to, and even if you did your not that smart. Source: programming 35 years, had to use plenty of gotos due to language limitations in the distant past. Im still not that smart.
Don't know if it's an issue with you but it's something to consider. C# does not produce a native binary exe like C++. It produces an intermediate code exe that is easily decompiled.
lol it's fairly difficult to make WinForms look pretty
https://github.com/migueldeicaza/gui.cs
I love SimpleInjector.
Did you report it?
After 5 years I went back to windows, coming from linux, I'm developing a project, and I was using monodevelop with gtk#, but it wasn't working on windows because of gtk#, the code I used on mono is the same here, I had to create a new project but just copy pasted the code, on mono I used =&gt; new Window(); but on winforms it doesn't seem to work at all
Didn't touch win forms for a year but if I remember correctly after creating a new form you need to call form.show()
&gt; netcore support What do you mean by that? .Net Core 3.0 will support both WPF and Winforms.
Looks like you are just instantiating the new forms. You still need to call Show() to make them visible.
I had the same thought initially but I think he’s saying he wants a UI with a console at the bottom to use as an output window, nothing more
Means that I like that wpf has netcore support. Doesn't mean that winforms is lacking netcore support. I can see how some may think that's what is implied here.
Haha, you mean you don't like the default control grey and beveled boxes on all the things?
I wasn't sure exactly what you needed but that's the first ANSI terminal that came to mind. If you find one please post back!
https://www.w3schools.com/sql/sql_case.asp Just for completeness, I would use a sql case statement to create a column for color. That column wouldn't exist in the DB, only in the output. Then there is no business logic in the database, but the query is exactly what you need when you are done.
To clarify it's the ".NET Core" one. Lots of people still out there incorrectly believe that Unity is the bleeding edge.
https://github.com/danielpalme/IocPerformance As long as you can build everything with standard ms di, I would stick with it. If I need more configuration options I am mostly using Grace or DryIOC. Kind regards Alexander
 [https://regexr.com/](https://regexr.com/)
If you want a plenthora of controls and nice styling API then I suggest Electron.
Removed: Rule 3.
Removed: Rule 3, Rule 4.
First, do you know how to generate a random number? I will assume you don't, becuase if you did you'd have tried some things. It's not hard, but if you're not the type to read the documentation you can make a big mistake really easily. To get random numbers, you need to use the `System.Random` class. For reasons that would take an extra paragraph, it's never a good idea to have two instances. So most of the time if people need a random number, their class looks at least like this: public class MyGame { private static readonly Random _rng = new Random(); // ... the rest of the code } Larger applications might have a static class that keeps up with the one instance or do something fancier. Let's not diverge. If you want a random double, the `NextDouble()` method returns a random double betweeen 0 and 1. If you wanted it to be between two other numbers, there's a formula for that: `value = (random * range) + minimum`. So in our class above, we could write: public double GetRandomBetween(double minimum, double maximum) { double range = maximum - minimum; return (rng.NextDouble() * range) + minimum; } But you probably want integers for coordinates. The `Next()` method returns integers. It has two useful overloads, but usually the one that takes a minimum and maximum is used. Note that the minimum is inclusive, but the maximum is exclusive. So if we wanted to get a number between 50 and 100, we have to use a minimum of 50 and a maximum of 101. I still like writing methods to wrap around this, but more on that later. --- So, how you pick a "random location" for your player could go several ways. It sounds like you already know the coordinates of 7 potential locations, and you just want a random one of those 7. A `switch` statement could work, but there's another way. One neat trick is any time a `switch` statement would work, a `Dictionary` could too. And if you're looking for a random value, in this case an array can work. Let's say the 7 player locations are in an array. We know the array has indices from 0 to 6. So if we ask for a random integer between 0 and 6, it's the same as asking for a random element from the array. Remember when I said I like wrapping things with classes? Here's one way to do what you want: public class MyGame { private static readonly _rng = new Random(); private Point WarpLocations =&gt; new Point[] { new Point(...), ... }; private Point GetRandomWarpLocation() { var index = _rng.Next(0, WarpLocations.Length); return WarpLocations[index]; } } Ta da! That's all there is to generating random things. If you want to choose from a set of items, "pick an array or list index" is usually the best approach.
Just because I like to watch things burn I might start a campaign to make goto great again ;)
It is easier to do RAD for it. If you're making a relatively simple business app extension, or you need a quick prototype, why not WinForms?
Because I can do it as fast in WPF
I wonder what it would take to get [ILMerge](https://github.com/dotnet/ILMerge) running on non-Windows platforms. Would be nice to at least run it when you do `dotnet publish --self-contained`
Good for you.
This is very true. "Never do x because of reasons that don't necessarily apply to you!" But in general it's a good rule to follow. If you're using goto these days it's either because you have a well-thought-out reason or because you're doing it wrong. The one case I've seen it work is a label at the end of a function to clean stuff up. If something fails you jump straight to the label, any cleanup actions are performed and the function exits.
Nice.
Thank you so much, I understand how to do it now, though, I do have a few questions about the last code segment. 1) what does index do where you wrote return WarpLocations[index]; 2) where you initialized WarpLocations it says ... and i want to make sure if that is for the coordinates 3) (not a question) I want to make sure I understand the code, so, I want to summarize it in my own way : You made an array and then let the random generator choose through the coordinates and then it returns to index? Also thank you for helping me!
That's quite a huge performance jump from Json.NET. I'm impressed.
Can't watch right now but how good is it?
It's good.
Actually I'd recommend string.Compare and passing StringComparer.InvariantCultureIgnoreCase or something of that nature for case insensitive comparisons
Then its probably best to wait for .net 5 to be released in a year or so so we don’t have to do this more than once.
Thanks for summarizing. That’s all I needed to know.
You should not be eating your SQL. Dogfooding was not meant to be taken literally. To answer your question- Use an ORM and dependency injection, not raw strings. You're relying on coding conventions to keep you from having sql injection vulnerabilities and this will inevitably be a maintenance nightmare.
So, having an estimated 20+ pr's in various .net open source stuff, goto is used quite liberally in the high performance code of the clr/.net core . These projects all have integrated an IL diff generator for existing code. Smart uses of goto can reduce code size and improve performance. One pr I created recently improves the .net core objectpool implementation: https://gist.github.com/Mrnikbobjeff/44962407589d9651fc9051c57f09c020 Here the use of goto reduced code size and improved speed instead of having two for loops checking the end of the array, one for the last elements in vectorized code when a null ref has been found and one if the size of the area is smaller than the remaining unvectorized elements.
Thing is, I am still a good two years away from starting to work and most of the .NET programming I do is open source (or soon to be) from which I don't earn any money. I love using all the bleeding edge features of C# and .NET, doing most of my work in the newest previews possible. And I get the feeling support for most of the bleeding edge stuff won't make itself to Version 5, rendering it a little more useless to me. (Similar to Span&lt;T&gt;, Memory&lt;T&gt; support in 5)
Maybe try to ask Joe Albahari very politely? He's a very nice guy.
The key point here is “smart uses of goto”...
&gt; Thank you so much, I understand how to do it now, though, I do have a few questions about the last code segment. &gt; &gt; 1) what does index do where you wrote return WarpLocations[index]; `WarpLocations` is an array. I don't have time to make an array tutorial (there are a million of them, too!) but I can explain this quickly. An array is like a lot of variables packed into a box. If there are 2 warp locations, you could have `WarpLocation1` and `WarpLocation2`, but if you wanted 50 that'd get tedious. An array solves that. If an array has 50 elements, it's like 50 different variables named `WarpLocations` packed into one. To tell it which value you want, you have to pass it an "index", which is a number from 0 to `Length - 1`. So again, if there were 50 locations, the first is `WarpLocations[0]`, the second is `WarpLocations[1]`, and so on up to the last valid value: `WarpLocations[49]`. &gt; 2) where you initialized WarpLocations it says ... and i want to make sure if that is for the coordinates I used '...' for places you need to fill in yourself. So if there were 2, it would look like this (with prettier formatting): private Point WarpLocations =&gt; new Point[] { new Point(10, 20), new Point (20, 30) }; &gt; 3) (not a question) I want to make sure I understand the code, so, I want to summarize it in my own way : You made an array and then let the random generator choose through the coordinates and then it returns to index? Yes, a good way to summarize it is: I put some number of locations in a bag. The `GetRandomWarpLocation()` function selects one of them randomly.
you can get a VPS for 60EUR per year [https://contabo.com/](https://contabo.com/?show=vps)
Is this a new library for serializing and deserializing? Did they mention how it compares to Newtonsoft.Json?
Ok, first, you asked me 'why not'. Second, that's just my own experience, sure, but the context was about which one to learn. So if you're a newcomer, you have no reason (I can think of) to learn Winforms over WPF.
Not as feature rich at the moment but more performant in both time and allocations.
&gt; The one case I've seen it work is a label at the end of a function to clean stuff up. If something fails you jump straight to the label, any cleanup actions are performed and the function exits. `try...finally` has something to say about that. It has scoping issues. So does `goto`. The point of `finally`'s scoping limitations is they force you to declare and initialize the things that may or may not have been initialized within the `try`. Things that don't need special cleanup can be scoped in a way that `finally` doesn't have to see them. `goto` doesn't have any special scoping rules, so it's harder to keep track of what a labeled jump is and isn't responsible for. The flow control is also more clear. ExpensiveThing thing = null; ALessExpensiveType something = null; try { var initData = GetSomeData(); thing = new ExpensiveThing(initData); var dataIWanted = Process(thing); something = new ALessExpensiveType(dataIWanted); } finally { thing?.Dispose(); } var theRealResult = WorkOn(something); return theRealResult; It gets some data, creates an expensive thing, uses that expensive thing, then creates another thing with it. If anything goes wrong, the expensive thing is disposed. If nothing goes wrong, the expensive thing is disposed. Then, some more work is done. This is so common it has a syntax sugar: var initData = GetSomeData(); ALessExpensiveType something = null; using (var thing = new ExpensiveThing(initData)) { var dataIWanted = Process(thing); something = new ALessExpensiveType(dataIWanted); } var theRealResult = WorkOn(something); return theRealResult; I'm not 100% up on the GOTO syntax, but I feel like this is a lot harder to get right with it, or at least not as intuitive. To make it even work, your API either has to be error-code based or you end up using a try..catch anyway. And if it wants to keep compatibility with the above, you've got a lot of other problems: ExpensiveThing thing = null; ALessExpensiveType something = null; Exception maybeError = null; try { var initData = GetSomeData(); thing = new ExpensiveThing(initData); var dataIWanted = Process(thing); something = new ALessExpensiveType(dataIWanted); } catch (Exception ex) { maybeException = ex; goto IfError; } var theRealResult = WorkOn(something); return theRealResult; IfError: thing?.Dispose(); throw new SomeException("See the inner exception for the real problem.", maybeError); Ick. So much bouncing around to figure out where your context is. This is why people don't like using GOTO. It doesn't get much better if we're working with error code APIs. I like this better using local functions, if I had my druthers, but even that feels gross: ExpensiveThing thing = null; ALessExpensiveType something = null; try { var initData = GetSomeData(); thing = new ExpensiveThing(initData); var dataIWanted = Process(thing); something = new ALessExpensiveType(dataIWanted); } catch (Exception ex) { ThrowError(ex); } var theRealResult = WorkOn(something); return theRealResult; void ThrowError(Exception ex) { thing?.Dispose(); throw new SomeException("See the inner exception for the real problem.", maybeError); } Why not just use `finally` so natural exception flow happens?
I mean... it's essentially just an XML tagging system. If that's intimidating to someone, I can't imagine they've been coding for very long. The useful stuff (bindings especially) can take some time to wrap your head around, but it shouldn't take more than a few minutes to get settled into very basic WinForms-like WPF functionality.
I'm so glad that this is finally being taken more seriously. JSON has been so incredibly prevalent, but .NET support was always disappointing. Now it's being treated as a first class citizen. They're doing a great job.
Really? That good?!
Even better
How does the parent file detect the file to be read? Is the filename hardcoded? Does it use FileSystemWatcher to detect a new file and then read it? I've recently had a similar issue with FileSystemWatcher where it would detect a file being copied and try to execute processing before the file was completely copied and would fail. This may be similar to your issue. I have two helper methods that I use now to begin opening a file, with a retry loop/timer. public static bool CanReadFile(string filePath) { try { using (var fileStream = File.Open(filePath, FileMode.Open, FileAccess.Read, FileShare.None)) { return fileStream != null; } } catch (IOException ex) { if (IsExceptionAwaitable(ex)) return false; throw; } } public static bool IsExceptionAwaitable(IOException exception) { var errorCode = Marshal.GetHRForException(exception) &amp; ((1 &lt;&lt; 16) - 1); switch (errorCode) { case (int)WindowsFileError.FileNotFound: case (int)WindowsFileError.LockViolation: case (int)WindowsFileError.SharingViolation: return true; default: return false; } }
So what do you think, is this a good idea, bad idea, or are you just going to pretend it doesn't exist?
With that volume of traffic, you're *probably* overengineering.
JavaScript isnt the same as Java Not to offend, but that is a pretty basic thing. Are you new to programming?
I wonder if the JSON newtonsoft guy gets any royalties from this or something, because didnt Microsoft team up with him for their own `System.Json` or whatever implementation a few years ago?
I really hope we can easily write powerful custom serializes for specific classes and properties. Also that the equivalent of JObject/JToken/JArray is usable. Aside from those fears it looks amazing.
If you are just making things for you or work mates winforms is the way to go. It’s quick and straight forward.
It'll certainly help in stopping those pesky NotImplementedExceptions. But it's nothing an abstract base and interface can't do already
While I knew that it can throw that exception it has never happens to me
I didn't say that good. I said good.
Yeah it's rare since most implementations populate all requirements. I've seen some lazy ones though
I use Autofac and I love 99% of it. In fact, [I wrote a library around it](https://github.com/leaderanalytics/AdaptiveClient). The part I don't like is the way nested vs peer scopes are created. It's a long story. BTW, unless there is something SERIOUSLY wrong with your IoC lib, speed should be pretty low on your list of comparison criteria.
I'm just gonna pretend it doesn't exist. Honestly...WTF?! I have a *huge* respect for the architects behind c# and I liked every single addition so far, but this just looks unnatural and scary.
This was in c++ and failures weren't throwing exceptions, they were giving a failure HRESULT.
Thank goodness. XML had first-party support in the BCL for years and JSON was left out in the cold with really dated/awkward implementations (`DataContractJsonSerializer`, I'm looking at you). I understand that the void had been filled by a few third-party libraries but I felt like something that basic should have been handled by the BCL **years ago**. So thank you Microsoft and all those who contributed to it.
You almost had me
Thanks for this! I'm still in beginning c# stages and haven't gotten that far yet!
1. As far as I know, this is not based on Newtonsoft.Json. 2. Newtonsoft.Json is MIT-licensed, so MS could use it without paying. 3. James Newton-King, the author of Newtonsoft.Json now works for MS. So MS is paying him.
I fear the opposite. People are going to add default methods that are "not breaking changes" that just throw NotImplementedExceptions.
If the second level cache is just to eliminate the need to even hit the db on the home page, it could be a decent thing to keep. Really depends on how often the data changes, and how slow the call to make the db call is. Most systems today are fast enough that there's no need though. If the data is getting refreshed often enough, that second level cache might be saving quite a lot of hits to the database.
Have you done performance bench marking and identified hot spots that actually need addressing or is this speculative? If it's the latter then you're prematurely optimizing, which is effectively solving a problem where there isn't one (or at least, isn't one _yet_).
Excuse me for not mentioning I wrote the fucking thing in C# but that wouldn’t have been good for you anyway. So tell me cock breath where the fuck do you suggest I post to then? Grace me with your infinite mod wisdom...
It sounds like you're looking for insight into the general theory of blockchains independent of language. You didn't provide code of a particular issue you're having. You didn't specify what challenges or shortcomings you're having with C#'s language features for managing blockchains. &gt; 1. How to actually start the blockchain? &gt; 2. What do I do if a block fails to verify? &gt; 3. When should verification happen? What does that have to do with C#? Try /r/learnprogramming or /r/netsec
I don't think caching database calls would ever be considered overengineering. If this is site public facing/customer impacting/google crawlable etc. and the data is as static as you're describing then yeah, cache everything.
What does it have to do with C#? Seriously? I’m writing it in C# does this actually have to be spelled out are you that simple that you can’t figure this out for yourself? Whatever... not like people in this sub would actually be smart enough to provide any decent info anyway
The sub is about C# _as a language._ If someone comes in here asking for general theory about how TCP/IP networking works, then that would be in violation of Rule 1. If someone comes in here asking why their C# code parsing a TCP/IP packet header isn't working and they post their code, then that's permitted.
I think it's fine. It doesn't seem that different from making extension methods for an interface.
even with 1 visit a day you can pull on the order of 100ms of latency out of your web page with caching, often. that alone may be worth it. however you must weigh that against the complexity of ensuring the cache is properly invalidated. sometimes that is easy, when it is, go ahead and cache. when it isn’t, maybe look into more careful db tuning instead first.
I've handled that before and I think it's messy all around since C# isn't designed to be used that way. But one of my first jobs was heavily reliant on a C library, so I know a few tricks. The best trick was to make a good wrapper, but if you get too deep in that you can find edge cases where the dispose pattern can't save you. So let's add this example to the pile. ExpensiveThing diamond = null; IntermediateThing middle = null; try { var initData = GetInitData(); ThrowIfUnsuccessful(_nativeMethods.CreateExpensiveThing(out diamond)); middle = new IntermediateThing(diamond); } finally { if (diamond != null) { _nativeMethods.DestroyExpensiveThing(diamond); } } var result = DoWorkOn(middle); return result; That's more palatable than: WhatIWanted result = null; ResultCode resultCode = Result.Error; var initData = GetInitData(); ExpensiveThing diamond = null; var hResult = _nativeMethods.CreateExpensivething(out diamond); if (hResult != HResult.Success) { goto error; } var middle = new IntermediateThing(diamond); result = DoWorkOn(middle); resultCode = Result.Success; goto cleanup; error: // Probably do some logging here cleanup: if (diamond != null) { _nativeMethods.DestroyExpensiveThing(diamond); } // Now I have to figure out how to return a result code and/or the result, // I either need a special object, or I need to return a result code and // use out parameters, or soemthing else exotic... Ick. Why? I think it's worth the extra work to avoid this. I hate when I have to set up state at the top of my method then make the tail of my method have to disambiguate what happened based on that state. I want to do what I say or throw. There's so many ways to make a subtle mistake because our code doesn't flow top to bottom anymore! Error codes are like `async`, they're viral. I like to hide them at my system boundaries. My C# application doesn't need to know about HRESULTS all the way up to my UI.
Seems like cherry picking to me but like I said: whatever.
Multiple inheritance
Observer design pattern has two very recognized implementations; events and pubsub. * Events are an implementation of the observer subscriber pattern. * This implementation uses the "Handler" connotation. * Subscribers know about the observables. * Rx is an implementation of the observer pubsub pattern. * This implementation uses the "Observable" connotations. * Subscribers do not know about the observables. * RoutedEvents in WPF are also an implementation of the observer pattern, representing the events as a normal object rather than a delegate. * This is like an amalgamation of events and pubsub, combined with the weak event pattern. * The API is the same as events, but behind the scenes other objects are managing the subscriptions.
No seriously, if you can build and deploy a GUI just as fast in WPF over WinForms, then that's good for you. I like to use WinForms for quick and dirty UIs because I can deploy it significantly faster. I just have to spend more time to make it look right in WPF or even make custom controls. I don't think I'm alone in that. I'm just not gonna put in the extra effort to make it look nice in WPF if a) The app is only gonna be used for a few months for one project. OR b) I'm just trying to show POC OR c) I'm just taping it on to some legacy business software that looks, acts, and smells like shit anyway. WinForms looks like paradise compared to some of the things in the wild running on COBOL and VB6. The big reason WinForms still has some value to learn is that it is ridiculously easy to learn the basics and quickly build a simple app. At the end of the day, for anything complex, the GUI is usually just something I plug into a ViewModel or presenter anyway. I'm a programmer for a small business; not everyone's going to have the same priorities or circumstances as me.
at first, I've been using this popular component from the gallery but even after the days spent on debugging of the stranger's code (a very good code it must be said but still dark of depths inside) it was felt deeply wrong to blame a person who invested months of his life for the public good. finally, there's a smb you can blame without feeling bad about it.
Pretty much, but you need to use the ConditionalWeakTable hack for fields.
SimpleInjector is the fastest main-steam advanced IoC container if you want advanced features, otherwise using the MS .net core one is great. see here a comparison https://github.com/danielpalme/IocPerformance why use one over another? the advanced features you may require, and speed.
I think the design in Swift is much more coherent (and also essentially takes care of “shapes”), but this is probably the best you can do with an existing complex language with a long history and pilled up legacy, etc. I think it will be useful.
Apart from reducing some methods in the abstract base class, i don't really see the point.
Sure. Really HRESULTs are bad because a number doesn't give me a lot of information about what actually went wrong. An exception is better, or for non-exceptional circumstances a proper status object. One thing I hope catches on for things that you expect might fail is a pattern like this ```csharp var (data, status) = GetSomeData(); if(status.OK) { ProcessData(data); } else { HandleError(status.Error); } ```
This is terrible advice. You do realize that each added line of code adds potential for new bugs &amp; caching contains non-trivial corner cases even in simple implementations, right?
I'm liking this feature less and less as I read more about it. Why do interfaces need protected methods? This is getting ridiculous. I do understand the benefit of default implementations for interface methods but it should remain at that, to allow breaking changes to be minimised and transitions done easier. I really dislike the idea of interfaces becoming abstract classes and essentially having multiple inheritance
The multi-line text box doesn't work as I actually need the ability to set colors. It's a sad truth, but most of this project is for my less than computer skilled father.
Exactly it.
I want to avoid the console as 1) that's how the code was originally written, 2) my dad is used to the newer version and likes it, and 3) I want to learn some new stuff, so a fancier gui helps me improve my gui skills while learning a new language.
Not the least bit worried about it, but it's definitely something to consider for other applications. Mostly, this app is used for my family to get family videos and the like onto the computer in a sensible format. It goes without saying that my extended family are *not* computer savvy in the least :D
No clue if they exist in C# form or not. Haven't looked yet. The only critical one I use is SQLite and I would be shocked if it's not there.
My understanding, someone correct me if any of this is wrong: It's faster than Newtonsoft because it relies heavily on `Span&lt;T&gt;` and other improvements. The maintainer of Newtonsoft has stated it'd be too much work to rewrite Netwonsoft to do that. So it seems like people expect Newtonsoft to slowly be phased out in favor of this.
That's the problem lol. I want the equivalent of a multi-line text control that supports ANSI control sequences (i.e. to set color, backspaces, and so forth). I've done the multi-line edit control, but the extra control sequences many of the subprograms output confuse my dad and that's becoming an issue.
My understanding, someone correct me if any of this is wrong: It's faster than Newtonsoft because it relies heavily on Span&lt;T&gt; and other improvements. The maintainer of Newtonsoft has stated it'd be too much work to rewrite Netwonsoft to do that. So if you're not using some of the deeper features of Newtonsoft, this is probably good enough and should be favored. Someone is probably either going to write a wrapper around this or update Newtonsoft, given time.
I love you now, unfortunately, I happen to be a cannibal. public static async Task&lt;object&gt; ClockDeleteAsync(MySqlConnection con, int id) { MySqlParameter[] p = MySqlParamify( ("@cId",DbType.Int32,id) ); return await MySqlExecuter(con,Queries.ClockDeleteWhereId,p); } Here is its implementation. I would prefer avoiding ORM / Frameworks like Entity. Of course, The MySQL Connector is of library, but what potentials are there for vulnerability and what refactoring precautions can I take? &amp;#x200B; MySqlParameter is from the MySQl Connector library. MySqlExecuter started in-house.
I love you both
Roger. What do we do if this was a collective undertaking by more than ① person. ヾ(^ω^*)
You forgot to add the totally horse shot option...
I'm sure that's what OP is being paid to figure out. You want &lt; 100ms load times especially on a homepage, taking the database out of the equation is a great step to take to get there.
The guy in video speaks at a million miles an hour and slurs his words, quite hard to watch.
IDK about you but my fingers are orgasmic while typing the new JSON API. Now I have a reason to look forward to coming to work everyday!
 `Array&lt;T&gt; : IList&lt;T&gt;` would like a word.
That would just be wishful thinking on my part.
That's the argument for why we don't need this. LINQ's Count() method shows how an optional interface can be used to override an extension method.
RichTextBox then :)
You're allowed to go home before the project is finished?
I do understand people's complaints about changing the core of what an OO interface is supposed to be, though I don't share the opinion that default methods break the abstraction. In Haskell, default implementations for typeclasses (roughly the same as an interface) are common and it hasn't lead to any incoherencies. Moreover, you can already provide default-methods today in a roundabout way, via extension methods, the only difference being that the implementor can't override these. Consider an IEquals-interface with two methods: Equals and NotEquals. It makes perfect sense to define: NotEquals(T x,T y) =&gt; !Equals(x,y); Equals(T x, T y) =&gt; !NotEquals(x,y); While also allowing the implementor to provide more efficient implementations if it so desires (maybe the Equals-method is computationally expensive, but NotEquals would be cheap). As long as you don't allow interfaces to contain data, I reckon this to be perfectly fine. I'm also for allowing operators on interfaces (including == and !=), but then again, I'm also for allowing custom operators, though I again understand that people would likely abuse them, defining !&lt;&gt;+=$ instead of a named method because it'd be the cool new thing. About allowing protected methods in interfaces, I'm much less enthusiastic, since they *do* break the interface-abstraction and do turn interfaces into quasi-abstract classes, but even here, you can make the argument that it's not that bad as long as interfaces can't contain data and thereby state.
Gives me an error.
&gt; Moreover, you can already provide default-methods today in a roundabout way, via extension methods, the only difference being that the implementor can't override these. Not true. See Enumerable.Count.
...no? we get catered food, foosball tables, epic gamer corner with Xbox One X, ps4, we can lease nitendo switches for about an hour each day, and more. The only downside is that the pullout bed by my desk is a bit hard on my back, being made of concrete and all. Also pretty cold in the winter.
Well, ok, you can do all sorts of things via reflection, but you can also subvert C#'s semantics via custom IL. What I'm saying is that you can't do it in a nice way. :)
&gt; I do understand people's complaints about changing the core of what an OO interface is supposed to be, though I don't share the opinion that default methods break the abstraction. Interfaces are not an abstraction, they are a promise. 1. If I implement this interface according to the docs, I can use my class wherever this interface is requested. 2. Nothing will ever be added, changed, or removed from this interface. This ensures 1 remains valid in future versions. The person adding methods to the interface does not necessarily know if my class will still be appropriate for the new interface. For example, they used adding Count to IEnumerable as an example. But not all IEnumerable's are countable. And realistically, the vast majority of new default methods are probably going to be simple enough to be an extension method or just throw a Not Supported exception. Very few will be complex enough to need to be added directly but simple enough to have a reasonable default implementation.
No, nothing like that. int Count&lt;T&gt;(IEnumerable&lt;T&gt; obj) { if( obj is ICollection&lt;T&gt;) return ((ICollection&lt;T&gt;)obj).Count; //else enumerate the items }
https://github.com/migueldeicaza/gui.cs
 FileShare.ReadWrite allows write access, do you actually write to it elsewhere and how is it done?
&gt;What is new in ASP.NET Core 2, compared to ASP.NET Core 1? bullshit
After installation the file in question is never written to, only read.
Fudge, I bought mine at the end of November 2018
That's totally a safe thing to do! Default interface methods are almost entirely going to be used by library authors. It'll make your life better even if you don't use it directly.
i would try setting it to Read then, just in case
There's also this feature that appears to let you log access to file. Never tried it but would take a look. https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/apply-a-basic-audit-policy-on-a-file-or-folder
I really like this change, but I'm a massive fan of multiple inheritance. A perfect use case I've wanted this for in the past is a Blazor component which can have it's visibility toggled. I wanted to have ICanHide with a default implementation of Hide() which toggles IsHidden, and be able to bring that behavior into a component which was already inheriting from a different base
I'd like to throw another vote in for SimpleInjector if you want advanced functionality, as there is not a single unsupported scenario which is supported by another library, and it is the fastest option available, not to mention the author is very detailed in their documentation and guiding philosophies. If you don't need more advanced functionality I'd say to go with the .net core built in ServiceCollection as most documentation will be targeted to that.
Got to see a demo of Blazor at DevIntersection this week and I am very impressed. Especially with the client side blazor stuff coming with .Net 5. From what i took away from it, client side blazor is basically Angular/React/Vue, but with .Net instead of javascript/typescript.
are your page loads slow? what tools have you used to determine that the DB calls are the culprit or even the biggest problem? It sounds far too small a system to need that much effort, try not to pre-optimize and before you do any optimizations be sure that what you are trying to optimize is actually an issue where you can gain some speed in a way that makes the effort worth it.
AGREED
If the projectile and the plane move at the same speed it’s impossible. You would basically need the b and c in Pythagoras’ theorem to be the same, which would need a to be zero then. You need to make the projectile move faster, then you can calculate the position (and possibly timing) to shoot at. If the speeds are different then by dividing the plane’s speed by the projectile’s speed you get the sine of the angle needed. So if the projectile goes twice the speed of the plane you get 1/2 which means the angle needs to be 30 degrees. If the speeds are the same then you get the angle to be 90 degrees which means it’ll never hit. So you can also determine the feasibility of hitting based on the ratio.
Thats a good point i never thought about that. The projectile will have to be faster than the planes speed then. I will try your suggestion of dividing the planes speed by the projectiles speed. Thanks
Absolute worst idea. An interface is a contract. No need for a default. It will make things so much worse. Imagine dependency injection. And tests.
can you give more info? These 3 lines are being used in production, should be working
From the blog at https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/ &gt; Remove Json.NET dependency from ASP.NET Core. Json.Net is a nightmare dependency and I really hope they also remove it from their azure sdks.
Full-stack development with C#, how cool is that?!
&gt; As far as I know using goto statement in code is bad practice. IOW, you don't know any better than parroting half a century old dogma. Read the paper referred to by /u/tulipoika here to get a different perspective.
Didn't UWP already have an on par JSON library?
that indian accent is so hard to understand
Bytes are signed in java, not in c#. That's the only difference.
Sorry, I cannot seem to figure it out. My Trig skills are not very good. The projectiles firing at 2 pixels a second, the planes moving at 1 pixel a second. Wouldn't that be the tanget at 0.5? How have you calculated the 30 degrees off 0.5? I figure if i can calculate the position where the plane would be where they would intersect when fired, i can easily calculate the angle and the distance of the shot. The projectile needs a distance as it is meant to explode at that distance, not on impact.
I love how quickly this is moving. Is there a feature timeline describing their plans?
I'm a "library author" (e.g. https://github.com/BEagle1984/silverback) but i still think that I will not use it. I understand the usefulness and why they wanted it (to deal with their breaking changes in widely used interfaces like IEnumerable) but it simply doesn't feel right to me yet. Maybe i will eventually get used to it...
In the c# example each byte gets its value converted to a string because the console.Write will call byte.tostring() method. Are you sure that plainly adding the byte to the output var does the same thing? I'm not an expert but shouldn't you use output += Byte.toString(file contents[i])? What is the sum of the first fifty bytes in the Java example and in the c# example? This might be a better test to see if the byte streams are different.
Just use a Linux VPS like Vultr or Linode. Vultr used to have servers for $2.50 per month. Not sure if that's still around Here's a tutorial for getting it configured with nginx: https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-2.2
What is your hashing code for each language?
Arrays are full of little hacks that everyone wishes we could get a redo on. :(
JNK (author of JSON.NET) is on the project.
Use a \`sbyte\` to maintain symmetry - Java's \`byte\` type is signed, like \`sbyte\`, whereas .NET has \`Byte\` being unsigned
Have you tried searching Google around this? There should be quite a few results if you search for something like "calculate angle to hit moving target" If you find something and can't understand it feel free to post back!
if you start firing at the plane exactly when it's above the AA gun, then it's not possible to hit it. Both bullet's and airplane's speed are the same, but since the bullet is travelling at an angle, then its horizontal speed vector is smaller than it's total speed(which is equal to plane's speed), and because of that the bullet will never catch up. You need to fire the AA gun before the plane is above it to compensate for the difference in the horizontal speed differences. I'll try figuring it out when ill get home.
Sorry, but a byte is a byte no matter what language you're using...
What happens if you do: System.out.print((int)fileContents[c]) instead?
I'm already planing a project i'll use blazor in. really hyped to try it out
if the projectile is twice as fast as the plane, then it should be launched at 30 degrees.
IL is not meaningful. JIT output is. The only real optimizations are eliding locals in release mode
IL doesn't optimize in a traditional sense
You can use non stdcall by specifying \`CallingConvention = CallingConventions.Cdecl\` etc in the \`DllImport\`
Java uses signed bytes.
Do they need to be human readable? You can just transmit them as chars on sender's end: &amp;#x200B; string asString = MemoryMarshal.Cast&lt;int, char&gt;(yourArray).ToString(); &amp;#x200B; on client end: &amp;#x200B; int[] asInts = MemoryMarshal.Cast&lt;char, int&gt;(asString).ToArray();
This doesn't allocate, it returns a char
It is nice and O(1). String is basically a read-only array of \`char\`s
That is intentional, because often that code will be errorenous without it. Just put a \`#define UNITY\_ANROID\` above or write it then add the preproc degf
It is entirely dependent on whether \`A\` is a reference type (class) or value type (struct). If it is a class, each \`new\` will allocate a new blob of memory that the GC eventually must clean up, not ideal for hot loops but else generally not an issue. If \`A\` is a value type, no, it won't
&gt;It has an instance size under 16 bytes. &amp;#x200B; This is due to be changed and is a poor guideline FYI, and so is immutably. Coming from someone who has written large amounts of perf-critical code, structs have value outside of small immutable values, extensively for interop and avoiding heap allocations
&gt; bullshit Yeah. A candidate should run away screaming if asked such a crazy-specific question in an interview. That level of detail will be useless to have a few years from now. Incidentally, the post already has answers that will be incorrect in a few months with the Core 3 release.
Its not the accent, he speaks very quickly and occasionaly slurs his words.
What I'm seeing is both move at 1 pixel per round. Plane moves 1 then bullet moves 1. So if you fire at 45 degrees you will always hit. Because bullet goes 1 pixel at a time. At 45 degrees bullet goes up 1 pixel and over 1 pixel every round. For a total movement of 1 pixel. Which means it is going at the same horizontal speed as the plane. That is assuming you show only the final location. If you show the 1 up pixel then the 1 over pixel then the plane is now travelling at twice the plane's speed and the bullet must be fired when the plane is 45 degrees before the gun so the bullet arrives when the plane is 45 degrees after the gun. No calculations are needed in this case as the speed is the same. The only variation is how you show the bullet. Height makes no difference. The only way to force an angle change is to vary the speed of the plane. 1.5 times the speed changes angles to 62.5 degrees from vertical. .5 times the speed is 22.5 degrees from vertical. This is all independent of height. Height changes only the number of degrees available to be fired at so a faster plane can be hit at lower levels than a higher level plane. With this as a starting place you should be able figure out your problem. If you want more help PM me. I can give you the math but I won't give you the algorithm.
Only cool if the community embraces it. People in general have a raging boner for the neverending proliferation of JS frameworks. I'm curious to see where we are in a few years.
The projectile has a speed of 1 in the 45 degree angle. Im using vectors here, so travelling at a speed of 1 in a 45 degree angle means the vector will be X 0.707 and Y 0.707 The plane or projectile speeds are arbitary to work out an algorithm for this. The positions and speeds will change
Besides the signed/unsigned issue, a byte can also differ in size. In C# it's always 8 bits, in C its length depends on the platform architecture.
Let's make a coordinate system. We can make the origin you position, which is also the projectile's starting position. We'll call the path the bullet takes **B**(t)=[Bx(t), By(t)], and the plane's path**P**(t)=[Px(t),Py(t)]. Next, we'll start with what we know. The plane's altitude won't change, so we know that: Py(t)=h And its horizontal velocity won't change: dPx(t)/dx=Vpx or Px(t)=Vpx\*t+Px0 This gives us the behaviour of the plan: **P**(t)[Vpx\*t+Px0; h] Now, we'll look at the Bullet's path. This is going to look similar, but different. Both the x and y component have a similar 'recipe' to the plane's x component. As such: **B**(t)=[Bx0+Vbx\*t; By0+Vby\*t] Now, we're going to do some mathemagic, since we want to know the angle at which we have to fire the bullet. I'm going to do it for the angle with the horizontal (but will also make a note for the angle with the vertical). We can say that: Vb^(2)=Vbx^(2)+Vby^(2) And even better: Vbx=cos(a)\*Vb Vby=sin(a)\*Vb Where we assume Vb to be constant. When the bullet hits the plane, **P**(t)=**B**(t) or, each of the components should be the same: Px(t)=Bx(t) Py(t)=By(t) which will gives us two equations, with two unknowns (t and a): Vpx\*t+Px0=Vb\*cos(a)*t+Bx0 h=Vb\*sin(a)\*t+By0 By solving these equations, you'll get the angle with the horizontal, and the time at which it hits. If you want the angle with the vertical, subtract a from pi/2 (or 90 degrees), or solve it with sin(a) and cos(a) switched. I'm on mobile atm, and this already took long enough to type. If you haven't solved it in ~7 hours, I'll update with the solution.
The distance pixel center to pixel center is 1.4142...pixels at 45 degrees, round to 1.414 to use your vectors. This means the plane travels 14 pixels in the time it takes for the bullet to travel 10. So if the plane is 10 pixels above the gun you must fire at 45 degrees 4 pixels before vertical. The plane and bullet will then meet. Your initial conditions were only that the objects moved at 1 pixel per second. My initial response counted each surrounding pixel as one pixel. If you switch to the algebraic method of determining distance that changes things but if you're going to use that method be aware that pixels are not 1x1 but 1x1.??? dependent on the screen size and resolution. So angles change based on phone model.
As much as I like the look of it I can't see it taking off, Microsoft are coming very late to this party. I hope to be proven wrong though.
I think the naysayers are overblowing it a little bit - it's a very niche feature... but I can see it's usefulness. Inherently, given that default interface implementations can't have state other than their own interface methods, it's not breaking any contracts. So, what's a potential use? In ECS systems for games, this could be very useful. Consider a simple `IEntity` interface: public interface IEntity { int Id { get; set; } IEntity Parent { get; set; } T Get&lt;T&gt;() where T : IComponent; } Imagine if you have an `IComponent` that references an `Entity`: public interface IComponent { IEntity Entity { get; set; } } You then add a new interface, called `IPosition` public interface IPosition : IComponent { Vector3 Position { get; set; } Vector3 WorldPosition {get; set; } } Now, note that world position one... We have to do some logic based on whether or not we have a parent of not, e.g, a concrete position component may implement something like: public class Position : IComponent { Vector3 WorldPosition { get =&gt; Entity.Parent != null ? Entity.Parent.Get&lt;IPosition&gt;().Position + Position : Position; set { ... } } } Now, we extrapolate that out for other things like velocity and rotation... if we add another type of component that needs a position, we have to replicate all that code again to do all the adjustments to the *World* position, velocity, etc... With default interface implementations, `IPosition` only works with stuff from `IComponent` and itself... so, there's no contract breaking. When I create my new `IPositionWithVelocity` component, I can just use `IPosition` in-situ. I hope I explained myself, typing this during a phone call.
I think it's an excellent idea, it's just poorly named. They're really trying to use interfaces as traits and interfaces, at the same time even though they're completely different things. My guess is that they've wanted to implement traits for a long time but felt that it would be really confusing to have them, abstract classes, and interfaces all in the same language... So they butchered interfaces and kind of tacked it on. I think what I'll do is the opposite of most people and start pretending that interfaces don't exist and just start treating them just like traits.
Me too, I have an intense dislike for Javascript and I'm excited to see what blazor does. I haven't paid much attention to it lately because it didn't have DOM manipulation last time I tried it... I just can't wait for a web without Javascript and I hope blazor makes that happen.
I'm not sure. A lot of people at work are excited about it. I think when we can first get our grubby little fingers on it we'll make at least a few internal applications using it.
Default implementations for an interface that cannot maintain state, and can only work with their own interface (and derived interface(s)) contracts, *cannot* break the contract. How does this affect dependency injection or tests? Answer: It doesn't.
Learn how to use the data classes you have available to. You dont need to create a data table, just use tge ExecuteReader and iterate over the results and toss that into a list. while (reader.Read()) { var val = reader.getint/getstring/(0); mylist.add(val); }
True, but thats not the hard part - the hard part is having the c++ library export every method as a function, using either calling convention.
Yeah, it's not ideal, and using the mangled names is hellish
System.Text seems the wrong namespace.
What namespace would you suggest? [System.Json is already taken.](https://docs.microsoft.com/en-us/dotnet/api/system.json?view=dotnet-plat-ext-2.1)
This just seems more and more like a feature where the 90% case is evil.
Probably the same thing. The difference in the two strings comes from differences in the data types (which others have already explained). If they're taking the SHA256 of the string they've built this way, that could be enough to explain everything.
It seems like a feature [some consider unnatural](https://static.tvtropes.org/pmwiki/pub/images/chancellor_palpatine.jpg) I don't think it's supposed to be used as some design philosophy, rather it'll alleviate a lot of pain later in development. I'm not a fan of IFeature1, IFeature2 scenarios, and this will solve that.
&gt; Sorry, but a byte is a byte no matter what language you're using. [Boy, have I got news for you, buddy!](https://en.wikipedia.org/wiki/Byte) &gt; The size of the byte has historically been hardware dependent and no definitive standards existed that mandated the size – byte-sizes from 1[3] to 48 bits[4] are known to have been used in the past.
Something like System.Serialization seems more fitting given the purpose.
No. Problem is how the byte is being encoded as a string. Signed or not makes no difference. Both types still store 8-bits if data. I suspect that OP really wants to format the data into hex before displaying. Promoting the byte to an int without sign-promotion would help out here.
The data in the bytes will be the same; it’s just being turned into a string “incorrectly”. The OP really should use hex instead to look at byte strings.
It will be impossible to hit if you fire when the plane is directly above. You have to fire before the plane is directly above. The angle would depend on how far the plane is from being directly above.
This seems to be the issue OP is facing, you can see it in the bytes strings: &gt; Java 37806870454946521037**199236143162**1053324832111981061060604776101110103116104325432483282477010510811610111432477010897 &gt; C# 37806870454946521037**-57-20-113-94**1053324832111981061060604776101110103116104325432483282477010510811610111432477010897 Java | C# ----|-- 199 | -57 236 | -20 143 | -113 162 | -94
so, for data streams is better to use the word "octet".
&gt; you can see it In Soviet Russia, it can see **you**! ^(this post was made by a highly intelligent bot using the advanced yakov-smirnoff algorithm... okay, thats not a real algorithm. learn more on my profile.)
I think the context is what really matters and 9 times out of 10, you can just use "byte". It's when you're talking to different systems (or languages or whatever) you might need to be clearer. A bit like how we all know a kilobyte is 1024 bytes, even though it's not.
&gt; you can just use `` byte In Soviet Russia, byte can just use `` **you**! ^(this post was made by a highly intelligent bot using the advanced yakov-smirnoff algorithm... okay, thats not a real algorithm. learn more on my profile.)
There are actually two namespaces: System.Text.Json (with basic types like `JsonDocument` and `Utf8JsonWriter`) and System.Text.Json.Serialization (with `JsonSerializer`). How would that work if you used System.Serialization, especially considering that e.g. `JsonDocument` is not related to serialization.
This is what I don't want to see, namely people using interfaces when they should just be using classes. Everything you've listed so far should have just been a single type, no interfaces needed. IPositionWithVelocity should just be an Entity with a non-zero velocity property.
Tl;dr Try to think of everything as points, vectors and lines. The plane trajectory is a line with the starting point of the plane and a movement vector (not sure what the proper word is) of (1 0) transposed. So you have 2 lines: Position A + t * (1 0)^T for the plane Position of the weapon + r * (x y)^T Now you want to find the intersection of the 2 lines, such that r = t*2. Then find values for x and y from that, and you have your weapon trajectory
So is IList&lt;T&gt; for that matter.
Again, implementations for an interface can maintain state. You need to use a ConditionalWeakTable to avoid memory leaks, but they most certainly can do it. Which means people are going to do it.
A good point, but in ECS, you don't want to clog up your update system with things that aren't moving if they don't require moving. Using a default interface implementation, you can still have cache-friendly coherence on your movables, and your renderer doesn't care.
I'm sure there is a good number of full stack developers who prefer working on fat clients because they hate, with a flaming passion, the hot mess that are JavaScript frameworks. I can't be the only one like that. As someone who has avoided meaningful professional contact with JavaScript for around 7 years and is now doing some Angular, I have to admit that things have gotten significantly better than the early days of Backbone/Knockout and jQuery hacks, but it still feels like building a house of cards. It's easier to put together and maintain a bleeding edge Linux installation than it is to manage the gazillion inter-dependencies between NPM packages. As soon as this things becomes mature enough for use in production, you can be sure that I'd be putting all my weight to push it forward with my team and push Angular/React right out of the window.
I don't think it works the way you think it works. For v1 software, it doesn't really anything you couldn't have gotten from an abstract base class. It's only when you write v2 that it actually comes into play.
True, but given you can't do multiple inheritence in C# in classes, but \*can\* do interfaces - surely that's a game-changer right there? Abstract base classes, you're right, do the exact same thing, but they're semi-concrete (if you know what I mean :) )
Is the book still open on the namespace? When I think of text I think of an unstructured object. So, putting JSON in the text namespace is as awkward sounding to me as putting it the XML or CSV namespace: System.XML.Json // can't be right System.CSV.Json // can't be right System.Text.Json // not much different than the previous two
It returns the expression that follows it to the caller.
In caveman speech: return end method. If method have return type, give object back to caller.
Imagine I gave you a post it note with a list of instructions on cleaning you room, like "put clothes in hamper" or "empty trash can". So now you have a list of all these things right? So from top to bottom, you work on each task and get to the last one and you finish it. What happens now? You weren't sure if there was another post it note or if some of the writing indicated there was another task that you didn't read. A return in C# and other languages in this case would be the indicator that you are now finished and resume playing video games. If the last task said "please tell me what you want for dinner", that would translate to C# as returning a string of that value.
Parameters go in results come out. Even with void you can use return to say "im done here" and bail out of execution of that method.
It's like when ask for a sandwich and someone gives you a sandwich back. You call a method to give you a sandwich and store the result in a variable. mySandwich = MakeSandwich();
Well. Let's take basic math. If I tell you "5+5" then you say? 10 So I "input" 5 + 5, you "return" 10. public static int Add(int a, int b){ return a + b; } // call the method int ten = Add(5, 5); The Add method returns the result of a + b, which is 5 + 5 in this case.
Methods can return something. There are methods like this ``` public void MyMethod1() { [something happens in here] } ``` This method has void as return type. So it returns nothing. And there are Methods like this: ``` public int AddTwoNumbers(int number1, int number2) { return number1 + number2 } ``` This method returns an integer. And the value will be number1+number2. I suggest you look up some beginner programming guides on return values and parameters.
&gt;"please tell me **how many** chicken tenders you want for dinner", that would translate to as returning a **string** of that value. Probably return an int here ;)
You tell a function to do something and when it’s done it tells you what type of thing the result is. The “type of thing” is called the return type.
In C#, you can declare bits of reusable code called *methods*. These methods can accept things you put into them (*take parameters*), and at some point stop and optionally give you stuff back (*returning*). A method has a *return type*, which tells you what kind of stuff (what *value*) the method can give back. When you come to a point in your code when you want to return a value from the method, you use the `return` keyword. Methods that just stop and don't give you a return value have `void` as their return type. Methods that do give you a value back has something else - `int`, `string`, et cetera. `void` methods stop when you type `return;` and lets the method that called this method (the *outer method*) continue on. Any other method will use `return myCoolVariable;` or something similar to it to give the outer method a value to work with. In real code, consider these two methods - they're not very useful, but they illustrate the point: ```cs public void PrintMessage(bool shouldPrintMessage) { if (!shouldPrintMessage) { return; } Console.WriteLine(GetMessage()); } public string GetMessage() { return "Hello world!"; } ``` If you call `PrintMessage(true)`, it will print "Hello world!" to the console. If you call `PrintMessage(false)`, it won't print anything. In plain words, if `shouldPrintMessage` is false, return and do nothing. If `shouldPrintMessage` is true, GetMessage(), which returns "Hello world!", and give that value to `Console.WriteLine` which prints what you give it to the console. I hope that helps :)
Thanks, just noticed that I originally had "what's for dinner" and tried to quickly edit it into something easier, like how many and forgot to change that!
I would need a long to express the number of tenders I want
OP, as a lead developer and mentor, I'm curious. Did any of these answer your question? If so, which explanation made it "click" for you?
Oh ok! Thanks! &amp;#x200B; Now I understand, it's like Add(int a, int b) is a person asking what 5+5 is and return is a person answering it. If I got it wrong please correct me if you want.
You specify either a 'return type' or void along with the signature of the method. Now when you finish and want to return whatever object you were working with back to the calling code, you return it with the return keyword. You can also simply return the control flow to the calling code without any variable if your 'return type' was void. I usually prefer "Single Entry, Single Exit" which keep things tidy. You basically declare your 'return type' once, work with it and return it at the end of your method. This way you only have one exit point in your method.
That sounds about right.
Yep! I got a answer from a comment(I forgot person's username because I am really forgetful with some stuff) i'll say it in if it was a real life conversation Person A(method thingy): What is 5+5? Person B(return): 10
I honestly want to know what you think it does when you look at tutorials `int Add(int a, int b) { return a+b; }` What do you think it does?? and why are you confused?
return means "stop here and exit from the method and return to the caller this value". That's all :)
 var count = 0; foreach(var currentGuest in dinnerGuests) { try { count += getCountChickenTenders(currentGuest); } catch (Exception e) { currentGuest.removeFromGuestList(); currentGuest.sendRudeDisinviteEmail(); } return count; }
Don't worry buddy. Play with it for an hour or two and it'll make lots of sense.
Can I have a go? Everything in computers tends to boil down to the same thing. Input - Process - Output. Everything builds on that. Take a thing, do a thing to it, get a modified thing (or a completely different thing) out. In this case, a function (or method) is the simplest version of that. Given that you have fed the function the numbers 5 and 5 (input), add them together (process), and return the result (input). The 'return' statement just says 'this is my output', this is what I'm handing back. And the caller can do whatever they want with it - stick it in a variable, or use it as an input to something else.
Well, it's more like Person B is the method. Person A is the person who is asking the method, Person B. &amp;#x200B; So if you have &amp;#x200B; public void Main() { int answer = Add(5,5); } &amp;#x200B; public int Add(int a, int b) { return a + b; } &amp;#x200B; Person A is Main. Person B is Add. A asks B, what is (5,5) and B replies by returning 5 + 5. Remember that return is what Person B chooses to give back to Person A.
A method call is redirecting the processor to execute instructions at a different memory location, branching from the current instruction set. Ending a method or calling return resumes execution of the instructions after the memory location where the method was called. Returning a value encapsulates the additional operations required to store a value (or reference) into another memory location that can be accessed or referenced later by subsequent instructions. Familiarize yourself with assembly language and this will all become obvious.
Have your CI build pipeline provide the assembly version. I have used an xml file to store the Major, Minor, &amp; Patch (SemVer 2.0). Msbuild community tasks can generate an AssemblyInfo from the xml. Then I have Jenkins provide it's build number as the fourth component. I can always trace the assemblies back to the build that created them.
Blazor, WebAssembly in general, will take off within a couple of years; give it some time. Web back-end developers are sick of the web front-end. It's an over-engineered, reinventive, burning hell that is beyond repairing. Nobody agrees with no one, so everyone is building his/her own tool, framework, "way of doing things", and then burning their own hands. They're calling this madness innovation! If anyone wants to stop this circus, the whole ecosystem should completely be destroyed and rebuild from the ground up, which is impossible due to the HUGE number of legacy codebase and a crazy-community backing it. We needed a new technology that already offers more than the current web front-end. So, WebAssembly walks in, and started to change the monopoly game with the [full browser support](https://caniuse.com/#feat=wasm). It doesn't just let you write the full-stack in your favorite language, it's [more than the web](https://words.steveklabnik.com/webassembly-is-more-than-just-the-web), [much faster](https://medium.com/@torch2424/webassembly-is-fast-a-real-world-benchmark-of-webassembly-vs-es6-d85a23f8e193); offers [more predictable performance](https://youtu.be/njt-Qzw0mVY?t=1238), more maintainability, developer sanity, and much much more! Heck, you can run the whole [Windows 2000 OS in your browser](https://bellard.org/jslinux/vm.html?url=https://bellard.org/jslinux/win2k.cfg&amp;mem=192&amp;graphic=1&amp;w=1024&amp;h=768) with WebAssembly, insane! C, C++, C#, Rust, Go, TypeScript, PHP, Java, Python, Ruby almost [all established languages are targeting WebAssembly](https://github.com/appcypher/awesome-wasm-langs); Blazor is proudly a part of it. All these developers and companies are not committing themselves just to *experiment* with it, it's *serious stuff*. **WebAssembly (that's Blazor for me) is the future, no doubt!**
public int GetChickenTenders =&gt; 1000000;
This is fine for releasing nugets, but if you need, like us, a tight feedback loop when developing the code, I've found it best to just build a dependent nuget directly into the packages folder of the consuming nuget/project. Optimally you just develop with unit tests etc, but when you inherit some legacy code that has 0 tests, and the code was not made with testability in mind, you need to manually test the code.
This is the way to go. We do it exactly like this in the company I work for.
Imagine a method as a machine. The parameters are the stuff you put into the machine, and the thing that comes after the `return` keyword are the stuff that comes out of the machine. For example your method is the CNC Machine. In this case the argument will be a block of steel, and the thing that `return`s is your designed part.
When you do something like Calculate(5, 2), you're telling the program to go to the method you've defined as Calculate with those two parameters 5 and 2. Now, at the end of the method you have a return keyword that says go and return to the place in the program where you asked the program to go to the method calculate. If you dont have a return keyword, then it will implicitly execute a return command when it hits the end brackets. If you have something after return, it will return that variable. So if we wanted the calculate method to add 5 and 2, we would need to return 7. So Calculate(5,2) would return 7 because you had the command "return 5+2"
Technically “return” is not _a person answering_ but _the answer itself_, (object, value or nothing - void) but yeah you got it right
I'm fuckin dumb and still don't kind of get it So I get that sometimes return just means "k the method is done" But if you're manipulating a variable (that probably had global scope) you can just return void/0? Or if the method has an argument do you want to return the new value of the argument?
The official Microsoft documentation is pretty good, start there. But one advice: Forget most you know from Unity. Proper .NET code is a lot different from that Unity mess.
I like this explanation, because it does more than return you to where you were in the code prior to calling the method. It gives you something TO RETURN WITH if the method is set up to send you back with something. If the method says "void", then this is a case where the code says "you can go back with no baggage. You were only asked to pass through".
Cool - thanks for responding!
Java's byte is broken.
I also have a question, what are the point of returns and methods? can’t you literally just do int add = 5 + 5; Or Console.WriteLine(5+5);
Yes, the Add method is pointless. It's a pretty contrived example, just to show what `return` does.
If you use TFS there are built in tasks that can handle that for you on a build.
To expand on the room cleaning example... If the function was declared "bool CleanRoom()", then you could return "true" if everything went well, or "false" in there was some problem: bool CleanRoom() { if(!MakeBed()) return false; if(!EmptyTrash()) return false; return true; } Here "MakeBed()" and "EmptyTrash()" each can return true or false depending on how things went. What if there are no clean sheets, etc.? So the line "if(!MakeBed())" breaks down like this: 1) Call MakeBed() and get its return value (true or false) 2) Convert the result to the opposite. That's what the "!" does. 3) Evaluate that in an "if()" statement. 4) Act on it, or continue. Let's say that MakeBed() returned true. Then "if(!MakeBed())" evaluates to "if(!true)". "!true" becomes "false", so "if(!true)" evaluates to "if(false)". So if MakeBed() returns true, then the "return false;" line below it (the "then" part of the "if(condition)then statement;") will not execute. Control will continue with "if(Empty Trash())...". Conversely, if MakeBed() fails (returns false), then "if(!MakeBed())" evaluates to "if(!false)". "!false" becomes true. So, "if(!false)" evaluates to "if(true)". In this case the next line "return false;" WILL execute, and the function will return control to the caller. Note that EmptyTrash() will not be executed. If both MakeBed() and EmptyTrash() succeed, then control goes to the next line "return true;" Also, note that CleanRoom() MUST return either true or false, because it was declared as a bool. Inserting a "return;" in that method (without the true or false) will give a compile time error. Omitting the last return statement gives a compile time error as well, because a "return;" is implied at the end of every method. If you declare a method "void xxx()", then xxx cannot return a value. It may only return control. I hope that helps you a bit!
Yes, you can just enter a "return;". This basically means "This method is finished, return to the control to the calling method".
Yup basically just means "respond to my caller with ___"
That's what I meant by "reflection" (I might have phrased it incorrectly, though). My point still stands, as you could implement a, say, Tree of which you'd know the size (maybe you'd store it) - however, because it's not an ICollection, Enumable.Count would not use the efficient way of returning its element-count but default to enumerating all of the elements.
MVVM, as every principle in programming are suggestions, not laws. What you can fix with one line, you tried to with an interface, a class and i don't know how many loc, for the sole purpose of following a principle.
&gt; Is the book still open on the namespace? I think it's very unlikely at this point, since the release of .Net Core 3.0 is happening quite soon.
The statement above that control returns to the next line is a bit misleading. It's more like this: The method called BECOMES the returned value (if it returns a value). If the method is declared void, then no value is returned. Here's a silly method to return the value of two ints that get squared (multiplied by themselves) in another method: int MySquareAdder(int num1, int num2) { int result; result = MySquare(num1) + MySquare(num2); return result; } int MySquare(int num) { return num * num; } Calling method: int foo = 5, bar = 2; if(MySquareAdder(foo, bar) == 29) Console.WriteLine("It worked!"); In this case MySquareAdder() has no access to "foo" or "bar". It is supplied COPIES of these variables. The calling method has no access to "num1" or "num2" either. These variables are "encapsulated" in their own methods. This is a good thing because it helps you, as a programmer, from shooting off your own foot! That's why global variables are dangerous. Any part of your program can modify them. So if you get some unexpected value in them, it can be hard to know where it came from. This isn't a big problem in small programs, but as your program approaches 5,000+ lines of code, it can become a real nightmare. if(YouCanAvoidGlobals) do; (That's your first nerd joke -- Welcome to the club!) The line if(MySquareAdder(foo, bar) == 29)" is evaluated like this: if(MySquareAdder(foo, bar) == 29) if(MySquareAdder(5, 2) == 29) (At this point MySquareAdder() is run, a.k.a. invoked) result = MySquare(num1) + MySquare(num2); result = MySquare(5) + MySquare(num2); (Now MySquare() is invoked with a 5 passed. It returns 25) result = 25 + MySquare(num2); result = 25 + MySquare(2); (MySquare() is invoked again, but with a 2 passed. It returns 4) result = 25 + 4; result = 29; MySquareAdder() returns 29. That is used in the original if() statement. That's why I say that the method BECOMES it's return value. if(29 == 29) Now "29 == 29" is evaluated. "29 == 29" evaluates to "true". So "if(29 == 29)" becomes "if(true)" And the "It worked!" line will execute.
Some people have been giving answers, though the few that I've read try and use analogies (which is a bit like helping someone draw a picture of something by describing a different thing) and also miss one of the details of `return`. So you know that methods can call other methods. Sometimes they'll pass information (parameters / arguments) and sometimes they'll get information back. While the called method is running, it has control. `return` does two things: * it says "we're done with this method, return control back to the code that called this method". * in most languages it's the main way to pass information back to the calling code. Some examples ## void return, no parameters ```csharp void M1() // don't call your method M1 in real code { Console.WriteLine("M1"); M2(); Console.WriteLine("M1 again"); } void M2() // don't call it M2 either { Console.WriteLine("M2"); // this is optional if your method is defined // with 'void' - an implicit one is added return; } ``` This outputs this: ``` M1 M2 M1 again ``` So this happened: * M1 emits a message * M1 calls M2 * M2 emits a message, then returns control back to M1 ## non-void return, no parameters ```csharp void M1() // don't call your method M1 in real code { Console.WriteLine("M1"); string message = M2(); Console.WriteLine($"M1 again. M2 said '{message}'"); } string M2() // don't call it M2 either { // this is NOT optional if your method is defined // with something other than 'void' return "returned from M2"; } ``` This outputs this: ``` M1 M1 again. M2 said 'returned from M2' ``` So this happened: * M1 emits a message * M1 calls M2 * M2 emits a message, then returns control back to M1, but this time returning a value. The value here is a string literal, but it could be all kinds of things. Notice the important difference in how M2 is defined - rather than declaring with `void` we declare it with a return type - in this case, `string`. This defines what type the return value is going to be. In some languages, this is inferred from the method body, but in C#, you declare it. There's some advanced stuff I'm missing out here, but this should cover the basics. Hope that helps!
That's just type checking and is relatively cheap. Barely more than a integer check to see if the interface is compatible.
For me it would be a string « a fuckton and some more! »
Typically methods are a lot more complex than that, and they allow you to reuse code. If I write a 15 line method to sort a list, then whenever I need to sort a list I just have to call list.Sort(); rather than redo the 15 line sorting algorithm. They also allow you to do things without knowing how the operation gets performed. This like DateTime.Now.TimeOfDay returns the current time. I don't need to know how that method works to be able to use it in my code, I just need to know that it returns the current time. A return statement effectively replaces the method call with whatever is returned, so if I do something like int x = 4 + GetRandomNumber(1 , 10) That method call gets replaced with whatever value is returned by the function (8 in this case), so the statement evaluates out to int x = 4 + 8;
This isthe worst nu-bot Ive seen on reddit lately. PRAW was a mistake.
Now do it by ref.
This is a really great way to explain it.
While I don't think I would call this objectively 'wrong', I would not recommend this approach, and I don't think you'd find it aligns with most people's mvvm implementations. &amp;#x200B; You should be able to avoid adding methods to your view that anything but the view itself will call. ViewModels generally communicate with the view via events, the most common of which is the PropertyChanged event from INotifyPropertyChanged. As I'm sure you know, when you bind a property, the framework (eg. wpf, xamarin forms) will listen for those events and update the view accordingly. Sometimes there is reason to add custom events, which may be helpful here. &amp;#x200B; Instead of adding Jump10Seconds() to the view, you could add an event to the viewmodel like: `public event EventArgs&lt;int&gt; JumpForwardRequested;` Then subscribe to that event in the view, when the vm is created. &amp;#x200B; You may also want to consider why you don't have the MediaPlayer's playback position bound directly to a property in the vm using TwoWay mode. Maybe the position isn't a bindable property, I can't tell from your code, but if it is, then you could just setup that binding and modify the position in the vm directly, rather that having to tell the view to do it. &amp;#x200B; Also, looking at your code, here's a couple other notes: 1. You can/should be setting your view's DataContext to your viewmodel. Then you don't need to refer to the viewmodel in bindings. That's why the DataContext (BindingContext in Xamarin Forms) property exists. 2. You can/should use commands in your viewmodel and bind user actions (like clicking a button) to those commands. Lookup the ICommand interface for examples. Instead of binding a method to the Click event on the button, you'd bind the vm's command property to the command property of the button.
It's not a bad question. It speaks to if you're keeping up with new technology.
Some things I'd improve about this sample Property get shouldn't ever allocate memory, getters should be stateless always Instantiating VM inside of the view itself breaks MVVM principles horribly. Construct it somewhere else and bind it via XAML Instead of injecting references what you need is an event declared in MainViewModel, the simplest way to achieve it is the following &amp;#x200B; 1. Add "event Action JumpRequested" to your MainViewModel 2. After binding VM via XAML cast data context and subscribe to event ((MainViewModel)this.DataContext).JumpRequested += OnJumpRequested &amp;#x200B; This is almost perfect but there is one more issue, casting to (MainViewModel) makes your view coupled with that type as it will throw when DataContext is anything else. This is barely a drawback but if you want super pure code you should create wpf EventTrigger and its Binding programatically in code behind, that way you can bind to event via string instead
I've developed applications for customers that requested the same thing you're talking about. I highly doubt this is the most efficient (or even, officially, correct) solution but it works for me and I haven't ever cared enough to do any in-depth research on the "proper" solution. Working across multiple threads, you can invoke the UI thread to access a control on the form. &amp;#x200B; Again, I'm 99% sure this isn't best practice but here's what I do: &amp;#x200B; * Add a textbox control to the form from the toolbox * Name: logBox * Back Color: Black * Border Style: None * Dock: Bottom * Font: Calibri, 9.75pt * Fore Color: White * Multiline: True * ReadOnly: True * Scrollbars: Vertical * TabStop: False * In your code, create a new method called "SendUpdate" that accepts a string as an argument like the provided example below (you can copy &amp; paste it, I've tested it.) * Feel free to call SendUpdate from anywhere now. &amp;#x200B; //Creates a method to update the output window across threads (accepts a string argument) private void SendUpdate(string update) { //Adds the current full time in brackets before the update so that it looks nice. string _logEntry = "[" + DateTime.Now.ToLongTimeString() + "] ─ " + update.Trim() + Environment.NewLine; //If the textBox is on another thread, then invoke it. //Appending text in C# will cause the textBox to scroll to the bottom automatically. if (logBox.InvokeRequired) { logBox.Invoke(new MethodInvoker(delegate { logBox.AppendText(_logEntry); })); } //If the sender is using/on the same thread, just go ahead and append the text. else { logBox.AppendText(_logEntry); } }
In simple words? It returns a value from a method.
heads up, there is a complete ES5 implementation for LINQ in JS/TS: [https://www.npmjs.com/package/linq-collections](https://www.npmjs.com/package/linq-collections)
Thanks I have seen the docs, just wondered more about videos / courses. Reading docs works well when I’m fresh but I prefer videos in the evening because they’re more passive. And I’m well aware of how bad some Unity code can get :) part of why I’m trying to move to greener pastures employment with learning this stuff.
If you want to go that way, the method call is the person asking what 5+5 is. The parameters in the method call is the vocalization of that question. The person answering is the method that 'hears' the parameters and answers with the return value.
Most of the post is bullshit. If you look at it there are almost no questions about how to produce actual web with ASP.NET Core. A person can know all this and not be able to produce a single web page with ASP.NET Core. "Explain model binding" is great question, that's the kind of question that people should ask in interviews.
There is even the question if ASP.NET Core can run on top of the full framework. With ASP.NET Core 3 it won't be the case anymore :)
Pretty new to programming myself, but wouldn't saying 10 be more like printing it? Isn't return something more like thinking 10 before you speak (so you only keep that number in mind for the time being before you decide to use it (saying it out loud))?
I should mention that even simple functions can be worth it. While `3,14159 / 180 * angle` might be an easy bit of code to repeat, it gets not only tedious but also mentally exhausting to keep track of everywhere this degrees to radian conversion is happening. So to make simpler code, it's better to give this little conversion a name, by making a method: public static double Radians(double degrees) =&gt; System.Math.PI / 180 * degrees; Now you only have to write `Radians(angle)` instead and it's immediately obvious what is happening by reading it in English, instead of having to interpret math.
I'll have to see if I can handle the colors, but this could do it. Although I'm learning about this RichText control and am really liking the look of it (or the RichEdit control, forget the exact name lol)
`ten` is the name of the variable I created. It's a *bad* variable name. If I wrote `int ten = Add(5, 6);` then the variable "ten" would hold the value of 11. Which would be confusing. A better way would be to name it "sum" `int sum = Add(5, 6);` If I wanted to print it in the console I'd write `System.Console.WriteLine(sum);`
To add to that. There are cases where renaming something simple as array[0] to array.first or some descriptor that tells you what is saved in that specific position in an array would make sense for better code readability. Instead of array[23] you could do array.userName() to get the users username. This creates a method that is completely pointless in terms of functionality but for the user/programmer might be invaluable.
You're talking about the RichTextBox which has some nice additional features (like automatically detecting URLs!) Obviously you're more than welcome to choose colors, font, etc. as you see fit. I've condensed what I wrote, converted it to Markdown and made it *much* easier to read. Take a look and let me know what you think. [https://github.com/SimplifyRMM/ThreadSafeCommunication/blob/master/README.md](https://github.com/SimplifyRMM/ThreadSafeCommunication/blob/master/README.md)
I got to that question and was like, wtf. What is this shit? I would have walked out of the interview at that point...
I'm typing this on my phone, so I'm hoping the formatting won't be too horrible. To the question however: return by itself passes execution back to the caller, which basically means continue running the code from where the method that had the return statement in it got called. So whenever you see a return in a method it means "once you get to the return statement leave me be and continue doing what you were doing before calling me", regardless of whether or not there is code after a return statement (usually if you put code behind a return statement visual Studio will gray it out because it would never be getting called). So you could have something like this: void Test() { Console.WriteLine("Hi"); return; Console.WriteLine("Hi back"); } Now in this case, whenever this method was getting called it would print out Hi, then go over to the return statement and immediately exit the method without reaching the second WriteLine. Doing it like this would be pointless of course, but that's basically how it works. However, it is possible to pass values via return aswell. Methods can declare a return type, which can be any type there is (even the ones you created). The return type is specified before the name of the method e.g VOID Test(), STRING Test2, INT Add()... In this specific case, void is the return type, which means "don't expect me to return a value. A method being declared with void can use return without a problem, however it is not able to return a value, just pass execution back to the caller, which is what we've seen in my first example. If you declared a Method like this: void string Test() { // Code ) You would declare string as return type. This means that the method is expected to return a variable of type string, whatever may be stored in it. For all it cares you could return an empty string regardless of what operations happen in this test method, however that's obviously not the point of declaring a return type, but it is possible. However it isn't possible to omit the return and not have it return anything, because you specifically declared that the method would be returning a string. So basically: A method with a return type other than void MUST return the specified type. Again, the actual value is irrelevant as far as the method is concerned, however it needs to return something that has the correct type. Taking your add method as an example, what you could do is create a Method called Add with a return type of int like so: int Add(int firstNumber, int secondNumber) { return firstNumber + secondNumber; } This method would take 2 parameters of type int and simply add them together and return the new value. This way, whenever you had to add 2 numbers you could use this method instead of having to hard code it with Console.WriteLine(); If you were to write the following for example: int result = Add(5+5); result would hold the value 10 now, which you would then use to do further calculations/operations whatever it is you want to do. As people have already pointed out usually a Method is more complex than adding 2 numbers together, but even just for adding 2 numbers having a simple add method with a return type instead of hardcoding every addition is so much more convenient. Hope you get the idea!
Typically it's... Drive to the drive through Order twenty with sweet &amp; sour. Drive home, hope my daughter doesn't steal too many.
This is a solid answer. Why are people downvoting?
This made me laugh so hard. Thank you for saying this.
Return does as the name suggests, it returns the result based on the methods type. Usually, any method that returns any type of data is typically called a function. I did way too much VB back in the day. A method is used to run a task or a specific piece of code without needing to get back any information from it. A function, mainly used for calculating, modifying, or detecting, is for when we need to know the final result at the end. In C#, methods all have a return type: Void - Nothing String - Text Int - An integer Bool - True or False. And so on... If we define a method using void, nothing is returned back to the calling code. Imagine a calculator and entering 2 + 2 and hitting “=“, then nothing happens, this is because after making the calculation, the data is not given to the calling code which means either one of two things: The method returns void, so nothing. Or the return is null. Let’s say we do the same task again but with a function. After the calculation is ran, we put “return calculation”, this means that the calling code that ran the function gets the value at the end, which then gets printed to the screen.
Something you’ll get to soon enough is the return type of void, which is where there is no “answer” to the question, but something still happens. it’s probably the trickiest return type for a beginner Going with this analogy, if someone asks “Hey can you pass me the salt?”, and someone silently passes the salt. There is no answer but something happens. In coding a simple example of this is a function that changes text color on the screen. When the function is called, we see the text color change but no value is returned into or code segment. Hope that makes sense
No no, it's not about Unity code can get bad but that proper app development with C# is completely different from what you do in Unity. Unity uses C# just because of that sweet sweet Mono runtime and otherwise ist actually an annoyance with its need for solution files, namespaces and etc.
Not elegant BUT with microservices local development does not work. We basically setup our own nugget private server and then treat it like any other dependency, it’s a bit complex but if you want to experience the benefit of 12 factor then you just can’t avoid going this way. PRO TIP: use git hooks to run scripts for checking stale versions of your dependency package.
I recommend you to first get started with doing a basic API Service with ASP.NET Core. Then add an SQL Database for basic CRUD. After this you slowly start to tackle the world of microservices with Docker, Service Fabric and friends. This here is a great article and book from Microsoft on architecting and developing microservices with .NET: https://docs.microsoft.com/de-de/dotnet/standard/microservices-architecture/
Wait, what exactly is the problem? It seems you are looking for a specific solution without mentioning the original issue. We don't check-in any nuget packages. If you use the reference system or package system, they specific versions will either be stored inside the csproj file or in a dedicated packages file. You only have to check-in these. When someone builds all missing nuget packages are downloaded automatically. If you use AzureDev Ops, the automatic server-side build also uses nuget to download the correct versions first before building.
This is pretty much exactly what I'm looking to do. I just have to figure out how to make the forms and all of that. This is still very new to me, but it's going to be fun I suspect. Thanks!!
You’re welcome! Don’t stress about it — I still use WinForms in a production environment everyday. Currently, I’m working with a few of our teams to get some internal IT documentation together so this is good practice for me. I left out about 30 minutes ago and I’ll be home in about an hour and a half. I’ll put together a (very basic) “Getting Started with WinForms (C#)” for you!
I guess I could achieve what I want (LIFO) by using a list in this way. I would still like to know what's going on with my stack though. myList.Insert(0, order) - - - my List.First()
I thought this was going to be some kind of really deep question, like how return in C# is unique compared to say return in x language and when it's important.
Why do you need LIFO here?
I want the most recent Order added to the collection.
I want the most recent Order added to the collection.
lol, I thought it was a troll question. I still do. But if a guy can't understand tutorials then like IDK what kind of answer will help. And why people even replied lol. I had to ask this, because otherwise I'd just be repeating the tutorials that didn't help.
I appreciate it very much! The last time I did a lot of Win32 API work was, well, back around NT 4.0. After that I moved into network administration, security, and overall network infrastructure work. This is helping me work the rust out of the old noggin :)
r/lostredditors
Is there a project link (GitHub or otherwise)?
Yes
It seems like you've identified that your problem is when you persist/restore your data from the db object, right? However, you've provided no information about what \`\_db\` is in this code, so no one is able to provide meaningful advice. &amp;#x200B; Have you looked at how whatever \`\_db\` is here handles collections and if the collection type you're interested in is even supported?
What is it?
Add a timestamp field to `Order` and sort by that to get the latest order. You can't count on EF (or the database for that matter) to preserve insert order of records.
Agreed.
This is the issue here. Whatever your _db is can't handle stacks.
I could see this being a killer feature once mature.
This is more of a general subreddit for language discussion. You may have more interest in a framework-specific subreddit like /r/unity.
You might get more usefull answers over at [unity3d](http://www.reddit.com/r/unity3d) as not everyone here is familiar in unity gamedev
Not to hijack the thread but what’s the real benefit of making a public static in Add method vs a public int Add method?
No, I haven't created a git for this yet. I will most likely be uploading all the files through a software downloading site like mediafire, through /r/redditfordesktop
You want the FileInfo object. A quick way to get them all would be this: &amp;#x200B; FileInfo\[\] files = Directory.GetFiles(@"c:\\users\\soandso\\music", "\*.mp3").Select(x =&gt; new FileInfo(x)).ToArray(); &amp;#x200B; Then check the Length property on each FileInfo object.
If you're talking about the audio duration, then no. For the most part, `System.IO` types have no understanding of the contents of files and are only there to read the raw bytes (or plain text). You'll need another library to parse the contents of the MP3 files, "mp3 metadata" is probably a good search query.
I found this but Im having issues getting vs to recognize the namespace [https://docs.microsoft.com/en-us/uwp/api/windows.storage.fileproperties.musicproperties](https://docs.microsoft.com/en-us/uwp/api/windows.storage.fileproperties.musicproperties)
Removed: Rule 3, Rule 4. Maybe give /r/learnprogramming or /r/Unity3D a shot. You can also check out the various learning resources available directly from Unity: https://unity.com/learn
sweet found a library calls taglib# which seems to do what i want. Thanks :)
What kind of monster down-voted this one.. I'll just settle that one back out!
You should add an actual use case to the readme
Up to this day I wonder...what is an actual use of delegates? There is absolutely no need to use them in any scenario..
Oh sorry, I skimmed the post and initially and it sounded (with the concrete list of features and a subreddit already setup) that this was a released project you were announcing. So there is no actual code or deliverable of any kind yet? Is the subreddit for gathering feedback?
This is more wanting general advice rather than job seeking, but is anyone even hiring for desktop .NET (Windows Forms/WPF) anymore?
There was back in the day. Lamdas didn't exist, so you could only dynamically point to a method using delegates. And an use case was windows forms, where the UI thread was the only thread that could change UI, so any change made outside was wrapped in a delegate and called, then the underlying method could handle the if(InvokeRequired()) and just use Invoke(...delegate...) You strictly didn't need the first delegate, but the second was a must. (You used the first to make it look like a contract/interface way of doing things without showing the internals publicly)
A delegate is the address of a method. Typically you would provide that address to another method. The most common example I can think of is sorting. Let's say you want to sort a collection of classes. You could write your own sort algorithm, but that is very time consuming. A better approach is to use someone else's sort algorithm. The problem with that is that the other persons algorithm doesn't know how to compare one instance of your class to another. To deal with this, you provide a delegate to do the comparison. Your delegate is expected to return -1 is the first value is less than the second, 0 if they're equal, and 1 if the second is greater than the first. The delegate frees you from having to make your own sorting algorithm, and allows the sort algorithm to be used by a huge variety of other programmers.
It doesn’t mean “to cease”, that would be “break.” You need to understand what it relates to. It can only be used with loops, so it relates to the loop. Not the block of code inside it. “Continue the loop” vs “break the loop.” Not “continue the block inside the loop.” It’s also not specific to or invented in C#, it was in use in C and C++ long before and it’s logical for C# to also have it. It would be illogical to rename it.
i mean, you basically said yourself `continue` continues at *the next iteration* of the loop, not the next line or whatever. seems like what you're after is [break](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/break)
Its not the same as break, but it does a similar job, doesn't it? It stops execution at some level, which is the opposite of what it means to continue something.
IMHO, C# team should prioritize this feature, so that C# could catch up with Python and other langs in numerical processing.
Yeah, my point is that that is a very confusing thing for it to do on any level. It should continue to the next line if the condition is true.
I do, that’s why it needs the understanding of what it refers to. And I agree on that level that it is not the best word since it is not obvious. But it’s not the only one. It has been around for a long time so it will stay and probably be used in new languages that arise also. Languages aren’t rational or obvious from all viewpoints, programming or spoken ones.
It'll definitely stay, it sounds ancient.
if all `continue` did was... go to the next line of code... that'd make it a no-op ? `continue` fast-forwards to the next iteration of the loop / carries on with the loop / moves on / skips ahead / does the next **loop iteration**. it can only be used inside a loop, so there's that too, heh.
The term and role is perfect, no complaint there. It just needs inverting.
That would be confusing. I have always known it to skip to the next loop iteration. Why would you have that condition just to go to the next line anyway?
My suggestion is that it remains the exact same as it currently is, just inverted. I know it's familiar in its current state and it's hard to imagine working differently, but in the example I posted, you gotta admit, it doesn't make much *human* sense right?
Sure, if you define "continue" as "continue with the next line of code." Read it as "continue with the next iteration of the loop" instead.
To a layman no it may not. What if you wanted to print all of the odd numbers between 1 and 100 how would you do it?
You’re right that a Func or Action replaces them in almost every sense. However they still have some uses: Func and Action can’t deal with out or ref parameters, and a delegate can mask an annoyingly verbose parameter definition (e.g. SelectorDelegate vs Func&lt;TResult, IDictionary&lt;string, IDictionary&lt;string, object&gt;&gt;).
I agree that it is not a good keyword. But it is inherited from C, and everyone knows it, so you can't really blame C# for it.
Yeap, I definitely already understand that bit. Even logically, we should consider 'continue' to be in the most immediate or concurrent context, which in this case is inside the loop.
Oh, it is highly optimized code.... the best excuse for any unmaintainable mess. Why not write it in assembly then? Calling functions without stack frames and optimizing instructions by hand makes code lightning fast.
Ah well, there you go. I don't really expect it to change, but I'm curious to see what the people who have to use it think.
 for (int i = 1; i &lt; 100; i += 2) { log(i); } You don't even need continue to do that. Maybe you're not the person to ask?
Well I mean I literally just started so I kinda only just created the rough build of the whole thing. Everything is working but UI is horrendous and definitely a lot of optimisation needed. I will probably setup a Git anyways in the next few days, but I don't really use GitHub that much and I prefer to release the source codes myself.
There's a FixedArray in source code but it's not mentioned in Readme.
Their usefulness is in they are the foundation which events, Action, and Func are based on. Those make delegates mostly useless to the average developer, but without delegates you wouldn't have those tools.
Yes, some 35 years ago, someone could come up with "loop continue" or an extension of the ancient Basic keyword next would be next iteration. But there are many linguistic shortcuts coming from the times where it was really hard to find a good balance between the length of source code and readability. So while continue needs a fixed wire in you brain attached to the looping command it is in, it is by far not the least comprehensible or badly named statement. Your flipped logic argument does not seem valid for me. It would be even more confusing in both historical and semantic points of view. An implicit skip of the iteration and "continuing" with the next week instruction only with continue command would beat any intuitive notion of instruction execution order.
I agree about your hate towards all the shit JS commercial frameworks; about not making standards and everyone going their own way. I personally don't like jquery, angular, or any framework which forces you to learn something the way it is because a dude in his garage decided to make it like this just because. But saying "i hate JS" is like saying "I hate web development". With JS you can do whatever u want in a standard non invasive way. Now I cannot say the same about .NET client development implementations. What's that about putting C# into HTML? Or proprietary non-standard .NET code there that then needs to be interpreted, translated, etc. etc.? It's just my opinion, but I think we should be heading to standards, not forcing anyone to anything (like they tried to do with NET Core and MVC / razor shits). If I wanna make a 2 pages site, I don't want a fkn MVC bloating it all!
You think the example I posted is too confusing? Hey fair enough man, each to their own I guess. Out of curiosity, what's in your top five of poorly named keywords? Continue is the only real one that stands out to me so far, but it's an interesting topic.
This is a bit of a simplification, but if compared to reading, methods (sometimes also called functions) can be likened to bookmarks, with a few extra steps. Code is for the most part executed sequentially. That is, when you hit *Run Program* there is a predefined place in your code which the program begins at, and then it executes line-by-line. Sort of like reading, you begin on page 1, and you go line-by-line onward through the material, at least until you see something you don't understand. When this happens, you put the book down, and go look up that missing information. It can be either online, or in a different book. Now, armed with new knowledge you *return* to the previous spot where you left reading and continue reading from there. A *method call* is like that, in the sense that you instruct the machine to "go to" a different segment of the program, and read those lines of instructions until it sees a *return* keyword, which makes it jump back to where it originally came from. So, what do I mean by methods can be likened to "bookmarks." Well, if we look at the following example program in C# for your convenience, we'll see two methods. &amp;#x200B; class Program { static void Main(string[] args) { Console.WriteLine("This is the first part of my code that will be run"); OtherThings(); Console.WriteLine("This will happen lastly, and then the program is done"); } static void OtherThings() { Console.WriteLine("This will happen next"); Console.WriteLine("and now this will happen as well"); } } These two "methods" are like bookmarks that, when we type their name in our code, the .NET Framework will know to jump to the lines inside of the methods before continuing on to the next step, in our case, this happens when it reads OtherThings(); Now, you might notice - or not, in which case I now direct your attention towards it - that there is no *return* keyword in this code. That is because the *return type* of the method is void, which means the return statement, if it is not written explicitly, is automatically implied when you reach the end of the code block. Having written OtherThings() as the following, would be equally valid, though unnecessary because of the return being implied. static void OtherThings() { Console.WriteLine("This will happen next"); Console.WriteLine("and now this will happen as well"); return; } Previously, I used the example of reading a book, and having to go read some reference material to understand some difficult concept, before returning to the main text. In this example, you don't forget the result of that *work* you put in. You get to *return* to the text with that information. In the same way, we can bring a value with us from a method, thus *returning* the result of all that work that was done inside of the method. This is done, by changing the *return type* of the method. Observe the following changes to the method OtherThings() static int OtherThings() { return 7; } the keyword *void* was replaced with the type *int.* This lets the program know that it should expect a non-decimal number to be returned by OtherThings(). So, when OtherThings is *called* in your code, the value 7 will be brought back to the spot where the program left off. In example: static void Main(string[] args) { var thisWillBeSeven = OtherThings(); } In the above example, the program sees the line *var thisWillBeSeven = OtherThings();* then jumps down to the OtherThings "bookmark" and goes through all the code inside the method, in our example, simply a return statement, and then it brings back the value written *after* the *return keyword*, and assigns it to the variable *thisWillBeSeven* &amp;#x200B; I'm not sure if this bookmark analogy helped edify or just muddled up the concepts. My hope is that it could make the concept a little more familiar by comparing it to a more tangible task. Obviously, this analogy shouldn't be held too firmly in your mind as it is a simplification, so take it only for what it is: A means to try and make the concept more familiar, and not, as a substitute for getting more deeply familiar with the actual concepts of what is happening.
But if your version of continue was implemented your example loop there would do nothing at all because you haven't said to continue the loop.
The example I originally posted? Or the one in the comment above?
Spontaneously not outright bad, but a bit less explicit are yield and finally.
Your example is not confusing but not explanatory enough to demonstrate your point.
I could argue that's an implementation, not an use case :-)
Don't sweat it!
You really are from different place, both socially and technically.
Tell me about it.
No point starting with directory (that works with string) to continue with a select, much simpler to start with DirectoryInfo and then GetFiles will already return FileInfos
I think you have to reference the assembly in the project you want to use it in. This can be done in the solution explorer. Find "References" in the target project &gt; right click &gt; add reference.
Have you benchmarked it?
Sometimes, I worked at a place that used WPF to build add-ons for AutoCAD for other companies.
Software of any type should be build not on your machine but on a CI/CD server; and this is also where the version should be set. (one option here would be AzureDevops) To have a fast feedback loop you could have your packages source code in your main repository (mono-repository). Or if these packages are consumed by many you can make them having their own repo and mount these with git submodules or git subtrees into your app repo. This makes the setup more complex but gives you a good setup for developing packages while also working on applications.
apparently its part of uwp which again apparently you can only use when making a windows 10 only app :(
Well no. continue is only valid in the context of loops. So there is no "next line". There is only the head in case of for loops with the incrementor and the condition. Same goes for while and do/while. So you can see it as "continue to the control logic of the loop".
Do you mean including the dll or including the project in the solution.
I do not feel the name is particularly poorly named nor that it does not describe the functionality. The context makes it clear. continue is used in loops- as you've stated you understand- to continue the loop on the next iteration. Of course that means it "ceases" the execution of the rest of the loop body, but that is not the context to which the statement applies. One could just as well argue that the break keyword is poorly named because "obviously" it should "break" the program and cause it to crash. Your proposed example to 'fix' it- invert the meaning, despite your assertion otherwise, doesn't make a whole lot of sense: for (int i = 0; i &lt; 5; i++) { if (i != 2) continue; // This will run 4 times. } If we were to go with your definition of continue, and this flipped if statement, the idea you have is that continue indicates it will proceed. And no continue means it will not. I get that your example would run code where the comment is for 0, 1, 3, and 4, and skip 2. But I don't see how. for 0, 1, 3, and 4 the condition is false. The if therefore runs it's statement, executes "continue" and the loop continues. But if it is 2... how is it being skipped? the if condition is false and then the statements after the if are run. Unless you are suggesting some sort of implicit binding between conditional blocks/statements and "continue" such that if a block that contains one is skipped then it proceeds to the next loop iteration. That suddenly turns your simple fix into quite an involved compiler feature.
That API is only available for UWP apps. What sort of app are you writing?
Yeah it's sql server db context, it seems that it can't handle stacks for some reason. I'm going to look into it a bit further &amp; try find out exactly why. Like another commenter said using a timestamp property to retrieve the most recently added element is a good approach.
I guess it would be skipped the same way they skip it currently, I'm not suggesting any changes to the way it handles skipping through the loop. Isn't it just a matter of the compiler inverting the same checks it already does? I have no compiler experience whatsoever, forgive me, I don't understand what would be so different about changing the condition rules from true to false. Or, alternatively, you could change the keyword from 'continue' to 'skip'. That would also work the same, without breaking anything.
Great idea, we had just covered Stacks in my Data Structures class. II thought I had the opportunity to implement 1 in my own project here &amp; may have gotten a little locked in on that idea. Timestamp field it is, thank you.
Solution files and namespaces are only good things, not sure why you think they’re an annoyance? I’d rather namespaces than Java’s method of using actual file location.
They are not good things in context of requirements for a great scripting engine. But at that time and budget for a startup like unity the mono runtime was the best solution. There is obviously nothing wrong with solutions and namespaces.
If you plan to for each over the collection, use DirectoryInfo.EnumerateFiles(). You can begin processing before the entire collection is returned.
Yes, but they are nowhere near as common as web dev jobs, and unfortunately mostly seem to involve supporting “legacy” WPF products while they are rewritten as web. It might be worth adding Xamarin to your skill set if you haven’t already as it’s very similar to WPF and seems to be increasing in popularity.
Its just like he said if you invert the keyword and the condition, the continue keyword will only be reached when you want to proceed with the loop. So how does the compiler know when to skip? You would need the compiler to check if the code that was not executed due some if statements had a continue keyword in it. I dont even know if that is possible.
It would skip if the conditions false, instead of true. Again, forgive-o, I've never written or looked at compiler code, but I would have thought you can tell the difference between true or false statements in there.
Dude if the statement is false the loop will just keep running how does it know when to skip?
I don't know, the same way it works currently? I assume it's just returning execution to the loop conditional, isn't that what it currently does?
No the if statement doesn't decide to skip the loop or not. The loop is skipped when the continue keyword is called. If you would invert it the if statement would be false and it would just jump over that code within the if statement and keep executing te loop
is your db even updating?
Stack also sounds like a really uncommon choice for a db entity. You could always map from a db array to a domain space stack and vice versa.
What tips would you give to someone who would like to work for (or start) a videogame company?
Cool article but I would prefer an ordinary null check in scenario 5 more than using the null coalescing operator in that way.
Yes it is.
Yeah my first time using a stack so it's a lesson learned at least.
As long as it returns to the loop, isn't that the whole point?
I really dont know how to explain it more clearly... So from the beginning, you want a keyword that does nothing when beeing called but skips the loop iteration when its not beeing called. So when we dont call it how would the logic that skips to the next loop iteration be excecuted?
Is there no compiler side version of 'else'?
Or in a multi-threading scenario you can use `Lazy&lt;T&gt;`. It even allows you to be specific in the kind of thread-safety you want: - PublicationOnly - If initialized by multiple threads (access to `.Value` without a cached result), then the value factory is executed by multiple threads as well, but all callers will get the first result. The other results are discarded. - ExecutionAndPublication - The value factory is executed thread-safe as well (only once), and the result is returned to all callers.
Kinda difficult to help without errors and your current code, unless what you posted is the current code, so I'm just gonna do a shot in the twilight and cross my fingers. Did you try this part? compView = CollectionViewSource.GetDefaultView(Competitors); compView.GroupDescriptions.Add(new PropertyGroupDescription(nameof(CompetitorModel.Qualification))); Then bind to the Competitors collection, **not** to the CompetitorsCollectionView.
Hi everyone - /u/dilmerv is a notorious spammer, who frequently posts [north of 20 times per day here on reddit](https://imgur.com/a/PWNAQl9), [breaks subreddit rules](https://imgur.com/a/01hnt4t), and has gone so far as to [spam everyone who connects with him on LinkedIn](https://imgur.com/a/00CiyYa) to subscribe to his sub. Also, most of his tutorials are, in my opinion, of fairly low quality, [and sometimes harmful](https://np.reddit.com/r/unity_tutorials/comments/9wpwnb/how_much_money_can_you_make_by_making_great_games/). If you're wanting to learn more about Unity, there are better options (r/unity_tutorials, or my sub, r/UnityCurated). I'd urge anyone thinking about subscribing to consider blocking him instead - he's been spamming for at least 6 months, and there's been no indication that he will change. Thanks and enjoy your day! (if you're interested in the gory details, check out this thread: https://np.reddit.com/r/unity_tutorials/comments/bugza2/how_to_exploit_reddit_for_financial_gain_just/)
Here I wish again that constructors would be first-class citizens. Would be neat to drop the lambda and just write `.Select(new FileInfo)` or `.Select(FileInfo)` instead of `.Select(x =&gt; new FileInfo(x))`.
Yeah, Windows Apps are sandboxed. They can't just easily access the entire file system.
If Orders is a different table which is connected via table constraint you need to do _db.Students .Include(a =&gt; a.Orders) .Find(User.Identity.GetUserId()); Otherwise entity framework only takes values from the Students table and when you count them it returns 0 because the list is empty.
&gt; //Push the order to the students Stack collection &gt; student.Orders.Push(order); Also if you push the entity to the student orders there is no need for //add order to db &amp; save changes _db.Orders.Add(order); As you already added it for Student.
what is pixel bot? most languages, c# included are general purpose so the answer to “is it suitable “ is almost always yes, and the answer to “how long would it take” is almost always a very long time.
Just making a normal windows program so i cant use it. I'm making an audio book player cause most of the 1s Ive found online are kinda meh, i can afford audible and I needed to sharpen up c#, hell my programing in general is pretty damned rusty. So ill kill 2 birds with 1 stone if i ever finish it lol.
What's the point of `Predicate&lt;t&gt;` when there's `Func&lt;t, bool&gt;`?
&gt; For example, how would you express that some boolean value is true, false, or unknown? Regular Boolean can be only true or false. I'd use an enum. Introducing null as a tribool state has only lead to eventual pain and misery for me. But that's also only speaking from my experience, I'm not one of those "always use a two value enum instead of boolean" folk.
Aren't Func and Action just delegate in disguise?
Here is one of my favorite lines from the docs of ReactiveUI: “Another common misconception is that of separation - while it is very important that the ViewModel have no reference to the View or any of the controls that the View creates, the reverse is not true. The View is free to be very tightly bound to the ViewModel, and in fact, it is often useful for the View to "reach into" the ViewModel...”
Come on guy. Break and continue make complete sense
I'd prefer coalescing but only if using this syntax: private int _x; public int X =&gt; _x ?? (_x = CreateX()); I hate chunky get blocks when it could be cut to 1 or 2 lines.
That is definitely what the term currently means. Maybe a better way to express the idea is that the term 'continue' could be replaced with 'skip', since skipping seems to better describe what 'continue' really does.
Make a videogame and sell it.
You are not understanding. It's in the context of the loop, not the code contained within. So continue expresses that action perfectly fine.
There are some really good answers here. I also wanted to chime in with my own as well. One thing to know about return is that it does not have to return any value, unless a return type was included in the method declaration. To really understand the point of return, you need to look at the way a method is declared. There are several things that make up the definition of a method and thus many ways it can behave or be interacted with. This is the syntax used to declare methods. \[access modifier\] \[optional modifier\] \[return type\] \[method call \[the name\](\[parameter type parameter, parameter type parameter, .....\])\] { \[method body - the code the method executes when called\]) Let's look at these 1. access modifier - public, private, protected etc. - defines what access level to give the method thereby regulating which parts of the application will be able to call it 2. optional modifier - abstract, static, virtual - there may be more than one of these in some cases - this dgets into complicated subjects like inheritance etc. 3. return type - this is the part of the method declaration that deal directly with your question. This defines the type of object, if any, that will be returned by the method. All methods MUST have a return type, but the return type "void" allows you to declare that the method will not return any object. It wouldn't be accurate to say that the method returns nothing, even when the return type is void. You'll see why in a minute. 4. method call - how the method is called by other parts of the application - has two parts 1. name -the text that identifies the method being called 2. parameter list - this can be empty, meaning the method takes no parameters, or it can have as many parameters as you define. Each parameters type and name must be defined, then inside the method you refer to these parameters with those variable names. This defines the objects that must be "passed in" to execute the method's code. There are lots of nifty little things you can do here with additional keywords like out and ref, but that's for another discussion. 5. method body - {} - everything inside the curly braces - this is where the magic happens and where the answer to your question lies. So, what does return do? Why did I find it necessary to get into such a detailed explanation of such basic concepts in order to answer your question? Well, because the return key word, really is absolutely tied to al
You can also use them for decision trees: [http://llewellynfalco.blogspot.com/2016/07/5-ways-to-do-decision-trees-in-c.html](http://llewellynfalco.blogspot.com/2016/07/5-ways-to-do-decision-trees-in-c.html) ``` cs return Win() ?? Advantage() ?? ScoreNormal() ?? person2.ScoreOpponentHasntScored(person1) ?? person1.ScoreOpponentHasntScored(person2) ?? ScoreTie(); ```
I didn't say "I hate javascript', just that I have an intense dislike for it. My college degree is in web development so I've definitely used javascript. I just dislike the syntax, the lack of strong typing, the fact that there are only 3 data types, [ the awful comparison logic built into the es6 standard, ](http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3) and (like you said) all the bloody frameworks. I've played with typescript, tried to learn angular and react, but overall I just think javascript is an awful language. It's just unfortunate that as of right now, it's the only language that offers client side interactivity and that's why it's become a standard for the web. It's also why I'm excited about blazor, because it has the potential to maybe replace js eventually if enough people adopt web assembly and enough work is put into making it work like js.
There are some really good answers here. I also wanted to chime in with my own as well. One thing to know about return is that it does not have to return any value, unless a return type was included in the method declaration. To really understand the point of return, you need to look at the way a method is declared. There are several things that make up the definition of a method and thus many ways it can behave or be interacted with. This is the syntax used to declare methods. \[access modifier\] \[optional modifier\] \[return type\] \[method call \[the name\](\[parameter type parameter, parameter type parameter, .....\])\] { \[method body - the code the method executes when called\]) Let's look at these 1. access modifier - public, private, protected etc. - defines what access level to give the method thereby regulating which parts of the application will be able to call it 2. optional modifier - abstract, static, virtual - there may be more than one of these in some cases - this dgets into complicated subjects like inheritance etc. 3. return type - this is the part of the method declaration that deal directly with your question. This defines the type of object, if any, that will be returned by the method. All methods MUST have a return type, but the return type "void" allows you to declare that the method will not return any object. It wouldn't be accurate to say that the method returns nothing, even when the return type is void. You'll see why in a minute. 4. method call - how the method is called by other parts of the application - has two parts 1. name -the text that identifies the method being called 2. parameter list - this can be empty, meaning the method takes no parameters, or it can have as many parameters as you define. Each parameters type and name must be defined, then inside the method you refer to these parameters with those variable names. This defines the objects that must be "passed in" to execute the method's code. There are lots of nifty little things you can do here with additional keywords like out and ref, but that's for another discussion. 5. method body - {} - everything inside the curly braces - this is where the magic happens and where the answer to your question lies - every method So, what does return do? Why did I find it necessary to get into such a detailed explanation of such basic concepts in order to answer your question? Well, because the return key word, really is absolutely tied to all of this. The only methods in which you do not need the return keyword are those with a void return type. But, even those, perform the action the return keyword does. Return returns control of the code execution back to the calling method. A method with a void return type, and no return keyword in the method body, still returns control back to the calling method. It just does so automatically when it's done executing its code. However, there are times, where the return keyword is very helpful to use in a methods with a void return type. The reason why is that the return keyword stops all code execution. So let's say there is some reason you don't want to finish the code in the method. Well, you can just use return, pass control back to the calling method and be done. For instance, let's say that I have 3 girlfriends and I'm dating all of them at the same time. I want a method that will send each of them a sweet text message telling them I love them or whatever, but, if any one of them is aware of the other two, I just want to leave town before they find out about each other and burn my clothes or kill me &gt;public void messageGirls(IEnumerable&lt;Girlfriend&gt; girlfriends, SweetMessage sweetMessage) &gt; &gt;{ //loop through the list of girlfriends one at a time &gt; &gt; foreach(Girlfriend gf in girlfriends) &gt; &gt; { //if the girlfriend knows about the others &gt; &gt;if(gf.knows()) //could also write this as if(!gf.knows()) &gt; &gt;{ //run away and stop executing code in this method and return control back to the caller &gt; &gt;runForTheHillsRunForYourLife(); &gt; &gt;return; &gt; &gt;} else &gt; &gt;{ //otherwise send the message &gt; &gt;sweetMessage.send(); &gt; &gt;} &gt; &gt; } &gt; &gt;} Now, in that case, the return to the calling method is going to happen no matter what. It will either happen automatically when the foreach statement has gone through every girlfriend in the list and there is nothing else for the method to do. Or it will occur when the conditional if statement returns true and the return keyword is used. In a method that DOES have a return type, the return key word must be used to return an object of that value back to the calling method. For instance. If I wanted to say that I would never actually behave this way in real life and this was just a funny example- &gt;public bool isDouchebag(string nameOfSuspect) &gt; &gt;{//create a string representing my name &gt; &gt; string travis = "Travis" //check if the name of the possible douchebag matches mine &gt; &gt; if(string.Equals(travis, nameOfSuspect)) &gt; &gt; { //if it does match the guy is obviously not a douche :) &gt; &gt; return false; &gt; &gt; } else &gt; &gt; { //there's no such thing as a maybe boolean so if he's not me best to just assume he's a douche lol &gt; &gt; return true; &gt; &gt; } &gt; &gt;} &amp;#x200B; That would be a valid method. But if I only had this &gt;public bool isDouchebag(string nameOfSuspect) &gt; &gt;{ &gt; &gt; string travis = "Travis" &gt; &gt; if(string.Equals(travis, nameOfSuspect)) &gt; &gt; { &gt; &gt; return false; &gt; &gt; } //if the name does not match mine we return nothing - this is invalid &gt; &gt;} the code would not compile. The compiler error would be "Not all code paths return a value". It's not enough to just have the return keyword in the method body. My method MUST return some boolean (true or false) value or it is not valid. In the second example, anytime nameOfSuspect does not equal "Travis" no value would be returned. Therefore the method is not valid. All code paths must have a return value when a return type is required. You can't sometimes return one and sometimes not. (unless you declare a nullable return type but that's a different discussion) So there is an admittedly long explanation of the return keyword and its most common uses. I thought it would be good to go a little deeper with it, since if you are having trouble with return you really want to get your head around how it needs to be used in most cases.
Everyone knows [the third Boolean state is FileNotFound](https://thedailywtf.com/articles/What_Is_Truth_0x3f_).
Don't. Video game development sounds fun (and maybe is in very small companies) but is pretty boring in bigger companies.
I didn't mention the cost of the check at all.
continue is immediately familiar and natural to anybody who has programmed in c, c++, Java, Python, or c# for more than a few days. I guess you could argue it should be renamed to “skip” or something but it’s hardly the most poorly named keyword in the language. For that I would suggest virtual and abstract, which aren’t very descriptive and have different behavior in c# vs c++. But clarification is still only a Google search away, keyword naming isn’t really a big deal.
Missing ?? throw new Exception ("whatever");
Haha. This is why I feel so lucky for joining when git is already integrated in tools. I'd Revert with a "Don't refactor the goto" and then never say anything about it.
Even when WASM supports DOM manipulation through the [Web IDL Bindings proposal](https://github.com/WebAssembly/webidl-bindings/blob/master/proposals/webidl-bindings/Explainer.md), I don't think Blazor will support it natively since everything's designed to work off the virtual DOM so it strongly advises against direct DOM manipulation.
IMO the behavior you observed seems highly unusual for the .NET world. It should be rather straightforward to support stacks as you expect them to work. I would consider to only support IReadOnlyCollections as input but if you support IEnumerable one should either throw an ArgumentException or similar or store some array (although ordering convention could be slightly difficult for stack). Just silently omitting the data of stacks is a horrible approach.
My favourite coalescing call has to be exception throwing during construction, although this will be less useful with not null by default. myMember = someArg ?? throw new ArgumentNullException(nameof(someArg))
`continue` has been in use with the same meaning for over 60 years. You're the only one confused.
&gt; How do I get something from it ? You make a HTTP request to it. &gt; depending of the URL adress I enter, I got the results from the requests, okay.. but isn't this a bit unsecured and dangerous ?? Did you configure authentication? Sounds like you need to brush up on your fundamentals.
Like I said in my post, this is the first time I use WebApi. I use WCF usually. But right now I need to use WebAPI. Yes of course I make an http request, but how does my WebAPI is hosted ?
Is this what you do during development? I am thinking of scenarios where several changes will be made to one or more library projects. I will wan to build/test these changes several times before checking in code.
Sure they are. It’s all about maintainability, which those help.
RTFM
If I'm here it's because I already read the manual but I still don't get it. That's the point of asking help
But... that's not possible. There is _so much_ information about this online, I simply cannot understand how you haven't been able to find anything to enlighten you. Furthermore, you have more than one question in your post and they're both vague at that. You need to be more detailed in your ask, otherwise you're always going to get this response. People here are happy to help when those asking for the help have demonstrated effort in trying on their own. Giving the bulk of information on the topic and the simple, vague questions you posted, it's clear you haven't (not really, at least).
Well, in our world, there is people that don't get stuff when told in a certain way. That's just that. I don't ask for doing the work, I ask for enlightement. If my questions are vague, feel free to ask for more details. It's not that hard, instead of attacking by "RTFM" right at starters. I spent 2 days nearly destroying my fucking keyboard because I don't understand stuff like this, and i'm here telling you how to help people because you assumed that I should have understand the documentation, like i'm an all mighty person with a IQ of 200. No, I'm just a simple random person online, and people can have trouble to understand stuff. And I do have trouble to understand stuff. I have **Developmental coordination disorder** (**DCD**), (diagnotised) and one of the thing this handicap comes with is understanding stuff. I need an extra explaination. Hell, I already spent hours to understand basic stuff everyone got in a matter of seconds. So why I am telling that ? Well because I should not tell you that. I should not go around saying I have a handicap for understanding stuff, but instead, I except people reading my question having more interest in the person there're trying to help and not just post "RTFM" or other stuff because they assume when they do understand, anyone should do. And if you find my question bizarre, weird, or you don't get it, just ask simply, instead of posting something that dosen't help anyone.
/r/gamedev
Is there an open issue proposing this feature in the csharplang repository? https://github.com/dotnet/csharplang/issues
Just curious, are there any other language features that you feel would improve C# support for numerical processing?
Here are a couple of C++ libraries for compile-time dimensional analysis: http://se.ethz.ch/~meyer/publications/OTHERS/scott_meyers/dimensions.pdf https://github.com/nholthaus/units Do you think type numerals could be used to implement a similar library for C#?
SimpleInjector has been the go to IoC provider with my company. The great thing about SimpleInjector is how complex it can get when handling hundreds of services, decorators and collections that need to be registered. Mostly we use Microsoft's built in DI but Simple Injector comes with cross wiring to hookup the two. That way you won't have to pass IConfiguration across your entire app, just on the API and if necessary application layer. [https://simpleinjector.readthedocs.io/en/latest/quickstart.html](https://simpleinjector.readthedocs.io/en/latest/quickstart.html)
Sure, assuming you want to create windows programms you can also you the autoit.dll in c#.
Have you tried this... https://github.com/microsoft/MSBuildSdks/tree/master/src/CentralPackageVersions
Great, figured MS would have something will give it a shot
I think you can't reuse tokens in this way. You need to get a new token each time you run the app. (It solved this problem for me at least.)
The token hasn't expired, I need it only to read the claims. The complication is that this token is generated in another app by the HS512 algorithm, maybe that's the problem, but I can't find a way to force a specific algorithm. Which one did you use?
You host it on IIS and you access it using an HTTP verb your service is listening for, GET, POST, etc.
&gt; Well I mean I literally just started so I kinda only just created the rough build of the whole thing. How much of it exists? What kind of experience do you have building an app of this scope?
I'm not sure about the specifics of your use case but have you had a look at Unity?
OK I'll try this out &amp; see how it works, With the original code I posted in the OP omitting the Include Orders. Count would return an accurate count of the Lists elements. Only when it was changed to a Stack it would throw an error declaring the Stack is empty.
OK great I wasn't 100% sure on that, so thts another great help thank you.
I found the problem. Apparently the secret was Base64URL encoded. Well, that's 8 hours well spent for today
Oh yeah I know Unity but for my project I wanted to create a 2D physics engine from scratch. In the final product, the user will be able to draw a shape which will then be added to the scene and will be subjected to the necessary forces etc. The only graphics library I know of is OpenGL but there are a lack of C# OpenGL tutorials.
\&gt; I wanted to create a 2D physics engine from scratch. &amp;#x200B; \&gt; but I’m not sure which library to use &amp;#x200B; I don't understand what you want to do. Do you want to make one from scratch or use a library? What constitutes a physics engine varies greatly. For what you are doing, Monogame is probably the most sensible game framework to start with. It doesn't really include a physics engine but it does include a basic vector math library which can help you get started, or may be all you need.
It's always good to ask questions. But if you indicate that you want to write a psychics engine from scratch and have absolutely no clue where to start, I'm fairly confident that it's way out of your league to do so. &amp;#x200B; However, I'm not saying it's not possible. Since you do mention C#, I would suggest you write the library in either a .Net Standard form or .Net Core. &amp;#x200B; To give you some links: [https://github.com/bepu/bepuphysics2](https://github.com/bepu/bepuphysics2) , [https://mellinoe.wordpress.com/2017/01/18/net-core-game-engine/](https://mellinoe.wordpress.com/2017/01/18/net-core-game-engine/) ..
WCF is so different from MVC and WebAPI in ASP. NET core.
Is SDL still a thing? There's also monogame which I *think* is supported by Microsoft.
Yeah the null-coalescing operator and null-condition operator sure will lose some value as use of nullable value types is discouraged through non-nullable value types. It does have pros, though.
My library might help you. https://github.com/ZacharyPatten/Towel I have an example of simple 3D collision detection using an Octree. And my project has quadtree capabilities too. It also has measurement mathematics, which track the units of measurements with the values. My project is still in heavy developement (and certainly has room for optimization), but if nothing else it might give you some inspiration. Good luck! :)
They’re late compared to Vue/React, but this was one of the first usable WebASM tools
You could try with SFML with the C# binding.
Well, final update on this. &amp;#x200B; finally I got a VPS. 2gb ram, 25gb hdd, 100mb/s, unlimited traffic. 3€/monht. I installed CentOs into it and everything is working perfectly. &amp;#x200B; defenitly the cheapest way to do it, obviously little bit longer and "hard" to configure, but worth it.
a property gives you the chance to detect changes and perform validation, whereas the field could be misused, especially if it's a third party creating the derived class. as the SO answer says, property is much lower risk.
How often does your if statement actually trigger? It might not be on exact position. Use a &gt;= or &lt;= and see if that works.
thank you
Any reason you are writing your own physics engine? Save the time, use something like Box2D, no need to reinvent the wheel.
thanks
That looked fun. :) I don't see people use T4 templates very often for things other than config files and settings. Have you used T4 templates for any other topics? If you are curious, I am currently using T4 templates for generating measurement mathematics and multidimensional sorting data structures (quadtrees, octrees, etc.). Measurements: https://github.com/ZacharyPatten/Towel/blob/master/Sources/Towel/Measurements/MeasurementTypes.tt Multi D SPTs: https://github.com/ZacharyPatten/Towel/blob/master/Sources/Towel/DataStructures/Omnitree.tt
So you asked two opposing questions, I will answer both. If you want a premade 2d physics engine in c#, I recomend farseer. Integrates very well with monogame. If you are trying to build your own physics engine then you don't use a library since you create the library.
They're not necessarily trying to make a full featured production grade physics engine. A simple 2D app demonstrating some physical principles would not be out of reach of a beginner.
Exposing fields in an API is a bad idea because there is no control over how that accessed is accessed, nor in how it is set. You are at the whims of any consumer of the library mucking about with it, exposing yourself to a whole class of bugs for zero benefit. Because properties are a syntactic sugar for get and set methods, rectifying this mistakenly public field, at the very least, forces a recompile by all consumers of your API in order to deploy your changes. Protected members are still a part of your published API, even if it's within a specific context of abstract or unsealed classes. Thus, any reasoning for not having public fields is equally valid for not having protected fields. You'd expect your API consumers to want to be able to extend your awesome abstract classes, right?
Not sure about constructors but it would be nice if they had allowed that for properties.
&gt; when calling a method defined in an abstract class that would behave differently according to the fields set by its derived classes This is just a smaller-scale example of "global" variables and depending on hidden state. Looking at the method signature, you'd be unable to tell that the method depends upon those protected fields. Much better design would be to make them private fields (if you need fields at all) and then pass them as arguments (Dependency Injection) to the abstract method. This makes an explicit note that the abstract method depends upon those dependencies. That said, I think the SO answer can be summarized as "members with the protected keyword can be used by third party code, and therefore are considered part of the public API surface of your code. Treat them as you would public fields/properties/methods when it comes to breaking changes, etc." And, of course, the recommended guidance around public fields is "don't".
Thanks for this, I have been hand wiring in a .versions file and loading it via MSBuild for years. This will be so much smoother.
[Godot](https://godotengine.org/) (I've never used it but I hear it has a decent 2D API) or if you want a bit lower level, Direct2D and [SharpDX](http://sharpdx.org/). Depending on what sort of performance/complexity you're looking for, you could just do it in [GDI+](https://www.c-sharpcorner.com/article/gdi-tutorial-for-beginners/)
I had a problem similar to yours recently, and I resolved it by specifying the X509 certificate to the `AddAzureKeyVault call` private static void ConfigureForKeyVault(IConfigurationBuilder builder, IConfigurationRoot config) { var vaultUrl = config["KeyVault:BaseUrl"]; string clientId = config["KeyVault:ClientId"]; var certificate = CertificateHelper.FindCertificateByThumbprint(config["KeyVault:CertThumbPrint"]); builder.AddAzureKeyVault(vaultUrl, clientId, certificate, new DefaultKeyVaultSecretManager()); }
Yea it works really well, and you can have a couple of these files if you need overrides at a lower level, it works quite intuitively
That repo makes me happy. There’s some project cleanup that this will let me do.
I've tried switching the signs and if picture box is within the form then it deletes but nothing happens, so, i dont think that the IsDisposed if-statement is working. I can't tell if the picturebox is disposed after leaving the form maybe im checking if its disposed incorrectly?
Do an experiment. Show the example in my original post to anyone who doesn't already know what 'continue' does and ask what they think will happen. Will it run once or four times? I promise, unless they already know what 'continue' does, that you'll need to explain it to them.
It's not a big deal at all, I agree, but it's a relatively low cost improvement. And yeah, virtual doesn't make much intuitive sense at all. Abstract isn't as bad, it's got a very weird job.
What makes you think I'm misunderstanding something?
Like others, I am not sure what kind of library you are looking for if you want to write your own engine. That being the case, I will not recommend any library. I would recommend you look up tutorials for collision detection and basic formulas for things like gravity. Even 3D formulas can be simplified to work in 2D, so pretty much anything you find will be useful. If you are looking for a way to *visualize* your physics engine, you could use something like MonoGame or Unity, but you should write the engine itself **in an entirely separate assembly and project**. So, two projects: your physics engine, which knows nothing of drawing and rendering, and a visualization project that references and uses it with whatever framework or engine you choose for rendering.
Pain, tears, and misery. But I keep coming back, because it’s still better than the other cross platform options.
Lmao you want my physics notes from my high school class that I barely passed last semester?
Why do you think it is better than other cross platform options? Would you build a web application, mobile application, etc. startup company based around it? What about [ML.NET](https://ML.NET) integrated with your apps? I love the versatility of betting on MS tech, but still unsure...
Make sure to read up on OpenOffice SDK. Depending on how much data you need to write into the excel file, there are 2 ways on how to do it. One of them needs to have the whole excel file in memory which is a big no-no if there is lots of data. The other one is more complex/complicated but faster and has no memory limitations. Sorry I forgot the names of both methods.
Xamarin is a shit show half baked tech. Stay far away.
As a long time developer, please use a database and not Excel or some other office product to store data. I’ve cleaned up way too many of those over the years. MySQL, MariaDB, etc. there are many to choose from.
Of you're working with normal relational data in the dotnet world then go with Sql Server
I think he wants to use a graphic library to create a physics engine. That's my best interpretation
I recall taking a hard look at lab equipment many years ago, equipment that would measure things like stress-strain or temperature via a thermocouple. As I recall, each device connected to a computer via a serial cable (this was the mid-90s). I assume that you won't have to go too low-level and start reading from pins, that there would be some source that you could tap into, I'd hope. At this point, when you have the data coming in, you may decide to write an OOP program that raises and listens for events. Or maybe the amount of incoming data is so torrential that the event sourcing pattern would be something that you could leverage.
I'll be happy to tell my future boss that, I definitely prefer a DB aswell. Do you have any knowledge of the data I will recieve? Like how am I getting this data from the actual machines and stuff like that - is that just some sort of API from the industry behind the machines or how on earth does that work? For example they talked about the tempature of the machines they're using - how do I get this data?
If you've got to work with MS Excel, OpenXML is your best friend. Steer clear of Excel Interop- it'll work fine in your machine, and then you'll realize it can't run on a server as soon as you try to deploy and have to frantically rewrite your code to use OpenXML while your customer angrily breathes down your neck.
From what I understand, my first project is for one of my countries biggest and most advanced companies - they will definitely have the newest of technologies. So you think that the machine itself will create an event as I know it from c# and then I'll just have to listen to that to get my data? I'm very confused about the process of getting data and what kind of data I'll actually get.
VelcroPhysics or Aether2d are up to date continuations of farseer, though I'm not sure how much they differ yet That being said I think OP just wants a graphics library to demonstrate/visualize the simulation. Monogame might be a good choice for that.
I write software for measurement systems- we still use serial all over the place, particularly for industrial applications. It's old, but it's unbelievably reliable.
Depends on the age of the machine. I started out with scales, using COM ports back in 1999. I imagine there’s probably an API or machine specific interface you can hook into. I had to use C, hopefully newer stuff is friendlier to newer languages. If you know the manufacturer of the machines you’re working with, you may want to poke around on their websites for developer specific info.
Couldn't agree more. All of the behavior of a parent class should be correct with regards to state management, even for abstract classes. The methods of a child class, in turn, should be 100% responsible for any state management of new state variables they introduce. The interaction between child and parent classes should be between methods, not fields. And, if at all possible, those should be limited to pure functions with no side effects.
Yep. Only public fields should be `const` or at least `readonly`.
It's certainly the most plug and play, and most enterprise scenarios warrant the MS licensing and support. However, even MySql and Postgres will get you though under dotnetcore nowadays.
Without knowing the exact requirements, the only advice I can give is split out the data retrieval with the data processing. It is just good practice in general, and if you have to use COM or other lower level stuff (or event C/C++), the data reading bits can be obscured from the data processing bits, which can use a more modern architecture. &amp;#x200B; Only experience I have that is even close to industrial IT is that I have modified the software for my standing desk and had to interface and poll a C++ based library that reads off the USB device for height, and has to keep polling for new data (e.g. height of desk).
Have you checked out flutter? I've yet to dabble with it, but have heard it's good.
Since u r gng to be getting a stream of continuous data from the machine it would be useful to get urself acquainted with stream analytics.
If you are implementing SQL consider using the Entity framework, great for OOP. I’m currently working on a project with flow meters, running on arduinos , everything is collected and sent in a custom C api, in order to store and manipulate the data as wanted in c#.
Like everyone else have suggested, Database over excel! However, i work for an Industrial client where we need to read data from excel and store/process/manipulate and store it in a database or display it to a particular end user via a webapp. The architecture is a bit complex and i cannot explain here. What we use is *azure data factory* to read inputs from sources that are not necessarily a database. I think you might take a look into it before the meeting
Hi. I'm Swift. What's going on here?
Data is data. It'll come from one place, you'll have to do something to it and then put it another place. Don't sweat the details right now, they'll come in time.
My work does something similar, we've got this tool that imports both XML and Excel files, and can then export XML, Excel, PDF, and various other formats, depending on user configuration. The entire thing is incredibly complex, and sadly because it's written in Java we can't make use of Microsoft's first-party toolings, having instead to rely on things like Apache's HSSF. Initially I was rather worried when taking on this position, as I'm a .NET developer, not Java, and the tasks I faced were nothing like anything I'd done before. But it turned out okay in the end. Data is data, no matter how you look at it. Gather specs, make an overarching plan, break down the tasks, and then start tackling it one bit at a time.
I develop systems for various pipeline control systems and refining operations. There's no way anyone has enough info to give you an intelligent answer. But that's likely not your fault, you just don't know yet. You would do yourself a favor to do some light investigation into the following topics: IOT technologies and concepts, SCADA, PI historian, and maybe some large data analytics topics. My info is obviously skewed toward the energy sector. Industrial IT is a broad category, but I think if you start with this sort of mindset, the solutions will be similar. Or maybe they want you to write a CRUD app, who knows? IOT: https://en.m.wikipedia.org/wiki/Internet_of_things SCADA: https://en.m.wikipedia.org/wiki/SCADA PI Historian: https://www.google.com/search?q=pi+historian&amp;oq=pi+historian&amp;aqs=chrome..69i57j0l3.4125j1j7&amp;client=ms-android-verizon&amp;sourceid=chrome-mobile&amp;ie=UTF-8 Apologize for formatting on mobile.
Flutter is the best cross platform tool out today. Flutter has 67,000 stars on github and close to 17,000 members in the FlutterDev subreddit. In comparison XamarinDevelopers subreddit has around 3,000 even though it’s been around much longer. All I’m trying to say is Flutter is trending like crazy and is a much better development experience than Xamarin. That’s where I would be putting my focus if I were you.
There are many time series databases that are used for that purpose. And OPC is a protocol suite for transferring process data. I suggest that you also post this question in r/PLC
&gt; Looking at the method signature, you'd be unable to tell that the method depends upon those protected fields. ? Unless the method is static, you must assume that it depends on all instance variables.
Don't let them use the Excel to store data. Use an rdbms with redundancy and build rest apis on top of it.
Postgres is my fav. I use sequelize and Peta poco .net core. Sequelize for ddm and Peta poco for ddl.
Would you happen to know if it has any integration with AWS ?
I'm convinced this is what they presented about Excel and not what I wrote in OP. The super complex systems you're both talking about frightens me. The job description were 5y+ of experience and I'm straight out of college - did you develop that on your own or did you get help from more experienced developers, engineers or similar? I don't think I'm capable of writing complex, industrial systems as it is right now which is probably why I'm kinda nervous in the first place and just want to gather as much information as possible.
That's correct, I don't have a lot of knowledge either. It's a 5y+ experience position but because I'm straight out of high school they're trying me out slowly with some intern system of some sort (they might put me on a real project at start which is why I didn't specify in OP but most likely something internal at start). The job description mentioned EMS systems specifically but it's doubtful that they're gonna throw me right at it. I'm just very much in the dark on what's going to happen but I think your suggestions are great. Just reading the wiki of IoT made things more clear.
I never went to college. It's kind of a long story but yeah. I'm what most would call a code monkey. I think you're glorifying industrial systems a bit. A lot of real world code starts off with good ideas and people's hearts in the right places, but eventually due to time constraints, and people having different ideas of what's good, etc. a once beautiful concept grows into a monster. If you know how to problem solve, digest larger tasks into more manageable ones, and are resourceful enough to know where to look for help (there's a lot of discord groups, highly recommend turning there), you'll be fine. There's been plenty of times where I've been having this anxiety about my performance at work, where I'm utterly panicking about things, but it works out in the end. I gather it's pretty normal.
This is exactly what my company does. PM me if you need more advice than you get in the comments.
Let me introduce you to MVVM a little bit. &amp;#x200B; First off, you create your View which is the Xaml that your MainWindow.xaml is in. Next step is to create a ViewModel. This contains all of the properties that is used on the View and you reference Bindings in the ViewModel to elements in the View's Xaml UI (like the TextBlock tags) &amp;#x200B; The first thing you should do, is save this somewhere, and re-use it in all your projects like this: [https://hastebin.com/fuvuviwuca.cs](https://hastebin.com/fuvuviwuca.cs) &amp;#x200B; This is what you use to tell the UI to 'refresh values' on the UI when you change them. Usage: `NotifyPropertyChanged(nameof(VariableName));` Next step is to make the ViewModel class, and implement the ViewModelBase in it, something like this perhaps: [https://hastebin.com/yikugucesa.cs](https://hastebin.com/yikugucesa.cs) &amp;#x200B; And in your MainWindow.xaml file, you would create the DataContext in the XAML to instantiate the DataContext as the ViewModel you are going to use: [https://hastebin.com/ahafapafac.xml](https://hastebin.com/ahafapafac.xml) &amp;#x200B; So now, the MainWindow is looking to the ProjectViewModel.cs class file as to what it is supposed to display. Here is where you add in all your properties (strings and such) that you want displayed. So here is something really basic, but it's a start that you can begin to add to, make the commands and such: [https://hastebin.com/nicujunivu.cs](https://hastebin.com/nicujunivu.cs) &amp;#x200B; Now, all you do, is in your View, wherever you want to display the random number, lets say in a `&lt;TextBlock&gt;` you would do `&lt;TextBlock Text={Binding RandomNumber, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}&gt;` &amp;#x200B; Now every time you have clicked the button that runs that random number function, the property of `RandomNumber` is updated, and the `NotifyPropertyChanged` event is fired off, which tells the UI `TextBlock` you are binding to that `RandomNumber` field, that it's value has changed. &amp;#x200B; It's a start to point you in the right direction. &amp;#x200B; This is how I do most of my commands, and it might not be perfect, but it works. Bindings are the way to go with Xaml, as it makes your life a lot simpler. You can use Converters to do value comparisons and adjust Styles on elements based on values, all kinds of neat things. All with Bindings.
Thanks a lot. I'll reflect on all the answers I've gotten tomorrow. I do recieve a description of my project at some point - would I eventually be allowed to contact you when I recieve the specifics aswell? I might have a ton of questions after it.
Your API is its own service. You can start the API and call to it using any application that can make HTTP requests, like Postman, for example. If you don't want just anyone hitting your API, then you need to setup authentication and establish trust between your MVC app and your API.
Depending your environment, if it's windows and you're after computer settings, I would suggest looking at Powershell 5.1 to obtain the information and put into a mssql database. Althought, Powershell 6 should help with Linux Mac os, but I've not tested here.
Well I've been using C# (and Python) to program odd things for a while now. Just small projects, nothing enough to be published (like building a simple keylogger, stuff like that). I guess you can say this is my first ever major program. As of today, I will probably release the first Alpha build. Everything works fine for now and I have figured out most of the logistics as how to implement Python modules with C#.
Of course! Always happy to help
Yeh, we abandoned xamarin and went native android/iOS. Believe it or not, even with two parallel projects, it's far better than xamarin. We are investigating flutter but generally our experience has made us view cross platform as too good to be true.
Depends on the machines what sort of interaction is possible. Industrial machinery tends to have "protocol documents" which explain the memory format and locations of key metrics. There are a variety of standards(?) For getting at the data. DDE, OPC, direct COM to HMIs and Rest APIs all exist (often for SCADA purposes) but generally you dont have too much of a choice, the machine manufacturer will have their own flavour on how it should be. I worked doing the same thing for 5 years and it was great. Very challenging but fun to see your data flowing into a system in near real time.
Wrong sub-reddit?
I'm working in the industrial field as well, as a software developer. You may usemodbus protocol or something similar I think
&gt; want to write a **psychics** engine from &amp;#x200B; I think we all saw that one coming.
It’s your job, not ours. How are we supposed to know what data you’re retrieving?
If they’re looking for 5y+ of experience, why exactly did you apply? Many companies will take people who don’t have that, assuming they know what they’re doing. You seem to not have a clue what you’re doing, so why exactly are you not just applying for a junior dev position somewhere?
It's my upcoming job and I'm obviously asking stupid questions because I've no clue. Luckily other people were capable of understanding my intentions and gave me solid answers.
so cool, love it!
I never applied for anything. Stop being so damn judgemental. I'm looking for advice before I start in a field I've no experience of so I can prepare until I start. I don't expect to learn and understand everything until then but I don't see any problems in preparing for what I'm gonna meet. Also I'm Danish but we call it university, I think it's your college.
&gt; Looking at the method signature, you’d be unable to tell that the method depends upon those protected fields. That’s true of any field. It’s also no less true of properties. (I suppose protected compared to private does add a layer of opacity, though.) It’s a deliberate design choice that, in OOP, your methods don’t live in a vacuum and depend on the state of their class. It has its pros and cons. &gt; Much better design would be to make them private fields (if you need fields at all) and then pass them as arguments (Dependency Injection) to the abstract method. This makes an explicit note that the abstract method depends upon those dependencies. It does, but it also sounds horrifically overengineered to me. &gt; And, of course, the recommended guidance around public fields is “don’t”. True.
Protected fields should be named with capital letter. That's a whole reason to use them.
Your story is all over the place here, is all I’m saying. If you don’t understand the basics of device communication, why are you applying for a job doing just that? And if you never applied for this job, why do you care at all? If it needs 5+ years, it’s definitely way out of reach. It doesn’t matter if you call it university or college. Here, you said you just graduated college. Elsewhere, you said you’ve only just graduated high school. Two very different things.
No, other people are taking random shots in the dark, nothing more, as you’ve provided no information. If you want actually accurate and helpful data, you need to provide much more. Languages used, database systems already in place, types of machines (are we talking about card readers or industrial furnaces? You never give any description), branding of machines even. All of that is quite necessary.
try this cmd.CommandType = System.Data.CommandType.Text; cmd.Connection = conn; penaltyBox.Items.Insert(0, new ListItem("--Select Penalty--", "0")); penaltyBox.AppendDataBoundItems = true; conn.Open(); penaltyBox.DataSource = cmd.ExecuteReader(); penaltyBox.DataTextField = "Pen_Name"; penaltyBox.DataValueField = "ID"; penaltyBox.DataBind(); conn.Close();
If you feel very brave: 1. Join Windows Insider Program 2. Get WSL2 3. Install Docker in WSL2 4. Profit Reference: https://devblogs.microsoft.com/commandline/announcing-wsl-2/ https://devblogs.microsoft.com/commandline/wsl-2-is-now-available-in-windows-insiders/
No, they answered my vague questions with the best possible answers. I'm not gonna expect more when I don't have any other information and what I've gotten can definitely give me a great idea about how communication between devices and my system work. Even if it's a different procedure at my new job they've all been infinitely more helpful than you.
The only thing all over the place is my confusion between high school and college. I've already landed the job
It's legacy naming from C. That said, almost all languages with that kind of functionality calls it continue.
Yeah for you and me, but that can be due to the curse of knowledge :)... or rather, due to having learned it already.
Be aware that - You can not opt-out of a current joined insider program. - Docker support is not fully fledged out yet (e.g. accessing via localhost). - This is a **very** early preview.
Yes my experience with Xamarin (Forms) was horrible. Wouldn't rule out doing a shared library project but would not touch forms again.
All these people saying DB over Excel. I've worked as a data analysis before I was a software developer. I also despise Excel as a product. However, many MANY tasks are far more time efecient to deal with in Excel than to try and setup a DB and your data pipelines and UIs.... Ofc, a well oiled data pipeline will always be better than Excel. Especially since you can just grad the data from your DB with Excel if you need to make some quick reports. But there is a not insignificant up front time investment with that, and your employer may need an immediate solution, even if it's just a stopgap. Don't take anyone's word as gospel. Data, business, urgency, and requirements are all case by case.
*Microsoft Sql Server
Is a mono repo a solution? This way you would reference other projects on source code level, not on the published version.
I am dead
I'm very new to docker (started fiddeling with it last week) but I got a bit of the hang of it. First how I use it: I have two machine's, a Win10Pro and a Win10Home. Docker for Windows requires you to have a PRO licence (for the Hyper-V) so on one machine I run it on the Docker for Windows environment, and the other with with Toolbox. Both of the setups are using a Linux machine in the background and I build everything to a Linux environment each time. There is no need to go switch to a Linux environment as the virtualisation (via Hyper-V or VirtualBox) is running a Linux machine in the background doing this work. After I push my code to Azure Devops, there is a build pipeline that does the same docker build on a Linux machine and it works flawlesly. At the moment I have some experience building a NodeJs API, an Angular frontend and a Dotnet Core 2.1 app with api &amp; react frontend, and I really love it. It was quite the hassle to get it up and running if you're a total noob about it but now I'm thinking of putting all my web projects from now on in a Docker machine.
Hello, Where I work we build, deploy our app on Unix and it runs in an Unix container. So there's no need for Windows imo. Just use dotnet core and you are good to go.
And how I code on .NET Core on Linux without Visual Studio IDE ? You're going to tell me to use VS Code or ReSharper, dosen't you ? Welp, I tryied both, and they aren't really suited for me. VS IDE proposes a lot of great tools that I use, I find the interface very good and I use it for like some years now... so yeah. Possible in theory, but in practice, doing .NET Core on Linux isn't for me
Even better, just hang out for the preview of this: https://engineering.docker.com/2019/06/docker-hearts-wsl-2/
I am using Rider on Windows because I prefer it over visual studio.
You're talking my language! This is what I was doing before my current role. I had to implement a very similar project. Some machines had direct access to running information: Sheets per second, speed, inks etc... and their API was exposed and documented, so that was fairly easy. Some older purely mechanical machines did not, so I made light sensors through their wheels and measured the distance, so every time I got a signal from a photo-sensitive cell I knew, for example, that 0.23 meters of paper had been used. For this, we purchased standard PCI data capture cards, although now, I think I would probably use a Raspberry Pi board or similar to capture that output and send it on. I coupled this up with a touchscreen (winforms, with python scripts executed through the DLR), that would tell me what "state" the operator had put the job in { setup, run, QA, clear etc... }. With around 30 machines, all in different departments, I was receiving a message, probably 7-8 times per second. Rather than write the data to Excel or similar, I was using SQL Server...BUT...through a webAPI that simply threw the managed data (created a standard class with all information needed { job_state, job_id, user_id, current_count, etc...) into a queue, and then finally into the database. So: C# app --&gt; IronPython Script (unique to department) --&gt; API --&gt; Message Queue (RabbitMQ) --&gt; DB. That way, if the number of messages increased the load on the database at any one time didn't. You're not really going to know which mechanism to get to that data until you get there. Their machines may have an API exposed, you may need to get to it through RS232 or USB, or it may have nothing, requiring you to make some form of capture unit. Depending on the volume of calls, I would recommend using a message queue though. If the load becomes too heavy, then you can simply spin up new consumers. Hope this helps.
Ye
Do not feel brave. Just install Docker and use Linux containers.
&gt; Like I don't understand how and what data I would get from the machines and the whole process is pretty unclear to me. They should be able to answer this for you. &gt; I was wondering if anyone could guide me to a direction on what to read up on before I'm meeting them again in August. But if I am taking a shot at this, I will ask them what kind of machines are these? Are these machines follow industry standards? Do the machine manufacturers provide SDKs, APIs, and developer guides that you can use for *integration*? Keyword here is *integration* since this is what we usually do. Nowadays, components had already been built and the trick is to know what components you need and know how to use them. You might want to read up on Services as you probably need to implement them as your base process to retrieve data from units across different platforms. You might probably need to look up on messaging protocols (MQTT, AMQP, STOMP) and/or message brokers (RabbitMQ, Kafka, Redis) that you need to use to manage information flow across the system. You also need to look at how you will manage concurrency. Since you mentioned that it's a large industrial project, you should anticipate a large volume of traffic. Last but not the least, how are you going to store your data? It will most likely be big data. What platforms are capable of handling large volume and traffic? Are you going to use SQL or NoSQL? I'm sure there'll be a lot more. A lot of questions will surely come up during the planning stage.
If you are not comfortable coding on Linux e.g. using vs code, you will have a hard time in your devOps course. I suggest you man up and get used to it. It's really good. And coding without an ide is a very helpful skill.
I suspect at this point of your learning, MVVM could scare you off! &amp;#x200B; Each of your elements (text boxes, buttons etc) is available in your c# code behind as properties (your XAML and you CS are merged into one class at compile time via the partial xaml.g.cs file that's generated). &amp;#x200B; RanomNumber.Text = value.ToString(); &amp;#x200B; will set the text value. If you want to extract from your min and max, Int32.Parse(Maximum.Text) will do it but you should be careful of parse errors (Int32.TryParse or try/catch around it, look these up). &amp;#x200B; Because your element names become properties you should be careful of how to name them. "maximumTextBox" for example might be better than "Maximum". Hope this helps. Good luck on your coding journey (when you're a bit more comfortable, do look at MVVM but don't get too heavy too quickly and for simple tools/tasks, keeping things simple is very sensible in my opinion!).
Develop on Windows, run on Linux. Easy thing since dotnet core.
What exactly is it that VS (Full) does that Code does not for you? I use both day to day and Code is, for me, the better editor while VS (Full) is the better debugger.
I think he is looking for 2d renderer for the engine he intends to build.
Why
That's a good guess.
&gt; They should be able to answer this for you. The interview got set up in 2 days time and I didn't have the knowledge to ask the proper questions at the time. I will meet them again when I travel home from vacation but that isn't in the near future and I wanted to better myself if possible even before our next meeting. I know have a good understanding of which questions would be useful for me. I don't have a direct contact to my boss yet (waiting on his email detailing my project) so I wont be able to get any information that meeting. I am well experienced in microservices and communication using AMQP(RabbitMQ) so that'd be great if that was a possibility. I could expand it though and while it isn't a top priority I'll see if I can find time for it. I have no experience with manage concurrency or any kind of big systems since all my knowledge is from classes and rather small school projects. That's a great thing to suggest. My company is using SQL and that's what was in the job description so I assume that's what we're gonna use. My understanding is that it goes Excel -&gt; I'm processing -&gt; MSSQL. I know I wrote differently in OP but I'm fairly sure this what was they said. You are right, I will have a tons of specific questions when I get the actual project details and that everything is kinda vague right now but I have around 1½ month to our meeting so even focusing on things that could be useful is much better than just be awaiting. Thanks for your reply
If you want a pure c# experiance, I would go with MonoGame. Also you can ceck c# port of box2d https://github.com/codeyu/Box2DNet
I worked in industrial environments for a little while, moving data around a factory. Look into distributed ETL systems. If you're on the Microsoft stack, SQL Server provides the SSIS framework which makes ETL jobs easy to create. You'll want to look into MS's ETL model and copy that--trying to develop your own model is a pain.
These numbers mean nothing. Flutter doesn’t compete with Xamarin yet and the numbers I’ve seen show it on a downward trend.
It's probably been done before but I've been making a fluent style SQL DB framework. [https://github.com/RossM76/RQuery/tree/master/RQuery](https://github.com/RossM76/RQuery/tree/master/RQuery) You decorate your dtos with \[IsTable\] and derive it from RQueryDTO then you can use fluent style language to do basic CRUD operations. I made this because I was frustrated with SimpleCRUD etc. It uses the native IDBConnection functions and doesn't extend any other third party frameworks, the result means its a very simple framework to implement
Removed: Rule 3.
Well and tbh you can turn vs code, heck even vim (if you're feeling blasphemous) into an ide, with the plugins
&gt; Of course there is Docker for Windows, but only avaliable for 10. Of course there is Docker Toolbox... but hey, it seems a bit of a crazy gas factory using virtualized linux everywhere. Not very usefull. Docker for Windows still uses a Linux VM. It just hides it from you. Unless something has changed in the last few years with the WSL that emulates CGroups and what not so docker can run natively. And my experience with toolbox is that you should just use Docker for Windows. I built some tooling around toolbox and honestly it's more hassle than it's worth _unless_ you're going to be running other VMs as well. I had a situation where I needed multiple docker vms on my host (swarm experiments) and then just stuck with it after that was done because I'm a curmudgeon. &gt; So of course I could use a linux with my Windows, but I should switch between Linux and Windows every time I want to compile ? That sounds a bit of a headache. You don't need to do this. You can just build your container or use one of the SDK images with a volume mount. This is what we do at work and other than needing to recompile when you kill the container it works just fine (has to do with bin and obj getting mounted, and honestly my laziness hasn't over taken the keyboard shortcut yet). My advice would be to just bite the bullet now, start using Linux as your daily driver OS, run Rider or VSCode or vim or even emacs (or hell, use Ed, don't but you could) because your devops course is will probably get you kneedeep in Linux faster than you can get comfortable in it.
My company currently uses a custom web application that gets barcode data via a text box. We are planning to improve some processes with automation and replacing a hand held scanner with a fixed mount one that itegrates with a PLC. The scanner's manufacturer provides an SDK for .net and a sample program in C#, so that made it easy to just steal thier program and adapt it to our needs. The device basically uses serial over Ethernet, but I don't need to worry about any of that thanks to the SDK, so maybe you will get lucky and have a similar experience.
Oh I am sorry. OpenXML SDK is what I meant in the first place! There you have these 2 modes on how to write to an excel worksheet. Don't use the one you find tutorials for everywhere because it needs to load all its contents into memory. With 100.000+ rows and multiple columns you will have problems.
Yeah- Excel Interop is what you find most tutorials for, but it has to run an instance of excel in the background to work, which means the whole file exists in RAM while you're editing it, you need MS Excel installed on the target, and there must always be a user logged in for it to work. OpenXML edits the xlsx files directly, and has none of the above requirements. It's a bit harder to learn, but way more powerful.
&gt; Docker for Windows still uses a Linux VM. And it will continue to do so, even if indirectly. WSL2 is based on a VM as well.
Please note that this account is not associated with the project anymore. I decided to separate my main account and my project-dedicated account, to avoid confusion and chaos. If you have any thing to say, please message [u/RedditForDesktop](https://www.reddit.com/u/RedditForDesktop/). As always, visit the official subreddit [r/RedditForDesktop](https://www.reddit.com/r/RedditForDesktop/).
1. If you're going to be programming on Windows, you definitely should use Windows 10. 2. Virtualization (which does include running Linux containers on Windows) is useful. Certainly much easier than switching between the two OSes. 3. Windows containers are also a thing, though there's a good chance they're not the best option for what you want to do.
Try debugging and check your ifs when they trigger.
Have you heard of Vagrant? It's awesome. And you can easily spin up and down development environments on your machine, which is similar to what folks have suggested you use WSL2 for. [https://github.com/oracle/vagrant-boxes/tree/master/DockerEngine](https://github.com/oracle/vagrant-boxes/tree/master/DockerEngine) Here's a VagrantFile that will create a vm on your machine with docker installed. Follow the readme's instructions of installing VirtualBox and Vagrant and you'll be good to go. &amp;#x200B; Vagrant's site: [https://www.vagrantup.com/](https://www.vagrantup.com/) &amp;#x200B; I do the same thing as what you're trying to do except I also use Kubernetes, which is in the same repo.
You've got lots of useful answers already, I'll just add a small tip: whatever you do, always store the *raw, unparsed* data you get from the devices *somewhere* before you actually process it and feed it to a proper database. There will be mistakes, either yours or the manufacturer's, and a raw data log with timestamps will be invaluable. There won't be a webserver doing the raw logging for you (unless the device is super modern and makes HTTP calls on its own, in which case you're incredibly lucky).
&gt; Is Blazor production-ready? Nope.
Why not?
So... A winforms app with an embedded browser? Why would I use this over... Let's say... My internet browser. (I'm serious)
Didn't noticed my typo until your comment. Not gonna edit it out though 😂
I worked in industrial IT and I miss it every day. It seems your biggest question is about where/how you're going to get your data from these machines, the answer is several places, depending on the machine. Some of your data will be gathered in an HMI (Human Machine Interface), which is typically fed by PLCs (Programmable Logic Controller) the most basic of these take low voltage/current electrical signals to create and/or logic gates. If you're working with CNC machines that have FANUC controllers you can purchase a copy of the FANUC FOCAS library (coded in C#) that will allow you to communicate with it directly via its API. There are also some "Turnkey" solutions that would greatly simplify this process. Some time ago most of the major machine makers came together to firm a standard known as MT Connect. Basically they all recognized that manufacturers were going to buy different machines for different purposes but might want to keep track of KPIs (Key Performance Indicators). Instead of forcing people to work with multiple APIs they centralized everything into one easy to use package. Lastly there is the holy grail of Machine Interfacing, the OPC Server, specifically Kepware. Kepware allows you to not only interface with not only with your machines but your entire shop right down to your lights and networking equipment. Best part is its fully programmable in C#. You can store and use the data however you want from there. Hope this helps. Let me know if you have any other questions.
It hasn’t even had a stable release yet. If you want to port to Blazor eventually, you’d probably be better off using Razor to start with. I’m a fan of React / Angular single page apps though personally, unless it’s something that isn’t customer facing.
I have. It will probably be good one day, but right now it’s still in the growing pains stage. Works well for simple stuff, royal pain as soon as you try to do more complex apps. That’ll get better as google is pushing it for their own apps now.
More of the underlying platforms are consistently available, and the path to doing platform specific stuff is _usually_ clear. Also, performance is more consistent than the other cross platform toolkits available, with the caveat that on older android the XAML layout stuff is consistently so slow as to be embarrassing. I did build a company on making dotnet apps and websites, it will be 10 years old in August. I’ve consulted for clients who asked me to work in Java/groovy, as well as php and python. None of those compare to the productivity and discoverability of c#. I have a project coming up that will integrate machine learning, but I will probably offload that to Apples implementation (its an iOS app) since I have been beat up by Azure so many times that I should take out a restraining order against any light blue clouds.
It's a preview.
You're going to get a lot of bad answers and a few good ones. I've been using Xamarin since the first Forms release in 2013. It has been a very bumpy road, but things are finally getting better. I've only worked on three applications so far, and why I can't really talk about them is the meat of why I think you'll get pretty bad answers. I could ramble for pages about why but Xamarin is excellent for no-nonsense enterprise applications. But most companies don't let employees openly discuss all of their projects. Or many employees don't want to speak frankly about employers' internal projects. So you don't get a lot of answers about "Who is building what with Xamarin?" I worked on a GPS navigation app using XF as its UI layer for 6 years, we were using Forms from the first release. You haven't heard of it because it was focused on commercial truckers, required a subscription to our products, and you wouldn't pay the price we asked for it. The company is now very large, so I'm not sure how much I can say or how frank I can be. It was definitely not a very good experience, but I can safely say Xamarin wasn't my problem there. 99% of what I faced was either organizational or a side effect of native libraries we *had* to use. Now I'm working on apps that aren't released yet so I can't talk about them in detail. But they look nice, and nothing about the issues I'm having with them are particular to Xamarin. --- Take a look at Yelp. It's a very popular application that has had a moderately stable UI since it started. It would take a while to get its UI implemented in Xamarin Forms, but I don't think there's any reason XF couldn't tackle it. I'm trying to find something Flutter can do I don't think XF could do. I found some nice gif examples [here](https://github.com/Solido/awesome-flutter). When I look at those examples, I tend to note two things about each: * XF can do this, with effort. You have to budget time for UI and many enterprise managers don't value it. * You can't find popular apps in the wild that busy their screen with this much animation. That's really what it comes down to. I think a lot of devs assume for a consumer app to work, you *have* to make everything pop and write an application that could be a demo for the Material Design book. But if you look at the Gmail app itself, it's not really using a lot of those features. And if you switch over to a restaurant list in Yelp, you'll note it's designed a lot like GMail. Comparing Facebook and Instagram you'll find other similarities to those two. I use 10 or 15 apps daily and I think I see fewer animations across them all than are in the typical "How to build a modern app with {framework}" blog. So I raise the question, "Do modern apps *really* need that much UI polish?" If you agree the answer is no, then the others don't represent a lot of value for a manager who has a C# team and wants to publish a mobile application. That's the target audience for Xamarin. Keep in mind, reading the other responses, someone has to be full of shit in order to take a shit on something.
If what you're asking is a graphical library for drawing, give Monogame a try. It's a very barebones library, perfect for you to implement your whole engine as you want without many restrictions.
wtf.........
There is absolute no reason to make fields protected. It's always better to use properties or accesors (getter/setter in some other langauges) to control the behavior. It also allows you to make properties virtual, so you can override them to change the input/output.
I’ve built a mobile LMS to accompany a more full featured CRM (web), I’ve built test drive applications that track your route and store pre/post photos, car appraisal applications, calendaring and customer management, vehicle and staff loans apps all using Xamarin. Getting it up and running a few years ago was a bit painful but sticking to some golden rules like always being at least a month behind Xamarins last update is a good idea. Usually problems I most run into is the iOS / Drioid platforms changing and breaking things. Personally I’ve found XF to be a reasonable cross platform toolset where I didn’t need to learn 2 more languages. Being able to compile it using MS app center rather than the janky ‘compile it on an apple machine and use the app loader’ has made life much more pleasurable.
Really hard to answer. From own experience, try to write some small console / GUI applications for your everyday life, some simple note taking application, an app to schedule your day, some app for recipes etc. You can store the data as cleartext / xml / json / embedded database etc. You can begin small and improve. Other possibility would be to take some free classes at udemy / edx or similar education website.
I was also thinking about React, but it would be a little bit difficult to move from React to Blazor. Maybe i should just start with Razor and then move it over to Blazor.
I literally dont understand either
It has bot support and notifications I guess
there is a few options I think you could choose from , 3- assuming you are going to use dotnet core (not dotnet framework) you can switch your setup to run linux (ubuntu recommended) and run docker on it , then use your colleague email to get free licence for Rider (C# Ide runs on lunix) there will be some learning curve (a week or two) if you aren't already familiar with linux os , but you will appreciate it later , you can use vscode instead of rider as c# ide (haven't tested it) &amp;#x200B; 2- assuming you've got older windows version you may use your current key to upgrade for free to win10 , look here [https://www.youtube.com/watch?v=ARY3hgJrXbk&amp;t=236s](https://www.youtube.com/watch?v=ARY3hgJrXbk&amp;t=236s) haven't personaly tested it , but I trust Chris, 3- you can just run a vm inside your system and use it for docker &amp;#x200B; good luck
I don't get why using Rider isn't for you. I used VS for about 9 years (still do) and had to switch for a bit to use Rider, most of the shortcuts are the same, once I got used to the color scheme it was pretty much the same thing. It's just an IDE, shit, you could write C# in notepad if you want. As for VS for mac, that's a pile of dog shit.
This looks like it was written in Winforms. This is not really suitable for reddit. Instead, you should rewrite it in Electron framework for better cross platform support. People love Electron apps.
IMO the only time I wouldn't use MSSQL when working in .net is when you'll have to scale to a point where licensing costs can start to have an impact. The free version is 10G now. And even if you go over that, unless you're thinking you'll need like multiple licenses, I still just go the sql server route, unless there is no room in the budget for it.
What is the actual problem you're facing? You say you're not sure if it works: Why? You don't believe the PictureBox is disposed: Why? &amp;#x200B; Btw, why do you have that if-block in the constructor? pictureBox2 has no reason to be disposed right after being created.
WSL2 is VM based? So I'll still need Hyper-V to run it?
I work with Docker for windows every day. But if the solution is .NET Core (as almost every greenfield development should be nowadays) you can use without any problem Linux containers (as I do). It feels a little clunkier than in Linux, but works. Having said that, this will improve A LOT with WSL2.
Thanks for your insight! It’s more for hobbyist development right now and I have some application ideas but want to work on my mastery of C# right now. I do have ambitions to start my own development company and I’d look at mobile and web development as far as clients go.
Yes. But it will be supported on Windows Home.
I may not have the best answer here, but you could refresh your data after the add, by simply making the data request that gets the data for the property that fills the datagrid after you close the window. Problem is, the instance of the model on your datagrid, is not the same as your update/add pages, so it has no idea of what you are doing on the other screens. &amp;#x200B; What i've done is, place the GetData method in my view model for the grid into a event for the Page Load. My UI is built around this though, as whenever I close/save a Add/Update screen my datagrid page is loaded again, and the GetData method is ran again.
Using a picture box per pixel is way overkill for this. Just use one picture box to display the whole thing. Add a handler to the Paint event on the picture box and put your drawing code in there. You can draw to the PictureBox using GDI+ - the event argument's Graphics property is what you want. You can then call Refresh() on the PictureBox to re-draw at any time. So if you're doing an animation, yo could use (for example) a timer to increment a frame position counter and then call Refresh(). the Paint handler would then draw the current frame. [https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.paint?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.paint?view=netframework-4.8) &amp;#x200B; Also set DoubleBuffered to true on the picture box to reduce flicker: [https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.doublebuffered?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.doublebuffered?view=netframework-4.8)
That could work. I'm doing my first internship so i don't think anyone would make a problem if I integrate pageload in vm. To be honest, the vm seems like the kind of thing people could argue about for ages. I will try that for sure. You are the only answer i got today, so thank you
Make the PageLoad event in the code behind for the view. Then from the PageLoad event handler, call the method that gets your data in the viewmodel.
I work in IT/industrial automation and part of my job is integration of the factory equipment with our IT systems. It's a kind of a special field because most machinery isn't built with integration in mind when they do expose some form of interface it's usually proprietary. The controllers are a mixed bag of PLC's of different brands and PC's running Linux or Windows. What I do is I have a service stack based on InfluxDb/TICK and data collectors built in c# running in docker containers. On the machine side I use either Modbus gateways to read directly from controllers, or esp8266 with custom firmware to read analog 0-10V signals, or RS232 to tcp/ip converters. I don't know if this is similar to what you'll be doing but if you have any questions I'll try to answer them.
Alright, thanks again for the help
Its a mono repo yes but our nuget packages are published to our private repo. (We're in the process of breaking down the monolith)
&gt;Of course there is Docker for Windows, but only avaliable for 10. Of course there is Docker Toolbox... but hey, it seems a bit of a crazy gas factory using virtualized linux everywhere. Not very usefull. Docker isn't virtualization, it is containerization. Its also the de facto standard for deploying web apps these days. You should move over to primarily linux based web development unless you want to end up one of 'those devs' who can not function outside of Visual Studio. IRL unless your entire stack is microsoft doing web development on windows is a waste of time. There will be too many toolchains that don't work properly or are a huge hassle to get set up. Even microsoft realizes this, hence the advent of WSL2.
And how do you want to use the same codebase in mobile app? Xamarin is xaml based, where Blazor is not. Sticking to React and React Native makes a ton more sense in your case.
&gt; Getting it up and running a few years ago was a bit painful but sticking to some golden rules like always being at least a month behind Xamarins last update is a good idea. Oh yes this. There are some situations where you *need* to update because iOS or Android SDKs are moving on, but you really don't want to be Xamarin's guinea pig.
&gt; I understand that the void had been filled by a few third-party libraries but I felt like something that basic should have been handled by the BCL years ago. But where do you draw the line? YAML gets used more and more as well, but the BCL does not provide anything for it.
&gt; It’s more for hobbyist development right now and I have some application ideas but want to work on my mastery of C# right now. This is a really good place to look at Xamarin I think. If you ultimately decide it seems too complex, you'll have learned enough about iOS/Android to be dangerous in other frameworks.
This is what WPF/XAML's `Observable` support is for
Use Linux and install virtual machine and work with windows there. Profit?? Just kidding, you can do this but look for other solutions posted by awesome Reddit members.
https://giphy.com/gifs/fire-dumpster-l0IynvPneUpb7SnBe ...just why... it's a WebControl inside a WinForms app...
As much as I love YAML, it’s not as ubiquitous. Nearly every modern REST API communicates in JSON. And that’s by modern I mean “developed in the last 5 years”.
I'm probably in a similar situation to you. I just Googled &amp; found these: [https://github.com/topics/beginner-project?l=c%23](https://github.com/topics/beginner-project?l=c%23)
I really like Blazor, but they still have work to do. At the moment, just a simple SPA is a 3mb download excluding pictures and such. Server side Blazor is pretty much ready to rock though. I wouldn't use it in production for a couple more months, but it will be ready very soon.
Hi, thanks for that. Effectively, that's what I was doing with the CreateSquare method...I re-draw the grid on the Paint event, but for some reason it wasn't showing up. I wondered if it was because it was the paint event of the usercontrol. I think I'm going to scrap what I have and start again.
That's what I was thinking too. I'm only 6 months out of school, and would eventually like to be a polygot with languages and frameworks, but I was thinking developing a deep understanding of programming in general with C# will be more beneficial (patterns, best practices, etc.) I appreciate you taking the time!
There is a Discord server, where you can join projects or take up challenges. i definetly recommend checking it out. Great community. Great Staff. [https://discord.gg/tMZVW4](https://discord.gg/tMZVW4) I hope this is allowed.
He was so preoccupied with whether or not he could, he didn't stop to think if he should.
Pick things you want to do. That's the best kind of new project. Be wary of picking super-complicated things, make sure to pick projects in-line with your experience. I tend to talk in terms of mobile apps these days but some concepts also apply to desktop apps and web apps. I like to rate the complexity of an idea based on what it needs. My favorite way to learn things is to write an app over and over until it's boring, then add more features, then repeat. Here's an example of how I do that. So like, a "beginner" project might just be "make a hard-coded list of restaurants and copy the Yelp UI". That'll teach you a lot about how to work with the list-focused UI elements in your framework of choice. But hard-coded data isn't *useful*. So after I feel pretty comfy with making the UI work with hard-coded data, I'll want to add a feature that lets me load a file with the data in it. It could be a custom text format, XML, JSON, YAML, whatever. But editing a file is really more useful, it'd be nice to change the data. Writing an editor is similar to a viewer, but has different concepts. When the app can do the CRUD operations (create, remove, update, delete) on a local file, it's a lot more powerful. If I'm still hungry, I work on polish. What if the data comes from a web API? (In practice, it's hard to find free APIs to use.) What if I want to add polish like a "busy" indicator while loading things asynchronously? Can I add a searching and filtering UI? Can I let users save and load filters? Can I introduce a concept of users where it *automatically* saves and loads them? You can always think of new features to add! So for example 2, here's the app that I want to use to learn Swift/iOS programming: My house needs 3 filters in 2 different sizes for the air conditioning units. It's cheaper for me to buy them in 3-packs, but that means I have weird numbers of extra filters at all times. I can't ever remember which one I'm out of when at the store, so I end up buying too many. So the app, in my mind, goes a little something like this: * Version 1 is a single page with a number picker for each size. Every time I change filters, I update the quantities. When I'm shopping, I can check. * Version 2 schedules reminders to change the filters, and also reminds me in advance if I need to buy more. * Version 3 is generalized. It starts with no pickers. I can add a picker for an arbitrary filter size. Now it's useful for other peoples' houses. * Version 4 figures out how to save the information in the cloud, so all of a user's devices can be up to date. * Version 5 can interact with a web service in some way so if the user doesn't have the app, they can still check thier filter stock. See how a simple app concept can branch off into testing many skills? Each version's just a tiny change from the last. This is how your "playground" projects should be! You're especially likely to work on it if it solves some minor problem in your life nobody else is likely to write an app to solve.
bad bot
I appreciate your response. I do have ambitions to start my own software engineering company using MS tech. I enjoy working with the tools MS provides and like the versatility of C#. Have any advice for beginning to pick up clients for web and app development? Books? That'd be awesome.
I totally get your viewpoint with respect to your factors (size of reddit community, github stars, etc.) I will counter that saying Flutter is 'best' could be argued to be ignorant. I think we pick the pains we want to deal with and the pros when it comes to development. With the full Native approach, you deal with needing to know both languages and that can be time consuming, cause you to write low quality code due to lack of expertise, etc. With Cross platform, you have to deal with all the quirks of the framework. Also, if you have more mastery in a language (I work with C#, .NET Core, and frontend languages everyday at work!), you lean towards using a framework that utilizes that language because that is one less thing you have to worry about, because we all now with X-platform tools, there will be build errors, app size issues, and other nuances! I will definitely give Flutter a look.
Reminds me when I wrot a similar program once for a website I sued to frequent, which wasn't really maintained by the administrator and had a decent userbase (\~1500). People would constantly refresh. So I build a winforms app similar to this one which had the purpose of just notifying you when there was a new post/reply/dm. Kinda like push notifications are now. It was absolute garbage yet still a few hundered users downloaded and used it because it did what it was advertised doing. While I wouldn't do anything like that this way ever again - I really learned a lot in the process about .NET, JavaScript, HTML, Browser-Events and HTTP-Requests. Even Windows COM. So yeah - building something like this can help you learn quite a bit even though it's completely useless.
It's a preview. That means its API might not be final, there might be major blocking issues, and they want to be free to prioritize things how they feel rather than based on if a customer has a business need. So they aren't blessing it for production, and if it fails in a way that hurts your business they're going to tell you "we warned you" instead of "we support you". So you shouldn't bet on it yet for mission-critical projects.
My first 2 clients I found on Craigslist, they were people looking for help to build an idea. Both turned into a fair amount of work over years, which was great. After that it was people I worked with back when I was an employee somewhere who respected my work; if you have a chance to spend a year or 2 working at a company with a fair number of employees (not a 4 man shop) those connections will be invaluable. I’ve not had to look for clients since those first two as a result of the connections I made over the years. As for reading, get good at communicating and project management, those skills are a lot more challenging (to techies) than learning a language or stack. Keep your tech skills sharp and try to always produce code you would not be ashamed of a more senior person reading. This doesn’t mean it’s perfect, nobody but Jon Skeet writes perfect code, it just means that it’s clear, as easy to follow as possible, and follows good design. Read SOLID code until it’s second nature. Also. Don’t take criticism of your code personally ESPECIALLY when you are a consultant. Your role is to produce something and be expendable when it’s done (or the project fails for other reasons) so you cannot take criticism personally. Best of luck, and have fun!
I've worked with .Net also since 1.0 and use xamarin every day but I don't limit my solutions based on the language. For me learning a new language is trivial and I prefer a more sound and well designed framework and polished tooling which flutter offers IMHO ( as well as folks like Xamarin MVP Adam Pedley who has also moved to flutter). Kotlin is an awesome language but the android framework sucks. The new jetpack compose framework is attempting to make up for that. All I'm saying is don't be scared to venture away from C#. Using a different language makes your brain try new patterns and you learn a lot. Good luck!
&gt; LINQ's Count() method shows how an optional interface can be used to override an extension method. It's a workaround. Fundamental disadvantages: 1. Harder to discover for implementers. If I'm implementing a custom `IEnumerable&lt;out T&gt;`, for example, then it's not easy for me to discover that `.Count()` will work better for me if I also implement `ICollection&lt;T&gt;`. 1. Harder to discover for users. If I don't happen to have the right set of `using` statements, then `someEnumerable.Count()` won't work. I just have to know to add `using System.Linq;`, or rely on my tooling to know to do this. 1. Either creates extra interfaces to maintain, or risks forcing implementers to have to implement too many unneeded members to get at "the one" that they actually wanted to optimize. 1. It's **practically** guaranteed to be slightly less efficient, though it's close enough that nobody would notice the difference (probably the most significant difference is how it affects inlining). Every `IEnumerable&lt;out T&gt;` is something that can be counted, so pretending like I were implementing the ability to run `someEnumerable.Count()` anew in C# 7.x today, it smells a lot that my only options would be: 1. Force all `IEnumerable&lt;out T&gt;` implementations (internal and external) to implement this method, with probably 99% of them doing it exactly the same, 1. Add an extension method that necessarily allocates an enumerator and calls `MoveNext()` however many times, or 1. Add an extension method that does the same, but tries some new `ICountable` interface* first. - *`IReadOnlyCollection&lt;out T&gt;` might make sense instead of a new interface, but even though it looks the same on the surface, I'd probably still do a new interface, since I interpret `IReadOnlyCollection&lt;out T&gt;` as something more than "an `IEnumerable&lt;out T&gt;` that can figure out its own count faster than a `foreach` loop". - To give just one example that explains the difference, while the result of a `.SelectMany` is not considered to be a "collection", it still [implements `.Count()` as the sum of all its sub-sequences' `.Count()` values](https://github.com/dotnet/corefx/blob/c7178a34416ceb17240b9b3312a5740616555527/src/System.Linq/src/System/Linq/SelectMany.SpeedOpt.cs#L13-L31) instead of having to increment a counter for each element of each sub-sequence. It's a great workaround, and LINQ-to-Objects has used it to build something awesome (admittedly with a non-trivial degree of complexity), but IMO it would be **much** cleaner if the language were to allow me to put all of the members that are logically a "part of" some interface directly onto that interface itself instead of weighing implementation trade-offs against one another.
Looking for someone who can realize a really small and easy project. Will pay 50€ via PP, need it by next Saturday. Can’t do it myself, as I’m suffering from a depressive down rn... More details via pm. Estimated time needed for someone who isn’t new to c#: max 2-3 hours I think.
Did the xamrin dev team get butthurt about this post and downvote everone in here? lol
&gt; Adam Pedley who has moved to Flutter Adam Pedley is still making apps using Xamarin. Source: https://twitter.com/adpedley/status/1118834616113061889?s=21
&gt; Every IEnumerable&lt;out T&gt; is something that can be counted No it's not. 1. A lot of people write generators using IEnumerable that produce an infinite series. 2. Some objects can only be enumerated once. For example, if you call `ToEnumerable()` on an `IObservable` object.
How many GitHub stars equal a paying job as a Flutter dev? But in all seriousness, Flutter is still experiencing a lot of growing pains and it’s too new to be used for creating real (not demo) apps. There isn’t a market today for Flutter developers or Flutter consultants. There is, however, a demand for Xamarin developers and Xamarin consultants.
Well, storing the data in a DB lends the opportunity to use different types of OUTPUT. Using Excel is one of them, Printing a report is another. Exporting to MatLab or some other software would be another. &amp;#x200B; I worked for Alcoa and we stored all our process data in a DB before we used different ways to display the output, whether it be a control screen or report.
Yea, take everything Adam says with a grain of salt. [Tim Sneath](https://Twitter.com/timsneath), the product manager for Flutter and Dart, is known to pay community influencers to advocate for certain technologies. When Tim worked at Microsoft, he would pay community influencers to write blog posts and tweet about the virtues of Visual Studio and .NET. I can’t confirm that this is the case with Adam, but I find it interesting that Adam is still being paid (i.e. his day job aka a software consultant) to make apps using Xamarin, yet he tweets and blogs about how great Flutter is.
I created [this tutorial](https://medium.com/@danielrjames/host-nuxt-js-net-core-and-postgres-with-docker-nginx-and-https-1681d9bd0bbf). I think it might help.
Haha I noticed that too.
Honestly, this will be a mess. Just use [FromSql](https://www.learnentityframeworkcore.com/raw-sql).
I always tell beginners to create a mortgage amortization calculator application.
If you read his blog he states that he had ongoing Xamarin projects that he needed to complete and support but that going forward his new projects will be in Flutter.
No... lazy developers and managers without a budget love electron apps. What kind of people like slower, non native apps?
Starting out with Visual C#, 4th Edition - this was the book we used in school. I really like the style of the Pearson books
&gt;Flutter is still experiencing a lot of growing pains and it’s too new to be used for creating real (not demo) apps. I have to disagree with this statement as there are plenty of large companies that have implemented large scale apps into production using Flutter. Alibaba immediately comes to mind as they are the largest e-commerce retailer in China and have 50+ million downloads for their main app which is built using Flutter. Google also used Flutter for their AdWords mobile app and AdWords is responsible for roughly 75% of Google's total revenue. So yes large scale apps are being built using it. &gt;here isn’t a market today for Flutter developers or Flutter consultants. There is, however, a demand for Xamarin developers and Xamarin consultants True but Flutter 1.0 was just release in December 2018 so you can't expect the market to become flooded with jobs overnight. The numbers I provided in my original post point to the fact that it is strongly trending and that it is reasonable to invest time in learning the framework as its future looks very promising.
The thing I appreciate the most about Xamarin is that it offers 100% of the native iOS and Android APIs. This means that anything you can do in ObjC, Swift, Kotlin or Java, you can do in C# using Xamarin. I.e. iPhone, iPad, Apple Watch, tvOS, macOS, Android, Android Wear, etc., apps can all be created in C# using Xamarin without ever having to write any wrappers to ObjC/Java, and I'm not sure that React Native and Flutter offers the same ability. I think a lot of disdain for Xamarin comes with conflating that Xamarin.Forms **is** Xamarin, which it is not. Xamarin.Forms is a NuGet package that let's you create a write-once-run-anywhere UI, where as Xamarin is a one-to-one mapping of every iOS &amp; Android API. With Xamarin, you can create iOS and Android apps using the iOS Storyboard and the Android Designer, just like you would in Xcode or Android Studio (heck, I even use Xcode for my Xamarin.iOS Storyboards because Xamarin uses the same `.storyboard` file that Xcode uses, and Xcode's designer is better than the one that is built into Visual Studio). Xamarin.Forms doesn't use storyboards or designers. Its UI is written in XAML or C# and you sacrfice some of the power of the native UI toolkits for the ability to generate a cross-platform UI. I agree that Xamarin.Forms has limitations, but it's still a powerful tool and I've used it to publish apps to the iOS &amp; Android app stores.
Thank you! :)
No matter how bad your desire... never put anything preview or beta into production
No idea why you're getting downvoted dude, what you're talking about here isn't just truthful observation but totally legit career advice. Not choosing to diversify your development environment/practised languages is career suicide :(
I'm super interested in your use case here friend. The advice you're being given here about it being hard to containerise Windows is very sound, and there are some really excellent IDEs out there other than VS that you should really spend some time gaining some familiarity with. Unless youre writing specifically for Windows 10 desktop, I'd definitely choose a Linux distribution like Ubuntu or Arch - it'll stand you in good stead for whatever DevOps classes you take!
If the data is large and volume and frequency they will not be able to use a relational database system. I'm sure you are familiar with document databases, message queues, and other streaming capable technologies?
&gt;I can’t confirm that this is the case with Adam there's also the possibility that he gave his honest opinion and just enjoys working with Flutter...
Yes, Alibaba built their app with Flutter. But they were in constant communication with the Flutter team to receive bug fixes and work-arounds. In a few years, Flutter will be a viable option. But today, it’s not mature enough to be used in large scale applications.
If it's too much to use linq, put the whole thing in a view and/or function and call the view.
Industrial systems are linear/sequential in scope. Not difficult. The hard part is designing a system that can collect data from many devices and scale.
Easy to create, nightmare to maintain.
That's true, for now. It is going to stable release in September though. I am currently on a team who is building a mission critical app for our organization in Blazor with an anticipated release for Oct - Nov. Since it'll be supported by the time the project releases we are confident in using it. Of course we are aware of each preview release and update our codebase at each incremental preview to ensure we stay in compliance with the latest api changes and don't have to worry about a massive overhaul when it goes stable in September.
&gt;&gt; Every `IEnumerable&lt;out T&gt;` is something that can be counted &gt; &gt;No it's not. &gt; &gt;1. A lot of people write generators using IEnumerable that produce an infinite series. &gt; &gt;2. Some objects can only be enumerated once. For example, if you call `ToEnumerable()` on an `IObservable` object. Well... one possible response is "just because you **can** doesn't mean you **should**", but point taken, exposing anything on the interface that may loop over "the whole sequence" is definitely not consistent with "fall into the pit of success", whereas static methods do feel different enough. However, there are multiple other methods in LINQ-to-Objects that do not have these problems. `.Skip`: - for arrays, `.Skip(50)` is `new ArraySegment&lt;T&gt;(this, 50, Length - 50)` - for some other enumerable, `.Skip(50)` might mean straight-up returning empty, if the size is known in advance to be less than 50. - for some other enumerable, `.Skip(50)` might be done by seeking to a location within a stream. `.Distinct()` can be `return this;` if the enumerable is already known to contain unique elements, or perhaps it might use an instance of a bit vector struct instead of an instance of a hash set class to track already-yielded values if there are only so many legal values anyway. `.Select` and `.Where` have some special optimizations for certain sequence types that use the `struct` enumerator pattern, and while this may not be life-or-death, these are used so commonly that I'm certain it's worthwhile. And that's just LINQ-to-Objects...
Or a mixture of both
Even worse... IRL we don't hire C# devs any more. Its more efficient for us to hire a well rounded dev and have them learn C#.
I'm being downvoted too. I've spent the last 11 years in csharp though, lol. Ah well if people don't wanna listen!
:D
So are you on the flutter or alibaba teams? How are you arriving at these conclusions?
This is awesome to hear! Also, that is a sweet app, with a good amount of downloads! Congrats.
This is exactly what I don't want to see, every random helper method being tacked onto the interface making it more and more bloated. And for what? That potential performance benefit you claim only works if Skip happens before any other call such as Where or Select. (And that's assuming Skip isn't already smart enough to check to see if the object is an IList). If you are really worried about performance, use the class directly . When using the real type name, class methods take priority over extension methods.
That is one way, yes. I did touch on that in my comment though.
Here is a simple Step by step guide for Installing WSL2 on your Windows 10 pc and using it for developing Dockerized .NET Core Web application. [WSL2 for Dockerized .NET Core Development](https://link.medium.com/CbxF2G89AX) Hope this helps.
Make something useful for you. Doing to do lists is boring as hell. I'll give you an example from when I was studying entity framework. I'm starting a wine hobby, and I always forget the pairings. So I made a basic web app that suggests wines according to a list of foods you enter. The wines, the available ingredients, the pairings, the current list of ingredients, and pretty much everything was model with entity framework. Another example from when I studied node js. Me and my friends would always argue about how to split out spendings when we went out together. So I made a bill splitter. **TLDR: ** Make something fun that you would use.
I wouldnt, that is likely going to be faster run as a sproc. Just feed the sproc results to your entity and use LINQ after the fact. LINQ pre-compile is good but its not usually as fast for complex queries with functions in them.
&gt; This is exactly what I don't want to see, every random helper method being tacked onto the interface making it more and more bloated. &gt; &gt; And for what? For me, the benefit is being able to deliver abstractions in the form of interfaces where they make sense, instead of resorting to abstract classes just because interface definitions are effectively "locked" as soon as I deliver them. If you need an example of something that's not just random helper methods, then OK, I can step out of the LINQ-to-Objects world... consider that I have this interface today: public interface IThingDoer { void DoThing(int val); } Suppose that it's come to my attention that lots of `IThingDoer` implementations use blocking synchronous I/O behind-the-scenes, and it would be really nice to be able to use this in async methods. I would love to be able to do this: public interface IThingDoer { void DoThing(int val); ValueTask DoThingAsync(int val, CancellationToken cancellationToken = default); } But that breaks people. With default interface implementations, I can do it like this (please forgive any syntactical mistakes): public interface IThingDoer { void DoThing(int val); ValueTask DoThingAsync(int val, CancellationToken cancellationToken = default) { DoThing(val); return default; } } I can release this in a minor version update without breaking anyone, and implementations that want to use true async I/O are free to do that. It's still "just" a potential performance benefit, but I perceive there to be a massive difference between true async I/O and blocking a thread for every call. What I'm doing instead, and what I'll be doing for a while until this feature is available on all target frameworks that I care about, is basically (by default) avoiding creating new interfaces entirely where remotely possible, since it's just as much a breaking change for me to change an abstract class to an interface as it would be for me to add a member to the interface anyway.
Do you use any apps that don't quite have the feature set you want? That's how I learned, I wanted an image slide show with specific features that I couldn't find from a cursory search, things like keep the monitor from sleeping, and allow me to delete the currently displayed picture. So I made one and whenever I had free time, I would refine and optimize it, till it became pretty good imo. Then I made a front end for ffmpeg that was more in tune with what I need it to do. Next I'm thinking about making a basic music player, as I've tried a bunch but none of them are just right. These apps, like the image slide show, don't have any where near the feature set of things like XNView, but I don't use probably 90% of the features of XNview, so I just focus on what I use and want. Maybe you could do something similar.
Ansible and that whole stack/ .Net 5 backend with SQL, Redis, RabbitMQ / Angular frontend
My only advice is to read some books on the matter to start to develop a way of thinking while also to gain knowledge plus using the authors philosophy as a reference or to add it to your experience. Books helps the brain to mature.
&gt; I can release this in a minor version update without breaking anyone, and implementations that want to use true async I/O are free to do that. Please don't. That's the kind of crap that Oracle pulled with their MySQL drivers for NET Core. It was bloody difficult to figure out why my 'async' calls were not actually async. I'm sure there are examples that I would agree with, but everyone I've seen so far is a hard no. And that's what concerns me so much.
You are already in the right spot. You bind to the ObservableCollection&lt;Model&gt; and then you make changes to it in your ViewModel. You can wire to your VM using events but this breaks MVVM so I would use commands, add them to your VM or a common class and bind to them in your controls. The commands will call methods in your VM directly so you can keep your view simple and dedicated to UI concerns primarily. [This should help some](https://intellitect.com/getting-started-model-view-viewmodel-mvvm-pattern-using-windows-presentation-framework-wpf/) it covers both event model and command model messaging. Yes you can use either/or interchangeably though I suggest picking and sticking with one unless a control you are using forces your choice.
I'll be the only developer by studies there the rest of the office is all engineers so I'm sure they can help me with that part.
Check "NDC Conferences" channel on YouTube. Basically, is a channel with conferences around .Net topics.
I think you're missing the point here... I've been coding for about 11 years now and coding never became easy. I know I can build solutions way faster now, but there is just so much knowledge in this field that most new projects will give you a hard time. With that said, the thing I most enjoy about coding is that every project is a bit of a challenge, everything needs creativity and focus to build, most problems have already been solved but there is always something different about the context of your problem that needs some tweaking. I really believe that programmers need to enjoy the process and not the final product to improve. But, don't feel bad about how you feel about your coding skills, nobody knows how to code a new project before it is done. Developers that claim they know everything, or most things, are probably full of shit.
Practice practice practice.
https://docs.microsoft.com/en-us/dotnet/standard/microservices-architecture/ https://github.com/dotnet-architecture/eShopOnContainers
I can't make that decision for you. I'm pointing out the risks.
You get better by continuing doing what you love. &amp;#x200B; I completely agree with you, we pretty much get better at google stuff better haha Understanding bugs faster and those kinds of things, but the thing is, you'll never reach a point where you'll instantly know how to code stuff and they just work. I mean, it might happen, but you'll never get rid of bugs and not knowing how to handle stuff. You'll get better at it, but never enough for your code to be absolutely perfect. &amp;#x200B; The thing is, as you describe it I can't know if you really don't like coding at all, or you're just having a bad time. We all go through that process, just try and make your best out of it. &amp;#x200B; This is probably not the answer you were looking for (or the one I was looking for when I went through this haha) but it is true
I refactor microservices into monoliths.
* VueJs/Nuxt fromtend * .net core API backend * Postgres Db * Azure Blob Storage for images * AWS SES for email * Nginx Reverse Proxy * Docker on Linux Ubuntu VPS
I have tried so much but i have no idea where to start or what to do, mini projects are not interesting at all, besides i would love to master logical and break down skills
&gt; i have no idea where to start or what to do, mini projects are not interesting at all They don't have to be interesting. &gt; i would love to master logical and break down skills This mainly comes with practice. It's hardly a skill you can train on its own.
I’m having a bad team, since the beginning of this year all of my projects failed, crashes , bugs etc.. this makes me feel bad and demotivated to start any new project..
I see.. thank you for your help! Much appreciated
But why did they failed? Why couldn't you fix the bugs? I'm the lead programmer on a game my team and I are working on, and this month was all about getting bugs fixed. There are still tons of bugs, but I keep fixing them and even tho I hate doing that, the game is getting way better as I go through all the problems it has
but if it is a mono repo everything is already relative to each correct? This means you can just use project references and not reference published versions. Your projects will have the most recent version automatically.
I word in the event industry and I’m the mid programmer, i always work on different projects with creative and extremely weird concepts. I’m always working on new and different hardware that i never worked on. And this makes bugs and crashes since u never know what the hell Is this yet. Even after my project was smooth on my system, i had issues on site and app crashes. And this all comes back to me since I’m the programmer... funny thing senior programmer doesn’t have such issues so it only me. Makes me really down
Sorry, there are pieces of the mono that we moved out to their own repos and now use the nuget version from our private repo. So some mono projects have these references out of sync across different solutions.
I personally don't see an issue with it. You need 3 States and that's what you get. Enums come with there own problems. Mainly that you can pass any value as enum.
I don't really get what you mean by that. Why would that be a reason to use them?
That's awesome! But I get why it can be so hard, without proper documentation there's no way you can get things to work easily. If the other guy doesn't have those issues, ask him for help, maybe he has a different setup or more information about the API or whatever you guys are working on. It will pass, try to get distracted doing something that you enjoy and then face those problems and do your best to fix them. You will be able to, it just gets hard sometimes
He doesn’t know! I’m serious! I go through all tje issues and tell him what went wrong, when he developes he almost faces nothing it’s funny. And i when i do all shit goes down. Other problem i have no idea what I enjoy ( it makes me frustrated i tried web, games, apps and all of them are like mehh.. so I’m extremely tired from This but I cannot leave programming.. cause well it’s my job lol
Thank you so much, this helps a lot. Was looking for a way not to break mvvm. Thanks a lot
&gt; OpenXML It also has dom vs sax approaches and for lots of data, you must use the sax approach.
He's obviously doing something different or has different setup even if he's not aware, you could check that. You should focus in one single thing that you like, and see where you get that the most. For example I like achieving difficult stuff and then seeing it work, that's why I love programming, it's often hard stuff and in games in particular you get a very visual response about how your code is working properly. I have a team member that loves programming, but also likes how great things look artistically, even tho he doesn't like modeling/animating/painting. So he makes the illumination and shaders of our games (the thing that tell the computer how the water looks, how special materials look, etc.)
I am a game programmer as main) my my job throwed em away to some weird stuff )) he’s not doing anything special i think it’s just experience.. although i do my best and do crazy testing things just fail) I’m even called mr.buggy at the office). Even 2 days ago my manager was speaking to one of our designers. She was telling him how we must implement queue email system in every app, she told him To ask me. And he replied he won’t know how. It really broke me
If it's made complete sense to everyone for 60 years, and you're the only one that has ever had a problem with it, how you're thinking is probably ripe for reassessment.
As someone who wrote a wpf application that literally does all of those things (probably with more precision because finance) it really isn't all that complicated. Just be sure to do your research several steps ahead and with any luck you'll avoid a code mess. Don't be afraid to spend a lot of time refactoring, it will be worth it in the end.
What are your interests? Can you think of some small programming projects you could take on related to that? For example, I'm into music. I'm currently working on a MIDI piano chord trainer in C# and I have two or three other music-related projects that I'd like to try eventually.
Yep. My team inherited a legacy .NET application (or, rather, series of microservices that together formed an application) and were tasked with adding some fundamental new features. The changes required were so extensive that it essentially required a full rewrite. So, in addition to switching over to .NET Core, we moved from deploying standard IIS / Windows services on a Server 2K8 installation, to building Docker images and deploying on Linux. All of the development is still performed on Windows (and you can absolutely run/debug each service locally if required), but our Test/UAT/Prod environments are all *nix. We've had a few bumps in the road along the way and there are still teething issues we are discovering now, but overall it's been a pretty positive experience. The next step is moving from a small Docker/Swarm setup to a K8S infrastructure, which we are getting closer to.
Until you need four states. Then you're using two booleans and discarding a state on one of them and doing all sorts of crazy boolean logic. And if you need to support back into the tribool you can use model binding at the top level to avoid having clients coordinate our method overloads if it's a shared library. I personally prefer using enums instead of booleans because I've seen this progression too many times to not be wary of it happening yet again. And as long as you're not casting ints into enum you're okay. And generally I find it makes code better anyways. That's just my personal preference. I try to influence my coworkers that direction as well but it's not an immediate "reject this pr, burn the developer's machine and salt the earth" response I've seen from some with this mindset.
Rob Eisenberg, build your own mvvm framework. Worth watching just for the concepts and ideas.
That sucks. At my former work I always felt like I never knew enough. That was mainly because I'm a game dev and it was a normal office company where we worked with java servers and really different things and obviously I wouldn't research better ways to code in java because I wasn't interested in it, I researched better game dev techniques instead. And so I obviously didn't perform as great as them, but I still did my best, and now I'm working towards getting my own game studio. The thing is, even if you're not the best at your office and you find lots of bugs and your keyboard doesn't spark neon lights you're not failing, every bug you find makes you better at what you do, because next time you find that bug or a similar one it will be easier to fix it, and the same with every other bug, you'll get better with experience. If having bugs is failing every developer ever is always failing like a million times per day haha so don't worry, you're not failing.
Web API is essentially just a web site that accepts and returns data (typically JSON) rather than HTML. So it gets deployed and runs just like any other web site.
True, I have bachelors of games dev . But I also feel I don’t belong there. The annoying thing is that I don’t know what I like so I’m not becoming good at anything
Requests to your Web API are typically done with Ajax calls javascript or using System.Net.WebClient.
 Requests to your Web API are typically done with Ajax calls javascript or using System.Net.WebClient.
Just follow the eShopOnContainers example, best advice so far
Why not looking a job in the game industry? There are lots of different areas there, you could get to know different stuff and maybe find what you really like while working on what you've actually majored in
Seems like a couple of things going on here, first your not enjoying the work because it's not easy, and the environment you're working in isn't helping. They don't seem to support you and even go for name calling. Maybe a change of location might help. I've gone through a long challenge recently but coming to the end of the project. A lot of it I felt deflated as goal posts changed and bugs, but I feel like I've always had support even when I thought I didn't. If you enjoyed programming, but not feeling this have you thought about a different language to hone your abilities?
Your thread isn't doing anything other than attaching an event handler, then immediately disposing the `ThirdPartyLibrary`, and then exiting. Not sure have you are supposed to be using it without knowing more about `ThirdPartyLibrary`.
Lol it's like the old thin client, thick client trend that flip flops every few years in the IT industry.
Alrighty, so you have a few options here. Use from SQL and do the raw SQL (does make sense in some cases) Put into a view or SP (I wouldn't recommend that) Turn it into multiple simpler statements and use c# to filter the data. Depending on how much data this is, options 1 or 3 may make more sense. If you can paste the full sql I can help you navigate how to do either way
Calling you Mr. Buggy is BS. But if you have that many bugs can it be a testing issue? Are you fully testing your changes to make sure they work. Writing code that is “bad” but works is one thing and can take time to improve. But bugs can be addressed quicker. Might be better to be known as the one who writes working code that might not be very manageable or the guy who takes a long time but delivers good code rather than the bug guy. I doubt the guy you were talking about just write correct code off the bat. Probably fixes a lot of bugs before submitting.
https://docs.microsoft.com/en-us/dotnet/csharp/
Are you looking for devs haha? Sounds great.
I completely agree. I mean in the case of true false or unknown it's perfect.
I truly do a lot of testing but to be honest everything works on my system super smooth... but once i install on the event pc shits go down.. i have no idea how to solve this.. and yes it is a joke roaming around the office that my apps are always buggy, doesn’t matter how hard i work or how much i take my time testing and building it always goes bad
It’s not simple for me to change work or environment, my life is extremely complicated. I can’t talk about it cause well lol it’s long story but keeping it short, I’m from syria, and currently my country is in war for the past 8 years. This makes everything difficult. Obviously I don’t live there but where i live now doesn’t give me much options especially that I’m sill junior-mid lvl
The game industry here is dead, game companies in where i live only focuses on the marketing side and not actual dev. And to b honest i forgot the practice in the game dev world since I haven’t practiced it for a while now. I’m just lost and I don’t know how to evolve in the dev world anymore. Therefore this thread, I’m trying to understand and know what i can do to help myself become better
Wow. Thanks alot
Thank you very much
DUDE,this looks awesome,wjhat the purpose of the program?
made with blazor?
I needed a way to backup data with certain formatting and what not. I decided to write it myself.
No this is vanilla C# and XAML. The WPF. [https://github.com/ChrisStayte/Bachup](https://github.com/ChrisStayte/Bachup)
Impressive shit!
You can always get on track, maybe develop a small game in whatever engine you were used to. Or you could just look for another job where you feel better, I know it's always hard but you don't have to quit right now just look for something and if you get the job, then quit. You could also move to somewhere else if that's an option for you, there are many companies that will offer you a job. There are many solutions for your problem, you just have to start trying some of them and figure it out from there.
I’m doing my best, i apply for several jobs online in different countries.. trying to land on anything .. but to be honest I’m just not satisfied with my programming knowledge. I need a platform were i can practice and become good. So far watching tutorial makes me bored, making mini projects also makes me bored. I tried app dev, game, full stack etc.. nothing is entertaining. I just want to become better at wht i do and I don’t know how....
I just want to try new things ;)
does it play bach while you run it?
Is that legal? If so then I will implement it!!!
Looks great! What UI libraries?
I couldn't find a stack I loved at work, so I created my own startup/SAAS/hopefully it'll be a real company.
I am using material UI
Wow thanks so much 😲
I suspect Bach is public domain by now, though individual performances may not be
Define "I re-draw the grid". I think you misunderstand how things get painted in WinForms. I did this for a long time and it feels like I've seen every possible way to mess it up. Generally you tie a control that's going to draw things to some data, and you expose that data as a property. When the property values change, you call `Invalidate()` on the control. That politely tells Windows, "Hey, I need this to be redrawn when you're not busy." You might've seen or tried `Refresh()`. That's a less polite, "REDRAW IT RIGHT NOW, I'M NOT DOING ANYTHING ELSE UNTIL YOU FINISH." Generally you shouldn't call `Refresh()`. Either way, both of those are what causes a `Paint` event to be raised. I don't have time to make a "real" example, and it's been years since I did a project like this, but I think the skeleton for your control would look something like this. For simplicity, it's a one-row display. public class MyGrid : Control { // Seriously, read the notes below! private int[] _values public int[] Values { get { return _values; } set { _values = value; Invalidate(); } } protected void OnPaint(...) { // Use this to actually draw! var g = e.Graphics; var cellWidth = Width / Values.Length; for (int i = 0; i &lt; Values.Length; i++) { var x = cellWidth * i; var y = 0; var width = cellWidth; var height = height; var color = // convert Values[i] into a color/brush g.FillRectangle(x, y, width, height, colorBrush); } } } This lacks a lot of sophistication but shows the basic process. Here's the promised notes and everything that's wrong with it: There's not an easy way to know if the user updated just one value in the array. So you have to rely on the user updating the entire array at once. For what you really want, I'd probably not rely on properties and instead have a `SetSquare(x, y)` method that updates an internal array THEN calls `Invalidate()`. For a property-based approach to work, you need a type that abstracts a 2D array *and* notifies this control when it changes. Brushes are disposable objects and you're limited to how many you can use. It takes time to make one. If you're limiting users to a color palette it's much faster to create an array of the ones you need at the start of Paint, then dispose the brushes you created at the end. Or, if the colors or simple, you can use the `Brushes` class to get system brushes you don't need to dispose for the appropriate colors. It's more common to keep a `Bitmap` buffer as a field, draw to it, then draw the buffer to the screen. That helps minimize flicker. That complicated things so I didn't do it. (Those are all the notes I can think of. Poke at it. I'll have more time later in the week and might be able to help more!)
Looks amazing dude, very good work!!! I am afraid to post my own work at the moment :o you are giving me strength
Hi afraid to post my own work at the moment :o you are giving me strength, I'm dad.
Nice, good luck :)
I will look into this. Thanks :)
**.Net Core 2.1 LTS Web API** 4-tier architecture * UI * [Swashbuckle](https://github.com/domaindrivendev/Swashbuckle) for dynamically generated swagger front-end * Hands requests off to business layer * Appends header and http status code information based off of business response * Data * Interfaces * Domain Models - very few, as I use my microservices as a HTTP based [ESB](https://en.wikipedia.org/wiki/Enterprise_service_bus) * Business * This is my services layer, all business logic goes here. * Infrastructure * EFCore for DB integrations * RestSharp for HTTP/S integrations &amp;#x200B; Data layer is accessible to all layers as it contains my interfaces and I use the native MS dependency injection heavily. from there the layers are go UI &gt; Business &gt; Infrastructure. My infrastructure was *inspired* by the Onion architecture.
I agree. Microsoft provides docs on literally everything and that are usually pretty in depth and show you what you need.
That's a neat idea.
A video was just released by Tim Corey that shows how to use SQL Server, C# and Docker. Now, I've only watched the first minute of it, but it seems like it would give you some pragmatic exposure to using Docker and C#. [https://www.youtube.com/watch?v=Yj69cWEG\_Yo](https://www.youtube.com/watch?v=Yj69cWEG_Yo)
Hey thanks, Ive put the whole thing on pastebin here: https://pastebin.com/inzU78vH And here is a what I've got so far with the joins: public Task&lt;IEnumerable&lt;Foo&gt;&gt; GetFimView(IEnumerable&lt;Bar&gt; cards) { var idCards = cards.Select(m =&gt; m.Id); var firstJoin = _dbContext.tper_reference.Where(p =&gt; idCards.Contains(p.reference_no)) .Join(_dbContext.PersonUoa, tper =&gt; tper.person_id, poa =&gt; poa.PersonId, (tper, poa) =&gt; new { tper, poa }) .Join(_dbContext.tperson, tp =&gt; tp.tper.person_id, tperson =&gt; tperson.person_id, (tper, tperson) =&gt; new { tper, tperson }); var thirdJoin = firstJoin.Join(_dbContext.tdesc.Where(desc =&gt; desc.entity_nm == "TCODE" &amp;&amp; desc.language_id == "USA"), tper =&gt; tper.tperson.title, desc =&gt; desc.keyitem, (t, d) =&gt; new { t, d }); var fourthJoin = thirdJoin.Join(_dbContext.tleaver, tper =&gt; tper.t.tperson.person_id, tleave =&gt; tleave.person_id, (tper, tleave) =&gt; new { tper, tleave }); var fifthJoin = fourthJoin.Join(_dbContext.tusr_def_rep_psn, tper =&gt; tper.tper.t.tperson.person_id, tusr =&gt; tusr.party_id, (tper, tusr) =&gt; new { tper, tusr }); } idcard is a passed in at the top, its just a data structure else where.
If its not public domain, it's not worth listening to.
Nice, I just was looking at a couple of hours of someone guiding me through WPF and XAML yesterday. I also only use vanilla C#. I was not sure of the capabilities of it and what the dude was making in the introductory videos looked really basic. So I'm glad to see what is possible with it. I want to keep things as plain as possible but achieve results like this.
- WEB = vue.js / litelement, hosted on our internal cloud with docker &amp; k8s - API = dotnetcore on docker on linux, hosted in AWS EKS - Database = MySQL, hosted in AWS Aurora (serverless) Logging = ElasticSearch / Kibana on AWS EKS Everything is terraformed in gitlab-ci
Service Fabric
Hey, are the native .DLLs necessary?
I've been working on a virtual assistant, I'm interested in all the new iot devices (alexa, Google home etc) and I wanted to make my own, open source version.
 [Microsoft.WindowsAPICodePack.Shell.dll](https://github.com/ChrisStayte/Bachup/blob/master/Bachup/DLL/Microsoft.WindowsAPICodePack.Shell.dll) Only this one so far. It is required for browsing folders in a nice way.
I actually have a youtube channel where I show people how to code. I've only done websites and python stuff so far. If you want I will create a series for this kind of stuff. Didn't know if people would be interested :)
https://docs.microsoft.com/en-us/dotnet/api/system.random?view=netframework-4.8#avoiding-multiple-instantiations
Really awesome!
Thanks! That was exactly the issue. I changed it to use once instance of random and now it's working as I intended.
Sure, [take a look](https://incompetech.com/music/royalty-free/?keywords=bach).
I'd recommend Pro C# 7 however it does not have any exercises in it. Still a really good book though.
I'm up to my ears in material that I am already going through and I have to do a lot of work at comprehending basic stuff, so I can't commit to taking anything else on. I have to have a laser focus and nail down the basics here, I'm very ADHDish. I just find that browsing this place and reading the answers to beginner questions is at times helpful. I can tell you what I am studying now. This was the WPF XAML video I watched: https://www.youtube.com/watch?v=gSfMNjWNoX0 (I'm not super serious about learning it, just wanted to dip my toes and see what it was like). This is what I'm super obsessed with / studying and doing the exercises for: https://www.udemy.com/csharp-basics-for-beginners-learn-csharp-fundamentals-by-coding/ I did study Python in the past, started with CodeCombat, then progressed to Automate the Boring Stuff with Python. Ended up making GUI's in Python and card games, stuff like that.
Thank you :)
https://docs.microsoft.com/en-us/dotnet/api/system.datetime?view=netframework-4.8#properties
MVC/React, NET CORE, SQL, Jenkins, Kubernetes, Docker, RabbitMQ
nice,it looks realy good
Thanks so much! :)
Won't disagree with you there. It can be very unwieldy
You could get them through nuget: https://www.nuget.org/packages/Microsoft.WindowsAPICodePack.Shell/ That way, you don't need to include them in the repository.
I will do that first thing tomorrow. Thank you
I'll have to save this and give it a proper looking-at later. I will say, however, that you got some good lookin' stuff, here!
Thanks
A fair few people have said they see exactly where I'm coming from. 'continue' is a stupid choice of word and describes the exact opposite of what it does and I don't doubt for a second that mountains of people are just fine with that.
Nicely done!
What is material UI? Can you elaborate a bit more on how you build the UI? You used xaml and material UI is some sort of library you imported that you can use in the xaml?
Don’t. Blazor looks really cool, and is, but it isn’t production ready, and it isn’t a step up from an API/SPA combo. It’s just an alternative. If you need a service now, using Blazor is going to be risky, and only you know your customer numbers. Things will break before it gets a stable release. Is done down time acceptable? Up to you.
Yeah, I used this right here. https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit You can get it via NuGet. I will create a youtube video to explain this process out better :)
I will, thank you so much :)
That would be amazing! Thank you
I would be careful looking over your guide I see a number of issues with the template you used. The biggest one being the use of bower. I would not recommend anyone making a web based front end use bower. Bower themselves don't recommend using bower - https://bower.io/ Additionally the template seems to be mixing and matching a whole bunch of libraries for different things. I would highly recommend using a framework to make an application like this. Be it Angular, Vue, React or something else. Whatever you do don't try to reinvent the wheel it will only cause you maintenance and scalability problems down the line. There are plenty of admin templates out there that are based on frameworks that you should be using instead of this template. Some people may say its just an example or a tutorial to show people what is possible but guides like this can confuse and lead new folks down very bad paths.
Thank you, that has what I needed.
I'm not sure how far back they go, but there's a couple of years worth of [Microsoft Build](https://www.microsoft.com/en-us/build) at channel9. The link above is to this year's MS Build conf.
I am not a 100% clear on your question. Did your supervisor provide you with an C# project that contains this WinForms application and you need to start hooking up the functionality, or do you need to create the above screen from scratch? &amp;#x200B; Would suggest you look into WPF, but that might be a step to far. If you inherited the WinForms application, I would probably start by giving the input fields names that make sense. Depending on the naming convention you want to use, underneath the Dispense field I would give the Bottles label a name like lblBottles and the text field a name like txtBottles.. However, naming is up to you. Repeat for all other controls. &amp;#x200B; Then, while in the editor, double click on the Dispense button and this should create an Event for you. This would be an Onclick event. Basically, what should happen when this button is pressed. In there you probably do something like (warning, pseudo code) `int bottles = int.Parse(txtBottles.Text);` `int quantity = int.Parse(txtQuantity.Text);` `var quantityType = int.Parse(ddQuantityType.SelectedItem.Value);` &amp;#x200B; `lblMass.Text = $("(bottles * (quantity * quantityType)) grams");`
It says that XAML islands will only work for Windows 10 version 1903 and above. Will this break backwards compatibility for older versions (including 8.1 and 7)?