So you should just be going from C# straight to MySql using the dot net connector http://dev.mysql.com/doc/connector-net/en/connector-net-programming.html . This will actaully be more secure because the complexity of the program will decrease making it less likely to introduce bugs, or points of attack. 
Yes the data will be sensitive, but how dose its it work using a "flat config file"?
OK so a basic flat file wouldn't be a good choice as it will be visible in the clear. But, you could run a small SQL script/stored procedure on the mysql db, use the AES_ENCRYPT() function to scramble your data, and send the output to a file. Then in your c# program, using a shared secret, read in the file and decrypt the contents. http://dev.mysql.com/doc/refman/5.5/en/encryption-functions.html You can also replace the file stage with OS pipes, so there are no intermediates left behind. Whether you connect using mysql connector, or from the command line, at some point you are going to have to login to mysql. Whichever way you cook it, you have to have some credentials stored at some point.
If you are in Iowa, PM me. I work at a large financial services company and we are always looking for developers. 
I looked at some code where I was using an old version of that library. I imagine it's about the same, but I can't say for sure. I use to get a kick out of writing bots for mmos just for the heck of it. Reading memory is very simple with that library though: IntPtr hProcess = Memory.OpenProcess(Memory.GetProcessIdByProcessName("Minesweeper.exe")); float someMine = Memory.ReadFloat(hProcess, (base_addr + offset));
none taken, though I'd still like to remove it ... I don't people to see my face. :p
Ah. With all that being said, I'm actually working on an aimbot. Wasn't sure how that'd be received in this subreddit, though. 
Look for established companies using older, established recruiting sites: Monster.com, Dice.com, etc. You'll probably end up in an IT department of a company who's main product is *not* software or on-line services. You'll be supporting the data management, automation and on-line needs of the money-making part of the enterprise.
Why would doing the DB query in PHP be any more secure than doing it in C#?
It's a fun project IMO. You learn a lot along the way as well. Looks like they've changed a good bit of the memory library, but in a good way. I'd start with the code project site to help get an understanding of what is required. Then look for examples of MemorySharp. Should be able to figure it out pretty easily from there. The hardest part is finding the offsets, that's the part I always had trouble with.
Came here to mention Prism as well which is absolutely fantastic if you're following an MVVM approach. The biggest problem I had when learning WPF is the fact that there's sooooo much bad code out there which is basically the result of WinForms people trying to make WPF work like WinForms in which case you're going to have a bad time. I love WPF and using the MVVM approach and I personally would never go back. I should also mention you can use MVVM when developing Web application as well using Knockout or AngularJS and would recommend that as well.
it's not common practice
Don't do it. The penalty shows they have high turnover.
Someone correct me if I'm wrong. Because the DB and php server is hosted on the same computer, so to get the db info would require someone to be on that computer and listen to the packages locally on that computer. While if I sent the query from C# the password would be stored on within the c# program, a "hacker" can then just listen to the traffic between there computer and my db, finding the password. 
An answer for your edit 2 question .. String.Replace returns a NEW string. In C# Strings are immutable, they cannot be changed once instantiated (unless you use some special String classes which work in place ... but those are for special applications/workloads) As such, you aren't storing or using the results of your Replace calls. ;-) Also, since Replace returns a string, you can chain the calls, and then store the last result. eg. foreach (string s in sliced) { string output = s.Replace("’", "'").Replace("“", "\"").Replace("”", "\""); // write output string somewhere } Another side point, foreach loops are generally readonly .. that is, whatever list/collection is being iterated over with the foreach loop should *not* be changed by the operation of the foreach loop. So, even though you're kinda trying to change/keep using s [string s in sliced] ... the sliced array shouldn't be getting changed. This thread explains it a little more :: http://stackoverflow.com/questions/4004755/why-is-foreach-loop-read-only-in-c-sharp If you're wanting to mutate your array (if say, you want to use it later), then use something other than a foreach loop .. just a regular for loop and indexing should work easily in this case. [I'm assuming sliced is an array, since String.slice returns an array. ;-) ] Also, like you're trying to do, I've found it helps to look at the data at each step, so don't forget to check inside the database too, and make sure it's getting the intended values as well.
OK so if you are just trying to protect your mysql conection string, you can easily do that in your app config. http://ftp.nchu.edu.tw/MySQL/tech-resources/articles/ebonat-connection-string-vb-net.html#_Toc159381182 You can then establish an encrypted connection to mysql. See option: Encrypt, UseSSL http://dev.mysql.com/doc/connector-net/en/connector-net-connection-options.html The fewer journeys the data makes, the fewer interception points there are. Keep PHP out of it if possible, you want a simple point-to-point encrypted connection, and encrypted credentials. Edit: i.e. I agree with /u/arloccat
So the real problem is, we need more info about where each of these parts of the architecture actually are. Sounds like the C# is a client program (windows program), which talks to a web server (written in PHP)? EDIT: When talking about C# .. you may need to be specific about location with stuff like this, since C# could be anywhere from a windows mobile app, to an ASP.Net web server/WebAPI. or something even more custom.
Yeah, I'll look in to this! Edit: Is the link just dead for me? http://ftp.nchu.edu.tw/MySQL/tech-resources/articles/ebonat-connection-string-vb-net.html#_Toc159381182
Ahh, sorry! I'm using .net visual c#
What'd you use to get offsets? I use cheatengine and yeah it can get tedious at times. 
But where are you using it? Where is this C# running, where is the PHP running? On the same computer? On different computers?
The C# will be ruining on multiply computers, and the PHP would be ruing on a co-located server.
You'll have to use some P/Invoke and stuff like [ReadProcessMemory](http://msdn.microsoft.com/en-us/library/ms680553%28v=VS.85%29.aspx). [But I would guess it's not really minesweeper you're trying to break, eh?](http://www.reddit.com/r/GlobalOffensive/comments/2j6391/is_vac_enabled_in_offline_games_with_bots/)
As long as you're not taking it online for more than curiosity and you're not selling it. But seeing as I had to point you to ReadProcMem I'm guessing you're still learning.
You are thinking along the right lines, but the implementation suggestion for using PHP is confusing the matter. I think what you need to do is create a WebService that exposes the data that you need access to, but hides the database specifics. The client C# application will authenticate with the WebService and request data. The WebService will retrieve the requested data and send it back to the requesting client (formatted as SOAP/JSON/XML/etc, your choice). This is a better way to shield your database from an untrusted client.
Yeah I'm not selling it or taking it online, this is just a learning experience. Just gonna kill bots with it. 
Would you mind if I sent you some questions regarding this in a PM?
Never, ever work for a company that blatantly dishonest. They will screw you over - no question about it. And I have never heard of that kind of penalty clause. That alone is enough reason to run. You will find another job. 
I know. I did warn in the article :-) same principles apply for other ui frameworks.
About your conclusion: &gt; Although this example used Winforms as that is the space I am in at the moment, it is just as relevant for WPF too. IMHO the WPF/SL `Dispatcher` object makes the `SynchronizationContext` obsolete, and its easier/less cumbersome to use.
SynchronizationContext works for WinForms and WPF. So SynchronizationContext makes your code more generic.
I can't think of any situation that requires "generic" solution for WPF and WinForms. In Lib code you must use await without ConfigureAwait.
Not at all, but I will probably just end up pointing you towards some online resources. Ask away!
[This Solution](http://stackoverflow.com/a/7541052) has how to read from another processes memory. It won't be fast but if you only want one value it should do the trick.
That chunk of code is too advanced for my knowledge. What should I read up on in order to understand all that? 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**UDP hole punching**](https://en.wikipedia.org/wiki/UDP%20hole%20punching): [](#sfw) --- &gt; &gt;__UDP hole punching__ is a commonly used technique employed in [network address translator](https://en.wikipedia.org/wiki/Network_address_translator) (NAT) applications for maintaining [User Datagram Protocol](https://en.wikipedia.org/wiki/User_Datagram_Protocol) (UDP) packet streams that traverse the NAT. [NAT traversal](https://en.wikipedia.org/wiki/NAT_traversal) techniques are typically required for client-to-client networking applications on the [Internet](https://en.wikipedia.org/wiki/Internet) involving hosts connected in [private networks](https://en.wikipedia.org/wiki/Private_network), especially in [peer-to-peer](https://en.wikipedia.org/wiki/Peer-to-peer), [Direct Client-to-Client](https://en.wikipedia.org/wiki/Direct_Client-to-Client) (DCC) and [Voice over Internet Protocol](https://en.wikipedia.org/wiki/Voice_over_Internet_Protocol) (VoIP) deployments. &gt;UDP hole punching establishes connectivity between two hosts communicating across one or more network address translators. Typically, third party hosts on the public transit network are used to establish UDP port states that may be used for direct communications between the communicating hosts. Once port state has been successfully established and the hosts are communicating, port state may be maintained by either normal communications traffic, or in the prolonged absence thereof, by so-called *[keep-alive](https://en.wikipedia.org/wiki/Keep-alive)* packets, usually consisting of empty UDP packets or packets with minimal non-intrusive content. &gt; --- ^Interesting: [^Hole ^punching](https://en.wikipedia.org/wiki/Hole_punching) ^| [^TCP ^hole ^punching](https://en.wikipedia.org/wiki/TCP_hole_punching) ^| [^NAT ^traversal](https://en.wikipedia.org/wiki/NAT_traversal) ^| [^ICMP ^hole ^punching](https://en.wikipedia.org/wiki/ICMP_hole_punching) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cl9hd62) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cl9hd62)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
I'm using it for educational purposes. If you think anything here is meant to be useful then you are mistaking my intentions. I'm going to be doing the same thing except to different applications in the future, so use your imagination as to why a beginner would start with something simple, like notepad. 
You need to understand [pInvokes](http://msdn.microsoft.com/en-us/library/aa288468%28v=vs.71%29.aspx). With pInvoke you can call functions from external .dlls directly in C#. This is what the code in the given example mainly does. He imports functions from the kernel32.dll e.g "ReadProcessMemory" and calls them. But im not sure if this will help you because i don't think you know if you are reading the actual "Text" of the notepad process or any other data. Do you really need to read from notepad directly? Maybe it would be sufficent enough to read the file that is opened.
Ahh I see ... I guess it might be harder to time with multiple connections, but I'm pretty sure I've seen games use both.
Are you a wannabe game hacker? Those are generally the only people who want to abuse software like this. They also tend to be pretty skilled programmers because that shit is hard. At least notepad isn't constantly being updated specifically to break your program.
Why do you say that I'm abusing software? 
Winforms are fine. They have their place, just as WPF does.
I don't think anyone will care if I break ACL rights for a simple notepad window. If I was to abide by the protocols in the link you posted it would just end up being a headache. As for your question, I'm pretty sure it's obvious at this point. 
I appreciate the help. I've read up on byte arrays, pInvoke, some other stuff... Doing it that way as opposed to what I originally wanted to do seems like a way easier starting point. &gt;There's land mines galore going down that path. Lol, i'm stealing this expression. Again, thanks for the help. 
If they wanted you to be able to count the number of characters in the editor, they would have exposed a way to do that. Since they didn't your trying to hack your way in there and inject behavior that either doesn't exist or is purposefully hidden away (in the case of game hacking). Perhaps in this case abuse was to harsh of a word, let's just call it misuse. Actually changing the running code so that it behaves differently, especially if the purpose of that is unfair competition, is absolutely abuse.
That might be applicable if I was using a ~~function~~ method like "WriteProcessMemory" but I'm just reading the addresses stored in notepad. &gt;Actually changing the running code so that it behaves differently, especially if the purpose of that is unfair competition, is absolutely abuse. I'm not doing that. I can see where you're coming from, though. 
Good luck with your endeavor, but this is really a very difficult thing to do, even more so from a managed application. Games and other apps that don't want people snooping employ a variety of techniques to make it very difficult. https://www.blackhat.com/presentations/bh-usa-07/Yason/Whitepaper/bh-usa-07-yason-WP.pdf I applaud your desire to learn, but I would recommend learning C/C++ first and topics like memory management, paging, ACLs, etc.
Thanks for the link. Seems like a ridiculously useful book. But, yes, I'm definitely determined to go down this path. 
Nooooope. Walk away.
&gt; and its easier/less cumbersome to use. Unless you do all your interesting things in the ViewModel like a good little MVVM acolyte should. :'( 
Surprised no one posted this article: http://www.codeproject.com/Articles/670373/Csharp-Read-Write-another-Process-Memory This really helped me. 
Have you identified a place in memory where the length of the file is stored? If so that might not be too bad, though still just as fragile as anything. Also, I don't know what exactly your intending to here, but watch out for the character encoding. 8 bits does not always mean one character.
&gt;8 bits does not always mean one character. Yeah I learned that the hard way. &gt;Have you identified a place in memory where the length of the file is stored? Indeed I have. 
Personally, I looked up local software shops, in addition to responding to the few local classified ads, I also sent letters of inquiry to pretty much every software development firm (each one custom written based on what I learned about the company- I was unemployed so I had the time...). I ended up getting hired by one of those companies a few months later, and have been working with them for a year now.
It depends how familiar i already am with what i'm going to build. If i have an idea and i don't know idea how to implement it i begin working on the very core of it as a proof of concept. Testing various bits and bobs while i work the problem. Once that is up an running i build an application around it. Can lead to spaghetti code tho so i usually go to the next method afterwards. If i can do it in my sleep the first thing i build is the framework around it, layout out the entire application and then doing the difficult bits last. What you're asking about laying it all out beforehand is only possible if you've internalized enough of the necessary information. So my advice is. Build a proof of concept first, it will give you an idea of what you would need to build an application around it.
I was just poking fun. I actually had no idea that the SynchronizationContext object existed or what the difference between Send and Post was. So that was new to me.
Wow, thanks! I didn't think about doing it that way. 
Good point, GetHashCode could even be based on a float depending on the object.
Thanks a lot for this! I really like your rule, it can definitely push you to finish the app! I am thinking of developing an app that uses databases, so I can learn a bit more and also be able to write it on my resume. I am fimiliar with C# and have made a windows form app before, but I want to make a windows phone app, I might buy a windows phone just because of it or if theres another way to do it, also let me know. 
That is what I am afraid of "spaghetti code", haha. But I guess it will be needed for proof of concept.
I used to shoot from the hip and start coding, but I found that I was more likely to abandon a project that way. Then I read a piece by Werner Vogels of Amazon about designing software in reverse that I've used for several products, and it worked out well for me. Step 1 - write the press release. I don't write a real press release, but I do write down the essence of what is is that the software will do and what key features (i.e., selling points) it will have. Step 2 - write the FAQ. I skip this step. Step 3 - define the user experience. I rough out what steps the user will take to accomplish each of the key features from the press release. Step 4 - write the help manual. I don't actually write the manual at this stage, but I do draw up rough wireframes (w/ pencil and paper) of what each screen will look like. If there is anything particularly tricky or important, I will write notes about it. Step 5 - develop and test it. I do steps 3 - 5 iteratively for each feature. Don't be afraid to write one to throw away. It happens.
spaghetti code is fine as long as you learned everything you needed while writing it. just start coding you'll never get it right on your first try anyway. coding is an iterative process
I am afraid of this too, starting to code right off the bat and I might eventually abandon it. That is a great strategy! I will definitely try this out. Thanks.
I downloaded your project on github, and looked through it a bit. I'm still quite new to C#(1.5yrs), but I must say.... this is fucking amazing. Also, do you have any material on your game? Links, blog, etc? I too have run into floating point limitations, however that was within the Unity engine. 
why are winforms so bad?
Avoid anything that uses GetHashCode, such as dictionaries. Use a custom random class (Google Mersenne Twister C# for a good one). Avoid using sorts that are not explicitly marked as "stable" on collections that have multiple values that compare equally. For those collections, you can use LINQ's OrderBy to receive a deterministic ordering. Avoid multithreading any computations that need to be deterministic. Avoid floats/doubles. Decimals and ints are fine. .. and you should be good to go.
0 and 1. Today was a 0 day for me. 
Well, I have been called a dog a few times...
I know what I should be doing but I can't get myself to do it. ie, I'm on reddit now.
Yeah, applies to writers too. But, there is occasional moments when I finish a check in and say that very thing. Both of them, sometimes at the same time.
As a bonus, the god graphic is from the BASIC cartridge from atari.
[and what it actually is like](http://imgur.com/eH1G0kZ)
Holy water marks batman!
Seriously, an image macro? Come the fuck on.
Strange always works for me, must be blocked somehow. Here is a better article on the subject anyway: http://stackoverflow.com/questions/13606922/why-is-app-config-a-more-secure-location-for-storing-a-connection-string-than-in EDIT: sorry, that article links to this one which is where the good stuff is: http://msdn.microsoft.com/en-us/library/89211k9b%28v=vs.80%29.aspx
 This is far too convoluted. It should be something like this: private async void ButtonClickHandlerAsync(object sender, EventArgs e) { button1.Enabled = false; for (var i = 0; i &lt;= 5000000; i++) { label1.Text = "Counter " + i; await Task.Delay(50); // wait for a bit, without blocking. } button1.Enabled = true; } Await correctly restores the sync context, there is no need to deal with it manually. There is no need to use Task.Run either, as no background thread work is actually needed in this case. Also, this avoids wasting CPU cycles while waiting for the right time to come up. The behavior isn't completely identical, obviously, but you get the idea. Edit: Also, the "new" class SynchronizationContext has been in the framework for almost 10 years (since version 2.0).
Proper use of await makes these obsolete, se my other comment.
Almost all image formats are in RGB. If you don't give us more information, you can't get any help. Also.. Have you tried google?
http://asp.net
That's a much more brief way, I like it. I didn't realise about the await restoring the sync context. Is there a better way in this example of awaiting without the delay? If I change the delay to 1ms and the counter to 5000. It takes 1 minute 22 seconds to count to 5000. where as in the original example because the update to the UI is based on a time interval the same count takes 0.8 seconds.
This is so true...
I see. Very interesting topic nonetheless. Good luck on your game!
Yeah, that's the only problem with it... what you are doing is maybe a somewhat uncommon workload, which may not fit well into the async-await pattern. In general, though, workloads often tend to look like in the code I pasted above, which is what await was written for (I think). For workloads of the type "start something that needs to compute a lot and every now and then update the UI", you may still need an approach close to yours. Extension opportunity: CancellationTokens :)
And WebForms won't be part of aspnet vNext, so MVC is the better option "future-wise".
The good news. Your database code is still valid. You can reuse your logic too. If you have good code separation already then it could be as simple as replacing the UI element of your application with the appropriate web views. If it were me I would be looking at MVC to allow this. http://www.asp.net/mvc This is a very powerful way of building .net applications and by default separates the business logic, data and UI.
I'm only a couple weeks in so its not a huge migration or anything like that. For now my windows forms displays data that i retrieve from ms sql server. I assume a web form can do the same. Its just that I've never even used asp once so i was a little spooked. In school no class even mentioned asp or mvc. Ill start coding tomorrow. For now I've just been reading up on asp and mvc (also a new concept to me)
Yeah you'll pick it up. I'd definitely recommend Razor over Web Forms though, plus it's the more 'up-to-date' tech. You'll want to get the data from your db into the model, likely re-using your logic from the winforms project, and just have your view display it! super simple example: Lets say your logic arranges the data it gets from the db into a dictionary&lt;string, double&gt; where the string is the product and double is the price. You can use razor to foreach over the dictionary, outputting html to populate a list of prices. &lt;ul&gt; @foreach(var p in Model.yourDictionary) { &lt;li&gt;@p.Key : @p.Value&lt;/li&gt; } &lt;/ul&gt; above might be a bit off but I'm sure you see what I was getting at!
/r/WTFStockPhotos is leaking too?
think of it like flow charts, or even better a combination of flow charts and class diagrams: in very basic terms, you will probably need a class to represent the data submitted via the webform, you could write this as a class with fields for the data that is input into the form, and then methods for retrieving from the form, putting to the DB, and then displaying on the other part of the website... or maybe you will want a separate class for pulling from the DB and displaying on the other part of the website, or maybe you want to do it in an entirely different way then I have mentioned. It just helps to plan out your implementation via paper and pencil before you start coding, as its a lot easier to get lost if you dont have a roadmap before you begin coding. for me atleast, when I plan out what I want to do first, its a lot quicker for me to get it right then when I try to figure it out as I code, as I might end up doing unnescesary extra work due to not fully thinking through what my requirements / goals are, then I end up with multiple classes where I could just use one, or adding a bunch of methods that i dont really need if I would have planned things out a bit more at first.
My god, he's gone quantum.
http://blog.psychocoder.net/2012/01/27/adding-aero-effect-to-your-application-with-csharp-and-win32/
And then there's me, in the middle. I know what to do, I know 'how' to do it. Now I just need to pick 1 of the 12 different ways to do it. 
&gt; 8 bits does not always mean one character. &gt;&gt; Yeah I learned that the hard way. `System.Text.Encoding.Unicode.GetCharCount(byte* bytes, int length)`
Thanks! 
Quite apt- a tri-state device can have states 0, 1, or high-impedance.
Can we NOT submit crap like this? This is a software engineering subreddit.
This is a [task dialog](https://www.google.com/search?q=task+dialog). Here are [some NuGet packages](http://www.nuget.org/packages?q=task+dialog) that expose the TaskDialog to C#. 
DateTime.Parse is missing CultureInfo parameter, some cultures use dd/mm/yy, others mm/dd/yy etc, you need to specify the required culture. Cultures in C# also have pretty weird stuff going to them(like an en-us one can differ if a person decides to edit it for their own region). If you don't care about display format InvariantCulture is an option. More reliable method is separating display(string) and data(actual DateTime object) so you can sort by DateTime and not touch the displayed string at all.
Unfortunately, I'm not using WPF. I'm using WinForm (though I should probably get in the habit of using WPF in the future).
I just always had a habit of using regular Windows forms for years now, while it's not much harder to use WPF, it is hard for me to break my habit. This is a project I started a while ago, and at this point, it would be harder to convert to WPF than to just live with what I have, but from now on I'll be sticking to WPF.
+= is not an atomic operation. It consists of 4 operations: 1. Load current value 2. Load argument 3. Perform add 4. Set result. So you're taking current value of label, then await result ("successful"), then add it to current value. Because on each click current value is captured independently, on each click captured value is "". "" + "successful" = "successful"
It seems like one of the plethora of video playing tools out there would be far better than trying to write your own. This is no small task.
Could you recommend one? 
Thank you, I think I get it now. Or at the very least I now know where to look to get more information. Much appreciated.
And as follow-up: use local variable. var value = await testTask(); label.Text += value;
Yeah, would highly recommend WPF moving forward.
Just bare in mind of course that the effect isn't nearly as slick looking under Windows 8(.1) due to the lack of transparency.
A better way to look at it: label.Text += await testTask(); becomes... 10 temp = label.Text 20 [WAIT FOR SOMETHING ELSE TO HAPPEN] 30 temp = temp + testTask().Result 40 label.Text = temp On line 20, that something else may be another asynchronous operation changing the value of `label.Text`. So to fix it, reorder the operations to that the "something else" doesn't happen between your read and write. var result = await testTask(); label.Text += result; or 110 [WAIT FOR SOMETHING TO HAPPEN] 120 result = testTask().Result 130 temp = label.Text 140 temp = temp + result 150 label.Text = temp 
&gt; Basically, winforms is completely useless once you learn WPF Unless you need to make your app cross platform. Then WPF basically becomes a non-option. Well, unless you want to create a completely different UI for each platform. And even then, dealing with an old-school UI library on some platforms and WPF on Windows could be more hassle than it's worth. So, for cross platform, you're pretty much stuck with WinForms or GTK#.
&gt; cross platform Sounds like the kind of problem I would resolve with **MVVM** (which is not supported by crappy winforms), in order to be able to reuse my UI **logic** (rather than the UI itself) on different platforms. Reusing a Windows UI in, for example, Android, does not really make any sense because the UI paradigms for these platforms are totally different. And of course, cross-platform means Windows + Mobile, and, to a lesser extent, OSX, because, seriously, no one gives a fuck about desktop Linux.
 Process.Start("cmd.exe", "reg SAVE HKLM\SAM %~dp0\SAM"); Is the simpelest way, if you don't want to show the cmd window then: Process process = new Process(); process.StartInfo = new ProcessStartInfo { WindowStyle = ProcessWindowStyle.Hidden, FileName = "cmd.exe", Arguments = "reg SAVE HKLM\SAM %~dp0\SAM" }; process.Start();
You don't need a large switch if you just want to convert the name to a real enum value. A quick example: private enum Example { bar, foo, foobar, barfoo } private static Example GetExample(string val) { return (Example)Enum.Parse(typeof(Example), val); } Edit: in regards to the other bit, google using Linq for grouping. I'm not sure what data structures you're dealing with (aside from the dictionary you created) so I can't say much beyond that.
Yeah, once mobile enters the mix you're pretty much forced to do something custom. And of course, if you do need multiple UIs then you'll want to be doubly sure to separate your logic from your controls as cleanly as possible.
The second method could be optimized a bit. You're calling GetRune on the same key in both loops. The first loop could just be saving the entire Rune inside the dictionary to begin with (maybe a count/Rune tuple or struct.) Also, your result string should be using a StringBuilder with string formats rather than concatonating strings. You almost never want to concatonate strings within a loop.
To add on to what /u/Arxae has said, the trick is to start a process. I just finish making an application of networking scripts recently. Some things to note: * "/K" or "/C" at the start of the argument will keep it open or closed respectively at the end of the script * You can chain together commands with &amp;&amp; "ipconfig /release" + " &amp;&amp; ipconfig / renew" * Passwords have to be created into secure strings, if you want to runas admin * You can gather a log of the information of the console (which looks quite nice when all said and done). Mine was saved to a SQLite db file * You can make the type generic enough that it can wrap python, powershell, cmd, and ruby scripts. It can be a powerful tool for systems level work Here is some of my code from a custom type I made just for the scripts: ProcessStartInfo processStartInfo = new ProcessStartInfo(ProcessType, CmdArgument + CmdCommands) { RedirectStandardOutput = true, RedirectStandardError = true, UseShellExecute = false, //This has to be explicitly defined due to the nature of adding a username and password to the process WorkingDirectory = @"c:\windows\system32\", WindowStyle = ProcessWindowStyle.Normal, CreateNoWindow = true, LoadUserProfile = true //These are for running as an admin, normally off //UserName = _adminName, //Password = _adminPasSecureString, //Domain = du[0] //Runas only works when the UseShellExecute = true //Verb = "runas" }; //Creates the process from a nulled instance. _proc = new Process{ StartInfo = processStartInfo }; //This starts the exe, then calls teh command line arguements (odd order due to windows process info) _proc.Start(); //Encapsulates the console as a string and logs it to the database string result = _proc.StandardOutput.ReadToEnd(); Log(string); } Hopefully this gives you an idea of how this type of thing can be played with.
I forgot 2 things: You need to do process.Start(); and you have to begin the arguments with /C (execute the following string). So, with the window hidden Process process = new Process(); process.StartInfo = new ProcessStartInfo { WindowStyle = ProcessWindowStyle.Hidden, FileName = "cmd.exe", Arguments = string.Format(@"/C reg save HKLM\System SYSTEM") }; process.Start(); Shorter version, but shows a flashing prompt Process.Start("cmd.exe", @"/C reg save HKLM\System SYSTEM"); One thing you might need to test is that it in fact does save to the current directory. If you launch it in VS, it will always use the application folder as base. But outside of VS that context might change. If it does, just substitute SYSTEM with this: Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SYSTEM"); For example: string path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SYSTEM"); Process.Start("cmd", string.Format(@"/C reg save HKLM\System {0}", path)); Here is a slightly more readable version: https://gist.github.com/anonymous/9941b7bacf36a593596f To my knowledge, this should work. If not, report back and we will have another look
Couldn't really test, but this cleans it up slightly. (And I tossed in my own ":" for flavor. :)) public void foo() { System.Console.WriteLine("Trying to get something from the Riot API"); var summoner = api.GetSummoner(selectedRegion, summonerName); foreach (var runepage in summoner.GetRunePages().Where(rp =&gt; rp.Current)) { var dict = slots.GroupBy(s =&gt; s.RuneId).ToDictionary(i =&gt; i.Key, v =&gt; v.Count()); StringBuilder builder = new StringBuilder(summoner.Name + " is currently using:"); foreach (var pair in d) { var rune = staticApi.GetRune(region, pair.Key); builder.AppendFormat(" {0} x {1}: {2},", pair.Value, rune.Description, getRuneType(rune.Metadata.Type)); } irc.SendMessage(SendType.Message, channel, result.ToString()); } } 
Isn't this something you could just do in .net?
you can edit the [Registry] using Microsoft.Win32.Registry. But HKLM\SAM requires running under the SYSTEM account. Does anyone know if this is doable? 
nice Linq, but I have to give you a down-vote for Copy/Paste code
Ah, I was not familiar with how enums work since it was built into the wrapper I'm using, this does seem to have been the solution. Thanks a lot! :)
Thanks, I didn't know about StringBuilder yet, I'll need to go over the rest of my code and implement that in more location. I have read about Linq a couple of times but I'm still not entirely grasping how I should use it since I'm not used to using it (started out with PHP and got into C#). The speed increase was also very significant! Thanks a lot!
Thanks for the suggestions, I did not know entirely how enums worked so I ended up searching for the wrong kind of information. Enum.Parse and Enum.TryParse do seem the thing I needed. The structure I was dealing with comes from this: https://github.com/BenFradet/RiotSharp Specifically using these: https://github.com/BenFradet/RiotSharp/blob/master/RiotSharp/StaticDataEndpoint/Rune/RuneStatic.cs https://github.com/BenFradet/RiotSharp/blob/master/RiotSharp/SummonerEndpoint/RunePage.cs https://github.com/BenFradet/RiotSharp/blob/master/RiotSharp/SummonerEndpoint/RunePages.cs https://github.com/BenFradet/RiotSharp/blob/master/RiotSharp/SummonerEndpoint/RuneSlot.cs 
Yes, we only answer questions from experts here.
"how do i haxor pls"
That doesn't have anything to do with immutability.
If it's the one you want, there's no need to a generic in the first place.
Both delegates and enums are implemented as compiler generated classes deriving certain framework classes. But then again, so are structs (conceptually) and they can be specified as generic limits.
Structs are immutable
http://msdn.microsoft.com/en-us/library/microsoft.win32.registry(v=vs.110).aspx
Impersonation?
github is blocked where I work, but can't you load the contents of your network stream into another memory stream?
why would a workplace block GitHub? (Serious)
Banks/finance places block places where you could upload files. First to prevent an employee from uploading the intellectual property they own, and second to prevent traders from using it to pass stock tips. 
I'd like to hear the answer to this as well. That's just weird. 
Start a read loop on it. Read until you reach end of stream. This is typically how you do it in internet/server applications, because often you don't have a way to pass the length to the client ahead of time. Yes, you could pass the length in the byte stream ahead of the data, but the client and server have to agree on how many bytes (4 bytes, 8 bytes, etc) to use to represent the length. And the server has to convert this to network byte order before sending it, and the client has to convert it from network byte order after receiving it (you are not guaranteed to have the same CPU architecture on both ends). 
we had it blocked initially for "web communications." it seems to register it as a social media website.
We have issues getting and keeping admin access. Its always a fight...
I just got through doing this for a project. Ultimately, it was easier to agree to an end of stream tag i.e &lt;EOS&gt;.
To stop me from wasting time answering reddit questions.
as in you provided code he could literally copy and paste into his own, without even renaming the variables 
IMO if TAs were actually good at coding they wouldn't be teaching
The server should be setting the Content-Type correctly. Chrome is smart enough to recognize that the start of the bytes are a jpeg/gif/etc. You don't want to write that code yourself (been there, tried that).
Fair enough. I guess it's possible to make things TOO easy. I tend to avoid doing that when it sounds like a student, but since it seemed like a personal project I wasn't worried about that and it was easier to paste the code I tested in LINQPad rather than obfuscate it again.
Depending on how expensive it is to call GetRune, you were potentially wasting a lot of time in the first FOR loop calling that, but never actually using the result it returned. Even if you did need to keep that object around, you'd only want to call it once for each ID, not once for each instance of it. Does that make sense?
LINQ is a lot of syntactic sugar via extension methods. It can drastically simplify code, but it DOES add a bit of overhead if you're trying to write really tight code. Generally, I'm willing to accept the overhead to get the code simplicity. That one line of LINQ to generate the dictionary is an example. All that code that was there before is still happening (more or less) it's just hidden behind a curtain now. I found the easiest change to start using LINQ, is anywhere you have a loop where the very first line inside it is "if", you can probably substitute it with a LINQ "Where()" which does the same thing. See the ".Where(rp =&gt; rp.Current)" in my sample above.
Lots of good tutorials on the sidebar. Since you're an experienced programmer, you might just want to take a look at the C# concepts.
Should be easy to just dive right in to be honest. My advice is start working on a project and just google problems as you run into them. You'll pick it up really fast. 
I derped. The restriction is that you can't do this: IEnumerable&lt;TEnum&gt; GetAllValues&lt;TEnum&gt;() where TEnum : Enum //CS0702 here { }
Someone asked a similar question not that long ago, here: http://www.reddit.com/r/csharp/comments/2gzahs/any_place_to_get_a_cnet_primer_for_a_career_c/
Yes, because we should all run before we can walk.
That goes for programming, as well as noticing sarcasm.
I don't understand this comment.
What is dbl1 and dbl2 in this case?
dbl1 and dbl2 would be side A and side B. dbl3 would be the hypotenuse 
In the first If statement you need to use 2 equal signs. = is for assignment. == is for comparison Math.pow is a method. And takes 2 doubles. So do math.pow(1,2) . Get rid of "dbl" 
So, what data type? Integer? Can you throw some dummy variables and values into your code snippet? It would definitely help readability.
 double dbl1 = double.Parse(textBox1.Text); double dbl2 = double.Parse(textBox2.Text); double dbl3 = double.Parse(textBox3.Text);
THANKS A LOT!!!
NP. I didn't realize your variable names included "dbl". So never mind that. Did you figure out the "cannot convert" issue?
Awesome, thank you!
This sounds like a good option for you: http://www.amazon.com/Head-First-C-Andrew-Stellman/dp/0596514824
Currently using Smartirc4net but I'll check your stuff out, as long as it keeps working on mono :p
I doubt that there can exist something like a "definitve OOP guide in language X"... OOP is a paradigm - per se not a language specific concept. Of course there are special constructs in different languages to integrate this paradigm into languages. Perhaps one might have written a book and took one specific language for example purposes. Perhaps you can tell us more about your programming knowledge, experience and your goals? It is much easier then to give you recommendations to books or documents, that could fit for you! Right now I can not judge, whether you want or need a language tutorial or a more conceptual book like "Design Patterns" for example.
This is the book you want: http://www.amazon.com/Framework-Design-Guidelines-Conventions-Libraries/dp/0321545613/ref=sr_1_1?ie=UTF8&amp;qid=1413532824&amp;sr=8-1&amp;keywords=.net+framework+design+guideline This is literally the book that Microsoft's own developers created and used when creating the .NET framework.
What's the error? What's the output? What's wrong with it?
No. Storing passwords in plain text is bad, and creator should feel bad. Take a look at http://www.asp.net/identity if you need authentication in your project. There is almost never a case where you would need to roll your own authentication.
Just wrap the clear in: if(this.Rows.Any()) {}
(1) there are incredibly specific and complex mathematical rules that govern whether or not a sudoku is actually solvable and whether it contains a single unique solution. (2) if i was a teacher, any use of goto would mean you fail my class, were I a manager, I'd fire anyone who i saw use it. Write a method.
Entity Frame Work
The scaffolding templates provided by Visual Studio contain a better login page using WebSecurity class.
Nice articles about async/await. There are a couple of minor errors you might want to correct: * In this article, near the bottom after the time comparison, there is a line "As you can see that’s quite a different." - different should be difference. * In the previous article, one of the code snippets uses the function name ComputeSquareRootAsync, when it should be ButtonClickHandlerAsync. Not a big deal. But just FYI... 
Well, I'm still working on it, so suggestions are appreciated :) Trying to decide whether I should have one class for numerical messages and let the consumer parse it, or have one for each (~100)...
You are selecting all img tags regardless of if it has an "src" attribute or not. Somewhere in your source file you have img tags without src attribute. Check for img.Attribute["src"] == null 
I find this to be a pretty harmful example. It doesn't teach you how to authenticate a user, it teaches you how to read foobar data from the db and assign some random values to the session **while you think you're learning authentication** and bad practices in general. And you know some people will pick it up thinking *this is the real deal* and implement it as *good enough*. So it would be better if it got taken down and re-purposed as "Fetching the user's avatar" or something similarly harmless.
You need to destroy that spaghetti looking "goto" right now.
There are some rare use cases for goto. This is none.
Thanks for the feedback. I have fixed those issues :-)
&gt;what sort of timescale have you got to complete this in? How comfortable are you with C# ? - I have more or less 7 months from now on. Note that the project is going to be developed as we learn new stuff. At the moment, I know very very little of C#, but I'm confident. I don't have difficulties and last year I was a 18-19/20 student with Visual Basic ( I know its easier ). I did some research and the best work from last year was something very " basic " which was a computer store management program, managing administrators, workers, listing repairs, selling pieces ... - In the beggining I tought about making something like a game manager ( based on steam and origin ) but my professor said that it would be much more aprecciated in the 3rd year ( last year ) - Im currently in the 2nd year. I hope I gave you all the information you need, thank you!
I guess with a project like this, scale is important. Pick something that you can start off really small with an scale up. I'd consider reading up on MVVM with WPF as its a good way of getting quick, polished GUI's and is very scalable. As mentioned below for your database I'd look into Entity Framework it makes it reasonably easy to swap out the back end database. MS SQL server is a good option, personally I prefer Oracle Express. The actual app itself should probably be something you're passionate about, Games manager would be possible as its reasonably scalable. Start with something which just catalogues names and install locations. Build in a simple set of discussion boards, functionality to web scrape reviews, add install / uninstall features, ratings, ability to organise, etc etc. You could do something easy like a personal organizer, then build in features like categorization, external document linking, outlook integration, cloud backup. You could do something generically membership like, store details of members, allow sorting, enable definable categorizations, even get fancy by allowing checkins with NFC (If your phone supports it). I think they key to your brief is that its database centric, it sounds less like they want you to do something impressive code wise and more like they want you to do something impressive database side. Consider having some business logic for your app in the database, either via triggers or PL-SQL / Transact-SQL. 
- Your post really makes sense to me, helped me a lot actually, structuring my thoughts. &gt; The actual app itself should probably be something you're passionate about, Games manager would be possible as its reasonably scalable. Start with something which just catalogues names and install locations. Build in a simple set of discussion boards, functionality to web scrape reviews, add install / uninstall features, ratings, ability to organise, etc etc. - The problem about the program above mentioned is that it is best aprecciated if done in the 3rd year because we will be able to do it with way better basis. Another problem is that the program should be the most local as it can be(will add this to the post), only the app and the database, local users, no internet. This project was what I tought initially. Thank you for your help ! 
It looks to me like you would want to set [this](http://msdn.microsoft.com/en-us/library/system.globalization.cultureandregioninfobuilder.compareinfo%28v=vs.110%29.aspx) property while creating your custom culture.
Much aprecciated. I will certainly use this if I have any difficulties even though my professor said that this wont help much because as we're going to learn to do it, we will have to do it, to prove we can. He said it was pretty good to use outside this program. Handy tool, thanks
You can either set your own CompareInfo property on your custom culture or, depending on what you're trying to do you could do something like this: public static class CultureConvertor { private readonly Dictionary&lt;char, char&gt; charMapping = new Dictionar&lt;char, char&gt;() { {'A', 'À'}, {'B', 'ß'}, {'C', 'Ć'}, // // Add all character mappings you need }; public static string Convert(this string input) { StringBuilder sb = new StringBuilder(); foreach(char c in input) { if(charMapping.ContainsKey(c)) sb.Append(charMapping[c]); else sb.Append(c); } return sb.ToString(); } } public class ExampleUsage { public void Main() { string myString = "Hello there bob."; Console.WriteLine(myString.Convert()); } }
Small video-game maybe? Tetris can be fun. It's a lot more work than it looks like though.
First off, dealing with databases is not all that difficult. However, to do it right, it can be. You have to scrub all inputs looking for injection attacks, make sure everything is escaped properly, etc. Using an OR/M (Object-&gt;Relational Mapping) like EntityFramework or NHibernate (there are many others) will handle most of the scrubbing and security issues for you! However, if you HAVE to use SQL statements directly, do it correctly and use parameterized SQL: http://www.dotnetperls.com/sqlparameter A parameter in sql is denoted with an "@", using it this way will help remove SOME of the issues with data scrubbing but not all - it will escape your parameters as needed but injection is still a problem. SQL Injection is something like this: You have a table named "Users" and you have a SQL statement like this "SELECT * FROM Users WHERE Name = @Name" now, if you set "@Name = 'Bob'" there's no problem and results in "SELECT * FROM Users WHERE Name = 'Bob'". But if you set "@Name = ''; DROP TABLE User" it will make your SQL into TWO statements 1. "SELECT * FROM Users WHERE Name = ''" AND "DROP TABLE Users" (this second one will literally wipe the Users table out of the DB. This is exactly why OR/Ms were created.
This makes some sense. Thanks for responding.
Stop encouraging new programmers to utilize shitty programming practices.
I did no such thing. I see you feel strongly enough about this to misrepresent perceived opposition to your cargo cult principles.
It had nothing to do with the HTML Agility Pack. That was just a good old fashioned null reference. Whenever chaining properties always check for null. Use the &amp;&amp; in your if statement. If the first condition is not satisfied, the second condition is not tested. For example: if(img.Attribute["src"] != null &amp;&amp; img.Attribute["sec"].Value == "BLAH") If Attribute["sec"] is equal to null, then the second half will not be called, so you are safe from a null reference exception. 
What are you passionate about? As in, when you go home after a long day and turn on your computer - what do you find yourself doing the most? Developing projects around this idea can lend to a much more passionate (and possibly advanced) outcome with your project! Try to find a small problem that you can solve within the constraints of what you enjoy doing when you use your computer for personal use. Next, let's find a simple use for databases (for further thought, sit there and think about what a database can *actually* provide an application and/or a developer). There's a reason you're needing to use a database, so try to figure out why you'd even want to use one to begin with! Here's my suggestion/scenario: First, a really basic use for databases is to provide persistence in applications. So, let's say that some day you want to build some kind of video game. Well, successful video games usually have in-house tools that aide in the building of said video game. Well, our video game needs lots of configuration or saved settings. If I've saved a setting, I want to be able to load it - so how do I do that? (hint: databases can work here). Maybe I don't want to allow the client (see: other users) modify my data after I've built a configuration - so I use the database to store said configurations and just load them on each application use. Easy enough: build a GUI that allows the user to input data directly into some combination of gui components and allow them to edit/save previous configurations / settings. Each time a save is done, store the data into the database, each time an application is run, go to the database and build the defaults / more recent settings / etc. I hope this points you into the right direction. If you take anything away though - spend some time really thinking about why databases are 1. widely used, and 2. necessary for your particular project requirements. 
Nice! Also see http://www.loadui.org
Nice :) For the "HtmlAgilityPack.HtmlDocument" thing, try changing `doc.ToString()` to `doc.DocumentNode.OuterHtml` (or perhaps use `doc.Save(someTextWriter)` if that's what you were going to do next anyway).
I .. guess ? Where would the database be then ? Scoreboard ? I don't know if it is too simple for a final project :/
Yes, I already have an Idea about that. At the moment we're using DIA (http://dia-installer.de/) to design our databases ( Is this how I should call it ? ) And at the same time we're learning all the relations you can have in a database and how to apply it. However, I will save your post because it will surely help me a lot :) 
Thank you so much for your help! I agree with you when you say that I should focus on my passion, im trying to conjugate my passing with useful programs I could do, however at this very moment I have to focus on impressing my professors, so I can have good grades so I can be located in well known companies so then i can really do what I love. Thank you for your help!!
How about a program that tracks software bug for programmers? It could start out as simple as the programer enters what bug they find and they can mark of check them off when they fix it. To make it more complex, allow them to add how they fixed the bug and the ability to search the database if they come across this type of bug in a future program. 
You definitely don't need multiple threads for this, you just need to either lock to vsync or double buffer. Unfortunately I can't tell you much about how to do either of those.
Thanks for the reply! It doesn't look like the vsync is the problem, i might be wrong though. And when it comes to double buffering i cant find any good explanations online, but i'll keep looking, maybe an answer will pop up right here as well! :)
A bit of googling indicates that it's a property of the Form hosting the application. That's if you're running in a window. Are you actually controlling the drawing and taking care of things like blanking the buffer? I've never worked with XNA and I'm not sure how much of the work it does for you.
Alternately: public static string Convert(this string input) { var converted = input.Aggregate(new StringBuilder(), (builder, chr) =&gt; builder.Append(charMapping.ContainsKey(chr) ? charMapping[chr] : chr) ).ToString(); return converted; }
If you aren't already, try clearing the scene before you draw. In your draw method at the top: GraphicsDevice.Clear( Color.CornflowerBlue ); Posting your source would also help in identifying your problem. Double buffering is done at the DirectX level in XNA and I doubt you have a need for render targets since this is a pong game. I suspect its just an issue in your draw method.
Oooh this is great as a reference guide. I already know most of it but having it laid out like this made me remember loads of stuff! ty :D
It has potential, yes.. Will consider that as an option, thank you ! 
Not by default. You have to make it immutable.
True, I was trying to keep it simple and self explanatory :-)
Where I work we have job candidates build out a simple database to manage a used car lot. Basically anything where you have inventory to keep track of is a good candidate for a simple project with a database.
the default for "new Random()" is to use the current time as the seed. Unless you are intentionally passing the same value as the seed each time, you should be fine.
If i got you correct here, the answer is yes, i am clearing out the drawing. (GraphicsDevice.Clear(Color.CornflowerBlue);" I don't know exactly what you mean by blanking the buffer, i guess that is common knowledge, but as mentioned i'm fairly new to this. Thank you for the reply however! :)
Thanks, i think i get the idea behind the double buffering, it seems easy to understand, but how to get it on paper, in the code is a little more difficult if you don't know the syntax or where to start ;P
ahh.. Thanks!
And where is the explanation to why you should do that?
System.Random is fine if you're not using it for crypto/security. If you just need decently random number fast, it's a great choice. http://referencesource.microsoft.com/#mscorlib/system/random.cs If you're using it for security, http://referencesource.microsoft.com/#mscorlib/system/security/cryptography/randomnumbergenerator.cs
Of EF, how do I hate thee. Let me count the ways.
1.... 2.... int.MaxValue
I know you mentioned it in the comments on your post, but did you actually try changing the type "Nullable&lt;int&gt;" to "int?" ? This SO answer seems to imply that it could actually matter: http://stackoverflow.com/a/16942112
Because System.Random() is pseudo-random, and will repeat numbers after a while. Use it if you want crappy randomness. 
Delayed execution means this line still might not be the one responsible for the exception.
I was at an interview. It was a large IT company. The person taking interview insisted that I must have knowledge of OOP. I understand basic OOP[Inheritance,Polymorphism,Abstraction,Encapsulation . This is what they always want ]. I usually blabber whatever I read on net. But I could never actually make anything out of it. If you go through the text in second link you will get what I mean when I say its confusing. I found an book called The Object-Oriented Thought Process . I hope I will find my answers in it. Thanks for replying.
Thanks that looks really nice.
I checked, and there is no difference at all between int? and Nullable&lt;int&gt; in the generated IL. If EF does care, then it would have to read the C# code, which I doubt it does.
Ok, then I would suggest the following ones: * [Head First Design Patterns](http://www.headfirstlabs.com/books/hfdp/) * [Clean Code](http://www.amazon.de/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882) Besides Books you can also find good artciles on the net about OOP basic principles like [SOLID](http://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29). Actually I loved the Design Pattern book for showing me, that the basic principles are really the core of OOP. Of course they rely on the building blocks (Abstraction, Inheritance and Polymorphism), but they show you, how you should use those and make advanatge of them in order to build clean, resuable and maintable software. The latter on of the books focuses more on those principles, which is also nice.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**SOLID (object-oriented design)**](https://en.wikipedia.org/wiki/SOLID%20%28object-oriented%20design%29): [](#sfw) --- &gt;In [computer programming](https://en.wikipedia.org/wiki/Computer_programming), __SOLID__ (__Single responsibility, Open-closed, Liskov substitution, Interface segregation and Dependency inversion__) is a [mnemonic](https://en.wikipedia.org/wiki/Mnemonic) [acronym](https://en.wikipedia.org/wiki/Acronym) introduced by Michael Feathers for the "first five principles" named by [Robert C. Martin](https://en.wikipedia.org/wiki/Robert_C._Martin) in the early 2000s that stands for five basic principles of [object-oriented programming](https://en.wikipedia.org/wiki/Object-oriented_programming) and [design](https://en.wikipedia.org/wiki/Object-oriented_design). The principles, when applied together, intend to make it more likely that a [programmer](https://en.wikipedia.org/wiki/Computer_programmer) will create a system that is easy to [maintain](https://en.wikipedia.org/wiki/Software_maintenance) and extend over time. The principles of SOLID are guidelines that can be applied while working on software to remove [code smells](https://en.wikipedia.org/wiki/Code_smell) by causing the programmer to [refactor](https://en.wikipedia.org/wiki/Code_refactoring) the software's [source code](https://en.wikipedia.org/wiki/Source_code) until it is both legible and extensible. It is part of an overall strategy of [agile](https://en.wikipedia.org/wiki/Agile_software_development) and [adaptive programming](https://en.wikipedia.org/wiki/Adaptive_Software_Development). &gt; --- ^Interesting: [^Object-oriented ^design](https://en.wikipedia.org/wiki/Object-oriented_design) ^| [^Object-oriented ^programming](https://en.wikipedia.org/wiki/Object-oriented_programming) ^| [^Open/closed ^principle](https://en.wikipedia.org/wiki/Open/closed_principle) ^| [^Interface ^segregation ^principle](https://en.wikipedia.org/wiki/Interface_segregation_principle) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+clcszt4) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+clcszt4)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
This question doesn't make sense. You cannot have a nullable required property. The error has nothing to do with the query he did. Its just EF failing to initialise with the bad class.
`int?` is syntactic sugar for `Nullable&lt;int&gt;`. There is absolutely no difference between the two. It's the same with writing `int` instead of `System.Int32`.
You don't know what he's using it for, so you can't make a broad statement like that. See /u/josephthebest 's comment
I understand that, I am only asking because of what I found in that stack overflow I posted which indicates that someone found an instance in Entity Framework where it could matter.
You should actually read the stack overflow posts, including the comments. Not everything posted on StackOverflow is true, not even the accepted answers.
Picking up the language itself should be straightforward for you. You'd be best served by focussing on the garbage collector (and why it helps makes heap allocation fast), generics (don't expect them to be like C++ templates), collection classes, and why finalisers aren't destructors. 
Sorry for ranting, but I'd suggest you to not start with XNA now, as it's depreached / discontinued by Microsoft. Try * **SharpDX** or **OpenTK** as more low-level implementations of DX/OpenGL in C#, * **SharpDX Toolkit** or **Unity** for alternative systems or * **MonoGame** or **ANX** as alternative XNA implementations. These are just a few alternatives, there are many more. But XNA officialy has no future (sadly).
Sounds to me that you're not actually inheriting it but using it (combines progbar and label). So inherit UserControl and use progress bar and label in this control. Expose what you wish as your own properties or passthrough to progress bar. tldr: inheritance vs. composition
Thanks. Crypto seems to provide better random numbers from my googling, but seems like it's more overhead. I'm just looking to generate a pseudo random double between 0 and 1. I then use this value in a simple if condition comparing it to a list of stored values. If it's &lt;= to a stored value, then I use that stored value's record for processing. Otherwise, I move on and compare it to the other values in the recordset. IIRC, I'm using java.util.Random in my java version of the code.
Why is that a problem? Most of those are something you'd most likely want to implement like padding, others don't depend on you to implement them such as docking, font etc. If you really need to differentiate your custom properties from default designer ones you can simply categorize them with CategoryAttribute
That readme isn't very informative.
Aww thanks man. Honestly, I think the program is simplistic at the moment but I intend to develop the application further (plugins, editor etc.) whilst maintaining the minimalism. 
Update, I got it working with SPI_SETWORKAREA from SystemParametersInfo like your first link said, thanks a lot! :D Now it's just like I want it.
Did the same thing for me. Design patterns really changed the way I write any code in any oo language. It wasn't so much about always memorizing and applying those patterns but more that as I applied them, I started to understand why they work which led to a far deeper understanding of abstraction, inheritance and polymorphism and leads you down the path towards SOLID and why you want to get there. Then as I move up the ladder into senior dev roles, I start to see the same patterns emerge as integration patterns for services (though they have different names). Over a couple of years as my understanding got better, I realized that patterns were the genesis of the most important things I've learned as a developer (at least in terms of writing clean, reusable and testable software). I wish they'd have taught them in my university curriculum so I'd have started down that path earlier.
You're missing the "else" bit, so control logic is falling through. Put a breakpoint on your first "if" statement, then hit the step-to-next-statement button in the debugger a few times and you'll see this happen. Two ways to solve this: 1. Reverse the order in which you test the weight: &gt; 100 first, then &gt; 50, then &gt; 30, then by default it must be 30 or under 2. Or use an else in your existing set of if statements: if &lt;= 30 else if &lt;= 50 else if &lt;= 100 else over 100 
Don't type in what I said literally -- look up the syntax for if..else statements. It's just pseudo-code to get you going. 
codewars.com is pretty neat. I think C# isn't implemented yet though.
https://www.mscodechallenge.net/
Looks good - just tried to register but get an application error mesage doh!
Exercism is cool, but there doesn't seem to be much activity...
https://projecteuler.net/
I don't use it. Last time I looked they only support LinkedIn as an authentication method, and here they want way too much data. Access to all my contacts? Hell no.
this is a smart idea :D
I recently wrote a similar function for my open source 3D framework. It's not exactly what you asked but it's a start, here: /// &lt;summary&gt; /// Counts the number of times each element appears in a collection, and returns a /// &lt;see cref="IDictionary{T, V}"&gt;dictionary&lt;/see&gt;; where each key is an element and its value is the number of /// times that element appeared in the source collection. /// &lt;/summary&gt; /// &lt;param name="this"&gt;The extended IEnumerable{T}.&lt;/param&gt; /// &lt;returns&gt;A dictionary of elements mapped to the number of times they appeared in &lt;paramref name="this"/&gt;.&lt;/returns&gt; public static IDictionary&lt;T, int&gt; CountInstances&lt;T&gt;(this IEnumerable&lt;T&gt; @this) { if (@this == null) throw new ArgumentNullException("this", "CountInstances called on a null IEnumerable&lt;T&gt;."); IDictionary&lt;T, int&gt; result = new Dictionary&lt;T, int&gt;(); foreach (T element in @this) { if (result.ContainsKey(element)) ++result[element]; else result[element] = 1; } return result; }
First and foremost, don't store the numbers in an array and then groupby, just store the COUNTS in an array. Then your array is only 9 big to start with.
We have just started on exceptions, throw, etc. However it is not part of this assignment. We have no experience with Dictionaires, and have no idea how to follow where my array goes. Sorry, think this ones just too advanced for me right now haha
Are you creating a new instance of httpclient for each request? I have found there is a bit of overhead for creation/destruction so if you can, use a singleton or cache your client for reuse.
Have no idea how to store a count in an array. assignment says to count how many times the number appears in the array. I know this is a slower, less optimized method, but its what is being asked for. Being that I have went slightly ahead, and will likely be learning more about finding values in an array this week, this might be something we learn this week. 
Sorry, I didn't mean to overwhelm you. Dictionaries are just a mapping of keys to values. So you can store a key, such as the number 4, and a value paired with it, such as the number of times we counted number 4. That's basically all this method is doing. 
So, if you're using a constant sized array of ints, the problem you have is that you can't tell the difference between an array item being 0, and an array item not having been entered, because the array is going to put the default value for INT into each slot as soon as you initialize it. There are a couple things you can do to fix this. Use a List&lt;int&gt; instead of an int[99]. Lists dynamically adjust size so you're not going to have a bunch of empty slots in it. Another option is to keep track of how many values the user has entered and only look at that many values in your array (if you know there have been 50 entries, you can use var groups = numbers.Take(50).GroupBy(v =&gt; v); instead of what you have now. Thirdly, you could have your array use Nullable&lt;int&gt; (aka int?) instead of int. But I suspect that approach will be getting in over your head. I'm actually quite surprised you're using LINQ GroupBy method if you're not familiar with Generics like List and Dictionary.
Step 1: While you're still learning, stop using var. Always use the actual type of what you're making, so you know what it is that you're actually working on. This will help keep things clear in your mind as to what's actually happening at each step, and what you're data actually is at each step. eg. what *is* "groups"?
Your project uses arrays and does not mention dictionaries. How about something simple like: int[] intseries = new int[] {0, 1, 3, 4, 2, 0, 1, 2, 8, 8, 8, 9, 0}; int[] frequencyofintegers = new int[10]; foreach (var number in intseries) { frequencyofintegers[number]++; } for (int i = 0; i &lt; 10; i++) { Console.Write("value {0}: ",i); for (int j = 0; j &lt; frequencyofintegers[i]; j++) { Console.Write("*"); } Console.WriteLine(); } EDIT: modded the code to output a '*' for each number found.
http://www.codewars.com/
Works much like the one ive been building, but much smaller haha Problem repeats though, it gives the value of 0 with all the null numbers. I entered 11 numbers, 1 of them was a 0. It printed off 90 *'s lol EDIT----------- Found a way to make my original code to display only the 0's that were entered. My store array module uses the .length feature of an array, we call it the actualarraysize. Problem now is, will only show numbers that were entered, need it to show all the numbers 0-9 even if they were never entered, would just have no * next to it. Yours does this, but i cannot seem to figure out how to add the actualarraysize into your code. In mine, i just had to put an if group.Key == 0 int zero = group.Count - (100 - arrayactualsize); // where group.Count is the number of 0s found (including the null), 100 is the declared size of the array, and actual array size is // the count of actual numbers put into the array through a method that returns the length. If out of 10 inputs, 2 were 0s, it now // returns the 2, instead of 92 // Then in my display i just use the zero variable instead of group.Count
We havent actually gotten to LINQ at all, I was googling around trying to find answers to this before posting it, and was trying other methods. The group was easy to use for what i was doing (or so i though), and so i quickly looked into it to learn what i could. Cant use lists yet, and the amount of entries will be unknown until testing before submitting. Its a mastery class, and supposed to show the use of what is being taught, even if it will be ignored later haha.
Have you tried to debug and step through the loop to look at the values to see why you are getting a different value than what was expected? Edit: I think I understand the fundamental issue here. So, a dictionary&lt;k,v&gt; has a 'Key' and a corresponding 'Value' associated with that Key. You are building an application expecting a series of user values to be entered, from 0 to 9. If you didn't enter a specific number, say 3, it would not be in the dictionary since there was never a Key of '3' that existed in the series thus the Value would be a null.
The different value is because it is automatically converting null parts of the array into 0. Since the array is 100 big, if i enter 10 numbers, there is 90 null entries. They are being changed into 0. This is why both mine and yours is displaying so many * for the 0. The code you gave me was for 10 predefined number in an array that is 10 spaces big. I had to change that to my array, that is 100 spaces, with user defined numbers, that may not use all the spaces available. I got mine to minus the difference of nulls away from the total value. So if two 0's were entered, and 90 nulls were found, it would put 92, now it puts 2 as it takes the 90 nulls away. However, it only displays numbers that were found to be inputted, if i dont input a 7, it wont put a 7 with nothing beside it. Yours does exactly what i want, except it counts the nulls as 0's and displays them. I have been messing around with it for a couple hours now and cant get it to minus the nulls. I even tried declaring a new array, inserting mine into it with the found actualarray size i mentioned in my edit. I completely forgot that arrays require a constant size though. Life would be easier if i could do a list, but its a requirement to use an array.
You can't have just switched var to int, because numbers.GroupBy does not return an int, or even int[]. It returns something you probably aren't yet using in your course ... ie. (Since you aren't yet using Dictionaries ... ) int[] numbers = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }; IEnumerable&lt;IGrouping&lt;int, int&gt;&gt; groupings = numbers.GroupBy(v =&gt; v); Also, some of this may depend on what your 'numbers' variable *is*, and how it is setup. I'm going to guess, somewhere up above you are making an array with enough space to hold 100 ints. eg. int[] numbersEntered = new int[100]; foreach (int n in numbersEntered) Console.Write(n); Will write out 100 zeros. This is because the default value for int is zero. But, 0 is an important value for you, it represent possible data. Instead you would be better of initializing your array values to something which represent non-data, some default state which you can then later disregard. for (int index = 0; index &lt; numbersEntered.Length; index++) { numbersEntered[index] = -1; } Now, when you loop over the entered numbers, you can disregard any -1 in there .. and you can even exit your read loop when you get to the first -1, since you know there should be no data after that. ;-) Guessing this should be enough to get you over the line. As said, be careful about what you're using with "var" ... even though you're not saying what you want, the compiler is figuring it out from the return type of the GroupBy, and after that you are using *something*, whether you realise it or not. Better to know what you're using, and know the implications. var is just a shortcut to help with writing easier to read code where the return type can be considered less consequential, but there are still implications there, and while learning it's good to understand what's really going on.
I'd say you should just a List&lt;int&gt; to store the inputs... Would remove the issue of the empty values and also lets the user enter way more than 100 values. 
Hi. I had a stab a this. Please use this for reference and don't copy it. If you have any questions please feel free to ask me. This method loads your prices into a list and then works out what price to use (plus any excess) based on the weight and class of the letter. It uses classes and LINQ, which I hope you'll be learning very soon. Take a look and study it. public class LetterLogic { //A number of different classes for the letter public enum LetterClass : int { FirstClass = 0, SecondClass = 1 } //This class defines the letter cost public class LetterCost { public LetterCost(Double WeightUpTo, Double Cost, LetterClass Class) { this.WeightUpTo = WeightUpTo; this.Cost = Cost; this.Class = Class; } public double WeightUpTo { get; set; } public double Cost { get; set; } public LetterClass Class { get; set; } } //This class defines the letter public class Letter { public double Weight { get; set;} public LetterClass Class { get; set; } } public LetterCost CostOfLetter(Letter LetterToPost) { double AdditionalCostFirst = 0.24; double AdditionalCostSecond = 0.19; int AdditionalCostThreshold = 50; LetterCost CostOfLetter = null; List&lt;LetterCost&gt; LetterCosts = GetLetterCosts(); //Find the cheapest cost first CostOfLetter = LetterCosts.FindAll(l =&gt; l.WeightUpTo &gt;= LetterToPost.Weight &amp;&amp; l.Class == LetterToPost.Class).FirstOrDefault(); if (CostOfLetter == null) { //Letter weight exceeds our max price so get the most expensive price CostOfLetter = LetterCosts.OrderByDescending(l =&gt; l.WeightUpTo).FirstOrDefault(); //Find the excess weight double ExcessWeight = LetterToPost.Weight - CostOfLetter.WeightUpTo; //We are overweight so there will always be a minimum cost int AdditionalCostFactor = 1; //Increase the factor by the number of times we are over AdditionalCostFactor += (int)ExcessWeight / AdditionalCostThreshold; switch (LetterToPost.Class) { case LetterClass.FirstClass: { //Increase the cost by our factor CostOfLetter.Cost += AdditionalCostFirst * AdditionalCostFactor; break; } case LetterClass.SecondClass: { //Increase the cost by our factor CostOfLetter.Cost += AdditionalCostSecond * AdditionalCostFactor; break; } } } //Finally return our letter cost return CostOfLetter; } private List&lt;LetterCost&gt; GetLetterCosts() { //Load in the costs of our letter sizes to a list which can be searched List&lt;LetterCost&gt; tmpLetterCosts = new List&lt;LetterCost&gt;(); tmpLetterCosts.Add(new LetterCost(30, 0.38, LetterClass.FirstClass)); tmpLetterCosts.Add(new LetterCost(50, 0.55, LetterClass.FirstClass)); tmpLetterCosts.Add(new LetterCost(100, 0.73, LetterClass.FirstClass)); tmpLetterCosts.Add(new LetterCost(30, 0.28, LetterClass.SecondClass)); tmpLetterCosts.Add(new LetterCost(50, 0.40, LetterClass.SecondClass)); tmpLetterCosts.Add(new LetterCost(100, 0.55, LetterClass.SecondClass)); return tmpLetterCosts; } }
While an interesting launcher, I think it's not appropriate for /r/csharp. Unless you want to provide some C# specific context, this is pretty spammish. However, perhaps /r/programming or /r/windows might like it.
Json.NET has the optimal combination of features and performance. I have been in touch with James NK and will update the post if we find out more.
check out the subreddit /r/dailyprogrammer/ 
You need Visual Studio Express for Windows (it's a bit confusing, but 'for Windows' means 'for modern Windows apps) and also the Windows Phone SDK. You might need the Visual Studio version for Windows Phone specifically if you want to target WP8.0 or WP7.1/7.5, but I can't remember. You can definitely create Windows Phone 8.1 and Universal Windows apps with VS 2013 Express. With the free Express versions there is basically a separate version for each platform (though Universal apps changes that a bit since a Universal app is a Windows app and Windows Phone app combined).
"just". And that by using some kind of compiler magic - which honestly is not that easy to follow. I'd still stick to the expression way of things that: NotifyPropertyChanged(() =&gt; MyProperty); And with C# 6 you can use nameof instead: NotifyPropertyChanged(nameof(MyProperty));
Wow, I've been looking for a simplistic screenshot application every one of them that were out there so far were all riddled with stuff I didn't need and worked clunkily. Yours by far blows all of them out of the water. Checked out the source code too, your code looks so clean and organized compared what I've so far considered myself doing "cleanly". Very neat job, inspires me immensely to improve as well! If I may ask, I'm having a lot of trouble understanding StartupController.cs, is this a different way of executing forms?
CallerMemberNameAttribute -- not just for logging! 
And as usual PHP shits on that by having "references" that are more like an alias... Foreaching over an array by reference and then set something to the item variable name, it will overwrite the last value that was in the foreach...
Valid point. It is a .NET 4.5 feature
https://www.mscodechallenge.net/ is only for Danish users for now...
I don't like the NotifyPropertyChanged() call because I agree that it's hard to follow what exactly is happening. The way I do this is to have a base class with a `SetPropertyValue` method that when incorporated with the `[CallerMemberName]` attribute is pretty clean. protected virtal bool SetPropertyValue&lt;T&gt;( ref T propertyVariable, T value, [CallerMemeberName] string propertyName = null) { if (!EqualityComparer&lt;Tprop&gt;.Default.Equals(propertyVariable, newValue)) propertyVariable = newValue; else return false; OnPropertyChanged(propertyName ); return true; } Then your properties look like this: private string _someProperty; public SomeProperty { get { return _someProperty; } set { SetPropertyValue(ref _someProperty, value); } } This only raises the PropertyChanged event if the value has actually changed and by returning a bool indicating if it did change, you easily chain things together when the value changes. This is the simplified version actually. I have another that incorporates a `DependsOn` attribute that you can mark other (generally read only) properties with to say that "the value of this property changes when the value of any of these properties changes". It takes care of firing off the `PropertyChanged` for the dependent properties. It makes the guts of the `SetPropertyValue` method more messy but your view models end up very clean, like so: [DependsOn("SomeProperty")] public SomeDerivedProperty { get { return SomeProperty + " blah blah blah"; } } It will be even more refactoring friendly with use of the `nameof` operator in the attribute declaration. The full blown version I have is also full of thread safety junk I left out.
http://code.org/
I think that's pretty subjective. I use a fork of fastJSON that blows Json.NET away in my scenarios.
&gt; fastJSON Any benchmarks that I can see?
I've been using PropertyChanged.Fody for this lately... only requires one annotation and the rest of your code is a POCO.
Maybe at some point. It's chock full of code specific to my [work related] projects, so I'm not going to budget time to redo benchmarks. My point was that you shouldn't dismiss /u/moswald's query just because Json.NET suits *you* more.
It's rather obtuse to think that Json.NET has *every* feature *every* developer could want, or that there aren't a plethora of reasons you may want to pick another serializer. Additionally, if a 30% performance improvement isn't important to you, then you clearly have never developed anything that requires scalability.
I find Fody PropertyChanged makes it the easiest. https://github.com/Fody/PropertyChanged
That is not Scalability, that is performance. Scalability is achieved by scaling out to more nodes. Scaling up, really is no scalability. Sure, that will cost more - but I am happy to trade it for better readability and features. What I have or have not done is not relevant here but I suppose my profile is all public so anyone can check if they are really interested.
I think perhaps your teacher was looking for something more like this: class Dog { public void bark(string dogsName) { Console.WriteLine(dogsName + " is barking"); } public void run(string dogsName) { Console.WriteLine(dogsName + " is running"); } } class Program { static void Main(string[] args) { Dog fido = new Dog(); int count = 0; do { count++; fido.bark("Fido"); } while (count &lt; 5); for (int i = 0; i &lt; 10; i++) { fido.run("Fido"); } Console.Write("Hit any key to close"); Console.ReadKey(true); } } Notice that `bark` and `run` only "bark" or "run" once per invocation. And it's the outside use of your `Dog` that controls how many times the dog barks or runs. This lets you write different programs that bark or run any arbitrary number of times. (Your original code would make the dog bark/run many times each time it's called no matter what; this makes it impossible to reuse your `Dog` for other situations)
That simple? Just create each individual loop 
&gt; That is not Scalability, that is performance. Performance becomes highly relevant with scalability -- you're never likely to run into performance problems if you have hardly any utilization of serialization on a massive scale. **Again, I will reiterate my my point**: you acted like his desire to know how [any other JSON serializer] compares is some pompous act of insolence. Stop that.
That simple. Thank you. I see exactly what I did wrong. I should have made it completely separate. I over thought it way too much. Thank you so much. 
He's teaching you abstraction. Too much logic is inside the bark/run methods that's not needed. Create a Bark and a Run method that do just that. Then create a loop that executes those methods 5 and 10 times respectively
Thank you. I didn't quite get that in the beginning, and since it was already graded, I wanted to see where I went wrong. I should have created the While and For loops outside of the method, below the program. I changed the code in Visual Studio, and even though it was the same output as before, I now understand what it was that I did wrong. I should not have put it inside the method, I should have put it below and deleted some of the original code to change it into the needed loops. 
So that when it sets the value of the backing variable in the method, the value on the object changes as well. If you don't do that, just the value of the parameter on the stack is changed inside the method. The value back on the object is unaffected.
Isn't that only the case for value types? So this is only to account for the times if the variable is of value types,
The only alternative is the `CallerMemeberNameAttribute` or the `nameof`-operator (C#6). Pre C#6 I consider the lambda the best method.
Oh, that is silly. I saw that the "perks" are only available to them, but the entire site? What a pity.
upvote for fody, once you go [ImplementPropertyChanged] you can't go back
Nope. public class SomeClass { public string SomeProperty { get; set; } } public void ByValMethod(SomeClass someClass) { someClass = new SomeClass(); someClass.SomeProperty = "New value"; Console.WriteLine("In ByValMethod = " + someClass.SomeProperty); } public void ByRefMethod(ref SomeClass someClass) { someClass = new SomeClass(); someClass.SomeProperty = "New value"; Console.WriteLine("In ByRefMethod = " + someClass.SomeProperty); } public void Test() { var someClass = new SomeClass(); someClass.SomeProperty = "Original Value"; Console.WriteLine("Before everything = " + someClass.SomeProperty); ByValMethod(someClass); Console.WriteLine("After ByValMethod= " + someClass.SomeProperty); ByRefMethod(ref someClass); Console.WriteLine("After ByRefMethod= " + someClass.SomeProperty); } Output would be : Before everything = Original value In ByValMethod = New value After ByValMethod = Original value In ByRefMethod = New value After ByRefMethod = New value The important difference is that when passing by ref you can change the value assigned to that variable you're passing in. If you don't pass by ref you can change the values **on** any reference type you passed in but you can't assign a different value to the variable outside the scope of that method. At a lower level, when passing a reference type by value (the default) you are putting a pointer to that object on the call stack. Any changes to the value on the call stack are made right there on the call stack. When method returns and is popped off the stack, the changed value on the stack goes away. When you pass by reference put a pointer to the external variable on the call stack. When you change that value inside the method, it changes the value that the pointer on the stack is pointing at, which is the external variable. When the call returns, the pointer on the stack goes away but you've still changed the value of that external variable. It's important to note that this has the potential to make a mess if you're dealing with multiple threads so you have to be real careful with that. In the real version of this approach I'm describing above I have a bunch of code to mitigate those problems but it's still possible to cause yourself a race condition if you're doing crazy stuff in the setter, which is generally a bad idea but still something I find my coworkers doing. 
Thank you for putting in the time and effort. This greatly improves my understanding!
My first thought is it would have limited usability compared to the breadth of the language and would require a special scope to work in. But I usually don't work in that area.
This is really a matter of personal taste, but I think an attribute would make more sense than a keyword.
[blackwasp is amazing for getting started](http://www.blackwasp.co.uk)
If we could use Roslyn to do compile-time code rewriting, stuff like this would be very easy to implement.
If you don't improve in terms of software development, you'll at least know how to find prime using every method known to mankind.
I really enjoy the extension mechanism. Would look forward to contributing!
I literally *just* added that functionality. I am about to show a bud of mine how to use it :) I will message you here when I write some documentation in case you still want to contribute - I would be privileged :)
Thank you for the kind words, friend :) The `StartupController` is used to limit the program to a single instance. I actually have a video that demonstrates its purpose on Youtube. You can find it [here](http://youtu.be/-ZaC0jwW114). 
Check out [Fody.PropertyChanged](https://github.com/Fody/PropertyChanged) for the solution to compile-time generated property change notifications. And more generally, check out the technique known as IL weaving. Fody and PostSharp are great tools for this.
Agreed. Also, it's useful in a lot of cases to chain property changed events when you create derived properties. Like public bool A { ... } public bool B { ... } public bool C { get { return A &amp;&amp; B; } } If A or B changes, fire property changed for C. An attribute could do that easily with an optional parameter of what property name to fire change for and allowing multiple attributes. A keyword couldn't.
You mean like [this](http://www.postsharp.net/model/inotifypropertychanged)?
Don't use console.writeline. Use console.write and start the text with \r http://stackoverflow.com/questions/888533/how-can-i-update-the-current-line-in-a-c-sharp-windows-console-app
You should look into T4 templates then, you can do this already. It's just.. clunky.
It's just sad that we have to come to this, for something so common. I love c#, but INotifyPropertyChanged drives me mad.
What I'd do is instead populate an array of the 30 elements and then randomly shuffle that array. You could use the random number generator to get two indexes to swap some large number of times. This is assuming that your range of numbers and size of the array are always going to be the same size. 
The way I would do it I think is to have a list of all of your numbers 1-30, then do random(1, list.size()), then set your object to the list.get(whatever random number you got). Then delete that element from the int list. I realize that isn't explained very well, so some pseudo-code: public void generateRandoms(List myObjects) { List&lt;int&gt; numbers = new List(); for (int i = 1; i&lt;=myObjects.size(); i++) { numbers.add(i); //this will give you a list of numbers from 1-however many is in your original list } Dictionary&lt;String, int&gt; map = new Dictionary&lt;String, int&gt;(); random rand = new random(); foreach (var object in myObjects) { int index = rand.next(1,numbers.size()); map.add(object, numbers.get(index)); numbers.remove(index); } } I think that should give you a basic idea. If you can't get it figured out from there, post some code and let me know and I'll try to get you straightened out.
If you have specific questions, you can pm me for assistance. I've got 10+ years of professional .net experience, and love helping people out whenever I can. 
You wouldn't really need to do it for a large number of times: //pseudo-code because lazy set array to populated with numbers 1-30 for i = 0; i &lt; array.length; i++ var temp = array[i] var swapIndex = rng(0, array.length) array[i] = array[swapIndex] array[swapIndex] = temp That should be good enough to ensure all elements have a random element.
Can we collect your salary for you while we do your work for you?
With CallerMemberName, it's now bearable IMO.
Here's a neat way to do a list shuffle: var numbers = new List&lt;int&gt;(); for(int i = 1; i &lt; 31; i++) numbers.Add(i); numbers = numbers.OrderBy(x =&gt; Guid.NewGuid()).ToList(); Edit: typo
This is cool! But for me it works the wrong way round. The properties which you want to notify should be decorated, not the ones that don't. But a good link thanks! I also thought about a class keyword, but I'm not sure how it should implement things to fit all cases...
Not sure but why not: if (reader.ReadLine() != "$stopmark") writer.WriteLine(reader.ReadLine());
Every time you call reader.ReadLine(), it is removing the next line from the reader, and returning it. Try calling reader.ReadLine() once within the loop, setting this to a local string variable, and use this.
I'm learning so much more from asking one question here then my teacher pounded into my head the last year... Thanks! 
Nono, my Intend was to read every line. But because I overlooked the fact, that every reader.ReadLine() removes one line from the stream I ended up with every other line. I failed to grasp that and ended up with a loop that that only wrote every third line.
Yeah I've looked into T4... "clunky" is a bit of an understatement.
You can use [PostSharp](http://www.postsharp.net/) to do this as a post compile step, or you could use an inteceptor and say unity to do this at runtime. All of them clunky in their own way.
No, it's a C# 5.0 feature (and there is no "C# 4.5", like the article says). If you have a C# 5.0 compiler, you can use this even when targeting an older version of .Net.
I have to vent, because T4 pisses me off. I used it once for project template for a plugin architecture. The plugin architecture would be upgraded, and sometimes I would implement more expressive alternatives to some functionality. But every change meant that I more or less had to rewrite the T4 since writing a T4 means the project will no longer compile (and unit tests go out the window). I'm still mad. T4 is completely, and utterly useless. The alternative was to create a wizard using C# that would generate code, which is a **lot** more work, and suddenly the template will have version incompatibility. The entire thing is poorly thought through. edit: not to mention how unpredictable T4 is with file names, and project or solution files.
The world needs people like you :)
Also a C# developer here. I've been a developer for 15 years. Feel free to PM and I'll give what advice I can.
Well. string.Replace takes a precise string and replaces it with another precise string. The tiny template pattern takes a string template, locates keys based on delimiters, and replace the keys with a value from a dictionary. It is closer to string.Format than string.Replace but in string.Format, you specify replacements by position "${0}" and in templating you specify them by name "${UserName}" 
So it's kind of like what String Interpolation would do?
/u/jeresig wrote a [micro-templating function](http://ejohn.org/blog/javascript-micro-templating/) with similar properties a few years ago. I'm happy/ashamed to say I still use it occasionally.
Gotcha! Was just checking.
This guy is just posting blogspam.
In C# I tend to use an IFormatProvider that just wraps a dictionary I give it in the constructor. Then I can do this: String.Format( new DictionaryFormatProvider(new Dictionary&lt;string,string&gt;{ {"name", "grax32"} }), "Hello {0:name}" ); I don't have the code for the DictionaryFormatProvider on me, but it's pretty trivial.
Seems a bit overkill IMHO to use Funcs for a simple operation like this.
Fairly new to reddit but I'm just trying to share and discuss a few of the things I have learned. I have found the comments educational such as the link to someone else's micro-templating function and the term string interpolation which was new to me. I don't make money from my blog. I have a single ad on there and I would gladly remove if it would make you happy.
[same thing with regex](https://dotnetfiddle.net/WojntT) (for tripled nerdiness)
This is what I'd do in your case as well. One thing, typo in code, should be Guid.NewGuid(), not Guide.NewGuid().
I would love to see the code if you can find it.
Nice. I added a link to this to my blog post
Haha, auto correct is a thing of beauty.
getting desperate for a solution now... ihavenoideawhatiamdoing.jpg
Neat approach! Much easier than coding up a Knuth Shuffle method though I'm curious about actual overhead if you're optimizing for execution time over code time simplicity.
Depending on what you need this for, the static File class may be easier to use. Not to mention, I'm not sure exactly what you mean by configuration file, but if it's a .net config, consider the ConfigurationManager.
I would do something like this. Enumerable.Range(1,30).Zip(objects.OrderBy(o=&gt;Guid.NewGuid()),(r,o) =&gt; new{r,o}) Try the following in linqpad w/ c# statements Language selected as an example: var objects = Enumerable.Range(1,30); Enumerable.Range(1,30).Zip(objects.OrderBy(o=&gt;Guid.NewGuid()),(r,o) =&gt; new{r,o}).Dump(); You'll get pairs of integers 1-30, where the first ones are in order and the second ones are random.
I have always used a dynamic enum class for problems like these. With this you could say something like: myRegion = Regions.IntoDomainMapping[region.ToString()]; OR if you have a table where your codes live you could say Regions.IntoDBMapping[region.ToString()] then can use it like myRegion.Description or myRegion.Code where every you need to. Here is a Gist of my class https://gist.github.com/jejernig/f4dbd72729c4f75ea203
Good example for reinventing the wheel.
Your variables and the Flip method is not available inside a static method. You either have to instantiate Program inside the main method or take your existing code and wrap it in a different class. Edit: Another thing you could do is make your variables and the Flip method static as well.
While you can generate classes at runtime (in unrestricted runtimes (i.e. not store)), you wouldn't be able to have static type checking on them, unless you got an interface that they inherit from. If you don't have an interface, you're left with `dynamic`.
You need some much more basic understanding than what this sub is for. Try /r/learnprogramming
This has nothing to do with C#
I've read just about all of his blog posts and he still manages to boggle my mind.
yeah I always get the same feeling when reading his stuff. I reckon if I understand even 25% of it on first read, I'm doing okay!
Can't help you specifically, but you might also want to try in /r/dotnet, or possibly the [StackOverflow](http://stackoverflow.com/) or [SuperUser](http://superuser.com/) StackExchange sites, and of course, the [Xamarin support forums](http://forums.xamarin.com/).
Thanks for the reply, SO is probably my next visit
Checked the configs and sln files for anything referencing IOS. I have restarted VS. I've deleted the suo files and let VS rebuild them. There's no Itunes on this machine and if Xamarin is using an itunes process its not obviously named.
The only mac related thing run by Xamarin is a Bonjour Service afaik
While this is no help to you now, I feel it's worth telling you that **you should be using version control**. Don't care if it's SVN, git or whatever but take this as a lesson to invest and next time you break your project in an unrecoverable way, you can just diff from your last commit to find out what changed or roll back completely.
I am, TFS. That doesn't change the question.
because if i knew how to do that I wouldn't be here
It's pretty easy and there are a number of ways. I think VS/TFS has it built in (when you click on "pending changes" it does what's basically a diff - that might even be all you need to check here, assuming you've not committed your changes). There are lots of tools to do it as well, like beyond compare. I'm quite partial to [WinMerge](http://winmerge.org/) because it's fairly simple but beyond compare is amazing as well. Install that, then just check out the last version of your csproj file, open Winmerge and it'll ask you for 2 files. Path to the one you've got now and path to the one you've just checked out (I'm not too familiar with TFS but there should be a way to pull out the latest file from the repository.) and it'll highlight any differences.
You know what, I actually undid the pending changes earlier, thinking that would fix it. Sorry I didn't mention that sooner, I just thought of it as i was reading your post
So... you're saying that didn't work? Do you have details?
it probably works i just dont't know how to make the god damn thing work!
Okay, so what happens if you check the whole project out from TFS again? Same issue? I'm thinking...if you still have the same issue and the project/solution hasn't changed, then your environment must have changed. You might have to reinstall VS =\
Nope, that kicked it off and the publish to IOS button isn't greyed out anymore, any ideas as to why?
Thanks!!
Something must be different. It's just a case of figuring out what. Tried diffing the folders between the broken solution and the working one? (Winmerge can do this).
I'm sorry, I mean, checking out the solution brought the publish button back. So it fixed the issue. I'm just not sure why that would have fixed it
Not entirely sure, other than there was still some changes in the project/solution file of your "broken" one and all you've done is check out a working one. Either that or TFS configured the environment automatically (Again, not experienced enough with TFS to know). At least it's fixed, though!
Sadly not. I suspect you're right that it's a Xamarin thing but I don't know much beyond that. 
Sounds like you want something like an [EventAggregator](http://martinfowler.com/eaaDev/EventAggregator.html). As part of the PRISM framework for WPF there is one that you could use. http://msdn.microsoft.com/en-us/library/ff921122.aspx It's not a great implementation, but something along those lines would probably do the job you need if I understand your requirements properly.
Static and instance methods do not behave the same way when they are called. When calling a static method, usually the call would look something like: public static void Main(string[] args) { SomeClass.SomeStaticMethod(); } Instance methods require that you create an instance of the class before calling the methods. This is true for non-static fields and properties as well. Using your code as an example, this would work: public static void Main(string[] args) { // Create an instance of program (instantiate it) var programInstance = new Program(); // Use the instance to access methods, fields, and properties var win = programInstance.Flip(); // Write out to the console or do whatever with the result if (win) // shorthand for if (win == true) { Console.Writeline("You won!"); } else { Console.Writeline("You lost..."); } } That said, it is bad form to create an instance of a class inside the class you are creating instance of. You may want to consider moving your logic to another class in another file. For example, all of the code that is above main can go in a class called "Coin". If my example helped, you are welcome to PM me in the future with questions that you may have.
If you don't use it just uninstall it and check you solution again.
I'd like to use it though. 
The console uses a font to display text - and not all fonts support the king-symbole. Not really anything if I'm not mistaken. 
You need unicode support, Google *unicode cmd prompt* that will get you on your way.
It works in java, but I guess the eclipse console is different from the windows console. Can I change the console to UTF-8?
This gave me an idea so I coded a new format provider that pulls values from a property, field, or dictionary value. The details are on my [string interpolation blog post](http://coding.grax.com/2014/10/string-templating-with-interpolation.html) The source is on [github](https://github.com/Grax32/InterpolationFormatProvider) The nuget package is up on [NuGet](https://www.nuget.org/packages/InterpolationFormatProvider/)
UTF-8 is just the encoding. If the font in use doesn't contain the glyph then it'll show up as a box or nothing at all.
Take a logical look at your curly braces, could one of your methods possibly be outside of where it should be...?
Another wonderful series from Eric. If I get to be half the programmer he is I think I've accomplished something in life.
Beware with this approach. While it is not the same as the one mentioned in the article you depend on implementation details of the OrderBy method and if these details change you may end up with the defect described here - http://blogs.msdn.com/b/ericlippert/archive/2011/01/31/spot-the-defect-bad-comparisons-part-four.aspx
Sadly, less efficient and less correct than Knuth Shuffle. I wonder why they don't add Randomize method in the BCL already. People write the worse code just because they don't feel like implementing Knuth Shuffle every time.
How about next time you tell us *what* the error you are receiving is? If you're using Visual Studio, it will pinpoint the location as well.
Can you try adding missing plus sign in the GUI.Box call: GUI.Box( ..., curHealth + "/" + maxHealth); 
Oh wow, that's much more powerful than my dictionary one!
Could it have changed settings in your projects properties pages so that it's not seen as a WPF app? Check the Application/Build/Build Events pages with a fresh WPF project to see if there are any differences and try changing some settings.
I've been writing an invoice generation system for the past 6 months using Telerik's reporting package and I really like it. You drag and drop your components, then bind them to a view model class. They have both a standalone and vs-integrated designer, and, if you need more customized reports, you can generate them programatically. Edit: you can source your data from classes, ef, raw SQL, xml or csv files, and they have a data structure called a report book that let's you combine multiple report documents into one logical report.
As an aside, you can make the software print to pdf's, combine those pdf's (maybe group them by desired tray), there are many solutions for that, and then send this combined file to printer. This could tide you over should the situation become dire while you're implementing the better solution. In any case if the printing speed seems to be becoming an issue, you're probably near time when you should just outsource this whole printing + delivery thing. 
I had briefly looked into it, but my understanding was they ran on the server, and pretty much just pull the data directly from the DB, I need to apply some logic to the data first to mark each order with various flags.
They can pull data from a stored procedure, so you've got a place for your logic. And you can supply parameters to the report, so you can pass in OrderIDs, etc. 
Thanks, just installed the trail and am having a play around with it, it sounds promising.
Basically, I was looking for a way (if possible) to shrink each 3-line chunk into a single or even two lines for the sake of brevity. Also, I was looking for any input on better solutions. A dictionary approach may be useful, thanks for the thought.
Been using DevExpress reporting for several years, and really like it. 
So i'd need a Mac with vs13 on it? Could I do it from a VM with IOS loaded? Can you publish an IOS app out to your file system rather than to Itunes, so someone could side load it?
isn't c# 6.0 already getting string interpolation like this &gt; string.Format("{\variablename} bla bla bla");
No, you need either a Mac only or both a PC with VS2013 and a Mac. If you're going for a Mac only, there's no Visual Studio there, you have to use Xamarin Studio which comes with Xamarin. If you want to stick working with Visual Studio (like me) and want to develop for iOS, you need a PC and a Mac - You run your app on Visual Studio and then the app will open on the iOS Simulator on Mac. Xamarin can connect both Mac and PC. For your second question, I don't know if there is a way you can publish through your PC, but I don't think you can because Xamarin will look for your iOS certificates which can only be saved on a Mac. So if you want to test and see your app working then deploy it, you most certainly need to buy or borrow one. I haven't tried Mac in the Cloud but that's another option.
It appears to me to be still in flux at this point [https://roslyn.codeplex.com/discussions/570292](https://roslyn.codeplex.com/discussions/570292) I am looking forward to it as I think it will be a useful feature. 
Of you have any questions feel fee to pm me.
If you use the report viewer control you can use them without SQL reporting services. Becomes a local report. We store the report definitions inside our database and then create them in memory and pass them to the report viewer.
So I just opened this script up in Unity and I see your problem. The issue is your two Brackets around your OnGUI() method. You don't need those. You are also missing a + between "/" and maxHealth. By the way, if you see an error in Unity, double clicking it should take you to the line of code where the error exists. EDIT: You also have another bracket out of place. Remove the } after Void Update () {}, and place it at the end of your file. Otherwise you are closing off your class before OnGUI. Your final code should look like this: using UnityEngine; using System.Collections; public class Player1Health : MonoBehaviour { public int maxHealth = 100; public int curHealth = 100; // Use this for initialization void Start () { } // Update is called once per frame void Update () { } void OnGUI () { GUI.Box(new Rect( 10, 10, Screen.width / 2 / ( maxHealth / curHealth), 20), curHealth + "/" + maxHealth); } } 
You don't even need the Report Viewer control for generating reports. Simply use the LocalReport object within Microsoft.Reporting.WebForms\WinForms namespace, then output the generated binary file.
Assuming this is in a DOS cmd, only the basic ASCII characters are supported. Basically anything you can copy into notepad.exe (and not show as a '?') can be used. http://www.flexcomm.com/library/ASCII256.htm. Why don't you create a win app with a simple TextBox or RichTextBox instead? Then you can even use WingDings! ;) 
TextBox? I'm knew to visual studio so I have know idea what you mean. Please explain. Also I heard there is something called font-linking do you know about that? 
I've never dealt with font-linking. One of the most common controls for a win app in .Net is a simple text box. This might get you started: http://msdn.microsoft.com/en-us/library/system.windows.forms.textbox%28v=vs.110%29.aspx
Telerik reporting is pretty solid. Some things are wonky, but once you get the hang of it things go smoothly. The documentation is not the best, but google has helped me find most of what I need to know. The reporting viewer is cool too. Can save right from the viewer in a variety of formats including excel and pdf. I also was able to write a generic report that I can basically just throw a datatable at it and it gives me a a nice output. Basically you can programmatically handle all sorts of stuff which gives you a great amount of control.
I've heard VS is pretty amazing... but I'm on OSX. I may try it on a virtual machine though.
Looks fine. Glad you are having fun learning. Keep it up!
http://blogs.microsoft.co.il/pavely/2009/07/23/changing-console-fonts/ enjoy!
Thanks for the kind words, all of you, I appreciate it. If you have suggestions for how I can make these topics easier to follow, I'd be happy to hear constructive criticism.
I used it at work on my MBPro w/ VMWare Fusion and 2x vertical thunderbolt displays. It's pretty dope. Make sure you allocate max resources to it though...for me that means 4 cores and 8GB+ of RAM before VMWare gives me a warning.
I prefer to do it like this: * grab an example API response or download the response as string * stick it in here &gt;&gt; http://xmltocsharp.azurewebsites.net/ * then use the xml deserializer like so &gt; XmlSerializer serializer = new XmlSerializer(typeof(Serie[])); This crunches the whole API response down to a list of the objects you want! Saves you the trouble of manually writing processing for every field. But, for a first go at this, very well done!
Visual studio is just as clunky. I've been using it for years with R# and I'm so excited to be switching to Xamarin. The editor with code analysis turned on is almost as good as R#.
I've read your question 4 times now and i still don't understand what you're trying to do. If you can explain WHY you have it set up the way you do maybe i could wrap my head around it x)
see this article http://stackoverflow.com/questions/273313/randomize-a-listt-in-c-sharp now with that in mind you use the suggested solution and create a list&lt;int&gt; with the desired number in you case 1-30. shuffle them then assign the value of int list to your list base on the index of both lists. Annnnd done.
I hated using VS pre-2012. 2010 was *okay* but it had some rough edges. I think VS2013 + ReSharper + PostSharp is the most amazing and productive development environment I've ever used.
Unrelated, but you should use standard XML documentation on your methods instead of plain comments: /// &lt;summary&gt; /// Searches for a TV show using the series name. /// &lt;/summary&gt; /// &lt;param name="tvSeriesName"&gt;The name of the TV series.&lt;/param&gt; public void Search(string tvSeriesName) 
&gt; but I rather wouldn't hunt'n'peck docs for things the editor would do for me That's pretty much the only advantage I see when using IDEs as far as writing code goes. I know it's a big deal and that saves you a lot of time, specially when using a new API. OTOH Sublime Text is so advanced in every other aspect of coding and it becomes such an extension of yourself that it's not really clear if it's better to get the advantages of an IDE.
OS X is a horrible development environment. let the downvotes commence
Why would you say that?
Because I've tried to make it work several times and it's just frustrating. 
I use sublime or vim for angularjs development, for now, but vs2013+r# for everything c#. What do you find appealing about sublime for writing c#? I really cannot think of a reason to use sublime for anything except basic scripting and do not really have a good reason to use it for angularjs.
Holy crap, it actually costs *more* than visual studio.
OS X uses the BSD tools rather than the GNU tools which can cause compatibility issues with make (cross platform my arse). If it's really bothering you then you can install the GNU tools from homebrew/macport.
I think you must have missed something. VS pro is the best IDE on the market. Period. I honestly believe that .NET exists because of the IDE. It's that good. 
It's the added layer of intransparancy that put me of AOP. Currently I'm trying hard to configure Apache to do certificate authentication and ldap authorization ... it is such a nightmare if you can't do proper debugging. I wonder how you would track down tricky bugs using these "magic" tools.
I'd just rather not use that shit OS. k thx
&gt; What do you find appealing about sublime for writing c#? Custom snippets, custom plugins, custom macros, multiple cursors, go to anything, intelligent selections, speed, etc.
If you want something full on, with lots of scope for doing crazy stuff, then you might want to look at ImageMagick, and writing your own wrapper. Wrapper being a small class which calls the ImageMagick exe (convert.exe, usually), using ProcessStartInfo. Pretty much just 'scripting' the command line use, and invoke each step of your ImageMagick use along the way inside a temp directory.
Ctrl+Shift+Up/Down arrow to move lines/blocks of code. I'm not very advanced with any of my coding tools, but it drives me insane when I try to use this one feature of ST in VS, only to be slapped in the face because it isn't there.
I think projects targeting .Net 4.5 in Visual Studio has an option to paste XML as a class (Edit -&gt; Paste XML as Classes). It has the same for JSON with .Net 3.5+.
You might want to look into [TopShelf](http://topshelf-project.com) for doing console app &gt; windows service development. It offers very nice functionalities and a convenient way of installing / uninstalling your application as a windows service.
&gt;I'd like to avoid using System.Drawing / GDI+, as they're really old and they may be deprecated soon.(if they're not already) It would be odd to deprecate a component for which Microsoft has yet to provide a alternative that is equal in capability and performance within the framework. Outside the framework, if you want to avoid System.Drawing and GDI+, you can use something like [ImageMagick.NET](http://imagemagick.codeplex.com/)
There is also extensions for multiple cursors and any other things but yeah most of that is baked in
Must have either a massive sln or a crappy computer. I use it mostly for a lot of the convenience stuff rather than as a fix this code kind of thing. Extract method/class, autofix references, go to definition using IoC container, autoadd using, add property and initialize from constructor parameter, etc. just make me loads more productive. My use of it rarely is due to "bad practice".
Resharper has it with Ctrl+shift+alt + arrows, and it is context aware.
Just looked up LINQ, kinda looks like SQL statements, looks pretty cool. From what I've seen on this sub, people go absolutely crazy over LINQ tho, I better learn it!
It isn't as good in 2010 as it is in 2013. Resharper doesn't make good code, it makes navigating and mass changes a lots simpler. You can do lots of things to make life easier. It also provides helpful reminders like telling you when you iterate a list more than once
Is that vanilla VS? It might require Productivity Power Tools :)
Since you already have a mac I would just install Parallels and Visual Studio and give that a shot. Sure, Sublime is great...blah blah blah. I think Vim is great too, but not for .NET developement. The only cool thing about Sublime is its shortcuts. VS has those too. I would not bother trying to write any .NET code outside of VS. Huge waste of time and resources. You can compile, run all your unit tests, debug, manage nuget packages, and deploy, among many other things, from one place. Really it just seems like you are a person that thinks everything but Sublime sucks because you have spent the most time there. So, this conversation is pointless. 
I would really urge you to read this: http://mattgemmell.com/what-have-you-tried/
True. I made this post on my phone at work, so writing out everything I had done was tedious. I should have edited the post when I got on my computer because I figured it out through a lot of googling, and trial and error, and a small amount of alcohol in my system. I resorted to posting here because I mainly want to know if I was missing something really important. My uni lectures didn't cover doing this sort of output at all, so it was a bit overwhelming.
[WriteableBitmapEx](http://writeablebitmapex.codeplex.com/) is a good library for fast image manipulation.
Since most of these posts are the expected "why are you using sublime" rather than actually constructive, you might want to look into [scriptCS](http://scriptcs.net/) to help with your .Net development in Sublime. It uses Roslyn which is the new .net compiler. Scott Hanselman did a good rundown of the basics of using it [here](http://www.hanselman.com/blog/ProjectlessScriptedCWithScriptCSAndRoslyn.aspx). I can't look at the video right now, but you might want to take a look at [this post](http://www.jacobpennock.com/Blog/?p=647) as he goes through some of his Sublime setup that he uses with Unity, the .net game engine.
What is the justification for displaying that dataset in a message box? Just curious. 
JSON paste is a new feature in VS2012. I'm guessing XML is new in VS2013.
LINQ is one of those things that all .NET developers should be at least familiar with. It's not a golden hammer, but damn, it's pretty good and well thought out.
I actually use VIM extensively for .Net development, my main issue with Visual Studio is how much resources it uses. I'll add that I do use VIEmu in visual studio as well, I just find when I'm doing plain coding I find VI to be much snappier. 
wow - this plus the github student package (with a free unreal engine subscription!) should keep me busy for the next years.
Read the posting guidelines in the sidebar on how to ask a question. 
Since you didn't say what your issue was, I'm guessing it's on line 25: if ("Weapon.animation.isPlaying == false") Don't use the quotes; that treats it like a literal string/text. if (Weapon.animation.isPlaying == false) EDIT: This isn't even C#; it's Unity's JavaScript. Perhaps you should post to /r/Unity3D or StackOverflow or to Unity's own [Q/A Site](http://answers.unity3d.com/). I'm going to remove it from /r/csharp /u/LPfisherdude as it's not relevant to its readers. Hope you get an answer from the other subreddits/resources! (also, instead of posting a picture, consider copy/pasting the code in reddit with code formatting, or even using pastebin.)
[Here's the result after a few hours of growing.](http://imgur.com/Il9PWrF)
Nice job you hacking sack of shit. Go fuck yourself.
Not the whole dataset, just the result of the query. To make us learn? Who knows 
[Also this.](https://www.reddit.com/r/csharp/comments/2j8thh/c_using_pointers_addresses_and_offsets_how_do_i/cl9foil) 
That, my friend, is a [Property](http://msdn.microsoft.com/en-us/library/65zdfbdt.aspx).
Like you say, properties are a shorthand for getter and setter methods (they actually are in CIL). If you only define get you can only get the value, you can also use access modifiers so a getter might be public and the setter internal for example, something which you can not do simply by changing the access modifier on the field. It also makes code easier to maintain and change in the future, you could just google this to find examples of usage. 
Well, obviously, you can't. If a property has no setter, you can't set it. If it has no getter, you can't get it That's pretty much why they exist. To abstract the internal state of the class away from the consumer. It's almost always (as in, I don't recall ever having a reason not to) better to use a property than a public field. You can even use the shorthand, like: public string Name { get; set; } which will just autowire the property for you. If you just use a public field, you'll find that, other than it being against all guidance, it also won't work with a lot of libraries.
How are you copying to the clipboard? I'm unable to replicate your issue in a scratch program. using SetText() the text remained after the application exited. -Are you sure you aren't clearing the clipboard? -are you using SetDataObject? If so you need to specify the second parameter as true to have the data remain after your application exits.
Phone doesn't use Windows Forms at all. Windows Phone uses Windows Runtime XAML, which is very similar to WPF, but is also what Metro apps use. If you want to build cross-platform, make a universal application. It will run on Windows Phone and Windows with no (or minimal) changes. http://msdn.microsoft.com/en-us/library/windows/apps/dn609832.aspx Going from Win Form to XAML will involve a completely new UI layer, but you should be able to re-use everything else such as your logic and data access layer without a problem.
I am not Explicity doing anything to clear the clipboard that I know of.
VS is free, and only 500 for pro. I consider that a bargain considering what it lets you do.
I use ultimate + ReSharper at work personally if I'm going to be using vs exclusively its got to be at least premium + Resharper. At home I do my .net development in a customized Vim. I'm not paying for a Premium license. I usually though do personal projects in node and for that I use JetBrains, I'm willing to pay for that its a lot better then vs in terms of what you get out of the box.
Does it search the songs on youtube and download them from there? Is there a download link or source or something?
How does it work roughly? The Spotify api is only available to premium subscribers, and Spotify does not stream mp3s. Is this just some YouTube downloader?
It detects what song you are listening to on Spotify. It then checks YouTube for it and downloads it. At least, that's what it sounds like it does.
It detects what song you are listening to on Spotify. It then checks YouTube for it and downloads it. At least, that's what it sounds like it does.
Nope, read my post above :) 
It uses a custom MP3 search engine built in PHP which actually utilises a another 5 MP3 search engines to select the best file to download 
MP3Clan.net?
An I'm impressed, it does that extremely well, thanks!! you did ask for possible features ;-) Any chance of releasing the source? I use Spotify a lot, and I'd love to know how you get the data from Spotify to your program. 
Its possible that I might, but it won't be for a while yet :)
I guess I can cancel my membership now. Cheers!
Could you at least tell me how it chooses which mp3 is best to download?
It uses a custom algorithm that I made for it :P that's all I can say, I can't give away all my secrets just yet
&gt; Complete support for the .NET 4.5/Mobile Profile API. This means, all the APIs you love are available for you to use. And Unity is still stuck on 3.5 ... (afaik)
This is how long I will wait till I start nagging. RemindMe! 1 month "SPOTDOWN SOURCE CODE!"
Messaging you on [**2014-11-25 08:56:59 UTC**](http://www.wolframalpha.com/input/?i=2014-11-25 08:56:59 UTC To Local Time) to remind you of [**this comment.**](http://www.reddit.com/r/csharp/comments/2k9pq2/spotdown_spotify_music_downloader/clj9gf1) [**CLICK THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[http://www.reddit.com/r/csharp/comments/2k9pq2/spotdown_spotify_music_downloader/clj9gf1]%0A%0ARemindMe! 1 month ) to send a PM to also be reminded and to reduce spam. _____ [^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/) ^| [^([Custom Reminder])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!) ^| [^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback) ^| [^([Code])](https://github.com/SIlver--/remindmebot-reddit)
So it doesn't actually download songs from Spotify at all? It just searches various mp3 sites for the same song you're listening to. Isn't the name "SpotDown - Spotify Music Downloader" a bit misleading in that sense? It suggests you're actually able to save Spotify streams.
How so? It gets the exact song you are listening to on spotify... How is that misleading 
&gt;How so? The same reason I mentioned in my first comment, which you ignored and downvoted me for.
But like I said it gets exactly the same song and usually at a hight bit rate, so I don't know what the issue is? 
Do you know what bitrate it gets by default? Or does it try to find the highest quality one or what? 
It just try's to get the highest possable one which is usually 320kbs :) 
Any chance you'd release the source code? Might be fun to play with a little. Maybe add a feature to tell it what bitrate you want or something.
There is no link to the source code. This is just an ad for a piece of software for pirating music. Why is this in csharp? 
My taskbar got loads of features personal for me that a general purpose taskbar don't have. It's not suppose to be a product, it's a program to suit me with everything I want. It will never be released or anything. I could never get the functionality I get from what I created in a general purpose taskbar.
It doesn't have to be a link to the source, this isn't an ad since I haven't included a download link for it and it would be free anyway so I wouldn't be making money,and it's in C# since it was programmed in C#
One is a property the other a method [Read this to see which to use where](http://msdn.microsoft.com/en-us/library/vstudio/ms229054\(v=vs.100\).aspx)
Fiddler and JustDecompile it is!
Still, you usually expect to see source code or an article about csharp programming with post in here.
That's just what I was thinking haha
Hey, can you link screenshots and some more information?
I don't see what this is useful for...?
Am i stupid? I see no difference
Nah! It was a small patch that changed the status bar color haha. It was from an old discussion, so ignore the before shot :)
Decompiled, unobfuscated source: https://www.dropbox.com/s/0ngaxjzi0420ed7/spotdown_src.zip?dl=0 It uses the following url for downloading tracks: http://mp3clan.com/app/get.php?mp3= It basically grabs the spotify process window title, parses out the track name and attempts to download the mp3 from the above URL. It also hits a spotify API in order to pull the artist and track name. To OP: I hope this post does not come across as hostile because I didn't mean it that way. Your program works quite well! I do find it a little ironic that you have no qualms about freely downloading music but you do have qualms about releasing the source. :P
It also uses a regex since the mp3clan endpoint returns html. I find the regex to not be that accurate since it failed to find some mp3s even when it had them. Perhaps parsing the html and find all anchors with the following class `mp3list-download` will be better. OP look into HtmlAgilityPack on nugget.
One reason is that they compile differently. So if you release version one of your software with a public field that you change to a public property in version two; everyone can't just drop in the replacement, they have to recompile. Also, a lot of reflection-based tools (such as dependency injectors etc) will only look for properties. That, in my opinion, is a fault in the tools, but nothing much can be done. Having said all that, I do agree with you. It's basically come down to being a convention these days. A lot of non-web programmers are still happy to use public fields.
Agreed. HtmlAgilityPack is freaking amazing. I've written way too many scrapers with it.
that's actually the only once I found that is being use from the decompiled source.
Have you set your text twice? That gets me sometimes.
So right now you are clicking on Console Application when you make something. Instead, click on Windows FORMS Application.
Darn straight. VS EXPRESS is amazing by comparison to Xamarin Studio.
It really really made it look like it just ripped it from the soundcloud stream. And thus making it a lot more impressive and "better" for piracy I guess...
Just came early. Thanks!
I see. Also makes even more sense to say that it is misleading since this is /r/csharp. It isn't really misleading to user, but to us who are interested what is happening behind the scenes it is.
yep, some old and customized mono version.. quite recently they announced there is a good chance that changes in the future. but who knows.
&gt; The Navigation for ASP.NET project does by turning full page refreshes into **Ajax requests** that return only the changed HTML. JavaScript-free also means no Ajax requests. Also the good thing about SPA is that you load the application to the browser and keep it there. Then you just incrementally retrieve the new data. With your approach you **always load entire pages again and again**. Why load bloated HTML, instead of just the data you want? It's a huge overhead, especially if you load the entire page and not just a subset of it.
What I meant by JavaScript-free is that the developer doesn't write any JavaScript. The Navigation for ASP.NET project handles all the Ajax for you. It doesn't load the entire page each time. On the server it works out what's changed and only brings back that small piece of HTML.
I think a better question would be "why not"? Properties add *more* functionality and flexibility to your code, but default ones, like the example I gave, are handled by the compiler such that there's no performance penalty or anything. If you later decide that, when a user sets a property that perhaps something else also needs to happen, you can put that code in the setter. Philosophically, it's a tenant of OOP that the internal "state" of a class is hidden, and you should only publicly explicitly expose methods that indirectly read/alter that state. Exposing a field, although it might be functionally the same as a simple property, is like exposing your heart directly. Sure, you might want to expose your heart via an ECG, or via CPR or something, but it's generally a bad idea to have a gaping hole in your chest. Most of the people who come into contact with you are not heart surgeons. They can't, shouldn't, and don't *want to be* trusted with responsibility for your *actual* heart. There are other reasons. Many frameworks or libraries that you use will not recognize public fields. They will only recognize properties. This isn't because they can't, but because they assume that nobody would be using public fields, for the reasons above. The only place in C# where public fields are used, properly, would be on structs. However, structs are meant to be immutable (please look that up), and they don't have any behavior. They're just bags of data. So, in that case, if you're *setting* the value of a field, on a struct, anywhere but where you originally create it, you're gonna have a bad time. This is a question that runs deep. I don't know if I can answer it to your satisfaction. However, trust me when I say that all the cool kids are using properties, and you should be using them too.
It still returns html and not just the data, that IS an overhead. And on another note, how is this SEO friendly?
With Http compression the difference in size is negligible. Github and Twitter both return HTML instead of just the data. A web crawler is like somebody browsing with JavaScript disabled. With JavaScript disabled the HyperLinks still work, falling back to full page refreshes.
Yea, if you read through some of the other comments I made you would see that I said it uses mp3clan and4 other mp3 search engines, and then a custom naming algorithm to find the song and then out of the lot it finds, it try's to get the highest bit rate song
Ya lol, that was kinda my thought too about the source thing. Thanks for decompiling.
That was because I wasn't planning to release the exe, only the source later on then people could see how it worked
Arrays are zero based so when you define an array like this int[7] that array starts at 0 and goes to 6 not 7. Try the following : board[6,0] = br;
I feel kinda bad seeing some of the comments ripping this kid apart. He is 17,according to his website. 
It's the old "discard a creature you'd never ordinarily be able to play on your first turn, then Raise Dead to get it from your graveyard" trick.
In case you're providing links to tutorials, it would be great if you could share them here...
I think this might be more relevant for /r/dotnet than /r/csharp. EDIT: That said, I haven't used ASP.NET in years, but is this fundamentally different than using [UpdatePanels](http://msdn.microsoft.com/en-us/library/bb399001%28v=vs.100%29.aspx)?
Bullshit. I know the answer and I still don't have a clue what to search for. Someone who doesn't wouldn't have a clue where to start. P.S. You're an asshole. 
To be fair the first result on searching for c# array out of bounds exception gave this link http://www.dotnetperls.com/indexoutofrangeexception which has all the details of why... To OP: what are you trying to do? We might be able to help you do it easier
Sadly the Xamarin license to be able to use VS is out of my budget now, and it doesn't allow VS Express.
If you want to find only nested you can prefix it with /div&gt;
Could you please give me an example?
HTML / XML are not regular languages. There's no way to write a regular expression that will exactly match a nested tag (without incorrect results for some inputs). You need to use a proper lexer / parser, or better yet, a C# library that parses HTML into a tree of nodes (there is one but I don't remember the name of it). Once you have a tree of nodes, you can then recursively navigate the tree to look for nested tags that match the requirements.
HtmlAgilityPack is the classic library. CSQuery is also awesome if you don't plan to change the DOM much and plan to mostly search it.
HtmlAgility maybe? Probably the best HTML parser for C#
This was a while back, are you still having trouble with lambdas/linq? If so, I can spend an hour with you on skype answering any questions you have and trying to explain the concept directly. I'm a Senior C# Dev by day, but someone made a similar offer to me regarding Clojure a few months ago and the experience really changed my view of functional programming. 
I've used both and my preference is CSQuery. CSS selectors tend to make more sense to me than xpath when parsing HTML, but each have their strengths and I think it comes down to which you're more familiar with.
If you can get the HTML as text, you can load it into HtmlAgilityPack and traverse it as a tree / DOM.
Yeah HtmlAgilityPack is the one. I remember using it to convert HTML from editable DOM nodes into strict XML, and whitelist HTML tags / attributes on the way.
Thanks for the advice, I'll post it in /r/dotnet. Great question about UpdatePanels. Here are some important differences: * It's for MVC so there's no ViewState bloating requests * It works with HyperLinks so it's SEO-friendly * It uses HTML5 history to automatically enable the back button and bookmarking 
I'm using [Fiddler](http://www.telerik.com/fiddler) , It's a web proxy and I think it cannot do DOM manipulation.So, regex is my only choice
Not that I know of. This is the intended behavior to show you that if you hold down the primary mouse button you will select lines instead of single letters.
The regular expressions of .net are not the regular expressions of theoretical computer science. It can be done (not should be) using balancing groups. http://msdn.microsoft.com/en-us/library/bs2twtah(v=vs.110).aspx#balancing_group_definition
Hey there, I think your problem stems from a slight misunderstanding about how the lazy quantifier, the issue is that it finds the first part "&lt;div&gt;\sclass=" then finds any amount of characters followed by "SomeText_1" and stops then, and doesn't look for the next "SomeText_1", that's what makes it lazy. What you need to do is make sure the first ".\*?" doesn't include a div, there's a couple of ways to do that, but this is what I came up with, a negative forward pattern match: &lt;div&gt;\sclass=(?!.*&lt;div&gt;.*).*SomeText_1.*?&lt;/div&gt; I hope that helps. Edit: formatting
Thank you alot for the indepth answer, i think i understand more now :)
If you want tutorials then head over to Xamarin.com as they have webinars that you can watch already :)
You need to use multiple if-statements.
I know two ways of doing this. Option 1. Use of OR statement: if(Operator == "+" || Operator == "-" || Operator == "*" || Operator == "/") { //Code here } This works if you just need to check if input is one of these and then the same code will run. if you need different code for the various input, then use option 2. Option 2. Using multiple if statements: if(Operator == "+"){ //Code ex. 1 here } else if (Operator == "-"){ //Code ex. 2 here } else if (Operator == "*"){ //Code ex. 3 here } else if (Operator == "/"){ //Code ex. 4 here } Not knowing what your program is supposed to do i can't suggest one or the other. But if it's a simple calculator i suggest option 2. As you need to different things for each operator. Hope this helps
That works thanks! 
I completely forgot you have to restate the "Operator ==" each time. Thanks!
I would suggest using a switch statement: switch(Operator) { case "+": /*Do stuff here*/ break; case "-": /*Do stuff here*/ break; case "*": /*Do stuff here*/ break; case "/": /*Do stuff here*/ break; default: /*Do stuff here*/ break; }
Because if the operands overloaded the || operator, then what? bool a, b, c, d; if ((5 == myNum) == a || b || c || d) { } // Where's your god now?
Less efficient, but more readable: if (new[] { "+", "-", "*", "/" }.Contains(Operator)) ... If you know Operator always has a length of 1, you can also do: if ("+-*/".Contains(Operator)) ...
Or just use the logic XOR operator '\^'.
Assuming you don't have a lot of dead files, the easiest way is to create a new .csproj in a different directory of the same type (class library, console, etc). Move/copy all the files (but not the folders) into that directory, then `Add / Existing Items...`, select everything in the folder, then add them. For folders, create the folder in Visual Studio first, then copy/move the files from the original directory into the created one. Then `Add / Existing Items...` again for those. Once you get everything, start building. If you find a missing reference, add it, and then build again. Keep doing this until it works.
looking at [this file](https://github.com/jonasbusk/snowflake/blob/master/snowflake/View/AView.Designer.cs) you can see it's auto-generated by windows forms. so just try and choose that..
please have a look at messaging libraries. for the pub/sub situation you describe it sounds more sane than using events on a singleton class. should also be more robust and typo-safe than some string-based approach :)
If it is a GUI, most likely it's a WinForms application. That is easily changable after the face, so start as a class library and move from there. If you have a Main(), then it isn't a class library, it's probably WinForms.
This is very cool. Impressed at how many languages they support.
If somebody solves the first challenge, could you please post it for me to see. I can't wrap my mind around what the Console.ReadLine's are reading. In fact, I have no idea how to interact with this thing at all. All we have to do is Console.WriteLine the name of the enemy? Are we supposed to change the default code at all? Couldn't we just erase the "input" array that is storing the enemies and instantly win?
How would that help?
I'm just so confused by what the program doesn't show us. Why can't they make the background inputs more transparent? inputs = Console.ReadLine().Split(' '); string enemy = inputs[0]; // The name of this enemy int dist = int.Parse(inputs[1]); // The distance to your cannon of this enemy What is happening here?
if you set closestEnemyDist to Int32.MaxValue you can remove that 0 condition in the if
I think a common complaint of this one is the arbitrary systems that you're dropped into that you have to read and understand (mostly through trial and error) other than that its a fun and interesting way to teach coding
The system outputs game status to the console. You then read it in via Console.ReadLine() and update the game by outputting to the console. inputs = Console.ReadLine().Split(' '); this produces an array of strings, split on a space, based on what was output to the console by the game engine. In the case of the first challenge, this is an enemy and its current distance. string enemy = inputs[0]; int dist = int.Parse(inputs[1]); this is simply converting the inputs array it a more human friendly variable as well as converting the second value in a computer friendly integer so that we can compare distances. I agree there should be an explanation of this. It took me a few minutes to figure out how the system was designed to work and I have 30+ years experience, 15 in C#! I wouldn't expect newcomers to pick up on this framework. Hopefully the authors will include more detailed tutorials in the near future as its popularity increases. It really is a fantastic tool!
Very true, though I tend to prefer the practice of initializing the value to the first element in the list. As a big fan of optimization, I do hate what I did there but in the interest of simplification I went that route. I was hoping more to show how the system was designed to work since it's a little unusual and could be a source of confusion to new programmers.
Thanks! if (i == 0 || dist &lt; closestEnemyDist) { currentEnemy = enemy; closestEnemyDist = dist; } So why would you put this IF statement at all? Wont you want to log the current enemy and closest enemy distance every single loop of the FOR? 
The for loop will actually iterate over all enemies on the screen. Your goal is to shoot the closest enemy. So what I am doing here is checking to see if the enemy I'm looking at is the closest. If it is, I set it to the variable "currentEnemy" to the current enemy. You might be confusing the "while" loop and the "for" loop in this case. The way it appears the system works, the "while (true)" is the game loop and the "for" loop is reading the console, line by line, which will stop once it has seen all the enemies on the screen, one by one.
Definitely Windows Forms. When you've created a new project and come to add the files, have a look at this link re adding references and the form files: http://stackoverflow.com/questions/863582/copying-winforms-between-projects-in-visual-studio
Programming isn't hard, you only need to not be scared of trying things. If it crashes try something else, if you don't understand try whatever stupid things you can do and you will start to understand how it works. The questions you ask are all good questions, but you can answer them all by trying for yourself. All you have to do is console.writeline the name of your enemy? Try to change the name of the enemy and see what happens. Are you supposed to change the code at all? Of course, since this is a coding game. Could you just erase input and win? Try it, does it work? When you'll have answered these questions by yourself, you may have new questions, but then you will have progressed and you will understand it better and better and in the end you will experience the sheer pride of making something that just works whatever you throw at it. Congratulations, you are now a programmer.
Another thing as well .. it depends how your using the Properties. As it stands, it looks like you're only using them for access protection, or only with everything public! On the other hand, your get and set blocks can contain any other code as well. How about a class where you have three pieces of data, FirstName, LastName &amp; FullName. FirstName &amp; LastName are the usual get; set;. FullName is defined as (according to whatever spec you're working to) first name concatenated with last name. ie. FirstName + LastName. You could also make it so that FullName can't be set, but is just a handy shortcut to get their full name. One implementation might be public string FullName { get { return FirstName + " " + LastName; } set { string names[] = value.Split(' '); FirstName = names[0]; if (names.length &gt; 1) { LastName = names[1]; } } } Obviously, there are quite a few problems with this *very* naive implementation of the set .. but, it's just a quick example to show you what's up.
Mountain one is basically the exact same concept as the first one.
Yeah, I probably spent 10 minutes trying to understand the input. The "debugger" is basically worthless.
http://www.pexforfun.com/ kinda takes that same concept and runs with it. One of my favorite coding puzzle sites. Edit : At least it used to, seems to be giving me a pass on everything, wonder if it broke and just got left by the wayside.
This is really fun :) Thanks for sharing.
Here is my solution. using System; using System.Linq; using System.IO; using System.Text; using System.Collections; using System.Collections.Generic; /** * The code below will read all the game information for you. * On each game turn, information will be available on the standard input, you will be sent: * -&gt; the total number of visible enemies * -&gt; for each enemy, its name and distance from you * The system will wait for you to write an enemy name on the standard output. * Once you have designated a target: * -&gt; the cannon will shoot * -&gt; the enemies will move * -&gt; new info will be available for you to read on the standard input. **/ class Player { static void Main(String[] args) { string[] inputs; // game loop while (true) { List&lt;Enemy&gt; priorities = new List&lt;Enemy&gt;(); int count = int.Parse(Console.ReadLine()); // The number of current enemy ships within range if (count &gt; 0) { for (int i = 0; i &lt; count; i++) { inputs = Console.ReadLine().Split(' '); priorities.Add(new Enemy(){ Name = inputs[0], Distance = int.Parse(inputs[1]), }); } var sortedlist = priorities.OrderBy(x=&gt;x.Distance).ToList(); // Write an action using Console.WriteLine() // To debug: Console.Error.WriteLine("Debug messages..."); Console.WriteLine(sortedlist.First().Name); // The name of the most threatening enemy (HotDroid is just one example) } } } } class Enemy { public string Name; public int Distance; }
Cool, thanks for the tip. That site is now included in my teams lists of fun katas.
I guarantee a search on the exception message would yield many valid, helpful answers for a problem this simple.
Using: while (true) { var count = parseInt(readline()); // The number of current enemy ships within range for (var i = 0; i &lt; count; i++) { var inputs = readline().split(' '); var enemy = inputs[0]; // The name of this enemy printErr(enemy); print(enemy); var dist = parseInt(inputs[1]); // The distance to your cannon of this enemy } Yields this on turn 5: Game information: HotDroid has been targeted Threats within range: Buzz 50m Standard Error Stream: Buzz Standard Output Stream: HotDroid What gives?
I feel a little bad for you, so [I wrote a blog post about it](http://ostlundk.wordpress.com/2014/10/27/how-to-refresh-a-value-in-a-c-console/). Hope that clears things out for you. Google is your friend, and this subreddit is generally not for beginner questions. I'd suggest /r/learnprogramming for that, you might also want to have a look at the sidebar to see what you can find there.
sweet thanks!
&gt; What are katas? See http://codekata.com/ for more info. Other examples are: http://www.pexforfun.com/ http://codingdojo.org/cgi-bin/index.pl?KataPotter
In this sample it probably doesn't have any real effective but at least in games design the performance of Linq can be enough of an issue to avoid using it.
What you need depends havily on your application. All I see that might fit your question is Lidgren. 
[TcpClient](http://msdn.microsoft.com/fr-fr/library/system.net.sockets.tcpclient%28v=vs.110%29.aspx) and [TcpListener](http://msdn.microsoft.com/fr-fr/library/system.net.sockets.tcplistener%28v=vs.110%29.aspx) or [Socket](http://msdn.microsoft.com/fr-fr/library/system.net.sockets.socket%28v=vs.110%29.aspx)
i'm currently looking into [zeromq](http://zeromq.org/)'s .net port called [netmq](https://github.com/zeromq/netmq), looks quite promising so far. its main purpose is to enable you to easily use a wide range of (async) messaging patterns. would love to hear about other users' experience!
 var Operators=new string[]{"+","-","*","/"}; var Operator=txtOperator.Text; if(Operators.Contains(Operator)){ ... } 
I have started working with it and I'm a little disappointed in the lack of documentation (you can usually fall back to zmq's, but that's no excuse). I also don't think it's as async-friendly as you think. That being said, I'm still glad I went with it!
I'll admit, code-wise it's a very elegant solution using a single line of (user written) code. My concern besides the general overhead of LINQ is the scalability. Storing a list of all enemies and then sorting that list will get unwieldy quick, especially when in the end, we only care about one item in that list.
Your goal is to find the closest enemy and output that to "standard out" (using print). Here, you are attacking the first enemy in the list which isn't necessarily the closest. Note: once you output using print, the game will advance to the next step. Make the "print" statement your last action in the while loop.
Thanks for the generous offer! I'm on to a project in another language right now (no lambdas, alas), but I'll definitely take you up on your offer if it still stands down the road. Very kind of you.
Couldn't figure out how to make the thing shoot, much less how it's supposed to make coding fun. The enterprise stuff I do at work is more fun than this.
Yes. That's what I thought. I know this wouldn't work for later stages I was testing on the first one. But it's still odd behaviour, isn't it? When I print name of enemy to error output it says Buzz correctly. But when I write it to standard output it says HotDroid. It's same variable, so how come they're different. Then on the last step (right before I should be hit by Buzz, it's distance is 0 or step before zero) it correctly changes what it prints to standard output to Buzz. Weird...
I succeeded on first stage (which I tested it on) but only because right before the Buzz would kill me it decided to change what it prints to standard output to Buzz (instead of incorrectly printing HotDroid).
ok, i have to admit i'm in love with zeromq's documentation and netmq-specifically i have only read the few okayish tutorials/articles on [sacha barb's blog](http://sachabarbs.wordpress.com/distributed-systems/). the poller thing sure is a strange pattern and does not really fit the .net world. can you share more about what's not async? and in general, if you have a minute and feel chatty, just let it all out. i'm still in planning for my next project, so i suck up all the first hand, non-biased info i can get :) 
Your classes are correct, but you try to serialize it to the wrong type. JsonConvert.DeserializeObject&lt;List&lt;RootObject&gt;&gt;(str);
thats no query, that a response i guess :) other than that, if you can rely on this format you can let [json2csharp](http://json2csharp.com/) generate classes. both json.net and fastjson have ToObject&amp;lt;T&gt;() methods, although i don't recall their actual names. anyway, you can give them the root object's type T and most of the time they spit out the corresponding object hierarchy. edit: sorry, didn't read the question too carefully :(
thank you for your answer. JsonConvert suggests to insert a local variable, which in my case is called json. i think we are talking about to same tho. string json = @"{""id"":1234, ""date"":...}"; to be honest, i have no clue, who i could use jsonconvert anyway. something like that would make sense to me: var j = JsonConvert.DeserializeObject&lt;List&lt;RootObject&gt;&gt;(json); foreach (var v in j) Console.WriteLine(v); **edit, output:** json.RootObject 
sorry, my mistake. I'm not sure which one to use. ~~With obj.id i get my id and it works perfectly but i can't access the values, start, end and sometext~~ You are amazing! i got it to work var obj = JsonConvert.DeserializeObject&lt;RootObject&gt;(json); foreach(var v in obj.values) Console.WriteLine(v.start);
It's my first serious IPC project and I'm just getting started, so I'm by no means the authority, and I might be doing things wrongly. As someone who is new to it, I've been disappointed by the lack of thorough examples and documentation. I ended up going with a Router/Dealer pattern for my IPC scenario (separate processes entirely). A broker class binds a router socket to a port (I chose 5555), then a dealer socket to another port (5556). A client class then connects to the request socket on 5555, and a worker connects to the response socket on 5556. My application is built on WPF, and the limitations I have found (at least with my implementation) are mostly due to synchronous nature of waiting for a response. The library has zero support for the Task-based Asynchronous Pattern (TAP). I haven't quite figured out how to make a `SendMessage():response` that is `await`able. I did see a recent blog post that showed how to wrap a poller with async callbacks but it doesn't truly adhere to TAP, as callbacks don't support cancellation. No support for `CancellationToken` is not ideal, but workable if you just need the performance. I might add more thoughts on it later but for now I need to get to work on it!
Ah ha! I didn't catch that part of the question. So what I think is happening is actually a problem with the console output. The list order is probably: HotDroid HotDroid HotDroid HotDroid Buzz so.. if it's only outputting the last value from printErr in the for loop, but outputting the first value sent via "print" then that would explain the console output. What happens when you output the value to standard out after the for loop? while (true) { var count = parseInt(readline()); // The number of current enemy ships within range var testEnemy = ''; for (var i = 0; i &lt; count; i++) { var inputs = readline().split(' '); var enemy = inputs[0]; // The name of this enemy printErr(enemy); testEnemy = enemy; var dist = parseInt(inputs[1]); // The distance to your cannon of this enemy } print(testEnemy); } In this case you will have looped through all enemies and output them to the console via standard error and then written your target once per game loop. edit: formatting
Common guideline: What is required for the object to work should be passed in the constructor. Because that way you _need_ to pass it. With properties you can just skip that step.
Are you talking for the actual implementation or just for testing purposes? Both? 
In the best case you'd accept an interface in the constructor. In production you can then pass the actual implementation, and in testing you pass a mocked instance.
Lidgren is awesome imo
For what reasons are libs like WPFMediaKit and VlcDotNet not applicable? Edit: just saw your comment. You should just edit that into your main post.
I'd be more curious to know what it is you're actually doing that causes all of those to crash. The only time I've ever managed to make SQL Server Management Studio crash was due to an out of memory exception. 
I guess my concern is that using static is considered bad form, correct? This is why I was annoyed that I had to keep using Static in other methods that existed in the main class (since the main class itself is not instantiated as an object, and thus requires Static to have access to the method/members inside of it). And yes - this was mostly for learning about delegates, not for a particularly large project. I think I understand the issue upon thinking about it and talking with a few friends. I think my understanding is correct - the only way to know for sure will be to sit down tonight and try it out :) I'm sure if I run into any other bizarreness w/r/t static/main/classes I'll be posting back in this thread. Thanks for the feedback.
I can see how passing a stack of repositories could become a bit of an eyesore. I can live with it in a testing scenario. Any rationale against invoking inside the object and having an overloaded "testing" constructor that would would the provided (mocked) instances if passed in?
Static is not really bad form, but a project that uses only static methods would be really strange (unless its some kind of mathy library). I don't know anything about Unity, but in general, one option is to make a Startup class that has the main and nothing else. Then you can go about instantiating things... That's sort of like what you'd see in a main.cpp. And that's generally fine. A general note about statics - Some problems don't lend themselves to using OO everywhere, so statics are fine. If you find yourself instantiating classes that don't have any state, just to call a method, then I don't see any reason to not have it just be a static function.
I don't understand what you mean with *testing scenario*. The objects you need when testing should be no different from regular production execution, just that this objects are mocked.
&gt;I guess my concern is that using static is considered bad form, correct? It's only "bad" if you make it so, static by itself isn't bad, in fact you can't even implement some things without it, if you don't yet know what it can be good for then you probably shouldn't use it except in places where you have no choice, if you're taking CS class in school the first time you'll encounter static variables is probably in singletons, which in themselves can be good or bad depending on how you use them. There's also no requirement to mark the class that contains your Main method static, only the method itself has to be static, you can instantiate the class containing Main and use non-static methods like so http://pastebin.com/pmrHfPqX
You're on the right track. Examples tend use static methods so they can demonstrate a language feature or technique without a lot of unnecessary code. This also allows you to run the program so you can see how the code behaves. But, only a trivial program would actually use that pattern because of its limitations. When you write a real program you should be creating classes that encapsulate the functionality into logical units. Typically you would use one source file for each class. Then you would instantiate the classes and call their methods as needed.
Sorry, something like this... **Testing scenario:** var obj = new BusinessObject(param1, param2, mockRepo1, mockRepo2); //... inside the object ... public BusinessObject(string param1, int param2, IRepoOne repoOne, IRepoTwo repoTwo) { _repoOne = repoOne; _repoTwo = repoTwo; } **Production scenario (for cleaner code):** var obj = new BusinessObject(param1, param2); //... inside the object ... public BusinessObject(string param1, int param2) { _repoOne = new MockRepoOne(); _repoTwo = new MockRepoTwo(); } They'd all be driven from the same interface and therefore not skewing the testing validity ... as best I can tell.
Oh my no. 1. If you're going to do this, use [WindowsFormsApplicationBase](http://msdn.microsoft.com/en-us/library/microsoft.visualbasic.applicationservices.windowsformsapplicationbase%28v=vs.110%29.aspx) 2. If you're not going to do that, then at least use a mutex properly! Don't use the constructor to claim the mutex, use the WaitOne method so you know that you successfully claimed it. Don't forget to handle the AbandonedMutexException in case you get it but didn't clean it up properly last time. Also for the love of correctness *dispose* of the mutex when you're done! Your mother should have taught you to clean up after yourself, I don't know why you'd stop doing it just because you're writing code. Also don't bother touching the garbage collector (if you use GC and you're not a. implementing the Dispose pattern properly, or b. dealing with COM interop, then you're doing something wrong).
Heidi: constantly crashes with simple operations, like viewing the data for a table. SQL Manager: indefinitely frozen when opening up a connection that worked just fine a couple minutes ago, also very rarely freezes when altering a table. SQL Server: indefinitely hangs when I have it open for a long time (12+ hours) and it closed unexpectedly when I was going through the options. === I could be doing things horribly wrong or just be unlucky I suppose.
Happens on multiple environments. But, what should I be checking for or what tools should I be checking with?
With the constructor approach you can always be sure that you actually have an instance - because you can easily check for null there and throw an exception immediately. When you go the approach with properties.. Well, they can always change. The assignment is out of the classes reach - you need to check every time you need to use it for null and throw an Exception then (or risk a NullReferenceException). I consider that a bigger maintainability/practicality issue. It's also a matter of "when you have an error, return as soon as possible", which would be in the constructor.
This is too low level. He probably wants to send on the level of classes.
I was going to suggest ZeroMQ too.
&gt; SFML surfaces don't HAVE HWNDs Doesn't this cause all sort of other problems too? What .net are you on? 
Sorry, I was referring to the dual constructor route. I think I am in agreement on the property route being trashed. Thanks for the good discussion, nonetheless.
This. This is how you make a stack maintainable and testable.
These are some pretty extreme circumstances...I use SSMS on a daily basis and have left it open for literally weeks at a time with the same connections open. What are you doing typically in SSMS?
The SFML window itself has a HWND (SFML is cross platform, so on windows it does HWND's, on Linux X11 sockets and whatever Mac uses for that platform) but the surfaces (think of it like, a 2d texture in memory) doesn't have a handle like that. Using .net 4.0 with SFML 2.1, if you were curious. SFML is a framework, usually used for video games.
Then how would you test the second constructor?
&gt; You must add Json.net(v 6.0 or Higher) references on your project That should be a dependency of your package :)
Guessing from the limited information you provided about what you need, it looks like you need to create an API. I'd recommend looking in to [ServiceStack](https://servicestack.net/) - it will help you built end-to-end (client &amp; server), and teach you a lot of things that are becoming industry-standards (although "standard" is always debateable).
Not only is static not bad form, Visual Studio will actually tell you to use static when possible. It is one of the rules that come with Code Analysis.
As a side-note to further detail: * ServiceStack will take care of all the network communication for you - serializing/deserializing your [DTO](http://en.wikipedia.org/wiki/Data_transfer_object)'s to send them over HTTP. * You can still use message-queues as other users have suggested here. [RabbitMQ](https://github.com/ServiceStack/ServiceStack/wiki/Rabbit-MQ) &amp; [Redis](https://github.com/ServiceStack/ServiceStack.Redis) are both supported out of the box. * If you have an account, PluralSight has [extensive training](http://www.pluralsight.com/courses/table-of-contents/service-stack) available. * [Here's a nice long post](https://github.com/ServiceStack/ServiceStack/wiki/Why-Servicestack) about why you would want to use this framework. * There are some good arguments for using ServiceStack vs other popular API frameworks like [WCF](http://codealoc.wordpress.com/2012/03/24/service-stack-vs-wcf-data-services/) and [WebAPI](http://stackoverflow.com/questions/9699083/servicestack-vs-asp-net-web-api#answer-9709236) Full disclosure: I'm not affiliated in any way with ServiceStack, just a fanboy.
One thing I would suggest, at first glance, is to abstract an interface layer out of your wrapper/services. This way developers could remove the dependency of instagram if they needed to test their own source. Just a sprinkle of IOC is all. 
Give Toad for MySQL a try http://www.quest.com/toad-for-mysql/
You don't need to call waitone since the code checks if the mutex is owned by the thread, and it should if no other instance is running 
Squirrel is all you'll ever need
Valid point. While I think I can justify the constructor that defines the concrete types as tested if the the other tested out it would leave a percentage of the code base unable to be directly tested. 
Writing in IL, you don't have to call your base class's constructor at all. This may not verify, but the .NET runtime isn't bothered by that at all :p.
This is just bad code. It doesn't respect the .NET naming conventions, it has a dependency that must be installed separately as /u/Banane9 noted, it's not even formatted properly, it has tons of repeated code, most of the repo is made up of files that should be ignored, and it's not really useful since it could be re-written cleanly in a couple hours at most. This'd be fine in a "how did I do?" post, not as a link-only post with a PayPal begging link at the end.
Nice article. Just wanted to say that it seems like sooo much effort to get this stuff working... For instance you want to add a single role for admins. You have to change so much in the default template just to get it working.. Seems like a step backwards.
Only thing I miss from the old way is that shitty manage page you can launch and just set up roles that way. Literally the only thing I miss :) I ran through this post over the weekend since I needed to crud my users and roles. Great post, very clear, but god damn it was a lot of work.
There are two keywords in C# and a language construct for this. Imagine you have a Control called *control*: if (control is InputBox) { // If this control is an InputBox... InputBox inputBox = (InputBox) control; // ...Cast it to InputBox... inputBox.EnterPressed += MyFunc; // ...Now we can use it as such } That showed the first keyword (*is*), and the construct (*casting*). I'm sure you've probably used a cast before? Anyway, the final keyword is (*as*), which does the job of *is* and *casting* at the same time: InputBox inputBox = control as InputBox; // Casts control to InputBox if it is an InputBox, or... if (inputBox != null) { // ...Sets inputBox to null if it isn't! inputBox.EnterPressed += MyFunc; } In general, you should use *as* and *is* when you're not sure if the thing you're casting is what you're casting it to (if that makes sense). But if you're sure your target cast is correct (or if it's wrong, it should throw an exception), use *casting*. 
SQL Manager: http://www.sqlmanager.net/products/mssql/manager SQL Server: http://en.wikipedia.org/wiki/SQL_Server_Management_Studio It doesn't necessarily crash, but hangs indefinitely, which I could argue is just as bad.
Is your internet connection dropping?
I have been reading through your whole series over the last week - great work! Having an actual repo to look at is really nice too!
Exactly my point, wanted to make a basic site with two roles and when I realized I'd have to spend half a day just to put two user roles in that was a major let down, completely put me off... At least we've got this article now which I'll follow but how hard would it be for a complete beginner just experimenting with MVC to figure this one on his own... Bonkers!
I've had SSMS hang and spit errors at me if I try to connect to a database table during a period of time in which my VPN connection has dropped, check you connection and check your command timeout settings also. http://stackoverflow.com/questions/1137190/changing-the-commandtimeout-in-sql-management-studio I've been using it for years with no major trouble, it might be your environments connection or settings.
I didn't read through the whole thing, but it seems like a solid article. The same author's MVC articles on Identity were a lifesaver for me.
I'm just a beginner but I was cruising along and really happy with the C# environment until I ran into Identity. It just killed my motivation to keep working on my project. Everytime I pick it back up I just get pissed off at it. That and trying to implement multitenancy using EF. (impossible?) Are there any better alternatives in other languages/frameworks though? I looked at PassportJS on node and googled a bit and couldn't turn up anything that really looked any easier to implement.
Why are you using the WebSecurity class? That's more for webmatrix. To see an example of authentication just create a new project with the MVC template and see the sample there. Also, what does your model look like? the method you are calling expects a string,string.
I haven't changed anything yet; I just made the template and tried to run it... And I did pick the MVC template; I don't know how to use it yet...
Is it going to be the sql server as well or do you just mean having a local sql server as well during development? If the first you might want to go with server 2012 but if you want to treat it like a desktop and not a server go with 7 or 8. 8 is an improved version over 7 and if you need the start menu back you can get a replacement in seconds. 
linq can simplify it even more with OfType&amp;lt;T&gt;() http://msdn.microsoft.com/en-us/library/vstudio/bb360913(v=vs.100).aspx this way you don't need no manual type check as the result will be of IEnumerable&lt;T&gt;.
cool! didn't know that existed :)
I'm using mvc4.
 InputBox i; if((i = control as InputBox) != null) {...} would also work and be a safe cast. but instead of manual looping i'd prefer the linq version for brevity.
As much as I like windows 7, I'd say get windows 8. You'll be able to use VS2013 to make phone/store 'apps'.
I don't know of any alternative identity providers. There are a bunch I'm sure, but I've always muscled through the default one. Try and push through. I have my gripes about it, but it really does a great job and is fairly flexible. And man oh man do I love and hate EF. 
If you plan on developing at some point .NET 4.5 applications for Windows Store (either Windows 8 App or Windows Phone), then you may need to go with Windows 8 as those platforms cannot be developed for under Windows 7. Also, it looks like Windows 10 will be made available for free (or significantly reduced price) for all Windows 8 users, so this may be another factor in consideration.
I like windows 8. 8 is required for the new Phone SDK.
That's nothing out of the ordinary. If you're not running out of memory, based on what you've said, I would start looking at stuff like virus infections, etc. For me, SSMS/BIDS have been remarkably stable. 
Yeah, but from there you can add as many roles as you like. There is some structural stuff to do at first, but after that, you're done. Then it becomes more about the rest of your application. Also, RBA is not really the best way to do auth scenarios. I am not a security expert, but I think Claims-Based auth is really the way to go for anything beyond the most basic. 
I don't know about a step backwards, because I never used the old one, but - everything about the authentication libraries seems very complex and hard to use in practice. There are like a gazillion moving parts and very hard to separate out the parts you need.
You can get the preview version for free right now.
Scott Hanselman posted about an [Identity Manager](http://www.hanselman.com/blog/ThinktectureIdentityManagerAsAReplacementForTheASPNETWebSiteAdministrationTool.aspx)
Unless you're developing for that new platform/OS, I wouldn't recommend any Windows preview release for development. EDIT: Especially for development at your workplace.
Whoa! Starred that repo! I must have been googling some dumb terms, I typically click his links first when they show up. Nice share, now repost it as a full post so the world can see!
why do you initialize the InputBox variable? just do: if ((control as InputBox) != null) { }
easy: because in general you want to use the object afterwards. so by declaring the variable you already have a reference when/if you enter the if-block. otherwise you'd have to do a second cast to get to a hold of the instance and that's unneccesary. also your version is flawed in the sense that it potentially always produces a reference, null-checks it and throws it away. if for some reason you have strong feelings against the declaration outside the if-block, you should use *is* and cast afterwards, like the person before me said. 
What's preventing from doing he same on 7? I'm just not sure if I'm missing something
VS2013 requires windows 8.1 to be able to make 'apps'. If you want windows 7, you would have to use an older version.
That's not c#, that's VB.net. The following is how you declare an int in VB.net: Dim count As Integer = 0 
Wow I am such an airhead, that explains soooo much. I was losing my mind over so many things lol... Thanks friend!
No prob.
That's weird, I tried installing it on my windows 7 laptop, and it said I needed windows 8. ^On ^an ^unrelated ^note, ^if ^you're [^good ^at ^using ^mvc ^can ^you ^help ^me?](http://www.reddit.com/r/csharp/comments/2kl18q/aspnet_mvc_template_doesnt_work/)
Oh jesus, who would ever think that syntax was a good idea....
I'd go with 8, because its really not as bad as people made it out to be. The start menu doesn't bother me but if it did I'd just get one of the replacement bars and be done with it.
LOL - hope you came right. Yeah for some reason Visual Studio defaults new projects to VB.net - very strange since C# seems to be the direction where things have been moving for a while. 
I don't think you understand how zeromq provides asynchrony. You send a message from one agent to another, which might be running on a different thread within a process or different process within a system or different system on another server. You don't need to have async api calls as the message communication is async.
Absolutely I'll take a look if I can be of help a bit later today
Oh, cool. Thanks. Totally worked.
I like the lack of semi colons , the isnumeric function and the lack of parenthesis in an if statement. But other than that, nope.
And I have been using these sites as references. http://www.codeproject.com/Articles/18102/Howto-Almost-Everything-In-Active-Directory-via-C
I am just going to start from scratch and learn from the beginning. All I have is a .aspx website and a web.config. The website just has all the formatting, text boxes and such done. I just do not know where to go from there. 
Use System.DirectoryServices Something like this: public void GetADUserInfo() { try { //This is a generic LDAP call, it would do a DNS lookup to find a DC in your AD site, scales better DirectoryEntry enTry = new DirectoryEntry("LDAP://OU=MyUsers,DC=Steve,DC=Schofield,DC=com"); DirectorySearcher mySearcher = new DirectorySearcher(enTry); mySearcher.Filter = "(&amp;(objectClass=user)(anr=smith))"; SearchResult resEnt; try { foreach ( resEnt in mySearcher.FindAll()) { Console.WriteLine(resEnt.GetDirectoryEntry.Properties.Item("cn").Value); Console.WriteLine(resEnt.GetDirectoryEntry.Properties.Item("distinguishedName").Value); Console.WriteLine(resEnt.GetDirectoryEntry.Properties.Item("name").Value); Console.WriteLine(resEnt.GetDirectoryEntry.Properties.Item("givenName").Value); Console.WriteLine(resEnt.GetDirectoryEntry.Properties.Item("displayName").Value); } } catch (Exception f) { Console.WriteLine(f.Message); } } catch (Exception f) { Console.WriteLine(f.Message); } } https://social.msdn.microsoft.com/Forums/vstudio/en-US/e7b376f4-b404-46ff-ab49-d7668b8a3c1b/displaying-active-directory-users-information?forum=netfxbcl 
If that's a newline in the header collection, you'll want to remove that.
I wonder how exactly they're implemented by MS.. And what the reason for them being slower is.
I'd imagine there are threading concerns. 
Good point, though I believe 8/8.1 were able to upgrade from technical preview, though that may have been the RTM preview.
One thing to note is that you don't need the "this." either. Since you are already in the class it's implied since Article is already a member of the class.
I appreciate your explanation but that isn't really what I meant. I meant that the method calls are synchronous and do not support the Task-based Async Pattern out of the box. The author has noted this in several blog posts. 
ReSharper does warn about it, albeit as a "suspicious cast: there is no type in solution which is inherited from both 'double' and 'int'." which could still lead to issues in different scenarios. Though I cannot find anything about pragma either. ^^^edit: ^^^typo
Ok, I've been writing C# for years, and I *thought* I knew the language pretty well, but I'm having trouble explaining why this is even legal. Can someone explain to me why this doesn't complain about the type mismatch in the first place?
&gt; suspisious Was that a cut and paste or did they really spell suspicious wrong? =P
This..this right here is what threw off my server-side Excel generation bug-hunt for a while until I noticed it.
Because the foreach loop automatically casts each element in the enumerable to the specified type, in this case double -&gt; int, which is perfectly legal. My preferred way of avoiding this is to just use var in foreach loops: foreach(var r in p) { ... }
From the ECMA C# specification, page 238, the statement: foreach(T item in collection) { ... Embedded statements... } With the collection containing elements of type TC, is expanded into something like: IEnumerator&lt;TC&gt; enumerator = collection.GetEnumerator(); T item; while(enumerator.MoveNext()) { item = (T)enumerator.Current; ... Embedded statements ... }
This unfortunate behavior is completely normal, expected C# behavior...which is why the C# compiler doesn't throw a warning. Here is the relevant text from the C# spec ([C# Language Specification 5.0](http://www.microsoft.com/en-us/download/confirmation.aspx?id=7029), page 323). A statement of "foreach (V v in x) *embedded-statement*" is expanded to: try { E e = ((C)(x)).GetEnumerator(); try { while (e.MoveNext()) { V v = (V)(T)e.Current; embedded-statement } } finally { … // Dispose e } } The important line is "V v = (V)(T)e.Current;" (e.Current is of type System.Object). In this case: int i = (int)(double)(e.Current); You can see that in the IL generated for your code snippet (**conv.i4**): IL_0018: ldloc.2 IL_0019: ldloc.3 IL_001a: ldelem.r8 IL_001b: conv.i4 IL_001c: stloc.1 IL_001d: ldloc.1 IL_001e: call void [mscorlib]System.Console::WriteLine(int32) So this is completely expected, normal behavior (in terms of the C# language), but can be quite surprising if you aren't expecting it. =/ In any case, that's why it's not a warning: It's normal behavior as far as C# is concerned.
Can you please refer to the specs because the following produces an error: double X = 3.4; int Y = X;
I don't actually code in .NET languages these days (preferring to use Python for fun projects and C or Rust for serious ones, in general), but why do you say you would favor C#? Just curious. I used to think along those lines, but a few months back, I was thinking about designing my own programming language, so I began thinking deeply about what makes a language good and what makes one bad. VB.NET can do basically everything that C# can do, except for unsafe pointers. In exchange, you get a language that is case-insensitive, and has several nice bits of syntactic sugar. When I was looking at language design, I quickly concludes that case sensitivity has caused me so many issues over the years, and given me absolutely zero benefits. Case sensitivity also encourages really poor naming conventions such as a singleton class being uppercase and the singleton instance being lowercase. For the reasons of case insensitivity, and the absence of unsafe pointers, I concluded that VB.NET is actually a better language. It's safer and less likely to cause a developer to make an error. If you *need* something C# offers, you can always make a C# file and do whatever needs to be done in there. No real disadvantages I can see, except for the stigma of it being VB.NET. But, like I said, I don't typically use those languages anyways these days, so this is just an idea I've had floating around for a few months.
So with no #pragma to be enabled it's up to something else like the warning from resharper that was posted? Bah.
That is an implicit conversion, which is only allowed to go from more restrictive types to less restrictive types, i.e. going from int to long is okay, since a long can contain all numbers that an int can, but going from long to int is not allowed, since some numbers that can fit into a long cannot fit into an int. To do so, you must explicitly cast the long (or in your case, double) to an int by doing the following: double X = 3.4; int Y = (int) X; This will of course incur loss of precision (Y would be equal to 3 in this case) which is why it produces an error. In the [ECMA specification](http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-334.pdf), implicit numeric conversions are described in section 13.1.2.
I was hoping there was some conversion warning available like I use for declared but unused variables just to mention "hey, did you really mean to do this?"
That is exactly the reason why you cannot implicitly convert a double to an int. But I can totally understand your frustration, which is why I would always recommend using var in foreach loops (except when type casts are actually needed).
An important thing to notice is that C# 5 moved the declaration of the `item` variable *inside* the loop, which fixes issues with closures that capture the variable, e.g.: var actions = new List&lt;Action&gt;(); foreach(int n in new[] { 1, 2, 3 }) { actions.Add(() =&gt; Console.Write(n)); } foreach(var action in actions) { action(); } In C# &lt; 5, that code printed "333" since `n` was the same variable in each iteration, so it ended up with the last value. In C# 5, it prints "123" since `n` is now a different variable each time.
I tend to use this. when assigning values to instance members. It makes things more clear and lowers the risk of doing something you don't intend thanks to a shadowed variable.
Perfect, thanks! Now, I've read the relevant section of the spec, but I still don't see a clear reason to make the explicit cast. Is there an obvious reason I'm missing? (I admit that I get a little lost sometimes when the spec is juggling a bunch of different types.)
I know nothing about R, but it looks like there's an implementation for .NET. (Called, predictably, R.NET). If you can use that to run your R code, then interfacing it with a C# frontend should be trivial.
It stems from before C# had generics, when collections were not strongly typed (elements retrieved from collections would be of type object). Since it was almost always the case that you would cast the item from the collection (of type object) to its actual type, the cast was added as syntactical sugar.
You still don't get, it there is a reason they are synchronous because the asynchronous nature of zeromq is in the messages queues.
I don't think that downvoting me is the appropriate response to a differing opinion. That is starkly against reddiquette. Yes, I absolutely understand that a message queue can be asynchronous. Here's an oversimplified example. * (WPF) UI thread method call that requires IPC * `var response = netMqClient.SendMessage("something"); // UI thread is waiting for response...` **This** implementation is synchronous, because it's blocking the UI thread from moving on, which is absolutely going to cause performance issues. NetMQ is fast, but it's not *that* fast that it can be abused in this manner.
interesting. i did not know you could do the assignment in the "if" block in C#. what are you opinions on the following: InputBox i = control as InputBox; if (i != null) { } isn't that just another way of writing what you wrote?
Use F# for the best integration. http://bluemountaincapital.github.io/FSharpRProvider/
He's making an explicit cast, which was a requirement before generics were introduced. 
agreed, I just wanted to hear your thoughts. thanks!
before you start, do some research on the LDAP query language and how AD is actually set up. It's not a relational database and that confuses some people. Once you understand all of that, the helper classes included in the FCL will make more sense. There are two ways that I know that work with the helper classes. One of them is incredibly slow, the other is fast and requires knowledge of the LDAP language. In short, what you're looking at (shown in emperorOfTheUnivers's post) is that you create a directory entry by telling it where to look (e.g. OU=Users, DC=Steve, DC=Schofield, DC=com). You then perform the query by way of a filter. The filters are confusing if you don't understand the scheme which is why I say to go learn that first.
Dumb question, but is your backend setup? Usually those tutorials walk you through getting simple membership set up which will initialize your database with everything it needs for those methods to work. It sounds unrelated, but errors bubble up in misleading ways when your junk isn't set up right. Have you tried stepping through the process and desk checking the values?
If anyone says anything other than the null propagation operator they are not c# devs. So much boilerplate null checking disappears instantly.
Instead of polling the drive every second, it's better to register for a [drive removal event](http://www.codeproject.com/Articles/18062/Detecting-USB-Drive-Removal-in-a-C-Program) or just get creative with [FileSystemWatcher](http://msdn.microsoft.com/en-us/library/system.io.filesystemwatcher%28v=vs.110%29.aspx). To enhance the protection, consider hashing the [USB serial number](https://stackoverflow.com/questions/1176053/read-usb-device-serial-number-in-c-sharp) combined with the value from a file and use it as the myString content. This way, one can't just copy all file from your flash drive and use it to keep your computer unlocked.
The send message sends to a local queue almost instantly, where a background io thread handles the queuing. There is no need for async method calls. 
I've literally never got FSW to work, even running as admin and granting my process crazy privileges like SeBackupPrivilege / SeDebugPrivilege. I agree that drive removal events are the way to go, if you're going for USB mass storage.
Probably the same reason I never manage to get IIS to work. Debugging ASP.Net is easy as blinking, yet trying to test running webservice against my test client is impossible when I never manage to deploy the webservice.
Okay, it seemed like the problem I had was that the address I gave to AddAddress() was wrong. My follow-up question is, now that my app is asking every time it gets started whether or not it's allowed to make changes, I want to check if the url is already added to the ACL, but I can't find where I can get access to the items in the ACL. Any suggestions?
Throw up an example, please. 
Your example is valid the netMqClient.SendMessage should not block unless the internal queue buffer is full at the HWM level. This is from the main zmq docs though not sure if netzmq does it differently. The background IO thread is built into zmq not something you need to implement BTW. PS I upvoted you sorry that I down voted you before.
Nothing excites me, they are all minor things.
Anpther option would be to use a ManagementEventWatcher, [like so](http://stackoverflow.com/a/19435744). Then you just put the check and lock logic in the remove event handler. With either of these solutions, one would also need to set a SessionSwitchEventHandler to check that the USB drive is present upon unlock.
I have used casts before, but I've never had to cast objects before. Thank you, this is what I was looking for. One thing though: Is this creating a copy of the InputBox, called inputBox, and therefore changes made to inputBox will not appear in the original control? Or is it actually creating a reference to the original, and changes made to inputBox WILL appear in InputBox?
Doesn't foreach create a copy of each element, rather than a reference to the element? In which case, changes made to the item will "Disappear"? So it's fine if you're not making changes, but no good if you are?
Interesting... thanks!
It likely comes back as ascii or unicode text, so you'll need to figure out which, use the Encoding.GetString method on that byte array from your stream, split it on space using String.Split method, with a max of 1 or 2 (i forget the exact IRC command format) and hand those guys plus the message off to a command processing module that will eventually return the text to display to your client along with some meta data, like is it a PM for a private window/tab, or a system event like ping/pong/whois for the system/status window/tab.
It depends whether or not InputBox is a reference type or a value type. Obviously, reference types have reference behaviour. The majority of classes in .NET are reference types, and therefore the majority of mutations will be through a reference like this. Therefore, I don't know InputBox, but I would bet money it's a reference type.
After you've preselected the inputbox you can safely cast to it.
Interesting concept, horrible English :/
First of all, replying to ping is really easy. Take the line, replace PING with PONG and send it back. Second you might want to use the button to send all the connect data synchronously and once you're connected you fire off an async method to keep reading the input. just make alive a private member and to disconnect you set it to false. Here's my bot stripped down to the bare essentials: http://pastebin.com/YF6XbtUy
The Noda Time library may offer you features you want but I don't understand your issue enough to be sure. http://nodatime.org/unstable/userguide/calendars.html discusses the Arabic Calendar and mentions methods for adjusting days. 
Thank you, I looked at Noda Time, but it does not seem to address my issue. When I feed today's date (Thursday, October 30, 2014) in and convert to the hijri string I get the result of 6 Muharram 1436. Except that, in reality, today is the 7th of Muharram 1436. As per http://hijritoday.com/ I know this is a common variance, different Hijri calendar countries can be off by a day due to disagreement on the sighting of the new moon (it's a lunar calendar). I was just expecting/hoping for some kind of HijriDayOffset property.
You do indeed admin rights to do this, and there's not a sane way to check what's already on the ACL list. And that aside, making users do anything as an administrator that's going to be exposing a web service is a *really* bad idea. What you can do is try to start as a non-admin user, and then only if you get an AcessDeniedException try to run netsh (with the runas verb) to do it. You're probably better off using something like Griffin.WebServer (available via nuget) if you need an integrated webserver. It's pretty easy to use.
I was about to ask if someone could please translate the article.
Thank you! Expect a PM soon. :)
Thanks for an input and your code, it helped me get a general idea about how things should look. :)
You only need `ref` if you want to change the value of the variable outside the scope of the method from inside the method. If it were me, I would make the Log class an instance instead of a static class and then pass that to the classes that need it's functionality. I would not make the Log class have to know anything about your main window. You have your dependencies backwards the way you have it. The main app should depend on the Log class instead of the Log class depending on the main app. If you want to get some output of the class displayed on your application, I would put an event on the Log class that fires anytime there's some out. Then any class that can see that instance of the Log class can subscribe to the event and handle the output however is appropriate for that class. This way you could use the same Log class in winforms app, a console app, a web app or any other kind of application. Also, make an interface for your Log class and have all your dependent classes use the interface rather than the concrete class for their variable declarations. This gives you a lot more flexibility, which is very helpful for testing among other things.
If you know it's wrong by a day, can you just add one? Or is it because it's a lunar calendar, sometimes it's 1 day, sometimes it's 0 days? 
The lunar calendar is the cause, but I have to be careful adding/subtracting - I'll need to extract the weekday first, the apply the offset.
You've got a circular dependency going on here, which is a huge design flaw.
Looks like "ar-SA" cultureinfo has System.Globalization.UmAlQuraCalendar as it's calendar. Maybe you could construct such CultureInfo that it has System.Globalization.HijriCalendar (which has HijriAdjustment, that is also adjustable through computer registry).
For me it is a toss up between null prop, ctor assigned get autoprops, the nameof operator and string interpolation. All of them are going to make a big impact in my code. 
I don't know what can be done, then. The calendar depends on an outside authority to know the date, and I don't know if the .net library is configured to talk to a service on the internet to determine the correct offset. 
That's my take, too. I've noticed various CMS widgets handle it with an offset adjustment, I'll be doing the same.
Oooh, this makes sense. I'm going to try this. Thanks!
Ah sorry I skimmed over first paragraph. Looks interesting once I followed the link. I had gotten to end of post and wanted more.
Couldn't someone just restart and boot into safe mode to get around this? I think I'm missing something here...
ManagementEventWatchers are also polling though. The "WITHIN 2" part of that query is a polling interval. Sometimes the polling is disregarded, as I've found checking the power state of a VM is immediate callback, so a legitimate eventwatcher, checking memory changes on the same VM though, ... polling. Responds within the given interval time. I don't know what case this would fall under. It's so "kernley" that I'm sure numerous things are getting an event notification of some sort from this and could probably be subscribed to with WMI and the polling interval would be ignored, but who knows whats really going on if you're explicitly saying poll every 2 seconds. 
Yeah, I don't care for VB syntax myself. But to each his own I guess.
see also: inversion of control which is what's happening here. What you're doing is decoupling the dependency of the logger from the thing being logged to. Now it can be used with anything that implements ILogable. Also fwiw, Microsoft Enterprise library has a logger implementation that you should consider. If you factor that into your ILogable design, then you could potentially have your ILoggable implementation write to the enterprise library (which can email logs, write to files, etc) as well as write to your output window and even a form like you have here all in the same stroke.
I second this. Using 'this' immediately differentiates module level variables and method parameter variables.
8.1 or 7 is my suggestion. All developers at my work use that for dev boxes then remote debug the application on another win server 2012 r2 or whatever server machine. You can also load up the trial of windows server and run it in a VM in hyper-v if you want to run your app on server. I've used server for development and debugging locally (unless its a driver of course), but it doesnt make a as good of a desktop imho, and you'll probably be using it for both dev and play
The reason was I was planning on making the logging class a singleton but that would've been more work than I needed to make my point so I scratched that and the static method is a relic from that. As for a name, take a look at inversion of control. That should get you started in the right direction.
Thanks!
I don't get it. 
Make sure you check second link too, a working Gmail navigation sample. Hope you like it.
I imagine you did what any sane, sensible person would have done: run away screaming downstairs, tearing your hair apart, like Homer when Marge told him she was pregnant.
Hence the reason why they are my previous employer.
What exactly is wrong with WinForms for small projects?
What the heck is a "graphic essay organizer"? Also, please fix your source structure and naming. You should *never* have a form called "Form1". Likewise your controls should have meaningful names, not "checkbox2". And how did you even end up with source files at the solution level?
&gt; Platform lock-in (winforms code is useless outside winforms) As opposed to the wonderful cross platform capabilities of WPF?
&gt; Too much code to achieve less. Eh, I tried WPF and the amount of XAML was off-putting. You need both XAML and C# to do anything with WPF controls, instead of just C# in WinForms. And, sure, WinForms is pretty old. But if you're doing a small, simple project, there is no real reason to add the full 100% UX experience - otherwise it wouldn't be small and simple any more.
How about the [WPF Toolkit?] (http://wpf.codeplex.com/releases/view/40535) You can find everything there in the DataVisualization namespace. Also you could just build an Add-On-Control for Dynamics NAV and build a page with the control in it.
Thanks, will definitely look into it. We're talking about classic client here so no add-ins ;-)
WOAH WOAH HOLD UP I'm doing a Winforms project because I don't know WPF. I am 12 years old and Winforms was suggested to me over on /r/github. Don't lose your shit, anyone.
A graphic essay organizer is something you should have used in 3rd grade to make an essay. I appreciate the feedback, that will be fixed in a day or so.
Nothing, it just upsets some people here. It actually reminds me that the more things change, the more they stay the same. I do wonder how long it will be before WPF is replaced with some other whizbang technology that just does it oh so much better. VB2's Dynasets and ODBC was replaced with DAO, which was followed by RDO which was followed by ADO which was followed by ADO.NET. What makes it interesting is they all did nearly the same damned thing- they accessed databases. They just did it slightly different and yet for each one it was "the thing" to use. If you didn't use ADO and VB6 webclasses in 1999, for example, you had lost touch with the modern world. New technologies replaced old ones and deprecated them; Windows Forms sprang out of UserForms from VBA and Visual Basic's UI capabilities. Back in 2003, It was the thing to use. If you wrote a new program, you had to use Windows Forms, because if you didn't use Windows Forms, you would write too much code to achieve less, you'd be susceptible to locking in your code if you tied it in with say UserForms or VB6, It looked awful, it encouraged bad practices, and only old people and stuffy businesspeople weren't using Windows Forms, so you better get with the times. That should look familiar. It's the same set of taglines every damn time. Every single "new UI tech" is going to let you do more with less code. It's going to make your code more reusable, it's going to make your programs look good, and it's going to encourage good practices. At this point, we've had so many iterations that if the promises were actually true we'd be able to go back in time by developing applications. WPF is great. But it's just another technology and it is going to be old and crusty and at that point it's not going to be any better off than Windows Forms anyway as far as legacy support. It allows you to solve problems in a more declarative way but personally I don't find it any "better" in terms of that; I will admit it can be a lot funner to work with and watch a bunch of pipework fall into place. And if you want to play buzzword bingo you can count on WPF to provide. It is definitely worth learning. But in many ways it's only worth learning (aside from being pretty cool in and of itself) because in ten years it'll be what a lot of business software is written in and somebody will need to maintain it, and it certainly won't be the people who have moved on to whatever UI framework comes out next, who will instead be bitching out the people who create applications in WPF that they should get with the times and use the new thing.
You mean something like this? string inValue = guessBox.Text; int guessNum; if (!Int32.TryParse(inValue, out guessNum)) { //fails to parse; probably letters inputted MessageBox.Show("Please enter a number."); } else if (guessNum &lt; 0 || guessNum &gt; 100) { MessageBox.Show("Please enter a number between 0 and 100."); } else { //valid number between 0 and 99, do something with the guess }
I don't know of an all-in-one resource and I haven't really sat down to collect my thoughts on it. But I'd say in general, aim for using Grids over StackPanels and using "*" or "Auto" for widths and heights together with the different kinds of alignment, Stretch, Left, Right, Top, Bottom, Center are all you need. Sorry for not having something more concrete, but if you think of "*" width and height as filling up horizontal and vertical space as your container changes size and things set as Auto or hard numeric values as taking up a fixed amount of space, you should be pretty well on your way. But this is a great question, I'm eager to see what others have to say/add.
You could also build an automation in c# which generates an bmp from the xml which then gets displayed on a form. This way your customers don't have to leave the client. When migrating this customer to a newer client you can use dotNet directly. 
&gt; At this point, we've had so many iterations I never had any "iterations". I started .Net programming with WPF and immediately realized how everything else is just retarded and useless. Yeah you might say that the "new thing" is WinRT, but guess what, it's still XAML and MVVM, so I don't care what's the name of the thing it's still WPF in my mind. Now we also have XAML and MVVM for Mobile (Xamarin.Forms), so your "iterations" argument, while true, is completely irrelevant at the moment. The kid is 12, why would he want to learn something that at this point looks no different from COBOL? If that'd be the case he might as well learn java instead of C#. If I were him, I'd worry about Web stuff tbh, by the time he'd be looking for a job everything is going to be written in crappy javascript, unfortunately, due to Atwood's law.
So what you are saying is I should ditch C#? I already am taking classes in Javascript, so if that is important than please tell me. I really hate fighting over stupid stuff. Another point is XAML. It looks like CSS or HTML at first glance, so why would it be hard.
No, of course not. C# is an awesome language, but unfortunately there's a trend to do everything Web-based, so "thick client" apps like the one you created and the ones that can be created with winforms/WPF/Xamarin *might* eventually disappear. Of course this is a problem because doing a big project with Javascript is a PITA due to it's lack of proper typing. But managers and customers don't care about whatever pain you have to endure to bring their products, they just care about the products. languages like C# and F# still have a place today, and will have a place in the future for server-side coding, but time will tell what's going to happen to client-side "non web" apps.
Check Github, I posted some stuff about the pull request.
multiple services might be best if you have non atomic operations on the table or different use cases for service concurrency and service instancing. this would make separation a bit easier when you scale it out.
You could do //Use namespaces using System; //Declare class public class ClassName { //Function Main, gets called from startup public void Main() { //Call SayHi to Bob SayHi("Bob"); //Call SayHi to Alice SayHi("Alice"); } //Function to say hi, with paramter name for the name to say Hi to public void SayHi(string name) { //Write Hello + name to the console Console.WriteLine("Hello " + name + "!"); } } Comments explain it mainly. Hope this helps!
Note that they don't say they want to *print* "Hello Bob!", they want you to *return* it, so that makes the problem even easier. If you have this already: public string sayHi(string name) { } Then all you have to do is something like this: public string sayHi(string name) { return "Hello " + name + "!"; } Now you might want to do some error checking if name is null or empty string or something, but in the simplest form this is what they're after. If you want to print the result of calling the method, you can do something like: Console.WriteLine(sayHi("Bob")); 
That is definitely the goal. Question about the "Services" - does this mean that foreach table I have I need to have a windows service on the server that is hosting the application? I know that is one way to do it and that there are other ways - I would just like to avoid having a ton of services in the services.msc console for the application. My background is an Operating System engineer so I may be thinking of the term service differently. Thanks for your reply!
You can host WCF services in IIS: http://msdn.microsoft.com/en-us/library/ms733766%28v=vs.110%29.aspx 
It entirely depends on how you want your service to be used and how you want to manage your various services once they're deployed and running. As an aside... I tend to use the term service loosely because it can mean a number of different things to different people. Three that come to mind: [Windows Services](http://en.wikipedia.org/wiki/Windows_services), [web service](http://en.wikipedia.org/wiki/Web_services), [AngularJS Services](https://docs.angularjs.org/guide/services). I'd argue that Angular services have nothing really in common with Windows and web services. You're right, WCF can be used for things other than HTTP (which I wouldn't really consider RESTful). You can use WCF for managing named pipes or you could even get fancy and create your own proprietary serializers. I'm not sure how IIS and WAS would handle those situations. Most of my experience with WCF comes from hosting WCF HTTP services in IIS and in Windows Services. In addition to what's been mentioned, you could also host WCF services in winform/WPF applications and console applications.
Perhaps you should consider asking in /r/cscareerquestions 
Expanding on your SayHi function, couldn't you also do public void SayHi(string name){ Console.WriteLine("Hello, {0}", name); } ?It's been a while since I C#-ed, so I'm curious. Edit: how does the reddit markup work for code? I can't get it to work :/
The actual code is probably much less important than your approach. Talk about your thoughts of how to approach the problem. Its ok to ask questions. Talk about alternatives. For my last interview (i got that job), i gave them three alternatives and when i would pick each one. Granted i only knew how to code one of them, but i demonstrated a deep understanding of the topic area and good critical thinking.
For the formatting, reddit make any lines starting with 4 spaces as code. And Im not sure about how you do putting variables into strings directly, I usually just append it.
Well, I think it could be used to make code a little more readable (though it depends on preferences), appending variables makes it more chaotic while you can just as easily do: String name = "Bob"; DateTime date = DateTime.Now; Console.WriteLine("Hi {0}, it's now: {1}", name, date); Ugh, I give up, the code formatting doesn't work with me 
I think what you're looking for is a "static function", probably inside a static class. A regular class in C# has to be created before it can be used. For example, if you have this class: public class Thing { public void PrintMessage() { Console.WriteLine( "I'm a thing!" ); } } You can't do this: Thing.PrintMessage(); // Error. Member function called You need to do create one first, like this: Thing t = new Thing(); t.PrintMessage(); But a static function is just a function, like you're used to. And it uses the class name as a qualifier. If you have a class that only contains static functions, you usually make the class static too, because it doesn't make sense to create one. Here's how that looks: public static class MyUtils { public static void PrintMessage() { Console.WriteLine( "Member free since '93!" ); } } Now you can call that function directly, without creating an instance of the class, like so: MyUtils.PrintMessage(); // Success! 
If you're tasked with solving a problem, start off with the most straight forward solution, then gradually mould it into a better solution. Make sure you tell them any assumptions that you are making about the problem (e.g. "I'm assuming that we don't get negative numbers as input") and make sure you prompt them for clarification (e.g. "Is the incoming array sorted?") Always always always test your code by writing tests on the board. Show that you think about testing, and make sure your tests cover the input domain (e.g. zero, one, a million, negative numbers, empty list, etc) Don't try and come up with an incredibly smart solution straightaway. Just get the problem solved and gradually change things to make improvements. Make sure you know the complexity (in Big Oh notation) of the algorithms you implement - both temporal and spatial. Make sure you're up to date on data structures (linked lists, trees, etc) and algorithms (fibonacci, primes, etc)
Maybe a data structure and algorithm. Like a binary tree; find the height, or self order it. Linked list, do a search. Producer/Consumer queue. Things like that are fairly common. Simpler stuff might be a recursive factorial method with some discussion of tail recursion. Good luck! 
I voted for constructor assignment to auto properties (although I don't see how getter only auto properties, auto properties initializers and constructor assignment to getter only auto properties can be considered separate features). I basically do what you describe except that I am not nearly as hardcore as you are. For example I don't use null object pattern. Still I found that setting sensible defaults and constructing the code to not expect null greatly reduces the amount of null checks needed. Simple things like setting strings to be the empty string instead of null and collections to be Enumerable.Empty&lt;T&gt; remove like 70% of the null checks. BTW I currently define auto properties with private set but I am happy to make the code shorter and even more clearly express the immutability intention with getter only auto properties.
As others have said, talking is the most important thing. The interviewers can't know what's going on in your head, so you need to speak. Don't be afraid to change tactics on a problem. If you see that you've gone done a bad road or come up with a better idea, erase and start fresh. The interviewer will want to see you not waste time spinning your wheels.
It really varies based on whose interviewing you and their experience. In my experience whiteboard code should be just pseudocode. They're more interested in your problem solving skills rather than how much you remember of the syntax. Ask questions, make sure you've covered all areas and you understand what they are asking. Talk out loud when thinking it through and coming up with a solution. Flow diagrams may help. If they're a good company they'll probably ask you to write something related to the business or a problem they've already solved. I hate companies who give you the standard FizzBuzz, Fibonacci, etc. Every developer and his cat have multiple solutions memorized (and you should!). Good luck!
&gt; You need both XAML and C# to do anything with WPF controls Name 1 thing that you can do in winforms via the designer which can't also be done in WPF via the designer?
Here are a few suggestions I think could help: 1. Always work from left to right on the board. It's easier to communicate your written work to others in this manner. 2. Write down some test cases for any "given this, return that" problems. Show the interviewers that you're already thinking about unit testing the solution. 3. Call out and write down any default cases. For example, "given two ints, return the remainder", you know you can throw an exception if the denominator is 0 (DivideByZeroException). 4. Speak out your thoughts when solving the problem. This will help you organize your thoughts but also show the interviewers how you process the problem and design a solution. We don't know the exact questions that you'll be asked to solve but I think some of these, if not all of these, suggestions could help with any type of questions. Good luck and please follow up with us after the interview!
&gt; Also, even if WPF somehow does lose its place as the bleeding edge of Microsoft's UI tech, XAML will still be important. That's what people said about Dynasets and ODBC and RDO. And COM. How much development is still encouraged to be done in COM?
The designer is only a fancy XAML editor. As is the WinForms designer, except you don't need an extra, super-verbose language to do it all.
I agree with all of this except the tests. I want to know that you have experience with unit testing and can write testable code, but expecting you to whiteboard tests is ridiculous.
If I were conducting this interview the point of this exercise would be the following: 1) To see if the interviewee flat out refuses to do it- a surprising amount of coders simply will not do this type of thing. 2) To see if you can effectively and comfortably communicate a technical subject to me. 3) To see how you react to questions/comments I make while you are whiteboarding. 4) To see what you decide to present (both technically and at what level of detail) This will tell me volumes about what level of engineer you actually are. So this would be far more of a test of your thought process, interaction and communication style than any technical quiz. And if you have never done this type of thing it wouldn't hurt to practice it. Way back in my undergrad I had to get myself videotaped giving a presentation for a technical writing class- this is an enormously educational exercise if you've never seen yourself speak.
It really depends on where you are interviewing and with whom. A lot of companies will test on pretty basic algorithms and data structures, such as: - Reverse a string - Sort a collection of objects - implement a polymorphic behavior given an abstract base method signature - implement a recursive method (Fibonacci is common, though I've seen file system ones as well) - Search an arbitrary string and/or search a collection and return elements that match some condition. - Implement a binary search. That said, I've seen a lot of domain-specific problems as well. For instance, an ecommerce company I interviewed with once asked me to whiteboard an algorithm for applying different types of discounts and calculating sales tax to get the total price of an order. I hope that helps somewhat. Good luck in your interview!
It would make perfect sense for C# to produce a warning but since there is the issue with the legacy code they can't do it now. Basically nobody needs that cast these days but because of pre-generics code we have to live with it.
C# is similar to Java in a lot of ways, and it will be good exposure to the language and its particular nuances, though you won't be making use of the full gamut of .NET libraries, which are pretty crucial for non-game C# development.
&gt;is Unity a good tool to learn Game Development principles Yes &gt; and C# Depends on your level. For me no, for others maybe yes --- Do what is fun for you. You will learn so much faster if it's fun. You won't learn much about the WPF, WCF, ASP.NET MVC, (WinForms), Xamarin, ... But you learn to love and use the language.
Yep, tests are mostly "repeat code" with different inputs so physically writing out multiple tests adds no benefit. Mentioning tests and listing a few edge cases would be a better approach.
You're right... thanks!
Fantastic! I'm bad at applying tryParses.. I would like more help on this kind of stuff.
Unity skips a lot of how "normal" C# environment works. Constructors are barely used, connection to parent objects is mostly "magical". Generic objects as behaviours are probably not supported. Game development "language" scope is quite different from "real world" development. Because code runs (preferably) at 60fps, you can't be really lax about the memory management allocating objects willy-nilly. My feeling for Unity is quite frantic (as it should be). I think you'll learn a subset of C# with unity but will potentially miss some things that would've become apparent with some other method. Just be aware of it.
why only Unity? There are many C# game engines: http://paradox3d.net/ http://www.monogame.net/ http://waveengine.net/ http://www.neoaxis.com/ http://deltaengine.net/ https://www.synapsegaming.com/ and even UnrealEngine! http://mono-ue.github.io/ As for me Paradox3d looks interesting - its free, sources available, it uses last .net libraries, new versions appear often.
It might be good as motivation, just beware that they are compatible with C# 3.0, if I am not mistaken.
Apologies, I didn't mean writing unit tests on the board, I meant writing a few inputs and a few expected outputs up in a small table - so e.g. if you're doing a factorial function, write out -1, 0, 1, 2, 5 and what the expected result should be, and then run them through your code to find out what the actual result is. I think this is actually pretty important for yourself to ensure your code works and for the interviewer to show that you test your code and that you consider the various inputs that can be provided - whether correct or illegal. 
But unity has a large community 
No, Unity is great but it's not the best way to learn C#. It has a really weird workflow as opposed to working in just Visual Studio and it uses an embarrassingly old version of C# and .NET. And about Gamedev principles, yes it teaches those. It does all the infrastructure for you (components and gameobjects) so you won't learn much about that. But otherwise it's pretty solid and flexible.
Working with unity and I am using constructors errrday
yeah, to be honest (why not) I find it's only mentality issue with code I see; much of what happens seems to start in Start(). There's probably no issue whatsoever, except that I keep thinking about what happens in serialization etc. Mental issue.
i think the point of learning c# is really not that big of a deal. the syntax can be learned in a few hours since you already know java's. the more important side imho is to learn your .net libraries, in which namespaces to look for what etc. that's where the real fun is, the way it just flows as soon as you know your tools at hand. in unity you only have a subset of the libraries (and language features) to your disposal, so most likely you will still learn lots of framework stuff but also lots of unity specifics, as some other user said. depending on what you expect to achieve by learning c# in the long run you may be better off choosing a different path. if you just want to stick to "scripting around a bit" in unity, that's fine too - and it still may be a good starting point.
&gt; my true passion is game development It seems to me like you're also asking if Unity/c# is your best bet to learn game development. &gt; I usually like to take the hardest route possible (personality trait I guess). So I almost see Unity as cheating. If you want to take the hardest route possible, then grab yourself directx/opengl documentation and start writing an engine from scratch in c++, but you have to ask yourself what you want to do. Do you want to write an engine from scratch and control every aspect, or do you just want to make games and have ideas you want to bring to life? Remember that Unity only uses c# as a scripting language, so while it isn't a good way to learn c# at all, it **is** a good way to make games, especially if you're starting out and working solo.
As a tiny improvement, the message box states that the number should be between 0 and 99, but the test allows numbers between 0 and 100
You could make an extension method for the type of your parent that returns a child with the parent set, so you'd just do something like `this.createChild&lt;frmLogin&gt;()` Feel free to ask on how to do that :)
In my experience, Unity treats C# programming best practices badly and nudges you to adopt a less-than-ideal coding style if you don't have anything else for reference. It promotes the usage of public fields for "everything" significant, allows you to check for null by implicit casting to boolean, have a peculiar overload of the equality operator of their objects, allowing "fake null" objects, and I'm pretty sure there is a lot more that I forgot. As a C# programmer who learnt it by programming games using other libraries, programming C# in Unity makes me uneasy. If you just want to make games, there's nothing wrong using Unity! Unity is cool. But if you want to learn C#, **take it with a grain of salt** and keep your eyes open.
Monogame seems like a nice framework. Bastion was made using it, as far as I know. However, if you'd like to start a little more low-level, I can also recommend OpenTK, which is mostly just a wrapper for OpenGL and OpenAL C# bindings, combined with cross-platform window management. Also, may I add [Duality](http://duality.adamslair.net/) this to your list? :)
Hah, woops! Good pickup!
I have been reading on MSDN and stackoverflow.com about extension method, but I couldn't find how to implement it for a form. If you could please hint to how I could achieve this. Thanks. This is what I was attempting to do: public static class MyExensions { public static void CreateMDIChild(this Form chilForm) { //create new child form } } where childForm is the name of the form I want to set as child. Edit: Formatting.
 public static TForm CreateChild&lt;TForm&gt;(this Form parentForm) where TForm : Form, new() { return new TForm { MdiParent = parentForm }; }
Good idea actually, but the problem is that not everybody has Visio installed...or is there a viewer-programm?
You can definitely [create .pdf documents](http://www.codeproject.com/Tips/592957/Converting-Document-Word-Excel#Visio2PDF) from the visio files. I'm sure there would be options for creating image files as well
Yeah, that confused me a bit too. I was afraid to change it, in case he knew something I didn't.
I would strongly recommend Web API over WCF if at all possible, particularly since you're just doing CRUD. Are the tables related or completely separate entities? You don't need a separate service for each table unless, architecturally, that makes sense. using(var svc = new FooService.FooClient()) { var p = svc.GetPerson(personId); var f = svc.GetFavoriteFoodByPerson(p.Id); } using(var svc = new FooService.FooClient()) { var p = svc.GetPerson(personId); var m = svc.GetTallestRollercoasterByCountryCode("USA"); } In one of those examples, a single service makes sense; in the other, it does not. Repetitive data access code can be abstracted away by a repository (e.g., a `DbSet`) and the Unit of Work pattern (e.g., a `DbContext`).
With the "char" datatype it's doing an ASCII table lookup. Try changing the addNumber function to use "string" and it should work better. char asChar = '4'; string asString = "4"; int int1 = Convert.ToInt32(asChar); // = 52 int int2 = Convert.ToInt32(asString);// = 4 
Did Adobe implement IDisposable with their AcroAVDocClass and AcroPDDoc? If you're learning C# you should definitely get in the habit of the using statement and var keyword. This is kind of sloppy and hard to read. 
Look into Int32.TryParse. It should suit what you are looking for. PS, this is generous. Most people won't help with homework assignments because it is expected you actually do some basic work.
`inputRecord` is a string. So when you do `inputRecord.Split(',')` it actually converts that string to a string array (aka `string[]`). So you'll need something like `age = Int.Parse(string value)` to get the age value. Excuse the markup. I'm used to StackOverflow's markup style.
You are a disgrace .
Yeah, I get that. Done the logic work and now I'm just trying to figure out how to get this syntax to work. Don't help if you don't want to :)
Thanks for this, super helpful.
again, really helpful.
No problem. I'll send you my college transcript so I can get credit for this homework. :P
How about you stop asking others to do the work for you? This is akin to cheating and in the end you are only cheating yourself. You don't deserve any advice quite frankly.
Didn't ask anyone to do the work for me, there's one line that's messing with everything, and I've been looking around for 2 hours trying to find the solution. Don't help if you don't want to :)
C# is a strongly typed language. That means you can't just willy nilly convert one type to another, even though it looks obvious to you that those "string" values are numbers. That means you are going to have to explicitly convert the string to an integer. Searching Google and [MSDN](http://msdn.microsoft.com/en-us/library/kx37x362.aspx) will help you achieve that. Also, remember that MSDN should be your go to first step. Nothing in programming is magic, so knowing what a method requires/returns will help you with building your logic flow.
Yeah. Things are much better with the high competition. They can't actually get away with insanity the way Microsoft or a EA can, without feeling the sharp end of the consumer backlash. Personally, though, I was starting to learn up on Unity and I really feel like it "looks" like it gives you much more than it does. That is, it comes with stock assets... but you really have to code your own (or buy tons of "micro transaction" assets) for almost everything. And if something blows up, you have to hope it's not something in Unity or you'll be stuck poring through tons of obscure API documentation (if you're lucky enough to have any related documentation at all). That is, it's great if you want it exactly the way they have it, but if you want it your way, most of the things would have been faster to roll out yourself in the first place. In the end, since I'm doing a 2.5D (2.5D MEANS DUKE NUKEM NOT 2-D WITH POLYGONS, GET IT RIGHT) game and I'd have to rip out half of Unity, I've decided to fall back on straight in-house code instead of an engine.
See this is helpful too. I didn't come in here hoping to cheat and have everything done for me, but resources and explanations are helpful. Thank you.
I am working on my own game in Unity which is my first real exposure to C#. In order to try out some features in a more correct environment (delegates/events), I decided to try out C# using Xamarin, and learn the more "proper" way. I will definitely say there is a difference, and that if your goal is to learn C# on its own that it might be better to try a different way than using Unity. One of the biggest issues is how Unity takes care of the environment - so it presents a game loop and you just plug stuff in. You don't worry about constructors (there is a system to instantiate objects, but it's very different from typical constructors), there is no "Main" (it has its own looping system), and a variety of other quirks that are different enough that you lose a lot of things if you just try Unity. That isn't to say that Unity doesn't provide some benefit. The Unity site is very rich in documentation for the Unity engine, and has plenty of examples. The main problem is that this will be most beneficial in some basic syntax, and having worked in Java, you probably already have that down -- they're not very different in that regards (nor, any language derived from C-style programming). So yeah - if you want the hardest route possible don't use Unity. If you want a richer and deeper understanding, don't use Unity. I can't offer the best advice, I'm just taking things one step at a time via various resources (web/ebooks) as I feel is needed. Unity just abstracts too much and acts too differently from any "normal" stuff you're going to write in C# to really give a good educational experience beyond the very simplistic. You'll be learning Unity, not C#, in other words.
&gt; implying no one uses stackoverflow during their college years. Let OP ask his question. If you don't want to answer it then don't. But don't act like you've never asked for help on any assignments.
char type digits 0 through 9 are evaluated as 48 through 57 (the asci codes for those characters (0 through 9)) Use int or string to avoid wonky conversions.
Cool, now do it with more meaningful class names so it is more clear. 
[Is this better?](http://i.imgur.com/wVcTTOW.png)
Can someone TIL5 what is the result and purpose of such an operation?
Wrong definition of covariance. [See the MSDN article on the matter](http://msdn.microsoft.com/en-us/library/dd799517%28v=vs.110%29.aspx).
Yes. Definitely improves clarity.
Why bother answering when you don't have the slightest clue what you're talking about? That definition of covariance obviously has nothing to do with what's being discussed here but you just had to say it because you thought it would make you look ever so smart.
Well, I don't like taking shortcuts. So I feel like, in a lot of ways, Unity is a shortcut. I will learn C++. Only after I've gotten C#/XNA/.NET down.
&gt; I will learn C++. Only after I've gotten C#/XNA/.NET down. ok
This is something I've always missed from C++. Being able to propagate constness is something I really miss in C#.
Not to be a dick, but how about you at least make an attempt at it and figure out what you don't know, then, if you can't find an answer on google, come back here. Asking us to do your work for you when it's obvious you've made absolutely no attempt at doing it yourself is only going to get you told off. We are not your, "do my homework for me plz," resource.
you are kind of being a dick, no where does it say in my post that i need some one to write the whole code for me, i had ask if some one could point me in the right direction or help me out a bit with the code (to start at least), emphasis on A BIT. i did google my issue but i still didn't understand everything fully and i don't have a programming background, that is why i had posted here hoping some one would point me to a specific site or have an idea from their on past experience for a beginner. "We are not your, "do my homework for me plz," resource" im pretty sure you don't speak for everyone here what you have to say is your own opinion don't speak like your in charge of this sub-reddit. 
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Covariance**](https://en.wikipedia.org/wiki/Covariance): [](#sfw) --- &gt;In [probability theory](https://en.wikipedia.org/wiki/Probability_theory) and [statistics](https://en.wikipedia.org/wiki/Statistics), __covariance__ is a measure of how much two [random variables](https://en.wikipedia.org/wiki/Random_variable) change together. If the greater values of one variable mainly correspond with the greater values of the other variable, and the same holds for the smaller values, i.e., the variables tend to show similar behavior, the covariance is positive. In the opposite case, when the greater values of one variable mainly correspond to the smaller values of the other, i.e., the variables tend to show opposite behavior, the covariance is negative. The sign of the covariance therefore shows the tendency in the linear relationship between the variables. The magnitude of the covariance is not easy to interpret. The [normalized version of the covariance](https://en.wikipedia.org/wiki/Covariance_and_correlation), the [correlation coefficient](https://en.wikipedia.org/wiki/Pearson_product-moment_correlation_coefficient), however, shows by its magnitude the strength of the linear relation. &gt; --- ^Interesting: [^Covariance ^matrix](https://en.wikipedia.org/wiki/Covariance_matrix) ^| [^General ^covariance](https://en.wikipedia.org/wiki/General_covariance) ^| [^Covariance ^and ^contravariance ^of ^vectors](https://en.wikipedia.org/wiki/Covariance_and_contravariance_of_vectors) ^| [^Covariance ^function](https://en.wikipedia.org/wiki/Covariance_function) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+clqxxp7) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+clqxxp7)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Xna is not an easy framework unless you already understand many of the fundamentals of .net. if you don't already have programming experience, xna is going to be a struggle. what do you understated? What don't you? Based on your lack of experience, I'd put a realistic timetable on this to be 12-18 months, so, think on that.
Nice that return made it stick in one place. Which is what I was trying to do, but my lack of knowledge didn't know what to utilize. Yeah I was thinking of doing a tryParse to stop character values too for a more robust program. It wasn't explicitly stated in the criteria, but would you caution that I should do that too?
You should definitely use TryParse, otherwise you'll get an exception if someone decides to type characters into the TextBox controls. Try that, the program will break. Here's how I'd go about it: private void btnMove_Click(object sender, EventArgs e) { var x = 0; var y = 0; if (!UInt32.TryParse(textXcoord.Text, out x) || !UInt32.TryParse(textYcoord.Text, out y)) { MessageBox.Show("Only positive integers are allowed!"); return; } this.Location = new Point(x, y); } You could also check the numbers separately (twice TryPase, twice the condition) and focus the TextBox which contains the wrong input. In this snippet, you don't get a chance to see which one is wrong, only that one or both of them are. Edit: Fixed so only positive integers are accepted. I now use the UInt32 data type which is available in C# and only allows for unsigned (thus positive) integer numbers.
While that is true, we're obviously in a programming context here
Read up on `String.Format` that should be how Console.Write works anyways. Also the `StringBuilder` class can be helpful and is usually faster than using the + operator
Calling GetValue twice is definitely wrong and the use of goto is bad style, so these are great observations. However, the main thing making this code not work is the use of Console.Read. The goto code would work if not for that. 
There is a lot more you could do with this. However that would be for speed/memory optimization and making the forms more stateful. I'm glad that this helped.
Nice. Didn't catch that since readline was used in the main Since it's an assignment I assumed some teaching besides getting it to just function would be appropriate.
What is it with all this goto usage around here recently? Are they actually teaching this slop in schools?
Maybe if you make your chromebook run linux you could run this: http://monodevelop.com/ 
Online IDEs are your friend when using Chromebooks. [Here's one](http://ideone.com/). Also, you can just google [C# online IDE](http://lmgtfy.com/?q=C%23+online+IDE)
The variables must be declared as unsigned as well. Either replace 'var' with 'uint' (if you do this you can remove '= 0' as well) or change '0' to '0u'.
Now on the this.location part.. Sorry I'm bad with syntax errors. Error 2 Argument 1: cannot convert from 'uint' to 'int' 
Beginners will do beginner things until they learn better. That is the way of things. I dare to hope they don't teach it that way in school.
Just cast uint to int. Alternatively use int.TryParse and check for integers below zero like you did earlier. this.location = new Point((int)x, (int)y);
The only thing I can recommend is koding.com. This site offers free virtual server with terminal. You can install Mono on it to compile and launch c# programs.
Sorry! I didn't realize there wasn't an implicit cast from UInt32 to Int32 and I haven't tested the code before I posted it. Shame on me, but thanks /u/Sarcastinator for spotting my mistake and correcting it! :)
Thing is where on earth are they getting the idea to use gotos in the first place? The only thing I can think of is some experience with batch files or some form of basic.
I think this is far and away going to be your best option. Alternatively you could use amazon's free tier or something but koding will get you up and running much quicker. Edit: You could even go crazy and install monodevelop with X11 forwarding as mentioned here http://blog.tomtasche.at/2012/01/developing-on-chromebook-part-3-x.html However it looks like there are some obstacles you may need to overcome with window management in chrome os that way.
The database tables are an implementation detail that the consumer of your API should not need to know anything about. For all the consumer of your API should have to care you might as well be saving the data to XML files on disk. So do not create a service per table _unless this maps perfectly to your service domain_. You should be able to change your database tables without changing your service contract. You should be able to change your service contract without changing your database tables. Don't just expose your database via the API - think about what _service_ you are providing to your users and provide the best interface possible for providing that _service_. (And no, "letting users access the data in my database" is not a service that your are providing - that is a lazy way of saying "I don't want to research my domain" ;) :D ) Also, WCF is imho a horror to work with. Have a look at ServiceStack (https://servicestack.net/) instead, it's like all the good parts from WCF and WebAPI without any of the bad parts from either of them ;)
You can hire a windows Azure VM with Visual Studio on it and connect to it with one of the RDP clients for ChromeOS. Probably the least painful solution in the long run.
You don't have to store the numbers as the task only requires that you count failures and successes.
100% supports flash, it's automatically installed. XBMC is a tough one. But I figure there's a streaming add-on of some kind.
It is indeed awesome. I can get a proof of concept into production in a couple of hours without having to piss around with any infrastructure. I really don't want to by a sysadmin these days.
Chrome Remote Desktop and a Windows PC with VisualStudio.
ok thanks.. I found this, which looks good if it is true: https://www.youtube.com/watch?v=OGvC0TWPk-g https://www.youtube.com/watch?v=d_MuVwJq_XQ Just saving links for future reference ;)
I would not wait until later - getting database keys right is something that has to happen pretty early in an entity's design. EF is likely to be unhappy with this. How tied are you to it? 
&gt; DirectX using OpenTK: Confusing documentation and actually to specialized for games (game loop etc.). Was able to show the course of the simulation in a separate window, but not within the form. Pro: Can easily interpolate the colors based on the node values. OpenTK doesn't support Direct3D. It uses OpenGL. I would also claim that it is not at all aimed at games. It's not horribly complex to do with OpenTK however, but you'll need to read up on OpenGL. I'll see if I can provide you an example when I get off work if you like.
Oh I meant OpenGL, you're right. As I said, I was able to setup OpenTK in such a way, that it displayed the simulation in separate window with something like this: public void RunVideo() { using (var gw = new GameWindow()) { gw.UpdateFrame += (sender, e) =&gt; { RunSimulationStep(); }; gw.RenderFrame += (sender, e) =&gt; { RenderSimulationResults(); gw.SwapBuffers(); }; // Run 30 simulation steps per second. Pass 0 to run as fast as your computer can handle. gw.Run(0); } } However, I was not smart enough to make that happen within a form. :( 
GameWindow is just a helper class. Basically it creates a window, creates a context for that window, makes it current and calls the appropriate events at the appropriate times. You can however do these things yourself if you would like more control. I think there is a Windows Forms control called GLControl you can use as well. Basically you will need a context that is current for the current thread (which should be the UI thread). At that point you can just call OpenGL functions in a timer or whatever.
Come on, that's not what it was. The dude knew it was the wrong definition from the start and he pulled out the most textbook version he could find because it was full of big words. He was just trying to show off.
Depends slightly on your idea of cheap. I've had really good results in the past with Aspose.Pdf for .Net ( http://www.aspose.com/.net/pdf-component.aspx ) but it's not free. On the other hand its easy to use, well documented, and it's free to try. I did a quick Google and found iTextSharp which can do PDF fields ( http://sourceforge.net/projects/itextsharp/ , https://github.com/itext/itextsharp ) but I've no idea what it's like. Also iTextSharp requires a commercial usage licence for closed-source applications.
Well they are both kind of expensive for what I'm doing. I'm not sure what qualifies a project to be "Open Source". The code isn't sensitive, but really wouldn't beneficial for anyone else because it's tailored for the company that I work for.
I use [PDFSharp](http://sourceforge.net/projects/pdfsharp/). I've found it very easy to use, and great for filling in PDF docs. As long as your fields are named, it's super simple! Once you download it, there's a sample in the samples folder named FillFormFields that will walk you through it.
I'm not entirely sure about dropping it all together, but maybe switching to part time. I need money for gas and food at the least. As for working full time, it like a killswitch for 9 hours of my waking hours. This is coming from a guy who went from not working at all and having all those hours to do homework and free time to unwind to the next extreme. If I decide to spend a single second out of work with nonproductive time, nothing get's finished. Hypothetically, if I cut into my sleep hours, spend all day studying, working, and spend the rest for eating/essentials, I could pull it off. It wouldn't be biting off more than I can chew anymore, but cutting it close with an uncomfortable mouthful. Going part time is a double edged sword too because I lose my employee benefits and there's less money of course. Also If I go down that road, I can forget about ideas of buying a car (which I don't own atm), I'd have to stay skinny cause I can't buy enough food to get adequate calories, and I'd have to bring this up to my parents (who were proud when they first saw me working that much, but now I'll have to disappoint them. I don't what to expect as a reaction either.)
I think there might be some confusion. `Func&lt;Targ, Tresult&gt;` is contravariant in `Targ` and covariant in `Tresult`. So yes, you're correct that a `Func&lt;int, Giraffe&gt;` can be converted to a `Funct&lt;int, Animal&gt;`. But I was talking about `Func&lt;Giraffe, int&gt;` and `Func&lt;Animal, int&gt;`, which cannot be converted in that direction. In general, `Func&lt;Base, Derived&gt;` can be converted to `Func&lt;Derived, Base&gt;`, which is pretty much what the OP shows.
I saw a bunch of .ToJson and .FromJson methods in his code. I tried to find them in json.net but none of them worked... did he create those himself or is that json.net 7.0? EDIT: At 48 minutes he shows the method x)
This works for me: PdfDocument d = PdfSharp.Pdf.IO.PdfReader.Open("c:\\temp\\test.pdf", PdfDocumentOpenMode.Modify); PdfAcroForm form = d.AcroForm; (form.Fields["Text1"] as PdfTextField).Text = "testing"; d.Save("c:\\temp\\test2.pdf");
I noticed .ToJson and .FromJson on a Point class. He wrote the Point class. The code for Point was there in the example too. So its safe to say he implemented those in this example. 
That worked but I had to use a pdf that wasn't version 6.
The PDF I used was [Acrobat version 6.x (1.5)](http://imgur.com/Hzh3rLa) and worked fine.
Agreed. It's not really intuitive until you've spent a lot of time experiencing all of the nuanced behavior. That's why I was looking forward to the replies to this topic, having spent years working on WPF, I still feel I would definitely benefit from a concise guide. One thing I've always been tempted to do, but never had the time/energy to do it, would be to do a true grid system (like Bootstrap) and use columnspans to lay everything out. I think it would work well at the top level, but when you get to nested and composite views, I think it might break down pretty quickly.
Visual Studio Express has all the feature's you'd need and is free. Nevermind...sorry, realized you specified Chromebook OS. Why not get a machine to develop with?
no no, it's referenced. to value types the compiler won't even let you do changes when foreach'ing over them. 
I am currently saving up for a laptop that I can use for development when I am away from my desktop but I am quite a long way away from getting it. 
What when the application you're dealing with deals in string ids? (user wouldn't see)
I have removed your post because it is not a positive contribution to /r/csharp and its readers. I suggest you attempt the assignment, and if you have a _specific_ problem or question regarding a _specific section of code_, then feel free to post it. You should post a specific and clear question that can be understood easily and answered directly. Consider the [StackOverflow "How do I ask a good question?" guidelines](http://stackoverflow.com/help/how-to-ask) as a good reference.
That's one of the results of what's going on. The biggest thing is that the C# and VB compiler platform is being open sourced, so anybody can look at the code and use it in their own projects (Roslyn is released under the Apache 2.0 license). People will be able to build their own versions of the compiler that have syntax or semantic changes to C# or VB, or will be able to add runtime compilation features (like what would be used in a REPL), or a lot of other things.
Not specifically - what they are doing is making it easier to develop things on top like the features resharper provides. Resharper has had monopoly on this so far because of their own "compiler". So the play field is levelled a bit because others get this through Roslyn.
What have you tried? Try using a combination of `for` loops, `Console.Write(char value)` to write out each single character on the line (without forcing a new line), and `Console.WriteLine()` to move onto the next line. EDIT: You might also want to try formatting your desired output as [preformatted text](http://www.reddit.com/wiki/commenting) as right now the markup syntax treating your dashes as horizontal lines. EDITx2: Is this for a console application? Or do you want to create the equivalent text string?
I tried it again and it worked. Thanks.
Console App.
Ok, so you can `Console.Write` and `Console.WriteLine` methods I suggested. Give it a shot. Beyond that, I would suggest that you try /r/learnprogramming instead; /r/csharp isn't for learning the fundamental basics of programming (though, generally speaking, its members are happy to help with specific **C# related** questsions)
Congratulations on producing possibly the worst description of a problem I've yet seen on this sub. I have no fucking clue what you're trying to do here.
&gt; but am I the only one that thinks this will get confusing? C# is just catching up with Java static imports, after all both eco-systems tend to pick features from one another.
He wants to build a "Z" shape using asterisks with variable sizing. Starting with: **** * * **** And increasing in size: ***** * * * ***** And so on.
The question is, should we catch up with Java in this case? IMO this is a feature which makes code easier to write and harder to read; that's not usually a good thing.
It depends on the use case. For this it may not be clear, but, if you're using a lot of functions from the static Math class, wouldn't it be clearer to drop all the "Math." prefixes from each function?
The biggest thing is that Roslyn is an API. It would be used in this way even if it was not open source.
Because strings are not guaranteed to be unique, are next to impossible to index against, cause the CPU to thrash when linking foreign keys, and require your input sanitization to be absolutely 100% perfect. If you want a set of string fields to comprise a unique value, use a constraint.
Buy a real computer.
And the API is fucking amazing. It's so easy to write custom refactorings or diagnostics with fixes. I've already written a few and once you get the hang of it, it's a cinch. I cannot *wait* for VS14 to hit RTM and see what kinds of nifty functionality the community cooks up.
&gt; Of course it will never happen They're fully supporting Linux and OSX in ASP.Net VNext. Of course we're talking about deploying a Web app on those OSes, not running Visual Studio on them. For OSX, use MonoDevelop, which (hopefully) will adopt Roslyn and have the same features it'll bring to VS. For Linux... well, no one gives a fuck about desktop linux. It's a server OS and is only useful to deploy server side apps. 
Question: Is there a need for Mono at this point? Or can it simplify to just supporting OS-specific libraries? Now that the compiler et al is open-source, doesn't this defeat the purpose of Mono? Thoughts? There are articles such as [this one](http://tirania.org/blog/archive/2014/Apr-09.html) that show how to compile Roslyn in Mono. However, doesn't this whole thing mark Mono for becoming redundant? 
It'd better be! They developed it for 5 years :)
There is no need for the Mono C# compiler but in order to run .NET code on non-Windows platforms you need Mono.
"Fully supporting" as in letting the mono team know when asp.net vnext tests fail on mono, not contributing patches and certainly not porting .NET to linux and OS X, which is what I'm sure Buda_Dude is dreaming of. I dream of that too.
Again, people should voice these types of requests where it really matters as opposed to a useless forum like this. Go to the .Net foundation forums and start a thread about *"Please Microsoft do something to prove you want people to use .Net on Linux, such as actively contributing to Mono or something along the lines."*.
Except now, in theory, you can compile .NET to run on non-windows platforms. Right? 
Proper usage would be between your first two sentences. The semi-colon you've used here is incorrect; It should separate clauses that could both be sentences independently.
I was trying to make a joke haha-eh.
Sorry. I majored in English.
Which part is confusing you? If you already created an array to store the names of the properties, then I assume you can figure out how to create an array of the same size to store the number of times a property has been landed on. From there, we need to know how you receive information about when a square is landed on to proceed. (As a side note, are you required to use arrays? Because arrays are really close to the worst possible way to actually solve this problem.)
An array of integers should do, or better yet define a structure and then create an array of structure instances. Arrays are fine to solve this problem especially for nubes.
You always could, with either the Microsoft or the mono compiler. C# compiles to platform-independent bytecode. The runtime, including class libraries, is where mono is most lacking, not the compiler.
The .net base class library sits on top of the win32 API. For this reason mono is still necessary.
this is the IDE we all need https://www.youtube.com/watch?v=PUv66718DII
[Here is a gist with a fully working example.](https://gist.github.com/GeirGrusom/347f30e981f33972c934) Requires that you add a reference to OpenTK and Windows Forms. It should show you a little bit how it is initialized and used. edit: there is a lot of code there, but it uses every OpenGL feature you need. 
Like any good language feature, it'll be confusing if people use it incorrectly. If it's used for its intended purpose, it'll actually make code much cleaner to read. Don't forget though, your IDE is very clever and will always be able to tell you what method is being called with just a quick hover.
I haven't had a chance to watch it yet - Did they say no more about the future of the native featureset?
Think of it like two balls on a pool table. If they're rollng in the same direction, disregarding friction, the faster ball transfers it's velocity to the slower. Assuming equal masses, the velocity lost by the faster equals the velocity gained by the slower. Grab your physics textbook, the equation will be in there.
You can't compile the .NET Framework to run on non-Windows platforms. Roslyn is not the .NET framework and the .NET framework is not (fully) open source. Even if it was chances are you would have to do a lot of work to port it to other OSs
1. You should never use .Result unless you know exactly what you are doing 2. The problem regarding race conditions is due to the C#/Java broken type system that allows to mutate objects with multiple references and has nothing to do with async. You need to switch to a language like Rust to avoid this. 
Look at the sidebar, all you'll need for the basics are there. The first link is your IDE, the second is an introduction to OOP you can probably skip with your experience, the third link is a fantastic tutorial series from Microsoft that will teach you the language. Use MSDN and Dot Net Perls for reference. Good luck!
Thank you very much for the example. Looks like I have to learn a lot of new things, but I'll try to work it out. :)
You should totally check Bob Tabor's learning videos, that guy is simply awesome. I'm currently learning C# from scratch using his videos and I'm finally getting the feeling that I got it! *edit: [Here's the link to the series](http://channel9.msdn.com/series/C-Fundamentals-for-Absolute-Beginners).
I read this post hoping to debunk it, but it seems to be a criticism of the implementation of async/await rather than of the abstraction itself. Besides, async/await semantics are stupidly simple, they're just unfamiliar until you "get" them.
I'm pretty sure the C# and F# versions use the same concept, but not the same engine code.
Or F# :) same stack as C#, and hey, it's actually stable/battle-tested.
Awesome, I applied. Thank you!
Not yet. I imagine this will soon change. 
This is correct, Given that the F# compiler is written in F# and the C# compiler isn't.
I have no clue about F#, but I'm pretty sure no CLR language can solve this issue. You need a completely different type system, where you can gain access to an object only after locking a mutex AND you can no longer use the references after unlocking it. This requires region-based borrowed pointers, which the CLR obviously lacks. Or it requires significant performance loss by either making everything immutable except Mutex-based cells, or by checking at run-time whether objects are locked by the current thread, or proxying all pointers (and of course neither of these gives compatibility with normal CLR object access). 
Visual Studio Express is free. That is all you need. You don't need to subscribe to MSDN to develop in .NET.
I didn't get the race condition either. If someone knows where the race condition is please share. As far as I understand the first part of the method is guaranteed to execute before the second part so how can that be a race condition even if they do execute on different threads? Maybe the thread is not required to write to memory and may keep the object in the CPU cache even if the method is finished?
He complains about his async void method but you should never use those. He should be using async Task instead.
I don't think they do. F# emits really strange lookin IL.
Well in both cases the engine is a library, so your reply doesn't really apply.
SharpDevelop works fine. Or, under Linux: MonoDevelop.
What? There is no shared engine for this. Both C# and F# are open source now, and neither uses any libraries compiled by the other. (Except the BCL)
Yes, the compiler could be written in VBScript, ultimately it's the IL that said compiler spits out that matters.
I think his point is specific to implementing async as an operator in C#. Your point 2 stands but given that the C# type system is broken - his point stands too. For instance he stipulates that the benefits of inline expressing async in F# but it is implemented using computation expressions. C# equivalent would be LINQ chain methods (and lambda expressions, incidentally, are the only place where you can put async/await so it reads and looks like it makes sense). However, there is no way to implement an inline keyword operator with LINQ chain methods (or with anything else for that matter) so the C# async implementation is essentially a compiler directive which cannot prevent (as you rightly pointed out) mutation. In the absence of a mechanism to force immutable states, async should have been implemented only as library methods of extending (certain kinds of) collection types and nothing more. That way it could be self-contained and be able to enforce custom rules (like immutable states) as part of those types and nothing else. But instead it looks and feels like misplaced fsharp-itis which results more often than not overzealous and underapt h@ck3rs pepperspraying code with async/await whenever there is a "requirement" for concurrency. The whole thing looks like C# crew got a case of "whatever yours can do mine can do too" and tried to pull off another `using` clause but the problem is that async is a not a clause but a compiler directive which does not validate anything meaningful at compile time.
If you're able to afford ~$30/mo [Pluralsight](http://pluralsight.com/) is the best place to learn all things .NET.
+1 for Bob Tabor. That's where I learned the basics. It gave me the foundation I needed to understand the more advanced resources out there. 
Are you using any source code versioning? Those usually have a diff tool built in. (if not, use one! Even if it's an offline-local-only one like [Bazaar](http://bazaar.canonical.com/en/) or a locally hosted Git) I just use [TortoiseSVN](http://tortoisesvn.net/) and its built-in diff/merge tools. Depending on how tight the integration is (for example, TortoiseSVN lets me manage conflicts and mark conflicts as resolved directly in the diff program) and what diff tool comes with your version control, this might be the preferred or "best" tool to use. If it's just a one-off diff, you can use an online tool like [DiffChecker.com](https://www.diffchecker.com/) Apparently there's a [Visual Studio extension](https://visualstudiogallery.msdn.microsoft.com/dace3633-0b51-4629-85d4-c59cdce5bb3b) that can view diffs as well. (I have not used this, so I can't recommend it, but feel free to try it) Finally, there are other standalone Windows programs like [WinMerge](http://winmerge.org/) among several others. Again, can't really recommend one specifically as Tortoise's diff tools have served me well enough (though perhaps I don't know what I'm missing) and haven't had the need to do 3-way merges. 
That's what I'm starting with now. I'm not sure how the limitations will affect me, but I'd like to be able to work with Sharepoint as well.
[WinMerge](http://winmerge.org) is great for that sort of thing.
the "limitations" won't affect you at all. Express offers everything you need to start developing AND create/maintain small/mid sized projects. SharePoint is another story, though. Last time I tried you could only run it on Windows Server.
Hello folks. I've been googling for a couple of hours and found this: http://stackoverflow.com/questions/13752998/compare-two-files-in-visual-studio-2012
Thanks for this example. I'll be referring to it as I move along in my study :)
We use beyond compare and it's great. It's not free, but at $30 it's well worth the money. 