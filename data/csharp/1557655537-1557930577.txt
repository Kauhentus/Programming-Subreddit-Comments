\- If it's simple SQL code, the performance gain is so small it doesn't matter \- If it's complex SQL code, you are breaking SOLID and you're in for a lot of trouble \- SQL code is not testable \- SQL code runs on the database server, which prevent horizontal scalability \- SQL code beyond the basics is not portable, some database don't even provide stored procedures (and it's for the better) &amp;#x200B; But it's not like I'll be the one to work with this code so...
I'm using 6 GB laptop which no more works with me. I had to order a SSD and additional 8 GB RAM stick. Simple reason is JavaScript.
Do you know if this can somehow be done in an elegant way using the authorize attribute on top of controllers/methods to run some custom code that will check the permissions in the database, based on the parameters the user sent in his request or will I have to put a piece of code at the top of every controller method to do this?
You don't need 8GB for js lol, your main concern for resource use is the operating system and the browser. If js dev is slow with 4GB install linux
Oh boy. I'm already using Linux.
If I was to encode the JWT token with all their role-per-room permissions or give them a token per room, would I be able to generically use the authorise attribute on top of controllers/methods to check whether they're are authorised or not for the request they're making or would I still need a piece of code at the start of every method to check the information in the token to determine if they're authorised? It would need to be generic and take into account what the user is requesting, as all users will be using the same multi-tenant API.
Hi, i started 1 year ago too and what i like to do is to create a Class DataCalls with all the functions needed to access the database. Then I call this class from my view model Bonus: i like to use Entity Framework and I encourage you to check it out
Also Manchester, pretty lucky living here since there's still a wealth of software jobs available and commuting into the city centre isn't too bad
MVVM is Model View ViewModel (as you know :) ) but there's a fourth part you need called "Services". &amp;#x200B; These are the part of the application which are not directly related to the UI. In this case you'd have a data access service (probably a singleton which just means there is only one instance in the entire application) and you would pass that to the model, or view model in its constructor. &amp;#x200B; The Model part of MVVM is technically optional. Sometimes there's no benefit in having one if the view model is simple enough not to warrant it.
Data access isn't a core component of MVVM, so you're kinda free on how you want to do it. What I do is having service classes, injected into my view models. These classes manage data access, calculations and so on, so I can keep my view models as simple as possible. So basically, it's like adding a 4th layer to MVVM, the Service layer. See [this](https://blog.qmatteoq.com/the-mvvm-pattern-services-helpers-and-templates/) for some more explanation. Also, I use the [Catel MVVM framework](https://github.com/Catel/Catel), which is a huge beast of functionalities for WPF applications. It integrates a lot of the good practices you'll learn about, like services for example. But it's really huge, and it'll take some time to learn. Yet, it's so good I'd wish it was .NET standard.
Yeah fair enough, the wear of ssds is unlikely to cause actual drive death, but modern ssds use wear leveling so constant writing to swap will cause that to kick in and cause significant performance issues as things are shuffled around (especially if the drive is almost full)
I was in Manchester a few weeks ago (mom is a Mancunian). Nice city. Affordable rents, from what I could tell.
In france, for an average of 35h/week, I often see 30-40K by year.
1: It is best practice to use Public/Private key pairs for SSH authentication so you don't have passwords kicking about in config files or in memory. P.S. You have IsPasswordEncrypted flag but I don't see any crypto... hopefully you don't think base64/hex encoding is encryption right? right? 2: You should really split the actual logic out into separate classes, not just have everything in the code behind for the forms. This way you can write some tests to verify the logic. 3: Surely this kindof thing should be run as a service, not a GUI application? As if someone closes it you no longer have backups... 4: You seem to copy the files one-by-one, is this not hellaslow with a large number of files? Why not do the whole directory in one go?
Do you know if this can somehow be done in an elegant way using the authorize attribute on top of controllers/methods to run some custom code that will check the permissions in the database, based on the parameters the user sent in his request or will I have to put a piece of code at the start of every controller method to do this?
Use a text file, it would be useful for learning System.IO and stuff. If you need to increase the information to store, you could use a simple XML or JSON file. As rjoshep says, keep it simple, no need of databases.
What are the benefits for mentors, besides the personal satisfaction of helping other people?
 What do you mean by committing them? I just googled it and it said to just add resource &gt; then select the dll. Is there a way to do that progmatically?
Winforms hasn't been kicked to the curb just yet - there was support announced for Core 3 and VS.NET 2019 will have the designer. https://github.com/dotnet/winforms
Do not intertwine hardcoded SQL queries directly in your viewmodels. Instead add a new separate DAL/Repo project which exposes an interface to CRUD data. Sandard practice is pass in an implementation of this interface to all viewmodels needing it. public class MainViewModel : IViewModelBase { private IRepository _repo; public MainViewModel(IRepository repo) { _repo = repo; } }
I posted my salary at a previous company; I was the only who posted a salary at that company at that position. It was $80k. When looking at the glassdoor "estimate", it said $50k-$60k for that position. No idea where they came up with that number
He is referring to the .dlls you have in the GitHub. A commit is when you 'check code in' to GitHub or other source control. Generally one stores only the source code in the repository and the dlls which are dependencies are added at **build time** (i.e. for example by download via NuGet, through Visual Studio, when compiling the program). The dependency is declared in the .csproj file of the project. It looks like you referenced the dll file itself, but if you reference the nuget package instead the dll will be downloaded before building.
Let me start with thank you for reading and being so thorough, im glad someone else has seen it and i will definitely make changes when i get time 1 - the use case at work was using a low level password (similar to admin/admin) on a linux server that gave us readonly of logs and config files, the IsEncrypted was to give backward compatibility to older releases of the software that was just in plaintext, ive seen multi-thousand dollar software use far less encryption 2 - i will look into fixing this, i found it readable but im also self taught 3 - the software was on my work laptop, and every time i went to a different location i would pull the same files but from different server, i did think about moving it to an automation type, like every 24 hours but never got the time to implement it 4 - The examples are not great granted but they are just examples, or proof of concept &amp;#x200B; As i do more research i realize that my use case was VERY unique
That's not really how wear levelling works, and most drives will reserve enough space that that doesn't become a problem. Again, swapping is slow and crappy, even on an SDD, but it's not going to be extra slow and crappy because of wear levelling.
Its around €35k in Ireland per year so 670 a week. In Argentina it is around 30k pesos a month (So in Euros around 150 a week, when you take the cost of living its like earning €300 a week in ireland or €15000, which is pretty crap) In Toronto ive noticed it around $47k + a year (So around €32k + or above, similar cost of living) &amp;#x200B; I use Ireland as its where im from and its got a good salary level. Dont move to Argentina lol
You can look into how Orchard Core handles tenancy. Basically for each tenant you would have a separate instance in DI of the authorization service and JWT service connected to a different db table prefix or table, and go from there. It's possible, but it's not going to be simple to recreate unless you just use Orchard Core or another tenancy manager.
I'd change it to not rescale the graph on the x-axis with every point that you add. Instead, the graph could be fixed for example -2min to 0min (present). When you update points will push from left to right as time elapses. Also it looked like your log file was spitting out basically in CSV format, which is great. However I'd make the first line in the CSV the headers to the columns (eg. Voltage,Frequency,...)
Thats some awesome feedback, I'll definitely give it a go. Much appreciated
https://stackoverflow.com/jobs/salary
Oh man. That does sound more complicated than I had hoped. I guess I might be better off just creating a class that I call at the start of all my controller methods to check the information in the token to determine if they're authorized or not.
WebHooks are a way to make Twitter invoke one of your API endpoints on a new tweet. That would be the best option, if applicable. If you want to get all new tweets from a specific account, then you can just use the Tweet search function: [linvi/tweetinvi/wiki/Searches#tweet-searches](https://github.com/linvi/tweetinvi/wiki/Searches#tweet-searches) Use the [search operator](https://developer.twitter.com/en/docs/tweets/search/guides/standard-operators) `from:user` to limit your search to a specific account, and use `SinceId` filter of Tweetinvi to get only the new ids. That requires you to just store the id of the last seen Tweet. To my knowledge this information is not stored on Twitter, so you need to keep track of it yourself.
Thanks for your reply. I'll keep looking into webhooks if that is the best option. On the documentation it wasnt very clear from a beginner point of view so I'll check the other options also. Thanks
You are asking that you want the laptop to last several years. If the RAM or SSD is soldered on the motherboard, find another laptop. 8 GB is more than sufficient enough for programming. Of course this vastly depends on what programming language you are using, the type of projects you are developing, or the type of stack you are planning to use. From my personal experience, Visual Studio has no problems with 8 GB of RAM. Android Studio on the other hand, it requires more RAM, especially if you plan on using an emulator.
Webhooks require your application to be accessible from the Twitter servers. So the application must be running, and must expose an open port your application listens on. You basically tell Twitter: "Hey Twitter, if there's an update, please notify me by calling this HTTP url!"
What? Recruiters are paid a commission based on the salary you agree on. Their commission doesn't get taken out of your salary, or at least not in any first world countries I know...
Teaching isn't the best way to learn; It's the best way to rehearse and cement your knowledge. Neither does helping someone doesn't equal to being a teacher or a mentor as well as helping people for longer terms. Helping people long term is also a huge commitment. What you're describing to me doesn't seem to be a mentor program, but a more isolated stackoverflow, subreddit or normal dev chat. - Exercises can easily be found through search, and people who don't know that on any platform receives that info through for example this subreddit. - Discussions are commonly done subreddits and normal dev chats, as it is often done through here for example. - Feedback is also done through the above mentioned means. I'm not trying to talk down on this, like i said it's just what I think, but the idea doesn't seem very thought out. What you are mentioning is already readily available through either a quick google or a quick question.
Best way you can do that is just to go around on this subreddit, dotnet subreddit, stackoverflow, and dev chats like some discord server. Either that or go search for someone that's looking in the wrong places and ask them.
Keep in mind in large countries like the US salaries are highly regional.
This the [2018 survey](https://stackoverflow.com/jobs/salary). I can’t find salaries in the [2019](https://insights.stackoverflow.com/survey/2019).
I don't think Microsoft docs are overly complicated if you understand the underlying concepts of OOP.
I would love a 35h week, in Sweden 40 hours is pretty much standard. I rather spend some more time with the kids rather than more money in the back.
yes. but I have only some questions if your free.
This is a great answer. I was just thinking about the "show dialog" use case, and I see that the link you provided has that exact example.
Glassdoor has salaries from many companies/job titles, though not really an industry average or anything like thay
You could either define policies in your startup.cs or make your own class that inherits from AuthorizeAttribute, the latter is more elegant. Definitely agree with bzBetty, the less that's in your JWT the better, just use it for authenticating, authorisation via some form of data store.
&gt; ive seen multi-thousand dollar software use far less encryption this is never an excuse to not follow security best practices yourself
Use XmlSerializer, but understand how it works, change your code +install accordingly.
In addition to the things the other people have said, two simple recommendations I could tell are: * change the name of the files usrcntrl\* to a proper camel file name like UserControlxxyyzz * change the string methods in the Program.cs file to const strings
Your job just got 10x better.
[System.IO](https://System.IO); &amp;#x200B; File.ReadAllLines(string YourFileName); returns a string list with the lines from the file
How far have you got with it so far? Essentially you need to read the file, split it into an array then jumble up said array. I'm not sure about the best way to do the jumble as I'm not that experienced, however the first 2 steps shouldn't be that hard.
Much appreciated!!!
You can also write your own authorization attribute that performs that check. Then in the future if you want to migrate to a different method, all of the logic is managed in the attribute class. So many ways!
Correct, but if a recruiter brings you in @ 100k they typically get 30% so you are costing the company 130k in base compensation. So there may be less wiggle room b/c as you get ask for more you also increase what they pay the recruiter.
I like the idea. I'm available too, I have years of experience in C# as well as HTML, PHP, JS, SQL, Lua and C++ - so feel free to hit me up in the DM's.
I"m in
&gt; SQL code is not testable I beg to differ. We simply run the SQL on the C# side and assert against database changes. It's trivial tbh.
I think this could be really useful
Yes.
Yeah that would be a pretty cool way to solve the problem, but would this be possible considering that I'll not only need access to the token claims, but also some of the HTTP parameters sent to the requested method? I'll need to access the room ID sent as a HTTP parameter to check in the token/database whether they have access to that room, but I would imagine that when using an authorization attribute, you don't gain access to the method scope and the parameters until after the authorization attribute code has run?
The simplest solution would be to generate a random number between 0 and List.Count - 1, then pop that item out of the list, add it to the display, and repeat until the list is empty. There are slightly more complicated methods if you want to shuffle a list in place, but I'm not sure that's necessary here.
I am in too... I am presently learning c# and trying to make projects on my own.. yours help would really be helpful...
Yes
Creating a custom authorization attribute would be a pretty cool way to solve the problem, but would this be possible considering that I'll not only need access to the token claims, but also some of the HTTP parameters sent to the requested method? I'll need to access the room ID sent as a HTTP parameter to check in the token/database whether they have access to that room, but I would imagine that when using an authorization attribute, you don't gain access to the method scope and the parameters until after the authorization attribute code has run?
Looks like you have lots of research to do ;)
Haha absolutely. Thanks for your help. :)
Honestly, I think that 8GB should be standard for any average office user. 16GB should be standard for any developer or power user. And it's not like ram is stupidly expensive either.
Yes, i would like to participate if you are still free
Yes that would be amazing
Yes would love some extra mentoring!
The WPF application [found here](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) shows how to create an n-tier application using MVVM. It shows how to inject services correctly into your ViewModels. The demo is for [AdaptiveClient](https://github.com/leaderanalytics/AdaptiveClient), a library for creating a scalable and loosely coupled service layer.
I'm not interested but just wanted to tell you that you are doing something great!
&gt;The Model part of MVVM is technically optional. Sometimes there's no benefit in having one if the view model is simple enough not to warrant it. That may be true in a very limited number of cases but really you are confusing two different concepts. A ViewModel is typically a denormalized view of the data. Very generally speaking it is a class with properties that match what a user sees on a page or a screen. It is defined at the presentation (highest) level in the application A model is a database concept. Generally it is a class with properties that match columns for a table in a database. It is defined in the data (lowest or near lowest) layer in the app.
I am in
You can ask me. I have 20 years of professional experience. Been using c# since inception but can also answer general dev questions. I don't gave great knowledge if Javascript libraries though.
Yes
How would you recommend for a newbie to start learning? I have tons of (advanced) ideas in mind but I lack the skills to implement and create them in real life. I just started messing around in Class. Would you have a certain program/idea that you can give ? Thanks in advance!
Giving the prices of a self-built desktop is sort of comparing apples to oranges, isn't it? The rest of this thread is about laptops. Do you have an example of a powerful, cheap laptop?
I see thank you, i'll try puting it in to a textfile then. I've used SQLite before but feels like it's pretty overkill for this.
Thank you :)
&gt;i like to use Entity Framework and I encourage you to check it out. I need to learn EF. I started poking around yesterday and bookmarked a page on Tutorialspoint and the Microsoft docs. Are there any other good resources you recommend that I should check out?
Why don’t you just create a YouTube channel and teach more people?
when and how do we start teach?
I think what you really want is a [List](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.list-1?view=netframework-4.8) - a C# List functions very like you seem to want an array to function. (Other languages have things called arrays that work very much like C# Lists, which may be where you are getting confused). A C# array is a pretty low-level data structure. Literally all you are doing is saying "give me a block of memory that is as big x many of this type of data" which you can then access by using the [] notation, with the number inside the [] giving the offset from the start of your block of memory. So number[0] gives you what is inside the first int in your array - "go to block of memory called 'number', and get me the int at the start of it", and number[1] gives you the second - "go to the block of memory called 'number', and give me the int that is offset by 1 from the start of it" Nothing it that records which of these have been used by you previously - you declared your array with 10 elements, so it is a block of 10 ints. You can read any of them immediately after you create the array, without putting anything there yourself (they will be 0, since C# initialises int to 0). The List on the other hand is a variable length array. When you declare it, it has no elements. It has an Add() method which you use to add additional elements onto the end of the List, and you can see how many you have added using the Count property. You can access individual elements you have added previously using the same [] notation as with arrays. And remove individual elements using their index number, which shifts all higher elements down to fill the gap (so their index number changes). In most cases, unless you really really need to squeeze every bit of performance from a bit of code, a List is a better data structure to use.
Yes
I would love to take you up on that offer! PM me!
Yes please
I've tossed around the idea of an "open source" book for C# and such. You have me thinking much harder about it now. I was thinking something that could easily convert to PDF and have some underlying format that could be sent for printing as a book if someone wanted some treeware.
No, and what you've described doesn't invalidate what I wrote anyway, but I do see where you're coming from. &amp;#x200B; What you're describing is a very simple system with a tightly coupled "database". The model can represent a variety of things. It can be a direct representation of the database schema, this is quick to realise but will hurt as you scale. It might be a domain event "User 1 wants to order a cake, can they?". Regardless, you still need something to act on the model and this is a service. &amp;#x200B; The critical thing here is that the model is fundamentally dumb, and you still need a service to commit, save, or email it to Jon in accounts. This bit is tricky. Once you make the model smart, let it send its own emails, you're back in service territory. &amp;#x200B; If your model is doing smart stuff, it's not a model. If your view model can send a domain message to a service without having to instantiate a dto, then it doesn't need a model, although that message is probably a dto ;) Back to the email example, a view model could quite happily talk to the email service without worrying about a "proper" model. My big sell here is messaging. I'd have the view model message anyone who is interested the fact that A happened. This is closer to what you describe, but does nothing without a service to handle the messages.
Sounds promising!
Light, powerful, cheap..pick 2. Laptops are light. But it still applies to laptop. Heavier laptops usually cost less for the same power. Hence why ultrabooks are generally a bad deal unless weight is what you care about most.
Thank you! I would love to [hear more](https://www.mysurveygizmo.com/s3/5008200/Frogui-Customer-Development) about your needs.
Yup I think "overkill" is the right way to put it! Especially since you're storing host names: they cannot, by definition, contain a newline character ('\n'), so you have a natural delimiter! Just store them one-per-line in your file and then call [`System.IO.StreamReader.ReadLine()`](https://docs.microsoft.com/en-us/dotnet/api/system.io.streamreader.readline?view=netcore-2.2) in a loop: each call will return one host name for you. Best of luck!
Yes
Agreed. There are some good ones out there already, but you can always use more since no single channel really covers everything and it's good to get different perspectives. One I like is [Tim Corey's channel](https://www.youtube.com/channel/UC-ptWR16ITQyYOglXyQmpzw). Really good demonstrations and concepts behind the code.
You're like the guy that proposes at weddings
Yes!
Yes I'm in!
Youtube or livestream is your best practical approach here.
For the US we have Hays salary guide, Raymond James salary guide and Dice salary guide. I know you asked per country, but maybe this will help as it shows how different salaries can be on the east coast of the US for example. It can be extreme even in the same state(think 30% difference for example). A software engineer/dev != a software engineer/dev. If someone has more social skills, leadership skills, mentoring skills, nice skills, etc they most likely will be making more money that is probably over the average. When looking at salaries remember most are kind of BS based on surveys. Those surveys are based on certain demographics and really only look at a subset of people. The guides I mentioned above are based on real values since they are recruiting companies(dice not so much). So maybe for the country you are in look at companies who place a lot of people and either find some publications or someone to talk to.
"Should" This is based on which method of learning? As taught in a class? Sure. I suspect that the OP did not learn as you did. Neither did I. I was thrown into toward a need by a company that paid me well to middle through at first. I pieced together from getting my hands dirty at the time. The lexicon of the documentation, at the time, might as well have been yet another coding language to learn. I realized that I needed to take some time and use a course, pluralsight in my case, and go over it all. I'd have to listen when he talked about what I did know too. Because littered throughout were explanations of terms that I needed as well. I can read the documentation fine now. My advice to OP is not "you should know this by now" or anything remotely antagonistic. Your life will be better if you put time, even money, toward a good online course. Starting from the basics that you already functionally grasp. Then, the documentation will become useful for you, and THAT is treasure trove. About as good as any link that others will provide to your question.
 I think we are mostly saying the same thing. The word "Model" has become so overused that it is confusing and thus you see questions like OP posted. In my post above I use the word model to mean a Data Transfer Object (DTO) which happens to be tightly coupled to a database because it is used to shuttle data back and forth to the DB. But a DTO is not the only kind of model..... There are presentation models also that are use to denormalize and prettify data. &gt; The critical thing here is that the model is fundamentally dumb, Good point. And that is another distinction between a model (DTO) and a ViewModel. A DTO is dumb but a ViewModel will often contain logic for creating the view and interacting with the user (but business logic belongs in the service layer only). &gt; The model can represent a variety of things. DTO's really should match the DB. If you want to reshape the data use a presentation model. &gt; It can be a direct representation of the database schema, this is quick to realise but will hurt as you scale No this is not true. That is like saying if you define a database schema you can no longer scale. Your models (DTO's) are nothing more than in-memory representations of your database tables. What makes your code scalable is if you keep your models dumb, use presentation models, and put your business logic in the service layer (not the ViewModel or controller). Databases change all the time and DTO's have to change with them.
Starting youtube is my vote, reach more people, everybody wins 😝
Would this help me with Unity or is C# slightly different in Unity?
Yes!
Yes, this is exactly what I meant :)
because direct mentoring, the thing they say they want to be good at, is very very different than generic teaching
there's no need to correct them. what they're doing is fine. get out of the way, and let a junior dev acquire the thing they need
What's wrong with that? It's a time to get yourself married! Those selfish brides and grooms...
Lol, good point.
Yes. Thank you.
There's no reason your application should run in a sdk-based Docker image. Your Dockerfile is very poorly.
I agree, Tim is by far best Youtuber I found. Every principle is in code not writing it on board.
I think i've accomplished basically that now. The one thing left to do now is to ping the hostname. I have got the function working now, to display all the strings to console. Thank you
Yes. What a great opportunity. I'm not quite new to C#, been developing @ work with it for the past year or so but I'm starting to reach some places where I'd really enjoy talking over things with someone for more clarity. Other Dev's at work use a much much older stack and haven't evolved with the tech so peer feedback is non-existent. I think my next step in progression is to start using a software architecture (MVC or MVVC etc) in my projects.
Great, I am in.
Well he answered X even though OP actually needed Y OP asking X and getting it solved is kinda ok-ish XY-problem is still the real issue here
Absolutely +1 for Tim Corey's channel, what an amazing resource and an awesome guy for putting out so much relevant content. His Patreon is great too!
That’s what I struggle with: It’s easy to understand if you understand it already.
Crazy! ;) It’s all easy when you understand it all already. I am looking for resources that are good at teaching the concepts in a simple manner. Even what you wrote could sound like gibberish to a beginner. Thanks for the roadmap though. I’ll give it a go!
In person?
Excuse me, my advice was certainly not “you should just know this by now”, you missed the entire point of my text. Basically what I was trying to say was that OP should not be surprised by his lack of understanding when it comes to reading technical texts or documentation that are not meant to be read by beginners. If he wants to understand MSDN docs then there’s no way around at learning some of the more important concepts of programming in an order that makes sense (no one learns about hash tables at day one, for instance). If he’s still at a really early phase of his career he would most likely want to check out sources aimed at beginners. And that’s totally fine, we all have been there at one point in time, me included.
[removed]
It can probably serve both purposes if formatted with that in mind. * Someone requests a lesson for concept. * Video(s) created for that concept. * Other people learn from it too. It probably only gets hung up by volume of requests, but that problem doesn't go away if you're teaching 1 on 1 anyway, it just makes the line longer.
Tim is great for beginner to intermediate learning - I'd love to see a similar style channel that goes a little faster and covers more advanced concepts though. Most channels that cover more abstract and advanced areas tend to either rush excessively, or are just not particularly well explained. If OP has the time and expertise, then there's definitely a "gap" to be filled
I feel the same and also work on giving back too. I recommend starting a meetup in your city. I run one in mine that meets fairly frequently where the whole goal is helping people who come out learn new technologies and ideas.
This is something that will vary ridiculously, well beyond the point you can have any average A junior developer in a rural area in a non-specialized field may earn 10% as much as a senior developer in a very niche field in the capital, even in the same country. There are developers in my country earning 1/4 of what I do, and there are developers earning 6x what I do
Not to discourage you buddy we all start somewhere. As a teenager i also learnt a lot from YouTube, then later I got a more formal introduction in college :)
Yes
Yes
"But at this point all the previously mentioned stuff should be familiar to you." My mind assigned "at this point" meaning "at the point you're at now, OP, this should be familiar to you". I did not provide you the benefit of the doubt and double back. I would've realized that you meant "When you're looking at interfaces in the logical order of learning, then the docs should be familiar to you." My mistake. I completely misread that.
I'm in too.. always eager to learn new stuff!
Thanks for your post. Resonates with me for sure. I think I’ve veered from taking a traditional course as I’ve hacked around in different languages for years and the basics are too basic. That being said I don’t have a good understanding of the foundations that everyone else got in the classroom setting. Maybe, like you said, take a course even if the concepts are already understood to get that foundation to catch up to the already learned syntax.
Yes
Yes, thanks a lot for offering this dude
Which framework are you targeting? (.NET 4.x vs. .NET Core)
Point taken, I could have worded my initial comment in a more consciousness way. Speaking of experience, I never touched the docs for the first 6 months of learning C# because they were not easy for me to understand back then either. You raised some valid concerns about the different circumstances of people learning programming as well.
.NET Core
Looks interesting, and I’ll look at it more later, when I’m not on mobile. Your mobile site needs work, it is not a great first impression. Looks very 2007.
Great. I hope you will share your impressions and take the 2-minute survey. And recommendations you have to improve the site would be welcomed!
Maybe add support for other apps like tplink, that seems to be the most common ones people buy for this kind of thing, I have the hs110 and use the nodejs lib
No, you can't learn to engage in one on one from-scratch tutoring discussions by making videos
You can create a self-contained executable using `dotnet publish`
My company has created a product [Frogui](https://www.lesarde.com/Frogui) that allows C# XAML apps to run natively in browsers. At a minimum this liberates you from Windows, basically allowing apps to run anywhere there's a modern browser.
I get a bunch of warnings when I run that, and also this error: error MSB4062
Don't forget the Indian accent for greater reach.
Yes
Article updated to optimize the Docker part.
I found [Angel Six](https://www.youtube.com/channel/UCJ3AxeCHGPZkMi3kRfCuiHw) to be better.
Here is the one that I used. It took a couple days, during downtime. Again, for at least half of it, I was listening to a guy explain to me concepts that I was mostly familiar with. But he filled in quite a few gaps during even those lessons because I didn't know I had those gaps. (Unknown unknowns) It's free too. https://www.pluralsight.com/courses/csharp-fundamentals-csharp5
Thanks for the explanation! Will definitely check this out!
[x] Closed Source [x] Freemium [x] "...leaning towards a proprietary license..."
Thanks for the feedback! If you care to share, would by useful to know why open source did not make your list.
Do you know any friendly Discord dev channels?
What MVVM library do you prefer?
I'm in too, would be great. How are you willing to teach? Using discord or something?
Dependency on Lesarde.Frogui.Wasm. [Repo](https://github.com/lesarde-co/frogui) just has a Samples directory. No mention of it being open source on the site / in the FAQ.
Twitch stream your lessons along with putting them on YouTube afterwards. It will allow for interactive lessons with a reference for people afterwards.
Are those checkboxes of your preferred license types (which is the survey format) or the opposite, meaning no to closed source, etc.?
I don't mean to argue, but those number seem a bit low. Is there a particular education level/amount of experience they are applying to? I'm also from Toronto, the average starting salary of my graduating class (sample size 9) was 70k (CAD). This was 5 years ago. I recognize it's a crap shoot, and maybe the 4 year degree obscures my perspective, but I'm 99% sure 47k for an average salary (usd or cad) is below average. As an aside, a very shitty startup I briefly worked for in the Toronto area paid people 45k (cad) per year who didn't have experience in software or an education in it. I always had the impression if they could pay less they would. They asked me to take a pay cut to 'make the pay scales fair' I laughed to myself and quit the next day.
An interface basically just takes an idea (usually a "thing your class can do") and then defines what properties and methods your class should have if it wants to be able to do that thing. It allows us to pass our class to any other method which *does that thing*, without either class having to know how the other one handles their part of the process. An interface is literally just defining what each class will provide/expect. This makes things simpler when we want to either implement a new way of doing that thing, or when we want to pass a different class: by using the interface, we can swap either part around without it mattering. Imagine you're making a system that saves files. You have a 'LaserjetPrinter' and an 'InkjetPrinter' and you have a `TextFile` and an `ImageFile`... how do you make sure that they can work together? The first thing we might try could be to have a `PrintImageFile(ImageFile file)` and `PrintTextFile(TextFile file)` method in both of our Saver classes... but that gets unwieldy whenever we need to add a new type of file. And of course each file needs to be able to "make itself printable" by turning itself into a format that a printer can read. Let's say we use a byte array. But what if our files come from two different teams, and the people who made `ImageFile` called their method `ToByteArray()` and the `TextFile` team called theirs `ToPrintableFormat()` That's where the interface comes in. We make an interface called `Printable`. All this interface does is say "If your file is Printable, it has to implement a method called `PrintableFormat()` which returns a Byte Array". That's it, that's all the interface does... but what that achieves is very important, because now our printers know that they can always call the `PrintableFormat()` method and receive a byte array. And our teams making the file classes can just implement that method and know that any printer will be able to use it. And our printers can now have a method like `void Print(Printable file)`. In that method they call `PrintableFormat()` and then do whatever they need to do with it. That method being able to accept a `Printable` (any class which implements Printable) makes life much easier because we no longer need a new method for each file type. And now, for the rest of time, we can create new printer types or new file types without ever having to update our old classes: they will always work together properly because they use our interface.
Youtube channels like Brackeys and Sebastian Lague might be a good start.
Yes, I think it's a good ideia. I would love to watch the videos if you make a YouTube channel
Are those checkboxes of your preferred license types (which is the survey format) or the opposite, meaning no to closed source, etc.?
Hey, great response :) It's really insightful. I think we're at loggerheads because my clients never talk to the database directly, so that sort of DTO isn't helpful client side. There are always some operations that are easier to describe in CRUD terms, but for anything more tricky we describe them in domain terms. So we describe interactions between the server and client in terms of intent "Revert that deal", "Order a sandwich" rather than "Update the deal table" or "insert a new order". Because we're talking about a message "Order a sandwich", we can skip the specific M part, although building the sandwich order can certainly be described, as the model :) So this is the fun bit. When a ViewModel interacts directly with a service, but uses a DTO, is that still a model? I've asked this in interviews and got half a dozen slightly different answers, all of which were perfectly acceptable :) I tend to describe the UI in terms of V-VM-S|M because while you'll probably use a DTO, it might be a case of calling ```Service.TurnOn```. At that point there's no M involved.
Ugh, light gray on a white background. Is this RES, or do you all see code shrapnel like this??
I like this pattern and use it a lot. It adds some runtime and memory overhead but since views are expensive anyway I never had a practical problem with this way. Some people think it’s complicating the VM unnecessarily and violating the KISS principle, which are valid points IMO. Also private setters are more difficult to realize/enforce. I still like it.
I've only used prism. I am not a big library person. The major wpf application I was involved with was internally grown with some input from Microsoft as they were trying showcase it. I am not trying to make an anti 3rd party library stance but everytime I was involved with a library, I feel like any time saved by using something pre-built was killed tracking down an issue or a workaround.
For discord, the discord api server is friendly but its specific, but the best one I can recommend that's not specific is the C# Inn; Decently big so you have a decent verity of people, and nice as well. (Link: https://discordbots.org/servers/475671343463923714) CodeSupport is decent as well (https://discord.me/codesupport). Found a list of programming discords as well, but it's a public registry so your guess is as good as mine (https://discord.me/category/programming). Don't hang around programming discords a lot since I'm stubborn and do my own thing generally. As for other mediums, reddit and stackoverflow are probably among the best. IRC is also a thing you can do if you want, though I can't say anything about it since I don't use IRC. Hope it helps
What is it's benefits over something like Uno? https://platform.uno/how-it-works/
May I abuse your generosity as well? If it's ok, do you think [this](https://www.reddit.com/r/csharp/comments/bjdfug/come_discuss_your_side_projects_may_2019/en1irlc/) is something a beginner can do? (asked in /r/learncsharp but got no answers, so it may be a really dumb question after all). Thanks!
The best way is by doing. Learn the basics, then attempt to make something a little more complex looking up the parts you don't know.
Yes
Would it be ok to get an invite to the API server? I have a few questions about best practices about API design. Thanks!
I was ticking off boxes most devs consider to be negatives for greenfield work in 2019, which is what a new project using your product would be. Paying and/or taking on a license to use a library or service is one thing, as they have the potential for substitution. Basing your project on a paid/licensed framework is essentially permanent. Thus your success lies in the hands of the company that maintains the closed-source product.
Okay, thanks for clarifying. Do any examples come to mind of fairly recent greenfield open source products in the dev framework category that are succeeding as businesses? Being able to study their approach be valuable.
You should definitely try. Normally I would advise finding an existing tool because I think it's been done. However, you want to learn and I think it's a project that will push you to learn. You probably want to save old reports too so saving thrm might be a part. The best advice I can give is to plan your project out, write the user stories etc. Be a use a huge part of software development is being able to be cohesive and follow a plan.
Yes
Xamarin, React / React Native, Angular, Blazor, .NET Core (with whatever UI you want to use), Electron, Android, WebKit. WinUI &amp; WPF are moving to be open source. Basically everything, so almost a non-starter to pay for a UI framework in 2019. It is more a question of: "If all successful frameworks are open and free, then why would I pay for one?".
Watch this [https://www.youtube.com/watch?v=p-fmOJMLl0A](https://www.youtube.com/watch?v=p-fmOJMLl0A) &amp;#x200B; And the rest of that series...
Yes that's part A but doesn't address the business aspect. The paid Frogui (regardless of license type) will include advanced controls similar to those sold by Telerik.
So in testing TypeScript Angular with Karma, when we have a service, we can mock it out for a test. My product I work on at work, mostly uses external systems, such as calls to Active Directory, Machine Learning Services, other APIs, etc. Is there an easy way to mock these out with xunit? We are using ASP.NET Core 2.1
If you have ever done a budget for a project you know that part of that budget goes to employees and part goes to the recruiting companies commission.
I would advise against this for a number of reasons. 1. It makes your class structure more complex. 2. It makes your bindings verbose unnecessarily. 3. An side effects become significantly more complex to implement, e.g. disable apply button due to malformed email.
Hey man, im super stuck and about to cry soon, im trying to make something like "check if int and check if int value between 1 and 4, if not ask again for input" am i anywhere near the right track? &amp;#x200B; &amp;#x200B; while (!int.TryParse(Console.ReadLine(), out numberofdice)) &amp;&amp; numberofdice &lt; 5 &amp;&amp; numberofdice &gt; 0); { PrintColorMessage([ConsoleColor.Blue](https://ConsoleColor.Blue), "Skriv in en siffra mellan 1 och 4"); } Any tips?
I learned it by just doing it. Create little games, for example clones of simple mobile titles and look up everything you don’t know. When you made some progress you should start reading some books, as well as watching more tutorials. Good luck!
Yes
I understand you are trying to start a business by selling a UI framework. I'm saying few people want to pay to have their project founded in a proprietary, closed source technology in 2019. Its different than paying for an add-on library/service. As an example, I'm starting a greenfield project right now and am considering these paid options: Realm.io Data Sync &lt;-&gt; Visual Studio App Center Data Sync &lt;-&gt; traditional ORM/SQL Azure Cognitive Services OCR &lt;-&gt; IronOCR &lt;-&gt; custom ML for OCR In both cases if something went horribly wrong with the product then my project wouldn't be completely dead in the water.
A train is also a substitute for a car. So what? Both have advantages, disadvantages. You just get the option to choose one.
And you can replace a book, a course or even a website by us.
It's public, so of course you can join; [https://discordapp.com/invite/discord-api](https://discordapp.com/invite/discord-api)
Not cool bro.
do you have Discord ?
Thanks, appreciate it!
My two cents: organization is crucial of course to keep you “in check”. But don’t overdo it as well otherwise you don’t even start. There’s no perfect plan so better start and plan as you go.
Mods, remove this post
Erm, what? I haven't actually seen you provide any advantages that I haven't been able to explain why you should do otherwise? You're providing something that's already readily available with no real benefits; where's the advantages over the other options? If you ask me the best way to make a server to help people with programming is not to make one for mentors but a gathering place specifically for newbies; where they can feel that they get to choose how they learn rather than you force alternatives on them. Advanced stuff is really easy to find servers for because its topic is more narrow. If you are providing this service, you have not made that clear at all and have put to much emphasis on the "mentor" part. Also a train is only a substitute for a car in general cases; to get from point A to B, and even then it's limited. If trains were substitutes we wouldn't need cars, or vice versa. They are there because they offer different services through different means and wealth. This is the reason there aren't a lot of these "mentor" discords, because there are generally better options. Edit: I feel like this came across as aggressive or the like, which is not my intention. Sorry if it unraveled any kind of feeling like that.
This. Especially because game engines like unity come with such huge libraries.
Oh I agree but since I work for myself I need stories to be motivated
Late to the party. I’m in
Uno is *based* on the UWP API which is useful if you like or need UWP compatibility. Frogui is *influenced* by the most useful parts of WPF, UWP and Silverlight and HTML + CSS. For example, XAML code can become complex pretty quickly once you move beyond trivial things. In the image at the top of the post titled **Button class samples**, a single Frogui Button object was used for each, varying only properties (In our [demo](https://www.lesarde.com/demo) you can actually tune button properties to see the effects live). In UWP, this would require either multiple custom classes, data templates or similarly repetitive code. Another difference is how HTML + CSS influenced Frogui's API. UWP's (and Uno's) base graphic unit is the **double**. CSS has many graphic units via the [&lt;length&gt;](https://developer.mozilla.org/en-US/docs/Web/CSS/length) datatype so Frogui created the **Length** struct and uses it throughout. It has access to all these units: **Em**, **Ex**, **Ch**, **Rem**, **Vw**, **Vh**, **Vmin**, **Vmax**, **Percent**, **Cm**, **Mm**, **In**, **Px**, **Pt** and **Pc**.
Points well taken. Thank you for taking the time to explain your thoughts. If you haven't done so, I'd really value your input in the short [**anonymous survey**](https://www.mysurveygizmo.com/s3/5008200/Frogui-Customer-Development) since this very topic is covered. &amp;#x200B; And best of luck on the new project!
Pandoc converts easily between a lot of formats, and if you start with Markdown you can publish to Gitbook straight away
Just dive in, imo, follow a video tutorial and get something running. It'll be a huge morale boost, you can show your friends/family, it'll be great! Later on, when you get really bogged down in trying to apply someone's advice off a StackOverflow answer or something, don't be afraid to take a step back and go learn about something the hard way. You can get some really quick and cool results just playing around, but you'll hit a wall eventually and probably need to step back and slowly work through some computer science fundamentals the hard way. Being able to force yourself to keep trying and meticulously investigating/learning/working despite being completely baffled and overwhelmed is the most important thing about being a programmer. It doesn't matter if someone is a genius, so long as they can work hard and get stuff done. Programming is tough, because as soon as something is easy you'll be able to automate it and never do it again. So every day you'll be faced with mentally draining challenges
As a teenager I guess I could have found a BBS to learn on ;)
Oh man that looks great! Thanks!
I’m fairly certain you can save the file into a temp location using Path.Temp. I did something similar for work. I leveraged a database table to persist the file information. I saved the location information to the database table and then passed the file id to get processed by the background job. That seemed to be the easiest way to accomplish using background jobs for processing a file.
There are a few ways I can think of but, at the most basic level, you could save the file somewhere appropriate then pass the file path to the Hangfire job, optionally using a random or sequential name to avoid trying to overwrite existing files. If you want more information about the file, you could create a database record storing the file path along with some status information, but if you simply want to start a background job on the file this may not be necessary.
Xamarin is the only one of those that had a business model. All of the others were just free. They were made by large companies that didn’t need to profit from them
My point was that all the popular web/mobile/desktop app frameworks are open and free (or headed that direction), and there aren't really any proprietary/paid app frameworks being used for greenfield work in 2019. Thus there isn't really a market for a proprietary/paid framework, so there aren't any businesses succeeding at it. Sure, you might be able to get a few people to pay for the product, but it is unlikely to gain much traction as the vast majority of developers are going to be using the popular/open/free frameworks. Let's imagine Microsoft released a proprietary/paid XAML + Blazor framework later this year. Would it happen based on their history? No. If it did, would people pay for it? *Maybe*, but even then, probably not many - and that is with a giant company behind the tech.
Yes please!
I missed your point since Xamarin was in there. It didn’t start free, it used to be a paid tool. Even when it was paid, it was still very popular. It didn’t become free until MS bought the company
Well remember the "greater than or equal to" and its counterpart. I think those are &lt;= and &gt;= but I always forget which way those are typed. You get syntax error if you do those wrong. That way you can forget 0 and 5 and use 1 and 4. With integers it's not that exact, but with decimal numbers (doubles, floats), that makes problems. Also I think that you can't use that tryparse and its result on the same statement, because in compilers opinion that result doesn't exist there yet. One key thing is that make first a working program, then optimize it. It is more important that the program works than it is being fancy with only few lines of code. Almost always clarity beats shortness i.e. if it is more clear for you to make it some other way, make it that some other way.
Thank you! I'll look into this.
Thank you! I'll give it a try.
Neither one. Seattle.
I feel Xamarin's success as a paid product had to do with the state of the environment back in 2011. Much different landscape now, hence why I emphasize the framework choice of "greenfield 2019" projects.
The better (and equally simple) way to shuffle a list is Fisher-Yates, which is an iamverysmart way of saying “swap each element in the list with the element at randomly selected index”. You can certainly find example code online for this. The problem with popping random items is that removing an item from a list takes linear time- you have to shift all of the subsequent elements down. It’s probably not gonna matter in this example, but it’s a good habit to not do things like that if you don’t have to.
I have two years ex with c# and I want to continue developing with it, but as I see a lot of ppl hate it I really dunno why, it's easy and fun especially with the next versions of .NET. So do you recommend me to keep going on? also, what do suggest me to learn for professional use?.
Think of the cord to an electronic device and an outlet. The plug is the interface, and anything implementing that interface can be plugged into it and used with the outlet. This way, at least in your region, you don't need different outlets for every single device. Very basic example, but that's about the simplest way I've found to explain the general concept of interfaces.
/u/audigex did a great job writing up practical examples of how an interface is used and how it helps improve your code. But given that you've watched some videos and it's still not clicking, I'll offer another explanation that will, ultimately, be much less helpful than what's been said already. You're the mayerin an action movie. There's some big trouble coming to Maple City and you need someone who you can send in and deal with that problem. You don't care who it is, but you want to know they can do the job. interface IDaySaver { void SaveTheDay(); } class BusterMcJackson : IDaySaver { … } Sure, Buster McJackson sounds ok, and you know he can do the job, so you go ahead and send him in. class MapleCity { SendIn(IDaySaver saver) { saver.SaveTheDay(); } } But now it's time for the sequel... and Buster McJackson isn't going to be enough to save Maple City. Fortunately, Buster McJackson just joined... Z-Team Alpha class ZTeamAlpha : IDaySaver { … } The sequels keep coming, and you never know who you're going to need to keep this city safe... You just need to know that they can get the job done... class HeroFinder { IDaySaver JustFindMeSomeoneWhoCan() { … } } I can keep going with this all day, but the point is that the interface allows you to isolate some kind of functionality and access it, and the compiler will ensure that the functionality exists on whatever you're trying to use or it will return an error. Also, most interfaces should be kept small, or they can't be reused. For instance, this interface would be a lot less useful in the long run. interface IDaySaver { void SaveTheDay(); void WearTutuWhileBabysittingNeice(); } You're only going to get one movie where that's going to be applicable, and you're not going to want to have to have every hero/team of heroes implement the tutu functionality in order to save the day. I hope that made sense, hah.
Also to go through Unity's own tutorial's as those are helpful for learning C#. That's how I got started with C#. Brackeys is awesome and is quite full of energy.
Any particular reason(s)?
We use apnet/signalr on a daily basis at my job and never had any issues with it. Can you explain alittle more the issues you are having? Do you get errors in the browsers, errors in the server? Your not really being descriptive of your problem. Copying a random project from github that is over a year old and expecting it to work and then getting angry about it not working out of the box is not a good way to start.
Yes I'd be interested if you can handle all these requests!
First off I would pull in the typings file for signalr that will probably help you immensely. npm i --save-dev @types/signalr . We use signalr without issue at work.
A 2 second search on google for "Angular SignalR" produces the following link first result. https://code-maze.com/netcore-signalr-angular/ Why not try to follow this guide and comeback with specific questions if things don't work out.
Yes I have always wanted to keep learning!
Ill check it out that would be pretty cool to do.
Removed: Spam. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
Removed: Spam, Rule 7. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
Removed: Spam, Rule 7. Please review and follow the [guidelines for self-promotion on reddit.](https://www.reddit.com/wiki/selfpromotion)
Be sure to report it. This one almost went by unnoticed.
We use signalR with angular on many pages. Some give us live grid updates, others power the notification system. We haven't had any problems with the two working together at all.
Did you move it off screen? Have you tried stretching the form in the viewer?
Have yo u thought about setting up a twitch stream on a scheduled time and going over stuff there with VODs for people to go back an revisit other streams they missed?
I don’t think so. I don’t know what could of happened like that. Visual studios 2019 is a pain tbh
You are completely right; thanks for pointing that out!
.Net 3 will allow for stand alone applications as you describe. You can us the preview or wait for the release in Sept.
I used him to supplement the course work I did in a recent boot camp I did. Found him very helpful in teaching DI in great detail.
yes
Yes
Yes
Yes
Imagine you have an object. You want your code to work with this object. If you design to an I terface, then the interface will force the object to have specific methods and properties...anything with this interface can be thrown into your code and work. If you have 3 objects with the same interface. All those objects can be thrown interchangeably into that section of code and not break. It's a guarantee that that object will not break your code if you decide that the ship should have guns instead of missiles, since they both have the IWeapon interface.
It's amazing you can't feel the same way about the original comment that took just as long to write as it does to search Also fuck you, I provided the link along with a bunch of other insights into the 2019 survey. Maybe don't call people dicks on the internet who are actually trying to help.
Pick up a book on your engine of choice (assuming you are keeping to the major ones). Good books abound on unity and unreal.
I’ll keep an eye out for some!
How is your project different from blazor or project uno?
Yesssssss
Sure.
I teach kids on nights and weekends at a code school. The pay and hours are low, so it's basically charity work. And yes - I do this for selfish reasons because I learn so much from trying to think of different ways to teach kids concepts I have long taken for granted. Especially the HS kid who just can't seem to remember anything. Of course, it's far from free for the parents, so they still have to learn.
Best advice I can give you is find small examples about some topic/concept in particular, and then watch real examples a little bit more complicated. By the way, do you know Tim Corey?
I am interested. Thanks.
WPF? Then select it in the xaml code an remove the position parameters to reset it.
Yes
Although C# is used, it doesn't need to be *learned* per se. You can get by with the bare basics. First thing I'd suggest you do is map out exactly what you're trying to do, something like "when this happens, do that other thing" - that's pseudo code btw, and it's something we all do in one way or another (I spent most of my morning today doing it at work for a new component for our front end). Then get started trying to actually code the behaviours you've written out. When you get stuck, Google. You'll find that putting in some ground work first will make it easier to code instead of tackling the whole thing without any planning. Keep in mind to make each method/function do one thing only. You'll be on your way to learning basic C# in no time.
Thanks!
Unity has a bunch of tutorials. Learn the language as you learn how to make the game. They also usually come with videos and completed code. I highly suggest it.
 A lot of these are with c# and have videos https://unity3d.com/learn/tutorials
\* Processing
Build something with a goal in mind. Imo games aren't the best way to learn a language since a lot of what you need to do depends on the framework. I would recommend: 1. Look up what the programming concept is best used for (e.g. reflection in C# for making user plug-ins) 2. Create an app that uses this feature with minimal distraction, mock out everything you won't need, maybe only build one "real" feature. (e.g. a plug-in that changes the color of your app) 3. Look up to see if there's already frameworks that uses that pattern, chances are good that someone already made a library that takes the plumbing out. (E.g. MEF for plugins). Learn the reasoning behind how the framework implements the pattern 4. Build it
&gt;Uno is *based* on the UWP API which is useful if you like or need UWP compatibility. Frogui is *influenced* by the most useful parts of WPF, UWP and Silverlight and HTML + CSS. The reasons why Uno uses the UWP API instead of inventing its own: * Documentation and tutorials come for free ([https://docs.microsoft.com/en-us/windows/uwp/](https://docs.microsoft.com/en-us/windows/uwp/)). * Rich tooling like Designer and XAML Edit &amp; Continue just work. * UWP developers don't need to learn a new API. &gt;For example, XAML code can become complex pretty quickly once you move beyond trivial things. In the image at the top of the post titled **Button class samples**, a single Frogui Button object was used for each, varying only properties (In our [demo](https://www.lesarde.com/demo) you can actually tune button properties to see the effects live). In UWP, this would require either multiple custom classes, data templates or similarly repetitive code. You made a higher-level button control. You can easily implement it in UWP and use it as such: `&lt;frogui:Button /&gt;` &gt;Another difference is how HTML + CSS influenced Frogui's API. UWP's (and Uno's) base graphic unit is the **double**. CSS has many graphic units via the [&lt;length&gt;](https://developer.mozilla.org/en-US/docs/Web/CSS/length) datatype so Frogui created the **Length** struct and uses it throughout. It has access to all these units: **Em**, **Ex**, **Ch**, **Rem**, **Vw**, **Vh**, **Vmin**, **Vmax**, **Percent**, **Cm**, **Mm**, **In**, **Px**, **Pt** and **Pc**. I personally never needed those units. Do people really use them? Which ones? You could easily add support for these units with a custom attached property: `&lt;Button frogui:Width="50%" frogui:Height="2cm" /&gt;` It seems to me like the stated benefits of Frogui over Uno could easily be packaged into a toolkit for UWP/Uno, like Telerik or Windows Community Toolkit.
&gt;Uno is *based* on the UWP API which is useful if you like or need UWP compatibility. Frogui is *influenced* by the most useful parts of WPF, UWP and Silverlight and HTML + CSS. The reasons why Uno uses the UWP API instead of inventing its own: * Documentation and tutorials come for free ([https://docs.microsoft.com/en-us/windows/uwp/](https://docs.microsoft.com/en-us/windows/uwp/)). * Rich tooling like Designer and XAML Edit &amp; Continue just work. * UWP developers don't need to learn a new API. &gt;For example, XAML code can become complex pretty quickly once you move beyond trivial things. In the image at the top of the post titled **Button class samples**, a single Frogui Button object was used for each, varying only properties (In our [demo](https://www.lesarde.com/demo) you can actually tune button properties to see the effects live). In UWP, this would require either multiple custom classes, data templates or similarly repetitive code. You made a higher-level button control. You can easily implement it in UWP and use it as such: `&lt;frogui:Button /&gt;` &gt;Another difference is how HTML + CSS influenced Frogui's API. UWP's (and Uno's) base graphic unit is the **double**. CSS has many graphic units via the [&lt;length&gt;](https://developer.mozilla.org/en-US/docs/Web/CSS/length) datatype so Frogui created the **Length** struct and uses it throughout. It has access to all these units: **Em**, **Ex**, **Ch**, **Rem**, **Vw**, **Vh**, **Vmin**, **Vmax**, **Percent**, **Cm**, **Mm**, **In**, **Px**, **Pt** and **Pc**. I personally never needed those units. Do people really use them? Which ones? You could easily add support for these units with a custom attached property: `&lt;Button frogui:Width="50%" frogui:Height="2cm" /&gt;` It seems to me like the stated benefits of Frogui over Uno could easily be packaged into a toolkit for UWP/Uno, like Telerik or Windows Community Toolkit.
Instead of moving into an engine, you could grab a framework first. Sure, you'll have to do more by yourself, but in the end, you will be much more confident in the language, especially when you consider that C# is not a scripting language, despite being abused as such by some game engines.
I do not!
I definitely still have a lot to learn, especially with frameworks. Thanks!
More details on the error ? --- There's no need to wait for .NET Core 3 to create a project *which will* ***run*** *on a machine* ***without .NET*** *installed*: Adding `&lt;RuntimeIdentifier&gt;win-x64&lt;/RuntimeIdentifier&gt;` (or whatever platform applies, [see here](https://docs.microsoft.com/en-us/dotnet/core/rid-catalog#windows-rids) for more) tells the CLI to bundle the Runtime along with your app. That results in a bunch of files, most of which is required dotnet bits and one of which is your executable. What **.NET Core 3 brings** tidying those dotnet specific files, giving you **a single file**. More or less: same thing, looks different. --- ^(formatting whatnot for potential future tldr/linkage. lots of confusion about "self contained" and "standalone" and "single file" ... stuff.)
Unity?
Not sure how crazy this sounds, but you could run the in-memory cache provider from Microsoft, save the file there, then send the location to Hangfire so it can read the file from the cache.
What twitch stream?
This is the fastest way to learn: by experiencing the language itself. Start with simplest examples, such as "Hello World!", then upgrade to asking for name and displaying "Hello \_name\_!", upgrade to simple arithmetics, drawing triangles (using loops)... When you're tired of working with text, proceed to rendering sprites and doing stuff with them - moving them around, animating, eventually you'll find yourself making a platformer with a game loop.
Yeah, Unity is the ultimate goal for me, but I was wondering if there was anything as straightforward as p5 that is compatible with c#.
This SO answer did it for me: [https://stackoverflow.com/a/35897887](https://stackoverflow.com/a/35897887) in combination with the answer directly below this one: [https://stackoverflow.com/a/15050052](https://stackoverflow.com/a/15050052) &amp;#x200B; What strikes me is the similar names of the two concepts and additionally beeing a non native speaker of the english language. Maybe it helps if you rebuild one of the examples and debug through.
The article leaves me with some questions. How does blazor know when to update the ui? For example with the simple @ label example there is no change event. Does it just render everything at certain times? If so, when and how can I request a render (ie displaying a timer or progress bar)? For the component the ...Changed events seem very verbose, not as easy as an INotifyProperyChanged.
Monogame?
Starting point, the documentation: [https://docs.microsoft.com/en-us/dotnet/standard/generics/covariance-and-contravariance](https://docs.microsoft.com/en-us/dotnet/standard/generics/covariance-and-contravariance) It is easier to understand with delegates. `T` in `Action&lt;T&gt;` is contravariant, while `TResult` in `Func&lt;TResult&gt;` is covariant Contravariance means that `T` can be of any type that is either `T` itself or derived from `T`. Covariance means that `TResult` can be of any type that is either `TResult` itself or a base class of `TResult`. A combination of both means `T` is invariant (can only be `T` itself). To see it in a more concrete way, think of the method signatures that `Action&lt;T&gt;` and `Func&lt;TResult&gt;` represents. Let's take some types found in WPF: public Control CreateControl() =&gt; null; public void UseControl(Control ctrl) { ... } public TextBox CreateText() =&gt; null; public void UseText(TextBox text) { } public void Main(string[] args) { Action&lt;Control&gt; ctrlAction = UseControl; // obvious Func&lt;Control&gt; ctrlFunction = CreateControl; // obvious ctrlAction = UseText; // impossible because Control does derive from TextBox Action&lt;TextBox&gt; textAction = UseText; // obvious textAction = UseControl; // ok because TextBox derives from Control Func&lt;TextBox&gt; textFunction = CreateText; // obvious textFunction = CreateControl; // impossible because TextBox is not a base class of Control ctrlFunction = CreateText; // ok because Control is a base class of TextBox } If it is still not clear, consider how those methods can be called and what their arguments or return values would be: public void Main(string[] args) { // ... Control ctrl = CreateControl(); // ok ctrl = CreateText(); // also ok, you can assign a TextBox to a Control variable TextBox text = CreateText(); // ok UseControl(ctrl); // ok UseControl(text); // ok, you can pass a TextBox to a method expecting a Control UseText(text); // ok UseText(ctrl); // not ok, you can't pass a Control to a method expecting a TextBox // so the same rules apply to the delegate (only keeping the ok cases) ctrl = ctrlFunction(); ctrl = textFunction(); text = textFunction(); ctrlAction(ctrl); ctrlAction(text); textAction(text); }
This sounds more like composition to me. Every electrical device has a wire and depending on the country, it gets a certain type of plug attached.
I never used it so I don't know what will cause it to throw an exception or return null. But here's the gist of it &amp;#x200B; MyThing a = new YourThing //This is obviously wrong and should be a compile error MyBase b = new MyBase //Obviously right MyBase b2 = new MyThingThatInheritsBase //also ok &amp;#x200B; But when you put it inside of something it gets a little weird void MyFunc(List&lt;MyBase&gt; ls) MyFunc(new List&lt;MyThingThatInheritsBase&gt;()) //Should this work? &amp;#x200B; Using co-variance it tells the compiler this is allowed. contra variance is the other direction which to me is strange and IDK if there are exceptions or null if the item isn't the type MyThingThatInheritsBase &amp;#x200B; But that's the idea behind it
You think I can't Google? This is the one I tried first. dotnet create angular projectname Try create a project and install signalr - it won't work.
I don't know if it has changed in recent updates but I remember to read in a book called Revealed Blazor that a component inherits a method called StateHasChanged() that allows Blazor to know it has to rerender the UI.
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-
Here it will probably be illegal unless ID is a nullable type. &amp;#x200B; What it says is "if myVariable is null, don't try and access ID on it, but return null." &amp;#x200B; if ID was of type int? it would return null, if ID was just an int, it wouldn't even compile.
It is called a "null-conditional operator" (see [https://docs.microsoft.com/en-gb/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-](https://docs.microsoft.com/en-gb/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-)). `ID` will be read from (and returned) if and only if `myVariable` is not `null`. Otherwise it returns `null`. Logically, it is a shorhand of if (myVariable == null) return null; else return myVariable.ID;
Ah yes, their tutorials too. Brackeys seems to be doing a bit more simple stuff than Sebastian does, both are interesting to watch. As for Unitys tutorials, they tell everything too, but to me they're as not as much enjoyable as Sebastian or Brackeys.
No. ID can be of type `int` without any issue, granted that the method does return a nullable (`int?`). Or by returning a default value in case of `null`: return return myVariable?.ID ?? 42;
I struggle to understand why you think that is better than the link I provided? Took the time and provided the link exactly can as asked, what exactly is wrong with that? People in here are hilariously childish, imagine being that type of fragile person.
This is a good answer, but I thought I'd have a go at explaining it more intuitively: public class Fruit { } public class Apple : Fruit { } Imagine you have a business that buys fruit. You create a contract with growers where you provide boxes and pay them when they fill the boxes. Your first contract is a Covariant contract for &lt;in Fruit&gt;. The growers could send you boxes with: * Only Apples * Mixed Apples and other Fruit * Mixed other Fruit * Only single types of other Fruit You then want to sell the boxes that they have sent you. Your buyers only want boxes of a *single type of fruit*. If you were to just post a contract saying that you sell "boxes of Fruit", that definition would include mixed boxes too! So you post a Contravariant contract for &lt;out Fruit&gt;. Now, each implementation of this contract can ask for just Apples or *any type more derived than Fruit*. Now you can sell: * Boxes of Apples (which includes any mixed Apple sub-types) * Boxes of mixed Fruit (any kind) * Boxes of pure other Fruit (including any sub-types of that class) Hopefully that's a little helpful!
It gives `microsoft.build.tasks.signfile couldnt be loaded`
Don't know what p5 is, just took a quick look at the website, but i think System.Drawing could be what you search for?
Yes would like to learn
If the offer is still open I'd very much like to be taught C\#
SOLVED!
Do you mean generic variance or in general?
Yes, spot on. In my head I assumed the return type was an int :)
no.. that is always heavily dependent on draw calls on either side of the discussion.. arguing Unity3D is a battery killer is counter to the entire concept of game development in general.
search for programming katas and pick a simple one go on from there. Simple example: http://codingdojo.org/kata/FizzBuzz/ Medium: http://codingdojo.org/kata/RomanNumerals/ Complex: http://codingdojo.org/kata/GameOfLife/
The original version of Processing was written in Java. Given how similar Java and C# are for most code, I'm surprised that no one has ported it to .NET yet.
It always comes back to understanding the deployment one way or another. You can dramatically effect battery / performance by reducing the frame rates.. Apps don't need 60fps etc... so for one you can reduce draw calls easily by a setting in deployment. &amp;#x200B; There are many techniques to optimise the UI - [https://create.unity3d.com/Unity-UI-optimization-tips](https://create.unity3d.com/Unity-UI-optimization-tips) &amp;#x200B; The best part about his as you now have options to reduce performance down to a GPU render / CPU call .. alternative solutions you are at the mercy of "default".
Just in case you're interested, I replaced my triangle filling algorithm with scanline and there are no more holes. Thanks again for trying to help.
Now I get it. Cheers for the detailed answer!
Had similar issue, with was resolved with updating Visual Studio 2017 to Visual Studio 2019.
How about doing it with .NET Core and publishing standalone version?
.NET 3? or 5?
Would it be like a copy/paste into a .NET Core project?
I'll try this, thanks
A lot of explanations seem too abstract to me. Here's an explanation of how it's useful for types you're already familiar with: Let's start with strings and objects. All strings are objects but only some objects are strings. Consider IEnumerable&lt;string&gt;. It outputs strings. Since all strings are objects, you could also say that it outputs objects. So really you should be able to cast IEnumerable&lt;string&gt; to IEnumerable&lt;object&gt;. But the other direction doesn't work. You can't cast IEnumerable&lt;object&gt; to IEnumerable&lt;string&gt; since it might output objects that aren't strings - for example, an int. In reality, IEnumerable&lt;T&gt; is defined as IEnumerable&lt;out T&gt;, which enforces this - you can cast it to base types but not derived types. Now imagine an IConsumer&lt;T&gt; interface that takes T as input. If you have IConsumer&lt;object&gt;, that means it can take any object as input. If you wanted to pass it only strings, that's okay. So you should be able to cast from IConsumer&lt;object&gt; to IConsumer&lt;string&gt;. But the other direction doesn't work. If you have IConsumer&lt;string&gt; that takes strings as input, it can't necessarily handle other objects, so it can't be cast to IConsumer&lt;object&gt;. IConsumer&lt;in T&gt; enforces this. You can cast it to derived types but not base types.
Maybe I'm late to the party, but I want to share my thoughts. I've tried different strategies working with local packages in different software projects (mostly .NET and Node). My conclusion is that Node community is one that got it actually right. Their package manager (npm) has one simple solution which they use in different setups and workflows (see this blog post for inspiration: [https://www.deadcoderising.com/how-to-smoothly-develop-node-modules-locally-using-npm-link](https://www.deadcoderising.com/how-to-smoothly-develop-node-modules-locally-using-npm-link)). They have the **npm link** command, which creates symbolic link from package directory (think of **%UserProfile%\\.nuget\\packages\\my.package\\1.2.3**) to directory where package source project resides. In this way: * package consumers are transparently redirected to package source project * changes in package source project are automatically reflected on consumer side, including debugging and code navigation This works equally well for different setups: * Separate repo for each package * Monorepo (multiple packages reside in a single repo) - though there are special tools for monorepos like **lerna** or **yarn workspaces**, but they all use **npm link** under the hood. Though for NuGet, monorepo is solved with automatic replacement of ProjectReferences with PackageReferences, this looks as a very special case to me. It also requires that all projects subfolder reside under the same parent folder. * Combinations of both (we had multiple teams, each owning a monorepo of multiple packages) For me, the most important ability is the ability to make small rapid changes in multiple inter-dependent packages to fix a bug or make ends meet while shaping new APIs. Anything that includes publishing to NuGet (local or remote), increasing version, or clearing caches would be very counter-productive. Having said that, NuGet for whatever reason still lacks the **link** feature, although there were feature requests for it (here is one: [https://github.com/NuGet/Home/issues/1821](https://github.com/NuGet/Home/issues/1821)). So I decided to accept the challenge and create a tool that works similarly to npm link, but for NuGet packages. You may want to give it a try: [https://www.nuget.org/packages/NuLink](https://www.nuget.org/packages/NuLink)
As someone who just started a software engineering job using C#, Tim Corey has been a blessing. Practice and consistency is key!
There's System.Drawing, but it is not as straight forward. There's also SixLabors if you want.
.net core 3.0 Single file executables https://docs.microsoft.com/en-us/dotnet/core/whats-new/dotnet-core-3-0#single-file-executables
So I just did this but it creates lots of .dll files. Would I be able to run this on another computer without .NET? Also, can I embed .dll into .exe somehow?
In the context of Interfaces it is said to always define the least derived type in contracts (covariance) to allow for polymorphic behavior. Now this is a general rule and sometimes quite dangerous.. &amp;#x200B; Just think of **variance as a scale** where covariance is least derived type and contravariant most derived type (usually the concrete type). &amp;#x200B; So as a Full Stack Developer (as apposed to a framework developer) an example typically comes from business logic, like generally used by a shopping cart system. You have an ICart, that promises ICollection&lt;IItem&gt; which promises IPrice. This is a covariant definition of a typical, text book example talking about clean OOP. You can then create more contracts based on this and go off and create all your concrete implementations. When you hit Enterprise development you start working with Patterns as defined in the Gang of Four Design Patterns (at least work through what each pattern is and why - reading the whole book is a bit mental) ( [http://www.blackwasp.co.uk/gofpatterns.aspx](http://www.blackwasp.co.uk/gofpatterns.aspx) ) where the covariant type depends on the Pattern you are using but the Principle is still going to be use the least derived type (covariant) &amp;#x200B; Another common example used is the usage of List&lt;T&gt; which has some baggage associated with it from when .NET was not called that. (so it has its difficulties because of the C# Framework history) This is where you see developers defining collections as IEnumarable&lt;T&gt; because it is the least derived type and allows for maximum contravariant polymorphic behavior since IEnumarable promises the object implements the Iterator pattern of which all collections inherit from. -&gt; except Array which inherits from IList... hmm interesting right?! The problem with the List example is IEnumarable was created way back in the early days and that contract comes with an *implementation promise* that you MUST implement the Iterator Pattern AND this catches out a lot of people!!! (especially during serialisation). Hence why you see a lot of MSDN examples defining ICollection instead. The problem here is that this is an implementation detail of a collection being enumerated (List) vs not being enumerated (IEnumarable query)) and this specific problem needs to be addresses with Design Patterns. For example, Repositories create queries that need to be enumerates so IEnumarble is good here but services work with Enumerated Collections so ICollection is good going upwards from there. It's a tricky, controversial and never ending topic) So how can an Array be a collection and they are not using ICollection either?? This is Framework design world that comes with some baggage, choices and different patterns. But it makes sense because when you create an array, you tell it how big it must be and what data it holds. Does that not sound a lot like executing a query from a database and getting the results? You know how big it is and what data it holds. So wrapping an enumerated collection into an IEnumarable makes no sense because you have not implemented an Iterator pattern anywhere! I have seen this cause so many problems. I have even worked with some people that only use Arrays to avoid this confusion completely (and the problems that come with it) plus some other reasons. An Array's contravariance is an IList so that is what they use for all their collection based contracts.
I prefer a slightly simplified version of this that makes binding easier. It requires a bit repetition, but I think it’s easier in the long run to just use regular properties with a custom setter. void SetField&lt;T&gt;(.......); private string _name; public string Name { get =&gt; _name; set =&gt; SetField(ref _name, value); }
Essentially, whenever something changes, the Blazor framework grabs the DOM and renders a diff, then pushes the diff to the browser. If there's no DOM change involved, then the diff is empty and nothing changes. Another comment or pointed out the StateHasChanged event, and that works too, if you need to fire the event manually. Also, I heard at Build that you can implement INotifyPropertyChanged somehow... Didn't really get any details about that so you'll have to do some homework if that's interesting to you.
I prefer the first version
This is whole purpose of self "hosted" .net core runtime.
The version of MS Build tools installed with 2017 is 15 (hence 2017 is called 15.X version) while 2019 is 16.X. there are some tricks to use newer "toolchain" with older VS (google VS2015 with msbuild 15 for example)
Just to make sure I understand, client side blazor works the same way as server side (using the diffs). That makes sense. The automatic rendering is then probably triggered by events crossing from js into .net?
\*warning: highly opinionated post\* Online courses are useless and don't teach anything but a language syntax. There's a difference between knowing how to program (being able to break problem solution into objects, methods, variables and parameters) and how to use a specific language (how to put programming concepts into computer-readable language aka. code). The only way to learn programming is to practice. Come up with problems, come up with solutions and try to turn them into code - it's really that simple once you grasp basics. \&gt; How does one begin to learn to apply the language concepts to game design? I understand the basic ideas of programming like functions, classes, variables etc but I’m so f\*cking lost when it comes time to apply that knowledge. As above, programming =/= using a language. Not to mention that starting off with game development is gonna be hard.
And another major reason as to why Uno is based on UWP, is because of the tooling. You develop an UWP app, you debug it, with all the VS goodies. Edit and continue, window resize, etc. without that hassles of deploying on a device (slow......) Then you test on end platforms. That's a big win in my book.
It sounds like you would benefit from storing your various languages in resource files https://youtu.be/08mf72wUOwo
Nice find! However, how would that work in a GitFlow model? If you're always cherry-picking (reverse integration from master into branch), then sure, using `git describe` makes a lot of sense. If you're pushing commits from a `topic` branch into `master`, a'la GitFlow, then the hash stays the same. So I imagine `git describe` is doing a forward-only search.
Thanks - I found this the clearest of the explanations given. Just to confirm, in the the scenarios that you give: * IEnumerable&lt;T&gt; is an example of a covariant contract, where the type is being output, and thus the type parameter can be cast to a base type in the code that consumes the output; * IConsumer&lt;T&gt; is an example of a contravariant contract, where the type is being input, and thus the type parameter can already be a derived type in the code that produces the input. Is my reading correct?
&gt; Key feature for me: it produces deterministic version numbers. I get the same version number from a local build as I get on my build server. I thought about this over the weekend, and I don't think that is true under all circumstances. Only if you tag every commit, and download all your tags, will your local build be the same as the build server. Granted, I have not tested this, but I intuitively believe I am correct. Can you point me to documentation that says otherwise? Separately, what is the appeal to getting the same version number from a local build as you get on your build server? What requirement is that addressing? I'm not saying it's a bad idea, but I worry that it leads to erroneous requirements like being able to deploy a local build to production. I'm trying to understand, if you've built a better mousetrap than me, *why* is it a better mousetrap? &gt;Bonus: it nicely integrates with 3rd party build systems like Cake and Nuke (which I use), so I can get access to the version number inside my build script. I'm curious how you use third party build systems like Cake and Nuke. I'm becoming convinced after looking through DotNet Arcade that most people over-complicate their build process.
The most common cases are IEnumerable&lt;T&gt; for `out` and Action&lt;T&gt; for `in`.
You answered everything apart from what the OP was asking
&gt; The part I like about git version is that *if done right* Feel curious... you qualified your comments with *if done right*... what would it look like to be done wrong? Or did you mean to say "it always does things right".
Removed: Rule 4. You will have to at least provide the APIs you're using to transfer the files, and code of your attempt or what you're currently doing. To answer your question, it would depend on the APIs used, but generally most .NET APIs have overloads of methods or ways to transfer files in-memory without requiring writing them to the hard disk. I can't tell you how to do it as-is because you haven't provided sufficient information.
What you are testing is the _behaviour_ of your application. Assuming this works well, when you are using a real database you can _more confidently_ know how it will behave. In more complex scenarios, you might setup your in memory database with a many items to test some edge cases that could take really long time to setup by using the product normally (just the other day I had such a thing where it would take many hours to setup by manually clicking through the application, but with testing I could do it in a few minutes once, and then repeat that in no time at all)
that works, or you can downgrade to a lower version of Fody package. The latest Fody is \*designed\* for the new MSBuild, hence the error.
One thing that I don't see being mentioned is that classes, structs and interfaces (yes, even interfaces) can implement *more than one interface*. Classes, however, can only *inherit* from a single base class. So, imagine a scenario where you have objects that are doing similar things but it wouldn't make sense to try to hack them together using inheritance. For example, many objects implement `IDisposable` but these objects aren't related in a way that would allow them to cleanly inherit from some common base class. However, many classes are written that *depend* on `IDisposable` like many IoC/DI containers that need to control the lifetime of the objects they create.
Not in this version of .NET Core, but this feature should be in .NET Core 3 when that's released later this year.
Or just use \`dotnet publish --self-contained -r win-x64\`
Be aware that Fody requires you to be a Patreon.
Where does it say that?
https://github.com/Fody/Fody#community-backed &gt; It is expected that all developers using Fody become a Patron on OpenCollective. Tho this is fairly sketchy, because they claim it's an "honesty system" and the library is still MIT. But what is clear is that: If you ever need help you must pay. Issues are only accepted by patreons.
So indeed, I updated my VS and it doesn't give me any errors, but I publish my project and it seems like Costura did nothing. I'm publishing as standalone, release, win-x64.
Thanks, I'll check it out.
check that FodyWeavers.xml file
&gt;&lt;Weavers xmlns:xsi="[http://www.w3.org/2001/XMLSchema-instance](http://www.w3.org/2001/XMLSchema-instance)" xsi:noNamespaceSchemaLocation="FodyWeavers.xsd"&gt; &gt; &gt; &gt; &gt; &lt;Costura &gt; &gt;Unmanaged32Assemblies='dllname' &gt; &gt;Unmanaged64Assemblies='dllname' /&gt; &gt; &gt;&lt;/Weavers&gt;
It does not have event sourcing as outlined here but has the ability to set it up depending on what EventBus is configured. This can be found in the [BuildingBlocks folder](https://github.com/dotnet-architecture/eShopOnContainers/tree/dev/src/BuildingBlocks). The way it is configured is to use RabbitMQ (or Azure) to coordinate the messages between services. There is an EntityFramework Integration project that I have not dove into, but the idea is that whatever event bus is used could be altered to persist the events (if they are not done already). I have mostly been looking at the [Ordering Service](https://github.com/dotnet-architecture/eShopOnContainers/tree/dev/src/Services/Ordering) when reference because that is the one that is set up in a Micro-Service fashion.
But be aware that the behaviour of the in memory database can still be very different from your real server.
very good news
What do you recommend using to practice programming? Other than just console syntax practice as you said
I hope u ain't using images to change icons😅
Erm. To be fair, how else would I do it? It's two separate .ico files that do the imaging.
Never tried anything like this and I'm fairly new to C# but I would use a single image and transform it to transparent with code. No idea if that's the best way or not.
That may work, but it was far easier to do it this way. I have however made sure it did not hog resources. It has only ever reached 0.2% CPU usage (My time looking at it) and roughly 30-33MB Ram. I am not sure if that is good or not, but it does not seem bad at all. &amp;#x200B; EDIT: Before it used to not terminate the thread... that was a issue. I got it optimized more and working fully now.
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs0266
That was my 2nd point: &gt;Rich tooling like Designer and XAML Edit &amp; Continue just work.
Go google Tim Corey youtube explaination of interfaces. Its free and it has sample project. Try to find interface lesson from Jeremy Clark aka Jeremy Bytes. Interface is a type of entity which brings new abstract level which helps in modeling some features as well as writing loosely coupled code. Its public contract with method signatures which will be implemented elsewhere. Imagine you have export of some data and client asked about txt and xslx file formats. You create class TxtExport and XslxExport. Since its same data in two file formats, you can create interface IDataExport with one method ExportData() and made both classes implement that interface, which means they both implement on their own way method ExportData() with particular export details. Now your client asked about JSON export and you create new class JSONExport and implement IDataExport interface. What you made is now all three of your classes are bounded to interface and implemented contract to have ExportData() method. You gave sense to features in your project and made it more readable and understandable throught expanding via interface. Sorry about english, not my native.
Downgrade to an earlier version of Fody. Only the latest ones have the MSBuild 16 requirement
What do you think about Caliburn Micro and Prism? What is it like comparing Catel with them?
There's a couple different ways you can go about doing this, but as far as I can tell your code is simple enough that an Interface is all you need. Define an `IOutsideService` interface with a `ServiceResponse GetServiceResponse()` method on it. In your `OtherClass` code add a constructor that takes in an instance of `IOutsideService`: ```cs public OtherClass(IOutsideService outsideService) { _outsideService = outsideService; } ``` This is an example of "Inversion of Control (IoC)", a principle of code design where your `OtherClass` doesn't need to know about how your `OutsideService` works, only that it can do what is specified in your `IOutsideService` interface. Read more about IOC here: https://www.tutorialsteacher.com/ioc/introduction Once you have an interface and your class takes in any `IOutsideService` you can create a new `MockOutsideService : IOutsideService` that does not call your API and simply logs it was called (or whatever you want!) and use it in your tests. Good luck!
That's frustrating. It's MIT licensed so you can pretty much ignore it, but it'd still probably make our legal dept. say no on using it commercially.
Git Version works off a very specific GitFlow process https://nvie.com/posts/a-successful-git-branching-model/ If you don't properly follow your the process and tag builds correctly and use dev, feature, release branches then gitversion will not work for you. Additionally if you are not using https://semver.org/ for your versioning then GitVersion will not work for you. So when I say if done right I mean if you use GitVersion with a proper git flow and semantic versioning then it it works wonders. If you have a custom process for versioning and git commits then its going to be difficult to use. You mention technical revision number and application versioning number policy but if you are using semantic versioning as everyone should be then those things are combined. NuGet, NPM, Microsoft all use semantic versioning its the sort of industry standard now a days.
That's fair; GitVersion now also supports a second branching model called GitHubFlow. [https://gitversion.readthedocs.io/en/latest/git-branching-strategies/](https://gitversion.readthedocs.io/en/latest/git-branching-strategies/) Thank you very much for your feedback! This is great!
For 2d stuff you got monogame or if you want to do 3d you should just learn unity
Not him, but to answer it depends on what for. Xamarin? Prism is the way to go right now, but for WPF/UWP, MVVMLight is much easier to use and doesn't contain the bloat of Prism. MVVMLight takes about 30 seconds to setup and start to use, and is just an easy layer over it. Combine that with Fody/PropertyChanged.Fody (it's a nuget package) and you can have incredibly clean code fast, and write it how you want.
if you create a new project, with only hello-world and costura, will the issue remain?
Come up with projects that you need (so you stay motivated to finish them) and try (with the help of google and stackoverflow) getting them done. You also have to realize that programming doesn't revolve around 'visual' things - 99% of programming is raw data without visual aid.
dops. missed that line.
If you have visual studio enterprise* version you can also use fakes/shims/stubs to do this: https://docs.microsoft.com/de-de/visualstudio/test/isolating-code-under-test-with-microsoft-fakes?view=vs-2019 * I think enterprise is neede for that, but not sure And if it's just an interface that can be passed in you can look into mocks or specially into the Moq library
Not exactly what you're looking for, but if you want to get your feet wet with thinking about problems and how to solve them without getting too crazy into a language, you can use a tool such as Microsoft Flow in order to setup GUI based automation tasks. Here's some examples of Flow setups for posting Slack messages automatically: [https://flow.microsoft.com/en-us/search/?q=slack](https://flow.microsoft.com/en-us/search/?q=slack) &amp;#x200B; If you want to go about doing this in C#, you'll need to learn how to write and host an API or Website (so you have somewhere to post your standup update to) and you'll need to integrate w/ Slack / Email. Here's an Open Source library you can use to integrate with Slack more easily: [https://github.com/Inumedia/SlackAPI](https://github.com/Inumedia/SlackAPI) &amp;#x200B; The most barebones example you could put together and still achieve what you want is: 1. A singlepage [MVC](https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/?view=aspnetcore-2.2) / [Blazor](https://docs.microsoft.com/en-us/aspnet/core/blazor/get-started?view=aspnetcore-3.0&amp;tabs=visual-studio) site that has a Form entry to fill in your update 2. A backend component that sends off your update via Email / Slack &amp;#x200B; Good luck!
Open TaskManager Click More Details Click on the Disk Column header to sort by disk usage. Not only do you get a % of how much use, but you can also see the process that is pounding the drive. &amp;#x200B; Task Manager never went above 0.9% while I watched and only used less than 25MB of ram.
I picked up a Dell G3 3579 with a i5 8300H for $750. I immediately realized it was dog slow with the included HDD and 8 GB of ram. I spent another $130 and got a 240gb ssd and 16 GB of ram. I now have a very workable laptop for under $1000. For anything serious however I prefer to remote into my Desktop at home with 32 GB of ram, titan X and 5.1 ghz i7 7700k. This will be getting upgraded to a 16 core ryzen this year assuming AMD doesnt have some serious flaw in the new platform. I used to work construction and would easily spend $500 a year in tools. I consider my PC hardware to be my tools of the trade and just budget a certain amount per year to keep up to date.
Yes, that's correct.
If you want to learn to code through games, I would highly recommend using Monogame over an engine. Game engines tend to abstract a lot of things away. They don't really make for a good learning environment. A framework will give you more freedom to explore and implement ideas.
Haven't worked with them much, but Catel is on another level. Most MVVM framework are lightweight, intended to provide basic functionalities to have a functioning MVVM pattern. They are inherently quick to learn. Catel isn't. Catel is in a category of its own. Just compare the size of the navigation lists for their documentations: * [Caliburn](https://caliburnmicro.com/documentation/), basically one page of navigation links * [Prism](https://prismlibrary.github.io/docs/), just a bit more extensive * [Catel](https://catelproject.atlassian.net/wiki/spaces/CTL/pages/622654/Catel.MVVM), I don't even want to count. Catel doesn't just provide a MVVM framework, but a lot of other things that are useful for application development. Good thing is, it's completely modular, and you can just use the parts you need.
*initiating spoonfeed* // The following line causes compiler error CS0266. dc = mc; // You can resolve the error by using an explicit conversion. dc = (DerivedClass)mc;
I'd try this. DueDate = Convert.ToDateTime(Dts.Variables["User::contactdate"].Value),
The best way to do is to do. You are going to feel bewildered and lost for quite some time. This is normal and I don't think enough people talk about it enough. Most games are bewilderingly complex to write when you really sit down to plan it out. The first skill to have is a very good grasp of decomposition. That helps you understand why it's so hecking complicated to even get the basic, not-fun parts of a game on the screen. Here's what I mean. Consider the first ten seconds of Super Mario Bros. Mario can walk left and right. He's likely to jump and stomp a Goomba. He's likely to hit a brick and maybe a question mark block that emits an item. To get there involves a monumental number of steps that have nothing to do with the language! Here's just one progression: * To even display the screen requires you to understand a bit about how your engine displays graphics. You'll want to learn about working with tilemaps. For starters, let's say you don't even have scrolling. * After that, you'll want to put Mario on the screen. This is somewhat easy since you already learned a bit about graphics. * Now, Mario should walk. You have to learn about how to handle keyboard input, how to animate a sprite, and you'll have to add code to support moving Mario around on the screen. * After that, Mario can probably walk off the edge of the screen. You can learn how to make him stop at the edge, or you can learn how to make the map larger than the viewable area and, thus, how to scroll it as he moves. This could expand into developing a concept of a "camera" and how it tries to respond to Mario's movements. * So Mario can move left and right, time to add jumping. Until now, "the ground" was just a Y coordinate. Now you need to figure out how the game knows what Mario can and cannot stand on safely. You need to think about the kinematics of jumping. How air control will work. The concept of a pit, so Mario can fall even when he hasn't jumped. * Mario can jump. But what happens if he hits a brick? The game doesn't have a concept of "ceiling" yet, so now you have to think about that. Some ceilings are solid. Others, like brick blocks, give a little when hit. What effect do they have on a jumping Mario? * Question Mark blocks are special blocks that emit items when hit. That's more stuff to figure out. Coins are "easy", but you have to add a new sprite with its own movement logic that also removes itself and updates the coin counter and a score. Mushrooms are much harder: they move like Mario in some ways but are *always* moving. So they can fall, but they also bounce off of things. When they collide with Mario, they change his size. * If Mario has touched a mushroom, now he can break some blocks like bricks. He also can duck to be small again, but he can't move while ducking. But if he was moving before he ducked, he has some inertia. He can jump while ducking with similar rules. * Goombas move of their own volition with their own logic. * If Mario collides with a Goomba he will die if small. This means you need to handle player death, reset the stage, etc. * If Mario collides with a Goomba while big, he will shrink. There's also a period of invulnerability afterwards. * If Mario lands on a Goomba from above, the Goomba is squashed. Each of those 12 bullet points could easily take you half a day to tinker with and figure out. Some of them are complex enough you might play with them for 3-4 days before settling on something you like. After each one, you might decide the code's too messy and spend a day or more trying to clean up your mess. We haven't even made it to the first pipe (and thus the concept of 'walls', 'pirahna plants', and possibly 'pipe warping') and we could easily spend a month playing with what we have! If you tried to do all of that all at once, you'd fail. You can't start from zero and say "I want Mario to be able to squash a Goomba" and do all of that then build it and it work. First, you need a Mario. Then, you need a way to control him. You need a level. And so on, and so on. You take baby steps, test them, then take the next step. The people who write really complicated games have gone through this process a lot. They spend day after day tinkering with their game mechanics. They don't know how the heck to do it before they start. They make 10 or 15 bad attempts they throw away. They make another 10 or 15 bad attempts that are neat but not useful. They make 10 or 15 more attempts and start to like what they see. They ask friends how they'd do things. They think about if maybe decisions they made a month ago about other things in the game are making it harder to do the things they're doing today. They never, ever feel like they know what the heck they're doing. And that's OK! So you're a newbie. Welcome! That means you *really* don't know what the heck you're doing. You have to learn a little of everything to make any progress at all. So think like I did above: pick one tiny step you don't have and do the heck out of it for a day. Then build the next step on top. What happens is, eventually, it's the 100th time you've started a project, and maybe the first four steps above are muscle memory for you adn you get them all done in 1 day instead of 4. That can take months. It can take years. Even after more than a decade of work, I'm still slow at developing some pretty bread and butter things. It doesn't matter. What matters is I can do, and when I don't know how to do it I do *something* to see if it works. So uh... practical advice. Pick a game whose mechanics you know inside and out like I did Super Mario Bros. Start trying to implement parts of it. If you get stuck, ask someone else what they'd do.
(Supplementing this answer to reinforce it.) Yep, this is the classic place for Inversion of Control and/or Dependency Injection. In the terminology I found in *The Art of Unit Testing*, `OutsideService` is called a *volatile* dependency. That means it's a thing that can't be safely controlled within a unit test. It's extrenal, your unit tests can't reach it, and you really need a way to do that. This is why there's an 'I' in SOLID. The **I**nterface Segregation Principle tells us to depend on abstractions, not concretions. We can do that with the **D** in solid: **D**ependencyInjection. Here's a rough framework that shows you how you could make this go: public interface IOutsideService { ResponseType GetResponse(); } public class OtherClass { private readonly IOutsideService _outsideService; public OtherClass(IOutsideService outsideService) { _outsideService = outsideService; } public void SomeBusinessMethod() { var response = _outsideService.GetResponse(); // ... } } This is what's meant by depending on "an abstraction". now `OtherClass` depends on "something that can return this data", rather than "one and only one implementation of a class". That means in unit tests, we can write several interesting scenarios: public class AlwaysThrowsOutsideService : IOutsideService { public ResponseType GetResponse() { throw new ApplicationException("I expected this."); } } public class FakeOutsideService : IOutsideService { public ResponseType ExpectedResponse { get; private set; } public FakeOutsideService(ResponseType expectedResponse) { ExpectedResponse = expectedResponse; } public ResponseType GetResponse() { return ExpectedResponse; } } You get the picture. Once you can put any possible implementation of `IOutsideService` in action, your tests can use one you can control. Production can keep using the one that talks to the real service. Obviously, you still need to test that, but that's not a unit testing concern. This does mean you might have to rearchitect your project in a lot of ways. It's easier to start with this goal in mind than it is to retrofit. I think one of the best ways to learn, however, is to retrofit. For that, look to *Working Effectively with Legacy Code* by Michael Feathers. (He defines "legacy code" more or less as "code without unit tests".) Nothing about that is specific to xUnit, it's a general testing concern! Now, you might be upset at the above and feel like that's a lot of tedium. Yes, that's part of why it's a shame some Record Type features keep getting deferred. But actual mocking libraries like Moq are a lifesaver for this. For example, instead of writing a whole class for `AlwaysThrowsOutsideService`, here's how I'd set up a test with Moq: var outsideService = new Mock&lt;IOutsideService&gt;(); outsideService.Setup((os) =&gt; os.GetResponse()) .Throws&lt;ApplicationException&gt;(); var testInstance = new OtherClass(outsideService.Object); Mocking frameworks use Reflection Emit to dynamically generate implementations of things. That eliminates a ton of boilerplate handwritten implementations and lets you get things done. It probably sounds like a ton of busywork. I fought this idea for like 6 years. Now everything I write is like this and I can't figure out how I got anything done before.
nomnomnom... thank you for helping me through this, kind, internet stranger!
Using separate images is fine.
I guess it depends on your CI/CD workflow, generally speaking the version will only change after you tag a commit. There is some good info in the docs - [https://gitversion.readthedocs.io/en/latest/more-info/version-increments/](https://gitversion.readthedocs.io/en/latest/more-info/version-increments/) &amp;#x200B; I'm very familiar with these headaches you describe, I use DotNetCorePlugins along with a custom private NuGet server using [BaGet](https://github.com/loic-sharma/BaGet) to resolve / validate dependencies of plugins being pushed to our nuget. We have a very specific use-case, as with most things it comes with caveats and trade-offs, your mileage may vary, etc.
I work for a consulting firm who has me contracted with a transportation engineering company.
Also check out his book: [https://www.amazon.com/gp/product/1449367569/ref=dbs\_a\_def\_rwt\_bibl\_vppi\_i0](https://www.amazon.com/gp/product/1449367569/ref=dbs_a_def_rwt_bibl_vppi_i0)
There is nothing wrong with using separate image files
Been in a lot of marketing/financial stuff lately. Was in medical devices at first. Wouldn't mind going back since that was more fulfilling but doesn't pay as well.
I work for a consulting company that specializes in Microsoft Dynamics CRM and SharePoint customization
I'd recommend saving locally, parsing then deleting the file. &amp;#x200B; The easiest way to Get the file via SFTP is through some kind of tool or lib and most of those will take the SFTP command and relay it to the server and handle the response... I'm not sure that all/most SFTP libraries would supply a function to return a file stream. &amp;#x200B; In anycase, you wouldn't be saving any time or effort... in order to read the contents of the file you have to transfer all the file contents to the local machine... the transfer will take the same amount of time regardless of what you do with the bytes that are received. &amp;#x200B; Besides, you might also want to do a checksum on the file you downloaded vs the file that is available on the server to ensure there was no data corruption during download. &amp;#x200B; I might be wrong, but I've used a couple different sftp libraries and I think that if you want this sort of functionality you might end up needing to write the SFTP protocol yourself explicitly... the libs I've used have only supplied "Download" commands
Removed: Rule 4. Yes, a quick search shows that both SSH.Net and CSVHelper support reading/writing to a general `Stream` object. Instead of using a `FileStream`, instead use a `MemoryStream`. Regarding performance impact, if anything it should be faster as you avoid any hard disk I/O which is far, far slower than in-application RAM memory access.
I work for a tech company in the foodtech space.
Would it be possible to do this method async? Like it performing the task for several files in other directory?
Porn.
Probably. Here's an answer doing that from 2015 (so the APIs may have changed or streamlined it since then): https://stackoverflow.com/questions/34039810/ssh-net-async-file-download Presumably CSVHelper won't care much about being run in a background thread, so if it doesn't support async natively ([but it looks like it does](https://github.com/JoshClose/CsvHelper/issues/202)) you can probably just roll your own.
Like i said buddy, its my personal experience (With Canada its friends not myself) I would also be using a 4 year perspective. I off course have friends on 70k over there but in general its lower. I personally would not move to Toronto for less than 70k for example. I think you will be surprised that the average is not generally high. There is more likely lot more shitty startups than not
Industrial automation industry.
There are plenty of streamers who stream live programming under the science and technology channel.
I work in consulting and we have clients across many industries. In the last 5 years I've worked in banking, insurance, auto sales, publishing, retail, personal care services, electrical and transportation.
Finance Industry at the moment. Previously worked for Gambling companies and general asset management.
Medical. We develop information systems for laboratories, and imaging applications for radiology and pathology.
How much of your time is spent optimizing for speed? Also how much of your time is spent writing those spawn of Satan click ads that fully cover video players?
I hit about 25-28GB with a Win10 VM on macOS, docker, and everything else going on (mix of .NET Framework / .NET Core). So happy they finally shipped a 32GB MBP last year.
Physical identity and access management.
Consulting Industry. Doing mostly internal software.
&gt;The reasons why Uno uses the UWP API instead of inventing its own This a very solid point. As a counterpoint, here are some news articles from the past week: [Microsoft Throws In The Towel on UWP, Elevates Win32](https://www.extremetech.com/computing/291124-microsoft-throws-in-the-towel-on-uwp-elevates-win32) [Microsoft Confirms UWP is Not the Future of Windows Apps](https://www.thurrott.com/dev/206351/microsoft-confirms-uwp-is-not-the-future-of-windows-apps) [Microsoft Gives Up On UWP](https://www.i-programmer.info/news/177-windows-8/12767-microsoft-give-up-on-uwp.html) [Could the death of UWP apps spell the end for the Microsoft Store?](https://www.techradar.com/news/could-the-death-of-uwp-apps-spell-the-end-for-the-microsoft-store) [The end of UWP apps and Microsoft Store is near](https://windowsreport.com/uwp-apps-microsoft-store-end-support/) Does this encourage or discourage you about UWP's future? I am not making a judgement at this point, but UWP has struggled mightily to gain traction and hasn't. &amp;#x200B; &gt;You made a higher-level button control. You can easily implement it in UWP and use it as such: Again, very valid point. Maybe "you can easily" but not everybody can and this is just one example. The goal with Frogui is to significantly reduce the amount of customization required. For example, literally hundreds of UI buttons (and other controls) were analysed to find the properties people most wanted. Distilling the requirements down into properties allows developers to avoid customization. &amp;#x200B; &gt; I personally never needed those units. Do people really use them? Which ones? I am guessing several million web developers use a variety of them with some regularly. &gt; You could easily add support for these units with a custom attached property: This argument is sort of like saying "who needs C++, I can code everything I need in C without the overhead of v-tables." Point being, yes where there's a will there's a way, but when you start talking attached properties you are taking people into the deep end of the pool, many of whom will be in over their heads. WPF/UWP/Silverlight are brilliantly designed and very effective frameworks. They are also quite complex for many developers.
I've worked professionally in utilities automation/billing, healthcare (specifically electronic health records), reinsurance, finance (specifically a discount stock broker), and general consulting.
Agriculture. Implement robotic solutions.
Definitely a big win, and not one that's lost on me. Do check out my response above to [miguelrochefort](https://www.reddit.com/user/miguelrochefort/). I would appreciate your thoughts.
I work in financial services, boring to most but I think it's pretty interesting.
Same with me. People are sometimes surprised that we use C# but it is a great language with great support and can be used in embedded/real time applications if you design them right.
if you are looking to maximize job prospects then learning sql or javascript would both be very useful. If you want mind expanding stuff then maybe Rust or F#
Yes I’m thinking JavaScript and staying with .net and angular is the best route...
Here's our [Compare to Blazor](https://www.lesarde.com/compare-to-blazor) page. The most significant difference is Blazor is a hypertext preprocessor, which is an unusual approach to client-side applications that has some inherent limitations. WPF, UWP, iOS/macOS and Android -- and Frogui and Uno -- all use similar fundamental UI techniques that allow working with advanced concepts such as declarative layouts, themes, lookless controls much easier to do. For a comparison to Uno, follow the dialog above started by [miguelrochefort](https://www.reddit.com/user/miguelrochefort/). Please follow-up if something is not clear or you have more questions!
As someone has already mentioned IoC. Once done, checkout a library such as NSubstitute or Moq. It will allow you to mock calls made to your services and the responses they should return.
* Learn JS and then TypeScript. If I were you I would buy a book like JavaScript Patterns or JavaScript the Good parts. JavaScript may look like C# but is more similar to LISP like languages like Scheme and Clojure. * Learn CSS - PROPERLY. Doing CSS well is actually quite hard and a lot of c# guys do CSS really badly. CSS isn't really a programming language but if you are doing Web dev it is vital to have a good grasp of it. * Learning Java wouldn't be useful IMHO. C# and Java were at one time (early 2000s) so similar that most libraries were ported by just changing the namespaces in the usings. * Python is great, but won't help you in the .NET world.
Industrial computer vision.
Possibly. I don't really know the underlying parts too well.
Power Utility currently, but I've worked in the semiconductor, aerospace, irrigation authority, and petrochemical industries. Programming allows for diverse opportunities.
Physician Staffing, Billing, and other hospital ancillary services.
Ever heard of TeX?
&gt; don't use multi-dimensional arrays (int [,]) as they are much more expensive than jagged arrays (int [][]), because of bound checking. Source? I'd expect jagged arrays to be more expensive generally because the increased number of heap allocations, and likely cache misses, since the inner arrays may not be allocated sequentially.
I work for a consultancy. I'm currently contracted with a financial services (open banking) startup.
The difference between client and server is the need to download the mono.wasm and your dlls from the server. But if we focus in the rendering, it will be triggered in the same way libraries like Angular enable data binding. So in this case, yes, js will need to notify .NET code and vice versa.
Finance and previously broadcasting
Currently doing work at a benefits administration firm. Previously worked in insurance, real estate, a clinical lab, and doing accounting ETL automation stuff. Got my start doing 3D computer graphics and still do some side work related to that. Turns out C# ain't that bad a gig. At the end of the day, it's been a lot of line of business apps, integration work, and moving data from place to place. Yes there's some specialized stuff that I've had to learn along the way but a large majority of it is a lot of reusable stuff that's widely applicable. The 3D work has probably been the most specialized.
Telecom, I build stuff to plan and engineer network infrastructure.
Imo adding more oo languages is good to score any job, but if you want something better (and i suppose you do) i would close up the stack in a way. As suggested go for SQL, learn cli for redis, elasticsearch and/or some other lately popular backend components. Learning Angular is good (hopefully new version) but I would suggest javascript first since that is what browsers are running. It is mega easy to move to typescript with c# and js knowledge. Avoid learning framework first, learn language itself then move to framework. If you run out of things to learn move to java because market is huge for it still, after you learned js it is easy to use it for backend so node is your friend (also very popular) and after that close it with another scripting language (python is fun, php was mega popular but still used a lot)
Real Estate, our platform serves large Real Estate brokerages and their agents
Fuck 837 and 834 edi layout
Java
Depending on how you did it, you have a few options. You could use the separate .ico files. As long as you're disposing of the handles correctly, you're fine. If you were using WPF or WinForms, you could have used a rectangle or text block or some other control and just changed its background color. Or you could have attempted to draw directly to the screen. I mention these just to list other ways you *could* have done it since you weren't sure what the options were (assuming I'm reading your response correctly). Ultimately, if it works it works. From what you said, it's not a resource hog and seems to be running ok, so I wouldn't worry about it much. As a first C# project, that's pretty damned cool. :)
That's the route I'd recommend. Our full-stack devs need C#, SQL, Angular (TypeScript), HTML, CSS. ngrx/rxjs is also useful. I'm starting to lean away from full-stack development myself so I'm starting to pick up python for fun. But if you're looking for that type of thing, those are the routes to go.
Warehouse automation/robotics
Accounting. In the past: marketing, agricultural science, pharmaceutical (medical practice software), network monitoring (network operations center software), developer tools, consulting, sports magazine, and CRM. I've, uh, moved around a lot.
Important questions we need answers to!
Still an intern, but I've done government -- backend optimization, databases and such. In latest one worked in large company that develops dev tools (and other things).
How do you like it? Also, how can I break into it? I am currently building .NET c# web apps...
How do you like it? sounds something I'd be interested in.
Can you explain a little what do you? sounds interesting!
I think it was supposed to be a joke, because at 100% disk usage the app will have to wait to get the image file from the disk so it might get stuck on transparent while wanting to load red...
How do you like it? Is it web apps or desktop apps? Is it challenging?
Your resume must be insane! which one was your favorite?
You've done a lot as an intern!
Yes
You don't (or shouldn't) be consuming DLLs directly generally. Of course there are exceptions but it doesn't sound like you need to. If the projects are in the same repository, reference the project directly. Msbuild will do the rest and grab the DLLs it needs. If they aren't in the same repository, use NuGet to reference the shared project. NuGet restore will grab the relevant DLLs. P..s the word you're looking for instead of 'classic' is framework. You're right that .net standard is sort of a bridge. It's basically a contract of things both framework and core can do, meaning both can reference a .net standard project and consume it's code.
Is it a library. Or is there some hidden function that I don't know about.
Tech support for car washes. I only dabble in programming as a hobby and to have more stuff on my resume.
&gt; Another comment or pointed out the StateHasChanged event, and that works too, if you need to fire the event manually. &gt; &gt; Also, I heard at Build that you can implement INotifyPropertyChanged somehow... Didn’t really get any details about that so you’ll have to do some homework if that’s interesting to you. Basically, you use INPC if you want *non*-components (like a library of view models) to signal changes. Your components can then listen to that event, and call `StateHasChanged` in the event handler. This approach also has the advantage that your INPC code isn’t Blazor-specific.
Payment systems.
Education. Or rather IT for a large educational institution. Mostly network dashboards/IT automation and self service tools :)
Drug trade
I work in Identity and Access Management for an insurance company. I'm not a developer by trade, but .NET is incredibly useful when your company relies on ActiveDirectory as much as we do.
Life Insurance
Yes, you'll probably need some third-party library. You'll have to find that on your own. Try looking on github.
I work for a warehouse/distributor in the aftermarket automotive market (think circle/drag racing and hot rod parts). I previously worked for a company that makes lab equipment (carbon and hardness testers), a medical implant tracking company, a tax generation system for counties, a governmental work agency (technically a college on RFP to run the agency location) and a theatre turn-key vendor (they sold the software, the computers, drawers, printers, etc...).
Tour help it's much appreciated. Cheers mate!
Healthcare BI
TV/Movies
The thing with this is the confusing nature of the LibVLC license. This appears to reference a native library nuget package that states to be LGPL but if you go to the source that these native libraries are built from its says GPL. I just need to understand if I can distribute the native libraries with my commercial code without opening myself up to GPL.
Nice! mind sharing a little more on what you work on, if you can?
Does anyone know, are you able to access the decoded frame-buffer with this? A couple examples: - Apply filters in a shader, using the decoded video as a source texture - Use the decoded video as a texture on a 3D object Stuff like that.
Fintech
JavaScript is the one true language. Pure C# developers are dying off with the desktop, you need to learn JS and Angular or React to be competitive in the industry.
The pragmatic approach is to look at jobs in your region and see what's most in demand. At a macro level, everyone should know JavaScript (save TypeScript for later) and a popular front end framework/library such as Angular, React, or Vue, React being the most popular nationwide. After that get some experience with databases (relational and not) and at least one cloud provider (AWS is the most popular, but Azure may be more applicable if you're wanting to stay in the .NET ecosystem).
If you're working in Enterprise, then Angular as a frontend framework (C# is very similar to typescript). Asp.NET Core for the backend. Then you can advertise yourself as full-stack.
Used cars...
Human services!
Luxury hospitality, mainly updates and maintence to our external facing site along with internal tools for other departments.
You might find this interesting: [https://12factor.net/](https://12factor.net/) It's pretty close to my credo. Specifically: &gt;[V. Build, release, run](https://12factor.net/build-release-run) &gt; &gt;Strictly separate build and run stages &amp;#x200B; GitVersion tries to guarantee the [Codebase factor](https://12factor.net/codebase). But, as I said, I'm not sure how well it does so due to the distributed nature of git. &amp;#x200B; &gt; I use DotNetCorePlugins along with a custom private NuGet server using [BaGet](https://github.com/loic-sharma/BaGet) to resolve / validate dependencies of plugins being pushed to our nuget. &amp;#x200B; I'm not sure I understand. Do you have a demo architecture on GitHub? &gt; We have a very specific use-case, as with most things it comes with caveats and trade-offs, your mileage may vary, etc. What's the use case? Sometimes very specific is also very common.
When I was doing C# it was Retail. This was C# compact deployed to Motorola 3190 and 3290 devices.
Commercial real estate.
Education, cloud based. Mostly PowerShell, but at least it’s still .NET.
eCommerce :)
Healthcare software
RemindMe! 5 years
Thanks! I'm basically consolidating a bunch of my little utilities into class libraries for powershell and in some cases autohotkey to reference and consume. They're meant to be used externally and copied and distributed alongside the script that calls them. For framework dlls, it seems the deployment just includes the dll and any attendant dlls copied from NuGet. When I created a standard dll, the NuGet DLLs were missing in the publish, but there were a whole host of what looked like framework library dlls in the folder with my built library. Does this imply they have to be distributed everywhere the dll is? I think I'm confused about things.
Project mgmt software vendor, exciting times!
Oh boy you're in for a world of fun. C# is more than capable of working with geo data but you're gonna need to learn a bit about what you're doing first, and learn how to describe your problem more accurately.. Read a map? What map? What coordinate system does it use? What is the data format? Kml or something standard? Create a geofence? Sure, that's just a series of co-ordinates.. what do you actually want to do? Determine if a given point is inside a closed polygon? Find the point on a polyline which crosses a co-ordinate pair (fence)? You'll need to be a bit more specific if you want specific answers to your questions.
Having knowledge a mile wide and an inch deep won't help much IMO. Get a basic understanding of the current trends, sure. But don't sweat it much and spread yourself too thin. Having in depth knowledge of one is better than a little knowledge of many.
[blazor.net](https://blazor.net) ?
According to StackOverflow, python is the most searched and fastest growing language. https://insights.stackoverflow.com/survey/2019
how does one go about setting this up? do you have a VPN set up so you can get on your home network from afar?
This is so wrong. JS, while extremely prevalent, is a garbage language and far from the one true language. Also, pure C# is more alive now than it has ever been.
It may depend on your network configuration. I use Chrome Remote Desktop though &amp; it works like a charm.
WE'RE IN A GODDAMN SUB? OMFG!! WE'VE GOT TO KEEP FROM PANICKING! Seriously, game industry off &amp; on, and now social media.
Insurance currently, have also worked in healthcare and commercial real estate.
Currently building internal applications for a shipping and distribution company. It's not the most exciting software. However, deadlines are looser and nobody outside of our team cares what technologies we use, so our manager lets us try new things. The company as a whole has about 2000 employees but the development team is only about 10. Software is not their primary focus and this is the first company I've worked for that didn't sell software. I've actually enjoyed it the most because I get to develop new websites/apps using whatever the latest and greatest technology is. Most new applications are small websites or web services to satisfy the needs of a specific department or make someone's life easier. We do have a "main" application that a lot of the company uses to manage the business but it is mostly just in maintenance at this point. &amp;#x200B; Other industries I've worked in: \- Software for law enforcement: This was for a small, privately owned company and was by far the most interesting. However, the hours and upper management were both horrible. Developers did not have much input in how we were going to create the software which seemed weird. It was not that challenging but they demanded too much work with too few people and refused to compensate us fairly. The turnover rate there was insane. It was my first job out of college so I stuck it out for a few years and a couple managers, but ultimately left because they kept trying to "promote" me and give me new responsibilities without a raise. \- Software for architecture and engineering firms: Most boring thing I've ever done. It was glorified accounting software. Hours also sucked. This was a medium sized privately owned company. &amp;#x200B; Honestly I've decided I care more about management's attitude towards learning new things than what industry I'm working in. I've also decided that I'm done with small companies.
&gt; JavaScript may look like C# but is more similar to LISP like languages like Scheme and Clojure. JavaScript is a multi-paradigm language; whether it is more similar to C# or LISP comes down to how you choose to use it. You can use C# in a functional way also, especially with Linq. &gt; C# and Java were at one time (early 2000s) so similar that most libraries were ported by just changing the namespaces in the usings. This is way off. Basic I/O is different: `System.out.println()` vs `Console.WriteLine()`; properties are different (Java requiring explicit getters and setters vs `get{} set{}`); I could come up with dozens of other things. The two are very similar but you've oversimplified the differences.
Advice - before you begin any coding, write down exactly what you want this thing to do; i.e. define the scope of the system. This sounds like something that could be anywhere from relatively simple to extremely complex, so consider what you have time for.
Oddly, the accounting one. It's given me the most career growth opportunities and I've been able to stretch some of the solutions to encompass new stuff -- here is where I started dealing with Angular, writing Windows services, and playing with other stuff I didn't get much of a chance to try out. After that? Probably the medical practice software because it felt like I was doing something that could make a big difference in people's lives, and then the network monitoring stuff because it's been used by several subsequent companies -- it's neat to be a part of software that sees general use. :)
This depends on the workplace. If you're on a team supporting an enterprise system for a large company, I'd tend to agree. If you're on a cross functional team working on a public facing system like those developed at startups and FAANG companies, breadth can do quite a bit more for your career mobility than depth.
Ah okay thanks for that. I was assuming I could draw something to the screen, but was not certain how that would be. I kinda assumed running it how I am was going to be the most reliable. Also, yes. I am disposing of it every switch. &amp;#x200B; And yes. I really like the outcome of the project, it's pretty neat! I am proud with how it turned out.
Oh okay sweet :)
Learn c++, you'll understand what was going on behind the scenenes. Will this be beneficial? Sadly, probably not.
Thank you!
consider taking a look at node.js as well so you can build extension layers into your C# stuff. Otherwise Angular/React/Vue with Javascript/Typescript is a pretty solid bet.
Education and public service.
I would believe you if it weren't for the fact that the entire software industry goes out of their way to not use JavaScript (jquery, Angular, React, Vue, Blazor). Last week at Build, Blazor sessions were standing room only because people are sick of JS.
I know about that bit, but he needed something on the foreground to visualize it to him. I do tell him when it solid red to view the Task Manager to see the percentage of disk usage, I can maybe even have it output all that in a log file.
&gt; JavaScript is a multi-paradigm language; whether it is more similar to C# or LISP comes down to how you choose to use it. You can use C# in a functional way also, especially with Linq. https://en.wikipedia.org/wiki/Brendan_Eich#Netscape_and_JavaScript "Eich originally joined intending to put Scheme "in the browser",[6] but his Netscape superiors insisted that the language’s syntax resemble that of Java. The result was a language that had much of the functionality of Scheme, the object orientation of Self, and the syntax of Java." The point I was trying to make was that JavaScript while it superficially looks to be a C style language, it is very very different and many developers write it as if it was C# and then wonder why things don't work as they expect. &gt; This is way off. Basic I/O is different: System.out.println() vs Console.WriteLine(); properties are different (Java requiring explicit getters and setters vs get{} set{}); I could come up with dozens of other things. The two are very similar but you've oversimplified the differences. I was being slightly hyperbolic to illustrate the point. However when the NUnit team did the first port of JUnit to C# they said they just recompiled the source with namespace and equivalent function call changes and they didn't really have to change much of the syntax. Unfortunately they've changed their site and I don't have a source for that and I cannot be bothered to go searching through web archives to find the exact quote. Back in 2003 (when I started using .NET), Java and C# was so similar in a lot of cases you could cut and paste code between languages and it would compile. It took me a week to be proficient with C# and I had been doing Java for 4 years previous. The biggest difference was how to deal with Lists and Generic IIRC.
Well. Never had that problem... &amp;#x200B; Also, if the disk is not being used in the first place it wont take disk usage to switch images for you since there is no need. I have had times where it stayed transparent for a good minute. I have also had times where it was blinking for thirty and in games... its generally blinking or solid red.
Wholesale/recycling. My company buys bulk empty toner and ink carttidges, sorts out the damaged/unsellable ones, and resells them to refurbishers. There isn't any off the shelf software to accommodate how we do things in this area of the industry, let alone our specific process, so over the course of the past 5 years, we've built up lots of software to process incoming product, track it through the warehouse, and out to customers. Lately I've been working on tracking employee efficiency and labor costs as it relates to inbound "production". I write about as much SQL as C#.
Can I take a moment of your time and tell you about [my good friend C#](https://www.hanselman.com/blog/WhatIsBlazorAndWhatIsRazorComponents.aspx) ?
Oh I'm sorry.
I totally agree with jxyzits. Write down all necessary things make something like a specification, maybe even use UML do model your desired architecture. It will help you a lot before actually coding. I know its hard because it’s not as much fun as coding but it will help you in the long run. If you need anything specific you are free to ask me via PM Cheers Max
Retail/Manufacturing. I'm on the team that writes the web app that runs raw intake, assembly, customer orders, picking, packing, shipping, finance, and everywhere in between.
Also be very careful how much you bite off. Determine what the absolute minimum working version would be, finish that, then go back and add features one by one. If you need to have some sort of deployment, get that up and running asap. I've seen too many students fail completely because they tried to do too much all at once, and ended up not finishing anything. A working product that fails to meet a few features requirements is way better than a pile of non functional code that partially implements everything.
jQuery, Angular, React and Vue are still all ultimately JavaScript though. Blazor is a glimmer of hope.
When it works it's awesome. Most people in ag are good people who are enjoyable to work with. I also love working outside so that is a plus. However, I don't think there is as much opportunity(money) as everyone thinks there is. Farm margins are slim getting slimmer... most of the opportunity is for super specialized projects for large corporate farms who are all slowly migrating to latin/south America. Everyone is feeling the pinch and that often makes ego's/tempers run high. All of the automation in the world won't fix the current economic state of the industry. Not sure if that is the answer you are looking for... Disclaimer... grew up on a farm (think vegetables, orchards, vineyards)... worked on it every summer and still do from time to time... majored in ag engineering from cal poly SLO... currently trying to get a MS in artificial intelligence.
Imo optimize for breadth only after you get depth in one thing that you really like.
any idea what the latency drawbacks are for using c# vs c++? I've seen both but never have been able to directly compare one against the other.
You can think of Standard as the intersection between core and dotnet proper. A standard class library can be used by any dotnet runtime (as far as i know). Every project is going to be compiled to a separate DLL, and so if you just want one DLL then you will need to have a single project or use ILMerge.
Oil and gas. But u just make typical like of business apps.
Started in casino gaming testing (slot machines). Moved to a new city and took a state and hospital record keeping gig. Back in gaming again, much more interesting.
Some benchmark here (as well as an alternative implementation): https://www.codeproject.com/Articles/1064915/A-Generic-Fast-implementation-of-a-dimensional-de More details on that one: https://blog.mischel.com/2013/05/08/are-jagged-arrays-faster-than-rectangular-arrays/ There are some trade-off in both cases and ways to improve each of them. Maybe my comment should have been more measured :)
The top model lenovo E590 is $1043. The bottom model lenovo ultrabook with the same size screen (X1 Extreme) is $1673. The X1 has a better GPU but half the SSD size, a fairly comparable trade. The 1lb less of weight is mostly what you're paying the extra $630 for. For 16GB you pay another $200 on the X1 vs buying a $40 RAM stick yourself for the E590. So if you don't mind the extra pound you save almost $800.
Depends on what you want to do. What are you looking for?
User &amp; Data Management
Retail/dairy
Couldn't agree more. I learned this the hard way by biting off way more than I could chew and just ending up overwhelmed and confused.
Oil and gas. (Houston)
I'm an intern and your next car will have survived quality control in part due to software I wrote last fall. Lots of companies in manufacturing use c#. The language itself is very easy for an intern with some development knowledge to start with.
Data management for manufacturing companies
I really love Jupyter, wish there was an equivalent in C#. I think [Xamarin.Workbooks](https://docs.microsoft.com/en-us/xamarin/tools/workbooks/) are underrated and I love the ability to make real-time edits to wpf apps... Wish there was more activity. Not really related, but I guess your comment reminded me how cool Jupyter is
Angular
Commercial enterprise security software.
I work at a university
RemindMe! 1 year
Depth I think. Tim Corey will do a great 30 minute video explaining some topic, Angel Six will do 2 two hour videos. Tim's will be more hypothetical, Angel will actually do a project. Angel includes a lot of tidbits like proper way to do commenting, hacks to put evaluates on one line, VS keyboard shortcuts, etc, etc. It's just way more content.
Manufacturing (contractor) Healthcare (FTE)
Wow. Ouch, Sorry.
I would consider learning Javascript and some of the frameworks that are most common -- React is incredibly powerful and portable. Also, if you're learning Javascript you should learn Typescript. It's statically typed Javascript and it's blowing up and will probably replace Javascript outright at some point.
I agree, if he already knows JS internals pretty well imo. Otherwise my personal experience was that Typescript being similar with C# is actually detrimental since it gives a false illusion that things work the same, but actually JS as a language has a completely different paradigm then object-oriented languages like Java, C#, and C++. &amp;#x200B; In that regard, React is better since it uses plain Javascript and you can learn it as you go.
Unless you are 100% sure that the value is actually of the exact type (in which case a cast could be used), it should be the preferred answer. `Convert` handles more cases (esp. from string formats).
look into Typescript it's like Javascript.... but with types!
What type of tasks do you do for the company? Curious because I have a civil engineer degree and am in the process of learning coding ( not even a month in, learning html, css, and bootstrap rn.
Facility management
Hah screw those guys. Early bound for life and fuck the v9 API changes.
I work in their .Net support team. So I manage and support their internal and external .Net based applications. This includes multiple [ASP.Net](https://ASP.Net) sites, a Xamarin mobile app, and an Azure based service.
Work on the web app piece of a machine learning platform trying to bring the benefits of machine learning to process engineers without them needing to be mathematicians. We have a team that writes the ML algorithms, and my team works on a platform to get data ready for the algorithms and show users the results in a meaningful way. Our entire backend (API and microservices) is comprised of C# including our AWS Lambda code. Have also worked in accounting, medical data collection and medical devices (firmware update applications).
I was confirming what he was unsure of. Why do you think I used his exact wording?
Hi, I understand it may be confusing. So, LibVLC (the core library) is LGPL while VLC (the application) is GPL. LGPL is not well known in the .NET world, so it adds to the confusion. \- You can use it in your commercial app without opening your code as you are linking dynamically and not statically with it. \- If you modify LibVLC or LibVLCSharp for your app's use, you must publish the changes you made to those libraries. \-You do need to add a reference/credits somewhere (in the about page for example). Hope that's clearer. More info below: [https://www.videolan.org/press/lgpl-libvlc.html](https://www.videolan.org/press/lgpl-libvlc.html) [https://tldrlegal.com/license/gnu-lesser-general-public-license-v2.1-(lgpl-2.1)](https://tldrlegal.com/license/gnu-lesser-general-public-license-v2.1-(lgpl-2.1))
If you want to go the mobile route, I recently added Xamarin to my resume (already had SQL experience) and my LinkedIn views/ recruiter job inquiries saw a significant boost Edit Also, when I changed jobs I went from a Java shop to a .Net one, there was a bit of a transition period for syntax changes, but OOP is OOP
I will be messaging you on [**2024-05-14 01:57:37 UTC**](http://www.wolframalpha.com/input/?i=2024-05-14 01:57:37 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/bo8xvk/c_programmer_looking_on_what_to_learn_next/endwyww/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/bo8xvk/c_programmer_looking_on_what_to_learn_next/endwyww/]%0A%0ARemindMe! 5 years) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! eneg9i5) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Thank you for the detailed response
Hello, Technically, you can right now. That's how Vlc.DotNet works for WPF [https://github.com/ZeBobo5/Vlc.DotNet/blob/develop/src/Vlc.DotNet.Wpf/VlcVideoSourceProvider.cs](https://github.com/ZeBobo5/Vlc.DotNet/blob/develop/src/Vlc.DotNet.Wpf/VlcVideoSourceProvider.cs) The issue is that the LibVLC API used there is not very efficient (GPU copy/no hardware decoding). You can still try that LibVLC API in LibVLCSharp 3 though. In LibVLC 4, there will be a new feature that is currently being implemented in the LibVLC nightlies (4). When LibVLC 4 gets released, I will release a LibVLCSharp 4 version which will allow you to use those D3D/OpenGL-based APIs (with hardware decoding). That's how the game engines integration will work.
Could you elaborate? This could vary from ML based bitcoin trading to loan shark stuff
Even Iron Python that Visual Studio uses?
Healthcare
Aerospace
Transitioned from QA to Dev about six months ago. I'm junior at best, more likely a trainee. I work for a firm that makes telemedicine devices.
Thanks for the info. I look forward to v4!
Give React a very serious look before committing to Angular.. React is extremely popular and, IMO, easier to pick up. The community is also great with boatloads of reusable components on GitHub
BioMedical Storage and Analysis. We're GxP regulated, so it's...a lot of paperwork and headache, but it requires high level of attention to detail. One mistake could wipe vital information completely invalidating decades of research. Kinda terrifying.
Sounds like we're kind of similar, but I have only 2 years of real salary programming experience, everything else I have is international_trade/structural engineering. My spouse worked for one of the big shipping companies. I hated writing logistics software until I started a shitty 3PL company. I love writing structural_analysis/drafting_automation software.
I learned C# before researching the Job market around me. I did some research and found Java Developer Jobs are in demand around my area. It was probably the easiest transition from C# to Java. Both are really robust languages and have super similar syntax almost identical.
Learn enough about various frameworks to understand the justification on why so many dislike/like those frameworks. I personally liked Angular until I got into VueJS and understood why so much Angular dislike.
Financial, specifically online banking and payment processing.
Medical imaging. Have done other things, but 90% medical.
I'm doing this. I also waste a lot of time looking up what I don't know. I don't have a specification and it makes it difficult, but I'm doing it because he's a good friend. The problem statement was something like "I don't want to spend so much time in Excel". He also doesn't want to walk me through the entire process, so I'm almost guessing what he wants at times. I don't touch PoS, because I'm scared of hardware.
Interesting. There are several tests. Some show no difference, and others show advantages to both jagged and rectangular. It's certainly not clear that jagged is generally faster from this.
Construction Industry. More precisely Building Information Modeling (BIM) and Virtual Construction model development using Unity Engine. I am not BIM modeler but software engineer for their Autodesk products and some other modeling products they use.
Genetics
I understand that every project compiles into a separate dll. I'm just confused by all the system.. dll files that are published to the build folder on build.
Work with Law Enforcement. Pretty fulfilling gig in a lot of ways - mostly non-technical but comes up with very interesting technical challenges sometimes too.
We use good old C for our automation software.
Same!
Ideally, you'd want the dictionary moved to a class level static (can keep the same initialization code). Theoretically the optimizer would take care of that, but it's better not to leave it up to that. Also, you should look at StringBuilder for appending the encoded text. Unlike C++'s string class, C#'s strings are immutable, so all the += are resulting in new allocations in the string table. Great start in C#, though!
Aside from legacy applications, I think C# is going to replace Java. Angular is great. A lot of people like React and Vue as well.
As others have said, you won't be able to truly publish a single DLL without using external tools. Standard and Core projects use a central package cache and the DLLs aren't copied into the build directory by default. If you run `dotnet publish` in the directory of your csproj, msbuild will copy everything required into your output folder. I think that you should only need to distribute the extra nuget DLLs. Anything from the CLI (common language infrastructure, aka most System.X libraries) should be automatically resolved on computers with a runtime installed.
All okay. So i can effectively ignore everything except the project dll and nuget package dlls when I'm deploying things to where they'll be used?
Real Estate. MLS software to help agents sell properties.
Those are probably your nuget dependencies. You can use ILMerge to merge all of those into a single dll, and then share that.
That has been the case in my limited experience - I'm not sure it's a hard rule, sorry.
Same. Mech engineering degree with a heavy emphasis on microcontrollers and C. Some python experience via co-op, but my job in automation has me learning C#.
What's your goal? If you enjoy learning more languages, well, you could learn them all. Some industries gravitate to certain languages. If you want to move into a different industry, you could target the technologies that they tend to use. As a c# programmer, you already know 99% of the java syntax. You'll probably spend most of your time learning about the patchwork of tools like maven. I found ReactJS to be a nice alternative to Angular, with much less boiler plate code needed.
Mobile games. Unity.
 [https://learn-blazor.com/getting-started/what-is-blazor/](https://learn-blazor.com/getting-started/what-is-blazor/)
Corporate tax software
High volume data processing and machine learning targeting datacenter security. We're about 45% C#, 45% Scala, and 10% C++. Smattering of typescript for the front end.
Marketing and websites for powersports / automotive industry
Absolutely agree with that statement. Additionally while I understand that you are familiar with winforms, I would suggest to look into/consider wpf or uwp. It will not only improve the visual aspect, but also you will learn about mvvm pattern (also winform are rarely used in companies, so knowledge of wpf I would say is bare minimum for the future job)
Insurance here too, very new to c#, job original was very open spec as was a brief of "just make the world better and stuff". Ended up doing PowerShell scripts to monitor thing another stuff couldn't monitor and php to make dashboards (learning how as I went) No am using C# .net to do windows services, form apps and asp.net sites for dashboard, web apps, just starting to play with APIs. Really enjoy it and having freedom to "play" and learn, only downside is that because it was fairly open scoped it was priced at a desktop engineer level so is massively underpaid for what it actually became, not that I can really blame them as when I came in it was more a desktop style role (all be it at desktop infrastructure level and not on the ground level).
Cloud VoIP provider
My understanding is part of the libVLC core library is also gpl like some of the codecs or what not. Is that not correct?
AFAIK only the VLC apps are under the GPL license.
Not bad, we do web apps. We've been around for a while, so a lot of our platform is in .NET, but our newer products are on React and .NET Web API. Hoping to test the waters out with .NET core sometime, however business needs come first. It's a little challenging building a platform to support the needs of brokerages, offices and agents (we do a CRM among other things), however the biggest challenge is dealing with MLS data, or all that data of all those real estate properties out there. It's a lot of non-standardized data we have to make readily available across our platform to the correct people.
I work for a consulting firm that mostly does line of business applications, though we do have some consumer-facing applications in our portfolio as well. My employer’s client portfolio is pretty varied, though our biggest clients are in financial services (i.e. back office service providers for banking and insurance companies).
Public research university. I mostly build applications for undergraduate advising offices.
Same here too. Building good old wpf apps
SQL is applicable pretty much everywhere. If OP doesn't know SQL that would be my first recommendation by far.
Does Open Source count?
&gt;CSS isn't really a programming language [it's turing complete for cryin out loud](https://stackoverflow.com/a/5239256)
I've been hoping this thing takes off cuz I have to learn the web stack and I just hate the web stack
Curious, do you actually work? This is just so out there it makes me wonder who would actually think this.
While there's a lot of benefits of knowing python or java, it can depend on what you want to do whether it'd be applicable. If you wanting to do web app development in the microsoft world the main things you want to pick up would be sql,js,typescript,angular. SQL would be useful if you want to get into any enterprise development. In my area .net stack enterprise web app dev is the hot ticket, but there's a lot of ways you can go depending on what you want to do.
Architecture and building development, I use unity to build a model of cities.
Learn JS/TS/Angular. It's good to have some knowledge of the node/npm environment and it has become a very mature framework. It's probably the best option for most rebuild/greenfield projects right now. It's also a good preparation for when Blazor takes off.
Hi, I’m doing a project on GMOs and what do you think about them?
Game development both mobile and desktop/consoles, but not necessarily 100% C#. At the moment I'd say it's 40% C#, 55% C++ and 5% ES6. But I use C# whenever possible, because I love this language.
Actually somebody just wrote a chat software just using html+css and no js whatsover: https://www.bleepingcomputer.com/news/software/developer-creates-a-two-way-chat-using-only-css-and-html/
Blazor ! Of course !
Video surveillance / physical security. I work for a global leading video management software vendor who has an open platform with free .NET based SDK, so I eventually taught myself C# and now do a lot of tools and small specialized projects. I recently wrote a ASP.NET Core Web API interface to our software to improve the integration experience from non-.NET languages, and I'm currently having a blast building out a PowerShell module to make it super easy to do complex configuration automation via PS. I get to learn new technologies and put new knowledge into practice quickly with useful prototype projects that either grow into a longer-term project of my own or inspire our really experienced devs to adopt a similar feature into the core product suite. I love my job and look forward to it _almost_ every day!
I think you should learn js and react also, or instead.
Maybe learn leadership. It’s ok to not be on top of he new tech stuff in your age. You have Seen a lot and maybe leading a team is a way to go.
Database Conversion Programmer in the Veterinary Software industry. Writing programs to take various other database formats and schemas and transform them into Microsoft SQL databases for importing into our company's software suites. Dbase, Paradox, MySQL, Informix, CSV, Excel, Access, Proprietary Formats, etc.
You are stating that you are an mvc/.net dev. This stack ist among the most popular and versatile stacks there is so there is no need to geht out of it learning Python or Java. Specialize in your field. Master asp.net core, Azure and SQL Server. You can add some frontend tech Like angular or vue (Angular seems to be the most demanded paired with .net). If you go this route you will have a well matured tech stack which is fun and efficient to work with and you will be very valuable for Enterprise customers. I'm running a quite successful consulting business specialized in Solution Architecture.
`IFoo&lt;T&gt;` is covariant in `T` if `A : B` implies `IFoo&lt;A&gt; : IFoo&lt;B&gt;` and contravariant if it implies `IFoo&lt;B&gt; : IFoo&lt;A&gt;`.
Why does it have to be in WinForms? Why not WPF?
Maybe [apache ignite](http://apacheignite-net.readme.io/docs/getting-started-2#section-first-ignite-compute-application) ?
Could be that the image is already in memory.
The Full-Stack title includes the database layer as well. So JS + C# isn't enough to claim being a Full-Stack developer
This tutorial is slightly modified basic example from the official site: http://www.litedb.org But thanks for letting me learn such interesting database.
Most consulting shops I have worked on, are .NET/Java shops. So I would say learning Java would improve your opportunities to switch between both platforms, given that the web side would anyway be common to both. As for SPA frameworks, I would bet on Angular if you are interested into the enterprise space, React or Vue if you are more keen into startups. Python, depends what you want to achieve, I only see it usefull for scripting, learning purposes or machine learning frameworks.
what about [akka.net](https://akka.net) with remoting? &amp;#x200B; [https://getakka.net/articles/Remoting/](https://getakka.net/articles/Remoting/)
True, but in 2019 they have kept copying each other, but also followed their own paths. Copy-paste C# 8 and Java 12 code isn't going to be the same like on 2003, unless you write Java 1.2 and C# 1.0 like code.
I work for an online college working on the website and a plethora of utilities and other pieces of code .
Or Orleans (https://github.com/dotnet/orleans). On that subject I found a useful and detailed comparison between the two: https://github.com/akka/akka-meta/blob/master/ComparisonWithOrleans.md
Oh wow, I'm so sorry for you. I turn down SharePoint jobs every week. Never going back to that collossal train wreck of a wanna be CMS.
Define "beautiful". That's kind of a strange requirement, especially if there is also a requirement to do it using winforms.
It's not so bad... I don't do SharePoint work ;)
Not that old in the CRM game, what specifically do you have against v9 and late-bound? &amp;#x200B; I can definitely appreciate that early-bound makes things easier in the short run, but it can also be a performance kill-switch.
I don't do SharePoint, and CRM is not so bad in the newer versions. Also, we have a bunch of in-house developed tooling that makes it much smoother to integrate and develop against (all of which are open-sourced btw)
I don't do SharePoint, and CRM is not so bad in the newer versions. Also, we have a bunch of in-house developed tooling that makes it much smoother to integrate and develop against (all of which are open-sourced btw)
It's an imposed decision. My teammates are comfortable with WF. In the future if they could mantain the app so they asked me to do it with WF.
How about reading the file line by line, storing it in a list, then going over the list and changing the entry when it matches your ID, then writing those lines back to the file?
When you want to save something you will need a database. If you are worried about the size of the server in the machine, then use a serverless dtaabase. I prefer LiteDB. Its awsome. If you have hate for databases: 1. Save the data directly in a txt file. 2. Or, if you are in wpf, use yur project settings.
Modern-looking controls, styles , effects, etc. I know this is precisely where doesn't fall windows forms. I feel like they are asking me incompatible things.
It's not really much as the support for WF has been declining already. Check this skins that may suite you Free - Krypton Toolkit - Metro Framework - Windows Community Toolkit Paid - Bumifu - Telerik
Trying to build a program that saves tabular/relational data without using a database to do so (beyond simple/limited proof-of-concepts), is like building a car without any rotating components. You’re going to make things a lot more difficult for yourself than you have to. With that said, about the only thing that comes to mind that can do the job effectively (relatively speaking) is a comma-separated file. Good luck.
&gt;Save the data directly in a txt file. &gt; &gt;how would one save the data in a text file afterhe/she added the information to the datagrid? unfortunately I am new and dont know the code very well
I'd go CSV or a local database file, trying to avoid a database is just making life hard for yourself for no good reason.
I am sure brainfuck is tiring complete but that doesn’t mean that I am going to use it for serious programming. CSS is a styling language first and foremost and 90% of the time you it is a selector and some key value pairs
I’ve been contracting for the last 10 years with .NET and tbh IronPython I have seen used once in that entire time.
IoT, for Oil tankers mainly.
Thanks! Metro Framework looks nice.
Wow im shook that almost no one is working in consulting or contract work ? Guess its more common in Germany, but here instead of building a inhouse software department you hire extern companies to develop software for you, so thats what im doing. Currently working on a platform for sport organizations and associations that is a mix of CRM, ERP and Banking.
Video games. Been doing it a long time, but I rarely work on the core gameplay stuff, I prefer working on the server &amp; platform side, which is what I'm currently doing.
I have been doing POS for 15 years and let me tell you, it's hard work. Building a simple POS is easy, building a simple POS that works correctly is hard work but also very rewarding. Always keep in mind that with POS comes responsibility, any POS system is responsible for not only money but also stock holding and costing. If you approach each transaction from a legal standpoint (ie: what does the law say is required for this transaction to be legally fulfilled) you are halfway there in planning your features. I would personally stick with what you know, it is much easier to build a state driven Winforms application than a Web Application if you already have good knowledge of Winforms. If you do want to learn something new, stick to desktop technologies and give WPF a try. Desktop and native mobile technologies (cross platform native like Xamarin is also cool to work with) allows for better hardware integration. Start simple, build your POS to the point where you can create a product and sell a product, then start adding additional features such as user rights and peripheral integration. Be mindful of data, any POS is basically a front-end to capture data, so ensure your data structures are concise, make sense, are easy to work with and performs well. Another important aspect of data in the POS spaces is NOT to repeat yourself, ensure you use foreign key relationships without breaking performance. Good luck.
Ok i didn't read whole thing, but what I can suggest is following : -add input value validation / check if correct. -you probably want to move functionality in external project, so that you can use it with different ui (you won't stay with console app I hope) -think about storing the data, instead of holing in memory In other words make library and declare classes, logic and data storing interfaces, preferably in net standard . Cover it with unit tests. Then you can make presentation project (console/winform /wpf/UWP) reference the library and think how user should interact
Video Management System for security and thermal cameras and other sensors.
I would go with json format, only because I'm lazy and it is easy to serialize 😅
Yes exactly what I'm trying to do so for my method that I'm gonna put in the event var txtLines = File.ReadAllLines(fileToRead); foreach(var line in txtLines) { if(line.Contains(ID) { //what do I put here in terms of replacing the line? } } File.WriteAllLines(fileToRead, txtLines) I'm not quite sure what to use to replace since line.replace doesn't work?
I dont remember well how to get the information from a datagrid (datagrid.Items.Rows[i, j] or something like that). But you will need to look for a event in the datagrid that triggers every time a row is added or modified. As for the txt, you will need to use System.IO.StreamWritter to write and System.IO.StreamReader to read it. There are a lot of tutorials to look up for the details.
Only locally? Use Properties https://docs.microsoft.com/de-de/dotnet/framework/winforms/advanced/how-to-write-user-settings-at-run-time-with-csharp
Government: Intranet web and desktop applications mostly supporting e services. Previously worked in startup fin-techs which I'd love to get back into. (I miss the risk) .
Separate logic from input and output code. Then post again.
Which repos?
Im not suggesting that it wouldn't be, i'm just explaining what I think the joke was meant to be.
I'm not suggesting it wouldn't work, just that I think that's what the original commenter was making a joke about.
These: [https://github.com/delegateas/](https://github.com/delegateas/) Includes * [XrmDefinitelyTyped](https://github.com/delegateas/XrmDefinitelyTyped): Tool to generate TypeScript declaration files for Dynamics 365/CRM client-side coding. * [Daxif](https://github.com/delegateas/Daxif): A framework for automating a lot of xRM development processses. By using simple F# script commands/files one can save a lot of time and effort during this process by using Delegates DAXIF# library. * [XrmMockup](https://github.com/delegateas/XrmMockup): Engine which simulates your exact Dynamics 365/CRM instance locally including all of it's logic! * [XrmContext](https://github.com/delegateas/XrmContext): Tool to generate early-bound .NET classes and enumerations for MS Dynamics 365/CRM server-side coding.
Game development. Electronic Arts
I re-read I read it slightly wrong. I actually set the app to be of priority, so if the disk usage is at 100 percent the application will still turn red. I have tested it quite a bit to make sure of that.
I just did that, the only code I have in this new project is &gt;using System; &gt; &gt; &gt; &gt;namespace test &gt; &gt;{ &gt; &gt;class Program &gt; &gt;{ &gt; &gt;static void Main(string\[\] args) &gt; &gt;{ &gt; &gt;Console.WriteLine("Hello World!"); &gt; &gt;} &gt; &gt;} &gt; &gt;} And it's generating 217 elements in my output as a standalone. How do I fix that?
Damn, talk about job security. Create more legacy apps so they'll always be employable.
&gt; Engine which simulates your exact Dynamics 365/CRM instance locally including all of it's logic! No wai... o_0. Whoa, I know someone that will stoked to see this.
It's obviously not perfect, but it's a huge step in the right direction, and we use it on projects. It really makes it easier to develop plugin code, that you can actually step into it on custom data. &amp;#x200B; Also supports using an actual online instance as back-end for the data, so it's just a wrapper around it, making it easier to develop plugin-code against live-data. (Obviously only do that against a test or dev environment)
You have a list of strings, which you can iterate through. In your if statement you need to reassign value to current line variable in your foreach loop. After you finish foreach, you need to overwrite your file. You can do it by: File.WriteAllText(pathToFile ,you string list);
Yes exactly
Good question. Despite being around now for 7-8+ years, ASP.NET Web API has never garnered the kind of coverage that the larger MVC framework has gotten. Often you'll find it referenced in an article or tutorial about ASP.NET MVC as sort of a sub-system supporting the larger MVC example. This is likely because Web API, except for some limited service-oriented projects, is rarely the point - it's the thing you build to support the point, which is generally a web site, or perhaps a mobile app, sometimes a desktop app. And in most cases those web sites and apps are built with a framework, thus, I suppose, the focus on ASP.NET MVC as a consumer. However, there's nothing about ASP.NET Web API that is inherently MVC-oriented, and if you dig around you can find articles and tutorials that concentrate on Web API itself and how you can call it via AJAX or from ASP.NET Web Forms or .NET's WebClient, etc., for example: https://www.developer.com/net/asp/introduction-to-asp.net-web-api.html https://www.aspsnippets.com/Articles/Call-Consume-Web-API-using-WebClient-in-ASPNet-C.aspx https://docs.microsoft.com/en-us/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client Good luck!
If you need to replace whole value, you just use: line = "something new"; If you need to find some specific in your string, you need to use regular expressions or .Replace() method. Also you can use .Split() if you have some pattern in your lines and you 100% sure, that after you split the line, second item of array(when you use .Split(), it creates array of string splitted by separator) will be your target to replace, then you can use it.
The manager just wants a working app. He doesn't care about the tech behind it.
Then they excuse "comfortable in Forms" isn't good enough. You can make WPF apps as if you were in a Forms environment. It just looks very different initially because the XAML is visible by default. Close it.
This looks like an advertisement-disguised-as-a-blog for a commercial product.
In c# Using objects is an anti pattern and using it for an example is weird. And that’s why nobody explains it like that. Strings are special case structs which makes it even weirder. If people wrote c# based on your example it would become convoluted. I could then just define everything as objects and use pattern matching. Oh , F#!?
&lt;T&gt; are generics and the type is how much variance you allow/ disallow
can industrial automation industry be automated?
Seconding this, I currently pair the two at work. React is moving at a great pace without breaking too much backwards compatibility, the whole ecosystem with tools like Relay seems great.
Wow, good job guys
Or use ClosedXML - [https://github.com/ClosedXML/ClosedXML](https://github.com/ClosedXML/ClosedXML) It's free and they don't post fake blog posts to advertise their ALREADY free project.
 var groups = mainList .Select((numbers, index) =&gt; new { numbers, index}) .GroupBy(list =&gt; string.Join(", ", list.numbers), list =&gt; list.index); var dupes = groups.Where(g =&gt; g.Count() &gt; 1); foreach(var group in dupes) { Console.WriteLine($"Lists {string.Join(", ", group)} share the sequence {group.Key}"); }
I was developer #2 on Uno. I worked on it full-time for about 3 years. I know how much work went into it, and how difficult it is to get things just right. I don't think we would have been able to get this far if we invented our own API and didn't have a working implementation (UWP) to test our implementation (Uno) against. We picked UWP because it was the most modern flavor of XAML and that's what we had the most experience with. We could have easily picked WPF or Silverlight. They're basically identical. I don't work on Uno anymore. I don't know what the future of UWP and XAML is. I had high hopes for [XAML Standard](https://github.com/Microsoft/xaml-standard), but it seems like Microsoft also abandoned it. I think introducing new flavors of XAML (Xamarin Forms, Avalonia, Frogui) fragments the community and increases confusion. If you're more productive with Frogui than with the alternatives and you have the means to develop/maintain it through the lifetime of all projects using it, then more power to you. Just don't expect anyone else to use it, much less pay for it.
Public service
An ASP Web API is MVC without the V. Instead of returning views, you simply return data (usually JSON). That’s all. AJAX (I recommend axios if you’re working with npm) can take a bit more, but it’s also not too difficult.
Embedded systems for POS and other financial devices.
Only in the automation industry.
They enhance images and hack government mainframes.
Humm you can pass a lambda because it can't be serialized. You can use hadoop From your c# code but you have to create an hadoop cluster etc. Same for spark.
&gt;For example, I originally wanted to have the user put in all their categories and respective percent allocations at the same time, assign those to objects and print the object data, but I have no idea how to make new 'user created' objects different var names to distinguish them when I move to print them. If I'm understanding correctly, you probably want to put each new object inside a List as you receive information from the user. You don't then need a variable referring to each object. I'd also probably just do something like "Please provide name of new category, or hit &lt;Enter&gt; when you're finished" rather than asking them for the number of categories up-front. You can use a while loop to achieve this.
Hey, thanks a lot for answering! It seems a bit strange to me that it isn't used in this way, given it has the major advantage of being self-hostable, thus detaching it from the IIS. I guess it doesn't really hurt to create the project on my own without external references. As you said - it's just an API, which can be through HTTP request from any kind of client - be it another .NET client app or a browser window(which is really what I want). I have to say that I'm going to do my project this way simply because I absolutely love the Web API framework - it's strong, lightweight and really easy to get into.
First one of course works because `throw` can now be used as an expression as of C# 7. I'm not convinced it's a particularly intuitive thing to allow, but it makes the language less verbose in some respects. I'm not sure whether I'd support the same thing with return. Expressions altering control flow doesn't sit very well with me, I feel like they should just yield a value. I guess the cat is already out of the bag with throw though, now..
Why do you want to return from inside an assignment? Instead maybe throw a customized exception and return a generalized error object inside an *action filter*
Beat me too it :) I actually thought it was in C# 8, but it is C# 7 :) &amp;#x200B; [http://structuredsight.com/2016/09/01/c-7-additions-throw-expressions/](http://structuredsight.com/2016/09/01/c-7-additions-throw-expressions/)
Very clever use of reflection when initializing the immutable class, but no reflection needed when reading the properties of the immutable class. This should be refined as a built-in part of the Dotnet standard as it isn't language specific.
&gt;Why do you want to return from inside an assignment? To write less code
&gt;Why do you want to return from inside an assignment? To write less code
&gt;Why do you want to return from inside an assignment? To write less code
&gt;Why do you want to return from inside an assignment? To write less code
Yep that's what I'm thinking. Set up the Web API and create a SPA to consume it. I was just asking why are there no resources/examples of such applications; my last question - is it a bad practice for SOME reason
It's perfectly reasonable. In Javascript you can use [Fetch](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) which makes it trivial to request data from an ASP.NET Web Api. It makes more sense with a SPA to request data, otherwise you would just serve up a new page with the data in it already. For bonus points you can use SignalR. SignalR provides bidirectional real time data. So you could build a networked game where players can play against each other.
Omg. You are valued? I got a 1% raise (when inflation is 2%), and was told I should feel lucky! Lol Fucking company income grew by 3-4%. Maybe I need to take the plunge and start my own software company: Wrightway Software. The Only Way!
yes when it comes to drug trade, there is nothing better than C#
Umm... I agree... but this is his/her first project. I think an example would be appropriate.
Why would I use Fetch(or any other external JS library for that matter) over jQuery's .ajax() method? Asking in general, not necessarily for my use case
I am learning c# with xaml, try catch statement are worth looking at.
Before we decided to use React, I checked out the npm installation counts on Angular, Vue, and React. React is the clear winner. I'm sure that is not the most scientific way to choose a framework, but I think it says a lot.
My suggestion: Refactor to separate the visual/UI part from the actual logic like /u/Broer1 suggested (sorry I don’t have an example. For user created objects, you can use a Key-Value Pair, a map, or some other container. Keep doing small dumb/useless/semi-useless programs. Try and reuse code and make things modular. Do some R&amp;D to find something new to do you haven’t done before. After you have struggled some THEN take a couple of free courses online to learn more data structures and algorithms, computer science theory, and learn more about C#. The only way to learn any language is to immerse yourself (notice I did not mention programming at all)
Setting the `line` variable doesn't affect the contents of the array, though, because it's just a local variable; it's not linked to an entry in the array.
Wouldnt agree to add a return, throwing is added for a very common pattern (even though it will die with nullability constraints) of creating object with not null values.
They were supposed to be in C# 8, so perhaps C# 9? So it would allow something like: public ThisIsImumtable Mutate(string property1 = this.Property1, string property2 = this.Property2) { return new ThisIsImmutable(property1, property2); } Actually, [Here you go](https://github.com/dotnet/csharplang/blob/master/proposals/records.md)
fetch is standard, it's not an external dependency. JQuery on the other hand is :) [https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#Browser_compatibility](see compatibility here) You'd use it because it was designed specifically to make it far easier to "fetch" data. But you can of course use whatever you like and are comfortable with :)
&gt; throwing is added for a very common pattern You mean if something is null throw ex?
Yes, you are right. It can be access through for loop with indexer or by .IndexOf() and then reassign to list[foundIndex].
Thank you, I wanted to start small and fix bad habits before I go big
Before I forget, there are alternatives to using JQuery, which makes sense if you're only using one or two functions as the JQuery is pretty big. Not a problem for 100 page impressions, but significant when you scale up. http://youmightnotneedjquery.com/ https://github.com/nefe/You-Dont-Need-jQuery
Yes but it would require industrial automation automation engineers to run it all.
You might want to look at https://codereview.stackexchange.com/ .
That seems hella useful! Thanks!
Always welcome :)
Bullet dodged on SharePoint.
Removed: Rule 6.
They’re plenty out there, though I don’t know where they are specifically. It’s not a bad practice, just much more time consuming, hence why you are more MVC. Besides, it has only been in the past handful of years that going API-only for a web application was a reasonable decision
I added a sort in case the values aren't sorted. List&lt;List&lt;int&gt;&gt; mainList = new List&lt;List&lt;int&gt;&gt; { new List&lt;int&gt;() { 23, 13, 24, 28 }, new List&lt;int&gt;() { 13, 23, 24, 28 }, new List&lt;int&gt;() { 17, 20, 23, 31 }, new List&lt;int&gt;() { 3, 8, 25, 26 }, new List&lt;int&gt;() { 12, 19, 21, 30 }, new List&lt;int&gt;() { 12, 19, 21, 30 }, new List&lt;int&gt;() { 12, 19, 21, 1 } }; var groups = mainList .Select((numbers, index) =&gt; new { numbers2 = numbers.OrderBy(o=&gt;o).ToList(), index }) .GroupBy(list =&gt; string.Join(", ", list.numbers2), list =&gt; list.index); var dupes = groups.Where(g =&gt; g.Count() &gt; 1); foreach (var group in dupes) { Console.WriteLine($"Lists {string.Join(", ", group)} share the sequence '{group.Key}'"); }
Sure things have changed a bit but generally moving from one to the other isn’t a big ask IMO.
You can't return something inside a conditional statement if there's a chance that it won't get hit. All code paths have to return a value if you're returning anything.
Check out DevExpress, if you want beautiful winforms you'll need to buy some third party control package.
Yea, I'm aware but that's not the point. This is just part of code which has to show this thing.
I’m healthcare too. Specifically UK NHS Ambulance Service.
Well, with .NET Core 3.0 you can code cross-platform apps with a GUI. That will make external wrapper pretty much obsolete, won't it?
How? Afaik only WPF will be ported, there is nothing cross-platform about that. Or do you mean something else? Besides all that, Qt is just a really good framework
Can you elaborate on your last point? I'm quite new to Web development
* You don't really need to store NameNum on PercentSplit because you only use it in the loop where you also set it (and I would argue it doesn't mean much and therefore shouldn't be stored) * Create a List&lt;PercentSplit&gt; and add items to it in the loop. Print them in another loop. * Write a function that returns that List by reading console input. * Write a function that takes in that List as an argument and prints them all to the console. (This is what others mean by separating the input/output logic - you ould put both these methods in another class and define an interface for it, then implement the interface again to read/write in a Forms app or something.)
This would be what i would do. And to add to it, i would instead not ask for how many categories they wanted but simply ask for a new category in a loop, which adds to the list. If they don't whant any more categories, exit the loop.
I think the other replies have already given good advice for your program - but I would suggest reading up on some fundamental OOP concepts while you learn the language. What the other people are mentioning about separating your logic is related to coupling and cohesion. You want high cohesion, but low coupling. Basically it means to keep your back end logic as separated from the UI as possible. Some other terms you should familiarize yourself with: Abstraction, Encapsulation, Inheritance, and Polymorphism. Someone else mentioned validation - I'm not sure what Convert. is actually meant for, but it probably wasn't explicitly designed for parsing a string. Use int/decimal.Parse and int/decimal.TryParse. &gt; I have no idea how to make new 'user created' objects different var names to distinguish them when I move to print them. It looks like you wouldn't want to "distinguish" these objects with unique names in the first place - seems like an appropriate place for a list or an array to me (lists are probably going to be easier to work with, but you might learn more from using an array). You didn't mention it but use a blank Console.ReadLine(); at the end of your Main to keep the console window open after your programs finished.
Well an API only serves data. So if you wanted a website, you’d still need some way of hosting the front end html and js. Before SPAs, your best option was to have a light weight server that hosted the views, and then connect to the API for the real database interactivity and such. In .Net, that would be running ASP MVC on one server just to connect to an ASP API.. it makes sense if you also needed to support a mobile app, but for plain websites, it didn’t.
What's wrong with a database? There's a very good reason they're the default answer here. I could understand not wanting to go with a full SQL RDBMS (SQL Server, MySQL etc), but I can't see why you'd be opposed to LiteDB or SQLite here. If you're determined though, then I'd agree with /u/6demon401 - serialise it to JSON/XML and write it to a text file.
.Net Core 3.0 is bringing WinForms and WPF for Windows compatible only.
Took me 5 years to land somewhere I really feel valued, my 6 month raise was 5% and I’ll be looking at a larger jump before the end of the year when I make the move to senior. These companies are rare but do exist! I definitely encourage you to take the plunge and at least start looking at options if you don’t feel like you’re receiving your worth. Good luck friend!
There is almost no speed advantage to using C++, in my experience. The exception is when we need to go above and beyond in optimizing by writing assembly code or using the SIMD extensions. We do have a few functions optimized this way. Latency is an issue for both C# and C++ because we run on Windows. What we do to handle potential latency problems is we install a real time kernel on one of the CPU cores running a small C++ program that our C# application communicates with. This small program is mostly used to read inputs (so we don't miss them) and set outputs (at specific times/durations). C# still does the bulk of the work. I would estimate that C++ is about 1-2% of our code base. I work with small businesses, usually, so a big advantage of C# is that the development cycle is much shorter and code maintenance is much easier.
It can be really interesting sometimes, but it doesn't seem to pay as well as some other software development fields.
RemindMe! 3 days
if we want to get terse something like the following would work: \`\`\` &amp;#x200B; if(var user = GetUser(id) == null) { return Json(...........); } &amp;#x200B; return Json(bla); &amp;#x200B; \`\`\`
I will be messaging you on [**2019-05-17 13:25:59 UTC**](http://www.wolframalpha.com/input/?i=2019-05-17 13:25:59 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/bnyw3r/can_someone_please_help_me_understand_what/engrnep/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/bnyw3r/can_someone_please_help_me_understand_what/engrnep/]%0A%0ARemindMe! 3 days) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! engrufv) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
Imo both the throw and the return aren't very readable. It seems like both sides of the coalescing operator should be comparable (similar types).
&gt; It seems like both sides of the coalescing operator should be comparable (similar types). Depends how you're thinking about it assign value or perform return or assigned value will be: this or that
Things of note: * For parsing user-inputted strings like from `Console.ReadLine()`, don't use the `Convert` class. All of the "primitives" (int, long, short, bool, decimal, double, float, DateTime, etc.) and many other non-primitive structs/classes (i.e Guid) have `Parse` and `TryParse` static methods. Use `TryParse` like this to validate user input from the console: if (Decimal.TryParse(Console.ReadLine(), out var budget) { //budget now has a decimal value from what the user entered } else { //invalid user input -- handle it } * Don't expose public fields until a public field is actually required. Get in the habit of using public properties. Properties only need to be backed by a PRIVATE field if you are doing anything other than setting or reading from the property. Example: public class Person { privage int _age; //private field for the Age property public event EventHandler AgeChanged; public string Name { get; set; } //no private field necessary public int Age //requires private backing field because we are doing more things than just getting/setting { get =&gt; _age; set { if (_age != value) { _age = value; AgeChanged?.Invoke(this, EventArgs.Empty); } } } } * The `Cut` variable and method parameter should both begin with a lowercase letter. * The constructor for the `PercentCut` class is unnecessary since you expose all of its data via public fields. Change the fields to auto-properties like with the `Name` property in my example above and remove the constructor. You can then initialize a `PercentCut` object like this: var cut = new PercentCut() { Name = "John Doe", Percent = 10.7m, // 'm' is how you specify decimal literals NameNum = 42 }; * Make sure to put all public/internal types (classes, steucts, interfaces and enums) in their own separate .cs file. If you did do this but just copied and pasted the `PercentCut` class from its own file then good. * All the above aside, "model" your solution to this problem in a class library. Then use the class library as a reference from the console app or any other project. This way, code you write can be shared. If you design it right, you can easily use this same library for a console app, winforms app, WPF app, WCF service, web api, MVC web app, or whatever else. The code should be UI-agnostic. That is, this shared library shouldn't care about how its data is presented to the user.
You can use Veldrid: https://github.com/mellinoe/veldrid Among other things it supports DirectX, but also OpenGL, Vulkan, etc. It's compatible with NET Core (i use it for a game) and works very well. The API is based on Vulkans' so there is a lot of immutable state but it should be pretty easy to use.
Yeah I think about it as the second one.
You can do a lot with WF. Even acryllic.
Do you use 3rd party image processing libraries?
First off, well done on getting one of your first apps out there. It's always a daunting step, especially when you're a beginner. Some general things that will help you improve your current design and any other app you choose to create going forward: * Learn about SOLID programming principles. I won't go into too much detail because there is a wealth of resources out there to explain the basics better than I ever could such as [this](http://butunclebob.com/ArticleS.UncleBob.PrinciplesOfOod). Once you understand what each of the letters in the acronym means, you can use it as a framework to assess your own design. * Design patterns can also be a valuable tool for a developer (though use with caution, if not used properly they can make your application needlessly complex). [This](https://www.dofactory.com/net/design-patterns) site has some simple examples available specific to C#, but you might want to check out some material on object-oriented design first to get a better understanding of WHY we use patterns in the first place. The Head First series is quite a beginner friendly option in this regard [Book 1](https://www.amazon.com/Head-First-Object-Oriented-Analysis-Design/dp/0596008678/ref=sr_1_2?keywords=head+first+design+patterns&amp;qid=1557839267&amp;s=gateway&amp;sr=8-2) [Book 2](https://www.amazon.com/Head-First-Design-Patterns-Brain-Friendly/dp/0596007124/ref=sr_1_1?keywords=head+first+design+patterns&amp;qid=1557839267&amp;s=gateway&amp;sr=8-1). * Take a look through the [official Microsoft C# guidelines](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/inside-a-program/coding-conventions), I noticed a few instances where you could improve the readability of the code based on their checklist (using implicitly typed variables with the `var` keyword where applicable, using string interpolation etc, using auto-implemented properties for your classes, meaningful variable names etc). * Look up DRY (Don't repeat yourself), and KISS (Keep it simple, stupid), it will help you write shorter, clearer methods. I can see a few places in your code where you could decompose certain operations into separate methods. * Treat user-input as an unpredictable spawn of Satan that it is: using `decimal.TryParse(...)` instead of `Convert.ToDecimal(...)`, try...catch blocks, you always want to validate user-input as far as humanly possible. * BONUS TIP (though some may disagree with me here): try ReSharper out, it will give you valuable suggestions while coding that you can otherwise miss. Even after 8 years of experience with C#, it helps me out tremendously.
There isn't really a problem with using SharpDX in 2019. Just use it. If DirectX13 comes out and you need new features in that, then you have a problem.
Tell him to use Task Manager you evil monster ;)
You should decide based on the market you like to deal with. First distinction is skill depth vs. width. In a small startup, you may need a full stack skills because you are actually responsible for it all, while in enterprise it's a nice addition in case you need to adjust someone else's work. If you like enterprise (stable, but not that individualistic), then C# and Java are worthy. Startups? Full stack skills in hip tech is actually a value. Freelance? That's primarily ecommerce and WordPress, so PHP, WP and some frontend (JQuery rather than React).
you can do: if (!(GetUser(id) is User user)) return Json(new { error = "User not found"});
Then you don't get access to the user lower in the function. Based on the op I assumed that was a requirement.
JS/TypeScript with a grasp at one of the frameworks - Angular, React, etc. CSS SQL
That this keeps getting delayed is my biggest C# gripe. I'd have traded about a dozen C# 7 and 8 features in to get this in return.
That is C# 7.0 pattern matching https://docs.microsoft.com/en-us/dotnet/csharp/pattern-matching The value is in scope beyond the if statement and is initialized.
hurrah learning.
Ignore "efficient", you've basically got the right idea. The only thing you need to change though is the difference between what the UI does and what the model records. &amp;#x200B; In this case you have a business requirement which says "This language is irrelevant and should not be included ". The interesting thing here is, the full requirement is "... not be included *in the UI*". So we do two things. First we provide a mechanism to annotate a user's languages with a flag to say if it's relevant, and then on the UI we decide whether to include it based on the flag. This sounds exactly the same as adding a flag specifically to support the UI operation, but the flag may include additional information about related information. Here's a really basic example. It's not good code, it's just code. &amp;#x200B; public class User { public List&lt;UserLanguage&gt; Languages { get; } // ... } public class UserLanguage { public Language UsersLanguage { get; } public LanguageCategory Category { get; } } public enum LanguageCategory { None, Relevant, RelevantToKittens } public class Language { public string Name { get; } } This will look a bit like a relational database schema. You have a user with a list of user langauges, and each user language has a category (which includes your "relevance" information) and the actual language. Again, this is just example code to make a point. Category here could just be a bool which directly maps to whether it is visible in the UI as that's its specific intention. &amp;#x200B; So it's absolutely fine to include a butt load of extra information. Once you get to the UI side, you might have a UI related model that transforms the User into a UI user that only has the languages required, and no category at all, both options work.
Yeah, it's something I'd like too :) I think they're going slow specifically to ensure it doesn't bugger anything else up, and I'm ok with that :)
But Krypton has a LOT more controls, and it supports skins.
We're in the process of replacing our Azure API Management gateway with Ocelot.
Yeah, my issue with this approach is that I'll have to revamp my whole logic layer to include this new bool. At first sight I should add an interface to select what is relevant, add that info to all my models, including in database, add a service that will specifically select those relevant parts when asked to print user info.... I feel like the old saying: "weeks of work can replace hours of preparation".
Hi Jeffrey, &amp;#x200B; I'm gonna do a session for .net community here in Singapore on Thursday, and would love to know more why you guys decided to go this path? &amp;#x200B; PS: Will appreciate response bro :)
java is somewhat the same as c# as microsoft made c# after java afaik
Azure's API Management comes with a few problems. The repo for it isn't a full git repo so doesn't allow for pull requests. We had to make another repo with a pipeline to update the apim repo to get changes pushed through. The files, when you pull them, are many and spread out, and making changes requires manual copying that leads to mistakes. You're fairly limited with regard to what you can do, all based on policies MS had implemented. Ocelot gives us much more control over what we're doing, while simplifying the coding necessary to get it up and running.
Ha, it's ok, you get the hang of refactoring fast after a while. When you break it down you've got * A database schema change * A new entity attached to the User * A UI service to transform the newly shaped data. Depending on what your UI is built in, this could be a simple ViewModel or Controller change. So it's all doable :) The other adage we have, which isn't quite as catchy is "Don't pre-optimise". There's nothing wrong with planning ahead if you know what "ahead" looks like, but the more interesting thing is learning how to make your code more refactoring friendly. But I think you'll be fine here :)
No, but if you're doing pooling, just stop using new. &amp;#x200B; "Pro .NET Memory Management" is a long but good resource for this sort of thing (I'm not discouraging you from asking questions, it's just for information :) )
Removed: Rule 4. https://stackoverflow.com/questions/2952161/c-sharp-saving-a-datagridview-to-file-and-loading
 string input = Console.ReadLine(); while(decimal.TryParse(input, out decimal amount) == false) { Console.WriteLine("You didn't enter a number! Try again."); input = Console.ReadLine(); } //Use amount
So why not use Unity? Just wondering..
I'm part of the Handmade ideal. Regardless, even if I wasn't, I doubt using Unity would help me to learn about hardware accelerated graphics programming.
Isn't DirectX and pre-made engines sort of the opposite of the Handmade ideal?
No idea why so much down votes, what you said is actually valid
Premade engines are. But, there's no other way to interface with the GPU than with libraries, unless you want to write your own drivers, which seems counter productive to make games. OpenGL is a nightmare to use, and I don't think I should be learning Vulkan when I have no idea about graphics yet.
Don't know what your budget is, but some options I know of / have looked in to are IBM Symphony, Tibco has an offering (I forget the name), and GridGain (I'm only vaguely aware of this one).
Yeah totally get that. I’d move over to C in that case. Don’t want that nasty .net garbage collector causing stutter in your game 😏
I like the changes for V9, no more writing AJAX manually is great. It's the process of updating clients old code-bases that is awful and soul draining. Here's a good article about early/late. The performance gap isn't that big and early bound saves development time and standardizes code across the orginization. https://stackoverflow.com/questions/15038699/what-are-the-disadvantages-of-early-bound
Why are you smug towards things you don't understand? It's not about performance, it's about understanding how things work.
Just been using and loving C# since 2000. Wrappers for graphics haven’t gone well as you rightly point out. Not trying to discourage you. I love C# and graphics. Best of luck to you
The syntax `var user = GetUser(id) ?? throw new Exception("text");` was created to represent the following idea in a single expression: If the assignment fails, throw an exception. What would you be trying to represent with the other syntax? If the assignment fails... return a value? Seems like an arbitrary set of statements which don't make sense to include in a single expression. The fact that the JSON you're returning semantically is an exception doesn't matter for the language.
It looks like "If the assignment fails... escape a function/scope"
It comes off as rude and doesn't actually help anyone.
UI is made with VueJs so it "should" be easy... but there's quite a lot I don't master yet. The new entity isn't just attached to user, it's attached to every complex property of the user (say the language he spoke, but also maybe the kind of books he read, etc). I understand YAGNI, but in this case I should have think about it beforehand... I know how to end the week tho.
With more readable code it would be easier to help.
Maybe you should stop using third party libraries and learn Direct3D and C++ like an adult person?
I mean...it's what? ~25 lines for a C#102 level program? It's not that difficult to figure out what hes trying to do.
Escaping is different when throwing vs returning. They're semantically different and have different purposes.
Ocelot and Consul are super easy to install and work with. But it was also the way I learned to do it first. That's why I chose it.
Please cover authentication using Ocelot.
&gt; Also, it has a "multi-windows" control similar to the visual studio windows. *Krypton Navigator* I still use Krypton regularly. I'm really glad the open sourced it. I had a license at a previous job and using only the free toolkit after that felt a bit limited.
Lol, never be too hard on yourself. You'll think about it next time around, and also consider other issues you might not have done this time. It's how we grow. PTIA for now, but you'll be fine :) Instead of adding it to all the objects you could create a new object which inverts the relations. So it could be a repository of all the language related data. You'd have a bag of books + languages, a bag of spoken languages and just associate that with the user. No idea if that will work for you, but worth thinking about I guess :)
That hasn't been an issue for a long time. Many ways of dealing with it now.
[MaterialSkin](https://github.com/IgnaceMaes/MaterialSkin) Theming .NET WinForms, C# or VB.Net, to Google's Material Design Principles.
yikes while(!decimal.TryParse(input, out amount)) FTFY
A: Install wireshark to watch the packets go by if you haven't already. It can be intimidating at first as a tool , but it's really useful even for basic troubleshooting. B: Is your server also available via the internal network? some network devices get confused when they have two differing connections to each other through different networks, especially if you are using the same router to give them both access to the outside world. Try connecting your development environment via a phone tether, your router's guest network, or something to see if this is part of it. C: does ping work properly? using System.Net.NetworkInformation; &lt;snip&gt; try { // Verify that the server host machine is available using Ping. using (var ping = new Ping()) { // Ping the server with 2000 msec timeout. PingReply reply = ping.Send(hostName, 2000); if (reply?.Status != IPStatus.Success) { string messageBoxText = $"The Server host machine: {hostName}" + Environment.NewLine + "is not online or is currently unavailable!" + Environment.NewLine + Environment.NewLine + "Pinging the host returned: " + reply?.Status; MessageBox.Show(messageBoxText, "Server Offline", MessageBoxButton.OK, MessageBoxImage.Error); return; } } } catch (Exception ex) { string messageBoxText = $"Failure sending PING to the Server: {hostName}" + Environment.NewLine + FormattedExceptionMessage(ex); Console.WriteLine(messageBoxText); MessageBox.Show(messageBoxText, "Server Ping Error", MessageBoxButton.OK, MessageBoxImage.Error); return; } &lt;/snip&gt;
Having to circle back and make changes to your core data structures is never fun, but suffering will likely abound until you rip that bandaid.
Well he's a beginner and I didn't know if he knows about the not.
Just off the top of my head... Using a schema: * Never have to worry about table name clashes * Never have to worry about accidentally writing queries that should be joining against your normal application tables that someone accidentally joins to hangfire tables instead Using the default schema: * Your application user doesn't need database access to create schemas.
I really wouldn't be teaching anyone to write stuff like "== false" for boolean checking, it's a horrible programming practice.
It's not horrible.
Using JSON.NET for the implementations seems overkill to me.
I don't get that inversion you mentionned, could you be more specific ?
Horrible how? It's functionally equivalent. Would I recommend it? No, it's a lot simpler to just use !condition. But it's not a "yikes", especially considering he's a new programmer.
[HttpGet] public async Task&lt;IActionResult&gt; DoSomething(Guid id) { return GetUser(id) ?? Json(new { error = "User not found"}); }
I had to implement it in a project because of a memory leak in an external library. We were displaying an image viewer/annotator multiple times throughout the lifetime of our mobile application. The initial design had us creating and destroying the viewer every time we needed it. We realized that after a dozen or so of these loads we would run out of memory and crash. We discussed it with the vendor who found and (I believe) fixed the problem for a later release, but we were still stuck with our previous version. So I implemented a simple pool that would provide an instance of the resource (in this case the viewer) if it had one available otherwise it would create a new instance, add it to the pool and mark it as taken. Whenever we would have previously just removed the viewer, we instead reset the values in it and added it back to the pool.
Do Azure Functions randomly die like AWS Lambdas can due to service patching? Or does Microsoft handle this stuff more intelligently, such as marking to-be-patched machines to tombstones and waiting for all active Azure Functions on the underlying fabric to be tombstoned before patching?
power tools company, backend developer
That's a terrible idea. Is your company paying for their GitHub per line?
Thank you, this ended up working!
Yes. You wont notice patching in the underlying infrastructure. However, the above approach of loading the webassembly and startup the webapi everytime a request comes along is expensive and breaks the expected executiontime of functions. A too long running function may get killed before it has returned a value
That was for providing serialization.
Ah, I see I might've gotten my terms mixed, yeah all our code is definitely early-bound (as referenced in my other comment). I'm a big fan of the new WebApi, that abstracts away all that I shouldn't have to worry about. As for migration, that can never be a fault of the modern framework, migration will always be soul crushing if it can't be automated.
Thanks!
I think the first challenge I would give to someone at your level to get them thinking about design considerations in approachable way is to separate the building of your data you read in from the user from the part where you print out the output to the user. Basically you’d have a readInout() function that would build something like a List&lt;PercentCut&gt; or an IEnumerable&lt;PercentCut&gt;, and then a function that would take in that list and print out your user output. You can add a method on PercentCut or whatever that prints out the data for the individual percent cut and call that for every element, and then maybe have a few lines at the end for overall summary information. Ideally those would take in the same IEnumerable&lt;PercentCut&gt; as well and be split out from the printing logic. There’s obviously more places to go, but I like this approach because it’s easy to understand the goal without knowing about databinding or wpf or entities or MVVM or what have you, and it makes you think about the right kinda of things.
A quick google search turned this up. [https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.localaccounts/get-localgroupmember?view=powershell-5.1#examples](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.localaccounts/get-localgroupmember?view=powershell-5.1#examples) &amp;#x200B; I'm not sure what this has to do with C# though.
The sample problem shown looks trivial. You can do it by just looking at it. Is this homework? Is there a larger data set? What properties of the lists can count on? Except for december\_\_9th, all of the lists ascend. What does it mean to compare them? When are they equal? Are {1, 2, 3, 4 } and {4, 2, 3, 1} duplicate?
No, but you can hide `new` behind internal/private constructors and Factories to make your preferred path the "easy way". Modify the Factory to "allocate" from a pool and have a secondary method to return an object to the pool (with the assumption that the calling code does not hold a reference of its own. Or do some really dumb shit like [object resurrection](https://blogs.msdn.microsoft.com/abhinaba/2009/04/13/object-resurrection-using-gc-reregisterforfinalize/) to return the unused object back to the pool (it does require GC but reduces allocation/deallocation).
I know that unity has c# as a supported language, but I don't know how it runs. I mean what .net run time does it use. Did they roll their own? Is it the same across the different platforms unity runs on? The solution is to use pooling but it sounds like you are already.
Mono?
Hardly a horrible programming practice... just a style preference.
Removed: Rule 3.
Did anyone read the body of his question? He is using libraries so without manually forking them he can't just add pooling/private constructors etc.
Thanks for the reply, and thanks for the massive help. &amp;#x200B; I tried pinging with the command prompt and your code, no response only timeout. I installed wireshark without no incoming data from my client pc ip &amp;#x200B; &amp;#x200B; (So i did some stupid troubleshooting with the help of minecraft) So as i usually start minecraft server with friends very regularly on my pc, im familiar with the whole port forwarding and opening ports in the firewall, and somehow i couldn't connect to my server with the external ip. So i think it's something with my router, have to reset it. &amp;#x200B; I'll see if reseting the router helps the situation.
The answer is complicated. They have partial .NET support for client code, usually a few versions old and with some limitations But they also use custom c# compilers internally so they write parts of their code without using .NET. They do this to avoid GC problems and improve performance
That’s cheating cheating a bit since it relies heavily on server code.
I'm going to disagree with you! (but not really) Only because ReSharper costs money. I would recommend [Roslynator](https://marketplace.visualstudio.com/items?itemName=josefpihrt.Roslynator) to start - It's like a light ReSharper but still very useful on getting tidier code.
.net is pretty simple my guy. When I was writing it you literally just drag and drop the elements and then code the bindings behind them. EZ PZ
Yes: https://github.com/tonerdo/pose
I think powershell was written in C#.
Yes. I'm very interested!
Imo it will look better if your website is part of your portfolio. Python and Django if you want to expand your languages as, in the words of Stroustrup himself, all programmers need to know more than one language these days. Otherwise learning more about C# by using ASP.NET or .NET to build it would be fine, there are lots of tutorials and learning resources available online with regards to this.
&gt; but I have no idea how to make new 'user created' objects different var names to distinguish them when I move to print them looking at this in isolation either an array, a list(lists are just arrays that can change size on a whim as far as you need to know in this case) or a [dictionary](https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2?view=netframework-4.8) is what you want anyways I'm just gonna look through the code you provided point some stuff out and leave basically every other comment to deal with the rest &gt;Console.WriteLine(" "); you can do either Console.WriteLine(""); with no space in the string to save you that one button press or instead you can put a \n to put a new line instead(Edit: also I coincidentally choose an example where you wanted a tabs worth of space between some bits of text so just letting you know \t also exists for you to do that with and that the other things like those are called escape sequences) for example Console.WriteLine(" "); Console.WriteLine("Category :" + nameNum + " Name : " + Cut.Name); can become Console.WriteLine("\nCategory :" + nameNum + "\tName : " + Cut.Name); &gt;public static void FinalCalc(PercentSplit Cut, decimal budget, int nameNum){...} I don't know why you choose to make it needed to provide a nameNum separately from a PrecentSplit object even though you're already storing the nameNum in said PercentSplit object and are just taking the attribute of that object and passing it into the function anyways so I'm just gonna recommend you not have it required that you pass in both an Object and one of it's parameters into a function
I get the impression those who get hung up on shit like that are probably loathed by everyone they work with.
Default setting uses the hangfire schema, just keeps a good layer of separation. It doesn't even need to be the same database if you wanted to keep it completely separate, though I'm sure there are some catches to doing that. I would just stick to using the default setting unless you know you need to do otherwise.
&gt;No, it's a lot simpler to just use !condition. Honestly. Since the rise of Intellisense, I actually find it simpler to not use the not. Since I'm typing fast and autocompleting my fingers get ahead of my brain. Once I'm at the end of a method like TryParse my cursor is at the end. If I didn't put the ! first then I'd have to go backward to add it. So it's actually faster to just continue forward and put == false, or put nothing if you want the true condition.
If you want just the most basic of website then I would recommend Weebly. They have really simple drag and drop elements and a bunch of default layouts to choose from. They have a code snippet block that you can past code into and have embedded video/gifs to show functionality.
It's bit gambling what you want to do. Having template based portfolio web page might indicate on huge lack of skills as well as laziness for some companies, while others will find it normal. Is you don't want to get into front end stuff I would suggest just to use repositories, tho some might disagree.
https://bunifuframework.com That’s all you need.. I have tried them all and Bunifu is absolutely beautiful for the price. DevExpress is nice also, but way too much for what you need.
 //note to self, learn what refactoring is
Isn't *async* viral (you'll have to continue to make the whole program async for proper functionality)? &amp;#x200B; Could've sworn I read that somewhere.
Some remarks: - The reflection could be cached instead of running every new instance. My guess is that with immutable types you'll be newing objects much more often than normal (basically every time you change a property). - It does not check for nested subclasses of ImmutableClass. This can perhaps be done using IsAssignableFrom. - Not sure what the name parameter in the Setter method is used for, but could perhaps use the CallerMemberName attribute. - Immutable objects do not eliminate all multi threading issues, that is an over simplification. It mainly reduces the surface where problems can occur and makes mistakes more visible I think (which can be very beneficial of course). It would be nice to also point that out when mentioning the multi threading benefits. The listings were all at the bottom on mobile, so might have missed something. Also the Create method listing only showed a parameterless method. I was thinking of creating a small immutable framework myself some time this year, but I think the main difficulty is dealing with nested objects. For example A.B.C = newValue should create a new version of A and B, since the old A still points to the old B. I would like something that makes working with those nested immutable objects easier and less verbose. But didn't really spend time on it yet.
This is my 5th company in 20 years. Most have been COLA or above. It was COLA the last 2-3 years...and nothing screams why I didn’t get more.
Web forms?
(yeah)
Yikes
&gt; though I'm sure there are some catches to doing that I ran it like that for quite a while. Hangfire doesn't care. Works equally as well.
A similar question... Not even counting front-ends, I want to showcase my coding ability. What kind of classes or console programs would you recommend to do this? Are there any coding challenges that you guys know of that I can do? If be eager to do them to actually make a portfolio it code in the first place. I'm also a self-taught C# coder.
Why? Intellisense makes it much easier.
You need to propagate it to wherever you're trying to run it from that wants to do nothing else but wait for the task to complete. There is nothing stopping you from just calling a method that returns a Task (an async method), storing the Task, then checking on it periodically to see if it's done (and get the result). If you plan on doing nothing but wait for the result, you can make that method async and then await the result. This might end up propagating all the way down, if your application is nothing but IO operations or what have you.
I was thinking more in terms of operations since you'll have to be managing multiple databases, but yeah I'm sure hangfire doesn't care at all.
Legal discovery software
 GitHub - github/personal-website: Code that'll help you kickstart a personal using your github profile and repos
yeh there's a reason I use something else now.
Since you learned C# and if you want to expand your technical stack into the .NET world. you can explore [ASP.NET](https://ASP.NET) web framework with MVC and C#. to start with when you create a new Web project with [ASP.NET](https://ASP.NET) MVC in visual studio, you will have a live running sample website with sample code structure. you can play with around, and that would be a good start. Just my thought as being a .NET developer.
It's functionally equivalent and actually much easier to read. The ! character gets easily missed when reading code quickly. Now I would not push for the opposite (== true) because that is much more redundant. It ultimately comes down to style.
&gt; I read that for self-taught developers having a solid portfolio is of vital importance. I think you may have been oversold on this a bit. In my own personal experience, I didn't have a portfolio at the beginning of my career, and my current portfolio is nothing to write home about. It hasn't had a noticeable effect on my 13-year career as a self-taught programmer. Now that I'm interviewing candidates, I don't care if their portfolio is a link to GitHub or a fancy website. If you're aiming for a full-time position at a company, do anything that suits your fancy. If you're going for contracting gigs, a portfolio may give you an edge over the competition. All that said, I recommend treating your portfolio as another learning opportunity. Learn how to develop the kind of portfolio you want to have, and do it. This is more important for self-teaching; never stop learning.
can i get your sources please, something is wrong
If you think the WPF Designer is even remotely comparable in performance or functionality to the Windows Forms Designer you are deluded.
What do you mean by sources?? I'm sorry I'm kind of new here
Paper
Wix?
just zip your project folder and send it over
Visual Studio Blend
He uses task manager, but its not as easy to view task manager while doing activities than to have a icon right there on the foreground to look at. If the icon is solid red he does take a look at the task manager...
For my part I've had lots of fun just doing a _very_ static website with only html/css and 10 lines of js and just optimising everything about its distribution. On a cold DNS cache the time to first byte is between 20 to 50ms, the entire page loads in under 20 Ethernet frames. The entire DOM is rendered in under half a second generally (on my machine). My previous online resume was even lighter than that at about under 2 frames, but really _who's counting network frames_ instead of saying "around 3Ko" ? No one will ever be aware of it, but it just made me feel good.
I'm sorry I'm going to jump into a rant here, but I guess it's relevant. Would you make the choice not to use namespaces in your C# code? Every place I've worked and every code base I've come use namespaces, so its fairly reasonable to say that most programmers would not go out of their way to circumvent using namespaces. From my point of view, schemas are no different than namespaces, but, for whatever reason, are shy'd away from and I've rarely seen them used in databases. It's not even like it's an obscure feature, it's an ANSI standard feature that exists in nearly every major database. Yet tables are constantly created in `dbo` and there are just hundreds of them there, just hanging out with no organization. The only reason for not wanting to use them is not wanting to type out the schema to qualify the table name. Programmers are lazy, I get it, but for whatever reason, the DB being an unorganized mess is okay. In short, YES use a schema for Hangfire, so that when you're working with your database you know that `job` isn't really your table, and that you shouldn't be adding columns to it, or refactoring it, or renaming it or what have you. Okay, be lazy with your tables, but these aren't yours, they're hangfire's tables, and a schema will make someone think twice before using them.
Out of curiosity, which hosting service are you using?
First I was using nginx on a VPS (OVH), but that was painfully slow when I was VPNing to test around the world. After some iterations (from 2012 to 2018 my last version) the setup I have has become really simple : GitHub pages with an aggressive caching through Cloudflare, GitHub pages by itself is pretty slow, but Cloudflare really mitigates that, and obviously caching static content (basically just one text file) can get pretty aggressive.
Your github rep is the best (free) portfolio that you can have. Also, as already said here, the portfolio is good to have, but not mandatory.
I disagree that you need a portfolio site. That sounds like a theoretical idea that might seem reasonable enough but isn't the result of any practical experience. The people that impress me the most are the ones who can show me code they've written, can talk about the engineering decisions and trade-offs they've made, and show that they know how to unit test it. A website doesn't really set you apart. If you still want to build a portfolio site anyway you're looking for a static site generator. [Hugo](https://gohugo.io/) is lightning fast, flexible, and simple enough that I'm comfortable pointing a fresh developer at it. [Netlify](https://www.netlify.com/) is an awesome host for static sites that can also serve as a continuous integration pipeline hooked directly up to your repository. Jekyll and Gatsby are two of the other big static site generators but configuring Ruby on your Windows machine won't be worth it and Gatsby will require you know a bit more about React. Hugo is a single executable.
perhaps aspect oriented programming tooling (e.g. PostSharp) that can rewrite your IL after build. Probably won't be simple, though.
&gt; I am not the best programmer so most of the code I write I have to look up, find examples or docs, test with my own cases, write my own comments and then implement which takes hella time. This is normal. I've been doing this for nearly 16 years and that is still how I go about unfamiliar things. Even for things I've done 2 or 3 times before, I usually have to write at least 2 prototypes before I hit on a design I really like. Then when I use that piece somewhere else I figure out I didn't know all of the requirements. I often consider asking for design advice on StackOverflow, then I remember that site only exists to close topics and jeer at the people who dared ask something subjective. Anyway, so as not to be a total no-help answer, here's a crazy one I use when the process is complex. Write your use cases in a tool like Twine. When you have a choose your own adventure page that demonstrates all of your functionality, you have a neat little roadmap to how you might progress. For example: You start at the register, with no open transaction. Your only choice might be to start a transaction. When you do that, now you're in a state where your choices are "scan item" and "finish", and you have an open transaction. If you "scan item", an item gets added to the list. If you choose "finish", you move to a new state. Now you can't scan items anymore, but a total is displayed. You can enter an amount of money that was taken, then you are told to give some change. Choose "finish" from there and the transaction is saved, then the app returns to the starting state. That's not every possible feature, but it's a very good start. Build that structure in Twine, then make sure the app you implement can go through the same steps. When that works, you can think of adding features like voiding transactions, voiding line items, etc. Add them to the story. Then make the program work like the story. It's sort of like 3 different UML diagrams crammed into one tool.
I would google some standard C# questions interview questions and study up on things about how the CLR works with regards to how it deals reference and value types, what common interfaces you would use (IDisposable, IEnumerable vs IQueryable). Learn your SOLID principles and be able to Rattle them off and why they are important. I used to scoff at some questions when I was younger as I thought it was too "low level", . TBH I couldn't have been more wrong, I learned a lot about the CLR, what interfaces to use etc and it has improved my code overall as I know more about the framework and the language.
&gt;To write less code Perhaps write your own action result that returns OkOrNotFound&lt;T&gt;()? public async Task&lt;IActionResult&gt; DoSomething(Guid id) =&gt; await OkOrNotFound(GetUser(id)); This way you need only implement the condition once.
There you have it --&gt; [https://anonfile.com/52S98er9ne/testcostura\_rar](https://anonfile.com/52S98er9ne/testcostura_rar)
There you have it --&gt; [https://anonfile.com/52S98er9ne/testcostura\_rar](https://anonfile.com/52S98er9ne/testcostura_rar)
I'm becoming a bigger and bigger fan of Hugo, and static site generators in general. Although I've never used it, I now see that there exists a static site generator written in .Net! [https://github.com/Wyamio/Wyam](https://github.com/Wyamio/Wyam)
&gt;Are there any coding challenges that you guys know of that I can do? Hang out at [TopCoder.com](https://TopCoder.com) and wait for one you like to come by... you may even win some prize money!
If you want to keep learning, I'd use Wyam and hook it up with Appveyor to publish to github pages. Lots of small techniques to be learned there. Up to you to come up with the HTML and CSS though... https://wyam.io/docs/deployment/appveyor
Hope that helps you out. If you need someone to ..uh.. test your Minecraft server connection... Let me know :)
Your usage of while &amp; do/while don’t seem necessary. ReadLine() will wait for input so I’m not sure what you’re accomplishing with those loops. Also I subscribe to the code style that all properties, methods, &amp; classed should be Pascal Case while local variables &amp; arguments should be Camel Case, but that may just be preference.
Wouldn't hurt to check out [What Great .NET Developers Ought To Know (More .NET Interview Questions)](https://www.hanselman.com/blog/WhatGreatNETDevelopersOughtToKnowMoreNETInterviewQuestions.aspx) it's old list but some basic questions are still valid today.
Hey, thank you for your detail response! I really appreciate it!
Yeah, unity scripts at least run on an older, slightly modified mono runtime.
So I've taken some time to play around with committing, branching, merges and rebasing to get a feel for the command. So you are correct, the hash stays the same because it is the same commit. Which I think is useful because no mater what branch you are you know the same commit will result in the same built code (unless you have differences in how branches build). Also since you can rebase and squash commits, the number of commits from the last tag may change. Also you can delete tags and make new tags. E.g. if the current commit's describe is '0.0.1-6-g8b54ee7' but you tag that same commit as '0.0.2' now the command will return '0.0.2' (zero commits away from the last tag). However `git describe` I think would work well (especially as out of the box) with getting a unique build version for a pre-release build, see [semver.org](https://semver.org) spec #9: [https://semver.org/#spec-item-9](https://semver.org/#spec-item-9) which states that you can use dashes and aplhanumeric characters after the version number.
I'm not favorably inclined to any solution to immutability that turns a compile-time error into a run-time error, personally.
Ignite, Akka, and Orleans all look fantastic. I've had a look over the docs and samples of all three, and I think I'll give Orleans a go for now. I cloned the repo from GitHub and built the v2.3 Hello World sample, which includes the silo, grain interfaces, HelloGrain, and client. It works, and that's great. Tell me, in the `HostBuilder` there is the line `.ConfigureApplicationParts(parts =&gt; parts.AddApplicationPart(typeof(HelloGrain).Assembly).WithReferences())`, which implies that the builder loads the `HelloGrain` assembly (`Grains`). The docs say that if you omit this line, Orleans will scan the working directory for manifests. How would I go about getting Orleans to execute _arbitrary_ code. I want to set up a silo on a machine and connect to it with a bunch of our physical machines, but I have no idea in advance what sorts of distributed algorithms we will want to run. Can I give it an abstract class (or interface) like ``` public abstract class Dictionary&lt;string, (object Value, Type Type)&gt; Process(Dictionary&lt;string, (object Value, Type Type)&gt; parameters); ``` and then any time I want to process _arbitrary code_, I can inherit (or implement) this? We do a lot of R&amp;D/prototyping/exploratory analysis, so a convenient way to just write some code in a slightly different way than how already do, and have it run on multiple machines is my primary goal.
To combat that completely you could easily byte-load the images.
Consider yourself good if you can answer and explain 10% of those questions.
'new' is implemented by the runtime/clr host. For you to implement hooking in that manner, you'd have to hook the clr running the code. Here are the interfaces exposed by the clr to let its host control its behavior. If what you're looking for exists, it's here: https://docs.microsoft.com/en-us/dotnet/framework/unmanaged-api/hosting/clr-hosting-interfaces
I'm personally using Azure DevOps, Jekyll, and Azure Blob Storage + Azure CDN to host my personal blog. I don't get much traffic, so it's very cheap, but I can use it to host both a site and content, and can also use it to demonstrate accrued knowledge. I'm certainly not the most skilled blogger or developer, but I like to think I contribute value to the community via the platform I lease and operate. I don't generally share posts publicly, but if you're interested in reading, I'm happy to send a link over DM.
If you were a C# class, which one would you be and why?
Legacy software = anything in production &amp;#x200B; I feel for you. The fear is real. Unit testing this kind of code is hard. My thought is to try to write unit tests for this code so you can change it without as much fear. This book is pretty good Working Effectively with Legacy Code by Michael Feathers
Simple locking never is. Work Queues are great. Actors are solid. Software transactional memory is suprisingly good. Ive seen all 3 of these scale to 100 cores very well. Timers makes it sound like a promise/future async workflow would probably be nice. Ive seen those replace a lot of boilerplate code from timer or callback systems.
Check out testdome, it has some c#/.NET interview questions. They'll possibly want to see that you know about threading, file I/O (including XMLreaders), Inheritance, maybe some simple algorithms. A big thing I've seen often is implementing a dispose method. Alot of objects in .NET implement IDisposable, and it's a thing you should know how to do, it's not difficult and you can find solutions for how to do it pretty easily.
"Debug info" ;)
Threading isn't really that hard in c#. Especially with async methods now and Tasks. At my last job I designed a batch que that ran blueprint drawing compilations on 1 of 6 servers using nothing but Threads, Thread.Sleep, and a concurrent dictionary. It processed hundreds of updated blueprints everyday, ran like a clock.
Ah, wall hacks and esp are out there for anybody that cares, probably easier to just hook the draw calls if that's somevody's goal :) So yeah, could be used to cheat, but so can anything worth knowing how to do.
FB recruiter told me to do 150 questions on LeetCode and read "Cracking the Coding Interview". Ought not to be a bad start.
Anytime I'm dealing with legacy code we want to change, I always take a soft launch approach. I.e I leave current functionality alone and I build a refactored copy elsewhere in the code base. One piece at a time . I design it so we can switch tch to it at the flip of a link or some kind of config setting. We release but the old code still runs untouched. Now we can qa the new version and beat the hell out if it before flipping the switch. My tactic are s to never replace legacy code with new code without doing a soft launch into it. Soft launches are always better.
https://youtu.be/Pvoyvw2dmpU Speaking of hooking the draw calls, there's an example of what I'm going for. It's a bit cumbersome to be doing it all within an injected DLL though, so I'm trying to do it entirely within my own process. More than enough for somebody to cheat however they'd like with, but that's not really what I find fun.
If the work being done can be separated from the timer/thread logic, you can change the architecture however you like. The latter is just *when* the work being done occurs, instead of *what*. Write your classes as self-contained units of work that are atomic and independent. This makes reasoning about the work being done completely separate from reasoning about when they get done. Write unit tests and feature tests for your units of work. This will validate any changes you make to the architecture about how/when the work gets done. Even if you decide not to make any architectural changes, it will make reasoning about the work much easier and give you confidence about its correctness. If you can do that, you can try all sorts of different strategies for speeding up the processing of work. Try a simple Parallel.For loop of Tasks. Break the work into sub-tasks and dedicated a long-running Task/thread to each sub-task and arrange them into a data pipeline, much like a manufacturing line (write your own or use [Dataflow library](https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/dataflow-task-parallel-library)). Use [HangFire](https://www.hangfire.io/) for fire-and-forget background processing.
Just a note: Reddit isn't allowing your link to be approved/viewed. I would suggest using a more reputable storage site or, ideally to avoid an untrusted download, publish your source code to GitHub.
I wish more folks did the soft launch approach. I like to keep duplicate functions / systems around and be able to switch between them. The OP could leave their current code, and run their new code side by side, either processing real inputs or taking the inputs their current code does, and spit out the output from both and compare them.
Tyvm I will do that.
I will check it out. Ty for the info.
Is that really a legit question?
(infinite) \`async\` loops to the rescue, instead of timers: [https://blogs.msdn.microsoft.com/benwilli/2016/06/30/asynchronous-infinite-loops-instead-of-timers/](https://blogs.msdn.microsoft.com/benwilli/2016/06/30/asynchronous-infinite-loops-instead-of-timers/) Also mentioned here: [https://stackoverflow.com/questions/4890915/is-there-a-task-based-replacement-for-system-threading-timer](https://stackoverflow.com/questions/4890915/is-there-a-task-based-replacement-for-system-threading-timer) Added benefits: graceful stop of the loop with \`CancellationToken\` and in general more control, composition with other tasks possible
Interesting. I'll have to read up on these. Thanks for sharing! Question: is it really an infinite loop if we can test a condition? Not trying to be a dick or anything like that, but it seems like we're just promoting a recursive condition from the stack to shared memory. Not related to my original question, but I like thinking about things like this.
Yeah, +1 here. We don't ever use dbo in my team, group your tables by functionality!
My intention was to give OP a hint where to move from here. Refactoring code from mobile is not ideal.
If it’s not your game and you have no source, you have no business developing such a tool. The information you are trying to make visible isn’t even debug information, it’s hidden information, made hidden for a reason. If you want to cheat, hit up MPGH, otherwise, please don’t inspire other cheaters to do the same.
If it’s not your game and you have no source, you have no business developing such a tool. The information you are trying to make visible isn’t even debug information, it’s hidden information, made hidden for a reason. If you want to cheat, hit up MPGH, otherwise, please don’t inspire other cheaters to do the same. There is also absolutely no reason at all for someone to EVER access a games memory, if the information you’re looking for is not programmed to be visible in game, it’s cheating, point blank.
I would like to see an WinForms app using acrylic please.
https://documentation.devexpress.com/WindowsForms/120214/Controls-and-Libraries/Forms-and-User-Controls/Fluent-Design-Form By DevExpress. Quite a widely known company.
I assume it is because there might be non-generic type B. Even if now it is clear what type B you mean you might add new class B {} in the future and the compiler would fail. (That class might exist in another assembly/same namespace already - so it fails)
There is nothing wrong with listing your github on your resume. Don’t feature your personal projects to much on your resume. They are not that important. If someone is interested in your codingstyle they can see it on github. If you want more to do: get involved in open source projects. Do whatever small work they have. Show passion and do it for a longer. That’s a good signal for a technical recruiter.
&gt; Did anyone read the body of his question? I did, and it *isn’t* clear to me at all whether the question is “can I do it for my own classes?”, “could/should a library like Unity do it for some of theirs?”, or “I have an actual non-hypothetical perf problem and believe changing a class to use pooling would help”. In the latter case, if it isn’t OP’s lib, they should probably also file a bug?
Pretty, but doesn’t WPF have this functionality built in?
&gt; To write less code &gt; &gt; In this case we’d still have great readability Debatable. Having a return *inline* after an assignment sounds like a quick path to unreadable code. It also probably quickly creates weird control flow problems. &gt; we’re already doing something “”similar”” with Exceptions (stopping flow) Yes, but Exceptions have always been designed that way: if something fails and throws, abort right that spot. Return has never been treated as an expression. I haven’t seen that in any popular language, though I’m sure some research language exists that does it. &gt; We should try to write as minimal amount of boilerplate code as possible There’s already a pattern for this, and C# 7 improves upon it: if (!TryGetUser(…, out var user)) return NotFound(…); (I also find it ironic that you want to avoid boilerplate but are reinventing HTTP status codes in proprietary JSON.) &gt; isn’t throwing an Exception slower? Yes. But if clients are frequently requesting users that do not exist, the performance of exceptions shouldn’t be your biggest concern. &gt; c) “bad” data from user isn’t exceptional case, at least in most cases. I would hope it is.
Yup. Make it `TryGetUser(out var user)`.
I would suggest to find out what company does and where would you fit. Based on that look into best practices in those areas. In general read any SOLID, about mv-* (particularly mvvm and MVC), databases and repositories(not really job specific but might give you a bonus).
people have been genetically modifying food for thousands of years... i'd say its worked pretty good. Where it gets questionable is when you start splicing dna from a poisonous frog into a potatoe (totally made that up but you get the point)... &amp;#x200B; I personally would prefer that the food i ingest didnt have it.... more because I don't know a ton about it and I feel like i have a balanced diet. No point in needlessly opening doors. However, in cases where Monsanto and Dow are trying to create super grains/ starches to solve vitamin deficiencies in 3rd world countries I am all for it... gotta weigh the costs and benefits in all circumstances. &amp;#x200B; The big one I am concerned about is chemical applications. I noticed uncommon rates of allergies among my coworkers and myself after 2 yrs on the job... wasn't entirely sure it was coincidence
If threading is so easy why does everyone fuck it up? The answer, threads are the devil...
LOL, I hope not.
Damn, code snippets came out super ugly when posting from mobile. I can only get to fixing that this afternoon when I'm on my desktop at home. Sorry about that.
You could try a [property injector](https://autofaccn.readthedocs.io/en/latest/register/prop-method-injection.html), maybe. Not really a huge fan of that either, but it is potentially an option.
It is the best actually. Send me an email at [ghstguru@gmail.com](mailto:ghstguru@gmail.com) ill do it
Concurrent programming is like quantum mechanics. If some says it’s easy; they don’t understand it properly.
If it’s a single threaded event based loop architecture. Then timers are perfectly fine ways to go about it (since the timeout is just another event.) But without loads more details it’s hard to weigh up the pro’s and cons.
What do you expect `TParameter` or `TResponse` of `B` if you don't specify them? In other words, how do you expect the compiler to figure that out? It could literally be any type (satisfying the constraints).
Ah, what the hell, I'll give this a minute's worth of response. Point the first - If they sell it to me to run on my computer, it's my game. If my machine is turning 1s and 0s back and forth over and over, I'm just gonna ignore your warnings that I don't have the right to look at them. The second of the pointings - I really, really don't care about cheating. I'm playing offline. I'll thank you to keep your nose out of the pants-optional shenanigans that I get up to while in my bedroom, thank you very much sir. Third shall be the count of this point - Head to the Dark Souls subreddit - https://www.reddit.com/r/darksouls/ - Look on the sidebar. There's a tool called DSCM. Before the Remaster, this tool was all that kept the multiplayer community alive due to Fromsoft's shoddy netcode. I wrote that tool while engaging in the forbidden arts. "There is absolutely no reason at all for someone to EVER access a game's memory". Alrighty. ...Let's make that the fourth and final point. A game can be a brilliant piece of engineering. All the interacting pieces, code being crafted, memory being massaged, algorithms and functions and code, oh my. Screw the game for the game. If you can't see the appeal of opening up a game and seeing what makes its juicy parts tick, purely for the enrichment of your own mind, then we really have no reason to continue communicating. Have a good one.
Thanks, I will take a look! I'm currently reading DI in .Net by Mark Seeman and just came accross property injection, but I wasn't quite able to fully grasp it, maybe this was due to missing use cases so far, but if this might be one, that'd be great.
The do/while loop is actually there for good reason. It validates user input
You can register object instances as services with Autofac. Like `builder.RegisterInstance(yourStaticDependency).As&lt;..&gt;`. Then you can resolve it as usual.
I think so? To be honest, I had a hard time reading the code as formatted, but it sounded like it could be a solve. Property injection is _usually_ not what you want to reach for, but it is one way to solve a few issues. Like [circular dependencies](https://autofaccn.readthedocs.io/en/latest/advanced/circular-dependencies.html#property-property-dependencies). Probably best to restructure your code to _not_ have a circular dependency, but sometimes you just don't have control over it.
Try this...[C# array examples](http://csharp.net-informations.com/collection/csharp-array.htm)
Ah, what the hell, I’ll give this a minutes worth of response too. &gt; If they sell it to me... You ever hear of a TOA or EULA? They forbid reverse engineering, malicious acts, 3rd party tooling, and of course, cheating. You didn’t buy “the game” or “the software”, you bought a “license”, you bought the privilege to use said product. &gt; I really don’t care about cheating... Of course you don’t, hence why you’re here asking us to write your hack tool. &gt; I’m playing offline... Cheating is cheating. &gt; Keep your nose out of... You posted on Reddit, it’s everyone’s business now. Don’t want to be regarded as a cheater or script kiddy? Join HackForums or MPGH, this sub has no place for malicious content. The only business you don’t have is trying to access another processes memory space. &gt; I wrote that tool... So why are you here? If you’re so 1337 and a haxor, why are you asking for our help? You should be able to figure this out yourself instead of kiddy scripting. &gt; Memory being messaged... That isn’t a thing, at least in game development. &gt; Algorithms and functions... You can’t see those when accessing memory, you see those with source code access or decompiling assemblies. You act like you know what you’re talking about which you don’t. Let’s just throw in words that are basic yet sound intelligent to try and strengthen a shitty argument. &gt; Functions... Outside of games, every piece of software contains methods and functions. It’s nothing new or exciting. You also said “code” two times, derp. &gt; If you can’t see the appeal of opening up a game... I make video games, I think I’ve seen enough of what’s inside them. This isn’t opening a game, decompiling is opening a game.
Why can't you register a provider for your static dependency? If you were using the .net core DI framework, you'd do something like this: `serviceCollection.AddSingleton&lt;StaticDependencyType&gt;(StaticDependencyProvider.StaticDependency)` That way you maintain encapsulation and separation of concerns. Another question, why does `ServiceB` subclass a base class instead of an interface like `ServiceA`?
Reading these make me feel like I know jack shit.
Actually I could do that I suppose, good idea. The subclass is there because *ServiceBBase* is coming from the framework I use. It is basically a microservice framework, and services which should be deployed as a microservice are required to be implemented like that - Don't want to go too much in depth though as the problem I'm facing is probably not really related to the framework itself.
Well, my efforts to make this work the last few hours I worked on this were actually targeted at getting just that to work. I can technically create that dependency outside of the class and pass it in another ctor overload, but I couldn't quite get this to work so far - I might have to create an issue on the frameworks git board, but in the meantime I was just curious if I missed any easy way around this without extracting that dependency.
Heh. Eula. You're cute. I'm not asking anybody to write a hacktool, I'm curious in learning and assumed there might be somebody here to learn from. I still hold out hope. Knowledge is power. ...you honestly don't think memory is manipuled while a game runs? Do the magical fairies just draw the pictures on the screen quickly? If you don't know how to see the code while a game is running then just ask. You'd probably find it interesting. But if you do this for a living, you should really, really, start debugging your code. You really can't understand how this teaches about games? I'm actually shocked. How could it not? I've learned assembly from tinkering with games. I've learned proprietary file formats from scratch. I understand pointers and classes and inheritance far better from seeing them in RAM than I ever did from a class. I learned to hook functions, i understand memory leaks and memory management, encryption, hashing. Because it's all right there to learn for anybody that wants to. You have my pity. Not because I'm better, but because you don't want to be.
I can’t tell if you’re trolling if you’re just that retarded. I’m literally at a loss of words right now, I had to leave my apartment just now so I can laugh and not wake up my roommate.
Careful, you might learn something outside.
I’m not the one asking Reddit to write my shitty hack tool. 🤗
In company life this is a nightmare for customer/product owner, customer relations and QA. We sometimes maintain additional/replacing features like this. But it always means that a lot of resources are used to develop and test both branches while the product owner only is able to see one of both. If there are resources this is a way to improve legacy but typically there are no resources.
I have two versions of a page live in prod now. One is old-school aspx and the other is a spa experience, full Ajax. They're both live. But the navigation lists the old version. So I just give the direct url to qa. We have a QA department with about 6 qa's. They qa whatever we release. When we switch over I just go in the cms and change the nav. Once it's been live for 6 months without roll back we go in the cms and archive the old version. Just one example..
So assuming you have a table Users a table Books, a table UserBook and a table Languages. I'm assuming the Books table contains one record per unique ISBN, so a book called Kittens which is in French and English will have two rows because they will have different ISBNs. Same for spoken languages Users-&gt;UserSpokenLanguages-&gt;Languages &amp;#x200B; You can add a Relevant flag to both UserBook and UserSpokentLanguages, this is the more traditional way of doing it. &amp;#x200B; You can also add a new table into which all the user's "irrelevant" information is stored. (All stuff in brackets is information not data. I've added one row of each kind. Assume each user will have many rows of both L and B. &amp;#x200B; |UniqueId (always have one)|UserId|RelevancesType (Book, spoken language) flag|BookID or LanguageID|Include/Exclude (See below)| |:-|:-|:-|:-|:-| |1|10 (James)|L (Language spoken)|72 (EN-UK)|I| |2|11 (Kate)|B (Book)|42 (ISBN 99999999)|E| I've added an Include/Exclude flag as well, although you probably don't need it. I assume you'd add a row for each thing that is not relevant rather than all the relevant things, but you can also do both. You can query all of James's relevant books by excluding all the books that appear in this table associated to James's ID. If you suddenly have to support audio books you'd add a new flag (A) and off you go. Does that make more sense? Instead of adding a new field to each type of entity you bung all the irrelevant data into this one table. &amp;#x200B; Whether this is a good fit for you is really up to you, it's just an alternative technique. If later on you decide to change to the old fashioned method of having a new field in each entity type you simply add the fields and populate them based on the data in this table. Obviously there's a cost to that. Performance wise, if you have indexes on the right columns it will be fast enough.
Well, if you ever do learn how to whip up a view matrix it would probably help you make games. So maybe you should learn and not tell me. It can be our little secret. Nobody need ever discover that you gained knowledge.
Well, if you ever do learn how to make video games, it would probably help you cringe at yourself for when you come back here to read your own comments. It can also be our little secret.
yeah, so is Minecraft redstone
God, if this sexual tension gets any thicker there's gonna be tearing. You have a good night, my friend.
😂 and you too bud.
In my opinion, the only way to to concurrency right is using a framework like [Akka.net](https://Akka.net). You dont want to waste time debugging extremely complex code to solve a threading issue. [Akka.net](https://Akka.net) removes that complexity and gives you a encapsulated place to work in where its thread save.
How does it feel working for the devil?
Why not just take advantage of source control? Make small changes and if somethings goes terrible cherry pick the offending changes.
I'm sorry for that. Here it is [https://github.com/jesxs/sandbox](https://github.com/jesxs/sandbox)
&gt; Or do some really dumb shit like &gt; object resurrection &gt; to return the unused object back to the pool (it does require GC but reduces allocation/deallocation). Finalization tracking has its own costs though, and could very well end up being slower.
 using System; using System.Collections.Generic; using System.Linq; using System.Linq.Expressions; using System.Text; using System.Threading.Tasks; namespace CSCalculator { class Program { static void Main(string[] args) { while (true) { var x = Calculator.AskDouble("Number: "); var fun = Calculator.AskForFunction("Operation: "); var y = Calculator.AskDouble("Number: "); Console.WriteLine("Result: " + fun(x,y)); Console.WriteLine("\n\nPress any key to continue..."); Console.ReadLine(); Console.Clear(); } } } class Calculator { static Dictionary&lt;string, Func&lt;double, double, double&gt;&gt; _functions = new Dictionary&lt;string, Func&lt;double, double, double&gt;&gt;{ {"+", (x, y) =&gt; x + y}, {"-", (x, y) =&gt; x - y}, {"^", (x, y) =&gt; Math.Pow(x,y)}, // ... }; private static IEnumerable&lt;string&gt; ReadLineStream(string title) { while (true) { Console.WriteLine(title); yield return Console.ReadLine(); } } public static double AskDouble(string title) { foreach (var input in ReadLineStream(title)) { if (double.TryParse(input, out var askedFor)) { Console.WriteLine(); return askedFor; } else { Console.WriteLine("Incorrect Format"); } } return 0; } public static Func&lt;double, double, double&gt; AskForFunction(string title) { foreach (var input in ReadLineStream(title)) { var found = _functions.TryGetValue(input.Trim(), out var fun); if (found) { return fun; } else { Console.WriteLine("Incorrect Format"); } } return null; } } }
What if you have `class B{}`,`class B&lt;T1&gt;`, `class B&lt;T1,T2&gt; and `class B&lt;T1,T2,T3&gt;`? Which one do you mean by your "B"? I suppose there could be some syntactic sugar like `where TB : B&lt;?,?&gt;`. I think I have seen some proposal/discussion in C# github repo.
The 3x3 radians + 1 vector4 you found sounds like the 4x4 view matrix. Iirc if the value of M44 (w in your vec4) is 1, the projection matrix is not multiplied into it (because perspective does some 4d math with it). This matrix should be read into a 16 element array, then used in the constructor of Matrix4x4. It is critical to preserve the order of the members. You did not say if the matrix is row or column major, so you may need to Transpose() the matrix to make it work, because Numerics expects Row Major. At this point you should have a working view matrix. You can find code on the internet for converting the 3x3 rotation matrix into euler angles or something for testing, and you should verify everything is working by aligning your camera to the X axis of the world and getting something close to an identity matrix. Also you need to verify the view matrix is using the correct coordinates (correct handedness, correct axis coming out of the screen) for whatever graphics library this game runs in. These are different for OpenGL and DirectX. The next step would be building the projection matrix in C# with the appropriate constructor, and multiplying it with the view matrix to get your glorious WorldToScreen matrix. You should be able to multiply homogeneous 3d world coordinates (x,y,z,1) with this matrix to get a value in clip space (-1 to +1).
Another version: using System; using System.Collections.Generic; using System.Linq; using System.Linq.Expressions; using System.Text; using System.Threading.Tasks; namespace CSCalculator { class Program { static void Main(string[] args) { while (true) { var x = Calculator.AskDouble(); var op = Calculator.AskForOperation(); var y = Calculator.AskDouble(); Console.WriteLine("Result: " + Calculator.Calculate(op, x,y)); Console.WriteLine("\n\nPress any key to continue..."); Console.ReadLine(); Console.Clear(); } } } class Calculator { static Dictionary&lt;string, ExpressionType&gt; _operations = new Dictionary&lt;string, ExpressionType&gt;{ {"+", ExpressionType.Add}, {"-", ExpressionType.Subtract}, {"^", ExpressionType.Power}, // ... }; public static double Calculate(ExpressionType fun, double x, double y) { var pX = Expression.Parameter(typeof(double), "x"); var pY = Expression.Parameter(typeof(double), "y"); var body = Expression.MakeBinary(fun, pX, pY); var exp = Expression .Lambda&lt;Func&lt;double, double, double&gt;&gt;(body, new[] { pX, pY }) .Compile(); return exp(x, y); } public static ExpressionType AskForOperation() =&gt; AskFor&lt;ExpressionType&gt;("Operation: ", (input) =&gt; { var c = _operations.TryGetValue(input, out var fun); return (c, fun); }).First(); public static double AskDouble() =&gt; AskFor&lt;double&gt;("Number: ", (input) =&gt; { var c = double.TryParse(input, out var res); return (c, res); }).First(); private static IEnumerable&lt;string&gt; ReadLineStream(string title) { while (true) { Console.WriteLine(title); yield return Console.ReadLine(); } } private static IEnumerable&lt;T&gt; AskFor&lt;T&gt;(string title, Func&lt;string, (bool, T)&gt; checkFunc) { foreach (var input in ReadLineStream(title)) { var c = checkFunc(input.Trim()); if (c.Item1) { yield return c.Item2; } else { Console.WriteLine("Incorrect Format"); } } } } }
The actual problem is that the number of generic type arguments is not specified. In other words, do you want to use `class B`, `class B&lt;T1&gt;`, `class B&lt;T1,T2&gt;` or `class B&lt;T1,...,Tn&gt;` ? If you could somehow specify that (e.g. `B&lt;?,?&gt;` or `B&lt;_,_&gt;`), it would be trivial for compiler to solve. Please correct me if I'm wrong.
There's something you should understand about timers - I call it the unreliable recall property. If you have a timer that's going to go off soon, and you try to change the timer to fire.much farther in the future, it's still possible that the timer is going to run. The reason is that the timer could have already been queued to run, or be on the way to calling your method, before you decided to recall it. Your code hasn't been called yet, but it's going to be no matter what. No amount of locking can fix this, the nature of the problem requires that the timer design change. If you're interested, I have a project on github that reimplements timers with a version counter to solve this problem: https://github.com/antiduh/VersionedTimer
Scheduling long running task that persist between service and server restarts is hard and hangfire is a good tool for that, not much alternatives available in my opinion.
Really? I went through the first two sections and felt like I could answer about 80%. I think the issue is more that many of those questions are outdated or outmoded. You can somewhat tell by mentions of e.g. SOAP, but especially when Windows 2000, XP, and Server 2003 get compared. You *really* don’t need to know in 2019 that the worker process model in IIS changed in that time.
I agree completely. It feels forced to me and trying to solve a problem that doesn't actually exist. The only argument for it that I see is that it allows C# to become more functional and be a platform that allows Functional-leaning programmers to leverage one of the best infrastructures for developing apps of any type.
I get asked this every week or so. And I generally introduce myself as working for the devil. But to answer your question, fucking awesome. I get paid a great wage to work on what I want with amazing benefits. Best job I ever had, 10/10 would recommend.
&gt; It also probably quickly creates weird control flow problems. Name them then &gt;Yes, but Exceptions have always been designed that way: if something fails and throws, abort right that spot. Return has never been treated as an expression. I haven’t seen that in any popular language, though I’m sure some research language exists that does it. Just because nobody have already done it doesn't makes it bad or good.
I would like to suggest you [Syncfusion’s WPF Charts ](https://www.syncfusion.com/wpf-ui-controls/charts). It can handle high- frequency real-time data effectively. It also provides lots of features like data binding, multiple axes, legends, animations, data labels, annotations, trackballs, tooltips, gradient, technical indicators, zooming and more.
I don't see how that's easier. Maybe I don't have the right situation to need this, but it seems to me that to set something in that table, I would anyway have to put a "relevant" bool on my books, languages, etc.... so just keeping track of said bool doesn't seem harder.
Have you met DLL hell? Well now you can meat Lock aftershock! The truth is that using **locks is an anti-pattern** for a very long time now. You should be writing synchronous code that runs asynchronously, you know "async Task&lt;T&gt;" for example or parallelism . The reason is that running multiple threads on an object and getting it correct is extremely difficult. When you testing you step through one thread but once you start pounding load onto, the more decision paths and states you set the more race conditions you have to deal with. I just started at a place and refactoring some of their legacy code so they can get it into Linux containers.. and I am ripping locks out left right and centre. But it is a lot of work and luckily the company acknowledges it is shit... so 4 months down the line still sorting things out. It is worse when when nobody cares or understands.. One easy way is to create new classes based on the old ones, that are "Task" and just start and run the Tasks as needed, chain them, create collection of tasks, WaitAll() - I had to do that in MSMQ because its a turd. &amp;#x200B; Another reason lock multithreading is only limited to one CPU core due to the way threading contexts work. In 4.7.2 this is a bit better but Task classes are true multi core distributed so it even makes things go faster without pinging the CPU.
True but it is unnecessary. It could just be a while loop. You don’t need the “valid” variable, the while loop could just cycle until it receives valid input and the method could return once it does.
Ah so if a book is excluded, it's excluded for everyone? I didn't realise that. &amp;#x200B; But sure, the solution above is not for everyone. It would still work. You wouldn't have the bool on the book table, you would put the bool in the table above along with the book id and the flag to say it's a book. &amp;#x200B; When you query you'd simply exclude all B records that have an id the same as the book id in the book table. &amp;#x200B; It's swings and roundabouts though. It's quite a popular pattern, and can also be an anti-pattern :)
I don’t think this is this the issue because there is only one definition of B which requires 2 type arguments. This would be *an* issue if there were multiple definitions of B which required different number of type arguments.
The syntax `B&lt;,&gt;` already exists, but can only be used in `typeof` expressions
Well, the application tries to print sheet with detail about a user. The data are already prepared to be relevant only for one user at a time (so say I have the book, and the userBookCollection). The way I went is to put that "relevant" bool in "userBookCollection", so that if someone asks to see what's in the user's bookCollection but isn't interested in Sci-Fi, it works.
I would "tag" the request with an expiration datetime and have a background job searching for requests that have expired. It's simpler than having a job wait for each request.
Fair enough, as long as it all works :D
Incidentally, `return` expressions [*were* considered and rejected](https://github.com/dotnet/csharplang/issues/867) — for now.
&gt; If you don't know how to see the code while a game is running then just ask. I will ask. What code do you see running this way? Preferably with some concrete example, I am really curious. &gt; I've learned assembly from tinkering with games. So you learned from the utterly unreadable, humanly unmanagable assembly that compiler has spit out after many rounds of optimizations, and you actually understood the algorithms behind it without seeing the original source code? Wow, you are level above Neo. And what kind of assembly do you know?
well, now I'm stuck trying to make vue watch the whole object so that I can't spare a roundtrip to the database when editing the user's profile before printing, but that's tricky.
I would be very nervous about storing data as long running tasks. Use a tool built for the job, like a database. I recommend logging each request to a DB, then having a background service that runs every few minutes and automatically escalates any request that hasn't had a response yet.
We do this with IHostedService background jobs that just read from the data store periodically and check for items that need to be processed. We usually have the background job get a signalr hub context and pump out updates that the the clients (generally Angular for us) pick up to alert users or patch up client state. The IHostedService pattern itself only provides a small amount of benefit, any service class that starts on startup and is designed to function in a resilient forward manner will work. Ensuring failures get retried but don't infinitely block the processing can be tricky. You might need to add failure states and messages to the schema of a number of your items. There are also some strong concurrency and state concerns if your items are able to be modified by users while they are being background processed. The short answer is that this kind of thing **is** complex for most non trivial activities. You really need to have a good idea of how your application's UX, concurrency, error handling, logging and resiliency will work before you start moving a task to the background.
That I can't help with. I've never used Vue :)
On the flip side outside of enthusiast forums like this one, and outside of the most demanding environments where performance is measured in milliseconds, the easiest simplest of patterns will be sufficient. There is a reason things like async/await exist. Not everyone needs to be a rocket scientist to accomplish a simple task.
So if your use case is to make sure your UI does not hang while data is fetched you'd resort to Akka.net?
Haha it's stupid im hosting a minecraft server to troubleshoot my network,anyway it was my ISP was holding onto the public ip addresses, meaning the regular customer only got private ones and some research done, seems like private ips will not let me host servers in any way. So i changed internet provider(took me 10 min), and now i have a public ip, which let me host servers. &amp;#x200B; So first issue is resolved, i can now receive data to the server, and it can handle it. &amp;#x200B; Second issue is not resolved though, i can still not send data from the server to the client. Here is a picture ([Picture](http://prntscr.com/nov53m)), i log the ip and port from the incoming data. I mean should the server send data toward the ip and the port that the server get, or should the server send data toward the ip and a fixed port?
&gt; The dependency which is stored in StaticDependencyProvider.StaticDependency is created in the constructor chain of the base class of the class which should actually receive ServiceA The root of your problem is here, and you should straighten out your dependency hierarchy (any problem can be solved by adding a layer of indirection). Don't get tricky with your IoC library, that's the path to pain.
I mean, you *can* run powershell commands and scripts via c# like [this](https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/) although I'm not sure why you would when you can just use c#
You know how I know this author has never dealt with caching in a high-traffic, high-performance .Net application.. &gt; Microsoft has 2 solutions 2 different NuGet packages for caching. Both are great.
I have had great success with [CacheManager](https://github.com/MichaCo/CacheManager)
ooooooooh bookmarked, thanks! We use StackExchange.Redis a lot for distributed kvp caching. The logging, regions, and overarching abstraction looks to be a solid implementation.
A background service that polls the data source periodically and sends the notification is one of the simpler ways to do this. You could also just schedule a cron/task to run every minute that kicks off a process to do this as well. Unless you need it be timed exactly, there may not be a reason to go with more complex solutions.
Great question! The answer is yes, kinda. By extending from MarshalByRef you can interrupt access to all members, including the constructor. See point 16 for guidance: [https://blog.adamfurmanek.pl/2019/03/02/net-internals-cookbook-part-3/](https://blog.adamfurmanek.pl/2019/03/02/net-internals-cookbook-part-3/) Whether or not this will address your underlying concerns is another matter entirely.
it's just qbits and spins and Stephen Hawking. Boom, done, so simple! &amp;#x200B; Also, asynchronous != multi-threading. Common misconception. While asynchronous can include multi-threading, it doesn't have to. Stephen Clearly wrote a thing: [http://blog.stephencleary.com/2013/11/there-is-no-thread.html](http://blog.stephencleary.com/2013/11/there-is-no-thread.html)
We use [Scientist](https://github.com/scientistproject/Scientist.net) a lot. It works wonders.
In some cases like mine, for various audit and compliance reasons, reverting and pushing a hot fix is far from ideal. Using soft launches like this gives us some more flexibility.
Enterprise SAAS for corporate travel
To be honest, I'm now going to add that to our question pool.
Concrete example - https://github.com/Wulf2k/PS4-TwitchControl/blob/master/PS4-TwitchControl/Form1.vb#L1214 This code is currently running here - https://twitch.tv/wulf2k/ You enter commands into twitch chat, the program converts the text commands to how those same commands would appear in memory if they were pressed on a controller. My program attaches to the PS4 Remote Play app and finds the instruction in the DLL where it reads the controller state. It changes the reading command to a jmp command, and jumps to memory under my control, where I feed it my faked controller data. It then jmps back and resumes normal execution, none the wiser that its data has been altered. Voila, you've got a text chat controlling a PS4. Example #2 - https://github.com/Wulf2k/DaS-PC-MPChan/blob/master/DaS-PC-MPChan/ASM/ASM-NamedNodes.txt Dark Souls has a debug feature where you can see the Steam ID of everybody you're connected to. That code I wrote modifies the function so that it grabs their Steam Name instead of their alphanumeric Steam ID. "So you learned from the utterly unreadable, humanly unmanagable assembly that compiler has spit out after many rounds of optimizations, and you actually understood the algorithms behind it without seeing the original source code? Wow, you are level above Neo." Yes. But the point is, assembler is incredibly easy to understand on a granular level. Anybody could do it. You don't set out to understand the entire program in one go, you find the instructions that are manipulating the data that you care about. Find the beginning of the function, find the end, voila. Finite search space. The human mind, Neo level or no, is easily capable of working out a few dozen basic math instructions. The greatest skill is learning what you can ignore to understand a given problem. "knowing a file format"? https://github.com/Wulf2k/DeS-BNDBuild/blob/master/DeS-BNDBuild/DeS_BNDBuild.vb Dark Souls data file archives. That tool can decrypt them, decompress them, unpack them, then put them back together. By 'knowing a file format", I mean being able to look at an undocumented header and make sense of how to interact with that file.
I'm throwing another vote into the "create an instance provider that gives access to the static property" hat. Static things are bad for this kind of architecture. This technique is a way to make them look more like instance things. Try to make step 2 be, "eliminate the static part".
I'm not saying it's easy, just that it's not rocket science in c# anymore. The hardest part imo, is debugging multi threaded workflows. The mere act of having a debugger present can alter the workflow.... The 2nd is deadlocks, but there are new types like Concurrent Dictionaries that make that less of an issue as it used to be. I avoid using custom locks at all if I can.
Thank you very much for the info. My first attempts had actually tried just treating the 4x4 block as a view matrix, but it makes perfect sense that it was just transposed in hindsight. It was giving reasonable numbers for anything near the center of the screen. I'll see if I can put this to use in a few hours. Game development isn't where my future lies, but being able to take things apart and put them back together is a skill that can serve you well anywhere.
If A depends on S and B creates S then B should be either 1) a dependency of A or 2) constructed prior to A. Your options are: * Lazy loading * Have A control the initialization of the static dependency * Initialize the static dependency in the conposition root where the IoC is being configured. * Don't use a static dependency and instead opt to register the singleton instance of it in your IoC and inject anything that needs it via the constructor. Of course, remove the creation of this static dependency from the service base class. If the service base needs it, pass it in via the constructor. Out of the above, I think option 4 is the best and option 3 is the second best. I'd avoid the first two, mainly because the latter two options are much cleaner and is more conventional IMHO.
I think a better solution, unless/until record types appear, is probably to write and use a T4 template or two to deal with the boiler plate (which definitely can get tedious when writing immutable DTOs). At that point, you just don't have setters on your properties. If you *need* the option to incrementally construct the object, you should be using a Builder pattern, instead.
I would probably use di and just register based on the config option.
Nice. So almost all of the criticism pointed at you was valid. Thank you for proving the point.
How else would it know? Either provide two types or add another two type parameters to A which you use for B.