There's a lot of areas you'll learn from by making mistakes or working with other peoples code, both good and bad. I thought i was great in my first few years of development, thought i knew lots and i thought i could earn senior rates :P Looking back now, with 6/7 years of experience that code i was writing was awful. Ok yeah i could write code and i could learn things quickly, but i couldn't structure my code in a re-usable &amp; decoupled way. So everything was tightly coupled, one change would result in changes everywhere etc etc. I freelance alongside my full-time job, when you feel like your ready give it a go. Learnt a lot from it :)
I cannot for the life of me think of what RTM is here.
NOT 10,000 hours. http://scottbarrykaufman.com/wp-content/uploads/2014/07/Macnamara-et-al.-2014.pdf
I prefer Lynda over Pluralsight, way better value. 
* Position.ToString(); * float.Parse(pos); What? I don't know what type Position is but you can pretty sure (float)Position would do the trick. 
It took me 2 years, spending about 2-3 hours a day to get my first job as a developer. After I got my first job switched to having at least 4-5 hours a day learning. Right now I'm 4 years into my IT career. It also depends how are you learning. Are you reading through a book or are you trying to solve problems by creating some projects? After reading my first book about pure C# I started writing applications that would help me in my at the time job. That way I got to try Windows Forms, WPF, VSTO, etc. The most important thing is never stop learning. I still spend about 4 hours a day reading articles, doing online courses or creating some projects. 
&gt;Without code or diagrams this is getting a bit too abstract/vague for me haha. I totally understand, programs are hard to describe without reading all the code. If you do want to read the code, you can check out [the project on GitHub](https://github.com/DerbTheThird/CharacterBuilder/tree/helpProject). The helpProject branch is the one with all the work being done right now, the master branch is poorly done and I am rewriting a lot of it from scratch. Thanks for the suggestion, but I'm not sure that composition is the answer. I'll look into ECS a little more. As far as needing a name, anything that implements ISkill has a ToString which returns the Name property from the base Stat class ... I don't know if that's the best thing but it's what I've done for now. Anyways, thanks for all your help!
Why exactly are you typing in Camel Case?
I don't know much about the service in question, but we have services that rely heavily on client-side certs. For someone having connection problems from .net, nine times out of ten it's because the account being run as doesn't have permission to read the private key for the cert. Attaching the cert will appear successful from your client, but in reality it's not correctly doing the SSL handshake to authenticate your client to the service. Search for "certificate manager manager manage private keys". Certificate manager is this horrible mmc utility that'll let you set the right permission on your cert. I could be off the mark and you might be hitting against something with the service in question, but this sounds so much like the "missing private key" problem that our group sees all the time. 
Guess I will get started! I know that I need a controller, view and model.
Keep in mind the old adage that WPF makes the hard trivial and the trivial hard. In order to fill in the huge gaps, get yourself a supporting library for it , like the one from Galasoft or some such. And try to forgive the execu-drones who pushed for this massive pile of bovine waste products, just because it looks so good in limited, special-purpose demos even while it scales like spaghetti code.
thanks for posting this. I have a side project where I wanted to use expression trees but I'll be honest I had no idea where to start. Your code will be a big help to get me started
There is no way to do that right now. I'd be happy to add that feature in if there's a good use case for that. Do you have a case in mind where you would not be able to ignore the property with strong typing? 
That would be rad
I have a windows service that uses X509 certs, here is the relevant code in the app: using System.Security.Cryptography.X509Certificates; X509Certificate x509 = X509Certificate.CreateFromCertFile(@"c:\Certs\MyCert.crt"); webServ.ClientCertificates.Add(x509); webServ is the proxy class for the WSDL. The X509 cert is now attached to the webServ call and will be sent to the endpoint.
I've actually been using that site to learn different design patterns. Now that I've been through all the GoF ones I was hoping to find more to study, hence why I posted that comment. I used to use Microsoft Virtual Academy for some basic things, totally forgot about it. I'll see if they have some higher level videos. Codewars seems pretty cool. I'll try that out as well. Thanks for your response!
I've been working on [PathLib](https://github.com/nemec/pathlib) for a while. It's essentially a strongly-typed Path object with additional operations on those paths (a bit of a combination of System.IO.Path, FileInfo, and DirectoryInfo). It also implements "pure paths" that do everything a normal path can do *except* operations that touch the filesystem, so you can work with Posix paths on Windows and vice versa. My favorite feature is no longer having to type my user directory when working with paths. IPath appDir = new WindowsPath("~/documents").ExpandUser();
If OP doesn't end up wanting that 30 day free trial, I would love it. I'm currently taking C# at my JC but it's going a bit slow. I want to learn more.
I've thought of this very thing for a while. Good to hear that other people actually get off their ass and implement this stuff instead of sitting around like me!
That depends on whether onEvent is invoked synchronously by the caller library. If not (and it's usually pretty obvious when), then you're working in multithreaded code and probably shouldn't make such timing assumptions.
C# Step By Step Tutorials
I was working on a completely different project that ran SSH commands and copied files from Windows to Linux and thought, "it's a real pain building paths for Linux, I should write a library to help". Now I've been working on the library many times longer than (still unfinished) project... hah 
I don't have a use for this at the moment but I've wanted it in the past so many times that I grabbed in just in case. Thanks for sharing!
If you're doing `==80`, [interlocked.increment](https://msdn.microsoft.com/en-us/library/dd78zt0c(v=vs.110\).aspx) will make sure only one thread gets `80` (the others may go beyond, but can check and bail since they know another thread pulled 80).
You two obviously don't know C#. Google. I just copied and pasted what I had. Why would I document a code I anticipated me being the only one having?
Sorry you feel that way. Lots of people new to PS3 Modding would've liked it. 
from what i saw in the sourcecode, I think it only observes the download directory from Steam for new folders, theses indicate a current download. It has no real connection to steam. **edit** maybe he could just kill the Steam process and start it, based on the scedule 
Holy moly. This post has had a lot of replies since I posted it last night... Didn't expect that many. Going to reply to everyone now...
[removed]
I'm working on [http://clipload.net](http://clipload.net). You can download+convert your YouTube, Soundcloud, vimeo, .. stuff online. It uses C# (ASP.NET 5) and C++ on GNU/Linux . It's my first project. Besides that I've started [blogging](http://mjomaa.com).
I decided against using attributes for this. I much prefer using fluent style configuration since I started using it in almost every C# library I use (FluentMigrator, FluentNHibernate, AutoMapper)
Thanks! I'll give it a try.
Which wasn't included in his post at all, so you mean the op is retarded.
Yeah I can see that. I like the fluent style as well. Old habits... :)
[removed]
Full dump file is literally a raw snapshot of all of the working set of your process and thread states - including in this instance the runtime state of the CLR heaps. VS and WinDbg have dump parser extensions that can parse this. Not bad article below for dump parsing with VS, worth learning WinDbg too if you're going to be in Windows for a while... http://blogs.msdn.com/b/visualstudioalm/archive/2013/06/20/using-visual-studio-2013-to-diagnose-net-memory-issues-in-production.aspx WRT x64 app stuff. All of those listed were written in C or C++, a more traditional non-GC'd language. You (the dev) explicitly manage the malloc + free or new + delete of memory/objects. GC doesn't absolve you from needing to consider when to create expensive objects, it just defers the tax of deletion and cleanup - you still have to pay your taxes at some point! One thing you'll find is doing expensive operations directly "on-event" is often not the best approach. You can fire a heck of a lot events for scroll, drag, resize etc. - including pixel by pixel. Each of those can chew through memory that is deferred for generational collection, often superseded by the immediately following event. You'll see lots of approaches such as starting timers that defer triggering the expensive operation until settlement has occurred e.g. mouse up, by time elapsed since last event etc...
I'm doing a code stream that covers design patterns. Next stream is tomorrow @5:45pm EST. If you'd like to see past videos (and code) check out the current project wiki : https://github.com/ariugwu/storybox/wiki/First-Semester I think I'm doing what you're looking for and if you hang out in chat I'd be happy to address questions. Bonus is there are knowledge people there as well. Going for a simple C# Console app that gradually builds until there's a complete app. Then I'll take a break and start over with a new application theme. Thoughts?
I don't have anything really but here is my Bitbucket profile. https://bitbucket.org/praclarush/ But I have been working on a little side project that involves file System Watchers here https://bitbucket.org/praclarush/wisdomapps.watchers is anyone's interested. 
C# is a programming language, ASP.NET is a framework for creating web sites, in which the web server will handle HTTP requests with code written in the C# language (or VB.NET). If I were you I would focus on just learning concepts of object-oriented programming, and becoming comfortable with C#. After that you should be up to the task of taking on small projects using additional tools and frameworks, such as ASP.NET. 
[removed]
The toolbox could be awesome. I live by ReSharper for better or worse, but I'd like to use more of their tools...
Transferring a dataset was possibly the most misleading title imaginable. To answer your question: no, copy everything or run the install on the computer you want. That's a Click-Once app, just install it.
&gt;I am just wondering how long from starting learning c# to getting a job as a developer it took some people on here? I spent a year or so casually learning Python. Then I started on C# for about 6 months. A company here merged with a larger company and they were desperate for cheap devs (I was hired with 7 other people to give you an idea), so I got hired for that. It was still way more than I was making at the time and put in a year of experience using C# and constantly having work to do. So I probably got really lucky with this. After that, I got a "real dev" job with *actual meetings* where I handle the project from implementing concept to production deployment but I actually write less code. &gt;My plan at the moment is to learn C# for the next one to two or so years, then onto ASP.net and followed by MySQL. Consider MS SQL Server as well. It's a bit more easy-going when using Entity Framework, which is often used with ASP.NET (I'm pretty sure you can use MySQL/Postgres but it's extra config work). SQL Server Management Studio is built on visual studio so it's easy to work with when interacting with the database. &gt;Do you think my skills would be sufficient enough to get a proper job as a developer after this amount of time if I stick to my plan of 2-3 hours per day? Anecdotally, yes. Focus less on knowledge and more about having something to show through projects or work. Take ideas someone else has and re-implement them yourself, even if it isn't as good. You'll want to be able to have a conversation about it.
You have the materials and the tools. You just have to somehow produce a car. 
Because that's what professionals do. That's what hobbyists do that care about their code. Quite frankly, this is the lowest shit crap code that everyone could spit out in a hour. I'm surprised you still didn't delete it.
**Experienced** people can see right away that this is **worthless**.
Ha, I bet everything costs exactly the same as before on a yearly basis - only difference is if you stop paying, you lose it, where today, you keep it.
Just checking, is "Prefer 32-bit" checked for your AnyCPU build? It's in build settings and it's checked by default.
&gt; You don't have to document your work. Good developers always document their code &gt; I never intended to release it. You **did** release it. &gt; Go, download a RTM Tool, decompile it, look at the shit they release. So your excuse for writing shitty code is that others write even shittier code. That's pathetic.
Which kinda sucks.
I think he just wanted to share
I don't know where to start, More information please? Console? WinForms? uh, WPF? [The Console class has the ReadKey\(\)](https://msdn.microsoft.com/en-us/library/471w8d85\(v=vs.110\).aspx) [But for WinForms, you have the KeyPress event.](https://msdn.microsoft.com/en-us/library/system.windows.forms.control.keypress\(v=vs.110\).aspx) 
Your homework is to interview thirty people specifically doing .net? I've been doing this nearly 15 years and I don't think I know 30...
Thanks, I'm going to go with this. I've got a lot of other constants I need I can group in there too. 
I'm going to go with this but modify it to match xenoprimate's response. Thanks.
Filled it in, good luck with the survey.
2-3h a day hardly seems like a genuine interest to me. But that's not necessarily a bad thing. It really depends what you want. If you want to be a very solid developer, that's really not enough, unless you are a fast learner - I don't consider myself as one, so I have to work a lot. But even if you work hard, you'll probably not get there unless you really love what you're doing. I've been doing 12h+ on average for the past 2 years and I am still constantly discovering how little I know. I would've probably reached the same level I'm at in 4-6 years if I were to work only 2-3h a day.
Done. You could ask what other languages/technology people use. You'll find that being a .Net developer means that you will need to use a database and possibly write a website. You'll end up needing to know HTML, JavaScript etc.
[removed]
Then leave, I was one of the first and only people to mod mw3 for many years on PS3 and Xbox 360, 5 minutes after release. Patching over variables in the code section may have adverse effects on various other parts of the engine. To properly rtm you need to walk the content table after the fast file has been parsed and loaded. Oh wait you probably don't know what any of that means...
This all depends on the area. In the Midwest .net is huge. Not so much on the coast. And all you'd have to do is a little googling to find some .net shops and ask if you can interview some of their coders. Heaven forbid a homework assignment makes you do some actual work
Would be interesting to read some of the responses. 
Under construction? ¯\\\_(ツ)\_/¯ 
It would be cool if you posted some of the survey answers here later. I'm interested :)
Filled out survey. .NET programmer for a ~fortune 50 company for over 8 years now.. straight outta college (+ a summer internship)
Done, good luck
no it's insane. it simply doesn't scale. So let's assume that 1 in 25 developers contacted out of the blue cold calling are down for this - which I think is on the low side of things. But given that number it would require you to contact 750 people to get to 30. Now let's assume there are 20 people in the class. That means the class needs to find 15,000 .NET developers collectively to interview. That is simply bonkers. Assuming this two week course is offered four times a year that means this small swedish trade school is reaching out to 60,000 .NET developers a year. It's a lazy homework assignment - contact someone in the field you want to go into is something 4th graders are asked to do. At best I hope it is a sneaky way for the students to practice looking up places that do .NET development and get practice getting their name out there. But that's a pretty underhanded thing for a university to do. That being said, I remember being on the shitty end of assignments like this so I'm going to fill it out during my next conference call.
Well that all depends on where you are. Some cities here in Sweden have a majority of .net(and/or Java) coders over anything else.
Sure VS can be really resourceful a lot of times (I mean debugging is so much easier at least for me). But when it comes to simplicity I wouldn't include VS for that list. But still a really good IDE and I wouldn't change it for anything (unless it's javascript or other script languages). Edit: Typos
Resist from using drag-and-drop in wpf. Do everything you can from xaml editor.
&gt; it would require you to contact 750 people to get to 30. I think you're underestimating two factors: - These students likely already know people in the industry, maybe even friends or family - Scandinavians are on average quite willing to respond to such requests (cultural differences). I would.
I don't have enough time to fill out the survey. But I'm 40, been programming for close to 20 years, and been using .net since beta1. Pay is fine, but I rarely call myself a ".Net developer", as I split time between .net, java, IOS, javascript, and sql. When you are first starting out, just learn a system so you can prove that you can, but always be willing to learn a new one.
It's not as insane as you are claiming, although I probably didn't make myself very clear. I'm part of a team of 6 people (myself included) that are on this project. There is one other team of six, although we aren't competing with them we also don't want to double contact people either. So essentially 12 people have to gather 60 contacts. So that's far more reasonable. The project isn't just 'Gather interviews' we also went through the process of creating a project using basic methodologies. For example, we started off with a projektbeskrivning (Project Description) which included our plans, our resources (time essentially), how we divided labor, etc. So the interviews are half the reason we are doing this project, the experience of managing a project is the other.
Perhaps. Definitely an American way of looking at it on my part I suppose. So lets assume these students know locals in the industry. With 100% of people asked with the same assumption that still requires an absurd 600 people being interviewed for a class of 20. Times 4 classes a year that's 1,200 .NET developers required for a year of class. Umeå has a population of roughly 120,000. So 1% of all of that town would have to be contacted for an interview that year and also be .NET developers. There would be strange images making /r/all from /r/sweden talking about all the .NET developer interviews going on at that rate. I stand by this being a crap assignment. 
I might post some of the short answer data. We are also going to find some way to measure the long form questions. I think I'm going to try to organize them and tally up all the similar responses and make a hierarchy of the types of answers. Anything I post here I will make sure to keep anonymous in any case!
Same here, I'm the only one of three in a department of 20 that use .net, I am, the expert, which is sad. 
There is an HTML/CSS course built into this one I'm fairly certain. I'd have to look over the course plan. I need to learn Javascript... but I hate it... It's a necessary evil though. I've heard from several sources that it's fairly easy to switch from C# to Java and vice versa, and from my own experience taking other programming courses, knowing the concepts is over half the battle. Piecing together how a language goes about doing something isn't as difficult. Or at least that is what I've heard! I could be super wrong.
Posts like this make me proud to be on reddit. Can't imagine trying to accomplish this without a truly global community of developers to poll from! Echo what someone else said: final results would be awesome to see #datanerd
This was what I was thinking, actually. I need to delve deep into one language to better understand coding in general, but once I have the necessary depth I should branch out and learn other languages.
But if you specify the type on the generic compare method to a base class type would it only reflect the properties on the base class? 
Yea, I think they've gotten a lot better with JS support in the 2015 version. I agree there are times where VS makes me pull my hair out, but the time it saves me as a whole still outweighs that. I mean, notepad++ is never going to give you strange errors and not build because you need to go into some temp folder and clear out files (mainly because it doesn't build anything), but like I said, the positives outweigh the negatives. That doesn't mean there still aren't times where I'm working with PHP, ruby, or python though. Mainly on existing applications though, if it's something new and there aren't other outside constraints, I'm building it in .net. 
No, that's pretty spot on. If you know one language, it's pretty easy to pick up another one, with some exceptions (e.g. Haskell). Figuring out the best practices in each language is a little trickier but will come with time and experience.
Didn't the NSA re-brand to MSA after W10 launch? =P
Yep, it would generate a Comparer based only on the properties of the base class type. Any child type passed to that method would work but compare only the base properties. 
Yeah I've noticed the new aggressive policy for supporting as much as possible as good as possible. notepad++ is more of an texteditor (sure there might be some compilers you can attach to it, but still), which makes it a bit harder to compare it against VS. But yeah, I also tend to use other editors when writing other languages then those related to .net (like python, html, js, go etc etc). But that has more to do with me demanding a texteditor which is light and fast (like sublime).
Its a huge community, and I'm sure by posting here you will hit 30. Yesterday I noticed that most of the top Stack Overflow users, reputation wise, are mostly c# and .net people as well.
&gt; With 100% of people asked with the same assumption that still requires an absurd 600 people being interviewed for a class of 20. &gt; Times 4 classes a year that's 1,200 .NET developers required for a year of class. Who says there can't be overlap or reuse? It's not *unique* users they're looking for ;) The task is probably meant to given them basic insights, or maybe a network for future jobs/internships? "Oh, you're a student? We're looking for summer interns you know." &gt; Umeå has a population of roughly 120,000. Do you really imagine that the students in Umeå are all from the same city, region or even country? My family lives and works in different regions and countries at various times. &gt; I stand by this being a crap assignment. Sure, I just like discussing it.
Filled out, good luck! C#/.NET is a great place to be at the moment in my opinion. It's evolving a lot, especially with MS's recent open source efforts. There are a lot of new places to use C#, for example Xamarin and Unity let you extend your dev reach to mobile (Android/iOS) apps and game dev, which is pretty cool. I'd also learn ASP MVC, that's been helpful for a lot of web server contracts I've had to do.
Great stuff - looks really good. Congratulations.
Yea, notepad++ wasn't the best example, just a quick one. 
I can recommend a good books for you to read for JavaScript. Try find [JavaScript: The Good Parts by Douglas Crockford](http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742). It's very short (176 pages) for a technical book and makes it a lot easier to understand the language. What specifically do you hate about JS?
VS is for .net what Intellij IDEA is for java - brilliant! 
I love VS, but my team adopted TFS for source control. Which works ok to great 90% of the time, but that other 10% is a pain to deal with. Mainly because everyone comes and asks me to fix the issues.
Android Studio is pretty good. Much better then Eclipse.
IntelliJ IDEA masterrace i wish VS borrowed many functions from it. also VS have some little but annoying as fuck things, like no smart unintintent, or white dialogs in dark theme, or no advanced syntax coloring
Yeah, that definitely sounds like a bug. I'll look into it (I work on the editor team but I might be able to find someone who can help)
Not sure how this is related to C#. Did you try asking in /r/fsharp?
Thanks for posting this! Were you aware of "Compare .Net Objects" and was there something it couldn't do that you needed? https://comparenetobjects.codeplex.com/ 
Even in this case you should start with the single threaded approach. Make sure it works and THEN use threading where you want/can. This way you wont have to think about everything at the same time so it'll be easier to build. Just keep in mind you keep everything decoupled while building the singlethreaded version because that will help a lot when doing the threading. Also keep in mind that all UI stuff have to happen on the UI thread (which is usually the main thread) on most (if not all) environments.
&gt; You can damn near do anything in any language. I'd love to pay someone to do a local car sales website in pure Z80 assembly.
Thanks a lot, your help is very appreciated. I'm definitely planning to share my code. I'll post it when there's more to see. Message queues ring a bell. I know this approach is used in Android (via Handlers / Loopers). I'll give it a try. 
&gt; Make sure it works and THEN use threading where you want/can. This way you wont have to think about everything at the same time so it'll be easier to build. Thanks. You're probably right there. Now I'm tempted to go back to the sequential, single-threaded approach and make sure I get all the structures and logic right before going multithreaded.
I did a quick googling before writing my own and all the libraries I stumbled accross had the same issue where they weren't written for performance. They were using reflection for every call instead of compiling an expression tree down to a lambda or emitting MSIL. Also, I wanted a challenge and a library that automagically builds and compiles code is pretty awesome to me.
VS has all of those with a few fairly normal plugins that almost all devs use. 
Oh fuck TFS. That's one thing I feel like MS has never gotten right. They tried to make it a cloud based, source control, scrum management, PM tool. It just does all of those mildly good, instead of just being a source control. 
I can't speak to using intellij too much so I'll take your word for it. I wouldn't want to go back to java development though, ides aside. 
It's based on IntelliJ, which imo needs laser measuring to see who's ahead between it and VS ;)
http://imgur.com/AEmXya2 tried this extension for themes but still those are default windows controlls so no customization
I've actually had two courses in C#, as well as another course in Python, so yeah, objects are awesome! I haven't studied Javascript enough, admittedly, but the experience I had was just very frustrating. I know that it's a bit silly, although I know of several other people that want Javascript to die as well xD.
JavaScript can be powerful. Here is an emulator of a [32-bit x86 CPU running a Linux 2.6.20 kernel, all written in JavaScript, running in a browser](http://bellard.org/jslinux/). That blows my mind. I also understand that it doesn't necessarily make you automatically like it, but you'll find that it's not that difficult once you start using it. Therein lies the trick, I think - you need to solve a problem using it. Once you get past the initial hurdle, it might come easier.
That's why groovy is so awesome imo. At least for the work I do 😊
I am in the other side of the spectrum. I think in my almost 4 years Career I think I have met close to 40 .NET developers. Most of them from just one company that I used to work and the others from another company. I'm based in Cancun, Mexico. 
I've used Webstorm which I believe is the same IDE. It's a nice IDE but found it choked on large files.
BTW, [here](https://github.com/axm/LondonUnderground) it is if you want to have a look at it :)
Sounds like they tried to get you to do work for free, then want someone else to scam the same way. :\.
Hello I have done two yrkeshögskoleutbildning in .Net development and i now work as a .Net developer. I really like it, i have been programming since i been 18 and i am 25 now but its only now that i feel like a real developer. It very much depends on where you work. Where i work we have a really great environment. Doing agile development in visual studio is really fun and a great way to work with a team. I used to be a huge linux nerd and did php development i miss the linux shell from time to time and the development tools thats included in linux. But the tight integration between azure and Visual studio makes up for that, still i sometimes just wanna open a linux shell and get down to it. I do have to say a few words about YH(Yrkeshögskola) in Sweden. I have seen among the people i know that you get paid a bit less and you typically do not get the kind of jobs that require "hardcore programmring" you will for the most part making guis for some database. The pay rise will also be less than if you had a real CS degree and you will have a hard time to get work outside of Sweden. If you still are young and have the motivation i would recommend you to get a real CS degree at a university when you are done with YH. 
Here's what I have so far coded not sure what is wrong or right outside of the classes I coded. using System; using System.Collections.Generic; using System.Linq; using System.Web; using System.Web.UI; using System.Web.UI.WebControls; namespace ChallengeHeroMonsterClassesPart1 { public partial class Default : System.Web.UI.Page { protected void Page_Load(object sender, EventArgs e) { //Page Load character creation statements Character Hero = new Character(); Hero.Name = "Shulk"; Hero.Health = 100; Hero.DamageMaximum = 25; Hero.AttackBonus = 15; Character Monster = new Character(); Monster.Name = "Black Claw"; Monster.Health = 150; Monster.DamageMaximum = 35; Monster.AttackBonus = 10; heroLabel.Text += String.Format("{0} Current Stats Health: {1} Damage Max: {2} Attack Bonus: {3}", Hero.Name, Hero.Health, Hero.DamageMaximum, Hero.AttackBonus); monsterLabel.Text += String.Format("{0} Current Stats Health: {1} Damage Max: {2} Attack Bonus: {3}", Monster.Name, Monster.Health, Monster.DamageMaximum, Monster.AttackBonus); } //Character class class Character { public string Name { get; set; } public int Health { get; set; } public int DamageMaximum { get; set; } public int AttackBonus { get; set; } public int Attack(int attackerDamage, int attackerBonus, int defenderHealth) { Random random = new Random(); int damage = random.Next(1, attackerDamage); defenderHealth -= damage; return defenderHealth; } } } }
Also this is being written in VIsual Studio 2015 using web forms which I really am not fond of but it's what the course is requiring for use.
Just updated it with my questions feel free to take a look at them and the code I've written so far.
Ok how do I do that when I have to put the characters in the page load?
I just started YH in Malmö to become a .Net dev and our first project was similar to yours except interview someone in the business to get an inside perspective. 30 is ridicoulus.. 
I actually got a VS sticker on my latop.
pick up a book, or use the endless tutorials on the internet. start working on something, google your problems, try to learn from it
The world doesn't need such evil to exist.
Ahh Com errors, always an arse to debug... My thoughts: 1: search the registry to find the com interface, make sure it's registered in the registry. 2 run: FOR /R C:\ %G IN (*.dll) DO "%systemroot%\system32\regsvr32.exe" /s "%G" from command prompt to re-register all of the windows jobbies
Note that unless you need to do a case sensitive comparison using a case insensitive comparison will prevent a lot of issues - in your case that will be skill.ToString().Equals(GeneralSkills.Tactics.ToString(), StringComparison.InvariantCultureIgnoreCase)
How do I build a blog in c#? 
Good, build fun things that you enjoy and make them work, the tidy them up. Something like Pacman or Space Invaders. Make the code beautiful and testable. Once you've done that a few times, make something more commercial like a database app - maybe even a front end to your game's high scores - and make it very reusable for other projects. Before you know it, you'll be comfortable with the language, several toolsets, and yourself. 
I finished it thanks for the help!
Not trying to be a smart ass, but truly the best way to learn is to simply google it. It will take you to what you need, quickly. 
Or Xamarin...code Android, iOS, and Windows Phone in one platform
After you learn some of the basics, and if you have a decent grasp on programming concepts, think about something you want to develop, and just dive in head first. 
Nope. Asp.net is massive on west coast as well. 
Learn to love EntityFramework. Do you know how to build the graphical side of it? If so, all you need to do is learn the database side of it. Learn how objects work with each other through joins and how entity framework allows you to poll on objects to mask a lot of the back end parts. Are you using the default user system? If so you can simply check if a user has a role (in this case admin). The best question is, where are you stuck?
Someone who's never used Intellij detected. Edit: meh.
As a regular user of intellij and it's derivatives, it does not hold a candle to VS
I don't even think intelliJ is the best java IDE
Search for barnacules codegasm vids on youtube if you want to jump straight in to making a couple little apps. Nothing crazy, but I had fun when I went through these as a refresher.
Thank you, I do know the framework pretty well, I'm lost with admin functions, CRUD?(adding removing posts). 
tfs 2015 with git is not bad, fuck tfs source control though.
So I am at this admin page. And it should allow me to Add, Modify, Edit, Remove posts, how perhaps I need to learn CRUD well. A textbox exists that allows me to write a blog post. Once I submit... hmmmmm ... 
Start small. Trying to start with a huge ambitious project is a quick way to get frustrated and quit. Do tutorials. At first don't change anything. Type it in exactly like the examples (type, don't cut and paste). Once you have the tutorial working, try changing variables and see how it affects the output. 
I agree. Make a simple challenge like pop-up a message box or write some text to the console. Then try reading and writing text to a file. Maybe then try writing some methods and passing variables. 
A large part of learning to program is actually learning how to get the information you need. Most of the time from the internet. In this case what I did was literally ask google "How do I build a blog in c#?" and this was the first hit: http://www.c-sharpcorner.com/UploadFile/mgold/DotNetBlog12022005013909AM/DotNetBlog.aspx 
I have one main project that I've been putting effort in to for some years, and that is [gShell](https://github.com/squid808/gShell). Right now, gShell is first and foremost a PowerShell module that gives users the ability to manage their Google Apps domains from PoSh. Earlier this year however I made some significant changes that allow gShell to be used as an authentication wrapper for other Google APIs with relative ease (compared to implementing OAuth flows yourself, even when using their .Net libraries). Down the line I'm going to hopefully add more to it, but I have the issue where my users aren't really developers, so nobody is able to help me out too much. So, it's a slow going! In the meantime I've switched gears and in an attempt to teach myself ASP.NET MVC in my limited spare time, I'm making a website that will facilitate the sharing of Microsoft Dynamics CRM user Roles through an interface similar to Dynamics but [without having to fall back to screenshots](http://lh3.ggpht.com/-GSR_g5zq5c0/T4FuhjMPbSI/AAAAAAAAGZ8/r1w3DNp_rO4/Forms%252520and%252520Views_thumb%25255B3%25255D.png?imgmax=800). If anyone would like to take some time to lend a newbie a hand, I'd really appreciate it!
The observer pattern is a very good way to go here. You may also want to look at Task Parallel library rather than explicitly managing threads. In almost every case the runtime knows much better than you how to thread. You may also want to consider a framework like Akka.NET it can be even easier than TPL in some cases.
What courses and what order on Pluralsight to follow?
http://i.imgur.com/Xr4OBb1.jpg
Mobile doesnt make sidebars obvious, when an app even bothers to display them. Just a guess as to why OP didn't rtfm. 
I wrote an email to my coworker today who is umm...difficult. One day I spent 3hrs with him telling me his centurylink broke his samsung and now gmail doesn't work. Email said "I don't mind helping you charlie, but I insist you spend 30 minutes on google investigating your problem before I will assist you. I want to know what questions you asked. And I want you to get better at asking questions. This will help both of us." I would never say that to a coworker unless it was a super extreme case fyi.
submitted my answers. I guess it's too late - maybe you could pass my answers to the other team.
ASP.Net, trying to make it with the MVC format.
Tell me that was done after say 1998 and shit, I will sculpt a bust of you and keep it on my desk forever. 
Make a text-mode blackjack or other simple card game. Then start trying to clone simple applications. This is a great wat to learn, since the program design is alreafy done, and you can figure out the behavior of the application through using it. Then, you recreate it. The biggest problem isn't learning C# though; instead, the *real* tricks are developing your analytical, problem solving, and research skills. This can only be done through practice, through trial and error. 
Learn by building something. a web app is probably easiest. www.asp.net has all you need to know to get started.
At my last job I could have spoken to 30 .Net developers without changing floors, on multiple floors.
Well, the list is an obvious one -- it's about a collection of "things", regardless of what that thing is. Another good one is a cache. Do you want to create a new class to cache and return ints, strings, or custom classes? Of course not. Write `Cache&lt;T&gt;` once and you can cache any item (without casting back and forth to Object). An example from a project I've built: parsing command line arguments. You want to parse them into a "data object", right? Something like class Config { public string InputFile; public string OutputFile; } But if you're *building* the parsing library, you can't predict what kinds of Config classes your users are going to pass to it -- it depends completely on what the user's program does. So generics let you have something like a "type variable" that you can work with without needing to know the exact type.
I agree. I took a very long break from programming, and then a couple of years ago I needed code for a project I was working on, and since all I had available at work was Excel, I decided I would just figure it out how to do what I needed in VBA. The last time I had written anything it was on an Amiga, in AMOS, somewhere around 1998-ish. But Google had me up and running within an hour or so, with a proof of concept and over the following week I fleshed it out into a kickass set of tools to help me do the project in much less time than budgeted, with 100% accuracy. But that's totally because I already had an idea of what kinds of questions I needed to be asking, and I wouldn't have known that without prior experience. I've been learning C# that same way, having a need that I have to write for, and having an idea of what kinds of things I have to Google to figure out what to do. If I hadn't done it in other languages years ago, I'm pretty sure I would have wanted to start with a course, because where would I have even started with forming my questions?
Check voidrealms YouTube channel. Great tutorials. Really helped me to learn Qt/C++ and now I am using his tutorials to learn C# as well. 
Pluralsight
To add onto the previous point, if threading isn't the right tool for the job but you're using threading to learn anyway, then you're most likely not learning threading properly.
Thanks for replying. A factory is not something I've explored yet, I'll give it a shot tomorrow!
There are so many resources...but since you're learning in college, why not just take what you learn and build on it at home? Use Microsoft Virtual Academy videos, google/Bing anything that you're not 100% clear on. Get a good book on C# and read in depth on the topics as you learn in your college course. I'd warn against jumping ahead of your course because you'll possibly disrupt a carefully planned structure (and to a teacher/trainer there is nothing more annoying that someone asking questions about a topic that has not yet been covered). So focus on getting a deep understanding of the things you learn in college rather than jumping ahead and trying to outpace your course. But whatever you choose to do there is so much content online. Maybe think of a project you could do that is simple, and that you can build on as you learn new things. Putting what you learn to practical use (especially in an personally interesting context) is a great way to cement what you learn.
Interesting question... what's is like to work as a .NET developer? I'm a C++ developer for about twenty years, and a C# developer for about eight. In either language I specialise in writing UI applications, so I know a lot about certain frameworks but less about general C++. .NET to me is an interesting place to code. It's *almost* there but falls down in certain areas and does well in others. So most of my code is C# but with some C++. At home I'm playing around with Delphi again. That makes me (i) weird (ii) insane etc. Doesn't matter that the designer of Delphi moved to C# so I see a lot of things in Delphi in C#. I'd say having a career in C# is a pretty lucrative one. It's got me in all sorts of places, including the Games industry.
&gt; And I want you to get better at asking questions. Beautiful! What was the outcome?
Seems like it really depends on your location considering all the other responses I've gotten.
Ok. What have you got so far? Are you using Visual Studio (community version) for writing the app?
This doesn't mention that you can use async/await with .NET 4.0 if you include the [Microsoft.Bcl.Async](http://www.nuget.org/packages/Microsoft.Bcl.Async/) package.
C# *does* have an #if which is equivalent to #ifdef in C. However, that is hardly relevant here. If you wanted to write code that worked with .NET 2.0 you would simply have to use only features that work on it.
Sweet, I'll give this a shot!
I have only just started the course, learning basics such as variables and things like Console.Writeline.
Thanks, will definitely use this! :D
Not my area of expertise, but have you looked at http://www.planetgeek.ch/2013/02/01/fakeiteasy-and-windows-store-apps-are-becoming-friends/? I also found https://github.com/kentcb/PCLMock, not sure if it's of use. If neither works then I guess you have no choice but to manually mock every interface. The problem seems to be that System.Reflection.Emit is not available, which most (if not all) mocking libraries depend on.
Microsoft Visual C# Step-by-Step by John Sharp is a good comprehensive book. C#5.0 Pocket Reference is a great little summary that is more of a reference. You can pick it up pretty cheaply and it will be invaluable for those times you don't quite understand something or need to refresh your memory on syntax. C# In Depth is pretty cool, but quite advanced (a lot of it goes over my head). It's a good book to read once you have more understanding as it explains more about why the language was designed the way it is and how it has improved to solve developers' problems and serve their needs over the years. Since C#6 has just been released you can probably find a lot of C#5 books on the cheap (I don't think there are any actual C#6 books out yet, but don't quote me on that). The differences in C#6 are not huge - just improved ways of writing out some common things more succinctly and various small tweaks. Also look into a Visual Studio plugin called ReSharper. It's quite pricey ($150, though there might be a student discount, and it does have a free 30-day trial). ReSharper scans your code and shows you where it could be improved and where you have used inconsistent or non-standard conventions. It's great for showing you how you could do something better.
Yep, from looking at the code, CompareNetObjects definitely isn't as clever as yours. I just need to upgrade to VS2015 to actually see how it works properly! Thanks for sharing
Do i creep your post history or do you got a picture to work off ~~.~~ ? edit: question marks are hard
well technically you can. you can install the nuget package Microsoft.Net.Compilers which will swap out the compiler in the msbuild pipeline. That will replace the regular compiler with the roslyn one and it'll compile the C# 6 code fine. Your problem will be the IDE's intellisense not knowing about it. But it would compile. But back to the #ifdef statement - why would this help? Nothing in C# 6 is anything but a shortcut for common code patterns. With the the #ifdef statement all you'd be doing is writing the C# 5 syntax then writing a slightly shorter version of that. What value does that give you?
i've got a little something for you http://www.robmiles.com/c-yellow-book/
Not wanting to duplicate code / rewrite functions would be a nice one. Ex.: you have a clustering method that clusters certain objects based on a similarity function (that gives results between 0 and 1) but you want to use it for other objects as well. Let's say its definition looks like this: public Clustering ClusterObjects(IEnumerable&lt;MyClass&gt; objectsToCluster, double similarityThreshold); You might copy-paste the original, duplicate the Clustering class for the other type replace the types and replace the similarity function... or you can rewrite the Clustering class and the core of the clustering as public Clustering&lt;T&gt; ClusterObjects&lt;T&gt;(IEnumerable&lt;T&gt; objectsToCluster, Func&lt;T, T, double&gt; similarityFunction, double similarityThreshold) This is just one example. It's also useful for implementing your own data structures when the actual content is less important than the structure and the functions to manipulate it. Sometimes the Microsoft-provided structures are insufficient for your uses. For example, if you want to implement a 2D sparse matrix, you can use a Dictionary&lt;Tuple&lt;XKey, YKey&gt;, ValueType&gt;, but all the "new Tuple&lt;XKey, YKey&gt;(xKey, yKey)"-s would get tiresome. Much easier if you just make something like public class SparseMatrix&lt;TXKey, TYKey, TValue&gt; : Dictionary&lt;Tuple&lt;TXKey, TYKey&gt;, TValue&gt; { public TValue this[TXKey xKey, TYKey yKey] { get { return this[new Tuple&lt;TXKey, TYKey&gt;(xKey, yKey)]; } set { this[new Tuple&lt;TXKey, TYKey&gt;(xKey, yKey)] = value; } } } which then you can later use as: var sparseMatrix = new SparseMatrix&lt;XKey, YKey, ValueType&gt;(); sparseMatrix[xKey, yKey] = value; etc... Generics are also fairly useful for extension methods. Again, when the data itself doesn't matter, just the storage. public static List&lt;T&gt; EvenItems(this IList&lt;T&gt; list) { var output = new List&lt;T&gt;(); for(int i=1; i&lt;list.Count; i+=2) output.Add(list[i]); return output; } And this is just the tip of the iceberg. You can also implement an API client, a wrapper for other APIs that use generics... they are incredibly useful!
Just use your imagination-- I'm sure it'll be close. The stereotype fits.
I'm a terrible artist so there was always a 90% chance you would end up as a blob with eyebrows anyhow. I am doing this haha. I'll send a new comment when I am done.
Update: OP fired.
And then there's Reactive Extensions... 
Yes, you can. It's a terrible idea though. The code complexity that would be introduced by trying to use new and old language features at the same time, using #if to decide what code is compiled, would vastly outweigh the benefits provided by the new language features. Perhaps you don't realize that you can use VS2015 to write code that targets older framework versions down to 2.0? There is no point in writing code that compiles both with VS 2015 and VS 2013.
I ran a very simple benchmark and so far AutoCompare is really fast : https://www.reddit.com/r/csharp/comments/3kwymz/autocompare_a_simple_and_fast_object_comparison/cv3jjy3
I'm 26 and I have been developing in .Net for nearly 3 years. I didn't learn .net until I got an internship at a small computer shop that also did websites. I was responsible for a web app used by a realty company and was definitely way in over my head. It was mostly a completed web app when I started on it, and it was written by a fairly experienced developer and was decently organized. I mostly did bug fixes but did add some new functionality..and introduced more bugs in the process. Did I mention we had no source control, no QA, no code review (I was the only programmer there, keep in mind I had 0 experience prior and only had done some java\C in school), oh and my 'testing' was all done in the live production environment. I did learn a lot on the job, but I knew that I was still missing a huge chunk in a work environment where I was the only developer. I was eventually able to find another job in which I was able to work under a much more experienced developer which has benefited be greatly. One thing I can tell you is that as a .Net developer, you won't ever find yourself just writing C# or VB.. in fact you probably shouldn't ever find yourself writing VB :P. At my last job I also wrote a lot of javascript, sql, HTML, and CSS, while at my current job I also write a lot of C++. Once you learn one language it is a lot easier to pick up another. As other people have also said, Visual Studio is seriously awesome. I have used VS 2008, 2010, 2013, and 2015 and every release just gets better. C# 6 also brought a lot of interesting features, like string interpolation and null-conditionals which just make your life a little bit easier. 
Thanks for the heads up.
Alright thanks, I'll look into the CLR as part of my cramming!
Yeah, I was planning on running through some katas pretty much all day tomorrow just to get a little C# under my belt. 
I'm currently making the jump from Java to C#. Will start a job in C# soon and wanted to prepare a bit. I'm only a few days in and mostly learning by reading and doing projects. I picked "C# 2013 Step by Step" instead of the resources listed on the right sidebar because it's a little more geared towards programmers switching to C#. Here's a few things I discovered during my learning process so far: * While syntactically similar to Java for simple stuff, there's actually lots of differences to trip you up: async programming, ref/out params, class visibility, namespaces, **collections**, linq, etc. * I have to search google for how to do simple things. Like filtering a list. Because I don't know the idiomatic way to do it. This slows down my programming speed a lot. * You basically need to learn the Visual Studio IDE in addition to the language. Switching an IDE is also not trivial and you'll miss a lot of shortcuts and things you were used to. * I have no idea how to structure my C# projects. In Java, the structure is easy. src and tst top level folders and packages the way down.
Posting a thread on here saying do this for me will get you nowhere. Try building this on your own and post any problems you run into with code samples. It honestly sounds like you're asking us to write your homework for you.
Happy cake day!
I dunno man, cakedays after a couple years are like birthdays after 21. 
Always type it out, never copy and paste. You can't commit copy pasta to memory. To add to his post, as you go along add some functions you learned in previous tutorials. Suddenly your silly guessing console game has a rainbow of colored text and taunts the user with strings complaining that the user was "Too stupid to enter a double. My number was 53.42. Dare you try to guess again?" after 7 failed guesses. At least, that's the kinda crap I used to entertain myself through tutorials coming from other syntax in the heavily "review" portions - although things are always a bit different between syntax even in those boring early lessons.
&gt; But without generics even Microsoft couldn't create any list classes without tediously implementing the API for each type of object contained. Actually, the original approach, for arrays, was *element typing*, which is a form of parametric polymorphism (limited to arrays); for container objects, they upcasted types to `System.Object` (boxing value types in the process). This allows for reusable container types, at the expense of compile-time type safety and requiring runtime type checking and casting. This is essentially the approach taken by Go, as well, since it doesn't (and probably never will) support generics or templates. 
Hey I have been looking for something similar to this except I am looking for more very large frameworks/engines that are good examples of following good design patterns and basically just good code to look at. We are designing a large scale framework and it is hard finding good projects that are not just libraries. One good example project I have used is https://github.com/OpenRA/OpenRA If anyone can point me to other projects that would be awesome
at least you got the money, my first freelance project ended horribly. I was asked by a good friend of mine of help out a friend of his on one of the company project. I only agreed to do so because I don't want to leave a friend when he/she is in trouble. The company where the other guy works at , was a total shit head. At first, they gave me 4 very generic requirements, no documentation what so ever, even said that i could implement the UI in anyway that i want it, as long as it is not too ugly and unusable. But then 2 days later they slapped on an UI design that came with like 5-6 more extra features that were not mentioned when we first agreed on the project. Still no helping document what so ever. I kept my cool and still tried to roll with it. But the last straw to pull, was their attitude when facing questions of documentation from my end. They asked me to implement some sort of help files, i didn't know what it was, so i asked them what it was, simple right? Their answer, in the other hand, filled with disgust, was simply a statement of "use Google for that". I mean, i was brought into a project that has no clear-cut requirements at first, no helping documentation whatsoever, was forced to comply to extra features that i didn't agree on, without any kind of time or money expansion, and then got asked to do the researching on THEIR requirement on my own. I wasted 6 days, even worked through my vacation to help a bro out, wrote more than 1000+ lines of codes, to get a disgusting look from the company who needed my help for not researching about their own requirements and ended up with $0. 
I know there's no hard and fast rules here, but asking us to do your homework for you is a bit much. Make an attempt and ask questions about specific difficulties you encounter. Until then, this post is removed.
Right but my point is it's not really something that matters in a technical interview. Most technical interviews allow you to solve problems in whatever language you want. And you're perfectly allowed to say "I don't know how to do that in C# but in Java I would..."
Nah man, he has to dedicate more time to counterstrike global offensive.
I'll do it for 100 bucks and the email for your professor.
lol, yep... basically start with Google.
* C# primatives and structs are value types, which means when you pass them as an argument, the whole structure is copied and passed rather than just a reference pointer. * When a value type is stored as a reference type (Object obj = myInt;), there will be an automated boxing operation. Unboxing is done when converting a reference type back to a value type (int myInt = (int)obj). * Primitives are their own types, meaning they don't inherit from Object (hence boxing/unboxing). * Unsigned integers exist. * String is a built-in data type and you can directly compare using ==. * You can use Properties instead of getters/setters. Difference being that you can assign to a Property like you would a normal class member. It's just syntactical sugar. Auto-properties are nice. * Generics are covariant and contravarient starting with .Net 4.0 * Generics are reified instead of type erased (Java). You can read the differences [here](https://en.wikipedia.org/wiki/Comparison_of_C_Sharp_and_Java#Type_erasure_versus_reified_generics). * You can call new T[] without the compiler complaining since every array implements IList&lt;T&gt; at runtime. * List is the generic, type-safe, resizable array. ArrayList stores everything as Objects and is almost never needed. There's plenty more, but you'll learn most of it while working with the language.
The [possible duplicate link](http://stackoverflow.com/questions/550703/c-difference-between-anevent-and-new-eventhandleranevent) at the top links to a post that makes it event simpler: &gt; &gt; What is the difference between the following ? &gt; &gt; [object].[event] += anEvent; &gt; &gt; //and &gt; &gt; [object].[event] += new EventHandler(anEvent); &gt; There is no difference. In your first example, the compiler will automatically infer the delegate you would like to instantiate. In the second example, you explicitly define the delegate. &gt; Delegate inference was added in C# 2.0. So for C# 1.0 projects, second example was your only option. For 2.0 projects, the first example using inference is what I would prefer to use and see in the codebase - since it is more concise.
I'm on the wrong side of 30. My early 20's were fun, but honestly having money and all that stuff is pretty alright too. 30 is the new 18.
I'm pretty sure generic variance was added in .Net 4.0 unless there's some part of it that was not added until later.
&gt; This is a very WinForms way of doing things, and IMO it's best left in the past. Hear, hear!
WinForms is entirely irrelevant to your question. User-specific application support data should always be stored in their individual AppData directory (`$env:HOME\AppData\{Local,LocalLow,Roaming}\$DeveloperName\$ApplicationName\`). If a user wants to copy their data to another computer, they should copy the relevant AppData directory to another computer. If this dataset needs to be shared and should be able to be changed by multiple users, it should go in `$env:SystemDrive\ProgramData`. If it's pre-generated by the developer and is never changed (except through application upgrades), then it should live with the rest of the program files in `$env:ProgramFiles` (or `${env:ProgramFiles(x86)}`). In all cases, yes, the dataset can be copied to another computer, since it's just a file. Unless it's been encrypted and tied to a particular system.
+1 for configuring it as an HID device if your use case allows it. We deal with a lot of barcode scanners, and all of them that I've dealt with have the "Keyboard Wedge" option. 
Not sure if you've looked further into this yet, but yeah, you can reference PCLs from regular class libraries (unit testing projects included) and do your testing there. AFAIK Castle.Core (and whatever similar libraries are out there) tends to not compile as PCLs because of the lack of System.Reflection.Emit in the PCL subset.
On the SetDecodeBuffer, what's the "unsigned char *pData" ? Is it a byte array or a a zero terminated string? Edit: I think I found the SDK for this ( https://atgsupportcentral.motorolasolutions.com/content/emb/docs/manuals/5986004a.pdf ). I think the issue may be how your creating the pData byte array and handing it to SetDecodeBuffer. I think there's some special Marshall commands for creating memory that won't be touched by garbage collection and other things, specifically designed for this scenario ( Marshal.AllocCoTaskMem or something). I seen it happen both ways. In one case, my c# variables were being freed while the C runtime was trying to use them, in another, the data passed to me by the C runtime was a stack variable that was freed after calling me, so I had random access errors, depending on how fast I accessed the data. 
C# is "nice to have", but my recruiter basically told me do nothing but study C# and brush up on SQL" so that's been this week's goal I decided to just start running katas non stop for now and probably will continue until my interview. It's been a little bumpy, especially since my previous dev work has been mostly ruby in recent months, but I'm shocked at how much it just feels like java with some different keywords. I'm far less concerned with SQL as I teach our boot camp class on it
it was AnyCPU, ill try only x86 now. Thanks! Also, im trying to not use the usb hid option. I want my application to be able to tell the difference between keystrokes and scanner input. before i was using a low level keyboard hook with HID emulation, then i tried raw input hooks so i can tell the difference between a scanner and my keyboard. The SNAPI interface is much cleaner and doesnt require my scanner input control to accept keyboard input.
Well for me it certainly feelt like Java at the beginning. Now C# is C# and Java is an unpleasant, dated language that unfortunately does not have enough in common with C#. 
im not marshaling the data in the buffer at all. Heres what im doing: var dwparam = Marshal.PtrToStructure&lt;DWPARAM&gt;(wParam); // checks the buffer state if (dwparam.low == 3) { // gets the utf7 encoding for the buffer at the length passed by the dwparam var decoded = Encoding.UTF7.GetString(decodeBuffer, 0, (int) dwparam.high); // trims the first two chars var trimmed = decoded.Substring(2); RaiseMessageReceivedEvent(trimmed); } ive tried it with a fixed length without any marshaling and there is still an issue. edit: Heres the documentation ive been using (motorola scanners have been bought out by zebra) https://www.zebra.com/content/dam/msi-new/assets/web/Business/Products/Bar%20Code%20Scanning/Bar%20Code%20Scanners/Fixed%20Mount%20Scanners/MiniScan%204400/_Documents/Static%20Files/SnapiProgrammersGuide_7137001.pdf
To be fair Java does have much more powerful enums. Good luck, by the way :) 
Feel free to copy my comment on the blog, not really in the mood to login and comment there ...
It's been awhile since I had to write interop. From my perspective, you're marshalling the memory set aside for the decodeBuffer into the C DLL, where it's then filled from the serial port, and the call is returned. If at any time during the 'fill from the serial port' C#/.Net does something with that decodeBuffer allocation ( moves it around in memory ), the C code will blow up trying to write to a pointer that no longer exists or is allocated. 
Sounds like self shunting might also be appropriate here to verify the correct behaviours http://www.objectmentor.com/resources/articles/SelfShunPtrn.pdf
If anything throws any exceptions it'd be good to add unit tests for that too.
Mouse automation sounds like you're going to have to start making Win32 system calls and some other tomfoolery. If you're going about learning WPF, maybe start even simpler. Make your run-of-the-mill contrived calculator/banking/cashier application to get a sense of GUI, XAML, MVVM, user interaction concepts. Maybe google around for "WPF Tutorial" and give some of them a shot.
There used to be different flavors of Visual Studio - "Desktop" and "Web". Did you install one of those?
I use [SendGrid](https://sendgrid.com) for all my outgoing mail. It comes with great reporting tools and an API (although you can use standard SMTP if you prefer)
By `anything`, you're referring to the test subject, right? If I'm testing a method like `public void Run() { a.X(); var val = b.Y(); c.Z(val); }`, I usually don't verify exceptions thrown by a/b/c bubble up to the method caller.
Interesting... but would it be more efficient to build the code around WPF?
https://gist.github.com/davidfowl/ed7564297c61fe9ab814 this may help with the folder structure at least
Thanks! That'll probably be pretty important
Think of WPF as just a Console Application with GUI. They both have access to the exact same functionality (other than UI differences).
Asp.net is a portion of the .net framework?
sounds good. it seems like the same server would do for now. since i doubt this will even get past 100 images anyway. lol. thanks!
how much space does it take? i use postgre with my mvc app
Having worked at a place in the past that had this feature ... I hope you have a good way to deal with porn, and overly large images, and files with .jpg extensions that aren't jpegs, etc. etc. Do NOT trust user uploads. 
My stuff is generally running on AWS, so I use [Amazon's SES](https://aws.amazon.com/ses/). I don't think i've ever exceeded the free usage tier for it. 
`a`, `b` and `c` should be mocked, so they could not even throw an exception. What he meant was exceptions thrown by the method you want to test.
Thanks. This is the first time I hear of shunting. Looks like something I'll start using. 
Why not? :) 
To add to the previous reply, if your primary concern is learning how to use threading appropriately then there are plenty of use cases that are right for that (building anything with a UI that you want to keep responsive for one) without trying to shoehorn in threading where it perhaps isn't appropriate.
holy crap I did that.
This summarizes the point I was getting at - you test your subject in isolation. If your subject doesn't expect exceptions to be thrown by its dependencies, then you shouldn't be testing that. The example method I gave has 1 code path. With exceptions, 4 code paths. You only usually test 1 code path. Otherwise, you're sort of testing whether the compiler works (by bubbling exceptions) as opposed to whether your code works.
Google has a message cap in a day... I think it's about 1000. Also in the last year or so they have put in security settings that you need to check to allow you to send the mail with a new address... to the best of my recollection from the recesses of my mind.
Look into pinvoke, Windows API: Virtual Keys, SetMousePos, SendMessage. It's a good attitude to have, but be aware that CCRed only posted 1 actual line of code that matters - the rest is essentially boilerplate.
Much appreciated. I'm happy about the progress I'm making when learning C#, but debugging is still a mystery for me. I hope that this video will explain the core stuff. 
also http://www.asp.net/ and https://channel9.msdn.com/ have good material for learning. https://code.msdn.microsoft.com/ for some samples Visual studio IDE is free (Community edition) https://www.visualstudio.com/en-us/products/free-developer-offers-vs.aspx EDIT: And prepare to spend a lot of time searching SO - http://stackoverflow.com/questions/tagged/c%23?sort=featured&amp;pageSize=15 
Haha, yeah, I always keep a few videos lined up for times like that!
I'm getting 7...
I assume the bug relates to the breakpoint set for j=6.
"bug".
meh. VS shouldn't have accepted condition with non-bool return type. On the other hand it doesn't have comma -operator so there's no other way to have clean side-condition in breakpoint (except maybe something like ((a = b) != null || j==6).
Exception filters are not syntactic sugar in cannot be done in C# 5.
Yeah just create a new full framework project and reference your PCL. Then use Moq or Rhino or whichever you fancy.
Thanks. Are you saying I shouldn't bother testing these methods? The method is indeed part of a wider process and I was going to create a new discussion specifically for that topic: methods that don't return anything and mostly do 3-5 database calls, depending on parameters, conditionals and so on.
Well, like most things with development, it depends. Test the things that it makes sense to test. I'm sure you probably wouldn't write tests for property getters to test that if you call the getter it gives you the value. However, you might write a test to check that if you perform some action that the property depends on that the property getter returns what you're expecting. It's all about testing the things that are defined units of functionality rather than blindly writing tests for every method you have. Only you can really make that call. Happy to provide some examples if it helps as I probably haven't explained myself brilliantly here!
I really don't know why this was downvoted. It was an interesting bug and I didn't know visual studio allowed you to put assignments in your breakpoint condition. I would have been very confused as well.
Lots of other advice already but you may also want to take a look at how [miniblog](https://github.com/madskristensen/miniblog) by Mads Kristensen works. It may give you some ideas, I rather like the idea of storing posts in an XML file rather than a DB but has a lot of other useful blog features.
I can't comment on whether or not it's a "good" example to study as I haven't dived into it, but [voat.co](http://voat.co) (basically a Reddit clone in C# ASP.NET MVC 5) has its [source code available.](https://github.com/voat/voat) EDIT: Perhaps it's not the _best_ example, see comments below.
Is angular a prerequisite to creating SPAs? Sorry if this is a noob question. Aside from WebAPI, what other tools do I need to use? Can I use Razor instead of Angular? Can I use bootstrap to create my entire SPA front? 
A perfect example! Thanx man
You don't need angular specifically but you need some sort of client side templating. I prefer knockout myself. These will pretty much take the place of razor. Razor does server side rendering so it's not good for SPAs. Basically your front end will be html + css + javascript, probably with some css library like bootstrap and javascript libraries like jquery + angular/knockout. .net would only make up the back end and IMO is a great choice, but it's a choice you can make separately from making an SPA.
I'm not familiar with backbone specifically, but from a high level perspective they should work together just fine.
I have discovered this book &gt;&gt; http://www.amazon.com/Pro-Single-Page-Application-Development/dp/1430266732/ref=sr_1_3?ie=UTF8&amp;qid=1442528608&amp;sr=8-3&amp;keywords=single+page+applications It looks fantastic, it uses BackboneJS. I am reading it now
Test with exceptions only if your handling exceptions.
If the unit under test is doing something to handle the exception then that's a code path that should be tested.
The only caveats (from a quick look) are that Voat seems to use an Entity Framework EDMX model for its ORM mapping which is going to be deprecated in EF7 and the controllers tend to abuse ViewBag instead of using view models. In my opinion this is a bad habit and not something that you want to do a lot of in practice. They make really nice use of async/await, at least in the controllers I looked at. Definitely a good example of the type of thing you might see out in the industry. 
&gt;I have a lot of methods that take some arguments (let's call them M), validate those arguments (throwing ArgumentNullExceptions and what not) and do a database call. That's it. If that's the case then unit testing is probably not worthwhile. Unit testing is useful when there is logic to test. No logic, no tests. 
By asp.net, I imagine you mean asp.net MVC. (WebApi is built on asp.net)
Ask for clarification. 
https://code.msdn.microsoft.com/
Alright, I'll be talking to the instructor then. 
See my reply above. Don't use the vote.co source as an example of best practices.
Any suggestions? I would like to open up a complete project and delve deep in it. I feel it will create connections of ideas, awareness of components, and help with understanding.
The worst part is that the assignment happens without the breakpoint being "hit" in the conventional sense so the code simply runs straight through and produces an unexpected result :/
What's wrong with having business logic in the controllers? 
hey, using this topic to ask a question is it worth (and why - I understand the concept of creating a layer between the data and the business logic) to implement [repository pattern](http://www.asp.net/mvc/overview/older-versions/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application) in my 'simple' MVC projects, or is it something i shouldn't bother with? note: i use something like this @work, but with web forms + nhibernate, and other things (castle windsor for example), but I was wondering if it's a common thing
I believe if you want to use that logic somewhere else, you can't. I normally have all my logic in services that I inject into my controllers so I can reuse it. 
Voat is not a good example at all. The controller actions are massive, ViewBag is used everywhere, huge try{} blocks... I just looked for a few minutes and could find many anti-patterns. I'm not saying everything is perfect in my own code and I know that corners need to be cut in the real world. And if it works, then good for them. But it's just not a good code base to look at for guidance.
You need to override the .toString() method for the Customer class. https://msdn.microsoft.com/en-us/library/ms173154.aspx Just a couple of notes. You don't need to pass the entire customer array to your DisplayCustomer method. Just pass the single customer object you want to display. You should also use a List rather than an Array. Unless you know exactly how many customers you're going to have, a List makes more sense. I'm not sure if this is a preference thing or not, but it's what I do. I would split up your Program class and create another that contains just your main. That way you don't have to make everything static. Your main function can just look like: static void Main(string[] args) { Program myProgram = new Program(); myProgram.start(); } In your getDecimal function, can you just leave data as null? Hopefully I didn't mess up. I've been doing a lot more java and I almost wanted to tell you to use string.equals() rather than ==. I would also consider moving customer to be a field.
Regarding the extra square: look into `colNum &lt;= boardSize` - if you're setting colNum to 0, then you're iterating from colNum = 0, 1, 2, 3, 4, 5, 6.
Yup it's OK I figured it out. I was trying to set it to 1 so I would only get 5 squares. Thanks anyway!
We are digressing here. The article states that with GOTO you can do anything. And that's the point. We don't want to be able to do anything if a limited foreach or linq suffices. Also the article states that the examples shown are artificially short. All your labels become a menace if the loop body stretches screen after screen.
As a finnish developer, I've felt a great urge to go and punch the people who decided that changing these separator characters was a good idea :) I understand that the original bug is somehow related to the framework, and I'm glad that they are patching it, but still, all this could've been avoided if some linguist dude would've just let things be, the way they were.
Sorry to hear that! Please could you email me via flingos@outlook.com with the issues you had so we can get them fixed. It shouldn't require any Nuget packages(?!) and the exe's should have been included in the repo so please do let me know what was missing. Many thanks, Ed Nutting, Founder of FlingOS [Email received - thanks for the feedback. We'll get those issues fixed ASAP.] [Merged master into develop (some changes hadn't gone through the proper workflow in our runup to launch) which should now fix some issues]
Have a look at the MSDN article on [securing connection strings.](https://msdn.microsoft.com/en-us/library/89211k9b%28v=vs.80%29.aspx) Since you've mentioned SqlCommand you must be using Sql Server. There are basically 2 approaches: 1. Using integrated security removes the need to store password and lets you take a declarative approach to security. It increases the operational overheads though as you'll need to set up windows users and groups with access to the SQL server and database(s). 2. Using Sql security principals. Create one or more server logins for your software. Then create user(s) in the database(s) and map the login(s) to the user(s). You can then assign privileges to the users in the database. There are some useful roles already built in to Sql Server which also help. If you use the 2nd approach, you can encrypt the connection string settings of your config file when you deploy it, but ultimately there's going to be a development version of you config file(s) with plain text passwords - hopefully only to a development version of the database. It's up to you to secure that as best you can. The goal is that when the config file is deployed for the production or live database it's encrypted to hide the passwords and other sensitive information from plain view. 
That is godawful! I can't think of a single case where doing an assignment in a conditional breakpoint would be useful. And why would one accept an expression that doesn't return bool anyway?
First off, SQL injection on heavy clients isn't a common attack vector. It's possible, but it's much more difficult when you don't have the postback to hack. That said, you should always write the safest code you can. If it's at all possible, move to a framework that handles this for you. Entity Framework is great, and by default it's going to protect you from the biggest SQL injection vectors. Failing that, try to wrap up everything into Stored Procedures and use CommandType.StoredProcedure on the SQLDataAdapter. This will prevent any passed in text from ever being treated as SQL. Always constrain and sanitize your input. If you find yourself concatenating to a SQL query, you're doing it wrong. Stop and find out the right way to do it. Also, from the begining, lock your account out of SQL Server. Start with the minimum security, and add what you need. Your users should only have the lease permissions necessary to the DB. I make a living out of cleaning up crappy software people write for large corporations and then disappear or are fired. It's about a 99% chance that these things run with DB owner. Don't be one of those guys.
Indeed, that's like saying fruits are obsolete because of smoothies.
Not necessarily an _empty_ try-catch. For instance, in response to reports of "file not found" errors, a developer would transform: return File.OpenRead(_config.FilePath); into: try { return File.OpenRead(_config.FilePath); } catch (IOException) { // File is not available, resort to a fallback stream Trace.Log("File path not available, using default."); return new MemoryStream(DefaultBytes); } This looks sensible, and it's the kind of thing that even a good developer might do after expending brain power on implementing `DefaultBytes`. And then, `_config.FilePath` actually performs lazy-loading of the config file upon first access, and when the configuration file is missing, instead of getting a clean "no config file found", you silently get the default data. 
I agree with that the example on closures is a bit confusing. 
Break your task down further, into its individual steps. A web scraper is essentially a dataflow pipeline consisting of three fundamental stages: input (downloading each page), processing (extracting data, transforming it, generating final form), and output (serializing the final output to disk or wherever). It's easiest if you model each step as its own individual type, as it will allow you to much more easily add or remove steps and stages of the pipeline as needed, and will help keep your logic clean and well-compartmentalized. Create interface types common to each stage: a download interface, a data processor interface, and a storage interface. Instead of creating base classes, use *composition* and dependency injection where possible. Use TPL Dataflow, it is seriously awesome. Hopefully this gives you some ideas to help you get started.
It's the combination of the two, I think. Closures essentially generate a new class at compile time that captures the state of the method, along with the lambda.
So would you stick the bulk of your logic in your entity models or would you put it in a view model/some other class? I was under the impression that entity models should basically just consist of a list of properties. 
I like your proposal but isn't that much more geared towards a "general solution" that is scalable/modular? Should you always work on something so broadly? Downloading the HTML is 5 lines of code, the storage isnt much more, the main piece is the parsing and that piece has to be different for each site so I'm still back to trying to understand how to structure that part of the code. So Im guessing create an Interface for the processing part as both the input and output part are identical?
I would recommend a javascript book. It's closures all the way down. Since reading one (like "The good parts" or "Patterns in Javascript") you wont have a question about closures ever again. :)
Good architecture is good architecture, regardless of project size. The main point is that you don't want to shove all your logic and state into one class and then rely on huge blocks of conditional statements, because then you'll be tempted to make things interdependent, which will make your code much more complex and harder to debug. The architecture I described makes asynchronous operation *much* easier, and enables each 'operation' to communicate via message-passing rather than shared mutable state. FYI, this is the same general architecture I'm using in my own scraper, and is based loosely on scrapy's architecture. &gt; Downloading the HTML is 5 lines of code You need to take into account rate limiting and throttling your downloads, otherwise your system's gonna get blacklisted as a bot. Also, you need to consider caching, in case your set of input URLs contains multiples of the same URL, retrying on download failure, making sure that a network failure doesn't kill your application, etc. It's not nearly as simple as you might think. Let's not even talk about crawling. &gt; both the input and output part are identical The input and output might both be HTML, but they're different operations. Input requires downloading via an HTTP client. Output requires writing files somewhere. Those are separate and distinct concerns and require different functionality.
Looks like I'll be buying ReSharper 9 before Nov 2nd.
IMO it's better to avoid side effects in LINQ expressions and use a real `foreach` loop.
My point was that the `delegate` keyword is largely useless now that we have Func and Action (except when you need out/ref parameters).
Well I didn't want to make my code with lots if if-statements hence why I thought inheritance or similar would be good ie class Scraper class SiteAScraper: Scraper class SiteBScraper: Scraper and so forth, where each class just contained the logic for the scraping of that site, seeing as all the sites are HTML, all the sites give the exact same types of data which will all be joined (just the sites display that data differently so scraping is different for each site). &gt; You need to take into account rate limiting and throttling your downloads Oh yes, I was going to make a sort of queue/scheduler thing for that which was not part of the scraper itself which took care of that, retries and so forth. &gt; Let's not even talk about crawling. I got that kinda done already for a couple sites to test, that's actually the easy part as it's very specific things I'm looking for in very specific places which contains deeper links that I can identify. So that is actually the easy part. &gt; The input and output might both be HTML Sorry I think my bad English shone through, I meant the input and output parts are identical for all sites, not what they actually do. What I meant is all the sites give you HTML (input) and the scraped data will all be saved the same way (Im getting the exact same type of data from everywhere). I guess my original post was a bit light on information, what I was considering when I wrote scraper was probably only the bit of code you call the processing interface. I'm aware I will need scheduling/throttling, retries, checking etc. 
So we agree? To make capturing a scope meaningful you need a reason to capture it. An anonymous function is that reason, so they go hand in hand. I should be fair to admit that I stole the definition from Martin Fowler ;) 
Interesting. Price isn't a huge concern, but I am intrigued by Table Storage. I just need to be able to store results and dump them to a file through an admin interface.
The maintainers of java are strongly against adding anything useful because that'll require them to think, and do their work. urinal corp doesn't pay people to do their work, only to maintain the status quo, come up with the crappiest possible workarounds instead of real solutions, and convince java devs that it's "just fine". That's why java is the most pathetic language currently in use, even surpassing PHP in some areas of patheticness.
ReSharper's default behavior is to complain if you aren't using var. I actually think var is nice as it let's you focus on more important aspects of the code. But it will require a good IDE that can help you expose the type information to the programmer when really needed. 
Is this from a schoolbook?
Many people (me included) would argue that java generics are nothing more than syntactic sugar.
&gt; As for "In your getDecimal function, can you just leave data as null?" A Decimal isn't a nullable type. &gt; Decimal is a value type, not a reference type. Thanks, I was half asleep in my computer chair at the time and knew something wasn't right about that! 
&gt; I think he means that you would never use the keyword in your own code. I know what he means, and he's wrong. When the built-in Func, Action, and Predicate types don't fit your needs, you need to declare your own delegate type. Most .NET devs who are just doing ASP.NET, WPF or stuff like that likely won't need to declare custom delegates, but many of us *do*.
I played around with table storage for the first time a few weeks ago. I think I was up and running in like 30 minutes. So learning curve isn't too bad either. 
I think you are right (you seldom need to write your own delegate today), but don't you agree that you need to understand what a deligate is to fully understand Func and Action? 
I actually see C# as Java redone from scratch, particularly as Microsoft started the project around the same time that a judge told them they couldn't have their own Microsoft flavour of Java.
Did you bother to research "factory pattern"? Let's say you have an interface `ICar` and two subclasses `Honda` and `Nissan`. You also have a factory class `CarFactory` with a method `MakeCar ( String model )` class CarFactory { public static ICar MakeCar( String model ) { switch( model ) { case 'Honda': return new Honda(); case 'Nissan': return new Nissan(); } } } This is just a crude example to try and explain factory pattern quickly. This is not how you would want to implement it since it violates other principles. 
One reason, is that you can make tests and whatnot in the function, and if they fail you can choose to return null, instead of creating an object.
I agree, but despite Microsoft's effort to open source parts of. Net and C# vital parts are still missing. They need to make it all open and free in order to totally remove Java's reason for existing. 
what "vital parts" are "still missing", please?
Another, is that you might have a singleton-like situation, where you want just one instance of a class. The function could then check if the instance has already been created, before then returning a static reference it has.
Thanks for the reply :D 
I did not "bother" because it never occurred to me, but I do like this model --thanks for sharing :-) I will go research and get more edumacated.
Both of these make sense; I especially like the idea of returning null. Thank you!
In the case of the Factory Method, the designer only ever wants the class to be instantiated through the factory. By only providing the single private constructor users are prevented from trying to instantiate the class outside of the factory method, which may do some complex operations in order to establish the initial state of the object. If those computations needed to be changed, you can do so inside of the factory instead of having to re-work the class.
If all you want to do is to make sure just one instance of an object exists, why not mark the class as static? 
That sounds perfect! Thanks, ill look into it a bit more especially the IOC container part as ive never dealt with them, but the strategy pattern was pretty much how I envisioned it.
Cool, glad it steered you in the right direction! It's something I use quite often, for example sending push messages to various mobile platforms based on platform. My preferred ioc of choice is castle windsor which is really powerful and has been around for years, have a look at it. If you need any further help with actually implementing this or an example send me a pm, you can do that with reddit right?
&gt; Implicit interface implementations (where you provide a lambda and the compiler implements the one method interface for you) That's largely irrelevant in C#, and is rather a retarded hack that java implemented because they lack delegates. See, what the hell would I need a one-method interface for if I can simply use `Action&lt;T&gt;` or `Func&lt;T&gt;` and be done with it? Oh, btw, since java's generics are also retarded and useless, their version of that doesn't even work with for example `int`, you know. And how is java's pathetic workaround to lack of extension methods any better than real extension methods, please? Oh, btw, if you have `void Foo(Func&lt;int&gt; myFunc)` in C# you might as well just do `Foo(() =&gt; 5);` and the compiler converts the lambda to `Func&lt;int&gt;`, therefore C# already has that, just much better and with proper generics. java is useless.
Method extensions != default interface methods Method extensions are useful to include behaviour in classes you don't own. Default interface methods are useful to enrich your interface abstractions. 
&gt; Default interface methods are useful to enrich your interface abstractions "enrich"? - LOL. How does java's pathetic malformation "enrich" anything? java is the poorest language I know of. Even poorer than PHP. Please show me how the java approach is somehow "better" with a real, practical example, please?
One reason is that you might want to enable fakes/mocks for testing. If it's completely static it's basically not going to be replaceable in any code that calls it whereas if it's not static, you can use dependency injection to initialize the code that calls it (which has additional advantages like making dependencies in code more explicit ... which you can trade in partially by using an IoC container, but then you may not need a factory method). This could be important if you really need the calls to the API to be completely independent of the state of the Singleton (which may be different depending on the order of the tests, and so on). Though if something is a singleton (shared state), you could argue that shared mutable state affecting anything is probably bad ... but yeah. Furthermore, you might later on decide to decorate a singleton / use AOP (that is, add functionality/capabilities like logging to calls inside of a particular class without changing the behavior of code you don't want/need to be decorated). Not advocating for always using one particular method, but there's a few reasons.
I miss delegates
Thanks for this, I will read it more thoroughly tomorrow. I was meaning to ask about this , because at this moment I have my db connection as a string in the project and was thinking that there had to be a better way. 
This is where my paranoia kicks in, if someone can just open a file and see the login information. As a user above here ( I'm on mobile) suggested , it's possible to put it in a separate file and encrypted. Will this solve what you are saying ? I haven't read it all as I'm not home yet. Thanks for the feedback. 
But how else would you do it if you need to store some basic information that is shared with others using the program?
Absolutely correct.
yes. That select could be changed to pull form any table instead of where you wanted, or worse, you can use some of the SQL server SP's ( xp_cmdshell for example, although it's pretty locked down these days) to run commands on the machine, maybe add a new user from an Admin level process. Imagine that aVariable conainted a semi-colon. Like "* from users; exec xp_cmdshell 'new user blahh blah /add';". You concatenation would end up executing 2 commands. the first, pulls all users ( maybe with passwords, assuming the table is called users, if not, we can pull from sys first and discover the schema ), and then second, it executes a cmd shell operation on the target SQL Server. Now, lately, getting xp_cmdshell to work even when you _explicit allow_ it, is difficult. But it's still an easy point to explain the inherent weakness of cat'ing in a var to a SQL statement. 
For statements are nothing but syntax sugar... No no, let me rephrase that... *Java* is nothing but syntax sugar to avoid writing machine code... 
In all fairness, machine code simply adds a simpleton's layer of abstraction over electrical impulses.
&gt; Java is nothing but syntax sugar LOL, NO. sugar is supposed to be sweet, and java is anything but that.
Going to copy/paste my post from the /r/programming thread, hopefully it won't get as burried here and maybe someone at JetBrains will see it: Thats still a 12 month roll back. That could mean loosing compatibility with something, like gulp/js runner compatibility, or latest VS for R#. They would make everyone happy if they just let you keep the last version, but still had a 12 month rule for getting to keep it. So say they release new version every 16 months, with minor updates every month: Proposed system: ===== * If you paid for 16 month subs you'd get version 1, and version 2 (but no updates to it). * If you keep paying, you get the minor updates / enhancements, * If you stop, you keep base v2. Might be buggy, but at least it will work with your tooling * Another 16 months later v3 comes out, you can must subscribe for 12 months to get v3, otherwise you get rolled back to v2 (to prevent people subbing for a single month every new release). * So you end up with v3 and 12 months of fixes, and have paid 1x16 month, and 1x12 month term. Thats more work to save a bit of money, but something individual devs might need to do to make it worth it to them, and they are happy customers. The current system: ===== * You pay for 16 months and end up with v1 with 12 months of fixes, but lose access to v2 (which might mean losing access to important tooling, like VS 2015 support for R#!) * Could be a small annoyance, or could mean you can't use the tool at all with your other software... not a happy customer. * You then re-sub when v3 comes out for 12 months. You keep base v3, but no bug fixes / small enhancements. * So again, you have to deal with buggy software than before and once again, aren't a happy customer as the software now doesn't work as well as it did when your sub ended. Either way that person is paying the same amount, but in one scenario they are happy, in the other they lose access / bug fixes and most likely aren't. **Which of those two people would be more willing to refer others to use your software and re-sub when the next version comes out?**
Reading your question just gave me a revelation about something I discovered recently. When I get back to work on Monday I am going to look at [this guy](https://msdn.microsoft.com/en-us/library/system.data.common.dbproviderfactory(v=vs.110).aspx) and see if that makes mocking easier. Your database class takes one as a constructor parameter, and it uses the factory to create connection, command, and other objects. Then you just mock that and you can really leave the rest of your database access methods alone and only mock the command.ExecuteReader() or whatever you are using. Here's a SO [example](http://stackoverflow.com/questions/1216626/how-can-i-use-ado-net-dbproviderfactory-with-mysql) on its use. Basically you make your class use objects one inheritance level higher (DbCommand instead of SqlCommand or MySqlCommand), and of course you can mock DbCommand fully because these other providers inherit and override it. Anybody else have thoughts on this?
I enjoyed that greatly, and I am not normally a crude person. I like the icons!
And machine code is just syntactic sugar over microcode. :) 
&gt; One reason is that you might want to enable fakes/mocks for testing. That sounds like a really bad idea. If you have the desire to use a mock in this situation, it implies that something is seriously wrong with the design.
Not a lot to go on there but investing time in learning react will definitely serve you well. 
You create a middle tier server that stands between the user's computer and the database. Usually this would be written using WCF and hosted in a website running on top of IIS. (You could also host it inside a Windows Service.) Its a lot of work, but it is the only way to be safe from direct database attacks. (Indirect attacks are still possible, we'll talk about them later.) 
I want to get into Angular JS 2.0 + typescipt. I figured that I can use this time now to learn more about restful api's, data bases, back-end, then when NG2.0 comes out, ill be ready. I am preparing myself for a job, but I see myself learning but not actually making sites for me resume because this is all so interesting. Do you think this is a good idea?
If you are learning about REST, APIs, etc., I would not recommend trying to learn Angular just yet. Make sure you learn and get really comfortable with JavaScript first and then start with libraries like Backbone, Knockout and/or React. They are much smaller in scope and don't have as much magic going on behind the scenes as Angular or Ember do. Then throw in TypeScript. By that time, Angular 2 should be out and you can decide if you want to get into it. 
Thank you for the well thought out plan. After I know 100% of asp.net mvc 5, will introduce myself to web api/restful services. I will then learn javascript well and try out backbone. Then go deep into NG2.0 once it comes out along with TypeScript.
Ey, it's an os almost, I'd say it's significantly different from a programming language.
In most cases it should be ok. Many operations in the library are not thread-safe. If you have a bad case example please post one. :)
&gt; // The constructor is private to enforce the factory pattern &gt; // This is the public factory method. It's in the comments of the code.
Wow. I had a few docs when I dealt with employer, but they as I mentioned before were prepared for those who sit in company, not for me. Also, I received promised money even after I actually didn't implemented project entirely (Only 1 task of 4-5 with no docs). How that could happen?
I don't know. The whole thing was a rush and kinda fishy from the get-go. My friend approached me in a hurry because i am the only .NET Dev that he knows and he was notified about the shortage of devs way late. The company was also in the mindset of only paying when the product is delivered (might be explainable because I am just a stranger that can code to them). I didn't even release the source code that i was half-way implemented to them, not sure if that was a dick move or a good move. The whole attitude of "use Google for that" really pissed me off though, and i am not a person who can get angry easy.
&gt; Hiding the explicit type in the code is not a good thing for readability Yes it is. Use F# for a while and you'll realize that.
&gt; If you encounter a runtime error of that kind, there's something deeply wrong in the code. Yes, the thing that is *deeply wrong* with your code is the fact that its written in java. I could be written in a less pathetic language, like, I don't know... PHP, or B***fuck.
True, we digress :)
I am a C# developer, but I occasionally have to work with java. The biggest annoyance for me is compile errors happening at run time in java instead of at compile time. I build and deploy my code, then try and run the program it will take until that point to tell me that I forgot to put a semi-colon at the end of a line somewhere. What a waste of time! Why does it say build successful? 
For me, the big thing would be LINQ. And maybe having real generics. And automatic properties. And the absence of checked exceptions.
?? Which IDE are you using because the Java compiler complains same as other compilers when there is an error in code - Eclipse shows the errors as it compiles on the fly similar to Visual Studio. 
It seems like you're reasonably new to this. It might be easier for you to look into using a CMS like Umbraco.
I'm new to ASP.NET MVC not C#
It sounds like you're worrying about the wrong things. Build the thing, its going to take a while, then you can try a few options for formatting etc. At the moment, its like you're ordering a brand new car to be built and delivered, and you're asking which is the best method of payment at the gas station. You've got plenty of time before these things are a concern to you, and even then its entirely down to personal preference. As for security, use the built-in security systems and your site will be considerably more secure than WordPress out-of-the -box. Which method you need depends on ii you're going for a standard MVC project or one using webapi and JavaScript binding....again, follow tutorials, keep to the standard built-in stuff and you'll be fine :)
I see. Have you looked into using Razor as a view engine?
I also recommend reading the source code to these libraries, you learn a shitton
Agreed, don't know why people care what the type is.
I used to think var was a problem too since I thought it was hard to see what a variable actually was. I ended up using var everywhere and to give more thought into how i name my variables. Might not be for everyone but i love my vars.
Mocks are a "code smell". Sometimes you actually do need them, but usually they represent on the of the following problems... * Your business logic and storage logic are inappropriate mixed together * You are trying to test storage logic using a unit test when you should be using a CRUD test * You are just being silly and are trying to isolate pure code from other pure code. (This leads to strangeness like testing a CustomerCollection class using ICustomer/MockCustomer objects.) A good use for mocks is simulating the responses of a piece of custom hardware when building a device driver.
I've been suffering through eclipse for a few months, but I've just moved to intelliJ idea and it has alleviated a lot of my java frustrations. I have been compiling with command prompt because that was what the dev that handed the project over to me told me to use. I'm using maven to build and deploy to tomcat so I use the command mvn tomcat7:deploy The output in ps says "build successful" and "deployed to tomcat" at the end whether there were build errors or not. The only time it says "build failed" is when the tests have failed or tomcat is not running. I guessed there would be a way to build this in the ide, but would probably require a day to figure out unlike just hitting f5 in vs. Also, deploying to tomcat only works about 50% of the time, so my ps script actually stops tomcat, deletes the webapp, starts tomcat and the deploys the app again.
Nice work, carry on!
This doesn't answer your direct question but I highly recommend vm fusion or parellels. I use a mac for c# development and fusion is great. I tried to use mono to learn c# and found it a bit difficult than learning on vs. 
I second this. Visual Studio is an amazing IDE and if you get a job writing C# you'll almost certainly be using it so it'd be better to get a jump on learning it. 
Honestly, as an interviewer myself, I would have to see some really solid open source contributions before I'd really get excited about your resume. I'd be concerned that your (presumed) lack of knowledge about the .NET Framework and general .NET conventions/practices would mean that I'd have to train you. If I were you, I'd really try to showcase that I'm knowledgeable about and comfortable with the .NET Framework and using VS. I agree with /u/Waymon206 that using Windows via Parallels is your best option.
I use bootcamp for VS but I keep all my Adobe apps and sublime on the Mac side. It hasn't been a huge problem for rebooting but it's a little bit annoying. 
ad Xamarin Studio: having to work with it every day, it doesn't even come close Visual Studio (yeah, I get it's a pretty young IDE and they're constantly improving, but still...). It's relatively buggy, editor doesn't support C#6 yet, and lacking in features compared to VS. Visual Studio Code is pretty nice for editing code actually (although also doesn't have a ton of features since it's super new).
+1 parallels and also Visual Studio with Resharper, it will get you up to speed quick smart.
Bootcamp. Windows 10. VS2015 community. %100 satisfaction guaranteed. 
I fully agree with you. Literally the only time I use var is when I'm using a LINQ query. It bugs me no end to see var someList = new List&lt;string&gt;(). It goes with your point about intellisense. By using a var VS no longer autosuggests the rest of the code.
That seems to work. Thanks.
You can use mono locally but its limited. You can use Bootcamp but you'll have to partition your harddrive and set hard limits on your storage space. You can use a virtual machine like VMWare Fusion or Parallels which will run within OS X and take a hit on your harddrive space too but less than Bootcamp. Altenratively (and this is what I use) I VPN into a Windows box (either on your local network or uzing a cloud service like Azure). Good luck!
I've never touched TPL or IOC before, would you use those together or what?
I'm fairly new to C# and this was the best way I could find to create global variables. pictureBox1.Image recieves an image here, which is where it throws a null exception. private int pixel(int xpos, int ypos, Color c) { if(xpos&lt; 0) { xpos = 0; } if (ypos &lt; 0) { ypos = 0; } Globals.bmp.SetPixel(xpos, ypos, Color.FromArgb(255, c.R, c.G, c.B)); // crashes here pictureBox1.Image = (Bitmap)bmp; return 1; } Thanks for the help :-)
Can you demonstrate how I can make it work? And how should I have a variable I can use accross methods without globals?
As an interview, how can you NOT expect to train people? I wouldn't expect anyone with less than 5 to 6 years of experience to not need training.
Sure. They cover entirely different conceptual areas. TPL and TPL Dataflow are all about enabling easier asynchronous execution and concurrency; IoC is about minimizing interrelated dependencies in your code, so that your codebase is more modular and easier to change without making edits all across your codebase.
Maybe try [freelancing](https://www.google.ca/?gws_rd=ssl#q=freelance+programming+jobs).
You'll just have to enumerate the keys or properties of the data object. Dunno what you're using to parse the JSON, but in Json.NET `JObject` implements `IEnumerable&lt;KeyValuePair&lt;string, JToken&gt;&gt;`.
I'd try deserializing Data as a Dictionary&lt;string, Person&gt; or a Dictionary&lt;Guid, Person&gt;.
I may have already fixed it :) Does it work after you install 1.3.0? edit: wording
Thanks! Saw your issue on GitHub by the way, I'll let you know when Vimeo gets supported ;)
[Reactive Extensions](http://reactivex.io/), the "standard" observer pattern implementation [for .Net](https://github.com/Reactive-Extensions/Rx.NET) uses Funcs and Actions thoughout. You can even make an observable Action, use LINQ queries like filtering it through a Where Func, and finally subscribe to it using an Action.
It should be fairly straightforward. I have exactly this setup in one of my projects, but it's been a while since I did it... You should be able to create a new Object Data Source from within the report designer and point it at the assembly containing your entities. I used a WinForms ReportViewer control inside a WindowsFormsHost in WPF to display the report, and then just pass in the data source as an array of objects: private IEnumerable&lt;Order&gt; Orders { get; set; } var orderSource = new ReportDataSource { Name = "Orders", Value = this.Orders }; this.reportViewer.LocalReport.DataSources.Add(orderSource); this.reportViewer.LocalReport.ReportEmbeddedResource = "My.Assembly.ReportName.rdlc"; // you can also use a local file, I use embedded resources // If you have subreports, you bind them in this event: this.reportViewer.LocalReport.SubreportProcessing += (o, args) =&gt; { var orderId = int.Parse(args.Parameters["OrderId"].Values[0]); args.DataSources.Add( new ReportDataSource( "OrderLines", this.Orders.First(order =&gt; order.OrderId == orderId).OrderLines)); }; You can also do things like exporting directly to PDF without using a report viewer using LocalReport: var orderSource = new ReportDataSource { Name = "Orders", Value = orders }; var report = new LocalReport(); report.DataSources.Add(orderSource); report.ReportEmbeddedResource = "My.Assembly.ReportName.rdlc"; report.SubreportProcessing += (o, args) =&gt; { var orderId = int.Parse(args.Parameters["OrderId"].Values[0]); args.DataSources.Add( new ReportDataSource("OrderLines", orders.First(or =&gt; or.OrderId == orderId).OrderLines)); }; const string DeviceInfo = "&lt;DeviceInfo&gt;" + " &lt;OutputFormat&gt;EMF&lt;/OutputFormat&gt;" + " &lt;PageWidth&gt;210mm&lt;/PageWidth&gt;" + " &lt;PageHeight&gt;297mm&lt;/PageHeight&gt;" + " &lt;MarginTop&gt;10mm&lt;/MarginTop&gt;" + " &lt;MarginLeft&gt;10mm&lt;/MarginLeft&gt;" + " &lt;MarginRight&gt;10mm&lt;/MarginRight&gt;" + " &lt;MarginBottom&gt;10mm&lt;/MarginBottom&gt;" + "&lt;/DeviceInfo&gt;"; string mimeType; string encoding; string fileNameExt; string[] outStreams; Warning[] warinngs; //report.Render returns a byte array of the PDF document return report.Render("PDF", DeviceInfo, out mimeType, out encoding, out fileNameExt, out outStreams, out warinngs);
Yes!! I just got a ReSharper ultimate license a few weeks ago and love it. It's kind of a game changer. 
Sort of, figuring out what I need to know b4 I apply for the job. I might as well just learn Identity and look into Forms if I ever need to at work or something. I sort of tackling EF and Identity at the same time. Identity relies on understanding EF.
How long did it take you to learn Entity Framework and/or Authentication/authorization?
Windows 10 has not left me very satisfied...Hated the default privacy settings and still not okay with the lack of transparency in the update process.
The application that I made is on an internal network, so I don't have an accessible url for you. The application was generally made with ListViews to control the display, insert, edit, and deleting of data. Using the ListViews you can directly associate with a SQL Server back end. I didn't use a template of any sorts, as I built it form the ground up so I don't think it would really be applicable to your situation (plus it doesn't look the greatest as I created it when I had little web design knowledge). But if you need help developing/guidance in creating your own, I am more than happy to help.
Cool! Appreciated. 
If you need any help or anything, just pm me.
Which tutorial is that.
Oh gotchya. That's alright.
You can also use the remind me bot. Love that thing. RemindMe! 1 Day Dig out the code.
Messaging you on [**2015-09-21 23:35:27 UTC**](http://www.wolframalpha.com/input/?i=2015-09-21 23:35:27 UTC To Local Time) to remind you of [**this.**](https://www.reddit.com/r/csharp/comments/3lo6oy/creating_reports_in_c_with_reportviewer_and/cv8g3jf) [**CLICK THIS LINK**](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/3lo6oy/creating_reports_in_c_with_reportviewer_and/cv8g3jf]%0A%0ARemindMe! 1 Day Dig out the code.) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! cv8g47o) _____ |[^([FAQs])](http://www.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^([Custom])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^([Your Reminders])](http://www.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^([Feedback])](http://www.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^([Code])](https://github.com/SIlver--/remindmebot-reddit) |-|-|-|-|-|
Not when it doesn't work with a lot of your hardware and crashes all the time. I was really excited about it at first but now it is more of a pain in the ass than anything else on a daily basis.
If Windows 10 crashes your system then 999 times out a 1000 you have a hardware problem.
In answer to this link i could easily say you should be using the right data types in the code in the first place.
That is why most sites will use some sort of CAPTCHA, to prevent you from doing that. If they don't provide an API, they probably don't want you to automate certain actions. If the site doesn't use a CAPTCHA, then that should work !
It's not C# and honestly might be too much as its created for feature film production, but have a look at South Paw Tactic. It's a free PMS/CMS and you can customize a great deal of it. IIRC they even went open source recently so you may just be able to check out how they're doing some sections. 
You misunderstand. I meant that I would have to train you above and beyond what is normally required because of a lack of .NET Framework experience. You missed my main point which was that if you are serious about programming in C# then you should really be using VS in Windows.
Gotcha, I understand now and I agree with you. Without VS you are lacking a TON of stuff. If I knew how to use VS in college I swear I would have gotten an A in every class. Question for you though. What exactly is the .NET framework? I'm an application developer in C# but I never do anything web related... Where do you suggest I start?
Can you give a list of features for the app? Just out of curiosity
Windows Credentials only works if both the user and SQL are on same Domain. If the application is shared among normal people then that is not possible and login/password is only possibility.
And anyone with little bit of knowledge knows how to decompile your code and see the hardcoded information as plaintext.
I'm going to point out that this solution only works if either you have control about the PC the application is running on or you know exactly which users are accessing the DB. If you are planning to distribute the application to unknown users, then only way to solve this issue is to create middle-tier web service.
Good news is: It doesn't crash anymore. Bad news is: It ran all night and never saved anything. Instead of crashing, it seems to hang at some point and never return from the .GetVideo method.
Separation of Concerns, SRP and Testing.
This is mainly DI containers introduction, not DI introduction. The first example they have is valid DI by itself.
Well, if you can be sure about the positions of the check boxes, you might be able to just check the lightness / darkness of the area, I guess.
To expand on this, the relevant pattern here is ["Register Resolve Release"](http://blog.ploeh.dk/2010/09/29/TheRegisterResolveReleasepattern/).
You should title this "Inversion of Control in C#" because you are barely touching on dependency injection. If you are showing code that is 'asking' for a service, that is not dependency injection . That is more a long the lines of a service locator or resolution pattern. The constructor example is the right way to go and touching on property injection as well. But that is exactly what DI is...it's the form of IoC where your dependencies are injected 
Have a look at AForgeNet.com for doing image processing. I'd look at modifying the form slightly to put some glyph markers in the corners. This will allow you to account for changes in position/orientation in scans and identify exactly where your tickboxes are - it should then be fairly simple to look for dark pixels within tickbox boundaries.
Pretty neeato!
Don't be afraid to ask for help. The biggest issue I see with new developers is that they sometimes feel like they shouldn't admit they don't know something and shouldn't ask for help. Asking other developers you work with will also give you context that you won't get asking us. Like why they make certain decisions, and what they're trying to accomplish with the different patterns and code you'll find. If the company you're working for is worth anything, they understand that junior developers need assistance, and will support you correctly. If not, it's not worth the stress to try and figure out how to keep that job, you don't want it. Yeah, that's a bit black and white and I understand the real world is different than that, but the best way to stifle your career as a developer is to stay at a place when you're starting out where they don't invest in helping you improve your skills. It's in both of your best interests for you to get better.
&gt; our ioc container is heavily used in our tests. That sounds suspicious. Whenever I see IoC containers in tests it usually means the code is so poorly organized that it can't be used without the container.
&gt; our ioc container is heavily used in our tests. That sounds suspicious. Whenever I see IoC containers in tests it usually means the code is so poorly organized that it can't be used without the container.
Let's see... var item3 = new Item3(new Item1(), new Item2()); var item3 = Resolver.Test.Resolve&lt;IItem3&gt;(); You have made the code run slower, those resolvers generally take orders of magnitude longer to run than simple constructors. You have coupled your test to the resolver, meaning any problems in it will bleed into your tests. You have hidden a lot of important information, such as whether each instance of Item3 gets its own Item1 or if they are shared. You have unnecessarily added a new interface called IItem3. Heck, using your code it isn't even clear that you are testing an Item3. You could be accidentally testing a MockItem3 and never know it, completely invalidating your test suite. 
+1 to this advice. Also be sure to practice a lot by actually writing code to solve various problems and perform different tasks. The more you write, the better you'll be.
Are there more experienced developers on your team? Can you ask them to code review your work? In a previous position code review was an important tool I used to teach a team of juniors of how to incorporate OOP and software design patterns. Maybe you could also ask to pair program with someone for a day a week or so to help your learning curve. Do you try things at night and weekends? Try to incorporate the principals you are learning into smaller at home projects you can post to GitHub and then ask for feedback from the internet.
+1 for Pluralsight, however, although Jon Skeet is a genius programmer, his teaching style is bad in MY opinion.
This isn't always true. It depends on the synchronization context and how the task is configured. If there is no synchronization context, the context allows it, or the task is configured not to continue on the same context, a task may be continued on another thread (though technically not a newly spawned one but one from the thread pool). For example, this will take about 10s in a winforms application, but 5s in a console application: public static async void Run() { var sw = Stopwatch.StartNew(); var task1 = Foo(); var task2 = Foo(); await Task.WhenAll(task1, task2); Debug.Print(sw.Elapsed.ToString()); } public static async Task Foo() { await Task.Delay(1); // example, any awaitable will do Thread.Sleep(5000); } And with a modification it'll take 5s in winforms as well: public static async Task Foo() { await Task.Delay(1).ConfigureAwait(false); Thread.Sleep(5000); }
Hm, really? I tested it and this happened to me as well, but I just assumed that was b/c your video was so long. If the other service only takes 3-4 minutes, then something's up.
sure, my overly simple example can be cleaned up, but i don't think it's hard to imagine quite a few lines of setup needed that could be replaced with a single resolve. that was the point i was trying to get at. sure, getting an instance of an object may take milliseconds instead of nano seconds now. i would assume if you were that worried about performance, you wouldn't be using c#. either that or you would be more interested in doing research and selecting an ioc container that doesn't come with severe performance losses. yes, we expect our third-party libraries to work and don't bother testing them. yes, this occasionally sucks if there's a bug in the third-party library code. if you're using an ioc container in the rest of your code though, you could argue it's better to find out during test execution than in production though. this is probably a better argument to have in favor of not using an ioc container at all than specifically to not use one in your tests. it's not ideal to hide information, but i wouldn't say it's necessarily that important that the information be exposed in this way. when i'm writing test cases for a class, i have that class open and am looking at the source to create good test cases. hiding information in this way probably hinders feature development more than it hinders test creation. this method does cause some unneeded interfaces to be created. i agree with you on that. a lot of the interfaces are created anyway to facilitate injecting mocks of certain components though. i agree with your last statement as well. there is some diligence needed to ensure you're registering the correct things for your test cases. you sort of have a similar problem with the explicit method as well though. there's nothing preventing someone from using the non-mock version when creating their test objects even if they should be using the mock version.
Are you sure the build isn't failing, and you're not noticing it. Failing that, try Rebuild to force a recompile of everything. Also are you running the console with F5/Run in VS, or are you running the EXE directly via the OS?
Is it compiling on the fly? I have projects that take a while to compile so I'm just curious. 
In general, if you are creating global variables then you are probably doing something wrong.
What's also un-fun about TFS is that like so many of MS products, it has its tentacles in other MS products. And pretty soon you're covered in MS goo and nobody likes that.
**Entities:** *Clients:* Client Details, Client can have many contacts, Client can have many Jobs, Client can have many notes *Jobs:* Job Details, linking to client and client contacts, project manager, Report build (Template based) reports for emailing, notes, financial (quotes, invoices) Ability to build preformatted Reports based on certain data, 9 reports available. Output as PDF for saving or sending via email. Thats the basic bit so far. 
Is this going for personal use or for a client? Thats a pretty huge app 
10 seconds if you are awaiting correctly. 5 seconds if not. Async, await and the related TPL libraries are based on the basic concept that threading is hard and you should not be doing it in most cases. Instead you write your code to assume it will be called asynchronously. The async and await keywords are signals to the CLR that says "this code can be async". The CLR then decides at runtime if that code needs another thread or not, in some cases it will, in others it will not. You don't need to worry about it however, just tell .NET what can be async and forget about threads. Under the covers .NET will do it for you. 
Do you mean just show them the code or is code review something more than that? I try to get eyes on it but I feel that I am wasting the more senior devs time. They are all very busy right now. I'm hoping it slows down soon. Also what is pair programming? Thank you
It's compiling on the fly, but C# doesn't require a full recompilation on every change. Also compilation is much, much faster when you don't generate PDB files. We could probably make it even faster if we didn't emit the compilation to disk. The slowest part is usually running the code.
This looked really neat, until it came to the part about uploading your assemblies so their services could de-compile them and write the interceptors for you. I'm not sure about anyone else but thats kind of a deal breaker... Just saying...
Isn't mono develop available on Mac? You can use visual Studio code but you'll be rolling your own for some things to get started. I know that Vsc has a debugger but I've only used it for Javascript. I would try getting something working using parallels or any other machine you have available. That way you aren't trying to learn too many new things at once. If you just want to test a simple program you can use net fiddle. And the work of getting Vsc to compile it. Dreamspark is a fantastic option if you can get the ball rolling on that. What is your time frame? 
You can get a Mac compiling and running C# by following along here: http://www.omnisharp.net As for learning C#, don't stress. You don't need to know much to work with Unity. Unity itself provides all the tools you need to get started. All you really need is a good book. I recommend Unity Game Development in 24 Hours. It's a nice gentle introduction and will get you going (eventually) with C#. PM me if you get stuck. 
Unity ships with MonoDevelop which works on OS X. Visual Studio (not Code) only works on Windows. Even though Visual Studio is very much superior to MonoDevelop it can do anything Unity requires. Just start up unity. It will launch MonoDevelop by itself when you try to edit scripts. If you want to learn a little C# you could use MonoDevelop on its own.
You can use Visual Studio Code with Unity and get completions, intellisense, etc. Much better than MonoDevelop IMO. 1) Create your project in Unity 2) Go to Assets &gt; Sync Mono develop project 3) MonoDevelop will open, you can close it. 4) Open the project folder with VSC and you will see a small flame icon at the bottom. Click on it and select the project. Done
NCrunch + Unit Tests still seem like the better option. Nonetheless impressive work.
This [video](https://www.youtube.com/watch?v=0qiB3oW_nd8) might be helpful.
Thanks for the work.. Looks very good.. Quick question.. Does this support a list of items nested within another list of items? For example a form contains a list of sections and each section contains a list of questions. We have been able to get it to work till the section level but unable to get it configured correctly for questions. Any input will be greatly appreciated.. Thanks
Agreed. This is absolutely the wrong way to do it. Adds a ton of cognitive overhead, performance overhead, affects the performance of your application so that what you measure isn't actually what runs in a production environment. No tangible benefit.
@SalizarMarxx thanks for your very important feedback. The tool is just to automatically generate the JSON for you, to facilitate, to let the developer have the least work possible. You can use CodeCop without uploading your assemblies and you have two options there. Generate the JSON yourself or use its fluent API. 
So I've tried using the built in report stuff and just found it all to be difficult to use. I'm working in an ASP.NET MVC web project and wanted to provide a pdf download of some reports that were web pages. What I ended up doing was taking the cshtml file for the existing report and running it through razor engine to render it server side, then passing the rendered html page to an html to pdf library, then serving up the pdf to the user. This had some major advantages. Razor markup is easy to use and I already had it for the reports anyway. I also find getting exactly what I want display/format wise was easier with css and html. If you're already using razor this is a great solution. If you're not it could still work well but might require some tweaking.
Phew. Thanks. I got there in the end...it was a bit of struggle (niggly little things that took far longer to debug than they should).
This. There seems to be a lot of cargo cult thinking about creating interfaces in .NET. People do it just because they think it makes your code testable or injectable. It doesn't. It makes it *mockable*. But then they have interface-implementation pairs that are never mocked in their unit tests. They only have one single implementation. My personal recommendation is not to create an interface until you actually need to have more than one implementation. It's no big deal to extract an interface and find/replace all references, especially with the refactoring tools offered by Resharper (or even just vanilla Visual Studio).
Even classes are mockable provided you make the methods virtual.
The sidebar lists /r/dailyprogrammer , that should give you some problems to start with. Project Euler is also nice, but it goes from programming skills to obscure math skills fairly quickly. 
You can use `Process` class to spawn new processes, get their output and return codes. See this answer for more details http://stackoverflow.com/questions/206323/how-to-execute-command-line-in-c-get-std-out-results
@delegatevoid Thanks for your comment. As I said above you don't need to upload the assemblies, that is meant to speed up the JSON generation process on huge applications. You can still create the JSON structure yourself, no problem. Or if you prefer use the fluent API. Check the wiki for more info: https://bitbucket.org/codecop_team/codecop/wiki/Home 
There are [Build instructions](https://github.com/Perspex/Perspex/blob/master/docs/build.md) for both Windows and Linux. 
Yep, using mono - OSX too - the video shows it running on Windows, Ubuntu and OSX. We use Direct2D/Win32 on Windows and Gtk/Cairo on other platforms.
This could be huge. Will the license be staying the same? It might be worth chatting with the Mono guys to see if this could eventually be bundled in. 
There are multiple ways of doing code review, but in a simplistic explanation you write a small amount of code and a senior developer will take a look at it and see how it fits into the programming structure. They should be able to check for structure, standards and logic flow and report back to you on things you should improve or change. There are many tools and plugins that can help this process. It can also simply asking them to come to your desk and take a look at your code. Pair programming is where two developers work on the same section of code. One is usually typing while the other person looks over the shoulder and makes suggestions to logic, naming and other improvements to code as well as making sure business requirements are met. This would be good for you even if you feel inadequate because it requires the two programmers to question each other. Asking why are you doing this way instead of this way would be a great learning experience from you. If the senior developers are too busy for you to help then shame on them. I'd rather a junior developer ask me for help then to see some bad code checked in that I now have to maintain. I'd rather catch it before it happens and help the jr developer succeed making my life much easier as well as feeling good that I've helped someone. The same goes for a github account and your code there. Many developers are eager to help out starting ones especially if they are honest about getting better. Look at all the responses you've gotten in this post. 
Thank you so much for the replies and recommendations. I do plan to get a book as soon as I get paid. I will try using the MonoDevelop - thank you for the links. I will start wading through this info!
I know it's not going to be easy - but if I can learn it, I can make it easy for my students. Thank you for the Udemy info - all of the courses I looked at required Windows, but once I figure out how to use C# on a Mac, the programming content won't matter.
I am trying but am having trouble - I'm lost and having trouble figuring out what to do once I write the code. I am going to try the links above that SenorTeebs posted and see if that helps.
Thank you! That last link looks like what I need - I will check it out.
Thanks - I will try this!
As a bonus, you could use commas or tabs so that the data is loadable as a csv.
Thank you very much.. That worked beautifully...
A very quick and simple way to create a Card, i.e, rounded border and drop shadow. Which is easy, *but* for the fact that borders in WPF don't actually clip, and thus if you put a picture or something else without padding/margin in there you could end up with square corners. So if you look in the Card source you'll see a little bit of code sorting that out for you: https://github.com/ButchersBoy/MaterialDesignInXamlToolkit/blob/master/MaterialDesignThemes.Wpf/Card.cs
I can't see any reason we'd change the licence from MIT.
But you also don't want to be that guy that causes a disaster or a delay for not asking a question that would've taken 2 seconds and a Google search to answer. 
Thank you, that makes sense
Actually the course I took was instructed on a Mac. Unity itself is os agnostic so you could jump right in on your Mac using windows videos and it wouldn't make a difference. I for almost a semester was developing under Linux with unity working with a team using windows. Made no difference. Just installed unity with vanilla install no additional configuration. I think you are a little mislead about c# on os x right now. As of now .net will require a little bit of work to setup but mono will run well. If you want .net look into Roslyn but it's a little advanced in my opinion for a hs student to setup. Much less for anyone to setup. So just stick with mono for now. You can jump right into it and follow other mono instructed books or whatever running windows, os x, Linux or anything else that mono supports. Including unity or just regular development. The only difference with mono on os x and windows was a few menu options were in different locations. A quick Google had me back up and running. Programming was 100% identical.
I don't know what kind of application you're developing, but you want to put that kind of thing in either a config file or a database table. You definitely don't want to hard-code it in a constant.
Thankyou!
Yeah, then I think you already have the right mindset. Development is problem solving and companies want to see developers who can work things out on their own. But development is also finding the right balance of when to ask a question to save yourself time and arrive at the best solution. The other advice people have here is good, Pluralsight, etc... will definitely help.
Why is it that you have to use await on something inside an async task for it to return control to running context? Why isnt an async task implicitly run async? This has been bugging me looking into async lately.
General info or should I work up a report on InfoQ?
It just a very basic homework assignment, nothing fancy. Just a calculator that will output the amount of taxes being charged. The issue I am having is that it's giving the incorrect amount. This is the method I am working in. &gt;private void calculateButton_Click(object sender, EventArgs e) { decimal salesAmount; decimal taxPercentage; decimal taxAmount; decimal totalAmount; salesAmount = decimal.Parse(salesAmountTextBox.Text); taxPercentage = taxAmount = salesAmount * ?; totalAmount = salesAmount + taxAmount; //Display amounts taxAmountTextBox.Text = taxAmount.ToString("c"); totalAmountTextBox.Text = totalAmount.ToString("c"); } private void clearButton_Click(object sender, EventArgs e) { //Clear the text boxes salesAmountTextBox.Text = ""; totalAmountTextBox.Text = ""; taxAmountTextBox.Text = ""; } My question is how do I store the tax percentage so that it will give the right answer?
Which version of VS? because I'm getting the following: &gt; The condition for a breakpoint failed to execute. The condition was 'j = 6'. The error returned was 'The breakpoint condition must evaluate to a boolean operation'. Click OK to stop at this breakpoint. 
Looks great. Don't suppose there are any plans for a drag 'n drop form builder, like winforms?
&gt; Also compilation is much, much faster when you don't generate PDB files. Gotta try this out.
Multiple sources in my Twitter feed have been talking about this project during the day - took a brief look and I have to say I'm impressed. Are you guys thinking on providing lower-level renderers (bare D3D or OpenGL)? Or even allowing the app to inject an existing surface for rendering the UI there? It would allow usage on mobile/games easily.
A test runner is still a test runner, depends on how you use it. But, that said, I don't know if CodedUiTest has anything specific. What I did was create a NUnit/XUnit test. At the beginning, I start up the web server (if needed). And then start up Selenium. That uses a IDriver class to do most of the work, so you should be able to create a LoggingDriver that wraps around the Driver and then use it as normal. 
That SO question has a working answer already. Is there any specific question you have?
I think since .net core became a thing, we've been crying out for something like this! 
If it's just a literal value, you can assign it to a variable like so: decimal TaxPercentage = .20m; //20% tax rate
You can use parameterization, which lends to more readable and secure code. var query = "select * from someTable where someVal = @someValue"; var param = new SqlParameter("someValue", value); using (var command = new SqlCommand(query,connection)) { command.Parameters.Add(param); using(var reader = command.ExecuteReader()) { // .... etc } }
This looks great, thanks for sharing!
I had a look at this a few weeks ago. It looks awesome, but unfortunately there's one major blocking issue I see which will prevent many using this library and it isn't immediately apparent. The problem is the license for OmniXAML is GPL v3 (not lgpl). According to [this FAQ entry](http://www.gnu.org/licenses/gpl-faq.html#IfLibraryIsGPL) and [this FAQ entry](http://www.gnu.org/licenses/gpl-faq.html#GPLWrapper) on gnu.org, anyone using Perspex will need to release their application source code with a GPL or compatible license. Perspex can be released under an MIT license as it is less restrictive than the GPL and grants a superset of GPL rights to the end user, but the effects of the GPL are transitive. This means if I develop an awesome application using Perspex and release binaries to the world, I am at minimum required to provide the source code etc as specified by the GPL license as I am not allowed to release it with any further restrictions than what's contained in the GPL license. This is unless Perspex can be used without OmniXAML?
The usage of OmniXAML restricts any uses of Perspex to open source only, and for the code to be released under GPL or compatible license. See me earlier post for more info. You might as well have released under GPL v3 as you effectively have.
You couldn't do this? myNotification.Recipients = new Provider[1]; myNotification.Recipients[0] = new Provider();
It's always the simplest answers. Before I seen this I ended up changing all the variables to float and did taxPercentage = 6.25f. Thanks I keep this in mind for future uses.
Because then it would work and I wouldn't meet my minimum daily requirement of feeling foolish. &lt;blush&gt; Thanks. I thought I'd tried that in many different forms but I guess I missed that exact structure. I copied and pasted your code and it ran. Thanks for getting me to the next part that doesn't work.
Well, I've managed to port HtmlLabel's control code mainly by replacing text (getting it to compile against PCL profile and porting rendering code was another story). Some of our controls are ported from Moonlight. Basically you need to replace your DependencyProperties to PerspexProperties (which are registered a bit different, I had to create a [wrapper function](https://github.com/Perspex/Perspex/blob/master/src/Perspex.HtmlRenderer/PropertyHelper.cs) ) and deal with some stuff that is still missing, then you are done. 
Yes please! :)
This is indeed a problem, and I wasn't aware of it. However, the author of OmniXAML is working closely with Perspex so I'm sure we can resolve the issue.
Do you see in the Notification object the reference to the NotificationServer object? I don't either. It's in one of the constructors (below) on the server side but I don't see it on the client side. public Notification(NotificationServer pNotificationServer) { mServer = pNotificationServer; } It's my guess that the code for populating that object when the object is instantiated isn't there on the server side (I can't find it anyway) so it's giving me a null reference exception. 
I'm not sure what you mean by "lower-level renderers" but yes, support for injecting an existing surface for rendering to is definitely something we plan on doing.
A migration guide is definitely something we need! Docs in general really. The lib is still in relative infancy so it's something we've been neglecting, like most projects ;)
Currently I'm considering to use MonoGame as our mobile device rendering backend. I'll have to deal with path triangulation (paths can be self-intercecting or contain holes, so this part is tricky), but everything else should be fairly easy to implement. Injecting surface won't be much of a problem since our rendering infrastructure has the concept of "render targets". 
thank you! so would I need to (if I understand you correctly) somehow pass the newly created variable back into the main class? if you didn't mind, I could send it (the code) to you via pm!
Just write your methods so that they return the new variable's value. (return variable;) Then you just need to write your method call like this: someVariable = SomeMethod(someVariable); You'll be fine.
Hmm, I don't know about that. My web service experience is somewhat limited, and I've only ever worked with WCF before. Functionality of a service object is defined by an interface, so constructors don't come into the picture at all. When you generate your client objects from the WSDL, an object is created for you that implements the service interface and you just call it's methods like any other object. 
A method can only have a single type of return which is defined in the method statement. Once the method reaches the return statement it stops executing and 'returns' the value listed.
Just wondering, (C# noob just learning!) what is the message that will be sent?
You can use an "out" or "ref" keyword in the method parameters to essentially return multiple values. ... string str; string str2; str = doStuff(ref str2); string doStuff(ref string str2) { str2 = "I'm bad at naming variables."; return "Hello world."; }
This particular set of code is intended to send a formatted email to one or more recipients via a basic SMTP email server. It's existing in the code base and I'm co-opting it for my own particular uses. One of the cooler aspects of it is that it can use an XML template file for the message. You can send in a dictionary object with name-value pairs that will fill out the the message. It has just never been used via the web service so I'm having a couple of problems getting it to work.
It is really what you should value more floating point accuracy versus performance. In nearly all cases with financial / money calculations you would want accuracy. Another thing to consider is to used an unsigned integer of the smallest denomination as to avoid floating point shortcomings. E.g. a unsigned 64-bit integer to track how many cents a person object has. 
There are a number of libs available in c#. But you can get the same results simply by using the Image and Bitmap classes. Once created the save method accepts an enum that allows you to specify the resulting image type. using (Bitmap b = new Bitmap(50, 50)) { using (Graphics g = Graphics.FromImage(b)) { g.Clear(Color.Green); } b.Save(@"C:\green.png", ImageFormat.Png); }
Ok well as long as it is mono there is no difference on compiling or running even if done from a windows machine. The compiler will remain the same. The shortcuts and the button to build may be in a different location. Functionally it should be the same. For non mono this will not be the case. I assume that is why you were having trouble? You were trying to use something that was not Mono? Now if you are REALLY super hard pressed and gung ho about not using mono and using .net I have found an easier way to do this on your mac (or really much of any OS) without the need of visual studio. Instead you can use Visual Studio Code or whatever text editor OmniSharp supports. http://www.omnisharp.net/ The setup with visual studio code is non existant as it is included and will become apparent as soon as you create a C# project. However be aware that coding games using engines you find online for C# may or may not work with it at this time. So if your intent is to make games just make sure to try it out or do some research yourself before pulling the trigger to find out there could be an issue down the road. Unity is proven to work across the board, and that is a strongpoint worth mentioning.
&gt; interpolate it into a smoothed look. What do you mean?
Ok - yeah, that's not going to be straightforward due to the fact that we support arbitrary geometry.
I have toyed with the idea...I'll have to have a look when I get chance...
Oh wow! Unfortunately I'm only using Visual Studio 2012 Update 5 (Work licencing restriction) I take it you're using 2015?
Visual Studio is pretty clear here. Use `else if` and remove your ';' after the statement. if () // first case. no ';' here { } else if () // other case. no ';' here { } else if () // other case. no ';' here { } else // everything else. no ';' here { } By the way, you should review your statements. it will not work like this. I let you find this following error. I recommend you to read the entry of the [msdn](https://msdn.microsoft.com/en-us/library/5011f09h.aspx) about statement. You can also check this one from [DotNetPerls](http://www.dotnetperls.com/if). geluk
How about throw together a quick GUI, show what can be done? The .Net open source community is a bit anemic...but growing. People like screenshots. I have GUI based projects on GitHub, so screenshots are a necessity, but the point is they draw people in and give people ideas of their own. I'm now your fifth follower on Twitter! Getting followers takes time...just get involved in conversations and it will build up.
One of the things that I noticed is that you are doing a string comparison (invoer == "&lt;10"). It looks like what you want to do is actually a mathematical operation. Pay very close attention to the code in the 'else if' sections of the articles linked by /u/aloisdg, you'll find the answer in there. Ah, one more thing here. Convert.ToInt32 is a method which *returns* and integer. You would want to do something like this: string invoer = Console.ReadLine(); int someIntegerVariable = Convert.ToInt32(invoer); // Do your if/else using someIntegerVariable instead of invoer here Simply calling Convert.ToInt32("12") will not actually do anything, you will want to place that value in a variable in order to use it later on in your code.
Some further thoughts on my experience with spreading the open source word: * Reddit is probably *the* best single place to make announcements * Twitter is a great place to communicate with *existing* users * Blog about what you are doing and how you solved problems. You will help other people solving their own problems, and they will learn what you are up to * Getting involved with other peoples projects on GitHub helps you become part of the wider community
Would be true if nvidia had 0.001% market share, but they don't and here we are.
Wow thanks, definitely gonna try to contribute when I have some spare time! But on the downside most of the projects there are pretty advanced. To contribute to PRISM for example the code really has to be top notch quality.
Upvoted for the screenshot. This way people can help you instantly.
Yeah...you are right, I have a Gitter channel for chat. I think what I meant to say is Twitter is good for getting out quick announcements to existing followers. ...the StackOverflow tag is a good idea...I need to do that...
Hij vergelijkt nergens een int met een string. Convert.ToInt32(invoer); geeft namelijk wel een int terug, maar in niks. [invoer] zelf blijft onveranderd, en dus gewoon een string. Maar vooral de else waar een else if nodig is, en de ; op plekken waar ze niet horen zijn het probleem (voor het builden)
When I work with QAs at work we always send screenshots and even videos. People finding help on the internet somehow don't see the value in it.
That article made me cringe so hard...
First off, don't program in Dutch. [*DUTCH*]Als een Nederlands sprekend persoon versta ik waar het vandaan komt, maar programeren is best in het engels. Now off to the code that would work if (invoer == "&lt;10"); First off, as /u/Nugsly [stated](https://www.reddit.com/r/csharp/comments/3m1he0/can_someone_tell_me_what_i_am_doing_wrong/cvb5qza) you should `Convert` it to an `int`and just test with: if (invoer &lt; 10) Second the `;` after the `if` create an empty statement ([stated](https://www.reddit.com/r/csharp/comments/3m1he0/can_someone_tell_me_what_i_am_doing_wrong/cvb55v1) by /u/aloisdg Also the correct syntax is indeed `else if` If you correct those you should get much further. Would you mind telling me where you are from, I could help you out and give some pointers if you want.
To be fair, it's usually really difficult (i.e. not built in) with whatever system people are using. "I have to take a screenshot... then save it... then upload it... then link it? Fuck that, I'll just take 3 weeks incrementally describing what my problem REALLY is" *missing semi-colon*
Typisch eerste taak na de eerste les. Waar is de tijd...
argumenten waarom programmeren in het nederlands een dont is ?
okeoke ik begrijp het, alsnog bedankt voor de hulp. 
Care to elaborate, or is just making a snarky remark supposed to help?
Can someone translate this?
Why?
Bij mij op school mag je kiezen of je Nederlands of Engels gebruikt (zolang het consistent is), maar toch wordt erbij vermeld dat Engels de voorkeur geniet. Voor nu lijkt dat misschien niet belangrijk, maar als je later software gaat schrijven die internationaal gebruikt gaat worden gaat iedereen je dankbaar zijn dat je "input" schrijft in plaats van "invoer". Mijn 2 eurocent ;) ---- Where I go to school, you're allowed to choose between Dutch or English, but still English is preferred. Right now it may not seem important, but later if you're going to write software that is going to be used internationally everyone is going to be really thankful that your code is in English. my 2 cents ;)
But that project has been going for three years, yours for three months...
https://www.reddit.com/r/csharp/comments/3iojz4/libvideo_a_lightweight_net_library_to_download/
&gt; This article came off to me mostly like someone crying because they think they could do it better It was written by one of the key designers to the C# language. To me it just seems that he's detailing things he would change if he had the opportunity to do it over again.
I said, comparing an int to a string isn't an issue here, because the line: Convert.ToInt32(invoer); returns an int into the void. The 'invoer' variable is never changed. So 'invoer' is still a string value. The build-problem is, as mentioned in other posts, is the fact that there are ;'s in places where they shouldn't be, and that he uses else ( ) instead of else if ( )
Re-read the top few paragraphs and you'll notice: &gt;Before I begin, a few caveats. First, my opinions are my own and not necessarily those of the whole C# design team. Second, all these design decisions were made by smart people who were trying to find a balance between many competing design goals. In every case, there were powerful arguments for the feature at the time, and it's very easy to criticize with decades of hindsight. C# gets almost everything right; all of these points are minor quibbles about details of a very impressive and successful language.
Awesome, the forums seem like a pretty nice place to chat! I'm a frequent contributor to CoreFX and CoreCLR as well, so I think you chose the perfect place :)
np, and thanks...i think the .net OSS community needs to pull together and support each other.
Thanks to Google as long as you know your sorts and tree traversal algorithms you should be fine, then it comes down to if you have good coding fundamentals. While memorizing answers to interview questions is useless and a false representation of your actual skill level (which is what they're supposed to display), two of the most common interview questions I've encountered are: &amp;nbsp; User inputs positive value n. For all integers 0 through n, if the number is divisible by 3 output new line "fizz", if it's divisible by 5 output new line "buzz", if it's divisible by both 3 and 5 output new line "fizzbuzz". &amp;nbsp; Given sorted integer list List1 and unsorted integer list List2, merge the two lists together without duplicates and in ascending order.
A lot of it came from the fact that they took features from C and Java for no other reason than that C and Java had them. Eric Lippert was on the C# team at Microsoft by the way. &gt; For example, its type-first declaration syntax is a thing because it's C-based, it's the style. If it concerns him that much, he can just use var. His point is that C's syntax complicates the parser somewhat, and it's not a very obvious syntax either. &gt; Or how about the empty statement? If it bothers him, just don't write an empty statement. His point is that there are two ways to make an empty statement: `;;` and `{}` but why support `;;` at all? It does a lot more harm than good. Writing `while(foo) ;` should a parse error. If you really, *really* want an empty statement use an empty block clause. A lot more difficult to overlook. At this point the compiler issues a warning for empty `while`, `for` or `if` statements. With this change it would be a compile error instead. &gt; For loops syntax aren't bizarre, they've been around since the beginning of time, and they're still popular because they're still faster than a foreach loop The for loop is bizarre. They could have easily been replaced by a range syntax: `foreach(var i in [0 .. 99])` `foreach(var i in [0 .. 99, i =&gt; i + 2])` No performance penalty, and it would have made `Enumerator.Range` pointless. A lot easier to read as well. For most other cases a `while` can be used instead. &gt; They're not called modules because they aren't, it's a non-issue Why not use modules instead of static classes? ~~The CLR has a concept of modules but C# does not support it.~~ (The CLR module is what contains code and metadata. My mistake.).
Open an issue on YE to explain the situation. It may drag some people to your lib. Now take your time, there is no hurry. Be Patient. :)
"My 2 cents" is an expression we don't use in Dutch. As a joke/pun I translated it to Dutch, adding "euro" to make it funnier (I guess?). Not that it is funny, I just felt like typing it, you know. A regular "cent" in Dutch just refers to a eurocent, as you would expect.
Before your reply for the fizzbuzz problem I would have needed 3 if statements + the default case: if(x % 15 == 0) else if(x % 5 == 0) else if(x % 3 == 0) else.. default case I can't fathom there being something more efficient than that method but I'm very curious, could you toss another hint? Wow, the list problem certainly had more many aspects to it than I had previously considered. Primarily your point about potentially different sized lists. I think I would opt to make a third list that serves as a master list of numbers we have. If a number does not currently exist in the list from either list 1 or list 2, then add it, if it does already exist, then move on to the next one. I would then wind up sorting the third list and that would be the final answer. Thank you for the tip about working through it out loud. I would have initially thought the interviewer would think I was crazy for talking to myself as I solved the problem!
Yep! Sorry for the poor formatting (on mobile) &amp;nbsp; string result=""; If( i%3==0) result+="fizz"; If(i%5==0) result+="buzz"; Console.Writeline(result);
I would prefer a .NET fiddle link or just a basic copy/paste but it is better than nothing. :)
No worries, I appreciate your informative responses. Thank you!
You're a junior developer. They expect you to ask questions. If you're not asking questions you're not doing your job. Your job is to learn. If you're not asking questions you're not learning. If you spend all day just spinning wheels on a problem then you need to ask someone for help. You're absolutely more likely to get fired for spending too much time not figuring things out than you will be asking too many questions.
I dunno, I think it's kind of a dick move to go to another repo and say "hey guys my repo is better." Considering it though.
Part of the senior devs time is spent making sure the software gets delivered on time. They're usually tasked with helping to keep juniors like you on task. If the software is delayed because you couldn't figure it out and you didn't ask for help then you just wasted even more of their time. Your goal is of course to get to a point where you don't have to ask for help so much. But you're a junior. You know nothing! You're supposed to ask questions. 
 Convert.ToInt32(invoer); Will not do anything. You'll need to declare a variable to catch the results of executing that function int parsedInput = Convert.ToInt32(invoer); However, because it could be junk input, you should use int.tryParse() http://www.dotnetperls.com/int-parse
[FizzBuzz Enterprise Edition](https://github.com/EnterpriseQualityCoding/FizzBuzzEnterpriseEdition)
I just did one to fix that. Sorry for the delay, I was working. https://www.reddit.com/r/csharp/comments/3m1he0/can_someone_tell_me_what_i_am_doing_wrong/cvbhmmk
&gt; That's not a good solution to fizzbuzz. From personal experience, any solution to fizzbuzz that works and doesn't require the interviewer to walk the interviewee through language details like if statements and the modulus operator is a good solution to fizzbuzz. Hell, any solution that *works* is good.
wow. I first thought that this would be /r/ProgrammerHumor/
Heh that is an interesting solution
Cool. I like FizzBuzz solutions that I haven't seen before. Although this one is a bit annoying when the follow-up question is "Ok, now add a "Bazz" for multiples of 7"...
&gt; While memorizing answers to interview questions is useless and a false representation of your actual skill level I literally had to say this at my last interview (didn't take the job). They kept asking me like questions you'd get on a test in college 10 years ago. Just things that you'd have to memorize. I just kept saying, I don't know the answer to that but I could research it and have one for you in about 5 minutes. I then had to ask them if they don't allow their workers to access the internet, and expect them to code everything from memory all the time. They ended up offering me a job, but I turned it down because I didn't want to work at a place where that's how they determine who's a good candidate and who isn't. That, and my job now is pretty damn awesome. 
I'm working my way through that book right now. As far as coding books goes, this has been one of the easiest to follow along, and learn from. 
Thats what im wondering about. Why is the await necessary. Shouldnt an async function just be async? Why would you create an async function without await inside it? And why would you want to run half a function async.
1.) Convert.ToInt32 should be stored as something, else it effectively creates a new variable, temporarily converts the value to an Int32 if it can and stores it in that variable, and throws the variable away, so invoer remains as a string A more correct version would be to go int myIntVariable = Convert.ToInt32(invoer); // Will crash if it can't be converted Then use myIntVariable (Note that invoer remains a string - Only myIntVariable is an integer) 2.) To compare an int value you use " x1 &lt;= x2" - Eg: if (myIntVariable &lt;= 10) // Or &lt; or != or &gt; etc 3.) With if statements, } is considered the end for "end of line" purposes so you don't need a ; before the { Whilst if (myIntVariable &lt;= 10); is technically valid, it's the same as going if (myIntVariable &lt;= 10) { // Do Nothing } resulting in your current code (If other errors were fixed) going if (myIntVariable &lt;= 10) { // Do Nothing } { // Do Something } Which would result in the "Do Something" ignoring the if statement, and running anyways
like more people said here, if and your else statements need some work. It seems to me you'll need to learn some of the fundamentals. The DotNetPerls is a great site to learn these from, but if you really want to learn I suggest picking up a book or subscribing to a youtube channel, more specifically something that has to do with "object-oriented programming in c#". edit: oh ja, always program in english. You'll eventually have to do it anyways when you start working at a company.
It simply looks like someone extremely new to the language
Agreed which is why I recommend it to anyone that ask. Some people see the word pro in the title and feel that it may be above their current level but I did not find it to be the case even for developers young in their career. Also well written and very easy to follow along with.
&gt; Given sorted integer list List1 and unsorted integer list List2, merge the two lists together without duplicates and in ascending order. var result = list1.Union(list2).OrderBy(i =&gt; i); I wonder if the interviewer would be happy or mad about using LINQ.
There was more to it I left out for the sake of brevity, no using libraries or made up functions. You have to code out anything you want to use. So no LINQ, no saying fubar(list) returns sorted list, etc. You CAN use basic methods as long as it's not too extreme, like list.add, list.remove, or list.contains. For instance, you have to code out the duplicate removal function.
Can't you just generate one twice the size and then just make it smaller?
edit: see /u/centurijon 's response
Ik ben 16, zit op een mbo en had een vrije dag hopelijk verklaard dit het
Made those changes, I'm now getting: "Compiler Error Message: BC30451: 'var' is not declared. It may be inaccessible due to its protection level."
That's a little crazy dude.
Identity does not rely on understanding EF. It is just frequently used in examples because it's a quick way to hook up to your database. For instance, if you want to use default settings and have it build your db for you, then you need to understand some bits of EF, but that is a specific detail of one route (code-first), not a requirement. 
That all looks ok, except this is the C# subreddit :) 1. Set your `For Each` and `New With`s back, they were correct originally as VB 2. You should have two web.configs, one in the project root, and one in \Views. Check the \Views\web.config and make sure that it specifies a namespace include for System.Web.Mvc - This tells the view pages to automatically include that namespace by default - my thought is that Mvc is missing, so the view has no idea that `Model` is a property of your page (although it shouldn't matter since your Inherits statement is fully qualified). 3. And if that doesn't do it, then what does your call in the controller look like? The return statement should look something like `Return View(myDataModel)`where `myDataModel` is an array, list, or query of `MvcApplication1.CDTable`. The best bet is that you're passing a null value as your data model.
Seems to have done, see pastebins below - \views http://pastebin.com/N3FQV6qj \ http://pastebin.com/GK1ja1UJ This is the current error I'm getting: http://i.imgur.com/2sFflET.png 
Do people really look for solutions like this? This wouldn't be my first instinct solely because you'll get messed up output if you have more than one input. If you do something like 5, 10, 20, 25, 35 you'll just end up with "fizzfizzfizzfizzfizz". Plus, the original problem does ask for a new line.
Made those changes, now I'm being told "Object reference not set to an instance of an object." in reference to Model - it doesn't seem to be locating the file - any way of resyncing so it knows where to look?
Thanks! I think that expression-bodied function members `=&gt;` are my favorite new feature, right after `?.` :)
asking algorithm questions in interviews for junior candidates is not about figuring out what they've studied. it's about trying to gauge their problem solving abilities and somewhat about finding out their understanding of what's available to them in the language. when interviewing junior candidates, i'm more interested in probing them on their general programming knowledge than seeing if they've memorized how to implement a quick sort or whatever. typical questions i ask .net juniors: - do the words 'design pattern' mean anything to you? - great, can you list some of the ones you know? - sweet, can you explain that one to me and provide an example of when you'd use it? - can you explain polymorphism to me?
If you don't want it, can I have it?
I'd mark you down for lack of StringBuilder! 
&gt; I literally had to say this at my last interview (didn't take the job). They kept asking me like questions you'd get on a test in college 10 years ago. Just things that you'd have to memorize. I just kept saying, I don't know the answer to that but I could research it and have one for you in about 5 minutes. You don't necessarily need to come up with the most optimal solution but do you really want to represent yourself as someone who's unable to approach a novel problem without having the answer spoonfed to them? And even in the "real world," at the most basic level, identifying the class of problem you have and maybe the name of the algorithm you want to use is going to lead to you looking up things more effectively.
That's idiotic. "Business needs" include solving problems in a reasonable amount of time and space which involves understanding algorithms if your inputs are large enough.
Yep! Also liking the readonly getter properties. Much less boilerplate code to have the benefits of immutability. 
The fastest performing one I have ever seen skips the mod all together, and just has two variables. Each iteration it increases both of them. then a simple check to see if they are set to 3/5 and output, then reset. Its significantly faster than the mod, even if you are caching the mod so you only have to do it once per iteration. 
Are you saying I need to know how to write quick sort, how to implement a queue/stack, and how recursion places its variables on the stack, just so I can import a CSV file into a database and run some rules on it to pay people points to use in an online catalog? That's idiotic.
Your argument seems to rely on you only doing extremely trivial work.. For reference, I encountered a np-complete problem in my very first task and I'm in consulting.. But yes some trivial work is also present, but that will usually be automated
Seconded. You may not have an easy go of it in straight C#, but MonoGame (the spiritual successor to XNA) should allow you to load your FBX file in. 
I don't know why all the answers are fixating on "var" and stuff... the answer is right in the error message, "object reference not set to instance of object." [What is a null reference exception and how do I fix it?](http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it) `Model` is null and you can't loop over null objects. You need to set the model (by passing it as an argument to the call of the View method of the controller). That said, you *do* have your view set to VB. The C# syntax is `foreach(var item in Model)`.
Would you take a LINQ solution in your interview? I've never had to do any coding tests (one of the benefits of being a freelance developer), so I'm curious whether you'd be looking for how I'd do it in the real world, or if you want some really hand-rolled performant version. (Assuming I interpreted your description correctly) var list1 = ... var list2 = ... var result = list1.Union(list2).Distinct().OrderBy(x =&gt; x); 
Well, the answer to the question you asked is that you need to use out parameters, but the real solution to your problem is to understand OO design a little better and not design your program as nothing but a series of static methods.
If you are looking to do it in MonoGame, there isn't support for the standard GDI+ drawing primitives (line, rectangle, etc). A common way to solve this problem is to write a little code that just creates a 1x1 pixel texture, and then literally draws the primitive point by point. Some primitives (like rectangle) will be a little easier than others (circle) using this method. There are also some simple 2D drawing primitives libraries out there. Generally they work in the way I have mentioned above. 
this is so cute
Slowness in coded ui makes me think about .DrawHighlight(). Are you highlighting anything using this? If so, remove it or rewrite it because Microsoft was kind enough to add a 7-second delay to this method for debugging purposes and not offer an override.
Yes you are right. I will edit my post. By the way, nobody needs the else block most of the time, but lets him write it for now.
Maybe I missed something in my code, but your solution to problem 1 seems a little complicated. This code seems to work for all values i've tested: public List&lt;int&gt; SquareSums(int n) { List&lt;int&gt; final = new List&lt;int&gt;(); int remainder = n; while (remainder &gt; 0) { int num = (int)Math.Floor(Math.Sqrt(remainder)); final.Add(num); remainder -= (num * num); } return final; }
maybe the exclamation mark should have tipped me off :)
programming is for people who enjoy feeling like geniuses for one minute and complete morons the next minute. Edit: Jesus, thanks for the gold fellow bipolar coder.
Thanks for the feedback. I too am a novice with c#, looks like I need to dig into how MVC works. 
That's exactly what I was looking for! Thanks! I know I have to have to process run with an ID that is an administrator, however what my script is trying to do needs to run powershell as admin because its trying to make changes to a system. If you are just to run powershell on your desktop you can't actually make changes to you desktop, you would need to run powershell as admin. Thanks again!
Well, good ol' JavaScript you might fool someone into thinking that can be the case: var x, y = null; document.writeln(x !== y); //true [Runnable example](http://js.do/code/68629) Of course, this is just another example of (abusing and/or incorrectly using) JavaScript. EDIT: I like that my first thought after reading your post was "I bet there's a way to do that in JavaScript". :)
Edited: It turns out my response was wrong please see /u/tweq 's response. Sorry!
This is confusing bits and bytes, and `char` isn't signed anyway.
In C#, `char` is two bytes because it's UTF16.
It won't. DbContext just can't do it. You need to use the ObjectContext and CreateCommand, ExecuteDatareader and Translate. 
I know it's correct. It's just an example of how it can look to produce unexpected behaviour to a novice. Most (all?) quirks and "weird behaviour" of JavaScript can be explained by following and understanding its specifications.
Spend hours debugging the code. You find the fix and it's something like this. Tell your PM you spent 3 hours typing in == instead of !=. Feel like an ass all day.
I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm an idiot I'm a genius Oh wait, I'm an idiot
Ahh, but see, you could have spun it to make yourself look like a [badass](http://www.smithsonianmag.com/history/charles-proteus-steinmetz-the-wizard-of-schenectady-51912022/): "Ford, whose electrical engineers couldn’t solve some problems they were having with a gigantic generator, called Steinmetz in to the plant. Upon arriving, Steinmetz rejected all assistance and asked only for a notebook, pencil and cot. According to Scott, Steinmetz listened to the generator and scribbled computations on the notepad for two straight days and nights. On the second night, he asked for a ladder, climbed up the generator and made a chalk mark on its side. Then he told Ford’s skeptical engineers to remove a plate at the mark and replace sixteen windings from the field coil. They did, and the generator performed to perfection. Henry Ford was thrilled until he got an invoice from General Electric in the amount of $10,000. Ford acknowledged Steinmetz’s success but balked at the figure. He asked for an itemized bill. Steinmetz, Scott wrote, responded personally to Ford’s request with the following: Making chalk mark on generator $1. Knowing where to make mark $9,999. Ford paid the bill."
It would be nice if this was more upfront about basically being an advertisement post. Also the blog layout sucks. Why is there a fucking 972px height header ?
I never understand that because half the shit posted you won't be able to run with the code anyway. Too many dependencies and many classes.
If you rewrite that as var apple = new Apple() It's even more obvious later on that you have an apple.
Rubber ducky debugging.
No problem!
So you don't believe in unit tests then ?
What if he works for Project Euler?
As soon as you add a mock, it is no longer a unit test. Rather it is a half-assed excuse to not write an appropriate test.
I have found that if I start patting myself on the back, I need to stop and undo whatever I just did. It WILL come back to haunt me. 
https://github.com/sall/vixen Vixen3 - This is a popular Christmas Light Show sequencing solution. This is where I started learning C# a few years ago. Its a big project with lots of code to look over.
I need this as a needle point sampler to hang on my office wall.
JSON.NET is probably the gold standard in open source C#.
Here is a good read on the subject: http://www.joelonsoftware.com/articles/Unicode.html
You made me feel dumb too because I read the title, thought "this should be easy" and was just as confused as you were. Then I read the comments.
[Paint.NET](http://www.getpaint.net/index.html) is pretty classic ([May 6, 2004 was v.1](https://en.wikipedia.org/wiki/Paint.NET#Release_history)) 
While a well written and elaborated article, I think the author does compare apples and oranges by comparing C# and C++ in such a way?
Yeah ... but the source code? Paint.NET is freeware, afak neither open-source or libre/floss.
It basically boils down to the fact that he doesn't like C# because it isn't C/C++. Which obviously it isn't.
His point of aliasing is wrong: using SomeOtherNameForAnInt = System.Int32; Well strictly speaking it's not, but that's definitely an alias and his only point for aliasing is to maintain readability, which the above achieves if you want it to. Also he just wants C++. This isn't a "why C# is not my favourite language" article. This is a "I wish C# was C++". I don't know anyone that is in their right mind who'd want to write a database engine in C# over C++. Infact I don't really know anyone that would want to write a database engine at all given the huge choices of engines we already have, but hey he probably does/did have a very specific requirement at the time.
I do agree with him on some points related to the verbiage of C#, then there are others like multiple inheritance being a good thing. http://i.memeful.com/media/post/jRj388d_700wa_0.gif
My thoughts exactly.
Half the things he's complaining about that C# doesn't do isn't something you'd want to do with C# anyway. It's the wrong tool for the wrong job.
More like apples and turtles.
This. C++ exists. Obviously. If you want to use it, use it. To me, the article also reads as a long list of lower level programming that C# just isn't built to do, like "I've always done it this way in C++, and C# doesn't let me keep doing exactly that in exactly the same way, so it's therefore a bad language." If C# was a feature-for-feature direct replacement for C++ (or any other language for that matter), then there would only really be a good reason for one of them to exist. You wouldn't get any kind of adoption of the other language, because the "good one" is already in common use. I started my career with C/C++. I now use C#. I enjoy the language, it's actively developed, and it solves my problems. It's true that you can't use your exact C++ code in C#. If you could, it would be called C++. Both tools have their place. Get over it. LOL
Very clear post. Thank you! One question - once you have forked their repository into your own remote repo, is there any way to get their changes into your remote repo (and following, your local working copy)? Or is a fork a snapshot in time, and the only way to get any changes from the original repo to fork it again?
Tldr: C# is not his favorite language because it has different or missing implementations of some low level C++ features. 
I would recommend you reading the .Net Core source code. &gt; .NET Core is a cross-platform implementation of .NET that is primarily being driven by ASP.NET 5 workloads, but also by the need and desire to have a modern runtime that is modular and whose features and libraries can be cherry picked based on the application’s needs. [Source](http://dotnet.github.io/core/about/) It contains the source code of many .Net Framework libraries and you have probably already used some of them. It's a good reading and will help you learn about code conventions that are recommended and widely used by the majority of the developers. The source code is available on GitHub, just follow [this link](https://github.com/dotnet/corefx).
In the System.Management.Automation assembly. You can find some tutorials here: http://blogs.msdn.com/b/kebab/archive/2014/04/28/executing-powershell-scripts-from-c.aspx
If you're generating client code from the WSDL, the generated code will typically be partial classes representing the structure (data contract) of the objects needed to use the service contract. This lets the client and server independently vary their implementations of those types. You could share the implementation via other means such as a library or nuget package both reference.
his point on type aliasing is correct. he mentions that you can do what you have here, but it's not the same and not nearly as useful as type aliasing in c++. for example, if you had something like this: using Id = System.Int32; public Id SomeId =&gt; 1; referencing SomeId anywhere outside of that file will see the type as int and not Id. in fact, that file will not know what Id is at all. this means you lose some of the meaning behind the alias. the value isn't just a 32-bit signed integer, it's an Id. so, if you ever wanted to change your Id type you would theoretically have to update every place that references SomeId or takes in an Id as a parameter or whatever. there's really no equivalent in c#.
Aaaand the perfect place to post this is in [r/csharp](https://www.reddit.com/r/csharp).
Ha! I laughed.
Thank you for your help. I used a slightly different approach: controller sends events about which buttons are being pressed -&gt; view model keeps track of selected item - gets updated -&gt; view responds accordingly. I figured this could work well when the buttons should do something different (confirm selection or other stuff)
Hey! I gave the MVC path a go, but as I'm a novice the code first was too hard to get my head a round. So now I've reverted back to asp.net webforms and EF. Dont look down on me :) I've started with a few throw-away projects to learn - slowly getting there. I have the relationships of the entities all sorted in my mind (will put them on paper soon) - and what I want to achieve but it's just realising it. Poor me story - I'm doing it all while working a full-time job, raising a young family and generally not sleeping. WOOT!
I completely disagree. If a place pays people for years of experience rather than how good they are, that breeds complacency and incompetence. I've also been working for a bit under two years out of college in the Seattle area (although I do work lower in the stack in C), and in my experience, good companies are willing to pay good money for good devs, regardless of years of experience. If they're not, they end up with a bunch of people with a room of experience and not much else, so there's not much point staying there anyhow.
If it promotes conversation then certainly! 
I 100% agree with you. I also do know 35 year old engineers who aren't good. They are adequate. They get the day to day work done just fine, but the challenging and worthwhile work is left to people who show promise and who sweat for it. I haven't been in the industry long either but I'm in the same boat as you.
What I'd do is just create a rectangle in wpf, trigger an event when your mouse moves inside said rectangle, and in that event handler just grab your mouse instance, grab the x and y position, display out to text box or set to a variable that's bound to something on the GUI.
Awesome reply. Appreciate the feedback.
Yea, I'm pretty sure it's an HR best-practice to let the employee go that is trying to leverage other offers. It proves you're not really a team player and kind of greedy. So many downvotes; I think it's a best practice because it's understood the employee will likely cause headaches around compensation for his/her entire relationship with the company. That being said, if you're not getting a raise at least every year or it's a burden to get one, get the hell out of there!
I was told I would not be getting a performance review this year. :(
So my sister is senior HR at a tech firm in town and I asked her this very question. In her opinion, or at least in her company its treated on a case by case basis. If somebody is valuable and an asset to the team then they will try and keep them, if not they kind of just wave goodbye and wish them well at their new job. Maybe if I get a job offer that is good enough I'll just have to take it and thank them for at least trying to get me to a better salary.
It's not the right experience. And you've already established that it's not even the wrong experience at the right price. I might take some flak for this, but **if you're optimizing for dollars**: The #1 best thing you can do for yourself is get a job at a big name company. Microsoft or Amazon if you're bound to Seattle. Facebook, Google, Twitter, Uber or some other big name if you're able to get down to SF. If you can't work there, look for big names that do remote work: GitHub and Elastic jump to mind. Getting a name like this on your resume get you the interview at nearly any other job you'll apply to for the rest of your life. From there you have to stand on your own merits, but it's one less roadblock for you. The only exception to this would be if you were getting paid tons of money to work at a no-name company. But you've already established that that's not the case.
It may be a standard practice, but I don't agree that it necessarily proves that someone isn't a team player or greedy. There's nothing at all wrong with desiring fair compensation for the work you do. If s/he is actually underpaid, there's every reason to attempt to fix that.
This isn't C#... try a VB sub.
It means an under specified assignment, unless there is information you're not giving us. 
Why not? You've worked there for over a year.
Your question is not "what I should be making?", rather, it's "what do I do to make more?" Capitalism 101 is: there is **no value** for goods/services, except what has been agreed at the moment the exchange is made. There is no need to speak of your achievements to the anonymous internet. Rather, argument that with your employer, or your prospective employers. At the end of the day, your pay is going to be a function of: X% on your abilities, Y% on your work, Z% on the industry and W% on your salary negotiation skills. As for actual salary numbers, there's websites with stats for this, that should be your first stop, did you try that.
Some companies give a performance increase in lieu of a merit increase. If your raise isn't much more than 5%, you pretty much just got your merit increase early. 
I actually should of been == using in the first place, I did want it to be null, I don't know what I was thinking
You really should revisit MVC and I'm sure a lot of people would give you the same advise. If you don't know C# you should start there first and completely ignore the web development till you have C# down. I'm also working a full time job, none developer role and also got two kids - it's fun isn't it balancing it all! Like I said previously happy to help you get to grips with MVC if you want.
The first is what is required by the CLR, but C# allows you to omit it. It will then insert the "new WhateteverDelegateType(...)" automatically.
If the backing collection is likely to change while executing, the entire code should be more explicit about it in the first place.
To *fully* understand, sure, but most people don't need to. I bet most people don't understand how delegates work at the low level.
"very much"? I don't agree. Sometimes? Yes.
It's more the opposite way around. A lambda is a C# language concept that gets converted into a delegate field along with a method or class used to hoist in closured variables.
There are several websites with specific statistics for your area, level of experience, what kind of development you do (web/mobile/desktp/embedded/etc). I usually check activetechpros.com. Edit: according to that website, a junior web developer in the USA should be making $43k. For other kinds of applications it may be $65k.
It's not all of sudden. EF and ASP.NET MVC have been open source for a long time already. The whole open source initiative started thanks to Ballmer.
Significantly underpaying your staff is kind of greedy. This works both ways. The company doesn't have your best interests at heart, so you have to look out for number 1.
If it's this hard to get fair compensation out of them now, how hard will it be 5 years from now when you're worth even more?
There are no VS2014, only 2013 and 2015
&gt; The whole open source initiative started thanks to Ballmer. ...I'm not discrediting you, but that sentence seriously sounds trollish.
If the internet can be created by Al Gore, why shouldn't poor Ballmer get some fake credits too?
Cool idea, but I need it for the whole screen. Would that still work?
Visual Studio is always going to be a million times better than any cross platform IDE. So for the best productivity, try to work with VS in a virtual environment when your on another platform. That said, https://www.visualstudio.com/en-us/products/code-vs.aspx is in preview. It's cross platform, but it doesn't have near the features of VS on Windows. My guess is, in the coming years, VS will become fully cross platform.
I'm pretty glad C# doesn't have typedef like C++. I think it keeps the code _more_ readable. When people start synonming int with NUMBER, and use NUMBER everywhere, I always internally sigh. I have to dig around their code and figure out their codex/rosetta stone. What they like to call things. It's annoying. That said, typedefing for function pointers can make things more readable. But in C# we have delegates, so it's no biggie. 
I haven't really missed MI. With composition &amp; dependency injection, I do everything I used to do with MI and it ends up being easier to test. I have a feeling that the MI use case for C# is sitting on someone's board somewhere, as a little sticky note ( pink I think), and if the backlog ever gets lean enough, they may throw time/money at it. I'm a big fan of not 'dumbing' down C# because people will misuse a feature. I think it should have all the features it can, and be as sharp as it can. It's up to us not to cut ourselves. Same I guess with Typedef above. I abhor it's casual usage in C++ (Does int really need to be renamed to Score? for the return type of getScore?), but I don't mind if someone else requires it to write good/better software. Or it prevents them from tapping their foot and saying "that's not right" over and over again. 
Which also covers his point on &gt; redefine an underlying type so that it is not interchangeable with the new type If you *wanted* it to be interchangeable, there's even an implicit conversion operator.
My biggest advice is to come into C# with an open mind. Lots of C++ dudes I know freak out over microoptimizations (e.g. overhead of array access due to bounds checking) without realizing the tradeoffs that languages make in their design. Lots of design patterns exist in C#/Java land that don't have parallels in C++ - it's at least worthwhile to understand why they exist and (more interestingly) why they might not exist in C++.
i think it's kind of difficult to do that in a lot of situations. the most common situation i run into is passing selected items from a listview as a command parameter for a remove operation. i should remember if i'm removing selected items from the observablecollection backing the listview the change is going to propagate out and my selecteditems collection is going to change. sometimes i forget to make a copy before iterating over the collection and i get a run-time exception when testing my code. i can't really think of a way to make that situation more explicit.
You absolutely have a choice. If you love the company and love the work you do. You should think about how much that's worth. Because another company might not be as enjoyable to work for. Just keep that in mind.
lol I just mean that it sounds ludicrous, like hot water freezing faster or Saudis importing camels from Australia. I believe it, but it still sounds crazy. Edit: Or like the [Pope releasing an album](https://www.reddit.com/r/nottheonion/comments/3mcgrm/pope_francis_is_releasing_a_progrock_album_called/)?!
"I had a hard time building a performant database engine in C#, so it's really not suited to most development activities."
because creating a new type is not the same thing as type aliasing.
My problem with typedef is that I always want more. Say I use typedef to create a `meters` type and a `seconds` type. Almost immediately after I want to define `m / s` as returning the `speed` type.
The big differences between 2012 and 2015 are: Better Performance measuring tools that'll allow you to accurately gage which areas of your code are performance hogs. Better intellisense support for scripting languages like JavaScript which is a godsend if you plan on doing web work. Support for C# 4.6 - If you want to use the latest C# features you'll have to be on visual studio 2015 Better mobile and tablet support - If you plan on working with xaml you can preview your xaml working on different screen sizes so you can be sure your project looks good on every device There is also some enhanced breakpoint and debugging features such as the ability to launch an action when a breakpoint is hit for running test methods without altering the code. If none of that sounds that interesting to you then feel free to keep using 2012. I don't think you'll notice much difference between the pro version and the free community version. It used to be a much bigger difference but with 2015 they're trying to attract more indie developers so they added a ton more features to the free version to the point where there is very little getting the pro version actually does for you.
It just seems so hard from this end. If I didn't have those EF tutorials, I wouldn't know where to start. It's completely foreign to me. In reality, I guess i'm just altering/adapting the Contoso Uni sample to fit my flow. But even thats not working. The app will be integral to my new business but I' loosing heart. Chin up ol' son, I say! 
A while ago I wanted to detect characters in League of Legends [Artwork](http://i.imgur.com/NGjv7A5.jpg). This felt challenging at first because videogame characters come in all shapes and sizes, colors, eye counts, etc. My solution leverages [edge density histograms](http://i.imgur.com/SpZtJDX.jpg) to find characters. This works because videogame artists usually place detail on characters over their environments. Here are some [results](http://i.imgur.com/o8A0nhj.jpg)! You can view the code on [github](https://github.com/the-dargon-project/the-dargon-project/tree/master/Dargon.Modifications.ThumbnailGenerator.Impl). I also wrote a blog about it [here](http://www.itzwarty.com/character-detection-in-league-of-legends-artwork/)!
Just out of interest do you have any coding/development experience at all?
I'm the creator of OmniXAML. I'm happy to tell you that OmniXAML is now MIT. Feel free to use it :) 
OmniXAML changed its license: MIT. Feel free to use it in your projects :) I hope you could also take a look and improve. 
Nope - Access?
No wonder you are finding it difficult. Before you can grasp the web side you'll need to grasp the C# side. I'd start here: http://www.pluralsight.com/courses/csharp-fundamentals-csharp5
LOL. Exactly. 
Xamarin's IDE.
the free version (community edition) of vs 2015 is essentially the pro version. i think it's missing like 1 or 2 features that i've never used. there are just licensing stipulations. you can only sell the software you make with it if your company is 5 employees or less, etc.
I work with a program called FIRST, which is a series of robotics competitions. We use National Instruments controllers, and I have been porting the control code to C#. The official supported languages are Java, C++ and LabVIEW. There have been about 10,000 lines of code to port, and everything has actually been ported pretty smoothly, and I've been working on it since May. [GitHub link here.](https://github.com/robotdotnet)
It's C# 6 and .Net Framework 4.6
Right. Thanks.
It's not underpaying if he accepted their offer. He's only been working for 1.5 years and he's gotten a raise.
[It's been 11 years since the first OSS project.](https://en.wikipedia.org/wiki/WiX)
Hey that's handy, but if I read the solution right it still has limitations. The big one being that two dbcontexts are being created foreach: schema1 and schema2. Wouldn't that mean a join between the two schemas would result in the CLR joining the results instead of the database? Still a good find. +1
If you create your classes Code First style, you can define foreign keys even if they're not in the database.
OK, first off, disclaimer. I build systems like this for a living and I've rewritten this response about 15 times because I keep trying to only give you a couple of "light" comments, not rewrite your whole database. So sorry if this comes across a bit brash. Also, I generally write for funds, so my DB schemas are way more complicated than yours needs to be. Congrats on Enterprise SQL Server license. I'm curious what the limiting factor was on the Standard or Web you had? Was it more a size issue and you were trying to save space before? Really, the big things ( other than DB size and memory ) that you get now is Indexed views and distributed partitioned views. Well, and high availability and replication and all that sys eng stuff. But from a developer perspective, not much should have changed. Some critque: &gt; Since every option is a derivative of the underlying stock, option's relationship to Stock is "Stock has Options" and "Option is not Stock". So I'm guessing Option doesn't inherit from Stock. Stock and Option are both two sides of the same coin, namely AKindOfFinancialInstrument. This also makes room later for other instrument types (hopefully you never have to deal with rated instruments). I'm not a huge fan of the TradingDay table. We used to do this to save memory (albeit differently), but these days it's not worth it. Your StockDay can safely use a Date for 3 bytes rather an Int for 4 bytes. Your concept of stringing together multiple factors ( fields ) to make a PK for Option is likely not going to net you much. Well, I guess it depends on which sort of desks your going to be running on. If your logging trades, then just give your options a GUID PK, and FK them to the Stock. If you need Surveillance, this should still work for you. If you want your system to help traders find amazing Options, then... maybe, ridiculous combined keys make sense. But remember, you don't have to have to have your Clustered Key be the PK. If you think 5 factors of options really help organize 40 years of option data, then make it the clustered key. Better yet, partition it ( your Enterprise now, boldly go). but make your coding life easier, keep you FK's simple. I love the simplicity of your design. I almost shed a tear for it. At some point, splits, bonds, ratings, Bi-Temporal management, auditing, SOX retention and other horrible, horrible things kill the innocence of the original 6-10 table "good enough" design (and this is before your client has you building a data warehouse schema, because they need one). Hold on to it as long as you can. 
Very true :) I only meant to emphasise that, in general, if one is underpaid, it's not greedy to expect a fair bump.
You might want to check your dates. Microsoft came around starting in 2007 when the Gu (red shirt, not the other Gu) started moving DevDiv in the right direction. They started hiring Hanselmen and a few other like Glenn Block and those guys really pushed to get new projects done open source. It's taken years to make it happen and it happened without Ballmer. It happened by people close to the projects. And was finally make full scale when Satya took the helm. Anyway. It's great where MS is today. C# is huge and has a lot of advantages once it's running on Linux entirely. 
Are there any Roslyn-based ReSharper alternatives?
I've made [YouCast](http://youcast.i3arnon.com/). It's an application that turns YouTube channels and playlists to audio and video podcasts. It's great for tracking your favorite channels without blowing up your mobile plan and battery.
Thanks for the great reply! &gt;I'm curious what the limiting factor was on the Standard or Web you had? I'm not sure which one I had but my problem was that that primary key file couldn't go over 2GB or maybe it was 4GB but I pretty much hit a wall. This was 3 months back and back then everything was going great. Since then I've been struggling to rebuild and what ended up happening is that I kept simplifying my tables. I had close to 20 tables with very little relationship-wise. I broke them down, merged them and after lots of revision I got it down to a simple &lt;10 entity design. &gt;you get now is Indexed views and distributed partitioned views I have no idea what these are but I wrote them down to look into later on. I don't do anything inside SQL, I try to keep all my work inside Visual Studio. &gt;Stock and Option are both two sides of the same coin, namely AKindOfFinancialInstrument. I had the exact same thought when I was typing that part but for simplicity sake I'm considering options as totally different type of MarketSecurity distinct from Stock. I was thinking of implementing an interface called ITradable used by Stock and Option. For options I thought I would implement IExposure and that could have the delta,gamma, theta,vega. I think it would be useful in testing different option strategies (verticals, ratios, calendars etc). I'm never buying the actual stock. My system only deals with Options. The stockdata is simply there as a reference point to implement the system. &gt;I'm not a huge fan of the TradingDay table. Actually TradingDay isn't the table, it's a c# class that creates a market open day. The entity in my Db is Calendar {Datetime DT, bool MarketOpen, string Opex} //opex is nullable and when DT is an expiration day, opex value is "'15 Sep1" for Sept's first weekly expiration, "'15 Sep2" for second week, "'15 Sep" for the monthly. From calendar I get two lists that I use in my program VERY often TradingDay // which is CalendarDays.Where(MarketOpen==true) Expirations // which is CalendarDays.Where(Opex!=null) The main reason I need Tradingday is to easily access the nexttradingday, lasttradingday to easily execute loops without getting thrown off by holidays, weekends etc &gt;PK for Option is likely not going to net you much. Well, I guess it depends on which sort of desks your going to be running on Do you mean tests? or desks? I'm not sure. I'm only interested in the Options market. I'm working towards a buy/sell indicator type of application. I don't want it to do the trading. I have a system that I used to run on a handful of stocks by calculating and tracking options on paper. It worked pretty well and so I thought why limit myself to 20-25 stocks and so I set out to cover the whole US stock market. The application is only for personal use and I'm not sure what Surveillance means and how amazing Options can be searched by combinedkey. What I want to work with is roughly this object: List&lt;Tuple&lt;TradingDay, List&lt;Tuple&lt;StockDay, List&lt;StockIntraday&gt;, List&lt;Tuple&lt;OptionDay, List&lt;OptionIntraday&gt;&gt;&gt;&gt;&gt;&gt; I'm not sure if that came out right, but that's what I have in my head. Once I have that I can jump between tradingdays to test my system and then simplify from there to something actionable. Also my data is very limited. I can now scrape most of the data from internet and the thinkorswim software. So, I have the end of day data (stock+option) on roughly 100 handpicked stocks from 2013 to now. But if my DB sorts itself out I can harvest the whole market daily (stock and option including intraday) in under an hour if nothing breaks down. &gt;I love the simplicity of your design. I almost shed a tear for it. I'll take that as a compliment. But honestly, you are one of the few people who understands my requirement. I'm wondering if I can link you to my dropbox and if you could give me some pointers. I've pretty much done it all using Google and city-library near my house. I don't know anyone who can guide me so it's been a tough road. At the very least, I can show you the sql file which holds all my table creations in order. You could build my whole design just from that and have a look. 
Not all of these are Rosyln based, but a combination of these extensions should get you fairly close to the main ReSharper functionality for free. [Refactoring Essentials](http://vsrefactoringessentials.com/) [Code Cracker](https://visualstudiogallery.msdn.microsoft.com/ab588981-91a5-478c-8e65-74d0ff450862) [Move Type To File](https://visualstudiogallery.msdn.microsoft.com/5746c6ea-1f92-43f0-8bab-ec6f8573cd6a) [Code Maid](http://www.codemaid.net/) [Sando Code Search](https://visualstudiogallery.msdn.microsoft.com/06f39a31-20ce-408c-afee-8a02b484db1c) (replaces 'Navigate To' and 'Go to Everything/Type') [Go To Implementation](https://visualstudiogallery.msdn.microsoft.com/0ed93222-83cd-4db3-92bc-a78909047156) [Inheritance Margin](https://visualstudiogallery.msdn.microsoft.com/3a55d546-0cb2-4991-a002-e6be8ce09f08) (replaces the gutter/margin icons that let you navigate to base class implementations/interface definitions/etc for properties and methods)
You can get [fairly close](https://www.reddit.com/r/csharp/comments/3medb5/resharper_10_early_access_program_release_2_with/cvegmiu) to ReSharper functionality these days thanks to Roslyn-based extensions. Obviously you're experience won't be as good as ReSharper, but it's good enough for free.
If only, C++ could get rid of header files. No need to duplicate prototypes, faster compilation, no circular dependency problems, no need to worry about which files to include...
"Minor changes"? Postfix Templates is HUGE.
DevExpress has a Roslyn version of their Code Rush. I think it's still in preview right now.
I thought [WTL](https://en.m.wikipedia.org/wiki/Windows_Template_Library) may have been the first, but it looks like WiX wins by a month.
Mono Develop (Xamarin Studio) does work good. But there are some drawbacks to it compared with VS, it also just does not feel as "fluid" as working with VS. For Example i got some Problems with dll references where the File got updated. But all in all it works pretty good. Using it on: * Mac OS, Windows and Linux for * App Development using Xamarin (only Windows and Mac OS) * Web Development (using NancyFx and ASP.Net MVC 5) * Service Development A really nice Advantage can be that you force yourself into cross platform compatibility as early as possible in the development process.
Sarcasm? By no way Postfix Templates are huge. A nice gimick, nothing more. Personaly, I find them counter-intuitive and go against the flow.
It's more than that. Check it out: https://github.com/controlflow/resharper-postfix#features This basically turns the bullshit inherited from C into what feels like a modern programming language, removing the prefix operators and branching (!, if, loop, foreach, casts), keyword operators (await, return, throw etc). I can't tell you how many times I've typed `.ToList().ForEach(item =&gt; something)` and later refactored because `foreach` loop is so backwards. Or how many times I wish I could do javascript-style `something ? something() : something()` instead of `if (something != null) something(); else something()`. Then you've got casts, which is a special kind of bullshit. This can be partially solved with extension methods, but look at this: You type `var v = Bar.Baz.Qux.Tada.Bada` aaaand then you realize Bada is of wrong type. You have to go all the way to Bar, put a double paren there, type a space, step left so that code completion may work here, find the correct type name and pray that intellisense guesses you correctly, close the paren, go back to the end of the expression, close another paren, and finally type `.` for the members. What the actual fuck? All I want to say is "Cast to T". Even saying `.Cast&lt;T&gt;()` is too much. The problem with Postfix is that it only works with R# IntelliSense, which is shit. So I guess I'm not using Postfix until they are at least getting IntelliSense feature parity with VS 2015. :\
For me it's goodbye to ReSharper. I might accept the new license model for IntelliJ if I was a Java dev. VS is at its own a great (good enough) IDE.
&gt; because foreach loop is so backwards In what way do you see it as backwards? I've encountered multiple scenarios where conceptually the solution to the problem is best-modeled imperatively.
Well to write a foreach loop you first say that you want to iterate something (`foreach` keyword), then declare the item variable, and then find the thing you want to iterate. In my opinion it's much more logical to first find the iterable, then iterate it using a code block or a function. This is similar to functions vs methods. In C, your would write `Method(obj, arg)`. In modern languages you have methods so you can write `obj.Method(arg)`. Same thing with loops: it makes much more sense to first acquire some context and then do something with it than vice versa.
The FileSystemWatcher isn't necessarily bad, but it can definitely have performance issues. What I've done in the past that works really well is to follow a producer-consumer pattern. Keep the callback code as simple as possible - don't actually do the processing in the callback. Instead, when you have an event fire, the only thing it needs to do is add the file path to a queue (using lock/thread synchronization) and release a Semaphore. Then you have another thread (or pool of threads) go through the queue processing files. When the queue is empty, the threads wait for the Semaphore. Edit: As for duplicates - I don't think it should be an issue as long as you move or delete the input file when you're finished transcoding. Sometimes the file may not be ready yet (like if you're downloading a large file - it might fire an event even though only part of the file is there). In that case you might need to play around with timing, or checking the file state (readable/writable/etc). Sometimes if you have a really long queue, it's enough to just move that file to the end of the queue. And if your transcoding fails, you'll still want to move the input file to some sort of "error" directory. Basically, you just need to make sure that files don't get stuck in the queue and cause your threads to constantly try and process them unsuccessfully over and over.
I'm not talking about specifics here: `ToList` or `ForEach` or `foreach` or any other language construct don't bother me. (Even though I don't understand the "not pure" argument against `ForEach`) This is language/API designers' job to invent those things. What bothers me is code write-ability. When you want to iterate a list, most likely you already have that list, yet the language wants me to write that list expression last in the queue of tokens I use to express my intents to the compiler. Let's say I have a task, "kill all cats in `city`". Now that I only have the `city`, I have to work my way from it. Can I do `city.KillAllCats()`? Is there `city.Cats`? Can I do `city.Cats.KillAll()`? Or do I have to apply `Kill()` to each cat from `city.Cats`? Only when I figured all these questions and if I happened to have some enumerable of cats, I want to somehow call `Kill` on each that cat. It happens so in C# the main construct for iterating things is `foreach`, which is to be typed first, before you even start thinking about the `city`: `foreach (Cat cat in city.Cats) cat.Kill();` To me this makes zero sense. Instead, only when I've found that `city` has `Cats` and it is iterable, I want to actually iterate the object. But I cannot and have to go backwards and write `foreach` and the variable etc. At the point when I want to iterate the object, I don't even care what the final language construct will be (as long as its somewhat readable). My caret is on the iterable object and I want to iterate that shit, now. &gt; "For each one of the things, do [action]". It's almost a straightforward translation. Do you also prefer `WriteLine(line, Console)` because it reads "write this line to console"? (Instead of `Console.WriteLine(line)`)
EF is for novices that don't really know what they are doing. The fact that you even know it is possible to create multiple schemas with the same table structure puts you well beyond the capabilities of EF's design team, let alone its target audience. 
I have found that even for a low amount of files that the FileSystemWatcher is unreliable. It would just miss files and since it watches for certain events, it doesn't pick them up once it missed them. Chose for poling in the end. Since media file transcoding is not really a high priority, you can poll every 10 seconds or so (or more even)
That's what it was. I'm asking what it now is, because in a subscription model that has no bearing.
I like it, but it's really bothering me that the code throws a null exception on a not null check.
What exactly are you trying to do here? It seems like you're trying to get email information out of gmail into some other system. If that's the case, doing this by downloading the HTML is probably not the best way to go about that. Google exposes this information in a more direct way using a restful endpoint and even provides libraries for talking to them without having to do all the nitty-gritty network stuff. https://developers.google.com/api-client-library/dotnet/get_started
It's not the same thing as a header file, but I usually write interfaces (IMyClass) before writing MyClass. That might feel a little more familiar to you.
Yeah you can do that in Moq, specifically. Forgive me if this doesn't compile but it looks close to this: myMock.Setup(x =&gt; x.MyMethod()).Throws(new Exception()); This could help you test exception handling code paths of the caller of myMock.MyMethod()
Yeah, that will end up with an in memory join for sure. I think for now, the best bet is let EF join in memory if it's small result sets. If you need to do some heavy lifiting between two different schemas, then wrap it in a view or stored procedure, and expose it through your 'primary' schema. In the last few years, DDD Bounded Contexts seem to be the norm. I know in my last project, we had at least seven different DBcontexts. I'm kinda surprised someone hasn't added a layer to DBContext to make it multi-context aware, allow SQL to perform joins across what is essentially two DBContext. I could see it valuable for having multi database joins as well (and leverage DTC if across two servers). Obviously a lot of edge cases. 
Given some multiple of available images per screen at very high resolutions, a list&lt;image&gt; could take up a lot of space in memory. Might be better to store paths. 
OK, You added a local SQL DB to your project and hooked it up with a connection string. You're 1/3rd of the way there. You have a few options. I'd recommend you go the Entity Framework route. But you don't have to. By default, your VS environment can help you design the database schema, and leave you with a DataSet. With ADO.NET you can insert/update/delete, bind the dataset to a grid for display, etc. I'll walk you through some of this, but there's plenty of tutorial out there on building your first database app with VS/c#: You need to do make a table to hold your data, and then write code to insert into that table. You have a lot of option shere. You can use the "Data Sources" window in VS to design your database schema ( Shift-Alt-D). Right-Click Edit data source with designer. You can then use the toolbox or right-click menu to put down a DataTable. You then add your columns... etc. You need a primary key. It seems like a DateTime will give you enough precision, as you are only refreshing every 2s. But you need to decide how often your in_dataSplit is going to update. If it updates multiple times a seconds, then Datetime should still give you a unique value up to about 3.33ms. If you need to read faster than ever 3.33ms, you don't want to use a DateTime as a PK. You'll want to UniqueID or GUID it, since in theory two samples could have the same DateTime. OK, you make a table with a column called TimeStamp, it's a DateTime and you right-click set it as a PK Now add three columns for Light, Temp, Moisture as three other columns as Decimals? ( not sure if these come back 0 to 1 (decimal), or 0-255(byte) , you'll have to figure out the appropriate data type to store them with ). You can rename your DataTable1 to Metric. Make sure you click on each column and in the properties set their data type. Save that, you now have a Database with a single table, which has a PK column and three data columns. Also, you'll have a DataSet made by the wizard for you, in your project. You can create a new instance of this in your project to interact with the table. Example: Database1DataSet ds = new Database1DataSet(); Database1DataSet.MetricRow newRow; newRow = ds.Metric.NewMetricRow(); newRow.TimeStamp = DateTime.Now; newRow.Temp = 0.13M; newRow.Moisture = 0.55M; newRow.Light = 0; ds.Metric.AddMetricRow(newRow); ds.AcceptChanges(); That's it, you've written a row to your table. You can bind a data grid to that dataset to view the rows. gl 
I think like most people who will respond in this thread, we all eventually tamed FSW, but it was a ton of edge conditions and probably a lot of sleepless nights depending on what the usage was. I could give you my code, but honestly, it's from .Net 2.0 days, and I'm sure there's something better out there. I did a quick search, and found this: https://petermeinl.wordpress.com/2015/05/18/tamed-filesystemwatcher/ I really like his RecoveringFileSystemWatcher . I ended up wrapping my FSW operation in a Transient Fault Handling block to keep it reliable and recoverable. But I think I like this guys approach better. 
Dapper is good choice if you want pure performance. I often roll my own though. It isn't hard to create your own mapper and it allows you to easily add application specific concerns. For example, ensuring that the UpdatedByKey is always set.
True, in a list of paths. Depends on the response time necessary
Wut? Android Studio is for building Java based apps. As far as I know, there's no version of Android Studio for C#. AddComponent() is a method on the GameObject, it's nothing special to the IDE. You can write Unity scripts in Notepad and still use AddComponent. 
Thanks for a very wellwritten guide and for taking your time. Unfornently it didnt help, I aint getting any new rows .. Neighter am i getting any errors so i guess im close atleast. But to be honest i really dont understand what im doing, so i will give up now and show this to a friend tomorrow insted. hopefully he will be able to sort it out. Once again, thank you!
You mean as an exe file? Whenever visual studio does a build it creates an exe. As long as the PC running the exe has the correct references (probably just the .Net framework for the course) then it will run. Check your projects bin\debug folder the next time you build or debug an application
Yes it's a .exe file. So if I send it to someone that does not have VS the demo will not run?
You first need a table. No idea on your table structure, so here's a simple way to do it. You only need to do this once, run it against the db either in the sql analyzer or in your code to create the table in the database. create table dbo.YourTable ( Id int identity(1,1) primary key ,Light float not null ,Temp float not null ,Moist float not null ,SampleTime datetime not null ); alter table dbo.YourTable add constraint df_SampleTime default ((getdate())) for SampleTime; if your db doesn't support identity or default value constraints then do something else. Now in C#. using (var sqlCxn = new SqlConnection(YourConnectString)) { sqlCxn.Open(); const string qryStr = "insert into YourTable(Light, Temp, Moist) values (@light, @temp, @moist)"; var sqlTran = sqlCxn.BeginTransaction(); using (var sqlCmd = new SqlCommand(qryStr, sqlCxn, sqlTran)) { try { sqlCmd.Parameters.AddWithValue("@light", YourLightVal); sqlCmd.Parameters.AddWithValue("@temp", YourTempVal); sqlCmd.Parameters.AddWithValue("@moist", YourMoistVal); sqlCmd.ExecuteNonQuery(); sqlCxn.Commit(); } catch { sqlCxn.RollBack(); throw; } } }
NOVICES: If you don't know what interfaces are, or you're not sure why you'd use them, listen up - interfaces are one of the most important things you can learn if you want to write good code. Interfaces are the backbone of every large, well-written, well-tested and well-maintained codebase out there.
[HN thread](https://news.ycombinator.com/item?id=10285733)
Ayy dude, you went so dramatic at the beginning with that "NOVICES". xD But he's right, the concept of interfaces may not become very useful for you at the beginning, but as a software project grows larger you will notice how indispensable they're.
Automatically upvoted because stupid title.
haha, possibly was a bit OTT but I skipped over interfaces when I first started learning and then (literally) years later realised I'd been missing out.
You almost had my attention. And then you mentioned COM. 
Yes. Just start and figure out your way from there. 
So [this](https://www.youtube.com/watch?v=g5QFW12utdU&amp;feature=iv&amp;src_vid=eIsGXwisKPE&amp;annotation_id=annotation_2932402067) would be a good start?
Thank you for the information! :D
This have an execution unit or is it just a parser?
The author completely misunderstands the problems with inheritance and structs, specifically regarding the size on the value. Rather than inheritance, he is using one struct as a mixin template for another struct. That's pretty cool, but when we talk about inheritance in a C# context we mean polymorphic inheritance.
And the most important lesson is understanding that every class has a "public interface", a "base class interface", and possibly a "protected interface". Without truly understanding this, you'll never be able to write high quality Application Programming Interfaces (APIs) in C# or Java. Far too tutorials skip over this really important detail and jump right into "abstract interfaces". 
When I want something. I don't let anything stop me. Played guitar left-handed then my frethand got injured for life. Well I switched over to right-handed guitar and started all over again just because I wanted to play guitar. 
I've been programming comfortably away for a few years now, and this just so happens to be the first time I've discovered interfaces (oops). I think that's kind of the issue with self-education really, since you tend to miss all the little nitty-gritty features that really keep the code running smoothly. 
Ok so you're a musician - you likely have a good understanding of music theory and fundamentals and know how to use it to create the sounds you want. Programming is similar, having a strong grasp on core computer science and programming concepts is key in being able to make games. Don't learn to make games, learn to be a good programmer so you can make good games.
I finally decided to go for mysql after trying pretty mutch all my other options :D. and.... finally everything works ! This is how hard it was... MySqlConnection con = new MySqlConnection( "Server=localhost;Database=gb;UID=root;Password="); MySqlCommand cmd = new MySqlCommand( " INSERT Into values (temp, moist, light) VALUES ('" + in_dataSplit[0] + "','" + in_dataSplit[1] +"','" + in_dataSplit[2] + "')", con); con.Open(); cmd.ExecuteNonQuery(); con.Close(); Thanks for all your help reddit
I'm guessing one of the entries in the zip file has a path like "../foo" or "/bar" that would resolve to a parent directory, as the exception says. `ZipFileExtensions.ExtractToDirectory` has a safety (?) check for that, but the other methods don't. So just use `ZipArchive` and manually loop through the entries and extract them. But you probably want to make sure that the archive is trusted and this isn't a security issue. I'm assuming the check exists because such entries could overwrite arbitrary files to sneak in code or change configurations.
Are you kidding? Double has ~15 decimal precision while float has ~7, if you're on a 64 bit machine there's essentially no reason to not use double. "Long" is used in things like filestreams where a file might be longer than ~2.4 GB (the max value of int). Byte is constantly used in all sorts of applications, particularly when storing and retrieving binary data. Char is used for strings. Decimal can keep a constant arbitrary precision.
You're too old, fat man. Your tits are too big. Get the fuck off my porch. Seriously. Just do it. Shia Lebuff do it. Asking here is a way of procrastinating. Just do it. You get confused, ask here. But show what you have done, best way for us to help. Honestly, follow unity 3d tutorials first. If you go pure c# you'll give up. You have too much to learn. You need something to drive you. Keep iterating in unity, learn the environment, keep fighting your code. Tame it. Come to us when it's too wild. 
Alright, so is there a way I can prevent the exception from getting thrown. Again, sorry if youve made it obvious, I'm still inexperienced. Thanks again!
Thank you!
Yeah sorry about that. I just downloaded the Ionic library and it works great, so I wont be bugging you any more!
Absurd amount of systems implemented in Excel- this type of thing aids in moving them to more structured implementations.
With this project you can implement something like [this](http://activemesa.com/x2c).
I am using .net lib for Imap, Mailkit to access mail. As my system will be integrating with ymail soon so using gmail's api would not work. Also the mailkit provides very nice way to access mails. Its the attachment that is being fetched as stream. Attachment is html page that is troubling me!
Why JSON? Don't you think it would be great to add some comments to such a file? Nope, can't with JSON.
Thanks for your comment @AngularBeginner. CodeCop has a fluent API that you can use also, so no problem there. The JSON API makes possible to add or remove new types and interceptors without code redeploys and in a total decoupled / unobtrusive manner. 
I run into floats often when doing COM interop, so the answer to "why use float over double?" seems to be that you'd use floats when interfacing with a library that uses them. Otherwise, agreed.
I wouldn't overdo it. Instead of improving readability, too many regions can hamper it. Your true answer will come, not when creating code, but sometime down the road when you're reading / maintaining it. I used to create a lot of regions. Now I don't. :-)
Instead of trying to convince people they are wrong and your hammer is better. Try to understand why the application is working the way it is. Try to really see what it is that's being gained by the system as it is. Try also to see what is lost by changing the current architecture. Making large scale architecture changes to a working, deployed application is not something you often just do. These things take a lot of time and effort and often offer a fraction of the benefit you think you'll see. Especially when you think about the feature time lost while rearchitecting with no concrete reason. 'Because it's not best practice' isn't a concrete reason.
To me regions serve to encapsulate blocks of code. We already have methods\functions and classes for that. I'm then left thinking regions are a code smell and that perhaps we haven't designed our code well.
A clean object with data inside of it is an object that is constructed with the original data, or set via some other method that makes it not dirty (eg clone perhaps unless you're cloning over another object, it's up to you )
I really think that would never be an issue out side of a public-anyone can work on it and code how ever they like open source GitHub project. It takes 3 minutes to automate that process and maybe 2 extra to even further enforce it with refactoring. That's if you look it up on your own via google, if some one was actually working together on a project maybe 5 seconds to find and send the settings files :).
I felt this exact same way until I saw this style. Now I'm starting to wonder if it could be something useful in some cases. This is the code I saw using it, for a better reference. https://github.com/ZenLulz/MemorySharp/blob/master/MemorySharp/MemorySharp.cs
I used to use regions all over the place for the folding. But these days i only use it where i declare a singleton. 
Agreed, you could implement a small prototype that implements a ddd type design including unit tests so you can demonstrate the power and flexibility of being able to swap your injected dependencies with mocked data. All said and done you might not get your way but your will be able to demonstrate your reasoning in a practical and intelligent manner.
I comment alot so my code can get kinda messy. Regions are very helpful to me, yet i have never used them to this extent.
Ugh no. Save regions for when you really need them to group related functions in an overly large class. When you have that many regions you are just introducing noise.
http://anti-region-legion.org
The top level regions (Events, Fields, etc.) are fine, but the rest seems a bit redundant (a region for each property?), even messy. Personally I wouldn't be able to concentrate.
Yes, use regions as a simple signal to me that your code is in need of some serious review. 
Naturally, the polar opposite is represented. How about a reasonable middle ground? :P
yes it is, they're both shortcuts around the same problem: your classes are too damned big. Partial classes are meant for dealing with generated code - much like regions used to be.
I love regions. there so practicle
Exactly. And among the two.. partial classes are preferable. That way it's at least seen in the solution explorer.
Region to encapsulate your properties in one block? That's ok. Region for each property? Huge overkill. It makes the code harder to read, and readability is king. Even if this code is "just for me" when you look at it a year from now the regions will hurt you
I find regions are great for old code that I'm debugging that I don't have the time/budget to refactor (because that necessarily includes regression testing). I do not use them for new code, because of what others said: If you are using them while actively developing code, it's a sign of poor design. Using appropriate naming, abstraction, and architecture and your code will be clean and readable without needing #region.
Also you might want to consider an another approach to your menu since a switch inside a switch doesn't sound good. People here might be able to suggest some more specific solution if you share your code and describe the problem you're solving :)
Very useful comment @Sarcastinator. Thanks! :)
Do you know physics? Really good game developers in 3D games need to know physics.
Regions are just noise to me. I prefer to remove them.
I wouldn't use regions for the individual properties. Instead, I'd use regions to break apart (e.g.) properties vs. methods vs. fields vs. events [vs. ...] in an excessively long class.
How often are you going to spam this here? Must be the third or fourth time in a week.
Regions are for that too. Partial classes (and regions) are tools. You can use them however you choose to with varying results. If you have a big class that you can't break down to smaller ones.. splitting it up to multiple files is preferable to hiding code under a label.
To quote the post: &gt;##Is there a good use for regions? &gt; No. There was a legacy use: generated code. Still, code generation tools just have to use partial classes instead. If C# has regions support, it's mostly because this legacy use, and because now that too many people used regions in their code, it would be impossible to remove them without breaking existent codebases. &gt; Think about it as about goto. The fact that the language or the IDE supports a feature doesn't mean that it should be used daily. StyleCop SA1124 rule is clear: you should not use regions. Never. Have you even read it?
You know, I've used read, re-read, and read again that post several times for the last year and I really have come to have a different opinion. **Code simplicity is good, I think we all agree on that.** Unfortunately, some things are simply not conducive to those good patterns. -------------------------------------- **&lt;Sidetrack&gt;** Take ASP.NET webforms: they have a nasty habit of packing large quantities of code and decision logic into the code-behind page, which often can easily extend beyond 1000 lines of actual code simply to get the necessary page and control events and functionality involved. Modern IDE's have all of these useful features to help make code more readable! Unlike the restricted text editors of old, we can adjust our screens (which are much larger) to show fewer or many lines of code, and the lines can be more than 80 characters long. We can hotkey around in a code file to keywords, breakpoints, or specific lines/methods; auto-highlighting, suggestive features like IntelliSense, and addons like ReSharper make our lives much easier. And languages like C# (moreso the entire .NET framework) are designed to allow programmers to write very terse code or very verbose code that results in the exact same compiled code. The difference is all in the readability. Regions have absolutely no impact on compiled code. They're syntactic sugar for the programmers to be able to read things a bit easier. Yet we shun some of those very useful features or hide behind some of the ideals that were the result of a different era of programming. Does anyone here stop and say "Oh darn, my function exceeded one screen, that means it's too long, gotta break that up!" or "Man, this one method signature is 200 characters long, I guess I had better wrap it into three lines for readability!" Probably not. We look at a method or its signature and say "*Does it violate the single-responsibility principle?*" and "*Does this code need to be refactored some to reduce complexity?*" These are good habits, so why repress tools that can help us? Because, like any tool, they are often used poorly. **&lt;/Sidetrack&gt;** -------------------------------------------------------- I come back around full circle to feel that regions are a lot like try/catch statements: they exist for good reasons, but are abused by poor programming and the end result is that we shun them as a sign of bad code or anti-patterns. As programmers, we *should* take the time and carefully consider the code we are creating and how it can be refactored to better serve its purpose before utilizing features like regions. We *should not* be afraid to use regions to organize that code to be more readable once we have refactored it appropriately.
Until somebody carelessly goes and declares properties in the constructor region, or whatever. But otherwise I agree with you, they can be ok if used carefully and sparingly, you have a trade off of hiding and creating more visual noise and it's easy to get wrong. If you ever catch someone using a region within a method, take them out back and shoot them.
Or refactor the large class and just never use them. :p
are you my boss?
A region that contains only a few lines of text is too small and makes your code harder to read. If a region that wraps a single method or autoproperty *does* enhance the readability of your code, you may want to look at your naming conventions, just to start. If you're peppering a class or method with lots of regions, it may make more sense to split things out into separate methods or classes: it may indicate that your class contains too many unrelated behaviors, or that your method is doing too many things, or something similar. Regions are handy for hiding things that somebody browsing your code doesn't really need to see: generated or boilerplate code, wrapper methods or classes, etc. I think they're fine, if used sparingly. If you're using a lot of them, you might need to look at how you're using them, and if it adds to or substracts from the readability of your code. In the example you've got, I don't think the inner regions add *anything*, and the outer one is probably not necessary if your code is laid out such that all the properties are collected together.
Why would this be worth $99 or $239? Most dependency injection frameworks for the same kind of stuff for free. And most features don't sound very difficult to create using castle dynamic proxy, for example
Long term yes, but short term it helps in the organization process.
In the short term it helps to hide the disorganization in your process :P My personal rule is that when the time comes that you think you need to create regions for large classes, that's the time to refactor. Chances are your class isn't cohesive, and a little extra thought in this area will make your life so much simpler before it becomes "too much work" to change. 
The CTOR is generally responsible for loading the data in objects like this. It would initialize all the member variables directly, without using the setter and Raising a PropertyChanged event. Thus not dirty. Some people expose a property ( like bool TrackChanges ) that allows them to disable change tracking when filling up their DTO. It depends on your DAL, as to whether or not you need this. For ViewModels, I seem to rarely need anything too complex. 
While I would agree with that rule in general, I find that for the types of applications I write there is often merit in not using an OOP style and I instead use structured programming techniques. Specifically I'm talking about things like Windows Services where there is a main loop that does most of the processing. Often this ends up being a single large function with comments denoting the steps.
It is meant to run embedded and server style applications, not a desktop replacement.
This right here is the right answer (and unsurprisingly is being downvoted). Regions are not inherently evil and frankly I'm surprised by how many people subscribe to the belief that they are. They are a tool to help make your code more readable, but like any tool it can be misused.
I agree that you should rewrite a smallish but non-trivial piece of the business logic, including unit tests and dependency injection. The IoC container you can do later. Unit testing is the key thing. Demonstrate fast iterations, easy debugging, finding a bug through adding test cases. Also try to subtly convey the notion that it's irresponsible to not have automated tests.
Sorry about that. I think it's as easy as this. string dateFromDb = "10/29/2015"; // From database DateTime dt = DateTime.Parse(dateFromDb); CultureInfo ci = new CultureInfo("id-ID"); string newFormattedDateTime = dt.ToString("dd MMMM yyyy", ci); Results in 29 Oktober 2015
http://www.adafruit.com/products/2260 This is one of several HDMI touchscreens that works with W10 IoT, or you could use any HDMI monitor for testing. It's pretty awesome, if you're already building UWP just flip the debug location in Visual Studio over to the Pi, hit F5 and watch your app run. If you hook up a mouse and a keyboard you can use them with your app just like a desktop. It's worth the $45 price of the Pi just to see this work. Disregard the misinformation in the other comment thread.
FWIW, if your database is storing the date *as a date* (instead of as a string/varchar), you should be able to get it back as a DateTime and format it however you want from there.
HOLY SHIT! My mind is blown... THANK YOU SO MUCH! I've tried something similar but the program breaks. What I tried was: string dateFromDb = "10/29/2015"; // From database CultureInfo ci = new CultureInfo("id-ID"); Datetime dt = DateTime.Parse(dateFromDb , "dd MMMM yyyy", ci); MessageBox.show(dt.ToString()); Can you explain why that breaks the program? (on line dt = ... ) I was lost and was keep browsing things about CultureInfo.InvariantCulture and stuffs, and the the solution is really simple omg @_@
There's been a lot of work put into designing high level APIs for IoT scenarios in Windows 10. The goal is to make Windows the most user friendly IoT platform.
If it's stored as a date, pull it back as a date, instead of as text. Then formatting it is trivial and obvious.
Make a business case for the changes you think are necessary. For example, you say that you have/nearly have an unmaintainable application: How much time do you spend on maintenance that a test suite would save? If you can show that the changes you propose are objectively better for the business, you will get buy in. If when trying to make the business case you are struggling, it's probably best to save these ideas for a future development.
Also, those listed are the .NET implementations you can use in C#. In the language itself it's prefered to the small case types for variable declarations and the First uppercase for static method calls like: &gt; String.Empty; It's said to improve the readability (and make codestyling more difficult ;D ) 
You could start it with a basic clone of a very simple game like Pong or Break Out.
Friend, he's asking for an IDE not a text editor. I love Atom for languages that fit that field but c#?
As of VS2013, the goto workaround was to right-click the the XAML file in the solution explorer and choosing "Open with..." then selecting "Source code (Text) editor". It looks like it [has it's own problems though](http://stackoverflow.com/questions/20591556/can-i-separate-the-design-pane-from-the-xaml-pane-in-visual-studio). No idea if this is better in VS2015 or if it has a better solution. Sorry.
I use them for implemented interfaces that are only meant to be called through the interface. This often means most of them, really. Especially this applies to e.g. WCF behavior interfaces and other things related to a plugin architecture or IoC-system. Another advantage is that the method isn't public when explicit, so you don't have to (if you have rules like that) to document it. It mostly wouldn't make sense to document interface implementing methods anyway, since the documentation will be identical to the interface's, and you risk they become out of date.
Kotlin.
Put them in separate methods and give those methods *descriptive* names. That'll work much better in the long run.
...or simply apply Clean Code principles: break this up in more methods.
In case of automatic vectorization, which the JIT compiler can sometimes do, it can make a difference and make float much faster.
Automatic vectorization makes a difference.
All of them, if they were spelled correctly (all of them need to be lower case), are C# aliases to - System.Int64 (long) - System.Double (double) - System.Byte (byte) - System.Char (char) - System.Decimal (decimal)
&gt; Also, those listed are the .NET implementations you can use in C#. No; The CLR type is called System.Int64, not System.Long. Those are titlecased C# types.
&gt; which the JIT compiler can sometimes do Citation please, because as far as I know it doesn't, which is why System.Numerics.Vectors is hardware accelerated.
Sorry, I don't understand what you mean by style you're referring to. Have you got any code examples? What's the merit you are referring to? Generally I find that whether I'm doing OOP or not, I can always refactor and organize my code to more smaller and manageable pieces. Basically the goal is to reduce complexity, increase reuse and increase maintainability. There's rarely any need for monolithic functions unless one is doing something like creating a sample for your API or something where it is just for your adopters to see how things flow. I'll be glad if you can show me an exception though :)
Can you post the full stacktrace including inner exceptions? EDIT: And on which line is the exception thrown?
Also, it's unclear how the (technically virtual) methods Equals and GetHashCode in their default (reflected) implementations will behave with these hacks :p
Not that I tried to undock it, but I didn't see any other options in VS2015 other than to collapse or split view. 
Thanks :)
@RonSijm, @rjbwork great questions guys! CodeCop attempts to overcome the known limitations from other method interception frameworks and wants to be different at what it does. It's not so much to know if it is the best or not because quite frankly they all do a pretty good job at what they do. Just find the one that suits your needs and get the job done. Castle and IoC they are all proxy based approaches. Which means in order to function they need public interfaces or objects with virtual methods to override. They don't work with the REAL objects, thus they carry the unnecessary burden of object wrappers. CodeCop has no limitations there, you don't "waste" time and resources having to create all these wrappers, it works with the REAL objects and intercepts their methods with ANY visibility, ANY modifier and on ANY Assembly (including 3rd party strong-named assemblies, check this post http://bit.ly/1EUCgVF where I show you how to override 3 methods directly from the EF assembly itself). Postsharp is much more than a method interception framework these days, but to me the clear advantage CodeCop has over it, it´s because it is a "cleaner", unobtrusive approach. Postsharp forces you to spread attributes all over your intercepted application code and that fact in my opinion produces a high level of code bloatness. Besides it tightly couples your intercepted application with the interception framework itself and that should be avoided. Postharp forces you to install it as an extension to visual studio, I personally hate to install things on VS, but hey that's just me. CodeCop has no installs whatsoever. Postsharp works via static weaving which means that is injects IL as a post-build step onto assemblies. If you have an app that is already using Postharp "weaved" assemblies and it's already deployed, when you want to add new / remove aspects from types and their methods you need to recompile everything again and redeploy. With CodeCop there is dynamic weaving, just put the new interceptor assembly on the bin, write the type on the JSON and presto watch it kick-in with no redeploys. When you work with large enterprise applications free versions aren't even an option because they simple don't suffice. Sometimes you can have like 1000 methods to instrument and I can guarantee you that $99 dollars or $239 are well worth the price (Postsharp costs $409 and $739 respectively). To finalize method interception is repetitive work that we want to do fast. CodeCop wants to provide you with the tools for it. So no time having to generate JSON by hand, use our free online JSON generator tool if you like http://getcodecop.com/TOOL/ So this is why we're different and if you think we worth the shot, give us a try. :)
+/u/CompileBot C# using System; public interface ILol { string Text(); } public class Lol : ILol { public string Text() { return "Class Method"; } string ILol.Text() { return "Interface Method"; } } public class Program { public static void Main() { ILol one = new Lol(); Lol two = new Lol(); Console.WriteLine(one.Text()); Console.WriteLine(two.Text()); } } This is my biggest con, that it can be abused in a way that can lead to code being more confusing or complex than need be at a glance.
Have you personally had good luck with this touchscreen? I bought the MS recommended touchscreen (which used to be listed on their compatible peripheral chart but apparently they just re-did that page and now it's not there) from Chalk-Elec for $133 and it did not work. I'm not really willing to toss out another $75 if it isn't going to work.
In your implementation, when you initialize the properties from the data source, you need to set the isDirty flag to false. And as @grauenwolf started you need to implement IChangeTracking.
&gt; IList&lt;T&gt;.Add in a read-only implementation IReadOnlyList&lt;T&gt; :) But don't get me started on the epic screw up that is IReadOnlyList naming!
This produces the same results as before.
Thanks that sounds awesome
I've only had one valid reason to ever use regions: When implementing a service proxy class (e.g. `interface A : B, C, D; class AImpl : A { B b; C c; D d; } `) that simply delegates all calls to the implementations of `B`, `C`, and `D`. Then, `#region` can be useful for showing what's a part of B, what's a part of C, and what's a part of D (they don't have overlaps).
Which actually brings us back to the topic, as MS can't base `IList&lt;T&gt;` on `IReadOnlyList&lt;T&gt;` retroactively because that would break existing explicit implementations of `IList&lt;T&gt;`, but not implicit ones.
24bpp didn't change anything. I do know about using statements. The timer is set for every 2 seconds, however I have also tested it without the timer. I'm using any cpu, however x86/x64 also had no impact.
I'm using any cpu, however x86/x64 also had no impact. Edit: Wow, I solved actually check the post.
I haven't tested, but It *should* work as the virtual methods for a struct are actually not implemented as virtual methods in the JIT but direct call to the type of the variable. Though, there is the case of boxing, that is maybe not handled correctly when Equals is called... But as it is explained, only 2 lines of code in the CLR were changed to get struct inheritance *almost* working, but that's just a proof of concept. Not something that claims that it is fully done, tested or validated for all cases and ready for a PR on github! It is more likely that there are some side-effects stuff not correctly handled, but afaik, nothing that would be a showstopper. Take it as an educational post (and starting for myself), even better if It can encourage people interested into digging further into the CLR and Roslyn...
Any clue which line it's failing on?
thanks, thats not a bad workaround! seems like an easy feature to improve and id use it every day.
You may be thinking of https://projecteuler.net/
The static code analyzer will yell at you if you don't offer a way to call every explicit interface method through the class's public interface. So usually the only time I see them (other than name collisions) is when you think `Close` is a better name than `Dispose`.
That's JSON, and you'd be better off parsing it properly with an actual JSON parser (e.g. Json.NET).
Oh right, thanks for that. 
There are some great responses here and I will take them all to heart. Thank you all so much for your time. Sorry for the delayed response!
Glad to hear it!
I don't really want to blindly follow Martin Fowler because, as you stated, he didn't know anything about our application and what it is trying to accomplish. However, in a sense, I am trying to blindly follow him. The real reason why I am pursuing this type of architecture wholeheartedly is to offer a counter argument to the way we have always done things. Our application now is supposed to lay the foundation for a future, far more complex application. Unfortunately, this current application is trivial in comparison. A simple Active Record will suffice for almost all of our data entry because the application is essentially that--data entry. I am worried we will follow the same simplistic model when we begin our next application. This would likely be a nightmare. Anyway, I could write all day about this but I will leave it at this: your bullet points are all strong and I will, and already can for some, find examples of all of them in our applications. We spoke today too and it is looking more like a mixed model, where we follow a domain model type in some areas and something more simplistic in others, will likely be the outcome. We have no need for any added complexity in some areas of our application.
Yep, OP you have it backwards. To me, IoC/DI and *traditional* domain-driven design are kind of at odds with each other. With DD you want rich objects with methods defined in them to control their operations. But with DI you want anemic objects with little to no methods so that you can swap out and/or mock functionality. It sounds like what you currently have is rich objects that are locked into their implementation. If you really want to sell DI, push on the unit testing capabilities. It is a **huge** boon for maintenance.
Arbitrary precision arithmetic libraries are an option as well.
Ideally they'd be in separate repos to avoid this mess (though either way your csproj files might start pointing to your private repo under certain conditions involving nuget packages). As for how to remove things from your repo, see: http://stackoverflow.com/questions/6313126/how-to-remove-a-directory-in-my-github-repository ... also look into interactive rebasing and force pushing, not sure if you can do this through VS's ui. `
Yeah, I'm not downing the IoT at all. I'm using it for my next device, touchscreen or not. I'm hoping for an easier method to set a startup application, but being able to write .NET code using the UWP and deploy it to a Pi makes building cross-enterprise-platform software so much easier.
Sounds like you should utilize git branching to do this, and just don't push the branch with the changes you want to be local only. For example, on the public branch you would set everything up to be usable. Don't ignore any files or folders, just remove them from the commit. Then create a new branch in which you make your local changes which includes adding project folders and also including those projects in your VS solution. Then whenever you want to make changes to the public projects commit things to the public branch and merge the public branch into the private.
This is it thank you very much!
No...no, It really doesn't.......
This is not related to C#. Different languages, different styles.
Azure is good point, but you need to pay their database. Why not just using shared hosting to host your site? You can find many good hosting provider that do asp.net. You can use asphostportal.com to host your site temporary. They fully support asp.net and SQL.
This is not related to anything. Different teams, different styles.
One more site where you can practice C# skills is... https://www.codehunt.com/ It gamifies the coding puzzles so you will definitely find it interesting
By far the best tutorial available on the subject (strong basics): https://channel9.msdn.com/Events/Build/2012/3-011
Sure, there are different conventions and styles. But best practice is to follow the official coding conventions. From the official C# Coding Conventions: &gt; Use the default Code Editor settings (smart indenting, four-character indents, **tabs saved as spaces**).
This is bad practice, because it's unclear. Is it a deep clone? Is it a shallow clone? Different people will implement it differently and you end up with an inconsistent clusterfuck.
As someone who uses design patterns daily I dare to say this example of strategy pattern is horrible.
You could span the window across both screens. It's not convenient to do manually, but with an application like Display Fusion it can be done via a hotkey. (I personally prefer it to having multiple windows everywhere.)
Or just use capture groups instead of lookahead/behind.
&gt; and it's trivial to use Object.MemberwiseClone() if you need a shallow copy. Well, not *trivial* since it's a protected method, so you need cooperation with the class in question.
That wasn't his question, so no need to arrogantly LTGTFY him. But yes, IClonable is considered mildly deprecated: &gt; Because callers of Clone cannot depend on the method performing a predictable cloning operation, we recommend that ICloneable not be implemented in public APIs.
You don't need to abuse it, though, so that's not really a big con. Several other nice features can be abused.
That's a fair point; I forgot it was protected. 
I feel a bit ashamed about asking this, but can someone explain that snippet? I'm not sure I'm getting it..
If T is a type that implements the ICloneable interface, return a copy of the object @this by calling Clone(). ICloneable defines the method object Clone() which is intended to provide a copy of the original object. Unfortunately, the API didn't specify whether Clone() should perform a deep or shallow copy, and, as there are significant differences in behavior between the two, doesn't really form a usefully specific contract.
Indexers are for classes that aren't otherwise collections so you can create an index functionality that does what you want it to.
I've written more detail about the benefit of DTOs as it relates to the core tenents and goals of Services at: http://stackoverflow.com/a/32940275/85785 ServiceStack promotes the timeless remote services pattern: Service Gateway =&gt; DTO =&gt; Service Interface. This enables use of a generic reusable Service Client as all the Application-specific details of your Service is captured in benign DTO data structures which together with the base url of your Services is the only thing a client needs to consume your Services via a typed API. DTO = Data Transfer Object. Your Services should always be returning serializable DTO's which define the representation of the Response and is used for transparent de/serializing of your Services response in any of the registered formats/endpoints. Their definition is also used to provide the auto-generated metadata services, e.g. metadata pages, XSD/WSDL's, Postman API, Swagger UI, Native Type Metadata, Add ServiceStack Reference, etc. The Request and Response DTO's is what defines your Service Contract, which the external Route info are naturally apart of. You don't need to use [Route] attributes and can instead use the Fluent API instead: https://github.com/ServiceStack/ServiceStack/wiki/Routing#fluent-api However this means when clients use the ServiceModel project (aka DTO .dll) the .NET Service clients (https://github.com/ServiceStack/ServiceStack/wiki/C%23-client) wont have access to the custom routes and will have to fallback to use the pre-defined routes. Being able to share your Server's DTO's on the client is what enables ServiceStack to have a succinct end-to-end typed API without code-gen, which is only possible due to the Service Contract being defined in the decoupled DTO's instead of coupled to server method signatures which you might be used to. You also don't need to share the DTO .dll if you don't want to and can instead use Add ServiceStack Reference (https://github.com/ServiceStack/ServiceStack/wiki/Add-ServiceStack-Reference) to automatically generate the DTO's for your preferred language of choice. Since this just provides another way to provide your Services typed DTO's, they can be used in any of the existing generic Service Clients.
Here you go. http://www.tutorialspoint.com/compile_csharp_online.php
No, he wants programming problems to solve. Not a code tester.
I think you are struggling with using a web api as RPC vs a message-based approach that service stack basically forces it upon you. There are no methods tied to a service - there are messages. Lots of these terms you are struggling with are taken right from Martin Fowlers "Patterns of Enterprise Application Architecture". This is not a Java thing - this is a software architecture thing. I think you'll find the more you work with ServiceStack the more you'll appreciate it. We couldn't afford the license so we went WebAPI but we took many of their architecture approaches and have applied them. It just makes life easier the more you integrate with other systems. ServiceStack basically bullys you into using messages because it feels it is for your own good. Coming from a world of asmx, wcf or simple WebApi it can feel like a strange new land, and I feel their opinionated approach is a good one for onboarding developers like yourself. It just doesn't let old habbits creep in. ServiceStack has a decent write up here on why they went this route - https://github.com/ServiceStack/ServiceStack/wiki/Advantages-of-message-based-web-services
In that case, I like leetcode.com. See this thread for other sites: https://www.reddit.com/r/cscareerquestions/comments/3mtxu1/what_problem_solving_sites_do_you_use_to_prepare/ 
&gt; T @this http://stackoverflow.com/questions/5536540/what-does-t-this-mean-in-a-delegate-declaration
The keyword "this" is used in extension methods. By prefixing an @ to the parameter name, he's avoiding having a parameter named "this" which would throw a compiler error. 
yes you are right, thats a major flaw
Not really just ctrl-&gt;arrow key your way around the line
Since Jan 2014, I've been working on software to enable digital payments. It started at a project working with Cryptocurrency, then evolved to work with block chain tech and standalone. Everything is built from scratch. My day job is to make payment solutions for VISA/MASTERCARD. I wanted to build something that was better than what we have and make it so flexible it could be used for many things, like rewards, custom currencies, any track-able spendable digital asset. The REST API: https://api.coinleap.com (Using SWAGGER wrapper on custom RestAPI project to make the UI (help pages) look awesome and work with real-time OAUTH sandbox testing) The OAUTH Provider: https://account.coinleap.com The Developer Portal: https://developer.coinleap.com There is an app in the Play store that uses the api.coinleap.com endpoint. Security is paramount in this project - I've tried to cover everything I know about. If you see any holes or improvements that can be made, or any feedback, I would be delighted. This project has spun into a startup that we are just now getting some possible customers for. I still have a day job and this is still a side project, but the dream would be for it to take off, and this could be my day job! w00t! 
I started learning C# in High school, and that was only 5-6 years ago. I'm not really that old at all. I didn't even know there was a difference when I started, It was only later when I went and tried other languages that I discovered that there was a kind of tab-vs-spaces war going on. Then I was like 'oh, it kinda makes sense space chars are better than tab char'.
Could you post the link to the StackOverflow post?
We'd certainly be willing to help here. There are also some helpful people at /r/learnprogramming but of course people are only going to help if she shows us what she's attempted and shows us her code. This is so A. we can help her as efficiently as possible and B. we know she's not just using us to do her homework for her.
Sure that makes total sense. I've linked the stack overflow post in another comment. With one query in. 
Has she done any sort of debugging yet? Did she set a breakpoint at processId = processData[0]; to make sure it's passing in the data. We already checked that recvDt is not null. But processData could be null if recvDt did not have any commas in it.
What about using Blend ? You will have to accept changes when switching from one window to another though
Consistency covers a lot of minor sins, like this one. I don't think it's a good idea, but it's hardly the end of the world. In the absence of a stated convention, I'd probably ask the dev responsible to change the arg name, but if that's the convention the team decided on and was using, I can roll with it.
I've passed your comment on. Thanks for helping. 
Wrap the code in a try-catch to figure out where things are breaking. 
Sure thing. Please post back with updates.
One of these suggestions worked so thanks everyone for your help. We both really appreciate it. If anymore unsolvable bugs pop up should I post them on this thread or create a new one? 
Create a new one. It'll get more visibility. 
"In this situation". I never implied that they were useless or a bad way of debugging, but they are simply not the right way to solve this particuliar problem. Thanks for the downvote I guess?
 public static This Copy&lt;This&gt;(this This @this) where This : ICloneable { return (This)@this.Clone(); }
Literately the first two links explain why ICloneable is implemented the way it is (object Clone() instead of T Clone() because of derived classes), with links and references to Copy&lt;T&gt;/Cloneable&lt;T&gt; and why ICloneable is considered bad practice (shallow/deep copy, no compile time safety due to virtual method calls the ICloneable might not return the type of object expected). [The ICloneable Controversy: Should a Class Implement ICloneable or Not?](http://www.codinghelmet.com/?path=howto/implement-icloneable-or-not) Why Does Microsoft Suggest Not To Implement ICloneable? &gt; There are many references on the Internet pointing to a 2003 blog post by Brad Abrams - at the time employed at Microsoft - in which some thoughts about ICloneable are discussed. The blog entry can be found at this address: Implementing ICloneable. Despite the misleading title, this blog entry calls not to implement ICloneable, mainly because of shallow/deep confusion. Article ends in a straight suggestion: If you need a cloning mechanism, define your own Clone, or Copy methodology, and ensure that you document clearly whether it is a deep or shallow copy. An appropriate pattern is: public &lt;type&gt; Copy(); [Implementing ICloneable - Brad Abrams - link on ICloneable Controversy](http://blogs.msdn.com/b/brada/archive/2003/04/09/49935.aspx) [Is this bad practice? why is this not in the standard library?](https://www.reddit.com/r/csharp/comments/3mt64b/is_this_bad_practice_why_is_this_not_in_the/) I find it sad that the LMGTFY link is considered arrogant, yet it leads to similar questions and relevant answers.
Google search term: biginteger pow c# http://stackoverflow.com/questions/30224589/biginteger-powbiginteger-biginteger
I have no idea why you would need that tho as it will throw the out of memory exception.
Is it too nosey to ask the context where you need such gigantic numbers?
Nice! I am not sure where should I add it. Extensions or miscs? Any thoughts? Also feel free to submit a PR yourself :)
I didn't downvote you.
Try right-clicking on the EDMX file and selecting View Code to see the XML underneath, if there are some errors you should be able to go right to them. For some reason those files need some manual tweaking every now and then. Also try clearing out your temporary files under Users\USERNAME\AppData\Local\Temp, VS will save temp files there while working with the model. You have tried it on several computers so I doubt it could be some weird caching or data corruption issue, but always worth a shot. Make sure you are current on VS updates, especially SSDT
yeah, im trying to find a way around all that. Sadly the code in the link you sent me would be way too inefficient, but I'll keep looking.
There is no way around that. It's not inefficient, it's just that you need terabytes of memory to perform such operations.
How do you know this?
I'm well past the maximum on the XKCD beer curve, but couldn't you preprocess the imported items and fix the quotes first? Either detect and remove or quote the encapsulating string?
Yes can you add a step of [pre-processing](https://en.wikipedia.org/wiki/Data_mining#Pre-processing) to execute a [data cleaning](https://en.wikipedia.org/wiki/Data_cleansing)?
Got access to a super computer, so that might not be a problem (I hope). If it is, then I'll see how far I can go before crashing it. 
Ok but instead of hitting ctrl everytime I move within the identations, I prefer to break MS C# conventions ;) Plus sometimes you just can't use you left hand, for example when the software architect broke your left arm after he saw you used spaces instead of tabs. Anyway it's an endless debate.
In a Single Page Application you need to manipulate this using JavaScript: https://developer.mozilla.org/en-US/docs/Web/API/History_API A very known library for this is "history.js". When visiting the page from external you need to read the current location and manipulate the state according to the information you get (usually the hash value of the URL). You don't do this in C# and MVC.
What have you tried?
Nope. Switched to Python crawler and a dedicated DB backend as a solution. There doesn't seem to be a fix. 
Where is the tutorial? I clicked on the tutorial link and it just takes me around Codeplex.
What tutorial are you talking about?
You misunderstood my comment. Let me refresh your memory on what the parameter signature looks like. (this T @this) There are two instances of the word "this". One of them has is prefixed with an @ symbol. The reason for that is because the keyword "this" is a reserved word. Let us pretend that the signature looked like this: (this T this) Because "this" is reserved, it would throw a compiler error because of the second instance of the word this. I was trying to explain that in the simplest way possible, but you didn't quite understand what I was saying.
Crashing a supercomputer is not the bottleneck in your case. Neither is the computer's speed (although that might also be a problem). Its just that the number will be so big it will take up millions of terabytes to store the number in memory. For example, Int64.MaxValue^Int64.MaxValue will take up 5.8×10^20 bytes. That's 580 exabytes. I don't even know if the human race has the much digital storage in total.
Well, I created a list of resources. I didn't code each of them. By the way, I tried to add a mention to the author of most of them. For the documentation your are looking for, you should try to understand what you are doing when you clicked on the broken link. Tip: Try to write directly the documentation's link into your favorite browser. If you keep failing to access it and the tip didnt help, [here it is](http://www.reimers.dk/tutorials/using-linq2rest). :)
See my post here: https://www.reddit.com/r/csharp/comments/3mlyq2/beginner_question_foreach_variable_create_a/ Shaken is right as well, using a list&lt;image&gt; and changing its index. You may want to research showing an images location via Screen.Allscreens[monitor#].WorkingArea.Location by using Graphics class in System.Drawing to display the images off the form. Graphics would assume a rectangle is drawn on the form and is not part of the form itself, thus ignoring the creation of multiple forms.
You may be spending too much time with the documentation, and not enough with the compiler. It is very easy to get overwhelmed, especially since you seem to want to do things "right" the first time. While this is a noble goal, sometimes all you can do is try implementing it *X* way and seeing how well it works, and then trying it *Y* and *Z* way to see how it compares. You may even find that the contradictory articles aren't even relevant to what you are doing or to the framework/environment you're using. &gt;All I want to do is write a few methods that follow best practices [...] that will also run equally well on desktop/server/mobile etc. You, me, and everyone else bud =)
Very cool. Hope you find the 49th one.
If you want feedback on the code you've written: http://codereview.stackexchange.com/ . Do follow the [tour](http://codereview.stackexchange.com/tour) before posting, and check various topics in the [help](http://codereview.stackexchange.com/help) that inform you on how to ask proper questions etc.
I must be asleep, can someone tell me what does that bring to the table in terms of stuff you couldn't do before?
A cursory look to me says you should just try it and see what happens. (You'll have some syntax/compile errors to fix though.) I do see that the enemy speeds will need to be associated with each enemy rather than sharing the same (otherwise they will all be moving in the same direction). Guessing from what you have here, you're going to want to look into make your own custom classes. ([example tutorial](http://csharp.net-tutorials.com/classes/introduction/)) With that you can create a representation of an `Enemy`, with its own tracking of position/speed and visualization. You can also use them to represent the `Player`. Use classes to simplify your application logic and organize code into logical groups.
Yes, just dig in. There will be a lot of concepts you don't get the first time around, accept they work and learn how later. Always try to keep moving forward, losing momentum can be a killer (even for seasoned developers). My son (18 and a psych major) came to me last week and asked me if I would teach him and his friend how to do mobile programming. There was no way he was going to sit through hours and hours of theory, so we downloaded the android dev kit and built a hello world. Taught them a few concepts (variables &amp; accessing text labels). They ran with it, googling to do other things I didn't cover. You just need to get your hands dirty and do a lot of googling. It will come to you. 
I think I have all the information I need to try it out. Should also make the code a bit shorter. I will report back with any issues thanks a bunch!
Thank you very much, Also can you maybe explain to me how to properly format the code in my reddit post? for some reason only the } shows in white
Start each line with 4 spaces, or highlight the code and click the "&lt;&gt;" symbol/button in the text editor.
Advanced LINQ texts http://firstclassthoughts.co.uk/Tags/LINQ.html
I added the first one. Thank you!
no? I'm not sure what those are, if I need to code them in to use it or if its something automatic?
[removed]
[removed]
Xaml doesn't allow you to relatively position elements, only absolutely. If you wanted to place a button n% from the side you had to use specific units or jump through hoops with value converters. The code appears to allow this sort of layout. I'm not sure if it's performant or not. 
Bypassing the event pipeline is generally a bad idea and can lead to some really bad side effects.
In the future, if you have json in the clipboard you can use visual studio and click the toolbar 'Edit &gt; Paste Special &gt; Json'
[removed]
Every time I downloaded a game, the hashes never matched up, the game would never run smoothly and it was hard comparing the hash of a file to a list of hashes. To be honest, the game was GTAV when it was released. I was tired of using the launcher to download the game because the bandwidth was limited and would take forever to download that damn game. So I would resort to files that other people posted online for the game to run correctly. Someone had thrown a hash list with the files. I only downloaded files that I was missing. So I needed to compare my files to this hash list and most applications have a single file hash generator. I figured I would make my own that would recursively generate hashes from file within a directory. I would download the other persons hash list and compare it against my own set of files, to validate files to match. The application I made turned out quite well, a video demo can be found here:[hashGen](https://drive.google.com/file/d/0B1knPNsky3sfYm9aZmtpanA3Umc/view?usp=sharing) Still use it today. Sent it to a buddy who works at a call center, their always dealing with bulk files and validation. 
Thinking this way is all I can seam to do, pulling it off in actual code is what is holding me back. I use to program in c sharp visual studio with the draw method and I understood it and worked it - even if it wasn't perfect. this is the only code the app looks for, everything else is logic or changing images public void Image_Tapped(object sender, TappedRoutedEventArgs e) { var img = (Image)sender; var myObj = (SlotAttributes)img.Tag; //if the image is allowed to be clicked, do stuff if (myObj.isplayable) { //Find what card the player is about to play and determine what new image will be placed on that grid space. PlayTopCardFromDeck(img, myObj); } } Now I'm trying to code on windows apps using xaml and visual stdio (13) 
Yeah, I googled that doevents, and there was a lot of controversy on it. One thing stated was you need to know what it does completely to avoid mistakes, So it's not an option I can considered.
[removed]
The trouble is, I don't know where this update/draw code is. I only can change the code that handles the images and once its done handling them it updates. If I could call the update then have it wait, it'd work the way I need it to.
Excel spreadsheet to listview would be a way to go. Listview would compile all the information in the spreadsheet, by pullling the data from the spreadsheet. See the image of a quick layout I made: http://i.imgur.com/7Qv8JiJ.png
If you're able to place an image (and leave it there) and then later remove it, you should be able to adapt that to your code. You just need to wait before telling the image to remove itself... Are you using a known library/framework for that game?
I'm using visual studio(13) and xaml to program a windows phone app. I'm hoping it doesn't matter, but I'm actually updating the pathfile of the image to a different image rather than just removing it completely. Although if I was just removing it, the update problem would still be here. I'm able to play the images fine, I can see them inbetween turns because the user taps a space, the code runs images updates and then it displays. If all the code runs then it waits for the user to tap again, since all the code was calculating and then changing the source of the image it all goes in one swoop and then its waiting on the user again. (I've posted some code to another's response)
Maybe you could use a timer? When you want to remove an image, set a class-level variable to that image and start the timer. When the timer elapses, it removes whatever image is referenced by the class level var. It then sets itself to "off" and nulls the var. Not sure if I explained that clearly...
So i'd look at breaking this issue down into a few steps; The Problem: You have a json string and would like to convert that to a model to be able to access values returned in the json string. e.g.; the current temp. 1.) You need to download the string to a variable, you've already achieved this, but i'll tell you there is an easier bit of code to the do the same thing! Here's a method that returns the json string you have above; private string getJsonDataFromUrl(string websiteUrl) { using (var webClient = new System.Net.WebClient()) { return webClient.DownloadString(websiteUrl); } } You can use the above method like this; var jsonData = getJsonDataFromUrl(@"http://api.openweathermap.org/data/2.5/weather?q=Amsterdam"); 2.) You now need a model structure matching the layout of the json data returned by the weather api. You can use website services such as the one you found, or visual studio also has a special function that does this for you! In visual studio open a new class file, and copy json data from the starting { to the ending }. Now in Visual Studio go to Edit-&gt;Paste Special-&gt;Paste JSON as Classes 3.) Now you need to be able to convert the json data you recieve from the weather api you're calling into the model classes you've built in step #2. This can be done using several methods, but i perfer to use Json.Net nuget package. So add this package to your project, and then you can use the following code to deserialize the json data to the model classes; var weatherData = JsonConvert.DeserializeObject&lt;WeatherData&gt;(_jsonData); * Note: the WeatherData is the root class used, by default when using step 2 it's called Rootobject i believe. I renamed it to WeatherData to be clearer. * Note2: here is the website for Json package documentation, which is very helpful! http://www.newtonsoft.com/json/help/html/SerializingJSON.htm 4.) You can now access properties or your model classes that contain the data returned by the weather api. e.g.; var currentTemp = weatherData.main.temp; // Careful to check if weatherData, or main is null first... This should let you achieve what you're ultimately looking for, that is to be able to display images depending on the current temp using the open weather map api service. Here is a link to a running code example, please don't just copy and paste it, but play with it, as understanding it will help you better in the future. Sample Code: http://pastebin.com/xNDSRwYU
In the constructor "Game()", you can create a timer: timer = new DispatcherTimer(); timer.Interval = TimeSpan.FromMilliseconds(1000); // adjust delay here timer.Tick += new EventHandler(timer_Tick); (of course, declare the timer somewhere in your class vars) DispatcherTimer timer; Then, in the timer_tick event, you do whatever you wish to do with your image: void timer_Tick(object sender, EventArgs e) { //... timer.stop(); } So, when you want to do whatever is in the timer, just set whatever variables you need to do so and call timer.Start(); The timer code will run after the delay you set. 
If you're asking if there is a place to store your information in an online database? There is AWS (amazon web services) and Microsoft Azure services too that allow you to host an online database. They can be a bit of a pain to setup, but enough documentation on the web exists to get it done. AWS also has a free tier for 1 year, which is nice for testing. Sorry if i misunderstood your question.
awesome, can't wait to try it out and report back.
I think I am close with the basics, can you please help me with this final step(?). private void tmrMoving_Tick(object sender, EventArgs e) { Enemies enemy1 = new Enemies(); Rectangle enemy = enemy1.enemyRectangle(???); } public class Enemies { private int eX, eY; public Rectangle enemy; public Rectangle enemyRectangle(Rectangle enemy) { eX = 50; eY = 50; return enemy = new Rectangle(eX, eY, 25, 25); } } I've tried everything with the ???. I don't know what goes there. I think it should be enemy, but it says that that's a local variable only? This shouldn't be this hard anymore....
Try declaring the event this way: void timer_Tick(object sender, object e)
using System.Threading.Tasks; if you are using visual studio, with the cursor on the error, hitting ctrl + . should suggest this
timer.Tick += new EventHandler&lt;object&gt;(timer_Tick); was how to fix that. I can see how this would work, but the program doesn't run the code in Game() continually, just once at the start of the program.
That's nice, but as they said, you're very less error prone in C# than in C/C++. But the example is enough to show the real utility of this tool, and I think it will be able to save some hours of brain torturing from time to time.
I haven't used FxCop myself; I need to fix that. But I'd argue that they serve two different purposes: StyleCop(.Analyzers) enforces style and code quality constraints as you type, whereas FxCop checks your compiled binaries after the fact for conformance to a spec. I personally like the immediate feedback I get with SCA.
An alternative way is to introduce a middle layer between the client and the database (rather than connecting directly). A common example is a RESTful API. But as another comment suggest, AWS and Digital Oceans droplets are cheap VPS solutions - both offering "free" solutions (Amazon for a year and DO with $10 credit equivalent to two months) - if you'd rather just connect directly.
Well this shows that I don't know anything... I hate being spoonfed, but thanks so much for your help. Only I am getting "The type or namespace could not be found" on Enemy enemy = new Enemy(10,20) (What seems a little better is: , but it still doesn't work) Enemies enemy = new Enemy(10, 20); This did help my understanding though, so big thanks for that /u/changetip
/u/Wimmsk, feedabeast wants to send you a tip for 1 thanks (2,101 bits/$0.50). Follow me to **[collect it](https://www.changetip.com/collect/901457).** -- [^^what ^^is ^^ChangeTip?](https://www.reddit.com/r/changetip/wiki/tipping-on-reddit)
namespace challenge3 { class Program { static void Main(string[] args) { while (true) { Random r = new Random(); Console.ForegroundColor = (ConsoleColor)r.Next(0, 16); Console.BackgroundColor = (ConsoleColor)r.Next(0, 16); Console.WriteLine("$%#@!*abcdefghijklmnopqrstuvwxyz1234567890?;:ABCDEFGHIJKLMNOPQRSTUVWXYZ^&amp;"); Console.SetWindowSize( Math.Min(100, Console.LargestWindowWidth), Math.Min(60, Console.LargestWindowHeight)); } } } } This code runs endless text with random background and foreground colors. I now need to set a random sized "bounding box" if you will, that will change locations in the console window randomly. I am able to size the console window with Console.SetWindowSize but I need to randomize it.
Many thanks to you too /u/changetip
 Enemy enemy = new Enemy(); Works!
I greatly prefer to get FileInfo objects over raw strings.
I wouldn't expect to hear too much. The last time I looked into CoreCLR on Linux was a few months ago and it was a pain to get up and running and was less than usable. In the past I've written several console applications that made use of soap web services that ran on Linux on top of Mono without issue. For that I would just develop in visual studio compile to CLR and then copy the files over to the Linux server for testing. I think it's going to be a year or more before you see much if any development that's dependent on CoreCLR. 
Yeah, the state of the [documentation](http://dotnet.readthedocs.org/en/latest/index.html) is pretty sad. 90% of the articles (everything with a wrench icon) are just "This topic hasn't been written yet!" At least this has 25 upvotes in a few hours, so people are *interested,* even if nothing is happening yet.