If you really think that there is nothing to code anymore you are using unity wrong or not actually making a game.
But if you feel like you need to be able to do everything from scratch go ahead and start learning c++ with opengl. Yes some stuff still gets done for you but still.
Also blender is a 3d modelling software so I don't understand your point of not using that.
&gt; The reason is because I would most likely have to redo everything I don't think you'll find that you'll need to re-do nearly as much as you think. You may need to modify your game logic some, but you might be able to re-use much of it without much modification. 
I don't think it's even possible to build anything that qualifies as a "game" in unity without writing some code. 
Ye
I feel like a lot of your issues come from a place of unfamiliarity more than anything. I feel the same way about CSS as you do about XAML, it feels like it comes from prehistoric times. That isn't to say XAML is perfect, I think it could learn a lot from HTML/CSS, for example it is far more verbose than it needs to be. Overall though I would say Android's AXML is far better for styling than either XAML or HTML/CSS. It has its own shortcomings too, though. The biggest problem with XAML is the default controls do not come with all of their styling exposed. I am guessing this is where you are getting tripped up, I know it is where I got tripped up at first also. The only way around this is to basically replace the ContentControl with your own. Microsoft has posted most of the default ContentControls on their dev sites so you are able to copy them directly then expose everything you want to expose. I agree, this isn't ideal, but XAML is better than HTML/CSS in almost every other way. Once, you get more familiar with how to use and manipulate styles I think you will come to the same conclusion.
[removed]
Granted... the small game I made probably would have taken several thousand times the code to accomplish without unity. 10 hours vs 500 hours of work. 
Visual Studio isn't lacking anything in regards to making a game in it. Using the Direct X APIs you can build games. 
First thing I tried ... no luck I'm afraid!
The official documentation is better than any documentation I have ever read. Seriously just read it through then use it any time you need to fix a problem. It's amazing
Show us some code dude..!
When asking a question about your code, it helps to also post the code.
I thought that would not be a need, but here you go: public partial class Window1 : Window { public virtual void Method { textBlock1.Text = "some text"; } } public class DerivedClass1 : Window1 { public DerivedClass1 { base.Method(); } } the problem is that the method executes, but fails to change the text. As I mentioned, I think the problem is that the derived class does not calls the instance of the Form1 which is opened, but I don't know.
What I hate most is that Unity's vertical axis is the y-axis. Which goes against almost everything I know.
Its a rare and happy developer who only ever has to support and maintain code they had the time to personally architect or refactor. If you haven't lived in the quagmire before (large, bloated, crap riddled 'enterprise' applications) then my first comment probably doesn't make sense. Keep doing what you have always done, and stay away from the quagmire.
updated!
ok sorry, i edited my post.
I assume you've placed a breakpoint on: textBoxNetworkLog.AppendText(Environment.NewLine + s); After that line is run, check *textBoxNetworkLog.Text*, what does it give you?
during a debugging I see in Locals that the textBoxNetworkLog.Text has updated to the correct format. But the opened window stays the same, it has not updated the text of the textBoxNetworkLog. It is the problem only during this call from the derived class, but when I try to change the text INSIDE the WindowWallet where is also the TextBox, it successfully changes. My theory is that the method being called from the derived class doesn't change the text of the TextBox in the instance of the opened WindowWallet.
Visual Studio is the tool to write for example csharp code. You are writing your code with Visual Studio. Code you write is not Visual Studio. Your game is exactly the same whether you write your code with Visual Studio, notepad or Wordpad, the tool is your choice. If your game is made with pure .NET csharp then you will find tons of things Unity can do for you with a fraction of time compared to .NET. Unity has everything from collision, mouse handling, object lifecycle to layers, Z order and sprite/material management - among other things. You don't need to write those systems, you just need to use them within your code. Try completing 2D UFO tutorial on Unity website to get some ideas how Unity works and how it is easier to create prototypes with Unity than pure .NET.
For me it's pretty much the same same as for /u/elmo61. Being a developer I used several languages and libraries over the years which allowed me to learn JS to the point I just feel comfortable with it and therefore somehow refuse to use TypeScript/Jsx if I don't have to. Second point is exactly the same as the setup time and learning curve for vue is very low in mu opinion. Perfect for small projects or internal apps. Code management is a factor which should be recognized as it drives project costs in future. Modern applications even if they are not SPA often require things to happen right on the page without page reloading. On the fly validations, dynamic dropdowns, nice animations, external service calls, async loads, all those actions are fairly easy to code but start becoming a real pain when you don't have any HTML model binding framework. Lastly as an example. If your application is 90% MVC then VueJS can be easily brought in to enhance UX/UI in few places with pretty much no effort. At this point I usually don't want to bring it big guns like React or Angular. 
For me it's pretty much the same same as for /u/elmo61. Being a developer I used several languages and libraries over the years which allowed me to learn JS to the point I just feel comfortable with it and therefore somehow refuse to use TypeScript/Jsx if I don't have to. Second point is exactly the same as the setup time and learning curve for vue is very low in mu opinion. Perfect for small projects or internal apps. Code management is a factor which should be recognized as it drives project costs in future. Modern applications even if they are not SPA often require things to happen right on the page without page reloading. On the fly validations, dynamic dropdowns, nice animations, external service calls, async loads, all those actions are fairly easy to code but start becoming a real pain when you don't have any HTML model binding framework. Lastly as an example. If your application is 90% MVC then VueJS can be easily brought in to enhance UX/UI in few places with pretty much no effort. At this point I usually don't want to bring it big guns like React or Angular. 
Hope you will find it useful! I had a lot of fun writing this.
[C# in Depth v4 is available in the Manning Early Access Program](https://www.manning.com/books/c-sharp-in-depth-fourth-edition). That's about as up-to-date as it gets!
O'Reilly's C# In a Nutshell has been my preference. They have a 7.0 edition out, but I haven't looked at it so I'm not sure how much they touch on Core (if at all). Not sure about more Core-oriented material though :|
Thats just how it is for the field of computer graphics. Since in two dimensional screen-space, x is left and right, y is up and down. So then when adding the 3rd dimension of depth, it makes more sense to have that dimension be z. Otherwise the 2d coordinate space would have to be (x, z) for consistency sake
Blender has game engine also but it's not very good
Noted, have seen a few, but not many thankfully. The ones I have seen normally come from a new client with legacy code they desperately need to have modernised. I handle that the way I mentioned above.
One of the issues with some of these articles or article sites is you can have some really bad approaches and newer programmers have a hard time assessing article quality. Even when an approach is good, sometimes the author doesn't point out some of the corner cases you really NEED to understand. StackOverflow is nice because comments give people an opportunity to point out corner case issues with an approach and at least then you have a wider breadth of information to judge a solution from.
That logic could be interpreted to apply universally to MVC/ASP.NET and it isn't necessarily a performance improvement and can be worse for CPU bound operations.
As always, drink the coolaid responsibly.
pluralsight is a good website to learn it
It's a multiparadigm language. So yes it kind of is a functional language. Among other paradigms, most notably, procedural.
You can do something like this: IOrderedEnumerable&lt;Enemy&gt; orderedEnemies; if (sortDefinitions[0].Ascending) orderedEnemies = enemies.OrderBy(e =&gt; e.GetStat(sortDefinitions[0].Property)); else orderedEnemies = enemies.OrderByDescending(e =&gt; e.GetStat(sortDefinitions[0].Property)); foreach (var sortDefinition in sortDefinitions.Skip(1)) { if (sortDefinition.Ascending) orderedEnemies = orderedEnemies.ThenBy(e =&gt; e.GetStat(sortDefinition.Property)); else orderedEnemies = orderedEnemies.ThenByDescending(e =&gt; e.GetStat(sortDefinition.Property)); } As the sort isn't executed until the result is enumerated, this won't behave any differently to it all being on one line. You could also play around with storing your search properties in a Dictionary&lt;string, Func&lt;Enemy, T&gt;&gt; if every sortable property is the same type - it gets a bit trickier if they're different.
&gt; It's more nuanced than that. Perhaps, but I am skeptical. What kind of request that contains blocking code in a in a multi user system would improve the system's performance by avoiding async? 
No need to use C++ even if you want to build from scratch. Plenty of games and engines are built with C#.
Indeed. I wonder what most of the devs making Unity and Unreal use... 
Do you need CORS enabled for that Okta call? Are you getting any errors in the browser console?
Vue, react and Angular (2+) differ mostly in mental models. If you prefer functional programming, you would prefer React. If you like classic Html, css &amp; JavaScript, you would prefer Vue. And if you like enterprise product, you may prefer Angular.
Our experience was that an HTTP request for a connected client had much less latency than Azure Service Bus, but that a message queue based service was more stable and scalable, because the consumer of the queue controlled the consumption (and could not become overrun), the communication was asynchronous by default, and because it was usually possible to add additional queue consumers. You can get better performance from both by using protbuf, msgpack, or some other binary format than JSON, if performance is the concern.
Very nice page. I do something similar, i run it in Azure WebApps and lock the app to my tenant at the Azure level. Its really nice to get to ignore all of the authentication parts in the SPA but is only plausible if your users are all in your AAD tenant.
I think the new John Sharp Visual C# book is out late March / early April. Updated for VS 2017 as well. 
I would add "WCF (do not use this for new development)". 
I have a book by him but much older
Kudvenkat on YouTube is great. He has great videos on C#, SQL Server, ASP.NET and more. 
Convenient is what it would be. I have the exact same issue. You have to write "select *", then "from table", just so you can go back and get Intellisense for your columns. If anything's ass-backwards, this would be it. A fix would be great.
Is it speed or complexity that is the issue here, at the end of the day I don't think the WPF system is really meant for fast animation of anything other than a couple simple paths. The output may be hardware accelerated but to my understanding the UI is still single threaded on the managed side and all animation has to pass through that thread.
Just very basic animations. Like sliding a StackPanel from one side to another, whilst animating its Opacity. Stuff that can be done with high performance in Unity, for example, but looks very choppy with WPF. Whilst this is happening, the WPF app is using up to 2% of my CPU and 1% of my GPU. 1% of the highest-end Pascal gaming GPU to animate a basic UI element, and 25% of a pretty high end logical processor, and the result is still choppy. I've done things similar to this in UWP with great results, so I assume UWP has a much better pipeline for this stuff. I'm just wondering, if WPF animations are this bad, why does nobody address it? Makes me think I may be missing out on something.
WPF is notorious for utilizing the GPU pretty poorly. See: https://jeremiahmorrill.wordpress.com/2011/02/14/a-critical-deep-dive-into-the-wpf-rendering-system/ Animations aren't the focus of the post, but there's at least one person complaining of bad animation performance in the comments.
Of course you can paste a TextBlock. That goes for WPF and UWP.
In all honesty, you are probably much better off getting past your teething issues with WPF.
[removed]
That series in O'Reilly has been good. 
Yes, WPF rendering is pretty bad sadly. And nobody address (read: Microsoft), because is basically dead. It's pretty clear the focus is on UWP at Microsoft. For your solution, I don't have big experiences with WPF, but would be possible to use Direct2d or any Composition interop for animations? Maybe it would solve your problem. 
Effective C# books by Bill Wagner. Although not up-to-date, but giving very deep insights.
The fact that it’s sending binary (not always the case btw) doesn’t absolve WCF from its super-over-engineered implementation. There are a lot of moving parts involved in getting a message from point A to point B. Don’t underestimate the power of simplicity; an ASP.NET Core API might be faster than WCF. 
If we’re talking about web and mvc web api specifically, I can tell you that I have stress tested a large sync engine and can confirm that though web api may be easier to implement, the response time is considerably slower than its wcf counterpart.
Mmh. But he is still talking about a 2d game so is it even remotely worth it.
Sure, although translating from C++ to C# is generally trivial. I'd say that learning a whole new language (C++) most likely dwarfs that difficulty :D
If your already good at c# it wouldn't be too difficult. Yes the mindset is a bit different but you can understand atleast well enough to make use of the libraries within a week or 2. But if you think that you can't code anymore in unity I'd doubt your there.
If you already know some coding...it gets a bit more difficult. I have been through a bunch of learn c# books and tutorials. They each have a bit of do.ething advanced at the end, but a solid intermediate or advanced text ... Only thing that worked for me. Pick up the basics so I knew what questions to ask, then off to a web search. I generally have good success when reverse engineering something for an existing unity project. I wish there we more examples of solid well setup full games in the unity store to learn from. 
Use this https://github.com/Microsoft/aspnet-api-versioning
Do you look for WPF using HTML, CSS? Should to try out Neutronium. https://github.com/NeutroniumCore/Neutronium 
Jon skeets "c# in depth" is a fantastic book for anyone starting and wanting to get better. It's a great read , read it back to back. 
[C# Notes for Professionals book](http://books.goalkicker.com/CSharpBook/)
If you already know javascript then reactjs is very straight forward. Few life cycles to learn not much framework related jargon/syntax just same old JavaScript.
Sololearn.com has a free course. I found doing that before the Pluralsight course was a good way of doing it.
Nope, don't think that is an issue at all. Sometimes things have to change in the name of progress. I'm not saying just go and change everything for no reason, but not changing just because "that's the way it's always been" doesn't seem wise either. Are there advantages to being required to write the select first? (That's a genuine question, not written to be combative)
No errors on the browser console ... so not sure it's CORS related
Have you tried [AlphaFS](https://github.com/alphaleonis/AlphaFS)?
Every third party i found costs you a small fortune unfortunately 
I have not but will definitely test this, thanks! Project as a whole looks to provide some good functionality
We do versioning in the request header. If no version is provided we direct to the latest version. 
Set the name of your check boxes to all have the same name. Set the value of each check box to the string value you want it to represent. Then in your controller just do `Form.GetValues ("my_checkbox_name")`
Were it me, I'd * write a ViewModel with a string and a bool as members * write an editor template for the ViewModel which contains a HiddenFor for the string and a CheckBoxFor for the boolean * iterate over each ViewModel in my view, binding appropriately. * sending back the whole List&lt;ViewModels&gt; to the controller and inside the controller filter .Where(m=&gt; m.Checked) .... but I'm not that great and there may be a more elegant way.
Html.CheckboxFor https://www.nuget.org/packages/Eml.HtmlHelpers/
When you're calling a class, you take a template and you make a real copy of it. Like when you're making cookies, you have your template class, the cookie cutter, and when you instantiate a cookie you cut it out of the dough. Your instance of the base class and your instance of the derived class are two entirely separate cookies (or whatever pastry you prefer). You can make a base class car, with a virtual method accelerate, which is slow. Then make a derived class called BMW, which overrides accelerate to be fast. When you then make a BMW object and call the accelerate with the base keyword, your BMW will accelerate slowly, it won't turn into a regular car, or magically know that you also instantiated a regular car somewhere. I don't know what the best solution is in your situation, lacking a lot of code, and also being somewhat new to this myself, but you might want to look into event handlers.
 abstract class Car // abstract means this class cannot be instantiated as an object, it can only be used to derive other classes from { public abstract void Brake(); // An abstract function MUST be implemented by the derived class and cannot have functionality in the base class // You can only have abstract methods in abstract classes public virtual void Accelerate () { // The virtual method implements default behavior, but if the derived class needs more specific functionality it can be overridden by the derived class. To use the virtual function as defined in the base class you're deriving from, you use the base keyword. speed += 1; } } class Audi : Car { }
It's by the same person who did AlphaVSS. I use it (AlphaFS) a lot.
Just for clarification: when you say "web and mvc web api", do you mean ASP.NET Core, or is this something you've tested with the older ASP.NET? The newer one has _dramatically_ improved performance: https://www.ageofascent.com/2016/02/18/asp-net-core-exeeds-1-15-million-requests-12-6-gbps/
So, I am pretty new at this. This looks right, but I'm getting the red squiggle under 'Form' in VS, with this line. Any advice? string[] arrayName = Form.GetValues("htmlName").ToList(listName);
Make sure your controller is inheriting `System.Web.Mvc.Controller` If you use the tools VS gives you don't have to worry about remembering to inherit these classes. For example in your solution explorer right click on your Controller folder, go to add, then new controller. Then all you have to do is name your controller. Moreover in that snippet you have you are trying to assign a list to a string array. It should look like this var names = Form.GetValues("htmlName").ToList(); Using var is a real time saver since you don't have to change the definition of variable every time you change your code to use a different `IEnumerable`. Since you're new I recommend using a tutorial to help you learn. [https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/introduction/getting-started](https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/introduction/getting-started)
Mvc is just an architectural pattern Microsoft released for asp.net. It has a web api that allows you to create reatful web services in a very simple way. I have tested this on asp.net but I would imagine asp.net core would be slower on execution due to os abstraction layer
I've seen somewhere that forcing WPF to render in software (instead of hardware acceleration) ironically increases performance. I forget the property that forces this, maybe it's somewhere in the Window class.
I would suggest taking a look at [Asp.Net Core](https://docs.microsoft.com/en-us/aspnet/core/) and assume that your previous observations and knowledge may not necessarily translate to it. As the article linked above noted, the performance of Asp.Net Core has been improved by leaps and bounds.
If I have need to optimize in future I will test this but in general improving performance doesn’t eliminate the overhead of abstraction. You can optimize any OOP language all you want but it will never beat c in performance for this same reason
Since `cardArray` is an array and arrays start at zero, wouldn't it be `newSet.Next(52)` to return a number from 0 to 51?
Ok... so you think WCF has no abstraction overhead? o_O
Of course it does but it doesn’t have the same overhead for web based platforms like asp. I’m guessing you haven’t tested this yourself cause if you did you would see that in even small request the latency/response time alone is superior. 
I mean, I'm not making a claim that it's faster, just that it's faster than asp.net, so your observations in the past about it being "too slow" probably don't apply anymore. At some point the overhead of the framework and abstraction gets low enough that your application code becomes the limiting factor. So if the abstraction is better (your claim was that Asp.Net was easier), you could spend more time optimizing your application code. Before Asp.Net was slow enough that I could believe your claim that WCF was (much) faster. Nowadays, I don't think that's necessarily true anymore. Plus with Asp.Net Core, I'm pretty sure I've read articles about running it without even hosting it though a web server at all. So yeah, I'm not sure I'd be so confident about the overhead if I were in your shoes. But again, I'm not making strong claims, just that your claims are based on far too old of information to be heeded without question.
You’re right in everything you’re saying. I’m speaking more to general abstraction and with that comes overhead. since I’m too lazy to test topic at hand I just googled and found the following (first result) though it may not factor in recent optimizations: https://github.com/aspnet/Mvc/issues/6675 this showed a 4x slow down in comparison. I personally experience slow issues both on response time for minimal requests as well as execution time which somehow ran slower on asp even though the logic was the same. In my experience this was with iis however in the link the contributed mentions it doesn’t matter if it goes through iis or not 
I mean, if you read that issue it turned out it wasn't due to Asp.Net Core : https://github.com/aspnet/Mvc/issues/6675#issuecomment-323163339 Hence why that issue was closed. :/
Good catch. More googling on comparisons seem to still favor wcf. Guess we’ll never know until we try
You might want to look up the repository pattern and seperation of concerns. I think the simplest way to describe it is to put all your database access code in a class library project and then reference the library in the other projects you want to be able to access the database. Typically this is called the data access layer (DAL) and the repository class constructor takes the connection string as a parameter. So you store the connection string in your web app and use it to create a new instance of your repository class after including the data access library.
reddit kinda screwed up the layout, please see here, https://social.msdn.microsoft.com/Forums/vstudio/en-US/65f1d2da-1e66-4d07-8f4f-6c0a39449ccc/appointment-layout?forum=csharpgeneral
Well shucks. I am using ASP .net Core. It looks like there's a way for me to still implement 'GetValues', but I don't know if it will work with HTML, at the moment. I've got to keep digging through the documentation you posted. I really appreciate the help you provided. At the very least, you've definitely given me a great direction to work in that I wasn't looking at before. Again, thank you very much.
I was looking at some of the .net core stuff. It looks like you can do `Request.Form ["htmlName"].ToList ()` but I have not tested this.
Removed: Rule 4. It should be possible to do what you're asking, but you left out crucial details like the platform you're using. Regardless of platform, you should be able to hook into the various ComboBox SelectionChanged events and add/sort rows in your grid as needed. Ultimately, you'll have to make an attempt, and if you run into issues, post questions and relevant code to those particular issues.
Syncfusion has a free tier
You can use the Win API function CreateFile then copy a filestream to that location. Just prefix with a ?
To be clear, I'm not advocating you switch to Asp.Net Core. I was originally only curious because you replied to a comment specifically talking about Asp.Net Core and the way you worded your reply was ambiguous (it was worded as if there was no difference between Asp.Net Core and Asp.Net 4.6 and below). With strong claims like "considerably slower," I wanted to see if there was something _I_ was missing with the performance of WCF (since Asp.Net **Core** is generally regarded as "pretty dang fast"). It seems that your comments definitely don't apply to Asp.Net Core, so your post is now clarified for me. Thanks.
This has been quite helpful. Thank you. The project is pretty complex. It won’t necessarily be a spa, but we want it to be a single jumping off point for all of our departments.
Maybe I misunderstood. You're skeptical that using async won't give you more CPU cycles if you are CPU bound? It can increase throughput for **certain** workloads if you are not fully utilizing the CPU, but if you are already CPU bound, async absolutely can't magically give you more CPU cycles. You're already fully utilizing the CPU. There is a slight overhead with async so the net gain in that case would be negative. Similar applies to IO bound work especially if the DB round trip makes up the majority of your blocking time(but it can free up thread pool resources in this case, explained below). I'll quote Brad Wilson formally of the ASP.NET Team: "Using 'await' in ASP.NET does not change the fact that HTTP is a fundamentally synchronous protocol." You already have thread per request with ASP.NET, so in the common case you have reached maximum parallelization, so aren't going to increase request/sec using async, **unless** a particular request path has tasks within it that can run concurrently. In which case, if those tasks individually take more than a trivial amount of processing time, then you can improve utilization and request/sec for those particular requests. Also, just awaiting async calls doesn't make them concurrent. You need to use constructs like Task.WaitAll to get concurrency. Concurrency and asynchronous aren't exactly the same thing. The other benefit of using async in MVC is it frees up worker threads if you have IO blocking operations, because in this case a thread isn't needed while a response is awaited, and can be returned to the thread pool. This is possible because it leverages IO completion ports. Rather than a thread wait for a response, it can use a IOCP to detect the completion of the IO operations and only reallocate a thread from the thread pool when a response is received. The thread pool is already pretty efficient and it has been capable of handling large volumes of requests/sec long before async. If I did hit against this, I'd be looking at shortening average request time by optimizing the heavier parts of the request such as DB calls. There are certain types of applications where this async can improve scalability due to the more efficient use of the thread pool, but they aren't typical. Most people I've met sprinkling async all over the place with no concept of appropriateness are working on applications that don't come any where close to 1% of the load where this would be a concern. Creating a thread is considered to be expensive, in the same sense that exception handling can be expensive. In truth you can create an order of magnitude more threads/sec then you could ever handle request/sec. Generally, you want to use the threadpool efficiently in a way that keeps requests short and returns threads to the thread pool so that new ones don't need to be created. It's very relative though, and when you start looking at all the other things involved in handling a request and your bottlenecks for requests/sec, then the cost of creating a thread(in the case the pool runs out and must create more) is relatively low on the list. Of the things that large sites hit up against in terms of performance issues when their usage grows, thread pool usage is rarely one of them.
I read over your answer twice just to be sure, but I was already aware of everything you said (except the quote by Brad Wilson, I don't remember coming across that before), and it does not change my original comment. I was speaking specifically about requests that have blocking (i.e. IO) operations, in a multi user concurrent system (such as a web server). I wasn't speaking specifically about CPU bound operations, but I would imagine the break even point on the overhead of async state machines to the cost of thread context switching would be an interesting point to know. Benchmarks I have seen on the async state machines shows them to be very efficient, but not free. A typical thread context switch costs...what, 10-30µs?
For 1 : your question is not really clear to me but here goes; I assume u fix the rng seed. Then all actions that change the state of the game need to be sent to the server and broadcast to all other players. So the logic rests client side
The rng speed?
I have some resources I’ll try to remember to paste when I get home 
Excellent thanks
I have to ask. Is the any reason you don't use a more simple server side layout, such as a rest API? Unless you really struggled with latency, it should be a lot less error prone to implement.
No, there aren't any attributes on the class.
You access `/api/recipecategories/1/recipes` but your route configuration says `[Route("recipeCategories/{categoryId}/recipes")]`. Try accessing `recipecategories/1/recipes` or fix your route configuration.
To be honest it shouldn't be that different to the java counterpart. You have a server, and multiple clients, which all use the same process of sending and receiving updates. https://docs.microsoft.com/en-us/dotnet/framework/network-programming/asynchronous-client-socket-example If you're experimenting with ASP.Net, SignalR is a good multi-user environment, but not suited for games with an extreme update rate. I ran a real-time sales site using it for over a thousand users and it did the job. It has also just released a net core version. Otherwise there are a lot of third party systems available that offer an API to hook into their existing online platforms. (pusher and pubnub spring to mind) If you're struggling with picturing the processes, picking up a copy of game development bible, like Game Coding Complete will help.
That relative source syntaxes sugar looks like he greatest godsend ever. RelativeSource binding is so wildly verbose.
Will it be an WPF alternative for Linux? It seems to me...
I'm really excited to work with it, is there any plans for VS Code extension for live preview? Would be perfect for Linux development 😁
Clean Code Robert C. Martin Is my go to book for ensuring I go about things the right way
Extend column refers to multi-line selection. Try using SHIFT+ALT+DOWN, then SHIFT+ALT+RIGHT, and you should notice that it has selected one character to the right, on two lines.
Thanks 
This looks amazing but they didn't show data grids in their youtube video. Do you know if they support them?
Thanks for the reply, I will definitely give AvalonStudio another shot, only tested it on Windows a while ago. Wish you all the best, and keep the awesome work! 😊
My issue (on that environment) ... is that OWIN is not setting/writing the external cookie for whatever reason! 
Hey, no unfortunately no DataGrid yet. It's a huge undertaking, probably almost equivalent to all of the controls we already have, and we're still concentrating on the fundamentals at this point. We've looked at a few implementations with a mind to porting them to Avalonia at some point, but not got any further than that I'm afraid.
He means if you send the RNG seed down to the clients, that they can calculate the next cards on their own just like the server does. This is a bad idea for any game where knowing the next cards would give an unfair advantage, because if the client has access to it, a simple memory read will give a novice hacker all of the future cards that will be drawn.
That's exactly what this is, but not just Linux, OSX and mobile as well (eventually).
Here's to hoping! 🍻
Are you wanting to code the networking your stuff, perhaps for educational value, or would you be willing to use something like Windows Communication Foundation (WCF) that does the low-level socket programming for you? Both cases provide educational value since it is worth learning WCF but I completely understand the educational value of "reinventing the wheel". You could also use WebAPI instead of WCF if you wanted to learn that.
What about the dependencies for each platform? How does it work?
CLR via C# and C# in Depth are the most detailed books I have read. Effective C# I would recommend to beginner to intermediate programmers who want to learn what NOT to do and how to do things correctly. And then there's many other books that are specific to frameworks or other concepts such as ASP.NET(core), WCF, WPF, async, high performance C#, etc.
Probably not, but if there was I wouldn't want to do it. Programming on a phone just sounds horrible.
Try repl.it It has C# and many other languages. It's not a proper IDE, so it'll be hard to get anything bigger then the basic exercises going. 
&gt; mobile as well So this is a direct competition to Xamarin?
You can put the constructor on top, from that perspective, same thing. The reason to initialize stuff at the declaration is more about not forgetting to do it and seeing the initial value while browsing members. That said, as soon as you have more than one constructor, many members are out for "inline" initialization. tl;dr do inline if no counter-indications :-)
I wouldn't say it's a 1:1 competitor, Xamarin gives you full access to a platform's bits whereas this is (ultimately) just for creating UI's.
Yeah, this scenario with multiple constructors really resolves the matter in a way. Thank you :^)
it stands for Interface Control Document. Its the document that gives the specs for application level messaging. For instance, it will tell you what the header options might consist of. Then it will have all the messages and there respective fields: Message: { "MessageName":"", "MessageData":"" } To application might be 100 series messages Message 101 - Keep Alive From application might be 200 series messages Message 201 - Keep Alive Ack Does that make sense?
Thanks, changing the route totally fixed the problem.
You can use Xamarin for this
This is not a web site, this has nothing to do with online, this two simple console's connecting to a server running on my machine. Super simple. Nothing web releated, no ASP, no database, no rest, no nothing - just a simple socket connected server that two clients written as console apps can connect to.
This really needs to become part of .Net Core. They're a long way from having a UI framework, so far in fact that it doesn't even show up on the roadmap. This would turbo-charge the move among desktop software developers, and keep the WPF crowd from feeling abandoned by Microsoft.
What about getting a VM in the cloud and remoting into it with the Remote Desktop app?
I would guess IEnumerable/IEnumerable&lt;T&gt; are used for either Linq or learning how those classes (including for each, ...) actually work unter the hood
Lists and arrays implement `IEnumerable`. Instead of making `DoThing(List&lt;T&gt; parameter)`, `DoThing(T[] parameter)` and such, you make these functions and methods for their most common shared interface. So any Class you make that is Enumerable can use any of the functions designed for it, such as Linq. If you make your own, you're going to have to write your own ecosystem of methods for it.
It's an extremely general abstraction for iterating through a sequence or collection. Most of LINQ works off it.
&gt; I prefer to use lists or arrays. Using IEnumerable is what lets you use lists **or** arrays in library code. Otherwise you would be forced to use one or the other. IEnumerable also lets you use LINQ projections, build a hashset from your data, and use the [yield keyword](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/yield).
&gt;I prefer to use lists or arrays. Am I being closed minded? Yes in a literal sense. Lists and arrays are not the only thing capable of being enumerated over -- there are many, many more collection interfaces in the game. Why would you limit your scope just Lists/Arrays? 
If you want to make mobile apps in C#, Xamarin is really good. Have a look at Xamarin.Android :) 
Why so angry? I asked a simple question. A simple API is an easier abstraction to implement than a pure socket solution. Why solve a problem someone else already solved and abstracted away? If it's because you have a deep need to learn and understand sockets, it's a completely different task...
All of the above is using. Net, and webapi is a NuGet Package. So it will run on Windows, Mac and Linux
It's an abstraction on all iterable types. So if you need to write some method/class that needs to iterate through something you can allow it to use IEnumerable&lt;T&gt; for all of your operations without making overloads for every list-like, array-like, enumerable-types. What about stacks, queues, or even dictionaryies (which have an IEnumerable&lt;KeyPair&lt;K,V&gt;&gt; implementation)? All of these (as well as arrays and lists) can use any library code that take IEnumerable&lt;T&gt; as a parameter. This is why LINQ works with so many list-like types.
It'd still be a Xamarin Forms competitor though.
&gt; and keep the WPF crowd from feeling abandoned by Microsoft Too late.
I would love to see this running in the browser with WebAssembly and WebGL.
Yeah, but take heart. Microsoft may be getting bogged down by having to re-write from the ground up to transition into cloud-based cross-platform, but they're also starting to see some dividends from open-sourcing as people step up to fill the gaps. Just the other day we saw them take on a .net to webassembly open-source project (the name escapes my memory, sadly) as an official product under the .net umbrella, and now you've got this.
We badly need this framework. Hopefully there will be no reasons left to use electron... 
That was a great read, thanks. It really is a shame to discover the shortcomings of WPF, but I guess it shows even stronger in Microsoft's own decisions. Visual Studio Code - Electron. Visual Studio Installer - Electron. Seems that if I need to target more than Windows 10, I should just follow Microsoft and use Electron.
Rawr!
I've had great experience with Direct2D when I used it with UWP. I used it to develop my own graphing system, because all the others I could find were very slow. Direct2D allowed me to create a very high performance system, so it's good stuff. Unfortunately I don't think it's usable with WPF, but even if it were, it would be a bit too much effort to do the simple things I'm looking for. I think I may just try to migrate to Electron at some point. The only thing stopping me from doing that now is the current state of SignalR for .NET Core.
Can anyone comment on the differences between this, Electron and Xamarin.Forms? As someone who has not used any of these, I'm quite curious. Are there any limitations compared to WPF? 
Ridiculous comment. They have Xamarin already.
Unsurprisingly, the LINQ method is called `Average`.
Unsurprisingly, the LINQ method is called `Average()`. How do you get 4 output averages from 2 input lists?
You can start with [Enumerable.Zip](https://msdn.microsoft.com/en-us/library/dd267698\(v=vs.110\).aspx), but that won't return exactly the output you want because it uses the shortest input length rather than the longest. In your case, you'd get back `{2, 4, 6}` without the final 9. How you get that last item is up to you.
Oh, gotcha. Do you have arbitrary numbers of lists, or always 2? Honestly, I think any LINQ solution that deals with different length inputs would probably end up being more verbose than just using a `foreach` nested in a `for`.
https://stackoverflow.com/a/22205820 &gt;Enumerable.Range(0, lengthOfEachList).Select(x =&gt; lists.Average(y =&gt; y[x])); All lists have to be the same length though.
&gt;Do you have arbitrary numbers of lists, or always 2? has to be arbitrary &gt;Honestly, I think any LINQ solution that deals with different length inputs would probably end up being more verbose than just using a foreach (lists) nested in a for (indexes). it could be too complicated for LINQ, but I am curious to see what people can come up with! :)
If you must shoehorn Linq in here, you could do something like: var averages = Enumerable.Range(0, lists.Max(l =&gt; l.Count)) .Select(i =&gt; lists.Where(l =&gt; l.Count &gt; i) .Select(l =&gt; l[i]) .Average()); It's up to you to decide whether this is more or less readable than using loops.
Can you clarify the problem? There are solutions here that are solving different problems. Here's my understanding of what you're asking: &gt; Given a list of lists, like `{{a, b, c}, {d, e, f}, {g, h, i, j}}`, return a list containing the average of the first item in each list, the average of the second item in each list, the average of the third item in each list, etc. So `{avg(a, d, g), avg(b, e, h), avg(c, f, i), avg(j)}`. Here's what I see other people answering: &gt; Given a list of lists, like `{{a, b, c}, {d, e, f}, {g, h, i, j}}`, return a list containing the average of each lists. So `{avg(a, b, c), avg(d, e, f), avg(g, h, i, j)}` I'm pretty sure you're asking for the former, based on your example output (2 is the average of 1 and 3, not 1, 3, and 5). Given that, a solution could look like: List&lt;double&gt; output = null; foreach (var l in listOfLists) { if (output == null) { output = l; continue; } output = output.Zip(l, (x, y) =&gt; x + y / 2 ).ToList(); if (output.Count &lt; l.Count) { output.AddRange(l.GetRange(output.Count, l.Count - output.Count)); } } Note that because you made the lists of type `double`, I left the math working on doubles so the output actually looks like `{2.5, 5.5, 8.5, 9}`. You could Math.Floor() if you wanted. In this case, using Enumerable.Zip() is just convenient shorthand to avoid writing out another series of nested loops. Also, there's no way this is the most efficient way of doing this.
 List&lt;List&lt;double&gt;&gt; listsOfLists = YourClass.GetListsMethod(); var output = new List&lt;double&gt;; var i = 0; foreach (var item in listOfLists.First()) { double sum = 0; foreach (var list in listOfLists) sum = sum + list.ElementAt(i); output.Add(sum / listOfLists.Count); i++; } All right you can do the rest, you get the idea.
You're being closed minded in the sense that you're trying to find which tool is the best, rather than why specific tools are used for specific jobs.
ienumerable is the base class on which other collections, like lists and arrays, are built. In 99.999% of cases you would use lists or arrays instead, but properties they have in common are inherited from ienumerable.
Its probably the most important control too. Can't do a whole lot without being able to display and manipulate data.
you're exactly right about what I'm looking for. that's an interesting solution. I've never used `Zip` before. Thank you!
that's really cool! thank you!
haha I wish I could come up with that. thank you!
Holy shit! This is the first time I've heard about AvalonStudio! Is there anywhere else I can learn more about its development? Visual Studio for Mac hasn't really been that great of an experience for me.
Do you have a tablet at least? I try attacking this from another angle (Android or web-based interactive fiction builder), but all that I found like [Twinery](http://twinery.org/) and [Squiffy](http://textadventures.co.uk/squiffy) require large screen to be usable. I tried installing VS Code on a monthly $5 VM (I use Vultr, DigitalOcean have the same offering, as well most others VPS), it works, and with TeamViewer I can also remote it from my phone. But typing &amp; navigating the code becomes so awkward and painful due to the tiny screen and touch keyboard. FWIW, a decent second hand Thinkpad cost about USD 250, and low-end new laptop for similar price can be get with 4GB RAM, those should be enough for Visual Studio and you won't be hating yourself after trying to debug in 5" screen for hours.
Using a generic transform and aggregate can be a good way of doing this. First do the transform, then aggregate with the average function. var listOfLists = new List&lt;List&lt;double&gt;&gt; { new List&lt;double&gt; {1, 3, 5}, new List&lt;double&gt; {3, 5, 7, 9} }; var averages = listOfLists.Transform().Select(list =&gt; list.Average()); public static class Extensions { public static List&lt;List&lt;T&gt;&gt; Transform&lt;T&gt;(this List&lt;List&lt;T&gt;&gt; listOfLists) { var transform = new List&lt;List&lt;T&gt;&gt;(); var length = listOfLists.Select(x =&gt; x.Count).Max(); for (var j = 0; j &lt; length; j++) { var sub = new List&lt;T&gt;(); foreach (var list in listOfLists) { if (list.Count &gt; j) sub.Add(list[j]); } transform.Add(sub); } return transform; } }
[Blazor](https://github.com/aspnet/blazor)
Is it a new book? I found the books alright but a bit basic. I made a mistake when looking at doing the exams. For the (I think th see codes are right) 70-480 HTML5/CSS3/JavaScript exam I got the MS book with the same title, read it one evening, aced the exam a couple of days later. The 70-486 MVC exam I did the same, turned up for the exam and realised the book covered nowhere near all of the material the exam would. So protip: look at the full exam syllabus and find materials online for each section. Too much of the exam seemed to be about memorising method names and such from Framework libraries so I didn't bother with them after that. They've changed the MCSD and such now though and maybe I should give them a second chance.
Rather than look at the _current_ state of the image to see if it's out of bounds to deny movement, instead you need to check if the _new intended_ state would be out of bounds and deny that _intended movement_. For example, instead of `imageBorder.Right &gt; windowBorder.Right`, it might be `(imageBorder.Right + (origin.X - v.X)) &gt; windowBorder.Right` I'm not positive on how you're applying the translation math, and my +/- might be incorrect here. You may also need to multiply scale here, I'm not sure. Alternatively if it's easier math/API wise, store the _current state_ of the image in a temporary variable, apply the desired movement, then check to see if the newly applied movement is out of bounds. If it is out of bounds, restore the original state.
Oh ok that’s a good way to think about it. I feel a little dumb that I didn’t think about that. That’s why we have reddit I guess haha
The project has a gitter chat room: https://gittter.im/VitalElement/AvalonStudio
Any plan to hack VB in since VB and C# compile to pretty much the same thing?
Most of these books are garbage..tried the Azure class book. What was on the test wasn't in the book.
Thank you, that's it exactly!
A tab bar is included :) some of the options aren't
It should work with VB.NET out of the box. We aren't currently using any compile-time code generation, so it even works with F# and PascalABC.
Acctualy there is. Xamarin could be used but I'm not sure if this is what you looking for.
Here is their UI framework and its roadmap: https://github.com/xamarin/Xamarin.Forms/wiki/Feature-Roadmap
I would suggest using the officially recommended [70-483 programming](https://www.amazon.com/Exam-Ref-70-483-Programming-MCSD/dp/0735676828) reference book and mostly a whole lot of Microsoft Docs (MSDN). The book itself is definitely not enough for passing the exam though, you really have to practise and you will need to follow each and every 'link' in the book with more information on the internet.
Hmm yeah that sounds more like what I want. What would I have to look up to get an example of this?
Isn't this just what Paket does?
 I think it's fun, I use AIDE to make LibGDX games all the time, I would love a C# compiler.
In theory, it seems like a nice novelty thing to be able to do on a phone, but in practice: I've used ftp-enabled text editing apps to edit website php code, and it's a lot fiddlier than I would like. Moving the cursor around alone is a pain.
 Xamarin has to be compiled on a desktop machine. The OP wants to be able to compile on the go, of which for now is not possible.
Easiest way I can think of is making the form a separate exe.
 You can create an entire xamarin forms app without using a single control from their toolkit, which would be exactly how this would work. What VGPowerlord said is true. 
Hmm, not sure. "Bouncing ball" style tutorials might work out. They tend to reflect/reverse a ball's direction when hitting the boundary, but instead you could clamp. Ultimately, you're talking about code styled more or less like: `if (myImageX &gt; maxX) myImageX = maxX;` So I'm not sure if there are particular examples of this directly. I would suggest to focus first on getting it to work without the scaling factor. Once it's working there, you can see how you might apply the scale (might simply be just multiplying/dividing by the scale factor; I'm not positive.)
I want to install for every user, which click once can't achieve as far as I know 
Can you elaborate please? Can I achieve this within the same VS solution and one setup project?
Create a new Windows Forms (or WPF) project in your solution. Build it, copy the resulting exe to your MSI setup files so it gets installed to the users machine.
I should read it propperly. Thx. 
You should look into inter-program communication (for example using named pipes). Then just call the pipe from your exe and listen to it on the addin. https://docs.microsoft.com/en-us/dotnet/standard/io/how-to-use-named-pipes-for-network-interprocess-communication
I never said it wasn't true, I said it depends on your goals and perspectives. It's true in some cases, not true in others. As with most things - it depends on your use case, requirements and (to a degree) personal preference.
I'm not an expert on Office addin programming, but there should be plenty of simple examples of named pipes online. Basically, your plug in is the "Server" that listens to the pipe in some Task. The exe is your "Client" that sends something back to the server. This is very simple: https://stackoverflow.com/questions/13806153/example-of-named-pipes
Thanks a lot, I'll look into it
wpf? Few random ideas not knowing your specific setup: have the viewmodel load an entirely different xaml file for admins. Loads of fine control but also almost double the work. Why not a simple value converter on the IsEnabled properties? you can style trigger off of that too. Kinda sounds what you were trying to do. 
Yes, WPF. Should have mentioned. I would like to avoid the first option as there are at least 5 user rights and 6 statuses that can control the styling of the form I was researching deeper and found that IsEnabled Converter earlier today. Can I create a converter to use in a style? AKA a converter that returns bool? I would prefer creating styles that incorporates both a status/user right check. Thinking of something like this: https://stackoverflow.com/questions/35295602/binding-the-value-of-specific-attached-property 
That's a great idea to put in the back of my idea for future trouble shooting but no luck in this case. 
try fuslogvw and see if you are getting any errors there, if its not assembly binding then its an unmanaged resource that is failing on start or a config file that is not conforming to XML properly. Those are the most common issues you see when you get no errors. Are you error trapping at the earliest point of execution? That might help. Another thing to check, when I use leadtools libs they die silently if they license is not set properly. I just get a crash out sometimes with no exception at all. Does autodesk require your licence to use the API?
A Converter can return anything and everything you want. https://msdn.microsoft.com/en-us/library/cc295312.aspx it could be a simple switch on your userIDs wether thats a list&lt;customobject&gt; or System.Security.Principal.WindowsIdentity.GetCurrent() or something similar and have the default be return false; and the cases return true; you'll definetly want to learn about IValueConverters if you want to use wpf. wpf tutorial i won't stop recommending: https://youtu.be/6OwyNiLPDNw?t=2942 timestamp is specifically for a solid basic implementation of a value converter but i'd recommend the entire playlist. 
You don't need to run the entire form in another process, just the bit of code that makes the registry changes.
why can't it do the registry part during install of the add-in, exactly? that's when you expect that kind of administrator login. i'd try to rewrite it to support that scenario, if for no other reason than user trust.
var output = new List&lt;double&gt;(); for(int i=0;;++i) { var total = 0.0; var count = 0; foreach(var list in lists) { if(list.Length &gt; i) { total += list[i]; ++count; } } if(count &gt; 0) { output.Add( total / (double)count ); } else { break; } }
how would one achieve this? haven't found an easy solution online
This was actually my first solution, but if the license expires, you'd have to reinstall to change it again, which is not that user friendly
Ugh... I got it. Issues with my xml files for one. Not to mention some other stupid things. Thank you
if the license is packaged with an installer, it's just as friendly as any other way to update the add-on. you could make it a general 'updater' that installs new code versions and new license files as needed.
This sounds reasonnable but is not the right way for my scenario. Problem is that if a user is created after the installation he's not licensed since there is no license in his doc folder. There is a solution to run a script everytime someone new logs in, but most customers don't want to install scripts that run automatically :/
Check this out https://stackoverflow.com/questions/14732040/how-to-install-clickonce-app-without-prompting-the-user/23593726#23593726
I understand where you're coming from but the addin should ship as a one time install package without any updaters or complementary software to handle the licenses
So you're saying if my software is singned with a trustet certificate I gain access to HKLM?
It doesn't support .NET Core, and it's not on the roadmap.
Let me know what you all think of my latest project. It was designed to allow you to compress your .NET programs into a much smaller size. The loader then decompresses the program in memory and invokes it using reflection. 
The installer can be the updater as well. If you think it will never need updating, congrats on your first software package! haha. If you're trying to write an auto-updater into the add-in, you're basically writing malware. Do it the way everyone else in the world does it and put all this stuff into your "installer". If you just don't personally like it, and you think users care about your personal tastes, you're going to have a rough time at this software thing.
It's a clever idea. Any metrics on the compression ratios you're getting? I looked on GitHub but didn't see it (I'm on mobile so I may have missed it)
40-50% compression with LZMA. That's from initial filesize to compressed file size (including the library and such for decompression). For smaller files there will be less improvement, but it depends on the entropy and size of the file.
I'm not sure what decompression time is like, but perhaps on some projects, it could be a consideration. Might be worthwhile reporting. Speaking of which, perhaps adding a command line flag/option to let the developer choose a particular compression algorithm (_because reasons_) rather than having the utility decide only by the best compression ratio. Nice idea!
Absolutely. I've considered adding cmdline options for the next release. I've also considered the runtime performance. LZMA has the best compression ratio (generally) but the longest decompression time. Deflatestream, however, seems to have the best ratio/time relationship. Thanks!
.Net core is not something that you "support". It is not a standard. It is designed to be .Net standard 2.0 compliant, as is Xamarin. Xamarin does not use .Net Core in Android and iOS, using mono instead, but they are copying over .Net core code into mono.
Neat idea, but I'm not seeing the use cases. This is basically trading time for disk space?
Lets say you have a 50mb executable, but you have a large target audience that has to download it. Some people may be on slow 5mbit connections. This allows you to decrease the time it takes for them to download the file. It also allows you to save disk space, even though it's cheap these days. It also provides another layer of obscurity that can be applied on top of Obfuscation, which usually increases file size depending on the levels and methods of Obfuscation.
Thanks. i don't usually think of downloads - I deploy all code internally. there could also be a good argument in server/bandwidth costs in that case. It will be interesting to see if there is an issue with virus scanners in the future. various exe compression tools are now flagged as threats in some systems because you can't really tell what the target exe does.
Appreciate the feedback but you can't really blame me for trying to find another way to do this, can you? Just keeping an open mind here. It's about figuring out what's possible and learning during the process. If everybody did everything like everybody else does it without questioning, we would get nowhere in life. 
What about writing the license file to ProgramData? Shouldn't require admin.
Since this is kind of new grounds for me I just looked it up and it seems to me that this might actually work! Such an easy fix, feel like a real doofus.. Well sure learnt something today, besides that Reddit always delivers :) Will definitely try this out tomorrow, thanks a lot!
Does the way they implemented this cause a problem in any situation?
I dunno, unless you are downloading executables directly. I would think most .net apps are usually in some compressed deployment package (like an MSI) or at least in a zip file already. If space on on a storage device is an issue after installing, maybe you need to delete some stuff off your HDD/SSD? Maybe in cases where you download and run immediately (like goto meeting does). Even then I am unsure if you just running an executable with all dependencies in the package, or some installer that just uncompresses and installs into a temp directory and runs anyways. THAT ALL BEING SAID, cool idea though. Any security concerns, will the app still run in the same security context it was started in after it decompresses and runs?
&gt; Lets say you have a 50mb executable, but you have a large target audience that has to download it. Some people may be on slow 5mbit connections. This allows you to decrease the time it takes for them to download the file. This is a cool project and don't take this negatively, but why not just deliver a .tar.gz, .tar.xz, or .zip file instead?
Yes the app will run under the same security context.
Certainly you could, but then ultimately you decompress the file to disk to the original size. I personally made it for the latter two options I listed.
Would something like this be what you are looking for? https://blogs.msdn.microsoft.com/davidebb/2009/10/29/using-c-dynamic-to-simplify-ado-net-data-access/
https://docs.microsoft.com/en-us/dotnet/api/system.data.common.dbdatareader
You could just have a while(true) loop if it never is meant to end. Alternatively you can use a while loop with a cancellationtoken since youre using tasks.
I've tried using while(true) but my code got stuck.
Using: ` while(true) ` { ` ExampleAsyncMethod(); ` Task.Delay(5000); ` }
you need to call the async method as an async task and await it.
I'm not very known with c# but does the mono compiler means easier crosscomparibility to Linux?
Thanks for your insightful response. My issue with WPF is the performance. No matter what, any animations are always choppy, and it seems to be a limitation of the platform. I'm not great with UI, but I use MahApps.Metro which gets me off to a good start. I do find that I can create much better UIs with front-end web technology. Front-end web has powerful and easy to use frameworks, like Bootstrap and GSAP, which is something we don't really get with WPF. I was thinking about a migration to Electron, but it does sound quite heavy. An ASP.NET website is quite a heavy process just by default. Perhaps it wouldn't line up with what I want. It sounds like Avalonia is more my thing. I'll have to wait until it progresses further, but I have high hopes for it.
Thanks
All I have really done with WPF is snuggle up to it and lick its ear, but one of the first lessons I learned was to keep the code behind files as empty as possible (and containing only the `InitializeComponent();`. You need to do as much as possible in the ViewModel. While it can be a lot more difficult (the vast majority of examples out there involve stuffing the code-behind), it can be immensely more clean and elegant.
I understand why you say this, however I must disagree. I bring in a lot of contractors, and while someone working on my code base for a significant period of time may indeed get pissed off with the commenting, that doesn't become an issue due to the nature of the short term contacts I offer. In fact, it's been appreciated by everyone I've brought onboard so far. I don't hire permanent staff.
Okay, threading in Windows Forms is a little different than, say, a console app, which is why /u/69bit's suggestions won't work. The main thread, the foreground thread, is used to run the message loop - the logic that handles click events, paint events, window moves, all that jazz. If you block it with a while(true) loop or task/thread delays, the message loop stalls and your window will freeze. The code that you have is basically okay - you start a task (typically on a new thread) which goes off and runs your API calls in the background, while the foreground thread returns to the message loop and window events get processed. Because ExampleAsyncMethod is "async void", it works like a fire-and-forget task - it's like a neater form of the Task.Factory.StartNew invocation you have later in the code. It's not recursive like a regular method - you won't get a StackOverflowException from infinitely recursing into it - so when ExampleAsyncMethod "calls itself" it's really spawning a new instance of itself, then immediately finishing. It's not uncommon to see that pattern in C# async network code, where you have a long-running task that listens for incoming traffic - you have a BeginReceiveAsync method which awaits on a network stream, then when data comes in it passes it on and "calls" itself to listen for the next data.
You can think of it somewhat like python. You install the appropriate version of mono for your OS (there is Linux support) and then you can run supported C# code.
Just use a timer. Its what i use for a dumb save game program that creates backups of a save file every 10 minutes. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/threading/thread-timers 
You will run into a stackoverflow exception eventually as ExampleAsyncMethod keeps calling itself. It's a common bug while writing recursive code. It can be avoided by having ExampleAsyncMethod return, then have its caller execute the method again.
This is just for the executable. However, your idea to merge then compress would work as well. That's a great idea for me to implement, so I think I'll do that. Thanks!
It's been a while since I've seen a new compressor coded..Neat app, thanks!
I was inspired by mpress, figured a modern version would be fun to emulate. Thanks!
It's a really interesting idea, although I think it applies to a pretty niche set of use cases. Out of curiosity, any metrics on compression rates?
You could instruct IT to put the license file in the CommonDocuments special folder (C:\Users\Public\Documents). 
[removed]
So just spit balling here, I could potentially see some edge cases in like a citrix environment or some kind of embedded system for certain applications. Especially if its an application that's disk heavy but not terribly processor intensive? I don't know why that would be. It's definitely not something I'd use every day, but I'm gonna keep it in my back pocket. You never know.
I thought you could get auto compression using gz with browsers where the browser will auto decompress the gz stream. 
It may be niche, but mainly it's just a preference. I'm not a fan of large executables, so it's nice to be able to compress them easily.
&gt; Hey look who it is ... Yeah, I always stick my nose into Excel-related posts. To be honest, I'd never heard of ProgramData. I just looked it up, and it seems like a great fit for your needs.
Your program gets stuck because you are running on the UI thread. You should not do that. Use a timer or execute on a new thread. Timer would be best.
You certainly can. [It's not recommended to do over HTTPS](https://en.wikipedia.org/wiki/BREACH) though.
Does it work with .net core 2? Currently publishing even the small .net core executable creates lots of files that take more than 50 MB of disk space. Compressing them into one executable file would be useful. 
I honestly do not even know what net core is, I have yet to look into it. So my guess would be no. But I will look into it and also wpf apps for support as well.
The builtin StringBuilder class is about it for me. 
That is a nice upgrade. Wrapping up all the dlls would be sweet. Hope you get the framework thing sorted.
You'll find it commonly in fluent interfaces, like Serilog's logger configuration.
This would be more useful for .NET core console projects if it combined all the dll's into one EXE and shook all unused IL out of it (I believe there's a linker for that now) and then compressed the result into one lean mean EXE.
This is absolutely the correct answer, but I'd pose a slight twist on the code above. First, get the shape of the result set (such as the number of columns and types). That won't change per row. I'm sure you can find a clever way to handle that (perhaps a List of functions; I've done it with compiled expressions at work, but that's significantly more complex). Then, for each row, execute your helper methods (such as iterating over the list and invoking the function). That way you're not doing the same lookup constantly. I've put a good skeleton below to get you started. rs = "SELECT * FROM People;" if (rs.HasRows) { rs.Read(); int colCount = rs.FieldCount; List&lt;Action&lt;IDataRecord&gt;&gt; actions = new List&lt;Action&lt;IDataRecord&gt;&gt;(); for (int i = 0; i &lt; colCount; i++) { var type = rs.GetFieldType(i); if (type == typeof(string)) { actions.Add(row =&gt; /* do something */); } } do { for (int i = 0; i &lt; colCount; i++) { actions[i](rs); } } while (rs.Read()); }
I use several. Off the top of my head: * SqlConnectionStringBuilder * UriBuilder
I use it when I need to build complex data structures (multiple levels of objects with interconnected data) for unit tests.
Ran across a good testbuild article using this setup, wish I had the link for it. Looks so clean compared to messy constructs I usually setup...
In the past I've used https://github.com/Fody/Costura to merge dlls and shrink executables. 
I use it often for setting up tests. Also asp.net core uses builders combined with extension methods heavily. And this seems to be a good pattern for modularizing functionality.
Get pluralsight, watch mark seemans courses :) 
Compiled expressions is absolutely the right way to do this.
I have a similar idea to improve the dll merging. Thanks
If I understand that right, .NET 4.6 allows for C# 6.0, which brings [the following](https://en.wikipedia.org/wiki/C_Sharp_(programming_language\)#New_features): - Compiler-as-a-service (Roslyn) - Import of static type members into namespace - Exception filters - Await in catch/finally blocks - Auto property initializers - Default values for getter-only properties - Expression-bodied members - Null propagator (null-conditional operator, succinct null checking) - String interpolation - nameof operator - Dictionary initializer While all that stuff sounds cool, I have to admit that it's not clear to me what all those features mean exactly. Does anybody feel capable in explaining what they do? Bonus points if relevance for Unity is pointed out.
While I agree with you that the Java version is really just trying to replicate the beautiful code we have in C#... there are still plenty of scenarios where a full builder can be a great pattern in C#. One example I tend to use is in separating concerns of collecting data needed to calculate a result and the logic necessary to compute said result. Let me explain. Say you have two input classes inputA and inputB. You are going to use values from both of those, along with some business logic, to "compute" an output object "result". This might be for a view modal in MVC or whatever. [It is very commonly some kind of DTO or "data bag" type object where there is no logic on the class only read-only or immutable properties.] What I do is have a builder class with an Init method that receives the inputs. (Why not the constructor? I generally reserve the constructor for IoC injection so it can receive services to help the builder do what it does.) Then your "Build" method does the logic necessary. (So, why have two methods rather than just a builder taking in the two inputs? Because sometimes, as the builder changes and - if lucky - gets re-used elsewhere you may want other optional settings or data that may alter the calculations. It is critical that these are OPTIONAL.) So... you might end up with this: // although service location is evil, this is just an example xBuilder = Ioc.GiveMeAn(xBuilder); xBuilder.Init(inputA, inputB); if (ItIsTuesday()) { xBuilder.SetIsTuesday(inputC); } var result = xBuilder.Build(); This way all the nitty gritty is kept in the builder and the consumer of the builder merely needs to focus on the inputs and conditions. I have had particular success with this inside MVC Controllers. The controller checks the inputs, queries some data as needed, uses a builder to create the view model, than passes that view model onto the view. Simple, clean, straightforward. 
Next time try [quicktype](https://app.quicktype.io/#l=cs)! For your JSON it generates almost exactly the same code as /u/oaialudaea posted.
As some of the other posts mentioned, we don't use it much, only occasionally when something is a bit complex. The reason Java uses the builder pattern so much is to get around the pack of optional/default parameter. This was actually something highlighted in the Kotlin language, which compiles into Java.
I use it whenever I have multiple members to a class that are the same type. It’s clearer than a constructor, simple with Lombok and while you don’t have compile time safety, with proper unit tests your chances of missing an argument are pretty small.
A lot of people in here acting as if there is no need to use anything but IEnumerable. Depending on what you're working on, specific element access may be needed and building around IEnumerable may be unnecessary or inconvenient.
That's fair enough. So long as code comments are kept up to date then fine. I find a lot of places use code comments in place of hard to read code and code that is always on the move
I use it only for unit tests to specify particular characteristics of the object Like OrderBuilder.withDeliveryDateInPast().. as such. For domain objects - I would prefer using a constructor in most cases. Else it’s boilerplate to solve the Too many Constructors parameters problem. As always - there are exceptions 
We used Beck's Test Driven Development: By Example in our class, its a bit old but its good for beginners, it uses xunit which is created for c#. 
I would never write code like that, looks awful. Why not just use a constructor or initializer? C# has named and optional parameters.
Does the language really matter? The principles of TDD are the same whether you write assembly language, PHP, Python or C#, or anything else of course. I do recommend Uncle Bob’s videos on TDD (https://cleancoders.com/videos, episodes 6.1 and 6.2). They’re paid videos, and he uses Java, but that translates to C# easily enough. 
You are using dependency injection on your models?
They're all language features that can help write cleaner code. Some more than others.
In your examples, the builder could work with an immutable Person class, which I prefer, in your other examples public setters are used, which I avoid. So there's a slight difference. Still I actually always use the constructor. Maybe in tests from time to time to make the intention of my input values clearer
I actually [asked the same question on StackOverflow](https://softwareengineering.stackexchange.com/questions/332519/is-there-any-point-in-using-builders-and-fluid-interfaces-with-object-initialise), and the top answer I chose was to do with immutability. In an initialiser all of the properties must be settable (since it's basically syntactic sugar for setting them *after* the object's been initialised). Though you can put them in the constructor, this quickly becomes cumbersome with many complex arguments. Also mentioned is: &gt; The next version of C#, 8.0, is likely to introduce a with keyword which will allow for immutable objects to be initialized clearly and concisely without needing to write builders. So it'd be interesting to see how that affects the builder pattern for that particular case.
Maybe it could work on Android, but Reflection is very limited on iOS, which might render this impossible. Futhermore you might get issues with AppStore approval. 
This blogging site has all the features of a best blog. SEO, Compression, Minification of JS,CSS and HTML. Dynamic CSS with modular coding. Check out www.webace.in.
I’ve had a few problems with ILMerge output recently, switched to using Costura which is faster and produces smaller outputs from what I can see.
UWP is faster than WPF in the experience of most users online. Xamarin.Forms UWP has a small layer above it but I would expect to be very close to native UWP. (There is currently an [issue](https://github.com/xamarin/Xamarin.Forms/issues/1623) with Xamarin.Forms UWP animations but anyone concerned can fix it in the repo, should only take a day.) Electron is naturally a long way off. If you are interested in performance I don't know why you are considering javascript frameworks.
I have only really used it when creating tests, and the tests satisfy a certain set of conditions * There are a large (&gt;5?) number of tests * The tests create a particular object which usually has quite a few properties that need to be set each time * Each test differs from the default set of properties by only 1 or two properties. This means that you have something like this in a test: var object = ObjectBuilder.Create() .WithProperty1(testValue) .Build(); var result = object.TestMethod(); Assert.AreEqual(expected, result); The next test would be almost identical but with a different expected value, and a different test value (or setting Property2 instead of Property1 for example).
One more benefit using the builder patter is you can prevent a constructor from throwing exceptions. With Builder pattern, the Create() method returns null, or IsValid() returns false, with invalid (null) arguments. Lots of exceptions thrown can really slow things down. 
What is the difference between a regular and a ordered dictionary ? I treat every C# dictionary as unordered googled https://stackoverflow.com/questions/6384710/why-is-a-dictionary-not-ordered
I've instead put the while loop within an async method. I didin't quite get it before but the reason the UI was blocking was because the while loop was within the UI thread.
I've looked up a bit on what recursive is. So it looks like because there's a new instance spawned and it's cleared from memory after usage, I will be okay calling it this way right? I've managed to succesfully add the while loop, but I found out I got the while loop running within the UI thread instead of another. Thanks for your explanation.
I have been hearing there was an excellent course on Pluralsight for TDD in C#. Could never remember who taught the course though. Thanks for letting me know who to look up! I think I get a couple months free via the Visual Studio subscription I get through work, so it would definitely be worth checking out.
A coworker of mine mentioned he listens to this podcast, and I have subscribed to it already, apparently. I guess I just need to start listening to it...
Seems neat going to test it out, thanks.
I suggest you to read "Agile principles patterns and practices in c#" by Uncle Bob, although it doesn't present the last c# features it explains very well TDD
i'm surprised unity is/was so far behind to be honest.
Using the click once, takes care of any setup as it automatically registers it's self as a plug-in. Or at least with an Outlook plug-in. That is the experience that I have.
It can really make tests very simple and read. Some extension methods and you dont even need to mess up your domain objects.
Outside of external APIs, not often. It's cumbersome for the common cases and of limited benefit in most others, in my experience.
You could, but you'd have to convert the keys to strings to get the proper override. I'm curious why you want to use it though
At my company we use Telerik UI for Angular a lot, particularly all of the grids, master-detail views and some of the inputs (eg. datepicker). The rest of the styling is done using angular material which is not bad, but ain't great either because of the slow development, ie. they still lack some of the features which other style libraries have. Telerik has been great for us atm, since we're also doing a lot of reports which we use Telerik for also. On the other hand, I have heard really good stuff about PrimeNG, but haven't tried to used it myself, be sure to check it out also :)
Every time I do this, I find that later in development I need to change the API and it becomes a test maintenance nightmare. I love it for the times when it works, but hate it when it doesn't.
I use dependency injection EVERYWHERE. :-) The D in SOLID stands for Dependency Inversion Principal 
I first thought I was running everything in another thread but I found out my while loop was still on the UI thread, fixed it now thanks.
Yeah, the best part of this is that you get to keep your domain objects ignorant of the tests and any special set up that they would require.
Got it running now in another thread, thanks.
Taking a stab at most of these. Don't know anything about Unity, specifically, though, and punting in a couple places where I'm pretty fuzzy or lost on things. &gt; Compiler-as-a-service (Roslyn) The ins and outs of Roslyn are over my head. It's a big topic. &gt; Import of static type members into namespace You can import a start class almost the same as importing a namespace. Public members of the imported static type can then be referenced as though they were part of your class or scope: using static System.Console; namespace Example { class Program { static void Main() { // System.Console.WriteLine: WriteLine("Hello, world!"); } } } &gt; Exception filters You can add a condition to a catch block to further restrict when an Exception should be caught. I. e. } catch (SqlExecption e) when (e.Number == 1) { HandleUnableToConnectError(); } catch (SqlExecption e) when (e.Number == -2) { RetryTimedOutOperation(); } catch (Exception e) { HandleOtherErrors(e); } instead of something like } catch (SqlException e) { if (e.Number == 1) { HandleUnableToConnectError(); } else if (e.Number == -2) { RetryTimedOutOperation(); } else { HandleOtherErrors(e); } } catch (Exception e) { HandleOtherErrors(e); } This has some advantages over the older approach: you don't have to handle the general case twice, for instance, and it is (arguably) more expressive for simple cases. It's not likely to be useful in most cases, but would be useful for APIs that don't discriminate errors by exception type, like SQL Server and Oracle's respective error handlers that throw the same exception type with different error codes. &gt; Await in catch/finally blocks Also outside my wheelhouse, but pretty much what it says. You can `await` asynchronous operations in catch and finally blocks, which was previously not possible. &gt; Auto property initializers public int AutoProperty { get; set; } = 1337; &gt; Default values for getter-only properties public int GetOnlyProperty { get; } = 1337; &gt; Expression-bodied members public int ExpressionBodiedGetProperty =&gt; 1337; public int ExpressionBodiedMethod() =&gt; 1337; Just allows simple members to be expressed with lambda-style syntax. C# 6.0 only allows this for methods and get-only properties. C# 7.0 allows it on property getters and setters, events, constructors, and finalizers. &gt; Null propagator (null-conditional operator, succinct null checking) C# 6 introduces the null propagation operator, `?.`. It works for accessing members of an object, including indexer properties. If the object is null, it returns null (including turning an `int` result into `int?`), otherwise it returns the result of the operation. It's very easy to overuse this, but, it's super useful where's useful. This also works for extension methods! string nullString = null; int? x = nullString?.Length; // null, instead of throwing a NullReferenceException char? y = nullString?[0]; // also null char? z = nullString?.First(); // also also null Combined with the null-coalescing operator, `??`, this can let you elide null-checking and substituting with defaults in many cases. For instance, this if (nullableObject == null) { return defaultValue; } return nullableObject.Property; becomes return nullableObject?.Property ?? defaultValue; &gt; String interpolation Replaces `string.Format()` for a lot of string formatting. var name = "Bob"; // old Console.WriteLine(string.Format("Hello, {1}", name)); // new: interpolated Console.WriteLine($"Hello, {name}"); This is helpful for reducing errors caused by missing or misplaced positional arguments in `string.Format()` calls, and makes string formatting more readable and compact. It comes with some runtime overhead, though. &gt; nameof operator `nameof` returns a string that is the name of its argument. This is resolved at compile time, so it incurs no runtime cost. This makes it easier to keep arguments to, e. g., ArgumentException in sync with name changes from refactoring. // old throw new ArgumentException("I hate your argument", "foo"); // new throw new ArgumentException("I hate your argument", nameof(foo)); Works with types and variables. &gt; Dictionary initializer C# 6 introduced specialized collection initializer syntax for dictionaries. // old var x = new Dictionary&lt;string, int&gt; { { "foo", 1337 }, { "bar", 1729 }, }; // new var x = new Dictionary&lt;string, int&gt; { ["foo"] = 1337, ["bar"] = 1729, }; This is slight more readable, but I think is sort of a wash in terms of additional cognitive overhead for the developer. C# 7 extends this to all indexed collections, I think.
yes, but there exists a key 3 in the dictionary . Just had a doubt about ambiguity and asked . I converted key to string instead of int and used them.
just had a thought . In our application, we convert the strings to key and use them
I absolutely hate it, especially on data models. It reminds me too much of raw Java, JavaScript and PHP. A complete different world basically. Although I must admit, it’s useful for rapid database migration/seeding and Dependency Injection. 
I would look at line 13 of ValidationPage.cs personally and see what it throws a timeout exception 
same but we just use telerik ui for angular + plain bootstrap 4.
Of course, but the point I was making was that if you would use IEnumerable to abstract arrays and lists (as other commenters were saying) then IList&lt;T&gt; would be appropriate (although it still sucks for that reason because it seems like Array doesn't fully implement the interface). EDIT: should add, you may know you are using a List everywhere but may still be useful to use interfaces in certain areas. For example, if a method takes an IReadOnlyList then I can quickly be assured that function has no side effects on the List. (If you can't be assured from this signature then you have some bad programming practices going on in that method).
Why not use a generic SortedList or SortedDictionary? They seem to do what you want, and are brothers that have the exact same interface but are optimized for different use cases. https://msdn.microsoft.com/en-us/library/ms132319(v=vs.80).aspx https://msdn.microsoft.com/en-us/library/f7fta44c(v=vs.80).aspx Quoting: The SortedDictionary generic class is a binary search tree with O(log n) retrieval, where n is the number of elements in the dictionary. In this respect, it is similar to the SortedListgeneric class. The two classes have similar object models, and both have O(log n) retrieval. Where the two classes differ is in memory use and speed of insertion and removal: SortedList uses less memory than SortedDictionary. SortedDictionary has faster insertion and removal operations for unsorted data: O(log n) as opposed to O(n) for SortedList. If the list is populated all at once from sorted data, SortedList is faster than SortedDictionary
Not sure this is actually injection per-se, as injection tries to interact with object activation methods to automatically provide an instance of a class with any dependencies it needs without directly coding an interaction with the IoC container. The above example is just asking the IoC container for an object of type X. Which is cool, I do it all the time (and, ultimately a DI process is going to do exactly what the above does as part of the "injection" anyways, under the hood)
Without seeing the code I’m going to guess either the page itself isn’t loading or is taking longer than your timeout. `GoToUrl(url)` tells webdriver to go to the provided URL and does little else. Can you post more of the code to help debug this? 
Hey everyone, let's pretend that we're Java programmers.
i use builders a lot for the fluent interface, but mainly in tests, it's nice to spell out the test case in english. ```var testCase = CaseBuilder.BuildCase('123').WithThing('abc').Build() ``` other than that tho i try to stay away in the actual code.
&gt; The next version of C#, 8.0, is likely to introduce a with keyword Is there any resource on this? That sounds like an interesting feature.
Are you a programmer? Or did you mean you manually tested all of your software you programmed and now are new to selenium/automation?
Sorry, I should have been clearer. I am a Software Tester. Only been in the game a year and done manual tests. The company I work for only uses Speckflow &amp; C# for automation. So I'm new to automation in general, but C# will be the language I learn for now
Just a note: SortedDictionary and OrderedDictionary implement different concepts. SortedDictionary sorts any new key according to a comparer, while OrderedDictionary appends the key to the end regardless of comparison.
Licenses, very un permissive ones
But OrderedDictionary is built-in, or am I missing something?
Can’t embed it in a c++ engine
for moving onto automation your company should give you resources and time to learn C#, otherwise you'll be fixing automation errors you dont understand
Note that roslyn is merely the compiler, for the runtime they're still using a (albeit newer) version of mono. mono is currently sponsored by Microsoft and licensed under the MIT license. Before Microsoft started sponsoring mono, the runtime used to under LGPL/commercial licenses which Unity didn't want to pay for (I know I read it somewhere, can't find the source atm) edit: they couldn't make use from LGPL because as the license stated: " We consider non-LGPL use instances where you use this on an embedded system where the end user is not able to upgrade the Mono VM or Moonlight installation or distribution that is part of your product (Section 6 and 7), you would have to obtain a commercial license from Xamarin (consider software burned into a ROM, systems where end users would not be able to upgrade, an embedded console, a game console that imposes limitations on the distribution and access to the code, a phone platform that prevents end users from upgrading Moonlight). "
I have a Pluralsight subscription until we get resources in, the Dev team are helping, but do not have Selenium experience. Just trying to do what I can in the mean time. The code has 3 breaks, I’ve dived in to them with F12 to see where the breaks are on what strings. I have a feeling it’s a permission issue, as the UI picks up my NT login and I have a feeling my permissions are incorrect. 
The webpage is displaying I have “Restricted Access” and will not let me in to the website to carry out the test case. I believe it’s a permission issue. Debugging shows 3 breaks when I go through it, and when I step in to the breaks further it’s code and string issues. I can copy the code of the 3 breaks if you think you may be able to help? I feel like it will be a needle in a haystack for you without know what the product is, what the test case is and all the code?
Use F11 to go line by line
asp.net core and autofac both heavily use it for initial setup of things. we used it for a testing framework we made to build up tests. the truth though is that you rarely have objects that are that complex and most of the same problem is handled by using dependency injection and an inversion of control container.
Please note that there are two types of timers. System.Windows.Forms.Timer and System.Timers.Timer. You most likely want the Forms one. Don't accidentally use the other one, which will probably require Invoke(). 
I do Selenium automation testing, if you post it (formatted, like on paste bin) I'll at least take a look. If it is an access issue, are you logging in as a certain user (or assigning a role) or does it use windows credentials to grant access? Edit: What I'm guessing is the previous owner had a higher access role than you currently have and the website probably checks windows credentials for users' access role.
Obfuscation? It’s essentially various methods of scrambling the MSIL in order to prevent easily reading an assemblies code when decompiled. If you want a simple example check out obfuscar source. If you want an extreme complex example, checkout confuser/confuserex on github. And thanks for the comment!
Absolutely, UWP is a lot better than WPF when it comes to UI performance. You can get exceedingly good performance out of UWP. The main thing I was asking about regarding Xamarin.Forms and Windows is what the experience is like. I have experience with Xamarin.Android, and I went that route because I thought it more appropriate to customize the UI for each platform, and I didn't really agree with the Forms approach. I still share what code I can between platforms. I don't think a front-end web approach is bad for UI. You can get great performance out of front end web technologies. The closest we have to something like Bootstrap for WPF is Mahapps.Metro, but concerning high performance animation frameworks like GSAP, there's no chance of anything coming our way.
Not exactly, I am a little familiar with obfuscation techniques. I meant to ask how compressing the executable improves the obfuscation overall.
It doesn’t necessarily improve it, however, obfuscation almost always will increase file size. So this helps mitigate that size increase. Additionally with the compression, the executable is run in memory, so someone would have to dump it from memory to get the “real” obfuscated executable. This is quite trivial though for any medium level reverser.
Unity sounds like exactly what you want. And unity has great integration with Visual Studio for development. That said, you probably don't want to check if there **is an intersection**. You'll run into a hell of a time when you realize that some of your bullets are passing trough your enemies, because they're just too fast. Look up tutorials for Unity 2D, using C#. No kits, etc. And you'll be on the right track.
Give AutoFixture a go!
&gt; I would use a List of tuples instead I assume an OrderedDictionary has built in de-duplication of keys, which would be the only difference. And it looks like you're right, there are [two overloads](https://msdn.microsoft.com/en-us/library/system.collections.specialized.ordereddictionary_properties(v=vs.110\).aspx) for the indexer and the compiler is picking the wrong one. OP could also do this: `Console.WriteLine(d2[key:3]);` which forces the compiler to choose the overload with a parameter named 'key' (the other being named `d2[index:3]`)
By 'built-in' he meant `System.Collections.Generic.Dictionary`. Yes both are technically 'built in'.
Thanks, that's a great idea.
Just to be sure you understand debugging : Debugging is a process where the debugger watch a program execution and sync with symbols. This allows the debugger to know everything you see when debugging with F5 (variables, stack, tasks ....) If you don't attach the debugger to a process, what are you watching ? When you press F5, VS start a process and attach the debugger. In remote the process still need to be the same. The only difference is that your remote debugger has to attach a process and will work as a proxy to you local debugger that will sync with the symbol you provided (pdb)
The sad thing is I thought I invented this approach and that i was very clever.
I never thought to use named parameters in an indexer. That's a good that avoids the casting.
Just spotted this post. Any updates? WPF -&gt; WinForms just seems like an all around terrible idea!
I think I got the idea from a Pluralsight video. At least you got to enjoy a time when you thought you were clever. I'm just a thief.
The overload you are using is (I think) [this one](https://docs.microsoft.com/en-us/dotnet/api/microsoft.extensions.dependencyinjection.entityframeworkservicecollectionextensions.adddbcontext?view=efcore-2.0#Microsoft_Extensions_DependencyInjection_EntityFrameworkServiceCollectionExtensions_AddDbContext__1_Microsoft_Extensions_DependencyInjection_IServiceCollection_System_Action_Microsoft_EntityFrameworkCore_DbContextOptionsBuilder__Microsoft_Extensions_DependencyInjection_ServiceLifetime_Microsoft_Extensions_DependencyInjection_ServiceLifetime_). Its signature, with namespaces removed to make it more readable, is: public static IServiceCollection AddDbContext&lt;TContext&gt; ( this IServiceCollection serviceCollection, Action&lt;DbContextOptionsBuilder&gt; optionsAction = null, // Other stuff that's not relevant has been removed ) The first parameter has a "this" keyword, which shows it's an extension method that can be applied to an IServiceCollection, not a "real" parameter. It relates, in your example, to the `services` object. So the lambda that you're looking at is the second parameter, called `optionsAction` The data type of this parameter is `Action&lt;DbContextOptionsBuilder&gt;`. What that means, is that the parameter must be a method/function/lambda, which takes as a parameter a `DbContextOptionsBuilder`, and doesn't return anything. If you look at the lambda itself, the parameter is `options`. Just like the parameter of any method you write, you could have given this any name you like, but `options` is what's been chosen here. And its data type is `DbContextOptionsBuilder`, because the method signature says that's what it must be. So the `AddDbContext` method will call your lambda, and pass it a `DbContextOptionsBuilder` object. And when it does that, your lambda will do something with that object - in this case, it will call its `UseSqlServer` method. Having called your lambda, `AddDbContext` can inspect the object to find out what options have been set.
So far I managed to migrate my view model for the most part from WPF to winforms, it feels weird but whatever. This is the way they want it done!
Don't forget System.Threading.Timer which is the one I linked to.
What is your `f`variable? Maybe it's a file which needs to be closed?
Try closing the XmlReader before exiting the using statement and/or disposing the stream returned from OpenFile() before saving
I've found that builders help in specifically this situation. The usage of the specific API to construct the actual domain objects is all in the builder, instead of being *in every test*. I often just need to update the builder's behavior, the tests' intent remaining the same.
You should check out seq it is very nice to log to from serilog.
Quite an interesting story. Thanks for posting
Thank you! Some of them sound really useful.
¯\\\_(ツ)_/¯ Check that colliders you have assigned to the objects are enabled and have an appropriate volume? Other than that, maybe create a new test project, with the two objects and nothing else. See if you can get that going. Maybe do it following a help/tutorial bit. You might just be missing a particular setting or component somewhere. You could also try at the Unity forums too; people there will have a lot more experience working with collisions in general and 2D collisions more specifically. They probably have seen lots of the common issues. Beyond that, maybe see about packaging up your project so someone else (probably at the Unity forums) can download it and take a peek.
thank you very much for your help. 
Well I'm not sure which part you're skeptical of then. Sounds like we're saying the same thing. The majority of use cases in MVC won't see significant performance improvement just from using async. &gt;If it can block and the system handles concurrent users or requests, then make it async. You're original comment could be interpreted by some to apply to any MVC action, where as you meant specifically requests that include operations that would benefit from IOCP. That's the danger of this kind of rule-of-thumb advice that is over simplified. Devs less familiar with the nuances take something like that to heart and that's how we end up with things sprinkled everywhere it's not appropriate. It should be applied selectively to a request path where you are going to explicitly perform concurrent work within the request. Or if you have a very heavy load system, hotspots to reduce worker thread pool exhaustion(assuming the request path includes a IO operation such as a DB or web service call which would benefit from IOCP). If you aren't under heavy load and your IO operations are reasonably fast, as they should be unless you have a really exceptional case, then you're rarely going to see thread pool thread creation. If you do have long IO operations like a slow DB call, you'd probably see greater performance improvement focusing your effort on optimizing that DB call.
so, ordered dictionary comes under non-generic collections ? why are these added only because generics were not a part of .NET1.0 ?
I want the indexes to be maintained as I have inserted in the dictionary . I think ordered Dictionary serves to my purpose more than sorted dictionary .
Yes this! MVA!
That article is 5.5 years old now. Here is a quote from a more recent article [async in depth](https://docs.microsoft.com/en-us/dotnet/standard/async-in-depth) from 2016: &gt; async and await are the best practice managing CPU-bound work when you need responsiveness. There are multiple patterns for using async with CPU-bound work. It's important to note that there is a small cost to using async and it's not recommended for tight loops. It's up to you to determine how you write your code around this new capability. The primary reason I use async for all methods that call IOCP async methods is to remove the possibility for my system to become thread starved when timeouts start to occur and to reduce the amount of memory required per user per request. None of the systems I have worked on were close to being CPU bound under load, so that may influence my personal opinions on the matter. I am not worried about increasing parallelism, except in some critical endpoints for latency and in some batching operations for throughput, but those even then...async methods work very well in conjunction with parallel code, it is almost never an either-or issue.
Yes, you can find video tutorials of really good quality out there! 
How is Effective C#? There're only two reviews on Amazon. Is it as good as Effective C++ qualitywise?
Perhaps you should also mention some interesting YouTube channels. https://www.youtube.com/user/IAmTimCorey (Really good C# tutorials beginner and and next step) https://www.youtube.com/user/derekbanas (Lots of different tutorials) 
Channel9 has some good resources
&gt; First of all I want to tell you that, there are a lot of coupons, so I am posting on the blog itself, because posting everywhere with different posting syntax is very tedious and I am really sorry for that. So, not just a spammer. But a lazy spammer who clearly has zero respect for their audience. Banned.
I hadn't given any thought to this for years. &gt;They've all seemed to die on the vine. I remember a general view that "pure OO" and databases just don't mix well. We use EF and code first, we model the entities in code, EF manages the persistence. Its definitely not "pure OO" but it works.
Is this an error on a single test or on all tests you're attempting to run?
For starters your relation database could be used by multiple languages. OO code may change over time. Should your database change as well? What if you want to make a commit to Github ? Problems problems problems. Plus your system could relly on relational database already. What you say is too ambitious and need detailed description.
Ted Neward famous article [The Vietnam of Computer Science](http://blogs.tedneward.com/post/the-vietnam-of-computer-science/) explains why object relational mapping is such a hard problem.
What do you mean? I love using 2GB of RAM and 10% CPU for a simple chat app!
Yes, there is.
It would be a lot easier to just google "c# string to hex" and use one of the many search results. 
Removed: Rule 4.
What have you tried?
I think that OP doesn't want us to stop using databases, but imagine beginner programmer, who created his first app and now wants to save a few strings and numbers. This step is pretty huge nowadays, so there is plenty of "apps" with plaintext password files and so forth.
If this JSON comes from an API response you don't control, the easiest thing would be to map the brackets to a List, and just plain not use the list.
I've talked to my dad quite a bit about old databases and he had a lot of experience migrating the object databases/hierarchical dbs of the 80s onto relational systems. So we've been down that road in regards to OO databases, and they failed for a number of reasons mostly to do with the hardware limitations of the day. Now we've got document dbs like Mongo that have a number of similarities to the OO dbs of decades ago, but do much better in a lot of regards. That doesn't mean that it's prefect or seamless, and there are still a number of challenges with working with document dbs. The short answer is that persistence and storage have different constraints and limitations than objects in memory. There's plenty of other factors too, but in my view, it all comes back to that. Fundamentally, that distinction isn't going away, so I also think that this issue isn't going away. Maybe get incrementally better, but not completely disappearing.
Newtonsoft supports native data annotations. Maybe try IgnoreDataMember or check this out: https://stackoverflow.com/questions/6309725/newtonsoft-ignore-attributes 
I've read the docs and looked for solutions in the internet, but hadn't had any succes.
&gt; Casting e.g. a string[] to an object[] isn't that rare In legacy code it might not be. In modern code it would be just wrong to do something like that. The only reason array covariance exists is because generics weren't a thing back then.
I don't know what I did wrong before, I just tried something again I'm now able to do exactly as you told me to. I can ignore it now. But I'm still curious if there isn't a inbuild method from the newtonsoft class to handle this type of stuff.
Off topic, because it's not .Net -- but I did PowerBuilder for a long time, and its DataWindow control was fabulous. Associate a SQL select, populate the DW with dw_1.Retrieve(args), update the database with dw_1.Update(). Some hand-coding was requried if multiple tables had to be updated -- but that was pretty easy too.
Yeah, you want two numbers to persist after closing app? Just download and config few gigs of dependencies, learn a new programming language, 4 frameworks and 15 design patterns. /s
When was the last time you used C# on a non-.NET environment (.NET Core, Mono, Xamarin, all of them are .NET variants).
Yeah, you want two numbers to persist after closing your app? Just download and config few gigs of dependencies, learn a new programming language, 4 frameworks and 15 design patterns. /s Just to be clear, I like EF and would probably use it for most of our projects. But something like this would be awesome feature for beginners or simple projects.
&gt; and even if enabled it'll give you warning instead of an error Which is why I actually dislike the proposal. 
&gt; Implicit operator precedence between &amp;&amp; and || This works the same for * and +, and I don't see many people complaining about order of operations between multiplication and addition.
Only thing I have ever saw is for java. https://www.objectdb.com/
I may have come across another: http://www.matisse.com/
The c# yellow book, free from the writer Rob Miles! http://www.robmiles.com/c-yellow-book/
Hmm. Intriguing. https://db-engines.com/en/ranking/object+oriented+dbms
It was there right from the start. 
Plural sight has been my go-to for a few years now
Operator precedence for mathematical operators is predictable, because it follows the usual order of operations everybody learned (or should have learned) in Algebra somewhere in middle school or early high school at the latest (i. e. PEMDAS). I don't think I ever learned a formal order of operations for the Boolean operators (i. e. and, or, xor, not), and my experience reading and fixing other people's code suggests most other developers did not, either. This makes the precendence of logical operations harder to predict and interpret in the absence of clarifying parentheses. I don't hear complaints about this, but I do see parentheses surrounding all expressions if (((a == b) || (a == c)) &amp;&amp; (d == e)) { pretty regularly, or ifs nested in ifs to accomplish similar things. And, I've seen that bug I mentioned in the previous comment multiple times, in multiple languages (C# and SQL, specifically, but they're pretty much the only languages I've worked in for the last decade). It's a pet peeve and I don't really think it's a *big* deal, but the question was about "least used" and "least liked" features of the language, not about "most hated" or "most misused".
It’s not, really. I think we just get bored.
Any kind of data? Looks like you're looking for .net serialization. That exists since forever. What's "easy" to you?
Because RDBMS systems are still what they are 40 years later. You have to re-write the fundamentals of the RDBMS before you could start having a pure data-&gt;object mapping system that does not translate. If you want to give up on RDBMS type systems you can get easier mapping with document stores and search indices. Depending on your data and your usages it might actually be quicker and easier. Though normally you need a certain level of complexity before the time to setup a doc store is worth it.
When data is stored like ram - Intel Optane is kind of halfway there. Has languages to become more efficient and more abstract ? i doubt it - modern languages have way more commands and buildin functions. Old languages are Duplo - new ones are Playmobil. 
OOP and *relational* databases have an impedance. The OP has made this clear distinction - so why swallow this important aspect? OOP and *none* relational databases mix up quite good, like graph dbs or even document based dbs. The problem simply is, that there still isn't some kind of dominance of one paradigm inherent with some kind of API standardization. That's what the OP was wondering about. The source is quite simple: As the mainstream software development stack has been driven mainly by big players in the past, the innovation was low due to the fact that the *classical* stack for business applications (RDBMS with some sort of application server and arbitrary clients) has worked good or good enough. So a dinosaur won't move towards other directions and the small shops just were forced to follow due to customers knowledge about this topic or because they feared the risk or they lacked the man power or capabilities to work out other solutions. The good is the evil of the better 😉 The situation has changed since *upscaling* isn't automatically a valid mechanism in order to keep an application working any more and the classic stack isn't good at *outscaling*. On top of that new hipster global players like Google, Facebook and others has established a culture of experimenting and trying new things out. At least big data and simply the raw amount of synchronous user requests (Twitter) has opened up a new dimension of problems, so new approaches had to be found. So yes, we are still in a phase without well known and understood paradigms dominating the business world. Perhaps there will be a consolidation in the future, so that all the different approaches will get reduced to a much smaller amount. Then there is the chance that again some sort of standard stacks might dominate the world again. We will see 😉
&gt; Operator precedence for mathematical operators is predictable Yeah, but &amp;&amp; and || are mathematical operators as well, and are the logic equivalents of * and +, hence their order. It's well defined and predictable. The only problem I see here is that they're not taught in high school, but there's the logic behind them. Also, it's not like this is unique to C#. Pretty much every language has this feature, unless they intentionally try to get rid of operator precedence (don't remember which, but I saw one recently).
The deal is that relational databases are one of the best designed software out there. Sure, you can try to make an OO database, but in the vast majority of cases you will get something inferior to a relational database + ORM. Also note that as a high level language SQL is higher than C# (4gl vs 3gl)
References: [Standard ECMA-334 C# Language Specification 5th edition (December 2017)](https://www.ecma-international.org/publications/standards/Ecma-334.htm) [Standard ECMA-335 Common Language Infrastructure (CLI) 6th edition (June 2012)](http://www.ecma-international.org/flat/publications/Standards/Ecma-335.htm)
It would help if you had posted some code for us to see. But without seeing your code, I'm guess that it looks like this: class MyForm : Form { public void CreateButton_Click() { Customer myCustomer = new Customer(); } public void UpdateButton_Click() { myCustomer.Update(); // Doesn't work } } The general rule in C# (and many other languages) is that if you declare a variable inside a set of `{ }`, you can only use it in that same set of `{ }`. (Declaring, in case it's a word you don't know, is when you tell the compiler that the variable exists, and what data type it is, for the very first time - in this case, it's where you write `Customer customer = ...`) So because you declared the variable `customer` inside `CreateButton_Click`, you can only use it in `CreateButton_Click`, and that's why you're having the problem. To fix it, you need to declare the variable in the `class myForm`, but *not* in any particular method. This will mean it can be used anywhere in the class: class MyForm : Form { Customer myCustomer; // I've added this line public void CreateButton_Click() { myCustomer = new Customer(); // I've removed the data type, because we're just using it now, not declaring it } public void UpdateButton_Click() { myCustomer.Update(); // Now works } } As an aside, because this variable is now shared by all the methods in the class, and not specific to a particular method, it's not technically a "variable" any more, it's a "field". That makes a difference to when it's created, how long it hangs around for, and when it's destroyed, but I wouldn't get too hung up on these details while you're at such an early stage of learning.
Sorry about that. My program is on a different computer than the one I'm using right now. That makes a lot of sense though. I will give that a try when I get home. Thank you for such a detailed response. I believe that may be the issue. Your generic code looks pretty much like mine. I'll give it a shot and if it doesn't work, I'll come back and post my code up. Again, thank you. It's an online class and my teacher doesn't like to respond to emails. 
Yeah, I'm using Visual Studio for this class. 
Search for “Jamie King C#” on YouTube. Before watching his videos, I couldn’t program anything but “Hello World.” Now I’m employed as a Systems Engineer and a Software Engineer at the same time.
Look, I understand what you're getting at, and you're not *wrong*, but I also know what *I have seen* as a programmer. I'm not arguing from theory about hypotheticals, I am arguing from practical experience about errors I have witnessed.
Well Visual Studio is an Integrated Development/er Environment that oyu can use to make WinForm applications... not really the same thing
You're doing integer division in the first method, but you probably just incorrectly transcribed that from your VB.NET post.
Corrected, thank you.
I was just expressing my recollection, your reply might be better as a direct response to the OP.
I disagree. Lots of things have evolved, like document databases and columns that support JSON and XML. That's your object oriented data storage. Obviously with that there are traide offs, but remember your application is not the sole consumer of data. We must balance reportability and maintainability.
It's debatable, but "select foo from bar where foo = 'baz'" more closely mirrors English sentence structure than "from bar where foo = 'baz' select foo", so it's more readable (provided you're comfortable with English, I guess).
I don't know anything about DEMA, but using a second EMA as your price IN the second EMA caluclation seems off. Should it be something like return (2 * firstema) - EMA(period, price, firstema); ?
I don't understand what you mean by 'maintained as a I have inserted in the dictionary'. You want to be able to insert keys and values, but be able to recall key-value pairs in the order that you inserted them? Do you ever want to recall the value by the key? If all you want to do is recall them by the order you inserted them, then you'll want to use a List of Tuples (or create your own storage class). If you want to recall them by key, but be able to enumerate them in order, then use SortedList. In any case, don't use non-generic classes, it'll cost you tons of wasted memory boxing value types.
Of course. I was just saying yes it was a Windows Form Application that I am making in Visual Studio. This is only like the second Windows Form Application I've done. Here is the code if I did it right: https://gist.github.com/anonymous/19ab6a1ac7d080efdea26d1a62ad024e I added the variable to the form as you suggested, but he update button is considering aCustomer null. There's probably multiple things wrong with my program right now, but I've been stuck here for a minute. I'm probably doing something really stupid and just haven't realized it yet. I don't know how I would include the actual windows form that I made, but this is what I have so far.
You're right, and it seems that the OP is actually after this property - that you can recall the key-value pair simply by the index of insertion. I think OP is after a `List&lt;Tuple&lt;int, int&gt;&gt;` (or List&lt;T&gt; composed with a suitable storage type).
How are you learning C# / WinForms? Is this a university course? `Customer aCustomer = new Customer(name[0], name[1], acc, bal);` should just be `aCustomer = new Customer(name[0], name[1], acc, bal);` you've already declared aCustomer to be of type Customer earlier. How did Visual Studio not catch this? you can also set breakpoints and go line by line. Please read up and learn how to debug, it will make programming much better https://msdn.microsoft.com/en-us/library/y740d9d3.aspx
I can't say enough about Bryan Duggan's videos from DIT second year/Semester 1 OOP course on [YouTube](https://www.youtube.com/watch?v=9hqcvnTuESo&amp;list=PL1n0B6z4e_E5aB2FqwrNRrhLyO0aqW_Bo). Just as a disclaimer, it does have some content using the now-phased out XNA, but the other videos are great. It's not something that will get you going from scratch, but if you have one or two semesters (or a couple months) of basic programming experience under your belt, then its a good next step to go to. For example, I read the first half of Jamie Chan's "Learn C# In One Day" and then first half of RB Whitaker's "The Player's Guide to C#", and that got me set to a correct point where Bryan Duggan's course synchs up nicely with the second half of Jamie Chan's Book, and the middle content in RB Whitaker's book. I like to get it quick and dirty from Chan while doing a little practice, then read theory in RB Whitaker's textbook, then watch a video with Professor Duggan to get some lecture and then follow along with teacher in Visual Studio as he spends second half of the class doing some exercises in C#. Some other notes regarding what others have mentioned here.... I've check out MVA before, and while I know it EXTENSIVE, it felt a bit dry to me and simply seeing slides on a screen and reading textbook pages from the screen didn't do it for me. Rob Miles Yellowbook has a problem that it is not sold in print, which is kind of a hassle if you are someone like me who likes to read a physical book on the couch or at the library to get my face out of the computer monitor for a short time each day. 
Yes, I am in the US. This is a community college online course. It's basically self taught though. The teacher says read this chapter and then do this assignment, and also doesn't answer my emails. I am about to leave and won't be able to work on it until later tonight, but I will make the changes and see if I can't get it working. I really appreciate you taking the time to help me out. 
NP just be aware that we arent really here for helping homework poeple out, your post(s) might get axed in the future
What are the benefits of a relational data store? - built-in support for relations between data, and by extension data integrity, and normalization to minimize repeated data. - Set based operations leverage the relational model to perform operations extremely fast against large amounts of data If an OO database can provide the same benefits, then it will replace relational DBs because it will have the added benefit of eliminating the O/R impedance issue. Maybe it's not mathematically possible, though?
https://stackoverflow.com/questions/16016874/wpf-is-there-a-way-to-use-printdialog-only-to-select-the-target-printer-without
I realized two things that helped make data persistence far less of an issue: A vast majority of the time you don't need ORM, direct queries are fine. A vast majority of the time you don't need SQL, NoSQL is fine (S3, Dynamo, Azure Table, Azure Blob, Cosmos, BigTable, etc.) When you start asking yourself "Do I really need SQL and ORM?" at the beginning of a project, you start to realize how often the answer is no.
Kudvenkat - C#, ASP.NET, SQL, etc https://www.youtube.com/user/kudvenkat
Glad you found a solution on your own, however, I'd like to advise you to always close a stream reader/xml reader when you're finished using it. It will help your program run smoother, and eliminate deadlock scenarios. An example of closing the XmlReader object used in your code: reader.Close(); simple but in a larger scale project could really improve performance.
Excellent, worked perfectly, thanks for the link.
Swift has a decent library that kind of does OO storage. It’s still a relational database, but when you pull data or commit data you treat them as objects... It’s called Coredata... I know this is a C# sub, but is this what you are referring too as OO storage?
I don't think you can calculate it with those arguments; you need to know the previous EMA(EMA), not just the previous EMA. [TestClass] public class DEMATEST { public static decimal EMA(int period, decimal price, decimal prevEMA) { decimal K = 2 / (decimal)(period + 1); decimal priceFactor = (K * price); decimal weightedPrevious = (prevEMA * (1 - K)); return (priceFactor + weightedPrevious); } public static (decimal EmaOfEma, decimal Ema, decimal Dema) DEMA(int period, decimal price, decimal prevEma, decimal prevEmaOfEma) { decimal ema = EMA(period, price, prevEma); decimal emaOfEma = EMA(period, ema, prevEmaOfEma); decimal dema = 2 * ema - emaOfEma; return (EmaOfEma: emaOfEma, Ema: ema, Dema: dema); } [TestMethod] public void TESTDEMA() { var period = 3; var prices = new decimal[] { 1, 2, 3, 4, 5, 6 }; var results = new List&lt;(decimal, decimal, decimal)&gt;(); prices.Aggregate&lt;decimal, (decimal EmaOfEma, decimal Ema, decimal Dema)&gt;( (EmaOfEma: 1, Ema: 1, Dema: 1) , (seed, price) =&gt; { var result = DEMA(period, price, seed.Ema, seed.EmaOfEma); results.Add(result); return result; }); var breakpoint = 1 + 1; } }
 Correct in terms of MVVM. If you're looking for architectural advice however: In general, most people will also have a services folder that are meant to directly consume the api's (or services, databases, whatever), not the viewmodels. The ViewModel is more used for gathering the data (from whatever sources) and combining them in a matter for a view to consume, so the Service would be in charge of person A's owned cars, not the viewmodel.
Yes, he is saying the data for the ViewModel is just a data dump essentially. You aggregate the ViewModel's data from (for example) the Person Service which you can collect any data revolving a Person and this Service is reusable for any other Controller or ViewModel that requires the data.
I feel like EF, or some similar technology, could just as easily perform some magic and store persistent data on your hard drive. As a developer, you would treat it the same as if it were backed by a DB. It doesn't even have to be standardized or efficient in my opinion - it would be great just on a local level for storing configs, or even purely for testing / educational purposes.
ORM is tangentially related to the question at best. We're talking about any persistent data.
Mvvm is one of the stupidest ideas ever short of COM and code first development. 
Fun fact. MongoDB sits on top of a relational database storage engine now. This proves how insanely flexible the relational model is.
You can just write a DataTable directly to disk. Not quite OOP, but it does have some interesting options.
How so? I’ve found it pretty nice to use, what’s your take?
I don’t see people mention the reason I always blamed for this (in addition to the search problem): migration. People care about their data, why else would you store it? Changing a class or api in a backwards compatible(or not) fashion is hard enough without worrying about the data migration concerns with your structure changes. There is no first class way in any language today to say “this change I just made to this file should be translated that way to the data that is behind it”
Oh ok I understand now. Thanks!
IIRC I think the NIC will eventually respond to new data with a TCP message telling the other end to back off if the application is not reading from the receive buffer to avoid actually losing data. Would appreciate any feedback from someone with more socket programming experience but either way I'll test it to see what happens.
It's valid it's from an API.
Think of the ViewModel as representing the state on the view. One property on the ViewModel is the model. It's ok to bind view properties and methods to the model (through the VM). Any logic or state specific to the view should be on the VM. For example, if the person has a job and there's a drop down of available jobs, there might be a job property of type string on Person, and an AvailableJobs property on the VM that is a collection of strings. A function to calculate age could be on Person because it operates on Person state and is reusable. But a function that generates a dynamic message based on the amount of jobs available can be on the VM. It's specific to this view. Think of the Person object as completely reusable in other services, views, or the API. The View and ViewModel aren't reusable. 
In general I'd go for inline, but since you're instantiating a new object, you might want to initialize it once (such as in the constructor) so you get the same object every time and don't have to instantiate a new copy every time the property is referenced.
Under normal circumstances I would agree but this is a raw TCP connection where the client connects to the server, and the server just sends text data periodically. That's basically the extent of the protocol. The server doesn't expect to receive any data back, but so far doesn't seem to mind receiving a byte every few minutes. I'm hoping the server doesn't react poorly over time. I don't have access to the devs behind the server. With regards to the TCP layer keepalive feature, I'm sure it works 95% of the time, but it sounds like some routers may not always pass on the keepalives properly. Reference below. https://blog.stephencleary.com/2009/05/detection-of-half-open-dropped.html Manipulate the TCP/IP keepalive packet settings. This is a highly controversial solution that has complex arguments for both pros and cons. It is discussed in depth in Stevens’ book, chapter 23. Essentially, this instructs the TCP/IP stack to send keepalive packets periodically on the application’s behalf. Advantages. Once the code to set the keepalive parameters is working, there is nothing else that the application needs to change. The other solutions all have timer events that the application must respond to; this one is “set and forget”. Disadvantages. RFC 1122, section 4.2.3.6 indicates that acknowledgements for TCP keepalives without data may not be transmitted reliably by routers; this may cause valid connections to be dropped. Furthermore, TCP/IP stacks are not required to support keepalives at all (and many embedded stacks do not), so this solution may not translate to other platforms. 
Man, if only I could Matrix download all of that into my brain. 
ViewModel should really be a model of the view, e.g. bindings for visibility, form data, commands. In a simple application, the model is the just data. In more complex scenarios, you might think of model in terms of domain that hides the manipulation of data within it. For example, in an application you might have the domain concept of "X from source A" and "Y from source B", and the application may need to manipulate the two together in ways the user does not need to be aware of. There is no need for this functionality to be exposed to the user in the UI, so there is no need for the view model to be aware of that behaviour. The view model may simply call model.Do(), which abstracts a complex object hierarchy of other models and services, and relevant updates are handled through events.
As I read it, your client computer is acting as a receiving server for messages another send, after you initiate it with a request to try another server? In this case, you should set up a socket listener to the port expected to receive on, then handle ingoing request and just leave the listener open. A listener should be able to be alive for as long as you leave it open
I know JS is slow, but the point I'm trying to make is that on modern hardware, you can get a significantly better UI experience with front-end web tech than you can with WPF. The UI can be great with this stuff. It's even better with UWP. It's just a real shame that we have to cut off so many users when we decide to use it. I only have experience with Xamarin.Android, so I don't know what Xamario.iOS is like, but Xamarin.Android is running 100% smooth for me. Animations work great. Infinitely better UI performance than WPF. I haven't really encountered any platform issues with Android yet. I think it's reasonable to say that anyone below a certain Android version isn't supported by my app, and I'm not yet entirely sure what that version is, or even how to check... perhaps there's a code analysis tool that will tell me. I know that it is possible to disable certain functionality on older Android versions, and that would require a bit more platform knowledge to know which features are supported where. Would be good if Visual Studio told you. 
For simple things like this, I just have a Settings class that I serialize and write to a text file. It's nice to have settings in plain text in-case the user wants to edit them. Just read the file and de-serialize.
It sounds like you ve been student for a long time. 
xUnit Test Patterns book A few tidbits from a more senior developer who writes a lot of tests: - Controllers are really difficult to test (they require a lot of mocks), so keep complicated logic out of the controller. If the controller needs to make a complicated decision, pass the objects and supporting data into a method to get back the answer. That method can then be tested in isolation. - Avoid "testing implementation". Test for outputs/behavior. You don't care what route the system under test (SUT) used to get answer B from A, only that when given A it responds with B. - Unit tests should only test the public interface of a class / API. - 100% code coverage is not worth it. A lot of code doesn't need to be tested. - Don't design static classes that call dependencies to get results (use IoC principles and non-static classes). - Any class that does time/date calculations should take in an IClock (from NodaTime), so that you can inject a pre-determined (and unchanging) time in tests. What time is it is a dependency, therefore it should be dependency-injected (DI/IoC). 
Test principles change very slowly and really don't depend much on the language/frameworks. We just have better tools for it now (xUnit/NUnit) and more out-of-the-box support built-in to our developer tools (VS, NCrunch, Resharper, MSBuild's test runner).
1:20 - 3 technologies appear on both lists: c#, Typescript, and Python.
&gt; I collected all the books I could find in Safari Books Online regarding the .NET Framework and created a list below Don't think it's all the books they've read
You can declare a local variable with the same name as a field. You then need to use this.aCustomer to access the field as it will use the one in local scope when you reference aCustomer.
Are you disposing of the mutex and any other unmanaged references prior to restart? If it implements IDisposable you MUST dispose it yourself, do not expect the CLR to. While it does, the execution of Dispose/Finalize methods after exit is entirely up to the CLR and is never consistent.
* [How to check if another instance of the application is running](https://stackoverflow.com/questions/6392031/how-to-check-if-another-instance-of-the-application-is-running) and other articles linked from there. * The approach I've always used is [Single Instance WinForms](http://www.hanselman.com/blog/TheWeeklySourceCode31SingleInstanceWinFormsAndMicrosoftVisualBasicdll.aspx). It has a dependency on Microsoft.VisualBasic.dll but works fine in C# and the Microsoft code handles all of the possible issues. * Also check out [Why is Application.Restart() not reliable?](https://stackoverflow.com/questions/95098/why-is-application-restart-not-reliable)
Sorry, but how graphical tablet could help with writing code? 
Well, if we talk about security, newbies could also fall into sql/php/js injection trick as well. I think it is as simplified as it was possible to make for now.
Not of course, I have pretty much the same specs, and I always hold opened 15tabs in browser, 2 IDE, photoshop, messengers etc. And it is only like 30-40% ram load. 
Try something like this... [DllImport("user32.dll", EntryPoint = "SetForegroundWindow")] private static extern bool SetForegroundWindow(IntPtr hWnd); [DllImport("user32.dll")] private static extern Boolean ShowWindow(IntPtr hWnd, Int32 nCmdShow); private const int SW_SHOWMAXIMIZED = 3; private const int SW_SHOWNORMAL = 1; /// &lt;summary&gt; /// Inspect current processes to make sure there isn't /// an existing instance of this program already running /// if there is bring it to the foreground /// &lt;/summary&gt; static bool EnsureSingleInstance() { Process currentProcess = Process.GetCurrentProcess(); var runningProcess = ( from process in Process.GetProcesses() where process.Id != currentProcess.Id &amp;&amp; process.ProcessName.Equals(currentProcess.ProcessName, StringComparison.Ordinal) select process ).FirstOrDefault(); if (runningProcess != null) { ShowWindow(runningProcess.MainWindowHandle, SW_SHOWNORMAL); SetForegroundWindow(runningProcess.MainWindowHandle); return false; } return true; } static void Main() { if (!ExistingInstance()) { // Run Program } } 
This may or may not work: Download Virtual Box and install an OS that you'll be doing your work on. Get a wireless keyboard/mouse that you'll be doing your coding on and hook it to your VM (ensure that only the VM can use this). Now make sure your monitors are on extend so that you can put the VM on the second display. You should now be able to have your family use the computer while you work on the VM. Never tried this btw, just a theory.
Ok, so are you saying essentially have 2 OS on my PC Windows 10 and a VM? Haven't really done anything research into VM and why they are useful. Someone else has suggested multiseat and ASTER, does that mean anything to you? Can it not work as a second monitor and use my Windows 10? Ideally it would be nice to be using the same OS so I can also like switch to their display and watch them game or something. Is that at all possible? Thanks!
 1. There's no any other instance while restart except for the current instance. I'll try the other two
Model - represents the data. simple class. View - is the view. ViewModel - represents the view. INotifyPropertyChanged, ICommand, etc. Services - provide CRUD (Create, Read, Update, Delete, not necessarily all of these) operations to the data. its best to seperate the read into an IUserProvider and the create, update, delete into IUserRepository which extends IUserProvider. so consuming classes only have the interfacing they need. 
Sending a single character to verify the connection is still alive will work -- but the server will have to consume them. Otherwise they'll fill the receive buffer at the server end and eventually you'll get errors. So you'll need to change the server code to accept these "I'm Alive" messages and in the application code just ignore (or log) them. 
I've never really had to do what you're trying to do so I just gave a quick off the top of my head solution. ASTER multiseat does look like it does exactly what you want and seems like a much more practical solution. Download it and give it a shot!
C# will JIT into machine code, and while you can get theoretically better performance with some lower level languages if you're "closer to the metal", in general C# performs fairly well and generally optimizes well. You have more expressiveness and control over how objects are used (stack value-types vs heap reference-types), and can dive into unsafe memory manipulation if you need that extra bit of umph. More likely than not though, I imagine performance issues you'll probably run into are developer-induced. Picking the wrong collection type (e.g., picking `List&lt;T&gt;` when you should have used a `Dictionary`), abusing LINQ or unnecessarily running deferred queries, excessive object allocations, running in debug mode without optimizations, etc. Beyond that, I would also argue from a tooling and development perspective, the C# ecosystem should also give you leg up. Good testing utilities, good profiling and benchmarking tools, great debuggers, and so on. Perhaps the best way to go about it is to take a portion of your Python code that you know performs poorly and extract it to its own test program. Then port that test program over to C# and see how it works. If it still performs poorly, maybe post it around to see how to optimize it; it's possible you may have implemented a bit of code in a very inefficient manner or there's a different way of doing it in C# that's better.
I feel like I can move it around the house. Sit where I want. Some times use on my lap on the couch if doing research or something. Sometimes I could put in on the coffee table and watch something on the couch or sometimes I'll put it on a fordable desk with a kneeling chair with a keyboard and work. Also some days I'll take it in my bedroom. A display monitor will just go somewhere won't it? its not very portable?
&gt; Perhaps the best way to go about it is to take a portion of your Python code that you know performs poorly and extract it to its own test program Brilliant advice, thank you!
.net core is said to be much faster than the full net framework, so I believe it could work.
How are you planning on hooking up the tablet to your PC? If you're going to stream your PC to your tablet - the quality and experience will be degraded. Why don't you just buy a laptop?
I already have a HDMI male to female running from PC to lounge now for TV can't I get hub thing like I got for USBs that allows for more HDMI? Wires are annoying af but I'd rather functionality and put up with it. 
&gt;Aspekt re-writes methods in the following manner. &gt; &gt; [...] try { // original code sa.OnExit(ma); } catch(Exception e) { sa.OnException(ma,e); } Surely it doesn't actually swallow all exceptions by default?
C# is normally only 1.1 to 2 times slower than c++ for comparison. And due to the ease of programming you can probably save a similar amount on better algorithms in c#. Bottom line is C# is pretty fast.
That's exactly the tool I used to generate the classes
I did use the built-in settings, but stopped because they are always removed when uninstalling. I use WIX, and I've tried many things - I couldn't get them to survive an application upgrade. The file that houses the settings also has some stuff in it related to the assemblies you're using. I decided to just create a file on first launch and use that. The downside is that it's not removed when uninstalling.
I thought that would be a neat trick, you don't agree? Just kidding! No it doesn't, it actually will only place the calls you implement, so if the Aspekt doesn't have an OnException call, nothing will get placed.
I would say that the web driver timeout is related to a web element that you are waiting for e.g. CommonElement.ToBeVisible however that element locator has changed. By the way this is just a wild guess.
Then it sounds like you just need a List&lt;T&gt;.
Hi All, I have some more information. Hope this helps. &amp;nbsp; So I have 9 test cases, the scenario is the same, but each test case is based on a RoleType so will have a different end result. &amp;nbsp; Strange thing is, I have run these 9 test cases and they all fail, then sometimes they all pass, then I get a mixture of pass and fail. When watching some of the UI tests run, it doesn't always complete the whole test. &amp;nbsp; public BasePage(TObjectRepository repository) **DEBUG BREAKS HERE** { browser = Browser; **WHEN HOVERING BROWSER I GET AN APPLICATION CACHE ERROR** ObjectRepository = repository; string browserType = Browser.GetType().ToString(); tmaBaseUrl = Config.AppConfigHandler.GetValue("TMA"); tmaAccountMgrPage = tmaBaseUrl + "AccountManager"; tmaAddingToWorkflowPage = tmaBaseUrl + "AddingToWorkflow"; tmaCompletionPage = tmaBaseUrl + "Completion"; ValidationUrl = tmaBaseUrl + "Validation"; NtrsBaseUrl = Config.AppConfigHandler.GetValue("NTRS"); } SO I'M STEPPING IN TO LINES UNTIL I GET TO THE CODE BELOW WHICH SHOWS AN ERROR** public ProcessingPage() : base(new ProcessingPageObjectRepository()) { Browser.Navigate().GoToUrl(tmaBaseUrl + "Processing"); } Error is below OpenQA.Selenium.WebDriverTimeoutException: 'timeout (Session info: chrome=64.0.3282.167) (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.15063 x86_64)' Stepped in to another break below @UISmoke @UIFull Scenario Outline: UI Test Access to Processing Page Given I navigate to "&lt;page&gt;" page using "&lt;role&gt;" Then I should be able to access "&lt;page&gt;" page based on "&lt;role&gt;" **BEBUG BREAKS HERE** OpenQA.Selenium.NoSuchElementException: 'no such element: Unable to locate element: {"method":"css selector","selector":"h2"} (Session info: chrome=64.0.3282.167) (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.15063 x86_64)'
I implemented a multi-objective genetic algorithm in C#/.NET as part of my PhD, so it's definitely "fast enough" as a language/platform. As other posters have suggested, getting that performance to show itself may require good code (although mine was terrible by my standards now, and soldiered on well enough). Python with numpy is going to be pretty good as far as numerical performance goes, but if you're implementing a lot of iterative logic in python thats probably hurting you and C#/.NET should be faster. Alternatives would be to try using something like cython or pypy to speed up the python code.
Efficient code sure, but the use of multi-threading/parallelism is the most important factor for performance. Depending on your implementation, keep in mind that too many threads will hurt performance and send it back in the opposite direction, and possibly perform worse than a single threaded approach. Also, I've used this before and although it's extensible, I'm not sure you can use it for your academic project. If anything you can at least use it as a point of reference to get ideas to improve your projects performance. https://github.com/giacomelli/GeneticSharp
If you're already used to C#, stick to it. It's pretty good compared to the competition. And chances are, if you pick some unfamiliar language, your results will end up worse, even if the language is faster in theory. Because, every tool is just as good as you are good in using it ;) --- If performance is still not satisfying in the end, you can narrow down the resource-hungry parts of your code and implement just that part in a very efficient language, combining convenience of C# with performance of C++ or whatever.
&gt; Luckily lots of devs seem to recognize *immutability* as a growing source of interest Uh, why does *immutability* matter?
Use two data structures - A List&lt;T&gt; which stores the elements ordered by insertion order, and a Dictionary&lt;Key,Value&gt; for retrieving by key. And don't use non-generic data structures like OrderedDictionary, because you're going to perform heap allocations every time you gotta box a int.
This is a complex topic so you should search on your own to find good resources about it. But to name a few things and make research easier for you: * Immutability makes concurrency easier * it enables optimizations in lots of domains. For example within the code during compile phases or for optimizing rendering the DOM of a HTML document (react, angular or vue are famous for this) * it makes code in general easier to reason about. 
The performance difference is not enough for this type of thing to matter. Even if it was x2 as slow (which is on the high end) for a long running process maybe that means 2 days instead of 1 or whatever. As long as you get the result you want in a reasonable time it doesn't matter. Most performance with languages is concerned with user experience, watching something on the screen x2 the time its very noticeable. 
I use builders when I have an object that has many parts that are optional. So if you were to do it using ctor overloads, you'd probably have like 100 overloads which is absurd. For example, building a web request. There's always the host, but then there's paths that are sometimes paths, sometimes kvps. Sometimes there's query parameters. Sometimes there's a body, etc. It's also helpful when this object needs to be built in steps. You can pass the builder around within a factory, for example, and have any number of business rules apply themselves to the builder. Then when all is read to go, you call .Build() and you're good to go. You see them a lot in fluent interfaces, so that an example of using it to provide syntactic sugar at the very least. But you also see them from time to time as a parameter of some other ctor, which provides you a way to build an object from the inside out in order to facilitate encapsulation. It's a pretty sweet pattern imo, and finding appropriate opportunities to use it is really just a matter of experience.
Maybe it’s not exactly what you’re looking for but sounds like you wanna take a look at identity server. https://identityserver.io/ 
Rule 1 about performance in C#, avoid allocating memory. For example, lets say you are using a genetic algorithm. You have 10,000 samples per generation and you only keep 1,000 of them. Don't discard the other 9,000. Instead clear them out and populate them with your new generation. This will reduce GC churn and thus improve performance. Likewise avoid memory inefficient operations such as LINQ. Write your looks by hand and they'll go faster because you aren't dealing with delegates. Avoid abstract interfaces (i.e. `interface`). Calls through an abstract interface are slower than calls directly to a class's public interface because they can't be inlined. Usually this doesn't matter, but you want every ounce of performance. Consider using structs stored in arrays rather than classes. Structs are stored inline, meaning that they require less memory and incur less GC pressure. To avoid unnecessary copying, look up "ref locals" and "ref returns". Consider using raw arrays instead of `List&lt;T&gt;`. While the list is faster than any other collection, a raw array is faster still if. (Assuming that you aren't resizing it.) 
Would it be a fair statement that the model is not just an object graph, but might be several services supplying data to the viewmodels? Or a flat table that holds all the data? "The model" is used colloquially and I think it throws beginners off because it implies model==a class instance called 'model', which means if you have such a high level class, you will have resulting deeply nested objects, which maybe you should put all the object relationship logic in the viewmodel...
Easy, it's another thing that they've got to learn. But they're in a hurry and besides everyone else uses ORMs like EF. So that's how they do it. But ORMs like EF suck. They hide the power of the relational model and all but the most basic SQL features while still giving you most of the pain. So they look for alternatives and fall in love with NoSQL.
Every `object` variable stores a reference, without exception. If you store or pass an `int` in an `object` variable, that int has to be boxed with a reference type in order to store it as an object. That means a heap allocation. OrderedDictionary is a class from before C#/DotNet supported generics, and so it operates exclusively on `object` types. So yes, if you try to store an int in an OrderedDictionary, the compiler and class are going to box that int as a reference type allocated on the heap and store the reference. When you then retrieve the value, you unbox. Generics were created to fix this very problem, so use generics. Store your values in a List&lt;TValue&gt; so you can recall them by insertion order, and store them again in a Dictionary&lt;TKey, TValue&gt; so that you can recall them by key. Problem solved, no boxing.
Yes i really need the help. 
Woudn't Illustrator be a worse experience on a laptop? and if I use a keyboard and desk, why would it be any worse?
Also consider that C#/DotNet has support for SIMD extensions (on 64-bit builds). I've seen it speed up some math-heavy code by a solid 8-10x. New language features like ref local and ref returns allow you to improve performance by helping you minimizing copies.
3 day ban: Misspelling my name.
Hmm, interesting; maybe the reinitialization only occurs if you specify the property like so? public Dictionary&lt;string,string&gt; Dic =&gt; new Dictionary&lt;string, string&gt;();
My experience so far is, love the .net core changes, but it is *just* slightly slower. 
Thanks, that's good motivation, I appreciate it.
You're welcome 😉
Asp.net Core is faster because leaner. .net Core on itself? Hmmm...
If you write all of the code to handle multiple concurrent data access and transactional processing on top of serializing data to disk, then you've basically built an object database. The object serialization itself is possibly the least challenging and least interesting part of that undertaking.
Hm i tried to optimize the nbody benchmark with the new SIMD types. It was really underwhelming 
I have been a student for a very long time...e.g. since .NET framework first was released and before that on other platforms...but as @codefinbel points out, I haven't read all (or even most) of the books I listed. :) I just thought it was interesting/helpful to me to have an idea of what literature was available and how things had changed over the years based on the literature available in continuing to grasp different aspects of C#, .NET, ASP.NET, etc....and thought maybe others would find it useful too. :)
Iirc inline instantiation happens before the constructor. So if you had in line and constructor instantiation it would allocate Dic twice, overwriting with the last one.
&gt;Also, I've used this before and although it's extensible, I'm not sure you can use it for your academic project. If anything you can at least use it as a point of reference to get ideas to improve your projects performance. In addition to GeneticSharp, there's the [GAF \(Genetic Algorithm Framework\)](https://gaframework.org) library (and [Source Repo](https://bitbucket.org/johnnewcombe/gaf)), as well. I'm not sure how the two compare, but having another point of reference can always be helpful. 
Why are there so many books on Azure? That’s a cloud provider, not necessarily .NET.
Did you make sure to run in 64-bit mode? They have no 'hardware acceleration' otherwise. Check `Vector.IsHardwareAccelerated`. This was a demo program I wrote (borrowing the vector code from another poster) as part of a challange posed on another reddit post a few weeks ago: https://gist.github.com/antiduh/aa111df5c6ebb9fd75a5bbc04afce1e3 And it saw the operation speed up from 800 MB/sec to 4400 MB/sec just by using Vectors.
I've done some image manipulation with C# and C++ and using `unsafe` I got almost the same performance as C++ This was years ago in uni and I wasnt as good of a programmer I am now though
We count from 0 to 6. Then for each loop/count, we output 7 stars minus the loop/count we're on. So: Loop|value of `i`|Number of stars|Printed Line/Result :--|:--|:--|:-- First loop|`i = 0`|`7 - i == 7 - 0 == 7`|`*******` Second loop|`i = 1`|`7 - i == 7 - 1 == 6`|`******` Third loop|`i = 2`|`7 - i == 7 - 2 == 5`|`*****` Fourth loop|`i = 3`|`7 - i == 7 - 3 == 4`|`****` Fifth loop|`i = 4`|`7 - i == 7 - 4 == 3`|`***` Sixth loop|`i = 5`|`7 - i == 7 - 5 == 2`|`**` Seventh loop|`i = 6`|`7 - i == 7 - 6 == 1`|`*`
Related to this, especially arrays, take a look at span and related stuff in 7.2. 
What piece of code is counting from 0 to 6? 
And what outputs the 7?
You create the mutex object and hold it in Main. You call Applciation.Restart from the same Main. When Application .Restart starts another instance of your application, the current instance, the one calling Application .Restart, is still alive and has the mutex. The new one stops. What you need to do is: dispose off the mutex before calling Restart.
 for (int i = 0; i &lt;= 6; i++) `int i = 0` means "start at zero" `i &lt;= 6` means "keep looping as long as `i` is less than or equal to six" `i++` means "at the end of each loop, increase `i` by one"
`Console.Write("*");` This outputs a single asterisk to the screen. So if you call it multiple times, it will output multiple asterisks: Console.Write("*"); Console.Write("*"); Console.Write("*"); Console.Write("*"); Console.Write("*"); Console.Write("*"); Console.Write("*"); For example, the above will output `*******`. The loops make it so it calls `Console.Write("*");` 7 times, then 6 times, then 5 times, then 4 times, then 3 times, then 2 times, then 1 time.
.net core generally should be on par or faster than full framework, so examples to the contrary are interesting. Can you open an issue in one of the .net core repos so somebody can investigate?
np Mind you, there's a difference between `Console.WriteLine("\n")` and `Console.Write("\n")` `WriteLine` will _automatically_ add a newline at the end. `Write` will only output what you put in, without adding an extra newline at the end. So if you put `Write("\n")`, it will create a newline. If you put `WriteLine("\n")` it will create _two_ newlines.
If you have an `IEnumerable` and you want to get a specific item, you need to use `ElementAt` instead of an array indexer: `myValue = DataGrid.ItemsSource.ElementAt(i).ElementAt(0);`
I have seen C++ with STL running slower than C#. Surprisingly memory de-allocation is pretty expensive in C++ as are some data structures. For example trees in C++ can be slower than dictionaries in C# with properly implemented hash functions. So the most important thing is good algorithms and data structures. Choice between C# and C++ should be considered only when all C# optimization options are exhausted. C++ is crap to develop in. It can be 10 or more times longer than C# with absolute hell when it comes to external components and libraries.
Performance is mostly going to be up to you (developer) and data-set you are working on (how much manipulation is required before 'doing work')
UDP provides no security features whatsoever. For raw UDP, an attacker could read, intercept, manipulate, inject delay, repeat etc. packets, assuming they have some kind of access to the network(s) they're transmitted on. Most of this is also true for TCP, but additionally UDP allows attackers to spoof packets without even having to observe any packets at all because there's no sequence number (if they know or guess the source and destination address and port).
You could take a look at auth0.com. we use it and it's pretty good
Check out Accord.NET. It's the only well reviewed ML library in the ecosystem.
So I assuming for a simple game between two people this wouldnt be an issue, were talking about 1000s of people and accounts, were talking two consoles - something you'd make in college
.NET Core dev here. Documentation and big reports have been lacking in the ecosystem. We need more good, detailed bug reports with workarounds and steps to reproduce.
Yes-- sorry I cut &amp; pasted from two places. Either rename the function 'EnsureSingleInstance' to 'ExistingInstance' or vice versa.
Whatever is listening on the socket should have the minimal system permissions required. The account it is running under shouldn't have access to any network resources, unless absolutely needed. [LocalService](https://msdn.microsoft.com/en-us/library/windows/desktop/ms684188\(v=vs.85\).aspx) is a good place to start. Don't rely on the contents of the messages you pass to identify local resources or database queries.
This. I haven't fully moved from Java to C# yet, but Identity Server 4 is the product I always hear mentioned when authentication comes up in .NET.
I'm definitely going to check this out, thanks.
This. While MVVM and MVC are conceptually different, in practice they tend to be mixed.
Dude just get a laptop lol Any $500+ laptop will exceed your expectations. I currently bought a cheap 300 laptop and its totally fine with Visual Studio. Maybe something like this https://www.amazon.com/Asus-VivoBook-Flagship-Performance-Quad-Core/dp/B077GBXBCM/ref=sr_1_4?s=pc&amp;ie=UTF8&amp;qid=1519426407&amp;sr=1-4&amp;keywords=asus+laptop My suggestion: Get a 15" laptop that is relatively lightweight. Dont go beefy on "gaming" shit
You made a bot that buys a sneaker from a webpage? Thats a pretty neat first project. Maybe next up could be leetcode for you, or just other project ideas like your first one.
Nah, that's not accurate. They most likely meant that the Linux and Mac versions, which have lots of new code, don't have all of the same optimizations as the Windows version. The Windows version is almost entirely derived from the existing Windows codebase. .NET Core should be significantly faster in many, many ways. There have been very few changes that would slow anything down, but hundreds and hundreds of performance-centric improvements have been merged in over time. .NET Core is also significantly faster than Mono even on Mac/Linux. (I used to work on .NET Core)
I've seen this 3 times now, so I'm going to say the following. If you're in visual studio, press f9 when you're on the line with the first for loop, then you can press f11 to step through the application and see what it does. Try changing what's being printed and see how the output changes. To really understand this stuff you have to play with it so it makes sense to you, nested looping isnt the easiest thing, build big comes loops with print statements saying which loop you're inside of, so you see how they work, and why they do what they do.
Maybe try some of the stuff on here out: https://github.com/karan/Projects Projects under classes would give you an opportunity to play around with different patterns and architectures depending on how far you want to take them.
The thing with UDP is also that there isn't much of a connection. Someone just kind of blasts UDP packets over a port and if someone else on the network is listening, they will get them (potentially out of order). A "connection" when it comes to UDP is something you'd have to implement yourself. As far as "hacking into your machine", unless you're sending OS credentials or something over the network over plaintext UDP, I'm not sure how that could happen. Just to be safe, a good security best practice is to not directly allow packet contents to control what code gets executed. This is an excellent attack vector. Always validate your packets coming in and restrict what can be done based off the contents.
The best way to approach this problem is with thread pooling. Create a pool of worker threads, for each value between 1 and the value yeilded by number of logical core minus one. Then, dispatch tasks to the worker threads. Let your main thread run an asynchronous service which accepts a composition of tasks, divides them up over the resources, pipelines results as appropriate, and notifies the user when processing is done. You could make this yourself, but Microsoft kindly made the Task Parallell Library for us.
I totally agree.
Enterprise developer here. I disagree. Performance considerations are important for the full stack. Every computation has a cost. User synchronous computation is more expensive, sure, but backend, user asynchronous computation like statistical aggregation, index reorganization, etc still affects user experience in two ways. First, it can monopolize resources. Long running stored procedures make the RDBMS lag for everyone. Second, it degrades the user experience by introducing latency. Generally, you want data changes to be projected to the user's brain as fast as is possible. Having to wait a day on data hurts business.
Just use rabbitmq as the connection between the two, easiest safe way in my opinion
OP I see that you've already gotten your answer, so I'll just add this: one of the best ways to understand what a piece of code does is to make small changes and see how they affect the output. You already started with that by removing the '-i' but there's so much more to try! Try a few different values in place of the 6, a few in place of the 7, for example. Focus on the parts you don't understand (what happens if you take out the line with the "\\n"?), but also try changing the parts you do understand just to be sure you actually understand them ;) Besides that another good skill to learn is how to execute the code on paper; essentially, you become the computer. Keep track of all the variables on paper as you go through each line and write down the output whenever some is generated. If what you expect doesn't match the program's output, that might help you pinpoint where your understanding is off. And finally, never feel silly asking questions, we all started out not knowing how to print "Hello World" :) Good luck!
This looks familiar! It's cool to see your progression. I feel that you should continue with the sneaker bot some more, it's coming along nicely! I find that I start projects often but rarely see them through to a point where I would consider them finished. I haven't tested it out but you have 2 blocks which look like they share a bunch of code which (with some testing) could be a really clever method. IWebDriver driver = chbxkickzfox.Checked ? new FirefoxDriver() as IWebDriver : new ChromeDriver() as IWebDriver; driver.FindElement(By.ClassName("classgoeshere")); See if you can get this interface webdriver working and test it does everything you would want it to do. If you're looking for something cool to learn to spur on your c# development you should familiarise yourself with linq and lambda linq expressions. They can save you a lot of time and hassle once you get to grips with them. Good luck! https://docs.microsoft.com/en-us/dotnet/csharp/linq/write-linq-queries 
You still have problems. A third person could sit nearby and sniff their packets, allowing them to watch the game (not so bad), as well as send whatever information they want to to both players, making the game do more it less whatever they want to (bad). Unless there's another bug in your game that allows someone to do something nasty, though, the most an attacker could do is screw with someone else's game.
&gt; too many threads will hurt performance Which is one reason why you shouldn't use threads directly, but instead use abstractions like `Task`, `Parallel`, PLINQ or TPL Dataflow. They will largely take care of using the right number of threads for you.
I don't think LINQ is necessarily heap allocation heavy, but it is easy to write a LINQ statement that allocates without realising it. If lambdas are implemented in a similar fashion to C++ lambdas (anonymous functions for captureless lambdas, structs with call operator overloads for lambdas with capture), then you can avoid allocation with your lambdas simply by ensuring that you only use variables from the surrounding scope by passing them in as arguments. It's also hard to know when a LINQ query can be done entirely in-place and when it needs to allocate a new collection. I'd also caution against using object pools until you've profiled your application without them. If the EA uses an intensive enough fitness heuristic, then the time taken to collect each generation may be insignificant compared to the time taken to evaluate it, in which case your time is much better spent improving the efficiency of the fitness calculation. Sometimes you can even go so far as to use another EA to find a faster approximation of the heuristic for your original EA, and use that as a first pass to cull obviously unfit genes from a generation. Or, you can design your heuristic as an iterative one which refines the accuracy of the fitness value with each iteration, only continuing to the next iteration if the fitness is above a certain threshold.
&gt; I'd also caution against using object pools until you've profiled your application without them. If the EA uses an intensive enough fitness heuristic, then the time taken to collect each generation may be insignificant compared to the time taken to evaluate it, Even if that's true, it still adds to the overall time. And a simple object pool can be created in a few minutes. It may even save you more than just the GC cost since you are no longer rebuilding the collection or array that holds the old and new values.
I've always hated reporting tools, because it just adds so such a thick layer. Check out rotativa. If you can do mvc, then rotativa can capture the resulting page before it's rendered and make a PDF from it. So you can reuse the object models you're already working with. Much much easier. 
You need to write packet checksums as part of your header, and additional measures should someone modify the packet. This is why server authoritative servers are extremely important in games that require full integrity. TLDR - You can wire sniff a packet, but it’s up to the server to reject it.
If you are on windows, you should definitely learn c#. Even if you find it useless after reading some books an creating some apps. It’s important to not stop learning. You will take away useful concepts and ideas. Just do it. 
It's completely unsafe. Have a look at https://en.m.wikipedia.org/wiki/Datagram_Transport_Layer_Security. Apparently, schannel on recent Windows does it. Not .net tjough.
&gt; but i find the fact that i have to create an Object for everything pretty boring C# and Java are very similar in terms of their object-orientedness. Though I will also add that since probably 70% of the big languages are object oriented, you might want to open yourself to learning a little there
I don't fully understand your request. Source code files such a C or JavaScript? You are perhaps looking for a templating system for the gui output? Please take pitty on me and be as verbose as possible, sometimes I'm slow.
Microsoft has, and will continue to, push c# as their generic workhorse language. It will let you solve most windows problems most of the time in a mostly efficient way. C++ generally only if you absolutely require that much more speed. If your not interested in windows however then I would pick another language. That is, unless you are curious about running .net core on linux for services.
Most new programs will be built on .NET Core now which is multi-platform and has huge performance improvements over .NET framework. If you just want to be building business GUI apps, choose a higher level language like C# or Java, not C++. You'll basically create the same thing except you will be done much sooner. 
Ah, I had no idea this was even a thing! https://msdn.microsoft.com/en-us/library/dd820620.aspx I've never done this myself so I will leave it for others to comment.
[This](https://stackoverflow.com/a/5873231) may help you to generate C# classes from SQL Tables...
If your heavy computation part runs on native code( C/C++ ) then performance difference is negligible. It depends on library. If you write it purely on C# then performance will suffer.
I think more doco is required. Does it support core? Or full ef? Or both? What does the generated sql look like? What does `dbContext.BulkJoin()` do?
Short answer: Yes. Longer answer: Yes, you should learn C#.
&gt; Does it support core? The library is named Woodman.EntityFramework**Core**.Bulk, so I'd assume it is for EF Core only. 
I need something like this at least once a year, bookmarked.
you could also use EF data-to-code
I think yes. Its really great language. Microsoft did something very right with this. Im on a macbook and with the "new" .net core its possible to use it. (What a time to be alive). You can do systems programming c++ style or more functional code. It wont compete with Python, Scala or Haskell but the features they provide are solid. So you can transfer your gained knowledge to other languages. Its my favourite language by far atm. But by posting this in the C# subredit you may get biased answers :p 
Short answer: no, it'll not meet your needs at all. Graphics tablets are pretty much just touch monitors with pressure sensitive surface and programmable buttons, they are not standalone devices. Just buy a laptop.
Heya , I'm actually a sysadmin but keep a modest interest in c# to compliment Powershell so sticking my beak in as a potential end user of your add in. From my point of view as someone who deploys a ton of software I don't really want to do much mucking about with tracking licenses. So what I'd want is to say buy 10 licenses that all have the same key, wrap that with the install and I'm done. I can then audit that it's only on 10 pcs and I'm happy. If I have to track 2+ individual keys, 1 per person , I am not happy. If every software was like that, it would take me all day just to audit. So you've got two models really for enterprise and for home. Enterprise, we want 1 license key for all our users, home user - they can take care of their 1 key easy. I definitely want to be able to deploy it remotely using sccm or similar. I definitely want it to be per machine install. Also if there are dependencies for your add-in, for the love of hell make them in the exe. Or make it very clear what they are. Rather than an exe, since it's for excel, wrap it in an msi. A totally contained per machine install with one license key that I can stick in as a public parameter , that does a clean silent install and we love you. Bonus points if it clean uninstalls too. It doesn't matter if it needs admin creds to install it and enable it first run because we have them. If a new user comes along , doesn't matter. Machine install. Machine licensed. Nothing makes me trash a developer faster than making it hard for me to deploy and audit their software. Hopefully that is useful and doesn't just come across as a rant
I've updated the README with some more info. I just finished scrapping this thing together last night and docs weren't sounding fun at the time, my apologies. The package itself was built against the netstandard2.0 framework. Side Note: If you viewed the package on nuget.org (https://www.nuget.org/packages/Woodman.EntityFrameworkCore.Bulk/1.0.0), you can see the package dependencies - including the supported framework(s).
you are correct, the project was written against the .NETStandard 2.0 target framework
Removed: Rule 4.
Yeah, it's a very fundamental part of C# that you'll learn going through learning materials. Unless you're asking why parameterless methods still need the `()` at the end and do not implicitly invoke without them. IIRC, Scala lets you do this. If this is the case, then update your question to reflect that. Otherwise, you got an answer already from s0ft_.
Yeoman
Cool, that has potential value :)
If you plan to stay on Windows for GUI development, yes learn C#. And I think all Windows PCs come with the .NET Framework installed by default, whereas java has to be installed by the user.
Not a silly question at all. I guess its hard for me to consider them all as one "project" when they are different teams, different platforms, different purposes, etc. In fact the container orchestration is the only common requirement. But, that would certainly avoid duplicate entries I suppose. Is that how other companies do it?
Unfortunately I don't know the technical details behind it but I imagine the machine reaches out to a license server every so often to check not more than the amount licensed are reporting in. Or perhaps a lot of it is done on trust and audit. Lot of business licensing is done that way. Microsoft for example. Software installed for all users of machine basically. 
His point is, if you already have to wait a day, a second one makes a vastly smaller difference than comparing, say one hour and 10 hours.
was considering having a look at this, but then I saw your profile picture and it gave me cancer
Awesome, thanks for the input! Seems counter-intuitive but in looking at it this morning, I don't see where it would cause too many issues other than making one big messy project (feels like a monolith lol). I will proceed in that direction for now and pester the few MSFT contacts I have to see if they agree or disagree that it's an inelegant solution at best.
Yeah let me know. I agree it sounded ridiculous and not intuitive but since there's no way to merge Kanban boards for a group view or share build release settings among projects it's about all you can do. All seperate or all together. No middle 
I will post back if/when I hear something. I will say that in general I've been very impressed with the MSFT team in giving good, thorough and well-thought-out responses in the past.
jk :D looks interesting tho !
Take a look at Scripty - https://github.com/daveaglick/Scripty
Thanks! Golden Advice!
VB is great for the hobbyist learning their first programming language, but if you want to make money it is much, much easier to find a job knowing C#.
Give a try to F#, it is functional and .net
These things compound upon and confound each other. Things like buffer lag, full table spooling, network congestion can be solved with proper indexing, caching, data organization, and separation of responsibilities (N-Tier design).
T4 templates or razar is what you want.
Thanks. So glad I found this sub. 
Wow. I need to autogenerate Hack source files. Looks useful!
Also [this](https://www.jetbrains.com/help/resharper/Templates__Creating_and_Editing_Templates.html) if you use ReSharper
Could you please fix it in the code ? i tried doing mutex.releasemutex() but no matter how i tried it, it didn't work. could you please ?
I think AWS cognito has a .NET library. Not sure if it is open source or not though. Are you looking for a cloud service or self hosting option?
Can I ask why it matters that you need the unsafe keyword? Also for 6 doubles is it not worth just listing six contiguous fields out to get around the problem?
&gt; Can I ask why it matters that you need the unsafe keyword? I want the memory safety guarantee from C#. Using unsafe turns off that safety, at which point I might as well use C++. &gt; Also for 6 doubles is it not worth just listing six contiguous fields out to get around the problem? My example is very simplified, the array may represent a vector or an array with thousands of elements. Also, if I need to do a workaround to handle something like basic linear algebra, then there is a weakness in tho tooling.
You should take a look at this library for more ideas: http://entityframework-extensions.net/ You can always look at the library with dnSpy and see how they do some things (for educational purposes, of course)
Funny you mention that, I wanted to use their library, but the price was rather steep so I ended up rolling out my own.
&gt; I want the memory safety guarantee from C#. Using unsafe turns off that safety, at which point I might as well use C++. FWIW I disagree with this. The nice thing about C# is that it's safe-by-default, meaning that even if you write unsafe regions of code those regions are contained and manageable, and the rest of your code is still safe. This is unlike C++ where everything is unsafe-by-default and requires sticking to conventions everywhere (such as RAII and 'smart' pointers) to minimise potential errors. I understand and agree with your sentiment that it's nicer to always have provably correct code and not have to meddle with unsafe. Unfortunately I'm not sure fixed buffers will ever be part of this category as overrunning the buffer would allow you to alter the stack frames (because they're stored on the stack in certain cases), and unlike with heap arrays access is not always bounds checked.
Another solution is to pool heap arrays. You can retain references to and re-use the same double arrays to prevent straining the GC. Edit: There's even a type built-in atm (which I haven't used yet) that can make this even easier: [ArrayPool](https://github.com/dotnet/corefx/blob/master/src/System.Buffers/src/System/Buffers/ArrayPool.cs).
In my field it isn't a matter of being nicer to have memory safety, if you don't have memory safety then you will have to prove it at great expense using tools like static analyzers. C# 7.2 appears to already have stack memory safety for arrays using the Span class. I am trying to determine how this can be used within structures.
For my application I need complete determinism in memory handling. Using the stack is the easiest way to accomplish this. Using a memory pool is not guaranteed to be implicitly deterministic.
The quick &amp; dirty approach: using (StreamWriter sw = new StreamWriter(@"C:\Users\Public\TestFolder\Main.cs")) { sw.WriteLine("using System;"); sw.WriteLine(""); sw.WriteLine("class Test"); sw.WriteLine("{"); sw.WriteLine(" public static void Main()"); sw.WriteLine(" {"); and so on. 
I thought that the new C# 7.2 included the safe stackalloc implementation, but there seems to be a lot of conflicting information. Before ref returns there wasn't a good way to handle a safe stackalloc, but that appears to be solved by Span&lt;T&gt;.
I am on mobile so I can't look at the entire project. I looked at the Bulk Add class, code looks fine but I noticed one thing. It's not a huge deal but there's some repeated code in the two private static methods. I think you could reactor the part where you get the ids from the database into one method. Might make it easier to read too. I could be wrong (since I'm on mobile) but the code looked exactly the same in those two methods (last 10 lines or so).
It is quite possible I am mistaken, but that is only for the stub memory that P/Invoke generates. I don't think that effects how C# handles the allocation of the byte array.
Can't you make the struct a `ref struct` and then put a `Span` inside it? https://docs.microsoft.com/en-us/dotnet/csharp/reference-semantics-with-value-types#ref-struct-type
Good catch. I added the postgresql methods last and didn't go back to refactor after that. Will do.
Isnt that part of the free plus libraries? http://www.zzzprojects.com/
Thanks, but again, this is for specialized applications where any allocations except for the stack are forbidden after initialization. I can't allocate any managed, unmanaged, or pooled memory.
Since C# 7.2 you can use `Span&lt;byte&gt; bytes = stackalloc byte[2];` within a safe context.
The free library supports bulk updates, but requires a single expression to be used against all the rows that are updated. These calls allow for a function to be used enabling each row to be updated individually.
Also take a look at CodeDOM, I used it to generate C# POCO's from xml and you can easily decorate them with attributes in the process. When you use the Roslyn equivalent it seems to be even more powerful. Unfortunately it is only for .net languages. 
The only other idea that comes to mind is something old called linq to SQL. It will generate c# class models to match existing database tables.
Use `stackalloc` and assign the result to a `Span`. https://msdn.microsoft.com/en-us/magazine/mt814808.aspx
Right, but can that be done within the struct? Otherwise is breaks encapsulation.
Can the new stackalloc be used with ref structs? I haven't found a concrete answer on that question either.
You could just do what a lot of C# game devs do and have a set of FixedArray&lt;T&gt; structs. For example, FixedArray128&lt;T&gt; which has a maximum of 128 items and stores each item as a field like Item1, Item2, etc. But it implements IList&lt;T&gt; so you don't really need to care about that. It acts just like a list except it has a maximum size. With ref return, this ends up using stack memory directly.
Having such helpers implement `IList&lt;T&gt;` is fine so long as don't actually call any of the methods through that interface (rather than through the struct), otherwise you will be boxing your object and defeating the whole purpose of it. Likewise, I don't think there's any way to actually do this without boxing: &gt; You can even create a helper method that will give you the smallest FixedArray&lt;T&gt; that will fit a given Length.
[removed]
Right, but this is a workaround for what should be available directly in the language. It seems surprising that C# 7.2 doesn't implement a way to embed safe fixed arrays in a struct. edit: I also don't think that ref structs can implement interfaces.
You're right, I forgot I was using a boxing pool for that. You can also return IEnumerable&lt;T&gt; which has special optimizations to avoid boxing... I think. 
I have not tried this and I'm not at a computer, but doesn't C# 7 let you define a default initializer for a struct? Can you stackalloc the array in the initializer?
Makes me wonder if that "if x is y" statement in the public Bulk Add method is the best approach. Every time you add a new database implementation, you're going to have to add another if statement. Again, I haven't looked at all of the code. How hard would it be to abstract that behavior into an interface? Or add an abstract method to the Entity Info class? Just a thought, I may be off base here.
&gt; You can also return IEnumerable&lt;T&gt; which has special optimizations to avoid boxing... I think. No, it doesn't. You might be thinking of the technique you can use to avoid allocations from the GetEnumerator method by returning a struct.
It gives you the option to use the interface, but it's not required. For your situation, just don't implement the interface if you don't want the option.
Here is the thing about learning languages. It becomes easier with each one. Java / c# are good ones to begin with. I'd say learn a O O language (c#, java), scripting (Python), and functional (Scala, F#). In short don't stress about learning languages 
Yes I am. I was thinking of using fixed arrays in foreach loops.
You can also use the generics+interfaces+structs pattern to avoid the boxing. It does result in more runtime code jitting though. And it can be a pain to use because type arguments aren’t recursively deduced. example: ``` static void Sort&lt;T, TList, TComparer&gt;(TList list, TComparer comparer) where TList : IList&lt;T&gt;, TComparer : IComparer&lt;T&gt; { ... } ``` If TList and TComparer are structs then you get a separate instantiation of the method and the calls into the interfaces can be inlined. The sort example is not a contrived one — I use this trick for a 20% gain in performance.
Ok, but if I have a giant list of fields for variables, it prevents blitting and requires a giant case statement to access an individual element. It is wildly inefficient compared to stack allocated arrays contained in a Span&lt;T&gt;.
Not disputing that -- only that you can do the thing that i quoted above.
Parameterless constructors for structs were considered but ultimately scrapped, and stack memory allocated within the constructor is invalid outside of the constructor.
Damn. Well, I tried. :P
Hi All, I have some more information. Hope this helps. &amp;nbsp; So I have 9 test cases, the scenario is the same, but each test case is based on a RoleType so will have a different end result. &amp;nbsp; Strange thing is, I have run these 9 test cases and they all fail, then sometimes they all pass, then I get a mixture of pass and fail. When watching some of the UI tests run, it doesn't always complete the whole test. &amp;nbsp; public BasePage(TObjectRepository repository) **DEBUG BREAKS HERE** { browser = Browser; **WHEN HOVERING BROWSER I GET AN APPLICATION CACHE ERROR** ObjectRepository = repository; string browserType = Browser.GetType().ToString(); tmaBaseUrl = Config.AppConfigHandler.GetValue("TMA"); tmaAccountMgrPage = tmaBaseUrl + "AccountManager"; tmaAddingToWorkflowPage = tmaBaseUrl + "AddingToWorkflow"; tmaCompletionPage = tmaBaseUrl + "Completion"; ValidationUrl = tmaBaseUrl + "Validation"; NtrsBaseUrl = Config.AppConfigHandler.GetValue("NTRS"); } SO I'M STEPPING IN TO LINES UNTIL I GET TO THE CODE BELOW WHICH SHOWS AN ERROR** public ProcessingPage() : base(new ProcessingPageObjectRepository()) { Browser.Navigate().GoToUrl(tmaBaseUrl + "Processing"); } Error is below OpenQA.Selenium.WebDriverTimeoutException: 'timeout (Session info: chrome=64.0.3282.167) (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.15063 x86_64)' Stepped in to another break below @UISmoke @UIFull Scenario Outline: UI Test Access to Processing Page Given I navigate to "&lt;page&gt;" page using "&lt;role&gt;" Then I should be able to access "&lt;page&gt;" page based on "&lt;role&gt;" **BEBUG BREAKS HERE** OpenQA.Selenium.NoSuchElementException: 'no such element: Unable to locate element: {"method":"css selector","selector":"h2"} (Session info: chrome=64.0.3282.167) (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 10.0.15063 x86_64)'
No performance issues? Firebaseapp seems to suffer from slow logins and slow emailing issues all the time.
The issue I am seeing with identiyserver.io is adding in Google / MSN / Facebook and Twitter is a big job and in some cases like Twitter limited now... I gotta fill out sign ups and now it looks like Twitter is not even taking applications and Google has a wait list...... 
Oh I didn't mean that as a dispute, just pointing out a cool trick. You gotta be super careful about boxing. I like that C# gives you a lot of tools for improving performance, even if they're weird and esoteric. ....... unlike Java, which is like the inbred child of a dumpster fire and a lobotomy.
It can't - anything you stackalloc in the struct's constructor will become invalid once the constructor returns. But you can stackalloc in the scope where you create the struct, and pass the span in: using System; ref struct Container { public Container(Span&lt;int&gt; buffer) { Buffer = buffer; for (int i = 0; i &lt; buffer.Length; i++) buffer[i] = i * 2; } public readonly Span&lt;int&gt; Buffer; } class Program { static void Main(string[] args) { Span&lt;int&gt; mySpan = stackalloc int[10]; var fixedArray = new Container(mySpan); Console.WriteLine(fixedArray.Buffer[7]); // prints 14 } } 
It does. You need to have the right version of System.Memory installed, though: https://github.com/dotnet/roslyn/issues/22817 I was only able to get 4.5.0 to install by using the "dotnet" CLI. Visual Studio and its Package Manager Console insist 4.4.0 is the latest prerelease.
Seems it can't. Try adding this line to [my example below](https://www.reddit.com/r/csharp/comments/7zysxe/question_about_spant_stackalloc_and_structs/dus0n0j/): Span&lt;Container&gt; foo = stackalloc Container[10]; &gt;Error CS0208: Cannot take the address of, get the size of, or declare a pointer to a managed type ('Container') &gt; &gt;Error CS0306: The type 'Container' may not be used as a type argument
Complete determinism? Seems like what you really need is Rust
What does BulkAdd do that doesn't happen normally with EF? Also is this production-ready? BTW good job.
&gt; If you limit yourself to only the stack, C# is a super awkward and possibly not even Turing complete language. Allocations on the heap in other languages are not deterministic either. For most situations where you need sub millisecond loop iterations, there isn't really much difference between languages that can allocate on the stack since active memory management is out the window anyway. C# can be compiled to C++, so properly written software will be deterministic.
visual studio code is indeed a great software!
I understand that, but stack-only C++ or stack only rust are going to *much* more ergonomic than stack only C#, because they're designed at least partly with that in mind, whereas that's just not something C# is designed to do.
Hmm, I suppose that is possible, but I think most of those issues have been fixed with C# 7.2. C and C++ need to die because it has become clear programmers are not able to produce memory safe code, no matter how experienced they are. Rust is certainly an interesting project, but I don't think it will be able to overtake C# any time soon. Garbage collection gets a bad rap, but in truth it is necessary for modern applications. Otherwise you just wind up with lots of reference counted variables which isn't great either. If C# can be improved to handle both the higher level applications and tight performance loops, it will be a very powerful tool. They seem to be making good progress in this direction. (Rust does have borrow semantics, but they seem to be having trouble scaling the compiler for larger programs)
Thanks for that comment - I am looking at this guy here; https://oauth2.thephpleague.com I guess I am a bit confused as to how I take that and tie it into Google, MSN, Twitter, Facebook etc... to do something like so -&gt; https://imgur.com/a/lSLMb
Ug, Java. Because unsigned types and operator overloading is "too difficult" for people to understand. *bangs head against desk dealing with 16 bit unsigned data*
I am less familiar with how this is done, however I think having buttons like that is fairly standard. I used Orchard CMS for my ASP.NET project so I am less familiar with the dirty details on how the authentication works.
.NET Framework has been shipped as standard with Windows machines since Windows XP service packs. It's worth noting that, unlike Java, .NET Framework VMs only work with certain versions. The VMs it uses are (only major.minor versions listed): * 1.0 * 1.1 * 2.0–3.5 * 4.0–4.7 * .NET Core 1.0–1.1 * .NET Core 2.0–2.1? (2.1 hasn't been released yet) The various versions that ship with Windows are: * Windows 7 / Server 2008 R2 ships with the 1.1 and 2.0 VMs and the class libraries for 1.1 and 2.0–3.5 SP1 * Windows 8 / Server 2012 ships with the 4.0 VMs and the class libraries 4.0–4.5. The 2.0 VM and 2.0–3.5 SP1 class libraries can be installed from the control panel. * Windows 8.1 / Server 2012 R2 added the 4.5.1 class libraries. * Windows 10 ships with the 4.0 VM and the class libraries for 4.0–4.6. The 2.0 VM and 2.0–3.5 SP1 class libraries can be installed from the control panel. * The November 2015 update added the 4.6.1 class libraries * The Anniversary Update added the 4.6.2 class libraries * The Creators Update added the 4.7 class libraries 
I am used to Razor so that is what i am going for now. https://github.com/toddams/RazorLight
Another vote for VS Code. It’s very lightweight and does the important stuff. 
**Warning!** Everyone should be aware that this is using the GPL license! As soon as you use this package you **must** make your code open source.
The stack is still finite in size, it's not really designed as a place for large chunks of data it's supposed to represent the current operating environment for the thread. 
In almost all cases garbage collection will be superior to ARC or other reference counting methods. They tend to be faster, and there are other benefits like heap compaction. A lot of the drawbacks to GC have been significantly improved over the last ten years. It was really surprising that Apple didn't go with garbage collection for Swift. I think this is more of a kludge due to the way Cocoa and other API interfaces work. (You can use weak references in garbage collected languages as well, and this can really help increase the efficiency of collection.) (My questions about stack allocations are only for very specific circumstances, in most situations garbage collection is adequate.)
How the stack is used really depends on the application, and it can be increased easily if necessary. You need to learn more about memory management if you don't see why stack allocation is important.
I have a program which automatically creates 28,000 class files, with inheritance, attributes, enums and all of that from a service now schema. Under the hood, just a file stream writer. Nothing fancy 
Agile Principles, Patterns, and Practices in C# If you want to learn more about OOP and agile principles in general.
Does your project have a dependency on `System.Data.SQLite`? If not, you can add it as a [NuGet dependency](https://www.nuget.org/packages/System.Data.SQLite).
I would start reading this [series](http://enterprisecraftsmanship.com/2015/06/29/test-induced-design-damage-or-why-tdd-is-so-painful/). Check Pluralsight as well. This [guide](https://www.typemock.com/unit-test-patterns-for-net) on some unit-test patterns in C# might help as well.
**ReleaseMutex?!** No, I won't help you further, you are **very** incompetent.
- Try to avoid using variable names like `i`, `j`, `k` and `n` - Add comments to your code to explain what each bit does. `if (k&gt;j) { minValue = j; }` - why would that help with the solution? I'm not saying it does or it doesn't, just that I have no idea whether it does or not because you haven't explained why you think it will help. - Forget C# for a moment, and just write, in plain English, the steps which you want the computer to take when a number is entered. Then try to take those steps that you've written in English, and turn them into a C# program As I say, it's very hard to figure out what's wrong with your code because the variable names and lack of comments make it difficult to follow. But it looks like you're comparing each number to the previous number that was entered. That doesn't seem right. You need to compare each number to the *closest to 0* out of all the numbers you've entered so far. That would be obvious when you write the steps required in English. Because of that, I'd expect to see a variable named something like `closestToZeroSoFar` somewhere in your code.
- Try to avoid using variable names like `i`, `j`, `k` and `n` - Add comments to your code to explain what each bit does. `if (k&gt;j) { minValue = j; }` - why would that help with the solution? I'm not saying it does or it doesn't, just that I have no idea whether it does or not because you haven't explained why you think it will help. - Forget C# for a moment, and just write, in plain English, the steps which you want the computer to take when a number is entered. Then try to take those steps that you've written in English, and turn them into a C# program As I say, it's very hard to figure out what's wrong with your code because the variable names and lack of comments make it difficult to follow. But it looks like you're comparing each number to the previous number that was entered. That doesn't seem right. You need to compare each number to the *closest to 0* out of all the numbers you've entered so far. That would suggest that, at some point, you should be comparing something to `minValue` - I don't see anything being compared to `minValue` in your code.
I used the GPL license because I would like to see how the library is being used. If enough users would like a chance to it, just let me know and I would be happy to oblige. 
Using a for loop is not necessary here, you could just use linq over your temp array. Transform everything to positive numbers and order them ascending. The first temp in this list is closest to 0. Even with a for loop you could do the same easily by doing these steps manually and put the lowest temp into a specific variable outside the scope of the for loop. 
You are using an adjacent compare. So at the end of running the loop, you are updating your min value to the smaller of the last 2 numbers in the list, not the smartest number in the list. You should be comparing the current loop array value : *temp[i]* against the current min value *minValue*. Initialize minValue to the first array value before entering the loop. You may also want to look at some routines in System.Math and use the functions Abs and Min. 
Hints: * You don't need a temp array - just a variable to hold the minimum value. * Use Math.Abs(). * Your for loop is off by 1. Either use `i = 0; i &lt; n;` or `i = 1; i &lt;= n;`
Take a look at these Stackoverflow posts : [https://stackoverflow.com/questions/29129796/no-entity-framework-provider-found-for-ef-6-and-sqlite-1-0-96-0?noredirect=1&amp;lq=1](https://stackoverflow.com/questions/29129796/no-entity-framework-provider-found-for-ef-6-and-sqlite-1-0-96-0?noredirect=1&amp;lq=1) And [https://stackoverflow.com/questions/20460357/problems-using-entity-framework-6-and-sqlite?rq=1](https://stackoverflow.com/questions/20460357/problems-using-entity-framework-6-and-sqlite?rq=1) One solution involves tweaking your app.config
You'd asked where you could review code. I like to look at the list of popular open source projects and dig until I find something I'd not seen before, then I try to understand it. The biggest downside is that you may not know what you're looking at, so you might not be able to ask questions immediately.
Thanks. :)
There is a lot of good things to learn out there in terms of technologies, practices and pattern, architecture and so on. Personaly I think the following topics helped me to become a better programmer. - SOLID - Queue / Message based Communication - Learn about IOC containers - Domain Driven Design - Document databases - Learning another language (I know that this is not .net specific but it helps you improve your learning skills, and asses different technology stacks for different peojects, ergo become a better programmer) - There is a ocean of good tutorials, check out Pluralsight
To add to /u/LondonPilot’s comment, instead of using variable names like i, j and k, use names that are descriptive to what the variable is doing. “nextNumberToCompare” for example. By most conventions, i, j, k are good to use for loop indices, but aren’t to be used by anything that is “important”.
Domain driven design by Vaughn vernon
C# in depth is fantastic as you really learn the inner workings (and history) of a lot of commonly used constructs in c#. 
You've already learned the language features, they're the same. Unity has been using an older version of C# so you've got some newer features to catch up on, but don't worry about that too much, just read up. If you went to work for a pharmaceutical company for example, they might have existing code which won't use the new features yet. These things tend to filter down slowly in the wild. After that, using C# in a different context has the same challenges as using it in Unity. Just swap Unity for which ever framework or domain you choose. If you have a slightly more specific example of what you want to be doing that might help narrow down some recommendations.
Thanks very much for the information; I would love to start by making GUIs, as I've learned python and never got around to using tkinter to make a GUI; thanks once again!
Loads of options depending on where you want to run it: * Winforms - oldest technology, still has uses, probably worth avoiding for now * WPF - Newer technology for Windows only desktop applications based on XAML * UWP - Like WPF for Windows Store applications * Xamarin - Cross platform mobile apps for iPhone and Android. * ASP.NET MVC or ASP.NET Core - Web applications. * Avalonia - open source cross platform XAML There are a few others too. All the above except for Avalonia are included with Visual Studio, so the first thing to do would be to make sure you've downloaded and installed Visual Studio 2017 - take a look at [Microsoft Developer Essentials](https://www.visualstudio.com/dev-essentials/) for everything you need. 
https://www.youtube.com/watch?v=031vKBPk5eA
I've been reading Pro C#7 with .Net and .Net Core by Troelsen and Japikse. It's been a really good read. It starts with the basics and then builds from there. It includes chapters on reflection, CIL, multithread, parallel and async programming, ASP.NET, EF, WPF...way too much to list here. It's definitely worth checking out. [Link](https://www.apress.com/us/book/9781484230176) to the Apress book site. 
SQLite isn't supported very well in EF 6.2. You can get it working with a lot of persistence, but I would try a different path. You should try EFCore (aka EF7), which has built in SQLite support if you get the right packages. This will probably help you: https://docs.microsoft.com/en-us/ef/core/get-started/netcore/new-db-sqlite You could also skip EF all together and try out Linq2db, which may be simpler to get started, but their linq api is a bit different from EF, and would take some getting used to. https://github.com/linq2db/examples
http://www.ducksters.com/kidsmath/binary_numbers_basics.php
Ah another classic shitty article with poor quality, promoting horrid code `namespace CSHARPP` I mean really? Just stop. I really wish this sub was more popular, this kind of spam would be filtered out.
I forgot about F#. I actually will. 
Just generate five random unsigned bytes? C# has a built-in converter for integers and strings, so you can just use that (maybe pad it to 8 digits if it's required, you can call .PadLeft(8, 0) on the resulting string): [Convert.ToString(byte, int32)](https://msdn.microsoft.com/en-us/library/8s62fh68(v=vs.110\).aspx)
Show competence in the language. That's the lowest bar to meet. Your success as a developer will be gauged by how well you learn the business and execute on a software development process (how successfully you can deliver). Working code is the measure of success. By working, we mean fulfilling the client's needs and requests. For a good developer, code quality is very important (needed to deliver), but for a customer it is not. There are a lot of developers who will argue with me on those last thoughts. They will be correct in their context, but overall what I'm typing is the industry. In summary, don't stop at just learning the language.
Most .NET developers use MIT or Apache 2 as their license on open source projects. 
No one calls it Visual C# anymore
Depends on what you're using Azure for. It can run all your back end services which are consumed by either a full desktop client or a web application potentially also hosted in Azure. If you're going full desktop then WPF, web app then ASP.NET Core, mobile, Xamarin. That's purely sticking within the platforms which embrace C#. You have way more options if you don't use C# everywhere. As I said though, it depends what your application is going to do.
We have a lot of legacy winform and some newer wpf that runs on citrix, hosted on local vms. Sounds like we could just flip to using azure hosted vms and not have to change anything?
Different versions of .NET framework?
I don’t think getting someone to rework their problems as Linq solutions is appropriate for a beginner. Do it without Linq first, learn Linq later.
I disagree regarding variable names, i is standard for loop indices.
Bitwise not (~) the temperatures against the number that in binary has only the least significant bit being 1 (EG, 128 on an unsigned byte, IIRC). Compare the notted temperatures, pick the lesser one (if (temp1 &lt; temp2) else if (temp1 &gt; temp2)), and output the unnotted temperature. (You might say that I’m saying to not use the notted version, but I’m not not saying to use the notted one, just not to use it when you should not.) If the notted forms are equal, take whichever is positive. If both are positive, output a special message for that.
That is a great query. While everyone will give you a different answer, I will try to help you with my perspective, coming from decades of MS software development since way before there was a .net. I no longer work in an office and work for myself as an independent contractor. I do not have a boss nor do I have employees or coworkers however, in times past, those have all been different. In a typical working environment in an office setting, you will find yourself challenged with solving business problems with software, database and networking technologies, of which you should familiarize yourself with so that you are able to understand the hurdles necessary to create a solution or be part of a team where you create only a part of the solution. A given problem may present itself to you which requires you to understand the inner workings of network security or routing, ports, packet handling, protocols and such. While it may not be required that you have network engineering expertise, a high to medium level of knowledge will get you far. This is true for the other technologies, of which database engineering and dba-level skills will greatly supplement your ability to create very efficient and durable code in an amount of time allowed to develop an adequate solution to any problem. Then you should be very familiar with the main tools in your toolbox: software engineering techniques. A fundamental understanding of client/server and three-tiered architecture is required of any software engineer. A prerequisite to the fundamentals is a comprehension of software architectural techniques such as the best ways to write code, architecture and tricks such as recursion, encapsulation, managing assemblies and such. You should be VERY (very) familiar with the language of choice as this will lead to a greater understanding of other languages with less effort than usually required (good books to read: 'Programming in C#' isbn: 978-0-7356-7682-4 and 'Clean Architecture' isbn-13: 978-0-13-449416-6). Minimally, familiarize yourself with the following technologies: MVC, client/server, AJAX, PWA (Progressive Web Apps), javascript, responsive design, css, html, json/xml, basic database design (sql server), security, encryption... Know how to find the answers to problems (stackoverflow.com is one of the best sites for direct answers with examples) - and know how answers work for the problem you are trying to solve. Be smart about what you do, work smarter, not harder. Know when to take breaks, know when to push through your own stubborn mindset to find the answer you seek. Learn how to meditate and how your brain works best. Learn when to follow the leader and the standard rules and know when to break them. Learn how to write proper documentation. You will find there is a balance between fully-featured software and deep levels of documentation. Typically, it is one or the other but never both unless you have assistance. On a daily basis, I am challenged with the continual effort to develop solutions for those who hire me contractually which is not much different than those who would normally hire me on a daily basis (office labor vs contract labor). The big difference is the freedom and pay. In an office setting, you may be asked to attend daily scrum meetings to discuss progress, hurdles or roadblocks and next steps to completion of the task at hand. Working from home, whether independently or as part of a team would be no different - the responsibility still exists. Always be willing to help others and do not shy away from expressing gratitude for help. Keep any attitude in check because being smart and writing code is very intimidating to most people and they will burn you if given the chance because of your natural advantage. Dedicate yourself to the success of others and you will go far. Be honest, never lie in this industry because it is unforgiving and it is difficult to remove any stains of imperfection. DO NOT HACK anything. Do not be tempted to write code that does harm although you may be required to do so as part of necessary experimentation for intrusion testing or security purposes for learning. If you do not know how to do certain things, with experience, it is sometimes difficult to thwart those things in question. Above all, be smart, humble and grateful and you will go far, my dude. Happy coding! 
That's what it seems like. I've been working on streamlining some of the calls and refactoring some things here and there. I just published a v2 of the package and the new license (MIT) is reflected in that version.
Reading this as a newish ASP.NET/C# Developer, all of this was incredible advice. 
Thank you very much :) There is much more info if needed, for it is not without a great amount of help that I am where I am today and I am happy to assist and give back.
One thing to note is that a lot of the Unity API doesn't follow C# standards. It isn't a bad engine in any ways, don't get me wrong, but it is worth familiarizing yourself with other APIs to get a good idea how the "outside world" does things.
Thank you very much. Is the book that you advised is not too old? 2013 year
thx
Now I want to write a program that listens for code over UDP, compiles and runs whatever it receives, as domain admin. Just for fun :)
I'm going to give the Linq-y version of this as well. I mostly write JavaScript nowadays, but one of the things I appreciate about the .Net world is the IEnumerable interface + Lambda expressions as a gateway drug to functional programming. Let me write out my approach: using System; using System.Linq; using System.IO; using System.Text; using System.Collections; using System.Collections.Generic; class Solution { static void Main(string[] args) { int n = int.Parse(Console.ReadLine()); // the number of temperatures to analyse if(n == 0){ Console.WriteLine(0); return; } string[] inputs = Console.ReadLine().Split(' '); IEnumerable&lt;int&gt; temps = inputs.Select(input =&gt; int.Parse(input)); Func&lt;int, int, int&gt; reducer = (runningVal, currentVal) =&gt; { int runningValAbs = Math.Abs(runningVal), currentValAbs = Math.Abs(currentVal); return runningValAbs &lt; currentValAbs ? runningVal : currentValAbs &lt; runningValAbs ? currentVal : Math.Max(runningVal, currentVal); }; int closestTemp = temps.Aggregate(reducer); Console.WriteLine(closestTemp); } } I took out some of their boilerplate so that you could see the approach. The first step is that, if there are no temperatures, I just return 0. This is the only thing I'll use `n` for. After that, I get the inputs as a string of space-separated digits. I split on the space character, which gives me an array of strings, and I convert each of those strings into an integer. I now have an `IEnumerable` of integers. The `IEnumerable` interface means a couple of things. The first is that I have a data structure that acts as a collection of values I can go through one at a time. The second is that I have a metric buttload of methods available, including filtering with `Where`, transforming this into an `IEnumerable` of a different type with `Select`, and boiling this collection down to a single value using `Aggregate`. `Aggregate` goes by a lot of different names in different frameworks, including `reduce` in JavaScript and `foldl` in Haskell. There's actually a very popular framework for state management in JavaScript that's based on the idea of reducers, called Redux. The idea is that `Aggregate` will go through the entire collection, keeping a running accumulator value, and updating it based on a function that takes in the running value and current value, and spits out the new running value. A really simple example is summing up. You feed in 0 as the first running total, then pass in an accumulator function like this: `(accumulator, current) =&gt; accumulator + current`. You can feed in an initial value, but if you don't, it will take the first value of the `IEnumerable` and start iterating with the second. In my example, I made an accumulator function called `reducer` that takes in the running best, and the current val, and then does the calculation. I used a ternary expression, but the logic is this: "If the absolute value of the running best is less than the absolute value of the current item, then return the running best. If the absolute value of the current item is less then the absolute value of the running best, return the current item. If their absolute values are the same, return the greater of the two. e.g., if the numbers are 5, and -5, return 5." I then run `Aggregate` on temps with that reducer, and write that to the console. If we have a list of numbers like `[3, -2, -5, 2]`, then aggregate will have the following steps: * `reducer(3, -2)` -&gt;` -2` * `reducer(-2, -5)` -&gt; `-2` * `reducer(-2, 2)` -&gt; `2` And that means the final result is `2`. I hope you've found the approach interesting. Let me know if you have any questions!
Actually, i believe the book IS a 2013 version but still a good read to get to know the C# language. If there is a newer version that relates to new changes in C# (2017: v7.2 according to wikipedia), I would certainly retract my suggestion and replace it with a more recent version... It is actually an exam prep book so it may only be written/updated in parallel with the current exams. Again, still a good read and you can review the new features in C# to fill in the blanks - usually there are new features in the language plus tons of upgrades to existing features eg: object vs var vs dynamic... stuff like that. The 'Clean Architecture' book is timeless advice, suggested to me recently by my very own guru (whose name is spoken only in hushed reverence with bowed head - jk). Also, i forgot to mention that finding a good MS book on LINQ will take you far and save you tons of time coding and frustration. The side-technologies are really key to becoming a well-rounded coder like LINQ, db access, architectural techniques and all that jazz. Speaking of jazz, coding is quite like being a musician both mentally and in practice. If you're a hard-core musician or grew up addicted to building weird stuff with LEGOS, your brain is wired for coding. Not many brains are wired like that so take advantage of it, don't abuse it and treat it right. Sharing is caring too! Why? Because you will never ever be beat at your own invention - no one can out do the inventor - so when you learn something, give it away freely in due time - you will know when. If you're just starting with C#, the following link may be of interest to get familiar with the basics as the previously mentioned Exam Ref book is a deep-dive into the language, presuming you understand the verbiage used (https://www.microsoftpressstore.com/store/begin-to-code-with-c-sharp-9781509301157). I tend to lean towards MS-written books because well, Visual Studio is the top of the line when it comes to IDE's and MS has a financial interest in making products work for developers although nothing is ever 'perfect'. That doesn't mean i don't have a few 'For Dummies' books around and various jewels by one-hit authors - heck, one of my favorite books was a non-MS book on old school WIN API coding. Thick as a phone book and the info was hard to come by when it was published. Thanks for the feedback!
https://docs.microsoft.com/en-us/dotnet/api/system.io.binarywriter
What types are `strCustomerID` and `CustomerID`? If they're not the same type, that would be a problem. If not, the elaborate exactly what you mean by "not working" so we can do more than guess.
well, the strCustomerID remains null. Nothing is being passed to it. strCustomerID is a string variable, and CustomerID is also a string.
BitConverter is easier to work with in my book.
the world is your oyster :D
Not fully solved. You aren't taking endianness into account. Well depending on what you are trying to achieve.
Thanks everyone! I got it figured out.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/codedead] [Been working on a 'memory optimizer'](https://www.reddit.com/r/CodeDead/comments/80850h/been_working_on_a_memory_optimizer/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Bad bot
Not that it really matters, but I felt like lamba'ing this. Should work equally (Jotting out from my phone so I apologize for typos) var qCustomer = dcCustomers.Customers.FirstOrDefault(x=&gt;x.CustomerName.Equals(strCustomer)); if(qCustomer != null){ strCustomerID = qCustomer.CustomerID; }
If you want to condense it further, use conditional access: strCustomerID = dcCustomers.Customers .FirstOrDefault(x =&gt; x.CustomerName == strCustomer)?.CustomerID;
As fsr as I know, LINQ and IEnumerable are discouraged in Unity in favor of simple for loops. I would highly recommend you familiarize yourself with those, because they are on the top of list of C#'s strengths.
Most GUI stuff these days is going to be on web, which would require HTML, CSS, and JavaScript understanding. Not saying it all is, but knowledge in that is going to help you find a job tremendously. 
Yeah, this is correct. Unity's garbage collector is no good and the iterator objects used when enumerating allocate memory that must be freed.
Sorta a side note, I have a degree in game programming and when I was job hunting here in AZ, where there is a lot of aerospace companies, for a typical C# software job I saw that some of the aerospace places were asking specifically for Unity experience. I believe they wanted to make GUIs using it or maybe help with simulators. That said, they are pretty work heavy places with a lot of crunch and over time that like older languages like ADA and COBOL. I know a couple people personally who work in the field at two different places.
No. C# is for Faggots.
As you've already got some syntax experience behind you, don't fuck around learning from the half arsed content providers, smashing this out will get you ready for the MCSD certification exam. https://www.pluralsight.com/blog/software-development/learning-path-c-microsoft-exam-70-483 It's about 60 hours of focused video training specifically curated for the cert.
Yep, to clarify, Visual Studio is the tool or IDE you use to program using the C# language. There are other IDE's you can use for programming with the C# language. 
These are conflicting statements.
I just finished their C# 6 from Scratch course and second this. I'm fortunate enough that my work provides access to Pluralsight and there are just so many things you can learn on this site. It won't make you a pro but it definitely helps to build some solid groundwork.
I've never used this, but according to the docs BigInteger supports multiplication. https://msdn.microsoft.com/en-us/library/system.numerics.biginteger(v=vs.110).aspx 
I would highly recommend this book, it is a reference I've gone back to again and again. It is oriented to framework design, meaning when you are writing consumable libraries, but 95% of the guidelines apply to any code you write, because it's all being consumed in one way or another. It has alot of content from developers of the .NET Framework itself. https://www.barnesandnoble.com/p/framework-design-guidelines-krzysztof-cwalina/1119347863/2675325908058?st=PLA&amp;sid=BNB_DRS_Core+Catch-All,+Low_00000000&amp;2sid=Google_&amp;sourceId=PLGoP79700&amp;gclid=Cj0KCQiA2snUBRDfARIsAIGfpqHmTUG_o8NQr6-HS7SPXEA7ASSYRLbW73XnZfBGn9YL_hTfkEzMhiUaAjZMEALw_wcB 
That makes a ton of sense. One more question for you if you don't mind. I have read that as a C# best practice, you should have 1 class per file, is this a typical practice that you follow?
Yeah. But it's not as hard to stay abreast SQL standards compared to say ever changing frameworks. I mean, there's an initial learning curve but after that you can count on the relational model staying the same as it has been since Codd envisioned it decades ago.
Generally, yes. On occasion it makes sense to have two or three classes in the same file if they are strongly related to each other. With modern development environments, there's no good reason to have a bunch of different classes in a single file. The tool gives you ways to go to the definition of a class using a simple command and files are opened in tabbed windows. In the old days when you had primitive text editors, it was easier to have multiple classes in a single file but that isn't the case anymore.
It does against other BigIntegers, but not against other types and since you can't initialize a BigInteger from a decimal or float it means you can't do arithmetic against them...
Thank you so much for this! I lurk here often and am always amazed by the people here. You can tell someone really knows what they are talking about when they are able to break it down the way you just did! Thanks again! 
Sounds like you don’t want integers then. Are you working with .net? May want to look elsewhere if you need to start with real numbers
Will do, I played with real numbers a bit, will have to revisit that.
Azure pricing isn't just prohibitive, it's completely fucked, and they are so deceptive with their cost estimates. Want a pre-built SQL VM instance, ok this little light instance is $12/month, perfect for our test environment, oh wait, now our cost projection has increased by $60? Oh, they added a TB of storage... not included in the price... which can't be shrunk... and we've already migrated our DB? Great... Time to go though the hoops of moving the data to the other disk, unmounting it, detatching it from the VM, deleting it and cleaning up the resources, then restoring the DBs from file. And even when you get an environment with appropriate resourcing it's still an order of magnitude more expensive than the alternatives, we're thinking of migrating everything to .NET core 2 and running Linux on AWS, it would pay for it's self in less than a year in terms of the savings, probably about 15-20% of the current service costs.
Angle brackets are for types/interfaces Round brackets are for arguments/method construction
Have you been programming in Unity? As they have a lot of methods that can take either a type generic or string based type parameter. 99% of the time &lt;Type&gt; will be faster than utilizing string data to do a type lookup on the method. So if that option is available to you, use it, or if you can define your method to use generics, use it.
Looking good :) Just curious, did you think about using MVVM Pattern and all related other patterns related to mvvm (commands for example). This will help separate pure presentation logic from the business logic of the application. Other remark, would be nice if the Classes folder was renamed to something like ´Business’ for example or be split by business concerns with meaningful names 
Agreed. Conventionally speaking they should be renamed, like you said. Implementing the MVVM pattern would probably save me a lot of code so it will most likely be implemented sooner rather than later ;). Thank you for the feedback!
Use () to invoke a method, use &lt;&gt; to give type to a generic. 
() refers to parameters, &lt;&gt; refers to type 
When speaking English, when should I use a vowel or just a consonant? Thanks! /s As others have said, read up on generics.
Since you are changing the name of the constructor, compiler is treating it as method and asking you to give return type. Hope it makes sense for you.
that's what I've been seeing as I am trying to learn Unity coming from a C# software engineer job point of view. It's odd to me not seeing explicit protection/accesability keywords and I don't understand why they don't use interfaces for the API methods. You have to just 'know' you need a method OnRender(foo) instead of implementing some IHandleRendering interface. Same with the inspector bindings, they should just use properties instead of public variables, and also lots of tutorials/examples don't follow standard naming either.
MS has a tool that will do this too but it isn't nearly as easy to use as yours seems to be. Good job! On a separate note I wish someone would create a program that shuts down all nonessential services to maximize media consumption battery life!
You could create a BigInteger from the mantissa of your floating point, then re-apply the exponent to the result.
If you rename SomeClass() into something different than the class name, the compiler sees it as a method not as a constructor. It complains that it needs a return type because it's either returning a type or not (you then need to mark it as void)
I've implemented ciphers from scratch in C#/.NET a few times for funsies. This is a problem that can be solved with math. To maintain decimal precision, try multiplying the inputs by 10^x (where x is the amount of decimals in your real number) before casting them to a bigint, then dividing the result by 10^x and casting them back to a real number before returning. Should work well enough. If that won't do the trick for you, take another look at your algorithm. I can't figure out why exactly you'd need to be performing arithmetic on real numbers for a blockchain application. I've rarely seen it done, mostly because of the complexity of the situation that you're describing. You might need to rethink your design.
Look through the textbox methods, there should be something like yourtextbox.keydown that you can hook.
You can store a snapshot of the basket to reduce round trips, but the actual basket should be saved on the server.
That's actually a really great idea for another project. I think, thanks to you, I'll be able to keep myself busy for the next couple of weeks/months ;) Thank you for the suggestion!
Consider this method signature: void Save&lt;T&gt;(T entity) where T : class, new() You could use the method like: var entity = new Customer(); Save(entity); Or var entity = new Product(); Save(entity);
Paging /u/scarybee What .net library did you end up going with?
Pm me and I'll help you test!
9 times out of 10 when shopping on Amazon, I start off on my phone, adding bits here and there and then on laptop during lunch will order the bits. I couldn't do that if you're storing basket in cookies. By all means use it to store information for faster loading but the main part has to be on a database. 
we are using clustered mongodb(1 write 2 read node) and we respond ~ &gt;= 1000 request per second. i dont believe session does not help us.
can you give a some tips about your concerns?
I guess , I misunderstood. I use cookie for primitive properties.on the other hand, when you add something to your basket I will write the database as asynchronously.But in other cases I will use cookies.
In my experience, the data in an abandoned shopping cart is valuable. Marketing departments love this data. If they find that a particular item is more likely to be in an abandoned cart, they may adjust the price, etc... They may want to market to that specific individual at some point too. Say you added a widget to your cart but abandoned it because you got busy at work, etc... A reminder email, or a targeted promotion may be the key to converting a sale. None of that is possible if you don't store your cart data on a server somewhere. When writing software, one of the keys to success in my career (and most other successful developers, I'm assuming), is thinking ahead of what the business will eventually want, even if it's not in the initial requirements. 
This is just my opinion: 1. It can get messy, back and forth client/server code. 2. Relying on the power of your server is much easier, economical and affordable today than even last year. 3. Your code is encapsulated in a consistent manner, likely one language, server side. 4. You're free from worrying about the client's ability to execute your code eg: what Javascript version they have, browser version compatibility, or various other hardware incompatibilities with your code's requirements. 5. There can be security considerations depending on what you are trying to accomplish. Again, just my opinion but any of those points can be mitigated with proper architectural and coding techniques. It's not to say 'don't do client side coding' by any means. Client side coding is a very powerful tool to have in your kit when done properly but it takes a little practice and some brain power to do it right without being sloppy or failing in the area of security. In the given perspective of a shopping cart, it is mostly just an academic exercise to accomplish and could be done either clent or server side. 
First off, what OS are you running? AFAIK, MonoDevelop is Linux only as Mac went Visual Studio for Mac and there is Xamarin Studio for Windows. Second, what do you mean that Visual Studio won't let you run your code? Are there errors?
Try Lynda.com It’s the best for online learning
And fully free?
I need pure C# not XAML but thanks 
There are tutorials for all MS technologies, did you even take a look at it?
1.) If the values change or are deleted, you have no control. 2.) You have no opportunity to follow up with the user to try and sell the item at a later time. 3.) You have no way to gauge interest or abandonment. 
Lynda is free with many County Library memberships, it's probably worthwhile to look into that. I also think MVA is a killer choice, and I don't think you looked at the content closely enough.
C# in depth High performance .Net code CLR via C# Windows Internals Windows Memory Dump Analysis 
I'll look it over again 
Briefly haha
And this: https://github.com/dotnet/csharplang/tree/master/spec
I have not, I'll look into it -- thank you.
The way difficulty is checked is by converting the block hash into a 256bit integer and seeing if it is below the target. The target is a 256bit number that decreases as difficulty rises. See [this](https://bitcoin.org/en/developer-reference), look at the nBits area of the header.
Can you post the exact error? Right now it is just guessing.
The .NET session doesn't touch your database unless you have programmed it to do so, so you can still save the cart in the session and save the overhead of sending the cart to and from the server for each request. You should definitely look into finding a way to save the cart permanently in case of a server restart/refresh.
If you are trying to build MonoDevelop from source be sure to read the instructions on how to do so: https://github.com/mono/md-website/blob/gh-pages/developers/building-monodevelop.md#prerequisites-and-source
Some of things listed in the comments could be done by logging the analytics. Did they click on the button for cart? Have they purchased the item (database)? If not, then you have the info you need. Storing in the database is fine, but it is another level of testing for bugs. I would myself, probably store the cart on the server, and keep an ID in the cookie. Also maybe even the cart items itself with some kind of hash value that allows you to quickly check the database to see if the cart has changed. If it has then you can sync it.
I got back to my code this morning. I had figured out to use the `DataGrid.Items` property instead. `myValue = ((DataRowView)DataGrid.Items[i]).Row.ItemArray[0];` This worked for me. I tried using ElementAt as you did above, but it would not recognize it as an available method. Thank you anyway. 
`ElementAt` is an extension method defined in the `System.Linq` namespace, so you'll need to `using` that namespace in order to use it. Anyway, glad you got your code working!
Refer to this thread: https://www.reddit.com/r/csharp/comments/7zcd4u/list_of_resources_for_c_learners_feel_free_to/?utm_source=reddit-android
thank you , firstly. i ll only keep base properties like sku, merchant id etc so our stored objects would not bigger than 1 or 2 kb. this concept seems to make sense to our team.to be honest , i try to convince myself.
Ah, I understand the trouble you're running into now. There are very few languages that can gracefully handle percentages when it comes to numbers this large. Your best bet is to store two values. The percentage, shifted so it has no decimal places, and the amount of decimals in the real number. Then you can perform your operations using the biginteger class and divide the result by 10^x to get your real number. That should do the trick for you.
C# Yellow Book
&gt; base properties like sku, merchant id What if I order 50 different items? That's 50 sku's. 
I am using System.Linq (at least in my class declaration). Strange. My guess is that I need to convert it to a compatible type like I did for `Items` above.
thats a really good point! thank you.
It's the exact same with me. And I get irritated with the naming conventions too.
Personally I only use databases in full. Either install SQL Server and create a database, and point your application there; or get something like Amazon RDS and point to that. These options will offer you much more flexibility. Why do you want the database file to be within your project? 
&gt; Strange thing is, I have run these 9 test cases and they all fail, then sometimes they all pass, then I get a mixture of pass and fail. When watching some of the UI tests run, it doesn't always complete the whole test. I've experienced this problem do to some Javascript changing the DOM. Here is a method I wrote that catches a stale element exception and ensures the page is loaded before continuing with the test, see if modifying this and calling it prevents the fails. public bool RetryingFindClick(By by) // due to Javascript changing the DOM, this method helps prevent stale element exceptions { bool result = false; int attempts = 0; while(attempts &lt; 2) { try { driver.FindElement(by).Click(); result = true; break; } catch (StaleElementReferenceException){ } attempts++; } return result; } }
"C# 7.0 in a nutshell" is a comprehensive and easy to understand book for both C# language and the .Net framework. If you have enough time, read and understand at least first 7 chapters. That is the minimum amount of knowledge needed. If you don't have enough time try C# course in Microsoft Virtual Academy to get an overview.
To run code in visual studio you press F5 key. If that doesn't run your code it should at least give you a message that you can post here to get some help.
Thank you 
One more thing you can do is, create a visual studio dev essentials account. With this you will get 3 months free access to Pluralsight which has some good courses on introduction to C#.
I'll do that 😊
I wouldn't ignore Winforms. Many companies still maintain legacy apps that use it and write new internal tools with it. With that said, I would still strongly emphasize learning the other UI technologies as career advice.
I'll be releasing preview builds every now and then. Just gotta keep an eye on: https://github.com/CodeDead/
That's the attitude to learn something new :D!
I am getting the zip version at school. It says I can't exact because I need permission to extract bin. I'm sure this will fix at home though 
You should have one *type* per file (class, struct, enum, interface). Never have more than one type defined in a single file unless that type is both *private* and *nested*.
Sounds like you have an academic license and the zip file might be password protected. Check with your professor for the password.
Okay 
Thank you 
The `&lt;&gt;` syntax is used for generic type arguments whereas the `()` is used for method arguments/parameters. Assume the following method: public string ConvertToString&lt;TObject&gt;(TObject obj) { return obj.ToString(); } I can call it like this explicitly: string result = ConvertToString&lt;int&gt;(42); Or I can infer the generic and omit the generic type parameter: string result = ConvertToString(42); In the second example, the runtime infers the generic type parameter as an `int`. Using a generic this way is silly though. &amp;nbsp; Suppose I want to design a class that acts as a container for any type and exposes only `Add` and `Remove` methods. How do we do that? With generics: public class MyCollection&lt;TObject&gt; { private List&lt;TObject&gt; Objects { get; set; } = new List&lt;TObject(); public void Add(TObject obj) { MyObjects.Add(obj); } public void Remove(TObject obj) { Objects.Remove(obj); } } The `MyCollection` class uses a `List` object to back it (which itself uses generics). &amp;nbsp; You can also add generic constraints to the generic type arguments so that only certain types are allowed but I won't give an example of that here unless you want one.
Have you installed all the mono related modules in the VS2017 installer. I know its kind of stupid question but I have had things fail in unexpected ways because I missed a dependent package that the installer does not realize is tied to what I want.
Learning C++ is easier than learning C#?
Every barcode scanner I've seen can be setup to output a return character after the scan which will click the default button on the form. If you can't do this, you can add an onchange event to the textbox but this will run after every enterred character. Alternatively, you could add an onfocuslost (or it could be named onblur - I don't have VS open near me right now to check) which will fire when the textbox loses focus.
The application is supposed to be for local use and because its easy to just place the exe file somewhere and forget to take the database with it. So an all in one is the kind of app I prefer
Make sure you add new files to the project rather than simply opening a new file and trying to compile it
&gt; c++ is simpler than ... lol
To achieve any progress indicator, you must first determine what value(s) you will use to determine progress, calculate that value and update a visual control while still performing your task at hand. This is usually done by raising events however, it can incur some overhead. 
Monogame's license is the Microsoft Public License and MIT license. Both basically say you can do whatever you want with the code. I have a feeling that the monogame developers might not be interested in your changes (but ask them, if it means that much to you). What you're considering sounds like a fairly large breaking change and doesn't benefit the project itself too much. It benefits you as you try to mold it into something else (Unity), which is likely a goal they don't have much stock in. You can call your fork whatever you want. Call it Monogame, MonoGame2, Pgrm87's BattleMono, it doesn't matter. It's likely that the name will only ever have meaning to you. &gt; If I was the owner of MonoGame, it would be easy -- I'd make the changes that I needed and increment the major version so people would know that I made backwards incompatible changes. You forgot the part where you route your mailbox to /dev/null as your mitigation strategy for dealing with the ensuing shitstorm as all of your users express their displeasure with a largely-unnecessary breaking change. If you were actually a maintainer of a large framework like Monogame, you might want to consult with your user/dev community first before you make any such large breaking changes. 
Nutshell is a great book, but keep in mind the intended audience: “For the beginner, this book complements, rather than replaces, a tutorial-style introduction to programming.” It expects you to be new to c#, but “some general programming experience is necessary.” 
I would just pay $10 for a udemy tutorial. Yeah it's not free, but $10 is super cheap, and the stuff on udemy is really good.
Well kinda, i started coding with C++ and now i learned c#, c++ really helped
Not at the moment, you need to know the total number of files before you start, otherwise you can't report how many you've finished out of the total. As for reporting the progress, take a look at this class https://msdn.microsoft.com/en-us/library/hh193692(v=vs.110).aspx
solving school assignments for computer science freshmen.. but more seriously, I think the c#/dotnet world has enough talking points currently as the development of new frameworks and concepts was even further accelerated by making everything open source and cross plattform. In the past month there have been about 300 posts in this sub and nearly 30 where about learning resources. So I think there is plenty of other stuff to talk about, but why should 10% of it be a repetition of the same content?
I should've added /s to my post. haha
You'd have to do it at the per-file level (i.e. "Copying file 1 of 5") and not at the byte level (i.e. "Copying 34,000 bytes of 83,000") because there aren't callbacks from the standard .NET copy methods that will report progress. So count the total number of files (return value from src.EnumerateFiles()) then change the loop to a regular for(;;) loop so you'll have a counter. Then display those values to the user. Be aware that if this is a WinForms app, you'll need to use BeginInvoke which will allow the form to repaint while all this is going on. 
haha probably, not it has a different tone :D
[There already is a sticky](https://www.reddit.com/r/csharp/comments/3xn6sm/welcome_to_rcsharp_read_this_post_before/), people just don't read it.
Removed: Rule 4, Rule 3.
Removed: Rule 5.
The problems I have with the current sticky post is that it's not specifically about resources, it's not very extensive on the topic and not up-to-date. Also adding a new rule (and enforcing it) to delete post regarding this would help.
Note that "using static" and the null propagator operators do not work properly in Unity in some cases. 
I thought the same thing this morning, then I took a look at the sticky which already suggests some "learn" subs. 
My boi just opened up to the last chapter of the book, learn methods first, then learn lists, then generics 
I haven't personally used any c# stuff on there, but you can sort them pretty easily and see which ones people like the most. The content on there is top notch though.
Do more research into the barcode scanner hardware. The manufacturer may provide an API that allows you to capture events directly from the scanning hardware itself, which completely bypasses this process of capturing text in a textbox. That's usually a lot more reliable because you don't have to rely on users leaving the cursor/focus on that textbox and instead you capture data from a background object that is *always* listening to the barcode reader and doesn't need focus like a visible control does.
You added a bunch of images to a Windows form and then either moved the image files or moved the source code. Now the designer cant load the files. 
Lol, wut?
Indeed, I'll look some more because I've found an SDK/dll/API etc for the barcode printer but not the scanner yet unfortunately. 
Oh wow, this I didn't know. Thanks for the tip, looking into this.
I second this. Most readers I've used supports OPOS and can be used with for example Microsoft POS.Net.
Follow this StackOverflow simple answer: https://stackoverflow.com/a/13874504/5163530
For questions like "find the [adjective]est value", one would use a pattern called a _fold_ (or _reduce_, or _aggregate_, or _accumulate_). In a loop, you keep track of the [adjective]est value encountered so far, and test if it is [adjective]er than the new value. var accumulator = ReadValue(); for (var i = 1; i &lt; n; ++i) { var value = ReadValue(); if (IsAdjectiver(accumulator, value)) accumulator = value; } return accumulator; This is a very common pattern. LINQ even has a function for doing this. All you need to do is plug in your own `IsAdjectiver` function. Translating from the requirements: // Is 'b' more Adjective than 'a' ? bool IsAdjectiver(int a, int b) =&gt; // If 'b' is closer to zero than 'a', or Math.Abs(a) &gt; Math.Abs(b) || // if 'a' and 'b' equally close to zero, and 'b' is positive Math.Abs(a) == Math.Abs(b) &amp;&amp; b &gt; 0;
One one hand, I can see how this would save time when writing lots of classes, but on the other hand, I feel like this is a sort of "regex" quality problem - in addition to solving my additional problem of writing out code quicker, now I have another problem of remembering the mnemonic shortcuts. 
I intentionally removed some as I added new ones to keep it reasonably manageable. Starts to get a bit combinatorial-explosiony otherwise. At the end of the day, I guess you only remember the ones you use the most anyway. 
So it's like [Emmet](https://emmet.io), but for C#?
I found a solution, but I am more interested in implementing this method, but the problem is I have never really worked with BackgroundWorkers before so I'm not exactly sure how to implement it with the code I have. I tried but it ended up breaking on me. 
Yeah to a degree. I don’t know much about Emmet though, but judging from that video, it works similar to the expanding out functionality from a shortcut. Then use tab to move through and fill in the blanks. It’s functionality that has existed in Resharper for years. The Mnemonics project focuses on adding shortcuts for creating different common combinations of structures.
Intermec/Honeywell provides the Intermec Data Collection library, which has a BarcodeReader object that raises a BarcodeScanned event. Symbol/Motorola/Zebra has similar capabilities in their Symbol.Barcode library. Those are probably the most common ones, but most manufacturers have them.
Paste the following code in a Form with 4 controls, a Button btnCancel, a Button btnStart, a Label label1 and a BackgroundWorker backgroundWorker1. And then hook the Click events on the buttons. public Form1() { InitializeComponent(); backgroundWorker1 = new BackgroundWorker(); backgroundWorker1.DoWork += backgroundWorker1_DoWork; backgroundWorker1.ProgressChanged += backgroundWorker1_ProgressChanged; backgroundWorker1.RunWorkerCompleted += backgroundWorker1_RunWorkerCompleted; backgroundWorker1.WorkerReportsProgress = true; backgroundWorker1.WorkerSupportsCancellation = true; } private void backgroundWorker1_DoWork(object sender, DoWorkEventArgs e) { for (int i = 0; i &lt; 101; i++) { if (backgroundWorker1.CancellationPending) { e.Cancel = true; break; } backgroundWorker1.ReportProgress(i); Console.WriteLine("Simulating copying files"); System.Threading.Thread.Sleep(20); } e.Result = 0; } private void backgroundWorker1_ProgressChanged(object sender, ProgressChangedEventArgs e) { progressBar1.Value = e.ProgressPercentage; label1.Text = e.ProgressPercentage + "% complete"; } private void backgroundWorker1_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e) { if (e.Cancelled) { label1.Text = "Operation cancelled"; } else { label1.Text = "Operation Complete"; } btnCancel.Enabled = false; btnStart.Enabled = true; } private void button1_Click(object sender, EventArgs e) { btnCancel.Enabled = true; btnStart.Enabled = false; backgroundWorker1.RunWorkerAsync(); } private void button2_Click(object sender, EventArgs e) { btnCancel.Enabled = false; backgroundWorker1.CancelAsync(); }
Do you want to store the value in an array or use the value to initialize the size of the array? Also value returns a decimal, not an int.
I want to to initialize the size of the array to what im setting the numericUpDown value too.
Err, what book? I've just been looking up random stuff online XD
I tend to agree, but it isn't going to be for everyone. C++ syntax and structure is something I immediately grasp; where C# is less intuitive and seems a little obscure. But probably a lot of people find it is the other way around, and that's fine. 
I know Java...
Then the "C# in one video" will be the easiest way to pick up C#.
Instead of a plug-in, why not just create snippets?
Well, you dont have to mess with classes
Can you write a facade on top of the MonoGame API? This way you can write a clean api as you would like it to be, and that translates the request into the MonoGame API. (Sorry if this isn't applicable, couldn't read very thoroughly) 
cast it to int int[] value = new int[(int)numericUpDown.Value];
I mean the sidebar is there with basic info, but people dont know how to internetz ettiquettez anymore. Eternal September and all that shit
The problem I have is that I don't necessarily need "m" + every conceivable data table and m~ + every conceivable data type. I just want m &lt;tab&gt; &lt;I enter return type&gt; &lt;tab&gt; or m~ &lt;tab&gt; &lt;I enter type of IEnumerable&gt; &lt;tab&gt; 
Love it.
The problem is I need both of them. I use them both in void start for my variable k and sigma1. So if I only make 1 class I can only return 1 variable correct?
My adhd would love this, besides, my VS is already more colourful than a rainbow
I don’t know, but I want to know. That sounds cool. 
PowerMode: https://marketplace.visualstudio.com/items?itemName=LiamMorrow.PowerMode
The [github repo in thread I've mentioned](https://www.reddit.com/r/csharp/comments/7zcd4u/list_of_resources_for_c_learners_feel_free_to/) has a pretty good list which would be nice to add (and give the creator of the list credit/link to it).
Some more suggestions: Beginner: https://www.microsoft.com/net/learn/in-browser-tutorial/1 (interactive) http://www.learncs.org/ (interactive) https://mva.microsoft.com/en-us/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949 (video) Further Material: https://stackify.com/learn-c-sharp-tutorials/ (some I've already mentioned but maybe there is something else in that list you seem worthy of including) 
You better get used to Convert.ToInt32(...), casting it like this "(int) XYZ_decimal" doesn't always apply 
This is incredible for videos if you wanna show off a line of code you are particularly proud of
Nope, this is a good one but the other one was more delicate. However in the settings turn on the colors, turn of the screen shake and its nice :-)
You'll return one class (or a collection of classes), but that class will have as many properties as you need.
Apparently no one actually read your error message, because none of the suggestions below will fix it. You need to move the initialization of `value` into the constructor: partial class Form1 { NumericUpDown numericUpDown1 = whatever // this is probably set in the autogenerated form file int[] value; // do *not* initialize it here public Form1() // this is the constructor { value = new int[(int)numericUpDown1.Value]; } }
That’s pretty much exactly how this works. Omitting either the return type or the generic type parameter will allow you to tab through placeholders to fill in your own values. No need to use the shortcuts for basic types.
It’s not a plugin - it generates XML that can then be imported as snippets into Resharper.
https://docs.microsoft.com/en-us/dotnet/api/?view=netframework-4.7.1
Agree with the some content over no content. It's really not a big deal.
Use [valuetuples with C# 7.0](https://blogs.msdn.microsoft.com/mazhou/2017/05/26/c-7-series-part-1-value-tuples/) If you work with .net &lt;4.7 or dotnet core &lt;2.0 add the nuget packet system.valuetuple Then you can write something like this: public (Vector3 j, float sigma1) updateVectors(int i) { Vector3 c = displacedVertices[i] - a; float C = Vector3.Distance(displacedVertices[i], a); return (c / c.magnitude, 1.0f / (1.0f + (float)Mathf.Exp(-C))); } If you need more performance and you are working on some values from an array for example you should also take a look into [ref locals/returns](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/ref-returns) to prevent unnecessary copying.
RemindMe! 13 hours
I will be messaging you on [**2018-02-27 17:39:44 UTC**](http://www.wolframalpha.com/input/?i=2018-02-27 17:39:44 UTC To Local Time) to remind you of [**this link.**](https://www.reddit.com/r/csharp/comments/80he3q/does_anyone_know_what_the_extension_that_showed/) [**CLICK THIS LINK**](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[https://www.reddit.com/r/csharp/comments/80he3q/does_anyone_know_what_the_extension_that_showed/]%0A%0ARemindMe! 13 hours) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete Comment&amp;message=Delete! ____id____) _____ |[^(FAQs)](http://np.reddit.com/r/RemindMeBot/comments/24duzp/remindmebot_info/)|[^(Custom)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=[LINK INSIDE SQUARE BRACKETS else default to FAQs]%0A%0ANOTE: Don't forget to add the time options after the command.%0A%0ARemindMe!)|[^(Your Reminders)](http://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List Of Reminders&amp;message=MyReminders!)|[^(Feedback)](http://np.reddit.com/message/compose/?to=RemindMeBotWrangler&amp;subject=Feedback)|[^(Code)](https://github.com/SIlver--/remindmebot-reddit)|[^(Browser Extensions)](https://np.reddit.com/r/RemindMeBot/comments/4kldad/remindmebot_extensions/) |-|-|-|-|-|-|
RemindMe! Tomorrow 9am
RemindMe! 28 hours
NCrunch and DotCover are my #1 and #2 choices. But if you aren't targeting core you could look at OpenCover
Came here to suggest valuetuples! Way more better than creating a class for a one off internal return type
To me it sounds like you are closing a stream too early (had a similar issue when I was creating a zip). Got any sample code where you do this stuff?
BigEgg's [PowerMode](https://marketplace.visualstudio.com/items?itemName=BigEgg.PowerMode#overview)?
Look into open cover. It plays nice with vs.
You better understand the difference between those two, instead of just getting used to one or another and not understanding what the f*ck you're doing.
What do you mean by a "user selected area"? If you’re talking about a GUI program with a text box where the user can type, and can also make selections with a mouse, then I suggest learning Windows Forms. That’s the best starting point for learning GUI programming (although you’ll probably want to move onto WPF once you’ve got a bit more experience), and the Textbox control, which is one of the most basic, commonly used controls, does what you’re looking for.
User selected area means that the user will select the area using mouse(forming a rectangle). It is like the user will select the area, an image of that area will be saved and then passed to OCR. Thank you for replying, I will check out the Windows Forms.
By default, C# has no engine for OCR so you're gonna have to find one that works for you. I recommend using : https://github.com/tesseract-ocr/tesseract in addition with: https://github.com/charlesw/tesseract
besides being able to use tesseract as already suggested, you could try to consult an api like microsoft cognitive service or google cloud vision.
Thank you for replying! How I am going to use this and is this the only thing I need? 
Thank you for replying! How would I link the APIs/Tesseract to screen capturing? What things should I know beforehand?
it depends on what you want to use, if you use tesseract you can find many tutorials or examples on youtube or github. if you use an api service I suggest you look at the documentation on the relative site
DotCover does this - you can find some documentation on running it through the command line here: https://www.jetbrains.com/help/dotcover/Running_Coverage_Analysis_from_the_Command_LIne.html
I managed to get it working with ADO.Net, but not EF.
I do indeed. Retrieving the byte array is done in a separate method which is tested and working. The controller just contains a few lines of code and here are a few of the variations I've tried: (I've tried various combinations of the return type (audio/wav, binary/octet-stream, application/octet-stream etc. // GET: api/Media/5 [HttpGet("{fileid}", Name = "Get")] public FileResult Get(string fileid) { byte[] loBuffer = FetchMediaFile(fileid).Result; var loReturn = new FileContentResult(loBuffer, "audio/wav"); loReturn.FileDownloadName = fileid + ".wav"; return loReturn; } public FileResult Get(string fileid) { byte[] loBuffer = FetchMediaFile(fileid).Result; MemoryStream outStream = new MemoryStream(loBuffer); outStream.Flush(); //Always catches me out outStream.Position = 0; return new FileStreamResult(outStream, "binary/octet-stream"); } public FileResult Get(string fileid) { byte[] loBuffer = FetchMediaFile(fileid).Result; MemoryStream outStream = new MemoryStream(loBuffer); outStream.Flush(); //Always catches me out outStream.Position = 0; return File(outStream, "application/octet-stream"); } // GET: api/Media/5 [HttpGet("{fileid}", Name = "Get")] public HttpResponseMessage Get(string fileid) { byte[] loBuffer = FetchMediaFile(fileid).Result; var stream = new MemoryStream(loBuffer); var result = new HttpResponseMessage(HttpStatusCode.OK) { Content = new ByteArrayContent(stream.ToArray()) }; result.Content.Headers.ContentDisposition = new System.Net.Http.Headers.ContentDispositionHeaderValue("attachment") { FileName = fileid + ".wav" }; result.Content.Headers.ContentType = new MediaTypeHeaderValue("application/octet-stream"); return result; } 
And what about screen capturing? I have tried many tutorials but, no one teaches that.
How can I have lived this long and not known about this???
this is so frustrating actually :( I know I can code it and stuff, but I want to be setup as data source in project
NCover can but SonarQube cant. SonarQube can use the reports from NCover to provide code metrics
[Don't let anyone code like it isn't 4th of July!](https://github.com/codeinthedark/awesome-power-mode/blob/master/README.md) 
Sounds very interesting. Have you tried it? What was your experience, re. performance, learning curve, etc.? 
sorry, didn't know where to share something in french which may interest french readers.
&gt;but so far doesn't seem to mind receiving a byte every few minutes This implies you're letting data sit on the wire. Flush your buffer every now and then otherwise you're going to run into issues once your TCP window fills up.
I usualy use ScreenCapture class and CaptureScreen() method...give It a try
https://msdn.microsoft.com/en-us/library/dd537628.aspx DotCover does work nicely, though.
Not yet, I just stumbled into it. I plan to test it out during the weekend if I have some free time for it. It looks really promising - it could be used for game development as well. I am super curious about this technique!
1. Out parameters -- return one value as the return type of the method, and assign the other to the out parameter. This is an older style of solution, and can be a bit clunky, but it should work pretty much wherever. 2. Tuples -- .Net added immutable, reference-type tuples in .Net 4, and mutable, value-type tuples in .Net 4.7. The latter has some language support in C# 7. With these, you return a generic object containing both values. The value tuple will probably be more efficient for your use case. 3. Create a small object to act as a container for the returned values. This has the advantage of giving you more control over names, etc, at the expense of saddling you with the extra weight of defining and documenting the new type.
All you said makes sense, I am however left with the doubt if you control both ends or not. The protocol doesn't seem to be defined, so this is pretty "homemade", but you're worried other implementations might not be compatible, which makes me think this is some sort of industry standard "protocol". I think if you control both sides you can do pretty much whatever you want: Application layer keep-alives? heck yeah! TCP keepalives? sure!
lol
I don't know how large your script is, but a loading form, for a approx. 1-10kb File, is pretty much overkill, even on 2G this wont take that long. For downloading files with C#, i recommend the HttpClient (not the WebClient). But this requires some handwriting if you want download-progress (manually read the stream, calculate current bytes read and total bytes to receive, useful: Progress&lt;T&gt;-Class) Next up for executing powershell scripts: you can either use System.Debug.Process or [This tutorial from MSDN](https://blogs.msdn.microsoft.com/kebab/2014/04/28/executing-powershell-scripts-from-c/) to execute powershell inside of C#
Still need to read the article, but they mentioned that this supports AVX instructions. So is this not only for GPUs but for CPUs that support those instructions as well? Is it also Linux friendly?
I've got the script in PowerShell form already but I'm having issues with it being converted to an exe. This is all the script is doing at the moment... PowerShell.exe -WindowStyle Hidden { $CreateDialog = { Param ( $Form ) New-Item -ItemType directory -Path "C:\Windows\Computer Repair Centre\" | Out-Null $file1 = "https://raw.githubusercontent.com/charliehoward/CRC-Installer-PS/master/Main.ps1" $path1 = "C:\Windows\Computer Repair Centre\Main.ps1" $Username = "" $Password = "" $WebClient = New-Object System.Net.WebClient $WebClient.Credentials = New-Object System.Net.Networkcredential($Username, $Password) $WebClient.DownloadFile( $file1, $path1 ) Start-Sleep -s 5 $Form.Close() } # Create our Form object Add-Type -AssemblyName System.Windows.Forms $loading = New-Object System.Windows.Forms.Form $loading.Text = "" $loading.TopMost = $true $loading.Width = 300 $loading.Height = 240 $loading.Icon = "$Env:p2eincfilepath\CRC.ico" # Create loading gif $loadingGIF = New-Object system.windows.Forms.PictureBox $loadingGIF.Width = 350 $loadingGIF.Height = 332 $loadingGIF.Width = 350 $loadingGIF.Height = 332 $loadingGIF.ImageLocation = "$Env:p2eincfilepath\Loading.gif" $loadingGIF.location = new-object system.drawing.point(-30,-70) $loading.controls.Add($loadingGIF) # Create new runspace $Runspace = [RunspaceFactory]::CreateRunspace() $PowerShell = [PowerShell]::Create() $PowerShell.Runspace = $Runspace $Runspace.Open() # Set parameters to pass to new thread. $Params = @{ Form = $loading } # Add the codeblock and parameters to the runspace $PowerShell.AddScript($CreateDialog).AddParameters($Params) | Out-Null # Start the runspace (this is done before calling ShowDialog() for the form. Otherwise it would halt script execution) $AsyncObject = $PowerShell.BeginInvoke() # Fire up our form $loading.ShowDialog() &amp; "C:\Windows\Computer Repair Centre\Main.ps1" # Cleanup (don't want memory leaks) $PowerShell.EndInvoke($AsyncObject) | Out-Null $PowerShell.Dispose() } 
Let me get this straigt: You want to make an *.exe out of your Powershell script, without rewriting it in C#?
Best way, since tuples are a new thing, and (for me) they don't look nice on a C# code.
I don't like most stuff from Jetbrains but I had decent experience with dotCover
I've used converters and it works but Windows Defender has issues with it. I would like to rewrite it in C# so it doesn't.
What does your code look like when you call `updateVectors`?
for example: for (int i = 0; i &lt; displacedVertices.Length; i++) { // deconstruct tuple with assignment var (k, sigma) = updateVectors(i); displacedVertices[i] += (-k * 0.05f * sigma); }
Nice. Thanks.
Omg, your an absolute angel &lt;3 Thanks!
I would say that he or she should cast, parse or convert based on what is appropriate. If I want **null** to equal **0** then Convert.ToInt32 is more appropriate, for example.
We are definitely not in control of of the server. It's an access control system which we can possibly inquire about but the vendor is not very cooperative and unlikely to implement any changes. It sounds like if the server isn't consuming the byte we're sending every few minutes while the connection is idle, eventually we may no longer be able to continue sending said bytes as receive buffer will fill and TCP congestion handling features would probably kick in and block further keepalives. Unfortunately this seems to be the easiest way to ensure this connection stays alive and does not "die" without our knowledge. If we had control over both ends, we'd implement a keepalive mechanism or better yet, use a proven application layer protocol to handle that stuff for us. I should have time today to demonstrate what happens if a TCP server does not empty the receive buffer. I'm curious to see specifically what goes wrong first and what the Wireshark trace will look like.
Just curious. Why not? What do you use instead?
[Their product page](http://www.altimesh.com/hybridizer-products/) says that AVX is only supported in the paid version and that you should contact them for the Linux version (which probably means it's either an alpha or doesn't exist at all).
I would consider using a folder. Then instead of taking file somewhere I would take a folder. It is as easy to handle as one file and no tricks are needed for local data. 
As long as you're on Windows, it's pretty much OpenCover, and combine that with ReportGenerator to transform it into a readable site. Everything else is proprietary and you have to deal with licensing issues / potentially paying for it.
I had the same WTF question. It is kindergarden grade entertainment. Next to r2d2 shaped cookies and batmobile bed :)
&gt; I don't like most stuff from Jetbrains What do you use for refactoring and unit tests then? Plain VS or some other plugins and tools? 
Visual Studio.
Guys, Thanks for the support. And i finally found the **SOLUTION**. using (Mutex mutex = new Mutex(false, @"Global\" + "PosApp.UI.Windows")) { if (!mutex.WaitOne(0, false)) { if (SecurityData.IsMasterDataDownloaded) { SecurityData.IsMasterDataDownloaded = false; } else { MessageBox.Show("Another instance is running.!"); return; } } GC.Collect(); Application.Run(form); } }
RemindMe! Fucking never
So a did a quick test with a basic TCP client/server to see what would happen if I flooded the TCP server with data that the server never reads. As expected, the server started responding with TCP Window Full messages. Interestingly, even in that state, sending bytes to the server is still useful as an indicator that the connection is no longer available. It's a really shitty hack to be able to determine if the connection is still alive, but *technically* it isn't causing any unwanted side effects. The memory utilization on the server doesn't climb over time. The server still sends data *out*. It can't receive any new data until the receive buffer is drained, but it doesn't need/want to either. I'm filing this one under "It works, but don't do it. Unless you have no choice, and you should still be embarrassed"
I thought this was well known.
"Nullable reference types" is, apparently, the name Microsoft have given the feature. The `!` operator is a concession to maintaining and managing interop with existing code. It should be relatively straightforward to write an analyzer, Resharper rule, or something similar to notate every place it occurs.
So you aren't wrapping your streams in using blocks. Calling flush on memory stream is redundant: https://msdn.microsoft.com/en-us/library/system.io.memorystream.flush(v=vs.110).aspx Any better results if you pass the byte array directly to the file result? return File(lobuffer, "application/octet-stream", "some file name");
What would be a use case for this ?
I imagine it would be for optimizing code paths that would run much more efficiently on the GPU and/or the ability to write graphics code (shaders and such) with a higher level language and not have to switch gears and such. Also your code is all in one area.
So writing more graphics intensive game engines in c# is now not a crazy idea?
any tread is too many, but it depends on your usecase. Nowadays the super hyper multiplexing fameworks use epoll or the abstractions such as libuv. I wont wory too much about it until it hurts though. Make sure your business logic makes sense and optimize later! 
Ohhhh boy, that `foreach async (var data in asyncStream)` *Give it to me*.
It feels even better when you blatantly abuse LINQ with it. Like inscribing arcane runes.
Creating threads has a comparably high overhead. Depending on how important it is the data gets send instantly I would go with Task.Run instead which uses a threadpool already (therefore not guaranteeing instant action). The more threads you use the more context switching the OS needs to perform, and at some point the performance takes a dive and basically nothing gets done anymore at all.
Scripting in C# for game engines is quite popular, with Unity and has been for some time.
Ive not looked at this too much. I dabbled in shaders with a C# XNA game in the past but im not an expert in that area. Those shaders were written in HLSL and not C#. I believe I actually got something running with CUDA while trying to debug a shader in Visual Studio which worked somewhat at the time. Regardless though I definitely see this as being able to speed up development in much of that area.
&gt;Do I call .Dispose() on any class properties that also implement IDisposable? Yes, if your class "owns" those objects. That is, if your class being disposed also means that those objects aren't used anymore. As for the MSDN example, it sounds like you got it backwards. You should implement `IDisposable` if your class owns native resources such as file handles so they can be cleaned up, but you do not add otherwise unused handles to your class just to have something to do in your `Dispose` method. If your class does not own any other disposable objects or native resources, there is nothing to dispose and it doesn't need to implement `IDisposable`. &gt;making a large number of queries on multiple threads when under heavy load It's impossible to tell for sure from what you've posted, but this sounds like your problem is a lack of synchronization between threads using non-thread-safe resources simultaneously, rather than a lack of proper disposing of resources.
I've actually had much worse luck with Tasks. While threads can keep the box running smoothly (using Sleep(1)) the Tasks I've seen gum up a whole computer to a crawl.
I don't think GPGPU technologies like CUDA (or this) are usually used for regular graphics applications. This would be used more to speed up some large piece of CPU-bound number-crunching or data processing.
I currently don't have the time to create some tests for comparing tasks and threads, but if you want to go with threads I'd consider using ManualResetEvent/ManualResetEventSlim instead of Sleep() and looping.
Not crazy at all, but you probably wouldn't use something like this for regular 2D/3D graphics.
Code coverage in VS 2017 enterprise doesnt work. You're missing nothing there. 
I think you may be right, im really just extrapolating with the knowledge I do have. I see those same benefits of being able to interface and offload to the GPU from C# (or whatever language) being applied to shaders.
Sorry, but your entire "security" is based on if(success != true) { Close(); } Unless I'm totally mistaken you're storing the encryption key in the database, making the encryption completely pointless.
Yes the key is stored on the database, without having a server to send it to I really could not see any way around it. The key however is encrypted when stored on the database. I guess technically it is not a complete offline app because the TOTPs are generated based upon both the GA server and the system having the same key and synced on the current time. I'm sure there are some flaws especially with all data being stored on the local database.
I guess it's more for GPGPU stuff. Haven't done much of that myself, to be honest. Things like signal processing, video encoding/decoding, physical simulations, etc.
I agree the public global variable I have as success is the last thing you would call secure for allowing the program to verify the 2FA. I knew of its flaws but continued to use it to get the rest of the features currently up. I'm not claiming this is a product to sell or even use it as your main form of security. It was merely an exercise to implement a two-factor authentication into a program, work on form eventargs, and work with encryption. I know the encryption key on the database makes the encryption pointless, I just do not have a server to send certain data to.
My rule of thumb is short tasks use a thread pool, long running tasks use explicit threads. For the purpose of this short is less than a fewsecond and long is greater than ten minutes.
A thread is a full megabyte of data &amp; stack space, and potentially a second or more to run up. Can you reuse threads, with something like a thread pool?
The default max threads in .net 1.0 thread pool was 100. The actual depended, in part, on how many were blocked on I/O.
Well idk if anyone would write a *game engine* in C# since you need the best performance possible, but more so being able to compute data in parallel with the gpu rather than the main thread on the cpu for example. Fairly niche use cases at the moment, but I'm also not an expert.
Is M() a static?
It's not in the solution I have in mind. But if you can make it work as a `static`, that's fine too.
A struct?
where A is a generic type that has an interface which requires you to implement M();
But since the key to the encrypted secret must be stored with the app as well, it's just one more layer of obscurity. You don't need the 2FA app to unlock the database. TOTPs aren't really useful for encryption, just for authentication with a trusted party. The [KeePass](https://keepass.info/) plugin OtpKeyProv (also written in C#) uses an interesting scheme based on HOTPs rather than TOTPs (counter based instead of time based) and works fully offline. It stores the OTP secret encrypted with the next n OTP codes derived from the secret, so the secret can't be recovered from the database alone (but might be brute forced if the codes are too short/too few).
It works. You have to setup the csproj correctly for code coverage to work.
If `a` is a local variable and reference type, it would be a compilation error due to use of an unassigned variable, not an NRE.
This writes "Hello", were you looking for more? using System; class Program { static void Main() { A a; a.M(); } struct A { public void M() =&gt; Console.WriteLine("Hello"); } } 
You can't access static members on a reference in C#. You could do it if you changed the variable name to be the same as the type name, though.
This was my second thought, something like an extension method. 
Yeah, I ended up going with a Thread Pool after all. Ultimately, I think it even made the code more legible.
Thread Pool it is.
There's no luck involved. There's correct implementation and incorrect implementation.
Hey, I've tried finding CaptureScreen() method in the ScreenCapture class but failed to find one. So far I've made this : http://prntscr.com/ikptej Rather than uploading the image I wanted to capture image using mouse. Also, I want that upload button to pass the image to OCR. 
&gt; for 200 threads its closer to 20%, and over 50% for 300 threads. Huh. That's a heck of a jump.
Anything that needs number crunching performance beyond what a CPU could do. The CUDA stuff I've written was mostly for economic simulation using cuRAND, for instance. You can generate millions of random numbers on the scale of milliseconds with a 1070.
Up front note, don't have too much experience with it. Little background first. I used it in a project at work and it runs about 270~ jobs every hour, 24/7. Most jobs it does preferably kick off every minute. The job consists of several tasks that each runs a query against another database and stores the result. I did notice that it took seconds for jobs to start. I passed everything the job needed to function (names, queries, connectionstrings, etc..) and kicked it off. Dug into it a bit since i didn't like it. The docs mentioned that you should keep the job arguments [small and simple](http://docs.hangfire.io/en/latest/best-practices.html#make-job-arguments-small-and-simple). So instead of a list of tasks, i just passed a common parameter (the connection name in this case), then adjusted the job to grab tasks from the db, then run them (like i should have done in the first place). After this change, the jobs kicked off near instant. I do think it's missing some parts. There was a bunch of code i had to write for things such as canceling a job when it was already running (instead of queueing it up) and making jobs expire from the history faster. I think those settings should be standard, but at least the functionality is there to implement it yourself. Another thing i **really** recommend is [Hangfire.Console](https://github.com/pieceofsummer/Hangfire.Console). It allows you to write logging and progressbars into a jobs history. Doesn't seem to work with MemoryStorage though.
It depends on what the thread is doing on how much worse but always is worse when doing anything real.
Here's a few rules which will make this exception go away: 1) One database connection per thread. 2) Open the connection when the worker thread is created, close when worker thread destroyed. 3) Write code in this order: configure instantiation, configure disposal, configure opening, configure closing, finally write body of method.
You're still calling an instance method from uninstantiated reference `a`, though - no compiley. 
When A is a custom class and M is a constant of that class.
In C# (and only C# to my knowledge) you can do this to a class if the function you are calling is an extension method. There are a couple of exception to this rule and it only works at design time. Once compiled the code would actually read ExtensionClass.ExtensionMethod(variableThatHasNotBeenInitialized); As others have mentioned it should also work on a value object since they’re non nullable and when defining the variable it will be given a value. 
The thought right away. Don't see how this is a puzzle.