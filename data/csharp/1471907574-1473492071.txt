You're right, but that's not generally done because you're doing the type check twice (under the hood), and you're confined to the scope of the if statement (which can lead to messy nesting). This tends to be cleaner: var button = sender as Button; if (button == null) { throw new ArgumentException("This method only handles click events for buttons", nameof(sender)); } // Do something with the button.
Holy, that's the longest gist I've seen so far! :)
That might be the most I have written without having VS open to try and run any of it and longest single file, but I have a few others that are fairly as long: * [on string string interpolation](https://gist.github.com/bbarry/4b25a2ae1ab87a425825) (related to [Roslyn pull 6738](https://github.com/dotnet/roslyn/pull/6738) and [issue 194](https://github.com/dotnet/roslyn/issues/194) and [issue 6669](https://github.com/dotnet/roslyn/issues/6669)) * [string rope experimentation](https://gist.github.com/bbarry/9e1d271f02342efa5776) (dumb in house "what if" with a coworker) * [comparison of `List&lt;T&gt;` and `LinkedList&lt;T&gt;`](https://gist.github.com/bbarry/34f114b081c11926d5eeb1470dedf4bc) (post on this sub a while ago from someone claiming `LinkedList&lt;T&gt;` is useful for some reason I still haven't figured out) * [not quite functional value task enumerator that has 0 allocations on the hot path](https://gist.github.com/bbarry/0fca79b6ac8f9ea642a768024560aaa5) (for [Roslyn issue 261](https://github.com/dotnet/roslyn/issues/261)) * and my longest gist: [A complete `ValueTask` based `async foreach` state machine implementation](https://gist.github.com/bbarry/9ae25647d65ad82bfe218125087677ea) (also for Roslyn issue 261) I do have a longer one (about 2x) that is secret (a full implementation of a working double linked deterministic `SkipList&lt;T&gt;`); not public because I haven't decided on the public API it should have (it matches or beats the proposed heap implementation for a corefx priority queue in method complexity and competes with every method of that implementation in various perf characteristics). If anyone wishes to see it, I'd be happy to PM a link.
Not sure I can give you a definitive definition but I consider "basic" as common .net knowledge that an average .net developer is familiar with. For example, I'd expect a general understanding of concepts like disposables, enumerators, tasks and threading (async and parallelism), the typing system and object oriented concepts (classes, interfaces, structs, etc) as some of the basics of .Net. Hope that helps.
While it is fairly performant it spews out garbage like a city. This is a massive issue when doing console development as they are much less tolerant of garbage collectors. The xbox 360 takes 0.25-0.5 seconds to run a collection and has to freeze all threads to do so. Also the xbox triggers a GC every 1mb of allocation, even a small amount of LINQ in a game loop will allocate a 20-30 MB per minute.
Fantastic answer. For the couples of hours I still got I'll focus on WPF and then I'll fix this crappy static monster. I did not knew how to make it so it's not static. Also for the next updates I'll make this sort of Renamin pattern, I'll show you how to do it without dataflow but still in a 'nice' code.
I'm sad now. Why is LINQ so freaking slow?
The value tuples change is awesome! Can't wait to start using this! //instantiating an int,int value tuple var t = (sum: 0, count: 1); //string, int var t = (name: "John", age: 5); //Method returning int, int tuple public (int sum, int count) Tally(IEnumerable&lt;int&gt; values) { var s = 0; var c = 0; foreach (var value in values) { s += value; c++; } return (s, c); // target typed to (int sum, int count) } 
.NET is a good start
LOL not even remotely comparable. Even the most basic install of VS will have a very rich featureset
lol
I still wonder what JetBrains wants to accomplish with Rider. It can't be money, since users have VS Community and VS Code for free.
I *personally* would.
JetBrains has a history of making great tools. Everyone's pretty pleased with CLion so far. IntelliJ has been regarded as the best Java IDE by many. I could easily see them going for a business model of people paying because they know a JetBrains product will be high quality, though Rider will have to be comparable to VS+R# for C# development. Of course Rider is an actual cross-platform IDE, too. VS Code is not an IDE.
Why?
That would only be fair if I recommended only reading the docs and books before writing a line of code.
Why? Because it is the easiest thing to do. The reason I see being touted for not doesn't hold any water. Unnecessary garbage collection? That sounds like a theory, and hasn't been proven with anything. It's only a problem, when it's a problem. Until such time where it can be *proved* that a tuple would be better for x reasons, I'll always prefer to return an object/class.
How is it easier to create a class than a tuple? I'm getting out of .NET anyway so I don't particularly care, but Tuples are objectively more simple, easier to implement and less resource intensive than classes
&gt; Tuples are objectively more simple, easier to implement and less resource intensive than classes You can't present opinion as fact. Do you have any evidence to back any of those claims up? No. It's fine that you prefer tuples, and it's fine that I prefer classes.
/u/dleifsnard is correct. For simple use cases, Tuples are better. They require less code (more simple &amp; easier to implement), and since they are structs instead of classes, they're dealt with in memoriam as value types instead of reference types (less resource intensive).
&gt;more simple Fewer characters to declare and use &gt;easier to implement Less to type, no separate files &gt;less resource intensive They compile down to something similar, but a class still has more wrapped around it. 
you will need to include mapArray[i, j] = new Tile(); to the inside loop as you have allocated the array at the start of the function but haven't allocated the individual array objects.
Yeah. Seems like a weird thing to not be implemented. I'm gonna go scorched Earth and wipe all the VS stuff off my laptop and try it properly. I'm interested to see if the installer is less...problematic...than usual.
Agree 100% with this. I'm looking forward to use Rider when on Linux. While on Windows I don't think I'll ever switch from VS.
Or declare Tile as a struct, but I'm not sure if that's a suitable decision in this context.
&gt; Because it is the easiest thing to do. If it is the thing you are most familiar with, then it is *cognitively* the easiest thing to do, sure. But once tuple usage is integrated into your toolbox, tuples are in many cases easier to create, use, and reason about. I encourage you to give it a shot. &gt; That sounds like a theory, and hasn't been proven with anything. The characteristics of the CLR are well known. This is misplaced and unconvincing skepticism. &gt; Until such time where it can be *proved* […] This is a not-unreasonable position to take, in cases like "No, Manager, I'll optimize that when you prove its the bottleneck, meanwhile I have more useful things to do." In this case, though, it comes off as kind of a Luddite stance. The cost–benefit analysis between (doing more work for less performance with worse semantics) and (learning something) should have a clear result. 
&gt; I've been told that SQL server has been optimized to close that gap and caches the execution plans after first run. I don't know how true that is. It's true. The cached plan does expire, and I believe there are still *some* benefits to stored procedures over raw SQL (I *think* to do with how execution plans are cached/managed), but for simple, single-table stuff, it's debatable whether it's worth creating a stored procedure, these days. This is also pretty true for Oracle, FWIW.
If we're going to be pedantic, I'm pretty sure the cells of an array are initialized to the default value for the type. It's just that the default value for any class is null.
Even then, if you're doing that sort of type sniffing, you're probably already in a context where the struct would be boxed, right? (It's either an object reference to the struct, or a reference typed to some interface the struct implements.) Would `is` be meaningfully better than var valueType = sender as ValueType? Or does that create an extra allocation or something?
I think you're getting nulls on the last elements of the array. Your original code had you iterating with `for(int i = 0; i &lt; mapY; i++)`. Now you have `for(int i = 0; i &lt; (mapY - 1); i++)`. (same story for the `X`) This means you'll initialize all the elements except the last index. Just a quick example, let's assume `mapY` and `mapX` is the value `3`. mapArray = new Tile[3, 3]; This gives us an array with element index values of `{0, 1, 2}`. for(int i = 0; i &lt; (3 - 1); i++) This is the same iteration as: for(int i = 0; i &lt; 2; i++) So, we'll end up getting `i` values `{0, 1}`. Not `2` because `2` is equal to, not less than our upper limit. Thus your initialization code doesn't fully full the array. Try changing your for loop back to: for(int i = 0; i &lt; mapY; i++) { for(int j = 0; j &lt; mapX; j++) { EDIT: On second look, that isn't the core issue (it is an issue that needs to be fixed though). Your loop that is throwing the exception has the same upper limit, so it shouldn't throw the same error. However, you use the `.Length` property. This isn't the size of one of the X/Y rows/columns, it's the total number of elements in the array (or it's area, or `X*Y`). You need to grab the size of each dimension instead and iterate on that with [`Array.GetLength`](https://msdn.microsoft.com/en-us/library/system.array.getlength.aspx?f=255&amp;MSPPError=-2147217396): for (int o = 0; o &lt; this.mapArray.GetLength(0); o++) { for (int p = 0; p &lt; this.mapArray.GetLength(1); p++) {
All right, I see my mistake. Thanks for the help, I'll try it out when I get home!
Why is AppData not viable?
I started with VS about a year ago, when I was first learning to code. A friend recently got me to try SublimeText, which seems awesome, but I didn't realize how much I used/loved Intellisense (didn't even know what Intellisense was) until I didn't have it anymore. My point is, I think I'm pretty much married to VS until some other IDE can match the Intellisense features. :\
Hey again, just tried it out. Works great! Thanks again man!
Looking at the Stack Overflow most used technologies http://stackoverflow.com/research/developer-survey-2016#technology-most-popular-technologies. Most popular: Javascript, SQL Server, Java, C#, PHP, Python (then C++, C and Node.js) in that order and pretty much unchanged over the last four years. Beware of asking what is best to learn as a lot of people will shill their own favourite without giving an objective answer. The reality is however that pretty much any of the current popular technologies has plenty support. The more interesting question is where do you want to work. If you want to get a job at a big tech company then err on the side of the C# and Java technologies, if you want to work for a startup then Ruby, Node.js and Python are more likely candidates. There's plenty work in all of them at present though so it doesn't matter too much which you pick.
I did this 4 months ago. Pure .net developer, 3 1/2 years at it and my latest project requires web front end. Now I am almost exclusively a front end developer. I recommend getting a pluralsight account and following the "Become a full stack developer". They use familiar c# backend with asp.net mvc 4, then go through building a web api, also in c#. finally builds the frontend in angular. I also want to warn against learning angular 2 instead of angular. angular 2 is newer sure, and has a lot of benefits.... but few resources. the differences are almost all syntactical and you will find a lot more support answers on stack overflow and tutorials for angular 1. this is also the same reason I recommend asp.net mvc 4 instead of core, sure core is actually quite different but migrating from 4 would only take a weeks learning, might as well give yourself as much support as possible and stick to a slightly older and still widely used solution. *** As a final note I have to say, angular is a TREAT to learn. I used to do DHTML way way back and a little html 4. web development was simplistic and iritating at best. angular completely makes web development full software development. If you add learning the plugin angular ui-router to the mix, a state driven routing platform, you can even design websites modularly and follow basically every oop best practice. angular also behaves a lot like Commands and RelayCommands if you are familiar with WPF/MVVM light development. TL;DR so yeah, in summary: *** * learn angular NOT Angular 2. * learn MVC 4 (Then Core will be an easy migration) * pluralsight is an amazing resource for this stuff (Specifically Shaun Wildermuth,Deborah Kurata and for the more advanced stuff Elton Stoneman) * approach angular like a software development platform, not web development. treat controllers and directives as modules, lean into the practices of IOC, DI and Seperation of concerns, * try to always use directives where possible, not code directly in the controller * and finally, don't use angular ngRoute, use the similar but far superiour and feature filled Angular UI Router. Good luck!
Hi there, really sorry about that - there's a bug in roaming settings in the Preview 4 release that we didn't catch until too late, unfortunately. The very last entry of known issues in the [release notes](https://www.visualstudio.com/news/releasenotes/vs15-relnotes#knownissues) documents this problem and identifies a workaround that should get roaming working again. Thanks for trying out Preview 4! Tim Sneath | Visual Studio Team 
4! = 24 _____________________ ^(Result from) ^[WolframAlpha](http://www.wolframalpha.com/). [^(What is this?)](/r/ExpectedFactorialBot)
Where/Where/How can we start using this? In "15"?
&gt; As a prerequisite, you need to install DNVM and DNX. How old is this?
First commit to github was in Jun 2015, but who knows how long Microsoft was working on it privately.
thank you!! now I can finish this "boss's hair is on fire" boondoggle!
I'm downvoting not because you're answer isn't csharp/.net related but because you didn't answer the "why?".
Not knowing your comfort with modern JS, I would probably say pick up ASP.NET 4.6 Web API and jQuery. Using Web API will leverage your C# knowledge and provide a restful interface for your front-end. Once you're good with that, explore the new ES2015 features and TypeScript. At the same time, you can learn NodeJS for the various webdev and productivity tools. Angular and React have a lot of abstractions that can be daunting. Angular2 and ASP.NET Core are still new and lack many resources. I'll add that a PluralSight account will help immensely in creating a learning path to the stack you want.
%ProgramData% is the correct folder for machine-wide configuration files.
I'm just wondering what the state of that project is if they say you need tools that have been deprecated for months already.
Yeah, it's looking more and more like MVC with Razor syntax is the basis for what I want to do, and then I can figure out how to mix in JS one way or another.
But he wanted a stack that's "not just a fad" ;) 
[They're working on updating it.](https://github.com/dotnet/docfx/issues/361)
What about physically altering (or cleaning?) the button/circuit-board ? Is it a chip you could desolder and replace?
You can click on the menu and go to API documentation and browse the sample output to see what the docs look like. If you want to look at the markup, click on "view on github" and then change the branch to "gh-pages" and you can see the markup behind the dotnet.github.io/DocFX site.
Code School is rolling out .Net/MVC courses right now, great mix of video and interactivity. First course is out now, and free: https://www.codeschool.com/courses/try-net-mvc
You can always go directly to the Facebook graph API for your interactions. My guess as to why those libraries are not maintained: there are many versions of their API, so keeping up was not reasonable.
Thank you for this! Will certainly be checking it out.
I appreciate the extensive reply! I don't think I have ADHD, in the video series linked in the sidebar the guy is just soo... Boring. He talks so monotone and rambles on about stuff. I like hands in so I will do what you suggested and get hands on with it! Thanks!
Honestly if I saw this in a code review I would flip my shit...
I watched [this course](https://app.pluralsight.com/library/courses/aspdotnetcore-efcore-bootstrap-angular-web-app/table-of-contents) and I personally really liked it. 
I'm a novice C# guy but I'll speak for my learning behavior. It's all about pressure. Pressure to succeed from parents pushed me to learn in high school. Pressure to graduate pushed me to learn the course material in college and do practice assignments. Pressure to keep my job made me focus 8 hours a day for 5 days a week intensively to learn the projects I was working on. Basically, I need a fire to be lit under my feet before I took things seriously otherwise I just coast along and put in the least amount of effort to get anything done. It's work well for me so far. Think about why you want to learn c# and go from there. Also, try Pluralsight free trial. Look it up for more info.
I find that having a **project** or a **need** helps. If you sit down and say, "I want to learn C\#," then as soon as you get to a confusing part you will stop and give it up. If you sit down and say, "I want to make a program that emails me when it is going to rain today," then when you get hung up on something you will discover work around, push through it, and figure it out because otherwise you're running out of the office minutes before the downpour with no top on your wrangler...
Focusing is a skill that must be trained. Distraction is the opposite. Everything you do for distraction you will weaken your ability to concentrate. Twitter, facebook, random internet surfing, tv ... Pomodoro Technique is helpful too me. Also keep in mind that learning means doing. In German we say "begreifen" for "understanding". The 1:1 translation is "grasping" or "touching". You have to experience the subject you want to understand. Whatever book or video you prefer, make sure you follow along with Visual Studio from the start.
Do projects. Don't just copy what they are doing in each lesson. Take what you learn after a chapter or two and try to build something unique with what you learned. Use online documentation and only refer to the lesson code if you get really stuck. Otherwise, programming is definitely a passion. As with any tech job, you will need to learn, train, and read about it everyday or you will get left behind.
Exactly what I'm watching!
Can I just ask why you have a ref parameter on a constructor? It seems like a pretty big smell.
Make sure you get the third edition,the link goes to the first one. This is the third edition: https://www.amazon.com/Head-First-C-Jennifer-Greene/dp/1449343503/ref=dp_ob_title_bk
[removed]
Thanks. Still, I imagine most visitors want to see the results before looking more deeply. A link to a demo should be foremost to drop the bounce rate.
Isn't MVC 5 a better option than MVC 4?
OK. So if my installer installer creates a directory in %ProgramData% and sets appropriate ACLs I guess that would be the proper place to keep these sorts of files.
http://i.imgur.com/MWg8sz0.gif
Oh sure [I can totally read that](http://i.imgur.com/NNk7GWz.png)
This constructor for the class takes a `byte[]` and a `ref int`. The int serves as a cursor for the for the array, so that when the object is done constructing from the array, the cursor will have moved however far it needed to. I ***hate*** that design, but I have no control over that part of our code. It isn't as nonsensical as my example code, though.
Get a book and read it. "Heads First C#" is often suggested for complete programming beginners due to its illustrations. Also check out the sidebar in this subreddit and /r/learnprogramming.
Found an ebook a couple of years back which laid out the basics of Mickey$oft's (now obsolete) XNA. This helped me a lot to get the basics of C# and OOP (never did OOP before and thought it was too abstract for me to master). From there on I hopped to Unity3D and dived in their online documentation and tutorials. And while not everything is documented to the fullest, I think it's decent enough for a 'beginner' to get started with C#.
Tips for a C# exam tomorrow with no context about what will be on the exam? How about, good luck?
&gt; The int serves as a cursor for the for the array ... I hate that design Agreed. These two fields are related so closely that they should be wrapped up in a mutable class with a method like `public void MoveCursor(int bytes)` - then you don't need a ref. *edit* also, why do you need reflection? If an IoC container is involved then a custom class to hold these 2 params will be much easier to work with.
I feel you there. Feels like doing docs right always required two separate approaches - one for reference docs and another for the human-friendly articles.
Another vote for Microsoft Virtual Academy, especifically Bob Tabor's series. If you want a book, The Yellow Book really helped me to grasp some concepts when I was starting. Both of these resources are very friendly towards beginners with or without any prior experience.
Its a Microsoft Exam, 70-483 as it says in the title: https://www.microsoft.com/en-us/learning/exam-70-483.aspx Its like a default programming in C Sharp exam. 
I actually think trying out with Unity 3D game development for beginners isnt a bad idea. Beginners learn better with practicing, and the easier they can associate with their practices with useful real life applications, the faster they learn. You can buy such a book that teaches you C# by building Unity 3D games on amazon: https://www.amazon.com/Learning-Developing-Games-Unity-Beginners/dp/1849696586/ref=sr_1_3?s=books&amp;ie=UTF8&amp;qid=1472052401&amp;sr=1-3&amp;keywords=c%23+unity+3d
I think some people are missing the point. It's supposed to be unreadable. :) This controller is nearly 3,000 LOC. Virtually no model interaction. DB contexts galore. Horrific, unmanageable spaghetti. Literally a *picture* of what your controller should NOT look like.
How about a class with implicit conversion to/from string, and a constructor that takes a string?
Angular 1.x made me think this - but Angular 2 and React scare me - they make breaking changes to the shit seemingly every day - how are we supposed to keep on on the latest versions? 
Find something you want to code and go for it. You'll learn a lot forcing yourself to figure problems out. Using a book and google are my favorite ways to go.
Yeah I guess that makes the most sense. Something along these lines: Public Class MyConcreteString { private string _theString; Public MyConcreteString(string theString) { _theString = theString; } public uInt FirstPart { get { return (uInt)_theString.SubString(0,2); } } public static implicit operator string(MyConcreteString s) { return s._theString; } }
&gt; implicit This caused me to have to google this, because I've legitimately never used it so couldn't remember what it does.
Please point out the part where I'm hostile...
In case anyone else sees this that is old information (as noted in the SO comments) 
Thanks for the detailed response, I've always done code first personally and was just curious.
I work primarily in C++ and many of the devs that worked here years ago clearly believed in "God classes" because we have several 7000+ line classes that we are trying to refactor and unit test. What the hell are people thinking when they create shit like this?
University 
I second this because it's very simple to start with and yet very powerful the deeper you go. Also it's very visual too; good for people who like to see the results of their code in action.
Delivered from India, with love.
I'm a seasoned programmer, but about to release my first MVC based server application at work (asp.net core). What should a controller look like? Obviously 3000 line is way past excessive for any method, but that is standard across all programming. Any tips? Side note: Our worst is the main window of our app. Not sure if any method is 3000 lines but 2 are probably probably close in that file. 30000 line file I inherited a decade ago. It should be just the code for the main menu, but it also houses all the code for the most important screen in the app and is embedded in the main form. We are using the Delphi ide and non-visual components on the form show up as small boxes on the form in the ide. This file was used as a dumping ground for datasources etc that are used in other files. There are so many that if i need to mess with an actual visual control first I have to "sweep" all the nonvisual comps out of the way. The only thing i hate worse than working with that file is working with another screen that has such deep object inheritance that the human brain cant comprehend how any of it works.
Many devs have the attitude of "the ends justify the means", where if it works then it works. Move on to the next item to complete. You might disagree and believe "the journey is every bit as important as the destination". Fine. What are the costs of doing things the right way? ....the best practices way? Some cost-conscious shops might not have the time or money to do it the right way.
Did the same thing here made a few small apps that are useful to me, figured out the problems pretty quickly now im constantly building on to a greenhouse management program im creating that links to arduinos and raspberry pi's, pretty fun
I would checkout pluralsght. You get 3 months free with a Visual Studio account. There is a c# track which, I think, covers plenty to get you going.
"C# Fundamentals for Absolute Beginners" is a good video course on MVA.
this is my top suggestion as well, for all the reasons everyone else has stated.
you might want to download/buy a statistics textbook. at my uni we learned applied statistics for engineers. that might be useful!
Maybe this can start you off. https://en.m.wikipedia.org/wiki/Coefficient_of_determination
I am both excited and terrified at how people may use these.
Oooooh yes there is! Thank you. Ill probably end up decompiling and rewriting it.
 public void PrintCoordinates(Point p) { p.GetCoordinates(out int x, out int y); WriteLine($"({x}, {y})"); } Oh hell to the yes. I freaking hate pre-defining all those out*ies* (all of those TryParse , ahem)
So much for the "pit of success" paradigm.
Even better, you don't need all those out-ies anymore: public void PrintCoordinates(Point p) { var (x, y) = p.GetCoordinates(); WriteLine($"({x}, {y})"); }
I must be misunderstanding something. &gt;In Preview 4, the scope rules are more restrictive: Out variables are scoped to the statement they are declared in. And the example: public void PrintCoordinates(Point p) { p.GetCoordinates(out int x, out int y); WriteLine($"({x}, {y})"); } If they are only scoped at the declaration statement, doesn't that essentially make them useless? Or am I missing something? I understand further scope will be added, but this useless as is...
They should be. I'm kind of annoyed that they're mutable, though.
in your use case there where it doesn't follow this pattern if(p.TryGetCoordinates(... And you just tried using it directly as p.GetCoords(... you'd probably need to simply define the out variables first, as you traditionally have. e.g. int x, y; p.GetCoordinates(out x, out y); WriteLine... 
Another PVS-Studio blogspam.
This is great!
I am in the same boat with you, but when I asked this question I was advised to stay away from unity3d until I learned C# better starting with Microsoft Virtual Academy. The reason given was that there are things done in unity that are not so much wrong, but not exactly correct and it will start you on a path of bad programming habits. I started 2 days ago and have made it 50% through C# Fundamentals for Absolute Beginners and have learned better than any other tutorial series I've tried. This is just me though, your mileage may vary.
Removed. Sorry, we have zero tolerance for _any_ PVS-Studio related content after the developers of the tool spammed their content using multiple accounts.
Goodbye `is` and `as` casting cascades.
You can abuse all features, and people **will** abuse features. I've already seen code using expression bodied members for 10 line methods.
Working with legacy code gives me wild imagination, I can write horror novels about the code I see.
But why. Why would you do this. It's more annoying to type. You can't have XML docs for the return parameters. Nothing about it is better. 
This is true, but then again the tuples are capable of having named parameters. In a way, they're more descriptive than a standard return type!
Agreed. And my Calc3/Linear Algebra teacher at CC was in my top 3 teachers of all time. Some of those folks are there because they love teaching and they're good at it.
Yeah, I'm not downloading from that website.
If you want to get deep knowledge of the language and what is behind, the CLR via C# book is perfect. Its not easily readable, but everything is covered.
Looking forward to tuples...
This is why consulting is great - every project is a whole new set of tools! Unfortunately, I don't get to write much code anymore at my day job :/
Well we'll probably get a close look at it nearer to release if it makes the cut. I can't find a good reason not to just create another 2 functions. It could lead to spaghetti code though. Mi5DataLeak.GetX(out int x); Mi5DataLeak.GetList(out List&lt;T&gt; list);
Removed: PVS-Studio content is not permitted on /r/csharp.
I'd think it would be in memory at least temporarily. It could be GC'd immediately, though, as long as nothing in Mi5DataLeak was retaining a reference to it. What would be the purpose of this API, and why would the two parameters be related?
Last time I benchmarked it, that was faster than using an `as` cast and checking for null.
Start by documenting and formatting your code properly.
C# is language, that is always the same everywhere. Mono, .NET, .NET Core are frameworks which provide basic libraries and class implementations. Mono is Linux implementation of what .NET is for Windows. .NET Core is new subset of original .NET that is multiplatform. It has most of the things full .NET has, except GUI and maybe some other small bits. AFAIK Unity uses Mono, so if you want to dive into framework specific territory, you should focus primarily on Mono.
although this is not the case here but i like to mention that you can [divide by zero if you use floats](https://msdn.microsoft.com/en-us/library/6a71f45d(vs.80).aspx#Anchor_0) found out about this [by accident](https://www.reddit.com/r/csharp/comments/4q9wfi/learning_stuff_by_accident_is_the_most_fun_divide/) myself
It is still being created in the method.
`GetXAndList()` wouldn't know how it's being called, and would create the list anyway.
1. Formatting's inconsistent. This may be an artifact from copying and pasting from elsewhere, but it makes it harder to read. 2. LoopFunc() calls TheLoop() and returns nothing, and neither sets any properties of the containing object. 3. Why is max not contained in the scope of TheLoop()? Does it get used by something else? Test running locally, it look like finalList contains int[3] { 0, 0, 0 }, int[3] { 0, 0, 1 }, int[3] { 0, 0, 2 }, int[3] { 0, 1, 0 }, int[3] { 0, 1, 1 }, int[3] { 0, 1, 2 }, int[3] { 0, 2, 0 }, int[3] { 0, 2, 1 }, int[3] { 0, 2, 2 }, int[3] { 0, 3, 0 }, int[3] { 0, 3, 1 }, int[3] { 0, 3, 2 }, int[3] { 0, 4, 0 }, int[3] { 0, 4, 1 }, int[3] { 0, 4, 2 }, int[3] { 0, 5, 0 }, int[3] { 0, 5, 1 }, int[3] { 0, 5, 2 }, int[3] { 1, 0, 0 }, int[3] { 1, 0, 1 }, int[3] { 1, 0, 2 }, int[3] { 1, 1, 0 }, int[3] { 1, 1, 1 }, int[3] { 1, 1, 2 }, int[3] { 1, 2, 0 }, int[3] { 1, 2, 1 }, int[3] { 1, 2, 2 }, int[3] { 1, 3, 0 }, int[3] { 1, 3, 1 }, int[3] { 1, 3, 2 } Is that really what you *expect*? Because it doesn't *look* right. ETA: I think this does what you actually intend, where results winds up with what's supposed to be in finalList (as a two-dimensional array instead of a list of lists): var size = 1; for (var i = 0; i &lt; SuperList.Count; i++) { size *= SuperList[i]; } var results = new int[size, SuperList.Count]; for (var i = 0; i &lt; results.GetLength(0); i++) { for (var j = 0; j &lt; SuperList.Count; j++) { results[i, j] = i % SuperList[j]; } } You could torture some LINQ to this end, but I don't think results would be particularly readable and definitely less efficient.
Do Analyzers already work in .NET core? Or outside of Visual Studio?
Disclosing where you live will help with answering this question.
thanks for your feedback. 1) yes it was a big code and i copied the two functions and tried to fix it the best i could but apparently i failed, sorry for that. i am still new to c# and github. i fixed it again though. 2) LoopFunc() calls TheLoop() inside of the List.Add() func so the returned int[] is added to the finalList and as for properties i don't know what you mean but i pass in the finalList[i - 1] as its input variable. 3) yes max is also used in someplace else (not here but in my own code) - yes i am looking for this output. i tested the code with different numbers and it looks to be giving the right answer. i am generally looking for criticism like this to try and improve myself.
Heck if I know, but that's a pretty fair point.
I would say that for learning web dev skip the JS framework initially and just go with MVC Razor. Razor is mature and chances are if you're in a .NET web role you'll need to know it. It also keeps you on the same platform and you don't have to worry about grunt, gulp, npm, etc. to get something working. When the time comes to learn JS frameworks I would really struggle to recommend Angular 1.x or Angular 2 at the moment. 2 isn't mature enough and 1.x will eventually fade into obscurity. React is relatively mature and isn't going anywhere anytime soon so I would probably go with that. 
Port your project to MonoGame and you can use the latest features.
I live in CT. But I do not plan to live here
&gt; In addition, from what I've heard, it is difficult to get career in this field and the salary may not be great... Well, sure. However, it is still easier and pays more than most other career options. Unless you live in the Bay Area or the Big Apple, you should be making at least enough to afford a one bedroom apartment for one person rather easily. As for 9-5 in the office, that is something you won't be able to avoid unless you work part-time. But even so, programming pays rather decently part-time. The average full time salary for devs in the US is around $90,000. Even half of that is still decent money in most of the US. 
Hi this was my path to success coming from the same background: Asp.net mvc Pure javascript basics 1 week; Javascript, jquery, Ajax 3-6 months; Js closures and objects to represent a full front end approach 6 months; Realize I've been doing things the hard way and start using angular. The path was necessary to truly understand angular and how it works and to appreciate the types of problems it solves ellagantly. No more returning models to a razor view, handing off that clunky behavior to a more organized framework where you use web apis instead. Edit: I also want to add that I've been using azure web apps and sql server with almost no issues.
[removed]
If you're thinking of posting your content to /r/csharp, please familiarize yourself with [our subreddit's rules](https://www.reddit.com/r/csharp/about/rules), and Reddit's general guidelines regarding [self promotion](https://www.reddit.com/wiki/selfpromotion) and [spam](https://www.reddit.com/wiki/faq#wiki_what_constitutes_spam.3F).
Not a problem at all. I really lucked out, as only one other developer works from home. I worked for a company in Houston that had a SAAS/PAAS company for their field service software. I worked on the companies configurations and was the software's main point of contact. Over about a year I built a rapport with the company, who was in Cincinnati. I accepted a new offer in Houston, and told the company in Cincinnati I was leaving. I jokingly said they could make me an offer, and that day heard from their CTO. I've been contacted by recruiters a few times in the past few years. Most companies seem to offer one or two days home. I did get a call about a full time from home job, but I was buying a house and couldn't switch positions. So I guess I don't really have a good strategy in getting a full time from home job. I got lucky. Keeping in touch with recruiters and keep an eye out for remote positions.
I imagine the semantics would work exactly the same as calling a method and ignoring its return value. It won't save memory (the method itself will still allocate the large collection) but the collection would be garbage collected slightly earlier than usual.
I'll chime in from a different side. I just started programming as a hobby and a way to further understand the products I'm selling (I'm in sales in the DFW, Texas area). Most of the people at my work get paid well, could work in many other companies in the area, and never seemed to be super stressed other than when the client is pushing timelines. Overall, it's a great career that's extremely stable. The only thing that I would say to remember is that it's hard to move your salary consistently upwards (at least from what I've seen, hopefully someone can chime in on this). I'm currently 26 and make 6 figures and every year my income goes up, and I also get to be more client facing which is a ton of fun. Have you thought about doing a dual degree for business and CS? If you could be a technical sales person/account executive you wouldn't be behind a desk all day and you could still talk the talk while functioning in a bit of a different role. After only maybe 3 or 4 years experience of doing an Account Manager/Account Executive/Sales role you will easily make 100k+ and be close to 80-100k on your base alone plus commission.
So just networking then, gotcha :) Unfortunately I suck at that. Thanks!
&gt; Now I am second guessing it, I am not sure I really want to sit in a desk all day coding. You'll change your mind soon enough. Professional programming isn't about sitting at a desk cranking out code. That's part of it to be sure, but as your career progresses you'll find yourself spending more and more of your time talking to people. I'm to the point where I'll go weeks at a time without actually writing code. Even when doing "agile", the planning process for a major project can take weeks or months. I need to know what already exists, what the customer can afford, what the users need, what the other teams can provide. None of this can be done when I'm hiding at my desk. But hey, the money is good, the hours are acceptable, and the tools I use get better every year.
&gt; var (x, y) = p.GetCoordinates(); As posted above. 
On a sidenote, .NET dev working at Microsoft is like paradise come true. Get to do really exiting work, flexible hours, shit ton of money and get to be surrounded by brilliant people. So OP, that might be another angle you could follow. If you're good at coding, it's really not that hard to get in.
Aren't tuples already in C#? I'm sure I've used them before myself... Unless I'm confusing my languages?
&gt; yes i am looking for this output Are you *sure*? Because it looks like it's generating the size of the result set on the assumption that indexes will run from 0- (*n* - 1), and then generating the values in the result set based on indexes running from 0 - *n*. I think your &lt;= in `TheLoop()` should probably be just &lt;. &gt; 2) LoopFunc() calls TheLoop() inside of the List.Add() func so the returned int[] is added to the finalList and as for properties i don't know what you mean but i pass in the finalList[i - 1] as its input variable. * finalList isn't returned from LoopFunc() and isn't stored in a field or property of the containing class. * max gets set, but is never reset (which will cause the next call to this function to blow up, FWIW.) * LoopFunc() returns void, and has very few side-effects. This looks sort of pointless, as written. If LoopFunc() returned finalList, whatever's calling it would have access to the list of results and to the size of list from the Count property on List&lt;T&gt;. &gt; 3) yes max is also used in someplace else (not here but in my own code) If you return the result set, you shouldn't need a separate value for the size, it's available as a property of the list or array. If you aren't going to return the result set, you could just return the size, instead of storing it as a value on the containing class.
Programming Microsoft Asp.Net MVC by Dino Esposito. It's a little long in the tooth now, but rather than just telling you the HOW it spends a lot of time on the WHY. I found it a really excellent resource when getting to know MVC from the ground up. If you're going down the MVC hole, I'd also recommend learning Bootstrap (Twitter Bootstrap - responsive web CSS/Javascript framework) as that is integrated from the get-go in the default MVC templates. Once you've got the basics down, you then need to look at the client-side javascript frameworks that everyone is using to build web apps these days - angularJS, reactJS etc. Don't start there, though, or your mind will be blown.
Is that Canterbury?
If you're in the right department. Unfortunately, there are plenty of artifacts from the old and clunky Microsoft era (before Satya Nadella). The old Microsoft review system was one of the most toxic problems with the company, which practically encouraged backstabbing and a lack of teamwork. If you're unlucky, you can get put into a department headed by some of the people who were proponents of that, or are still accustomed to that mindset. For the most part though, the company is fantastic, especially in the cutting edge fields. (Xbox, Office, Windows, etc.)
The existing Tuple types are 1) reference types and 2) cumbersome: the fields can't be given meaningful names, and to create one: Tuple.Create(value1, value2, value3, /* etc */); On the upside, they seem to be immutable. (It's also obnoxious to get at value8+ if the tuple has more 7 fields, but that should probably be regarded as a sign that you're doing it wrong, anyway.)
I've had good and bad jobs. But I make a lot of money and I find it rewarding. 
Move to Seattle. It's cheaper to live here than the SF and there's huge demand for Developers. Microsoft, Google, Amazon, Apple and about a thousand smaller companies are all here actively competing for developers; and they all know how important it is to grab the new talent and "grow" them. You'll start out at $80k + benies and move up. If you make your way to the Senior or Principal equivalents then you can be pulling down $250K a year. Obviously the best way to get into the business is go to school, have a related major, and make connections while being an intern.
I'm honestly not 100% sure yet. I feel web development would be more financially prudent and would give me the opportunity to work remotely. However I feel I would be more satisfied with software development, and may correspond more with what I envision doing. That being said I just don't feel like I know enough of what's involved with both paths, and am trying to learn the basics of both to help determine which would be a more pleasing career. 
This is what I'm most excited for. Fucking interstitial objects all over the place, making me mad. 
Font color not contrasted enough; couldn't read it without straining. :(
That was in 6 wasn't it?
&gt;Are you talking about .Net Core Maybe? I've seen references (in the same article even) to both. From what I understood they were different implementations of the same thing and the 5.0 version was supposed to be more .NET4.x friendly, but maybe I read it poorly 
If LoopFunc() is called twice, max doesn't get reset to 1 in between. In the second call, I think you will get an IndexOutOfRangeException (I did, when I was running it locally). It sounds a lot like you've removed a bunch of context here that is critical to making sense of your code.
Look into WebApi programming.
* No job postings (For Hire or Hiring) - check * No malicious, intentionally harmful software - check * Posts should be directly relevant to C# - check * Request-for-help posts should be made with effort - not applicable * Do not frequently spam your own blogs or tools - (one post ever) check * No spam of tools/companies/ads for financial gain - check * Blogs must be made with some effort and quality - it's a video, so check * No hostility towards users for any reason - check So, which rule did this post break?
That is my assumption, also.
Sorry for not being more clear. It hasn't broken any of them yet and I have not removed the post, but clearly the account is intended to promote the "CSharp Developer" YouTube channel. I'm giving them the heads-up that they should not intend to frequently or exclusively submit that YouTube channel's content (Rule 5), and that they should also be aware of Reddit's position regarding self promotion. In retrospect, perhaps I should have fired this off as a private message.
So do I, really, but it's keeping an eye out for the right opportunity. I worked for a bank IT department on their online banking system. I left the bank for another job and hated it. So I called my friends at the online banking vendor who sold the bank their platform. This company was on the other side of the country, but they had trained me, and they knew I really knew my stuff. I said, "Hey, can I have a job? From home?" and they agreed right away. A few years later, I joined Microsoft as a Premier Field Engineer, which is a role that does a ton of travel all the time, and most PFEs work from home when they're not on the road, so me continuing to work from home wasn't an issue. A few years after that, I applied for another job in Microsoft, but this job was based in Redmond. Again, I said up front, "Hey, I think I'm really qualified for this job, but I need to work from home. Cool?" And they agreed to interview me on those terms. I'm still in that job today.
Oh ok, that sounds fair then. I honestly was confused.
Haha, yeah. Azure/.Net too
IMO read this first: http://www.joelonsoftware.com/articles/fog0000000069.html then decide.
Removed: Rule 3. Seems as though that's a Raspberry Pi discord group, and there's already a C# discord group in the sidebar.
Here are things to think over: 1. You will never be able to stop studying. New things are constantly coming, and it is impossible to tell which will take off -- but they keep coming anyway. If you like research and building things, the field is great. 2. 2 languages ... that is a good start. You'll start getting comfortable after you learn your first 6 or 7. Be sure to learn SQL next. If you want to stay away from UI (web), you need to know backend technologies well. SQL is critical. And designing a good database has no relation on designing good OOP code. Separate skill. The art is melding the two together seamlessly. 3. Think your code is good? Find someone to review it for you (preferably someone who has done it for 10 years or so). Be prepared to cry, but really just try to listen. 4. Next steps: "Algorithms and Data Structures" and "Design Patterns"
The GC is allowed to collect anything as long as it's not referenced any more; scopes do not matter. [Here](https://ericlippert.com/2015/05/21/when-everything-you-know-is-wrong-part-two/)'s a blog post by Eric Lippert on the subject, with a simple example; he also wrote about a [truly crazy example](https://ericlippert.com/2013/06/10/construction-destruction/) where the GC can run an object's destructor while its constructor is still running.
Development in general is a good career path. Learn more than one language.
The pay is very good. You will start off making 50k and eventually make six figures but then top out unless you go into management. But it's a web world out there. You may consider game dev. But working 9-5 is corporate. If you want a lot of money and not have a corporate job then go into sports, medicine or law. 
Return ref is one of my favorite new features for exactly this reason: &gt; For instance, a game might hold its data in a big preallocated array of structs (to avoid garbage collection pauses).
"Once all the requirements are known and agreed" ^ he lost me here. That isn't real life. Things change on all software projects. 
dude thats awesome. how good did you have to be to get a job with microsoft? i love .net c# so i can imagine working on it is exciting
The C# bloat continues. Why can't an OO language just be an OO language? It's fine to throw a few functional elements in. But one size fits all just doesn't make sense. Tuples that are mutable? Sigh.
It's just the culture. Nobody gets a promotion unless they're already doing all the duties of the higher position. They're don't emphasize writing detailed specs, so the devs often end up writing a lot of throwaway code that could have been avoided with better planning. They've made a name for themselves, so they don't worry too much about burning out young devs, there are plenty more ready to replace the last guy. 
Did you see my edit? It'd be easy enough to maintain this data set in-memory, loaded statically once per app-domain, and just perform dictionary lookups. No database access needed.
Salary not great? Six figures too low for you?
It's a good solution, but I'd still need hit the DB to see if a given name was correct. I may have to fall back on it anyway, as I've just found that at least a few of the employees' information doesn't properly conform to our current standards and there's no hope of fixing it on that end without breaking records or our service contract. As I write this, I realize a viable solution would be to use the hashing code to generate a static mapping for existing entities, and only touch the DB if a query isn't cached... Or travel back in time and make the ops guys not alternate between legal names and nicknames randomly. Currently I can just grab their domain credentials, use that to get their exchange information, and run an unindexed (yuck) query to get their employee code by smtp address. It works... 
Pretty good! You have a typo in your ToolTip for the "copy to clipboard" button: ToolTip="Copy to clipbopard" Maybe make that message dynamic as well, for us non-english speakers?
Would you mind elaborating or pointing me towards a reference if you know of one? Currently my (Xamarin android) project is using properties defined in various json files, and depending on the environment I've written an MSBuild script to rename these files - it's not pleasant. I've thought about using compiler directives but discovered that they don't work in PCLs. Would you suggest making a class outside of the PCL or are the ways you mentioned above neater?
Learn SQL - all data access ends up being sql-like at some point and all programming ends up being data access. Knowing databases will make you a lot better as a programmer, even if you end up using an ORM.
Knowing programming is very useful even if you don't end up being a programmer. Since you learned programming at an early age I'm going to guess you probably have an aptitude and interest for STEM too? (Science Technology Engineering Mathematics) If so, know that all those fields benefit from a good understanding of programming. Its a real force-multiplier, makes you so much more useful as a biochemist, engineer or whatever. 
Well, for a "classic" technology, the project has built up quite a big user base now, and there's still plenty of work to do!
Hey man, we use this in a new project and business folks just love it! The new expander looks pretty cool. Gonna replace the existing one with this one. Thanks for this awesome library.
Thanks for the feedback...hope your app is looking good! :)
The framework is just wonderful. Really helps a small time freelancer present a great looking app. 
$80,000 in Atlanta, I could live about 20 miles south and have a NICE house. Look up what a $325,000 house looks like in McDonough, GA.
I spent 50 bucks on a 16 hour video course by questpond, money very well spent. I skimmed a couple of textbooks but found it easier to pick up practical skills watching someone code and explain it.
It is possible that the operation is expensive and generates both parameters as a side affect. The author of the api might have to choose between: * offering one method that provides both variables * offering 3 methods, one that gives both and one for each independently In the latter case, if a user were to use the two separate methods for whatever reason, they would incur a performance penalty (vs using the method that provides both). Wanting to avoid this potential pit of failure, the API author might decide to only provide the single method.
[removed]
[removed]
[removed]
[removed]
Oh jesus christ more spam! Can we do something about this please? How about making it so anything with 0 or -1 votes is hidden/removed? Another one, can you get auto moderator? I've noticed these low quality bad practice spam videos almost always have shitty english in the titles eg "csharp". Another phrase you could add to the delete list is "for beginners" because that seems to be a popular spam phrase too. PLUS pretty please make it so only accounts that have maybe x amount of comment karma (comment karma, to prevent accounts that only spam links). Another way would be to not allow accounts that are only a few days old to post at all. For example, the OP is clearly a bit of a dick as his "csharp_developer" account only has two posts, both to this sub! And the account is only 1 day old!!! Please /u/FizixMan consider some of these, I honestly think this sort of spam is detracting from the sub. EDIT: And would you look at that! Not even a minute after I posted this the fucking reddit account has been deleted! In an attempt to hide the fact it was made purely for spamming this sub. I would honestly straight up start banning any account that posts to that youtube channel.
I'm 28 and have been working in software development for 7 years, 2 years of school before that. I work for a municipal government. The pay is above median for the area I live in for sure (~90k canadian). It affords me a fairly comfortable, middle-class life. The work-life balance is good, I only weekdays and get every second friday off. I do work 8:30-4:30 each day in an office. Most good paying IT jobs are going to be like this. It does get boring though. If I had the benefit of hindsight when I was getting out of high school I think I would have went into mechanical engineering or something similar.
WOW! beautiful. can we please add ability to manage windows services!?!?!? maybe incorporate a log viewer (tailblazer?) somehow??? please please please edit - saw on git that plugins are possible. this is so nice.
So have you gotten rid of TeamViewer yet? I think this is even better than TeamViewer in some respects, and gets close to Soluto for supporting people's computers (Love the information visible!). The only trick is needing to open up/forward a port to get into the computer. 
This is really great to hear. Too bad there's some holdouts, but there always are.
I should update the plugin documentation sometime this week. Windows services are planned with the next major and i will add the ability to view logs from the client 
Look up WPF tutorials for creating Windows GUI apps. 
excellent, this may become a great utility at work another thing would be the ability to reorganize/resize the bits in the UI (widen the task manager) collapse the menu bar etc..
Was there an earlier account that also posted to that particular YouTube channel? To be honest, while the channel had beginner's content, the videos themselves weren't _that_ bad. Clear English, short, and to the point. I didn't recall seeing any of their content posted here before (but my memory isn't perfect), so I gave them the benefit of the doubt, hence the [warning](https://www.reddit.com/r/csharp/comments/4ziyit/roll_a_six_sided_die_6000000_times_6_csharp_for/d6w7ns1) so that they may make a positive contribution. Thank you for the suggestions. We do have auto-moderator but so far use it to remove submissions from known spammers of specific domains. (for example, the ever persistent PVS-Studio -- which recently had _additional_ automod rules added) Not sure about deleting/hiding 0/-1 votes automatically. If you don't want to see those, is it viable to stick with the "Hot" sorting? (I know this isn't perfect as the algorithm does put 0 vote posts there sometimes, but for the most part the submissions that appear there are positive votes.) As it stands, there are no particular rules about prohibiting "beginners" content here and I think it's still a good thing to have people learning be able to ask questions. But perhaps we can add a rule that would be along the lines of prohibiting tutorials/videos/blogs that would be suitable for beginners/learners (like this one of "how to do a loop"), but still allow self-posts of people asking questions? Any such content for beginners should be disallowed assuming that most (all?) newbie users will already self-teach or be taught these concepts anyway? I think I'm OK with that. We can also possibly add a rule requiring some level of comment participation or non-affiliated link submissions before you're permitted to link to your own content. Let me know what you think, and we'll draft some rules and make a sticky post asking for feedback.
If you're new in UI programming, I would advise you to look at Windows Form (also referred under the name "WinForm"). WPF is great (it's the new standard) but a bit more "complex" for a newcomer in this particular field. 
It seems you are talking about GUI's, specifically for windows.
Do you have any plans on porting this to UWP?
Where do you work? 
With Visual Studio it is almost creating itself. Others already mentioned 2 options. WinForm and WPF. And I agree that WinForm is enough in most cases.
First, understand that char is a c# keyword that is an alias for the System.Char structure. The [IsLetter](https://msdn.microsoft.com/en-us/library/yyxz6h5w(v=vs.110\).aspx) method of the Char structure is static, meaning that to invoke it, an instance is not required. The code you have marked as WRONG SYNTAX is incorrect because you are treating it as an instance member method. The second code sample, which is correct, is invoking the static IsLetter method on the char structure. 
Any chance for styled tab controls/tab items without using 3rd party controls?
You don't need to call ForEach() to add each element to a new list. ToList() will create a List containing the elements returned by OverlapCircleAll(), so return Physics2D.OverlapCircleAll(transform.position, GravitationPullSize).ToList(); is probably sufficient. Further, List&lt;T&gt; has a constructor that takes an IEnumerable&lt;T&gt;, so you could also do something like return new List&lt;GameObject&gt;(Physics2D.OverlapCircleAll(transform.position, GravitationPullSize)); And, if you must add those elements to an existing list, List&lt;T&gt; includes an AddRange() method, that takes an IEnumerable&lt;T&gt; and adds all of the elements in it to the List. result.AddRange(Physics2D.OverlapCircleAll(transform.position, GravitationPullSize)); So, yes. There are multiple better ways to get a list to return. As a stylistic thing, List&lt;T&gt;.ForEach() doesn't really do anything that can't be done in about as much space using either the for or foreach loops, and is probably less readable. See [here](https://blogs.msdn.microsoft.com/ericlippert/2009/05/18/foreach-vs-foreach/) for Eric Lippert explaining why there's no IEnumerable&lt;T&gt;.ForEach(). ETA: Last thing. Assuming OverlapCircleAll() returns an IEnumerable&lt;T&gt; or something and you don't *actually* need a copy of whatever it returns, it may be worth doing a wee bit of type sniffing, in case it already spits back a list: var result = Physics2D.OverlapCircleAll(transform.position, GravitationPullSize); return (result as List&lt;GameObject&gt;) ?? result.ToList(); If the result is already a list, this would just return it as-is, and would copy the results to a new list otherwise.
 return Physics2D .OverlapCircleAll(transform.position, GravitationalPullSize) .Select(x =&gt; x.gameObject) .ToList(); Should do what you want without having to create the intermediate list manually. E: to explain what Select does, it's called Map (as in Map-Reduce) in other languages. It lets you map elements of one list to elements of a new list by applying some transformation to each element in the original list and storing the result (conceptually) in the new list. In this case that transformation is just using one property of each element. 
&gt; myString.IsNullOrWhitespace(); // ought to be correct :) I really wouldn't write extension methods that can take `null` as a valid argument. Extension methods appear like instance methods, and you can't call methods on `null` instances.
He's just saying that it's not a good practice (arguably), not that you can't.
Yes, I have plans, but various things holding me up at the moment...
Yes, I'm now sitting on a lot of code across Dragablz and MD in XAML. I've got a lot of support/contributors, but ultimately I just want to support Dragablz for the TabControl to keep the code down. But, Dragablz does have two alternate Material Design styles (coloured or light/dark) and lots of other goodness :)
Just be advised that getting too into winforms will make it tough to transition to wpf later
&gt; With desktop development, you write your code for one specific compiler. You compile your code, you serve it up, you're done. And then you do it again for OSX, then Linux, then you start investigating that mysterious bug that only happens with a specific version of the VC++ redistributable on Windows 8, but not 8.1. Then you have to figure out why the uninstaller doesn't work for users that *removed* a service pack after installing your software, why your signed assembly won't install in the GAC when a certain group policy is in place, why you get libc binding errors when installed by RPM but it works fine with apt. Oh, and you have barely any logs to help you debug. Good luck! Having done both desktop and web development, web is easier *by far*. Like, not even close. 
&gt; is static, thus is is not actually part of the Class It is part of the class and not any of the instances
Thanks. How would I use an inline if statement with this? The condition would be based off of the gameObject value.
I think it works like this: * You write fo * It suggests for, foreach etc.. * You go to foreach with down arrow. * First **tab** just writes **foreach** because you may want just the keyword. * Second **tab** completes snippet with necessary syntax for a foreach loop. I guess it's like this to avoid unnecessary unwanted text in some cases where you just want the keyword. And it just takes less than half a second to tap tab again. I don't think you can change it though MS themselves tell how to use, the same way: ["Press TAB, TAB to invoke the code snippet"](https://msdn.microsoft.com/en-us/library/z4c5cc9b\(v=vs.90\).aspx) I'm just trying to make sense of why it is the way it is.
Winform seems easier. Thanks.
Yeah, I don't know the words, which is why I used such lengthy sentences to describe.
Yeah, it is just for the sake of being easy on the eyes. I don't see why I would have to use WPF. (Besides, I don't want to study beyond the minimal requirement.)
Take a few days and carefully read this free e-book: http://www.albahari.com/threading/ It's nicely written and very comprehensive.
Though it might be a fun exercise to learn threads, you shouldn't actually need it for the game you describe. Just have a main loop and have it execute shouldBabyPoop(), shouldBabyCry() etc in turn. 
Seriously, what's with this attitude nowadays? "I want to do A, but I don't want to learn how to do A! Just tell me how to do A!"
Sorry, yeah. Thanks for the correction.
Threading is involved in what you want. And I gave you the best e-book for this to learn it. But you refused it.
PlA, cs iq, 100%.
Yeah, I missed the call to the gameObject accessor; my apologies. In each case, though, tacking the .Select(x =&gt; x.gameObject) call that u/Thornsten suggests fixes that. There's no reason to create a list to iterate through it to add a property of each object to a new list. You could even just use a foreach loop, and skip the LINQ entirely: var result = new List&lt;GameObject&gt;(); foreach (var x in Physics2D.OverlapCircleAll(transform.position, GravitationPullSize)) { result.Add(x); } return result;
Is the if statement used to decide whether to include the gameObject in the new list? Then /u/a_ctor has the answer: .Where(x =&gt; x.gameObject.Something == somethingElse) .Select(x =&gt; x.gameObject) If the if statement is to decide how to transform the element you can just pass a function: GameObject ToGameObject(Collider2D source) { if (source.gameObject.SomeCondition) return source.gameObject; else return new GameObject(); } Then your Select would look like .Select(ToGameObject)
If you store the data on your local machine, why would you care when the program is copied?
I think Valve would be my dream, though I don't know what they take in terms of languages. I would assume Microsoft is good for .NET though.
You can try to fingerprint a PC by various properties (e.g. HDD serial numbers) and refuse to start if they don't match. This wouldn't be very secure however, a somewhat knowledgeable attacker could patch the executable to remove the checks. One sensible way would be to encrypt the sensitive data with a key stored only on authorized PCs. But if the application can be stolen from your machine, the key could be stolen too. Have a look at [ProtectedData](https://msdn.microsoft.com/en-us/library/system.security.cryptography.protecteddata(v=vs.110\).aspx) for example. Another option would be to encrypt the data with a passphrase that needs to be entered every time you start the application. If implemented correctly (e.g. AES with bcrypt), this would be secure unless your PC is infected by malware such as a keylogger.
SQL is not mandatory unless you are the main database guy, and JavaScript isn't mandatory either. Entity Framework can interact with the database on a basic level - you won't have to write any SQL to create, update, delete and insert new records to an existing database table and you can create tables graphically on the database side. However, if you learn SQL, you will be able to optimize these operations with stored procedures, create triggers e.t.c. You will also be able to validate data on the database side rather than in the application (the website). This is good because if you make a mobile app to access the database, you don't need to repeat all your validation since you already centralized it in the database. JavaScript, whilst not mandatory, is very useful. If you want to modify the document (web page) at any point once it leaves the server, you will need something like JavaScript to do that. One example is animations, or validating a form by changing the colour to red/green to signify error/success (though MVC can actually do this without you writing JS by using attributes). If you have time and you think you might be interested in it, I think it would be a good idea to learn JS and SQL (T-SQL for Microsoft SQL Server). If you have more time, take JS further and learn jQuery. So it's not mandatory to learn either, but I would say it's ideal. The more you know, the better I think. Not sure what you mean by network, but I hope that's helpful.
If you have internet access, I suppose you could set up some sort of licensing scheme.
Some of it is stored in the assembly. I could try to encrypt it, but it still would expose things when it's running.
Thanks for that; I think I was a little confused about what I wanted. I really only need to encrypt two strings, which are credentials. If the key to decrypt those is only present on the appropriate machine, then everything should be fine. Thanks for the link for ProtectedData. Would you happen to know any good guides?
Yes. I know it's not ideal, so I'm hoping to rectify that. I've only done it because the application isn't being shared with anyone. /u/tweq has linked me to ProtectedData so I'm going to check that out. I've realized now that I just need to encrypt this data with a key that's only present on the appropriate machine, so I'll try to learn how that works.
Obfuscating the assembly will not prevent even semi-experienced people from reading your sensitive data.
Need to redraw the map. You got north and south, east and west. Midwest and mideast. 
DPAPI encrypts the data you pass it with a randomly generated key stored specifically for that machine/user profile (depending on the `DataProtectionScope`). Decrypting the data on another PC/user profile won't work because they don't have the key. However, a knowledgeable attacker with access to the system (e.g. an administrator account or taking out the hard drive) could extract the key, but there's not much that can be done against something like that.
Pressing **tab** or **return** will insert the highlighted snippet, subsequent **tabs** change which snippet parameter you want to edit. Press **return** to complete the snippet. If there are no snippet parameters then one **Return** will complete it. The functionality can change depending on what language you are using and may provide options. Particularly with the way IntelliSense Completion works.
With the ProtectedData class, you don't have to worry about key management. It generates a key for you. Those examples are using DataProtectionScope.CurrentUser to encrypt the data so that only the current user can access it. If you want it to be restricted by machine, you just need to change it to DataProtectionScope.LocalMachine. This will allow any user on that machine to unprotect the data. You're not going to be able to encrypt/decrypt the data that's stored in the assembly unless it's already encrypted. Whatever is in the assembly when it's compiled is what you get. You should consider moving any sensitive data out of the application itself. Then you can encrypt it and store it in a database or even a text file. Then when you need it, read the data and decrypt it.
Method names are of course stored in the assembly and can be retrieved with various means (e.g. reflection and decompilers, or even just an ordinary hex/text editor).
That isn't really the purpose of the DPAPI, you need to encrypt the data on the system where it will be decrypted. (It might be possible via user profile roaming and impersonation, but that's probably a lot more trouble than its worth). You could ask the user to enter the data on the first run on the production machine and protect it there. If that isn't possible/desirable, you'll need to manually handle encryption and key distribution.
Interesting. Well since the production machine is mine, I do have visual studio installed for occasional testing. So it sounds like I should just compile it on the production machine and everything will work that way? Also, do you know how I would encrypt and decrypt it with my own key instead? For education purposes.
[removed]
[removed]
What the actual f.....
 instead of arguing that people should code the slow path because they are too stupid to handle the fast path, we should be helping developers be smart enough to handle the fast path. intelligent use of structs is very easy and the cases where they can dramatically improve peformance are extremely common.. intelligent use of unsafe isn't much harder though appropriate use cases are rarer. advising people to be willfully ignorant and slow wastes user time, wastes money, and wastes batteries.. we can do better.
The variable mouse is already defined as a parameter to the method. You can't declare another variable in the same scope with the same name. :)
Was it declared in one of these lines? : /// &lt;param name="mouse"&gt;the current state of the mouse&lt;/param&gt; public void Update(GameTime gameTime, MouseState mouse) For the life of me I can't find a place where I declared it before now. At least not in the way I was instructed with the MouseState mouse = Mouse.GetState(); method. 
A blog post from 2009, that's random.
Basic facts, mid east.
AES with bcrypt? Am I missing something or are you mixing two competing encryption standards here?
Why not just store your "secret" in an encrypted text file? If it has to be embedded in the DLL, add it as an embedded resource.
Is the Update method running in a loop? If you don't have it in a loop, or you haven't attached the method to an event of some sort, the code will run 1 or fewer times. I don't really have any experience with XNA, so I can't offer any framework-specific information, but my guess is this is the problem. To debug it and find out, drop a couple Debug.WriteLine(mouse.X); calls inside your Update method, and then watch the Output window in Visual Studio to see if it's printing anything. If not, that's your problem. If you're still having issues after that, send me your project code, and I'll take a look.
Maybe programming is not for you.
I guess I was thinking about Blowfish, the algorithm behind bcrypt. 
There's the Discord chat room for C#, lots of helpful people. https://discord.gg/gqnA4wy
[removed]
This did it. I hadn't yet written anything in the Update method of the main Game1.cs file. As soon as I dropped it in, everything worked fine. [You can take a look at the finished product if you like :)](https://www.youtube.com/watch?v=HKY6M56KSDI) Well finished for this increment anyways!
Thanks :D
You can use Java. Last big addition there, if I'm not wrong, were lambda functions?
I don't know what it is but Indians honestly are the worst programmers, period. Same for indian software testers. 
&gt; Besides, I don't want to study beyond the minimal requirement A real go-getters attitude right there!
A controller should be the most minimal class in your whole project. It should literally control more complicated services etc by simply calling methods, and there should be very very little logic if any. All the complex stuff should be handled by services/managers whatever you want to call them that get injected (dependency injection). So for example if I had an account controller with a login method I would expect to see something like: * call security service LoginUser method * if that returned true then send HTTP OK back and redirect to users page * if that returned false return HTTP 401 not authorized and redirect to error page And that's pretty much all you should have in the method. Need to do complex logic and things? Write it in a service and call that service from the controller. Does that make sense? Of course, things such as logging are ok to have in the controller. This is because in the controller constructor you should have one or two lines to initialize a logger (hopefully by having the log manager injected) and then in every method you want to log you would only have maybe one or two log events I suppose.
Keep in mind that anyone with access to copy said program, will have access to the same data used to generate the key. 
... And I just noticed I missed the accessor, *again*. FFS.
[removed]
If you indent you code by 4 spaces it will be easier to read on reddit
I fixed your code formatting. Please be aware that if you're asking for help, nobody will want to help you if you don't help them. class CPub : IPub, IMsgReceived { public event EventHandler&lt;int[]&gt; MsgReceivedEvent; public void MsgReceived( int[] data ) { OnMsgReceived( this, data ); } protected virtual void OnMsgReceived( object sender, int[] data ) { //Checking if event is not null then MsgReceivedEvent(this,data); } //Many other functions are present in that class } class CHandleMsgs { IMsgReceived m_iMsgReceived; public void ProcessMsgs(int[] data) { m_iMsgReceived =new CPub(); //Can create it somewhere else too.its for example only m_iMsgReceived.MsgReceived(data); } } public class CSub { IPub m_iPub; public CSub() { m_iPub = new CPub(); m_iPub.MsgReceivedEvent += OnMessageReceived; } private void OnMessageReceived( object sender, int[] data ) { //Do Something with data } }
As for a solution - you're creating new instances of `CPub` in both `CHandleMsgs` and `CSub`. `CHandleMsgs` is creating one instance per invocation of `ProcessMsgs`, which is almost certainly the wrong thing to do. So of course you're getting a null event, because you have two separate instances of the class, one which is being provided data, the other which is being provided the event subscriber. Change CHandleMsgs and CSub to take a CPub instance in their constructor, and then have whatever code owns all of this code wire them up. So I would implement your classes like such: class CPub : IPub, IMsgReceived { public event EventHandler&lt;int[]&gt; MsgReceivedEvent; public void MsgReceived( int[] data ) { OnMsgReceived( this, data ); } protected virtual void OnMsgReceived( object sender, int[] data ) { //Checking if event is not null then MsgReceivedEvent(this,data); } //Many other functions are present in that class } class CHandleMsgs { IMsgReceived m_iMsgReceived; IPub m_pub; public CHandleMsgs( IPub pub ) { this.m_pub = pub; } public void ProcessMsgs(int[] data) { m_pub.MsgReceived(data); } } public class CSub{ IPub m_iPub; public CSub( IPub pub ) { m_iPub = pub; m_iPub.MsgReceivedEvent += OnMessageReceived; } private void OnMessageReceived( object sender, int[] data ) { //Do Something with data } } And then I would have the code above all of this wire them together like so: CPub pub = new CPub(); CHandleMsgs handler = new CHandleMsgs( pub ); CSub sub = new CSub( pub ); Problem solved. Additionally, if you have a class that subscribes to events, almost always you need to make sure that that class unsubscribes from those events when the class's instance is disposed/closed/shutdown/whatever. Otherwise, the event handler will keep running after your class is done (perhaps doing bad things or crashing), and it will leak the subscriber. It will leak the subscriber because the producer has a reference to the subscriber - the event handler that is subscribed - and thus always counts as a reference.
Removed: Rule 8, trolling.
I am sorry. I forgot to mention that CPub class owns an instance of CHandleMsgs. I made IMsgReceived interface just so that CHandleMsgs can access one specific function from CPub class. That will raise that event. So I cannot have IPub instance in CHandleMsgs. 
I've seen that as well but hopefully these companies still have some focus on writing good code that's maintainable and works consistently. It's hard to tell if I've worked in an environment similar to yours, but I still try to think through the problem and find the *best* way to solve the problem. What sort of bad practices do you think you've picked up?
A lot of people will give you advice and even take a look at pieces of code you show them. However to get a real mentorship you need to work with the person. In a lot of cases you don't know you are doing something wrong and you will not ask your mentor about it but if the mentor works on the same project he will spot it. So I guess either find a mentor at work or work on someone's open source project and get him to agree on mentorship in exchange for working on the project. Obviously the open source project should be something more obscure. Can't just join .NET Core and expect this plan to work.
Almost always the case. And its even worst if the colleagues don't want to learn new stuffs and are stuck in the medieval era when they learnt it. 
I did something similar a while back, but the code is kind of complicated, so I really don't have the motivation to extract all of the pieces you need. Here is the recording part, I hope it helps :D private List&lt;float&gt; getWaveForm(WaveStream waveStream) { List&lt;float&gt; result = new List&lt;float&gt;(); ISampleProvider sampleProvider = waveStream.ToSampleProvider(); float[] buffer = new float[1000]; int length; while ((length = sampleProvider.Read(buffer, 0, buffer.Length)) &gt; 0) { result.AddRange(buffer.Take(length)); } waveStream.Position = 0; return result; } public void Load(string fileName) { Release(); Init(); switch (Path.GetExtension(fileName)) { case ".wav": _waveStream = new WaveFileReader(fileName); break; case ".mp3": _waveStream = WaveFormatConversionStream.CreatePcmStream(new Mp3FileReader(fileName)); break; } _waveForm = getWaveForm(_waveStream); _currentStream = _waveStream; waveOut.Init(_waveStream); } public void Record(int frequency, int bitRate) { Release(); _waveForm = new List&lt;float&gt;(); wi = new WaveIn(); WaveFormat wf = new WaveFormat(frequency, bitRate, 2); wi.WaveFormat = wf; temp = new WaveFileWriter(Path.GetTempPath() + Guid.NewGuid() + ".wav", wf); wi.DataAvailable += (sender, args) =&gt; { temp.Write(args.Buffer, 0, args.BytesRecorded); }; wi.RecordingStopped += (sender, e) =&gt; { string fileName = temp.Filename; temp.Dispose(); Load(fileName); }; wi.StartRecording(); } public void Release() { _waveForm = null; if (waveOut != null) { waveOut.Stop(); } if (_currentStream != null) { _currentStream.Dispose(); _currentStream = null; } if (waveOut != null) { waveOut.Dispose(); waveOut = null; } if (wi != null) { wi.StopRecording(); wi.Dispose(); wi = null; } } 
Lol at sealed. I seal all my classes by default.
No __arglist ?
Have you tried multiple HttpGet attributes? One with and one without {companyId}, for example.
What kind of modifications to the c# language would you prefer to see instead?
Is the name of your controller "agreement"?
Why not use a URL style like "companies/{companyId}/agreements"?
I just called mine Tup.
Yes, I believe so. Though I wouldn't be sure what variations to try, to be honest. I definitely did that with that and {agreementId} without luck. 
Nope. It's agreements. As soon as I revert to just one method, it works. 
Have you tried {companyId:long} or {companyId:int}? This may allow the word 'agreement' to not match the companyId route.
Are you sure you are using the attributes correctly? I've always used `HttpGet` without any params, and then used the `Route` attribute specifying the params. [HttpGet] [Route("{companyId}")] public IEnumerable&lt;Agreement&gt; GetByCompanyId(int companyId) { return Agreements.GetAll(companyId).Result; } [HttpGet] [Route("agreement/{agreementId}")] public IEnumerable&lt;Agreement&gt; GetByAgreementId(int agreementId) { return Agreements.GetAgreement(agreementId).Result; }
This would be a bad design. CPub has access to CHandleMsgs. There is an aggregation between them. Also m_ipub does not has MessageReceived function. IPub and IMessageReceived are interfaces. This is really killing me. 
I am totally ok with it. But my client doesn't want it. 
The query parameters will automatically be mapped by name to your method arguments. There is also the [FromQuery] attribute which replaces the old [FromUri].
/u/SihkGamer has the right answer for url-based parameters. &gt; However, I'd like to have something more like this: &gt; &gt; api/agreements?companyId=123 OR api/agreements?agreementId=123 In that case what you have is one route endpoint with different query options: [HttpGet, Route("agreements")] public IEnumerable&lt;Agreement&gt; GetAgreements(int companyId = 0, int agreementId = 0) { if(companyId &gt; 0 &amp;&amp; agreementId &gt; 0) return FindAgreementsByCompanyAndId(compnyId, agreementId); if(companyId &gt; 0) return FindAgreementsByCompany(companyId); if(agreementId &gt; 0) return FindAgreementsById(agreementId); throw new ArgumentOutOfRangeException(); }
I think it was a little simpler than that. I ended up having to use something like: [HttpGet("byName")] That would result in me being able to do companies/byName?var=whatever. For some reason, my controller wouldn't recognize that GetByName as the method's name would work? I'm going to do some more playing around with it, but this way allowed me to query for variables as I expected.
The above is the correct answer, some very minor tweaks since you are using .net core. [HttpGet("agreements")] public IEnumerable&lt;Agreement&gt; GetAgreements([FromQuery] int companyId = 0, [FromQuery]int agreementId = 0) { if(companyId &gt; 0 &amp;&amp; agreementId &gt; 0) return FindAgreementsByCompanyAndId(compnyId, agreementId); if(companyId &gt; 0) return FindAgreementsByCompany(companyId); if(agreementId &gt; 0) return FindAgreementsById(agreementId); throw new ArgumentOutOfRangeException(); }
No you don't, but I personally prefer them since there are other places where input parameters can be specified. I'm not trying to get into a style war, just some suggestions for OP. I also personally wouldn't return an IEnumerable&lt;T&gt; from an API endpoint as I prefer to use IActionResult and let the requester determine how they should receive the results by specifying something like application/json or another variant, but again, style. 
It totally is!
Yeah, I realized I wasn't paying attention (and neither were you). You have interfaces for each aspect of CPub. Pass the one instance of CPub through those different interfaces. CHandleMsgs should take the CPub instance through the IMsgReceived interface. However, in the end, you need one instance of CPub passed to both those classes, just through different interfaces. Also, please be honest. Is this a homework assignment? What is the context for this code? This seems like basic stuff and you're struggling with nonsense. If this is for a client, I despair for that client because it doesn't seem like you're ready to be a professional developer. Which makes me feel like you're not bring honest with us here. Why is it so important to avoid an aggregation here? Do you mean to use dependency injection to avoid hard dependencies on types? Ultimately you have to have one instance of CPub be passed to both CSub and CHandleMsgs. That much must be true. What mechanism you use to pass it (direct argument, or a configuration class, or dependency injection) is up to you, as well as how tightly coupled they are and what interfaces you use. 
In ASP.NET Core, they merged the Route attribute into the HttpXXX ones.
Are you asking about frameworks? Generally a quick and dirty CRUD apps can be written on WinForm with minimal overhead, but when you have large number of data &amp; logic, WPF can help keeping things sane. On the other hand there's always some use for console apps. There's also Lightswitch for CRUD but it seems to be a dead end for now. If you expand to Web there are tons of them, plain ASP.NET, MVC with all the goodies like Web API etc. Once you wrote the Web API you might wonder why don't make a mobile client for it... Which are now possible for no cost at all using Xamarin, so your C# apps can run on Android &amp; iOS with very minimal platform specific code. Oh, your app require 2D/3D graphics? Say hello to Unity, where you can write once and deploy to most major gaming platform. EDIT : If you're asking for IDEs, hands down VS (the real one, not VS Code) is still the best for C# development. Xamarin Studio works well enough if you prefer OSX/Linux, or VS Code if you're working with web apps. EDIT2: So I lookup your post history, turns out you also have a Raspberry. Well there's [Windows 10 IOT](https://developer.microsoft.com/en-us/windows/iot/getstarted) where you can write apps in C# for Raspberry
Just any method to make software in c# basically that people strongly believe in. I want to know what options there are I guess, what most use.
You don't have to learn 'every skill' there is. Generally just follow the [C# conventions](https://msdn.microsoft.com/en-us/library/ff926074.aspx), learn about what are available in .NET standard classes and use them accordingly, then expand with third party libraries/services following your passion. WinForm is indeed very easy, the code to app can be done in minutes. But WPF can force you to think methodically, separating stuff for easier development, debugging and testing. Another plus side is your XAML skill from WPF is usable in UWP (deploy in Xbox and WP!) WPF also can do most of the work for you, the key is to not fighting the framework, but follow it along. With bindings, WPF can take care of validations and formattings far better than what you would have to write manually.
Learn design patterns: https://www.exceptionnotfound.net/introducing-the-daily-design-pattern/
Thank you sincerely for the help. I guess you're right in all of this, but my background is basically that I'm running from things currently. I was in unity, now moving to applications. Starting all the way from visual scripting. I think my mindset is just that I feel like I don't know enough just yet. Considering I am only programming for the sake of learning, from everything You've said WPF sounds much more intelligent an option for me. It sounds like it will give me some good tendancies and help me program things up a bit more on my own than winform maybe, but I can't say that for certain of course. 
There are essentially two ways to communicate with websites. Reddit have official API, so either pick a built in .NET wrapper for Reddit API or learn how to consume JSON and call WebClient. If they don't have official API, learn to use web scrappers. All of those are possible from console, gui, or even mobile apps.
Thank you very much.
Off hand, no, it doesn't sound like a problem with the central .NET assemblies / installation - but that said, there isn't enough information here to go on. The big question is what the type load exception actually is - the exception type alone isn't enough to diagnose the issue, what's the message and stack trace? If I had to make a completely wild guess based on the minimal information, I'd say one possibility is you are trying to reflect upon a type (via the GetType and IsAssignableFrom calls) that inherits or depends upon a type in an assembly that isn't loaded. There can be a lot of reasons for this, as well, especially in cases where you have indirect dependency chains (e.g., referencing another assembly or project A which depends on an external assembly B, but the hosting process project only references A - or maybe it references B but doesn't copy it to the output folder).
A couple of things - first, what's the exception message you are getting? That will most likely reveal the type, if not also the assembly. Second, if this really is an assembly binding problem, one option is the fusion assembly binding log. There's a neat little GUI for it hidden in the .NET SDK. It has a few bugs but should get the job done. Open The visual studio "Developer Command Prompt" and run "fuslogvw". In the settings, enable the log, leave the log location to the default (in my experience it has issues with custom log locations), then run your program until it hits the error and click refresh in the log viewer. If there was an assembly binding failure, then you should have at least one log entry for it that will detail what assembly couldn't be found, and more importantly which assembly needed it. That said, the exception should in most cases give you what you need here, just need to examine the message. Make sure to check for any inner exceptions as well.
&gt;(Besides, I don't want to study beyond the minimal requirement.) With that attitude I wouldn't get your hopes up about doing any SI/AI programming.
&gt; The missing assembly may be the problem. The solution has 13 projects and each project loads so many assemblies. Check the fusion log.
&gt;...the constructor I need to use takes a `ref int`. I imagine this coming up in a programmer campfire tale. "Those aren't real...right?" "No, no...it's just a scary story."
I have a Windows Forms Contol with an WebBrowser Control. In this I run a Game, and I added its main.swf for ExternalInterface calls. So now I just need the C# part to get the Flash Element for External Inteface calls.
The exception message from a type load exception is not the greatest but you should be able to find what is causing the issue by wrapping that `x.GetTypes()` in a try catch.. here's what I suggest.. ... var t = AppDomain.CurrentDomain.GetAssemblies() .SelectMany(x =&gt; this.GetTypes(x)) .Where(x =&gt; baseType.IsAssignableFrom(x)) .First(x =&gt; (x.FullName.StartsWith(_provider))); ... private Type[] GetTypes(Assembly assembly) { try { return assembly.GetTypes(); } catch(ReflectionTypeLoadException ex) { // inspect ex.LoaderExceptions here } } put a breakpoint in the catch however you like and inspect the `LoaderExceptions` property or the `InnerExceptions` property to find out what is giving you hell.
When I had to do stuff like that, I wrapped it all in a JavaScript bridge. Flash calls External Interface, JavaScript in the page receives the call, then passes it on to C#. C# makes a call to JavaScript, JavaScript then passes on the call via External Interface to Flash. See: https://msdn.microsoft.com/en-us/library/a0746166.aspx
Classic technology or not, we don't really have anything better. For clients that require applications right now, UWP is not the solution and won't be for the next 10 years. Thank you for everything :) 
I think I was misinterpreting what I needed. From my testing, I think something like this would get me where I wanted to be: [HttpGet("byAgreement")] public IEnumerable&lt;Agreement&gt; Get(int id) { return Agreements.GetAgreement(id).Result; } My problem was that I was expecting whatever was after "Get" to operate like the byAgreement is in the [HttpGet] header. Instead, I have to put it there in order to do something like byAgreement?id=123. There's probably a reason, but this works just fine. On top of that, for the time being, doing this provides a cleaner looking API (to me): [HttpGet("{id}")] public IEnumerable&lt;Agreement&gt; GetByAgreementId(int id) { return Agreements.GetAgreement(id).Result; } Thanks for your help! 
Fair enough. Care to expand? When would you use each one? Thanks.
Unless I need to do something specifically different from the default behavior (e. g. open for read and write, etc), I usually use the first.
My preferred way: public class ResourceProvider { public virtual StreamReader Open() { //(any of those without a using statement); return the stream } } public class ResourceUser { private readonly ResourceProvider _provider; public ResourceUser(ResourceProvider provider) { _provider = provider; } void MethodNeedingReader() { using(var sr = _provider.Open()) { ... } } } edit: Splitting the act of producing the stream from consuming it tends to make for more testable code. File streams in particular produce a rather tightly coupled system to the surrounding environment.
Pretty much for science, yep. I've been tasked with teaching the subject to some novices. I've been programming for 30 years, but still new to C#, which, it seems, qualifies me to teach bits of C# I've never actually used. The slides I'm teaching from mention each of these methods in passing, and I'm not really happy to demonstrate them unless I can explain their pros and cons. Thanks for the reply though, it's given me some pointers.
https://www.reddit.com/r/dailyprogrammer/ Play with those until said "other options" evolve in your mind.
This looks like a needless layer of abstraction... 
I was looking at the thumbnail of this with hoverzoom, and thought it was a Magic-Eye picture. Though I did see something, I was trying to figure out what the heck it was. Apparently, it was just a coincidence. 
Thank you for sharing this. I'm a junior developer in your field and very glad i found those amazing explanations. Will definitely follow your blog. I wish you all the best.
You can pass a stream directly into PostAsync.
Well, your interface is going to need the Entry method added to it.
Not sure what you mean, normally you post data to a controller. Are you then trying to display the posted data in a view?
Removed: Rule 4. Please repost including relevant code and/or more details what you are trying to achieve. If you are looking for another developer to personally help you, maybe check out /r/programmingbuddies.
Is AzMan still a thing? Haven't looked at it in ages, but it was specifically for fine grained custom authz, against ADlite back in the day.
UWP is the latest platform released, after WPF and WinForms, so you should expect it to be the logical choice, and to be the one that'll be maintained the longest in the future.
Why don't you want to include the fields on the classes?
Do note that UWP only runs on Windows 10 for now. If there's still Win 7/8 box you'll need other platform. Have you considered moving to ASP.NET altogether? If you have mainly CRUD requirements, ASP.NET MVC is natural. You can just host in in one designated PC, or expand to Azure or random cheap hosting when you want.
I imagine Process.GetProcesses() and the properties of the each process would be a place to start? Just not sure if you'll be able to distinguish between those processes created under admin rights versus non-admin rights. Perhaps you could track a list of processes before and after admin rights are granted?
&gt; Perhaps you could track a list of processes before and after admin rights are granted? That is a good idea! thanks. I were hoping there were some kind of lissent function that could catch everything that was executed, but it does not seem to be an easy way to do that.
[removed]
[removed]
I imagine you'll want to filter out user name, anything != SYSTEM I would guess. I'm thinking of how Task Manager displays the processes in the Details tab.
Being still somewhat new to C# I guess I'm surprised the Filestream **fs** is available outside the first using statement. My instinct would have been to nest them. using (FileStream fs = new FileStream(@"file.txt", FileMode.Open, FileAccess.Read)) using (StreamReader sr = new StreamReader(fs)) { ... } 
This is far from fool-proof, though. Other services and processes - specifically Microsoft 1st-party services - routinely start other temporary processes and services of their own. If you're only targeting Windows and don't want to write a driver or a permanent event consumer (which would be COM-based), your best choice is likely going to be to use `ManagementEventWatcher` [as seen here](http://stackoverflow.com/questions/848618/net-events-for-process-executable-start/857946#857946). Keep in mind, however, that WMI/CIM events are basically just polls for changes in WMI/CIM internal data, so if enough processes start at once, you may still miss some. Even this isn't as complete of a solution as I wish it was.
/u/FizixMan please ban this garbage.
Its a good enought solution. I just want to be able to tell, if a computer user has instanned something odd, when using the admin rights, this should be good enought. Thansk for the link.
More than code that is difficult to write tests for? I seriously doubt there is a stronger correlation to the how error prone a particular bit of code is between having disposable object creation in one place and disposal in another vs code that doesn't have tests because it is tightly coupled to the operating environment. No I'd say all code has bugs. Bugs are less likely to be found in code that is associated with automated tests that cover the design requirements of the feature and all the history of bugs that it have been fixed than code that is not. And code that is tightly coupled to the environment is unlikely to have such tests. As such the code that is unavoidably coupled to anything outside of the testable logic of the program should be as straightforward and simple as possible to limit the less-tested surface of a project.
Explicit interface implementation. Cast to the appropriate interface when you need the special functions.
Writing backup software, correctly, is very difficult. There are plenty of tools already available for performing/storing/cataloging backups, why do you want to write your own? Would you be satisfied if you could instead interface with an existing tool? 
You're very welcome. Glad it was useful!
&gt;Thank you very much. Winforms isnt cheating. You can learn to write the gui yourself in 10 minutes, its just a shortcut. You will probably always be using VS anyway and even other c# IDEs I have seen use a visual designer. 
Windows authentication in IIS is your best bet. You can roll your own if it doesn't meet your needs, but that would be a rare use case. This has been a standard feature of ASP.NET for a very long time and doesn't require you to write any code. The basic steps are as follows: * Turn on windows authentication in IIS * Add &lt;authentication mode="Windows" /&gt; to your web.config. * Use the web.config to gate access to specific URLs based on active directory group membership OR use the AuthorizeAttribute to accomplish the same in an MVC / WebAPI scenario. A little googling will get you all the information you need, but hese articles have some info to get you started: https://msdn.microsoft.com/en-us/library/ff647405.aspx https://msdn.microsoft.com/en-us/library/wce3kxhd.aspx 
Ok I'm going to start off by stating that it is an interesting thing you found. *However* unless this class does something else that you need all of your classes to inherit then this is saving you nothing from just overriding `Equals` and `==` in your actual classes. Worse, you just broke anything that requires `GetHashCode()` and `Equals` to agree (`HashSet`, `Dictionary&lt;&gt;`, et als.) They're serious about that compiler warning.
You can also chain "Where"s together to make it a little more readable: foo.Where(w =&gt; w.IPv4Mask.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork) .Where(w =&gt; w.IpV4Mask == 0) And so on
No, the PC is running and the application is in front and in focus. There is nothing in the Logitech settings about sleep, and also it doesn't make sense that the camera would go into sleep while running. I've tested this on two different Win10 computers with same results.
&gt; Why don't you want them in the class? Mostly because if they were, then it's going to be more difficult to determine whether they've been changed. Imagine that the class is a textbook class, and I'm trying to subclass it as a textbook with margin notes and give these margin notes values at creation time. How do I tell whether the margin notes are original or whether I've bought a secondhand textbook and the previous owner has erased them and replaced them with his own notes?
The casting part is what I've been tripping up on. Unless I can use casts differently than I think, I'd have to iterate through a HashSet&lt;T&gt; that I'm returning, which would put me back spending seemingly unnecessary cycles.
Thanks. It works now when I add this: .Where( y =&gt; getCIDRFromIPMaskAddress(y.IPv4Mask) != 0 ) 
In that case, you should move your `Where` to after the `Select`, but before the `ToArray`: int[] mask = ipProperties.UnicastAddresses .Where( w =&gt; w.IPv4Mask.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork ) .Select(x =&gt; getCIDRFromIPMaskAddress(x.IPv4Mask)) .Where(m =&gt; m != 0) .ToArray(); This avoids calling the `getCIDR` method twice. 
Oh poo. Is there any fix on the horizon? Is there any official bug or statement about this? Any links? EDIT: It's not that. I don't have that update installed.
The key here is that the two filters have nothing to do with each other, so separate `Where` calls make a lot more sense. If you were, say, checking that the number is between 5 and 10, then it would make sense to put the two checks (&gt;= 5, &lt;= 10) in the same `Where` call.
The DateTime API annoys me so much that I'm feeling more and more tempted to just use DateTimeOffset exclusively. It's such a major pain in the ass to keep setting the DateTimeKind after passing through a web service or a database to prevent unexpected timezone conversions, but I feel like I shouldn't be using DateTimeOffset because a timezone doesn't make sense for things like 'My birthday is on the 5th of March'.
Have you looked at NodaTime yet? I haven't, but I'm thinking that's the right way to go. http://nodatime.org/ Looks like the LocalDate Structure is what you actually want to use there.
This utilizes the scripting support in Roslyn which makes C# more palatable in scritping scenarios, some Roslyn Scripting examples at: https://github.com/dotnet/roslyn/wiki/Scripting-API-Samples
There's a short delay, but this looks exactly like what you need: https://blogs.msdn.microsoft.com/vancem/2013/03/09/using-traceevent-to-mine-information-in-os-registered-etw-providers/ I ran the provided solution from VS as an admin and it was immediately able to track my user account opening and closing programs. However, remember that you're tracking an *Admin* user - nothing will stop them from simply terminating your application or even "pausing" it while they do things they aren't supposed to.
My biggest question is how will this play with databases. 
Removed: Rule 3. Maybe try a more generalized development subreddit, like /r/dotnet, /r/devops, /r/webdev.
Can't open the website in Edge, byeee...
I studied the Gang of Four back in college and use many of them daily; I found your explanations to be really easy to follow and I loved the food analogies.
You can blame Edge for not implementing Server Sent Events (SSE) - a simple Web Standard most modern browsers have had since 2011. Gistlyn works great on Safari on iPad or Chrome on Android, but for Desktop you'll need to use a modern browser. If you want Edge to support it, vote for them to implement SSE at: https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6263825-server-sent-events-eventsource
what about performance implications of the two approaches?
I wouldn't be surprised if it's optimized. There are already optimizations done on these. Of course those can vary between providers. I'd be interested in seeing what LINQ to SQL does in some cases.
Already using the 'Awesome .NET' list as reference material as to what I need to learn/look into/be aware of =) 
Test Results, using RyuJIT 64bit and .net 4.6.1 https://gist.github.com/jackmott/b1fe12dd7976538f9a9c066e0e973609 Source code for tests: https://gist.github.com/jackmott/50dec43b93d206a1f758206b7b9be37e TLDNR - two wheres is slower and uses more memory. Results do not necessarily apply to LINQ to SQL. Various permutations of the above were tested, it wasn't a unique result that is an artifact of summing the results or anything. .First() same result (except everything is faster of course) 
I added a package, but missed the tags, how do I update them? It was https://dotnet.libhunt.com/project/live-charts but then I noticed you have similar libraries tagged as "graphics" 
From one beginner to another (yes I have experience in other languages but I'm still far from considering myself a pro) a couple tips. Have an idea of what you want to do, be prepared to do it wrong or code the long way and don't get discouraged. Take in some reading and free courses [Microsoft Virtual Academy](https://mva.microsoft.com/) has some free beginner courses, and yes Hello World apps are the most boring and dreadful thing in the world but they are worth evaluating. I recently went through The C# Programming Yellow Book by Rob Miles, I think it was about a dollar on amazon. It's an entertaining read and he talks about some important concepts about development that happen outside of the code as well as in the code. All these texts and learning tools are great practice, but you will learn the most from writing something yourself and doing your own research on how to manipulate certain features in your own way. edit - just noticed that I pretty much echoed /u/box_of_hornets. 
Interesting, thanks for testing!
Same here. They are easy to unseal and it acts as documentation in the mean time.
Because SSE is a simpler, more elegant and reliable Web Standard with a higher fidelity for the Web. Gistlyn is a tool for developers which doesn't cater for the lowest common denominator browser and makes use of other advanced browser features which improve productivity like CSS3 Flexbox. SSE not supported in Edge isn't a reason not to use it, it's a reason for Edge to catch up with other browsers and implement it and save everyone the additional effort to implement workarounds with polyfills and ugly hacks and testing of multiple fallback implementations. Our analytics show Edge usage rates very low in our developer targeted websites (2.14%) given developers tend know to use a better browser. For the few Edge users there's a callout to vote to encourage Edge to implement SSE to catch up with other modern browsers - moving the Web forward and saving everyone effort in the long run. It's embarrassing that Edge in 2016 still doesn't natively support SSE which is reflected in the comments for one of the most voted feature requests: https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/6263825-server-sent-events-eventsource Developers that don't have a modern browser installed can use the Desktop version of Gistlyn instead which uses its own embedded version of Chrome (CEF) that doesn't suffer from Edge's limitations: https://gistlyn.com/downloads 
Your logic is completely flawed. A callout for implementing SSE and dropping support for substandard browsers is exactly moving the web forward. If everyone catered for the lowest common denominator the Web would go nowhere and there'd be no reason for Edge to implement SSE or any other feature that can be polyfilled - the same reason why jQuery/React/Facebook dropped support for &lt;IE9 and why no web developer should consider developing for IE6 which held the Web back for a decade. The SSE polyfill fallback uses XDomainRequest which doesn't support Cookies to enable Session support which Gistlyn needs. Given Edge usage is so low for developer targeted websites, there's no justification to support the ugly hacks Edge needs, which should just get their act together and implement this simple Web Standard every other modern browser has had for years and save every developer the effort for current and future websites that require simple real-time notifications.
Thanks for the input. Looks good! You have a point with the admin user, but its ok. its setup as a service so the user (who is a normal computer user) would need to know how to go into service, and find the correct service to disable.
For me the biggest deal is probably if it plays well with Azure Mobile Services, which we use to automatically sync part of an SQL Server database with an SQLite database on a mobile device ... I suspect you'd have to put them in the database as strings (which is a bit annoying when you want to query the SQL Server db), but maybe you can get a good automatic conversion between the built-in datetime types and the nodatime structures going.
Removed: Rule 4. Please repost it with proper code formatting and/or posting gists and/or posting to a github (or equivalent) project.
This has been added to our dev teams 'Essential Reading' confluence page :) Thanks!
&gt; 'My birthday is on the 5th of March' Thing is - there's a 12 hour variance of when the 5th of March actually is. So even when talking dates only, you still need to think about timezones, unfortunately.
Thanks for the answer. Wouldn´t have thought about using multiple different forms and call upon the ones that are needed. Great Idea thanks. Is there a way to pack all of this in 1 program later on or is that simply "stupid"/not possible?
Okay thanks :-) at least i got a lot to read into now. Guess will take a couple of weeks at least.
Send a PM if you need a bit of help
I will glady come back to that, but since I´m doing this in my sparetime from work etc. my progress will be rather slow. The project is just for me basically to get better at programming. :) If I hit a wall or need advices I will come back to your offer, thanks.
Yeah, it's not so much something that needs to be fixed, as a feature of the program. Allowing the computer to be accessed without port forwarding would require both to connect to a server, and I believe the intent of this program is to be decentralized, rather than relying on a server. Just thinking about it, it would be possible to create an Auth server program that you run on your machine, and then each of the clients could connect to that over the web. They could create the connection themselves.
 Okay so this: using (FileStream fs = new FileStream(@"file.txt", FileMode.Open, FileAccess.Read)) using (StreamReader sr = new StreamReader(fs)); Versus: using (FileStream fs = new FileStream(@"file.txt", FileMode.Open, FileAccess.Read)) using (StreamReader sr = new StreamReader(fs)) { }
This is a great idea. I made this change in my code. Thanks.
As they stand, they're identical. They will both create a FileStream, create a StreamReader, then dispose the StreamReader, and finally dispose the FileStream. The difference is that, in the second one, you have some braces into which you can insert whatever code you like, and that code will be run after the two objects are created, but before they are disposed. Whereas in the second one there is nowhere to insert any such code.
I don't have experience on the Word side of things, but I have used [EPPlus](http://epplus.codeplex.com/) to work with Excel files with ease. Perhaps that will at least partially help.
If it's an actual table, it might be interesting to see what happens if you use the Office interop to tell word to export as HTML and then use HTMLAgilityPack to pull the table and its data out.
Sorry for the delay on this one (three weeks!). It took a lot more to time to make sure it was up to snuff. I had to break my rule of "Command Line apps only," for this one, but I think it turned out a lot more fun than usual.
Cool thanks!
It's a series of tables. I'm thinking the path is to read data from word, save as html, import to excel.
You've got to place that dictionary somewhere. Say its a global called `static Dictionary&lt;Widget, int&gt; WidgetSizes`. Every time you are done using a widget, you need to explicitly check to see if that widget is in WidgetSizes. Otherwise WidgetSizes will keep said widget in memory for the life of your application. 
Do this course if you are into videos: https://mva.microsoft.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-16169?l=Lvld4EQIC_2706218949 Read this book if you want a book: http://www.robmiles.com/c-yellow-book/ Follow this tutorial to build a simple rpg game so you see a real world example of stuff: http://scottlilly.com/learn-c-by-building-a-simple-rpg-index/
Personally, I prefer the third version from what you have posted. String interpolation might help make it slightly easier, but I think you might be overthinking how to get it down to minimal complexity. https://msdn.microsoft.com/en-us/library/dn961160.aspx
I think option one is the least clear of the three. Personally I'd adapt Three to read like this: [ @foreach (SelectedListItem in ViewBag.Property) { @Html.Raw($"{{id:{item.Value}, name: '{item.Text}'}},"); } ]
Nuget is the cancer of my career
It can accept both. When I was testing this on my windows machine, there was some issues with having the Clients connect to "localhost" (it's some issue with how Windows handles loopbacks). If you bounce the connection through a router first there should be no problem (i.e. a `192.168.x.x` address). Also, I setup a (temporary) testing server. Server address is `pong.16bpp.net` and Port is `6000`.
Will the dictionary go out of scope? If so, then yes you are correct. 
I have been waiting literally 20 years for them to get the networking stack right. Still waiting. At least I don't have to worry about IPX anymore.
Biggest problem is Microsoft encouraging this in their docs
Upvote for visibility
params is needed for calls with parameters as just comma separated set. Main is designed to be called by system only, there is no point in params
The only thing `params` does is allow you to specify a variable **number of parameters**, which then get automatically turned into an array. `params` has nothing to do with passing an array containing a variable **number of items**, that always works.
Stucts aren't allocated on heap, which means you don't have to waste time GC'ing them.
This always works: void Foo(int[] array) { } Foo(new int[] { }); Foo(new int[] { 1 }); Foo(new int[] { 1, 2, 3 }); This needs `params`: void Foo(params int[] array) { } Foo(); Foo(1); Foo(1, 2, 3);
Oh. It makes more sense now. So **params** is really just a convenience feature. By the time the method is passed the arguments they're already packaged into a good old array. Essentially it just automates the "new int[] { }" syntax. 
Exactly. `params` changes nothing about how the method works, just the syntax you can use to call it.
That's... wow. Good to know.
Thanks!
Not necessarily. If your throughput is fine and everybody is getting served then you might not need to change anything.
Great post!
While dispose-every-request is wrong for HttpClient, so is "use a static HttpClient". Static is too simplistic. I believe there's an existing bug where HttpClient doesn't respect changes to DNS during its lifetime. That is, if you instantiate an HttpClient and it makes a request to http://example.com/api, it will never lookup the IP address again during its lifetime. This is bad for two reasons: * If example.com is using DNS for load balancing, you'll be bypassing that. If you're 1% of their traffic, that's not a big deal, normally. If you're 10% of their traffic, it's a big deal. If you're 50% or more of their traffic, it's a disaster. * Many rollout strategies, such as Azure app publishing, use DNS to facilitate the A/B switch. App version A is running, they roll out version B, test version B at http://beta.example.com/api, and then tell the app host to switch them. The app host updates the DNS so that example.com points at version B, and within the DNS TTL all the traffic has shifted over to the new version. Unless people are incorrectly holding on to the old IP too long, like having a static HttpClient would. Workarounds: * Use a singleton pattern that returns a new HttpClient every N requests or M minutes. * Check for DNS changes in the background and recreate your HttpClient when it changes. The singleton is much simpler and therefore more likely to not cause headaches.
While it's true that they could be much better, docs are generally minimal examples to show basic usage and should never be treated as best practices for design patterns and performance.
Yep. Pretend that .Net is calling your Main method like Program.Main(new string[]{"first", "second"}); In reality, this is exactly how `params` works anyway, converting your comma-separated list into an array at compile time, but I don't think `params` was available in the first version of C#.
I think `params` was around even for C# 1.0. At the very least, it's in the [C# 1.0 specification (Section 1.3, page 11)](https://download.microsoft.com/download/a/9/e/a9e229b9-fee5-4c3e-8476-917dee385062/CSharp%20Language%20Specification%20v1.0.doc) and I can find no evidence of it listed as a feature for any subsequent release of C# (from C# 1.2 and onward). Maybe it wasn't implemented in the compiler that early on?
[This](http://byterot.blogspot.co.uk/2016/07/singleton-httpclient-dns.html) post suggests "get[ing] hold of the ServicePoint object for the endpoint by passing the URL to it and set the ConnectionLeaseTimeout" as another workaround.
You can polyfill WebSockets too.
Care to elaborate? The only issues I've had are broken packages, and a Xamarin Studio update (for Mac) that doesn't make the NuGet window show up when i want it to (have to restart the app).
No, you're right. I must have been thinking of `varargs` in Java, the equivalent feature, that was only added in Java 5.
TIL I've been using HttpClient wrong and it is destabilizing my software.
 public class MyValue { public int Period {get;set;} public int Score {get;set;} } var sum = GetMyValues().Where(val =&gt; val.Period &gt; x).Sum(val =&gt; val.Score);
If it matters to anyone, you could instead use a singleton HttpMessageHandler and instruct the HttpClient instances to not dispose of their inner handler using a [constructor overload](https://msdn.microsoft.com/en-us/library/hh875108.aspx).
Thanks!
This is the first thing I thought of, but I'm hardly a good programmer. Would love a response on this question.
Thanks for the suggestion, but I still can't quite wrap my head around how to do this. What I have so far works without error or exception, but the "await client.PostAsync" line doesn't take as long as I would expect, and I can't see any return data in the HttpResponseMessage. public void DoStuff() { byte[] requestStream = Encoding.Unicode.GetBytes(xmlRequest); //xmlRequest is xml string HttpClientRequest(requestStream).Wait(); } public async Task&lt;int&gt; HttpClientRequest(byte[] requestStream) { using (var client = new HttpClient()) { client.BaseAddress = new Uri(serverUrl); client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("text/xml")); client.DefaultRequestHeaders.Add("MI_XMLProtocolRequest", "GeocodeRequest"); client.DefaultRequestHeaders.Add("MI_XMLProtocolVersion", "MI_XML_Protocol_GeocodeRequestAndResponse_1_0"); client.DefaultRequestHeaders.Add("MI_XMLProtocolTransactionId", "0000"); ByteArrayContent byteContent = new ByteArrayContent(requestStream); HttpResponseMessage response = await client.PostAsync(new Uri(serverUrl), byteContent); return 1; } }
&gt; because a timezone doesn't make sense for things like 'My birthday is on the 5th of March'. Doesn't it? If you have a site pushing notifications to users, do you want to notify him when its his birthday in *your* timezone or in *his*?
Set the headers on the content object, not the default headers of the client.
That's really just a small example I think to give you an idea of what's going on. I think it'd be more applicable in some web server where all the requests coming in use the same httpclient rather than httpclient per request. 
Presumably you broke your rule in order to draw the Pong game (forgive me for not reading yet). It's beyond the scope of network programming, but there is the "double buffering" technique for speeding up console output, and others have written Windows command-line games before. http://cecilsunkure.blogspot.com/2011/11/windows-console-game-setting-up-window.html
Idk about sqlite. But there is a new sql database for apps called realm. My friend tried it out and thought it was much easier than sqlite to use. You also do not need an ORM with realm
Generally speaking, you don't want it to waste time looking up IP addresses multiple times. So it isn't really a bug, but rather a default behavior that you may not necessary want. 
That is probably the right approach. 
I'm going with badly architected. It should have behaved like ADO.NET connection pools.
Yes, but its rather overkill.
There's a difference between an article and API docs.
Follow-up: If all the Parsers are contained in the same DLL, then I can reflect on the Parsers.dll, and: Activator.CreateInstance(theTypeIWant); If that is the case, there is no need to reflect on the DLL ... just reference it in the generic EXE, and only add the classes that the config calls for ...
Just a side note. If you are using Html.Raw to display user-entered data, you'll want to HTML encode it to prevent any malicious behavior. 
I agree that an article and API docs are different. I don't see how that changes the criticism being discussed. Your excuse is that docs and examples should be minimal. I agree. They should also be... You know... Correct. And actually helpful. And actually an example of how to use the API properly. Also, you conveniently omitted the fact that MSDN Api docs include usage samples in them and are used frequently by windows and .net developers. Real conversations that happen all the time: &gt; "why did you do it this way?"... "Because that's what Microsoft's example said to do". I really freaking can't believe I'm being down voted for pointing this really obvious fact out. "Write accurate, helpful examples." DOWN VOTED. Keep it classy around here. Always love the .NET subreddit. Such a high quality bar.
How about a lazy singleton property getter that is disposed and recreated if it gets too old?
How about pulling that ttl and having your code do the lookups based on the time left? 
Off the top of my head, NodeTime has a [large suite of tests](https://github.com/nodatime/nodatime/tree/master/src/NodaTime.Test) built against NUnit. Most of the individual tests are relatively short and sweet with clear sets of arrange/act/asserts and a fairly comprehensive set of inputs and regression tests. EDIT: If you're looking into figuring out what unit test framework to use, I would suggest choosing one, "go deep" with it and gain a _good understanding_ of what TDD is, getting a feel for tools/utilities involved, and developing some decent habits/disciplines with it. Once you have a good understanding of it, then you can explore all the other frameworks (and mocking/assertion libraries and style/organizational conventions) and make judgments about their pros/cons, figure out what you like or don't like. I can't really recommend one particular framework or style right now, others can comment on it. Maybe consider picking one that has a lot of help resources for it, even if it's not bleeding edge.
Not in this particular case
No, he's right. This is a bug.
This isn't really `HTTpClient`'s fault. It's technically doing its job, closing the connection when it exits the `using`. TCP's `TIME_WAIT` implementation (like mentioned in the post) was the real culprit. You'll have this problem with any high load traffic app, it's just a matter of optimization. Still, good to know how to improve `HTTPClient` connections. Thanks OP.
Best practices are still valuable even if they don't cover 100% of all possible use cases. 
&gt; MS documentation tends to be better than many other vendors. Except for the code examples. They're crap.
I always like when people figure something like that out and assume everyone else was doing it wrong too...
Doesn't using one HttpClient instance means that multiple requests will share the same cookies. What if I don't want to do that?
I think my post may have come off as sarcastic, when I did not mean it that way - I was asking more if the behavior of polling the ttl in order to confirm the IP has not changed was appropriate. This could be a behavior of HTTPClient in a future iteration, or something you add in addition to the code that was presented in the post to avoid the issue of getting stuck with the wrong IP address for the connection.
It is strange because varargs are in C before. I don't know why they didn't keep it.
This is what we do as well. Has to be better than using a static for all the reasons DI is normally better than statics.
Yes. If we have a service that depends on cookies, following authentication for instance, we use a dedicated HttpClient instance and keep it hanging around.
Seems like the config should specify a parsing mode. Main should load the config to determine the parsing mode to use. From there, you can instantiate the parser you need, and pass it to whatever algorithm or service object you have as an IParser. static void Main(string[] args) { var config = LoadConfig(args); var parseMode = LoadParseMode(config); IParser parser; switch (parseMode) { case ParseMode.Csv: parser = new CsvParser(); break; case ParseMode.Json: parse = new JsonParser(); break; default: throw new NotSupportedException($"Unrecognized parse mode {parseMode}"); } DoParsing(parser); Console.ReadKey(); } I don't know why you'd need (or even involve) a container for this, unless it was just to say that you'd used a container.
It's only overkill if you're not already using DI. 
That's a very good question. From what I'm reading thus far, it should handle concurrent calls correctly. But I can't be certain and that's really frustrating.
The text box values are strings. You will need to parse those into integer values: https://msdn.microsoft.com/en-us/library/f02979c7(v=vs.110).aspx?cs-save-lang=1&amp;cs-lang=vb#code-snippet-1 
That's kinda what I was thinking... ~~which makes me wonder what the impetus is to use IoC containers (this is where something for me hasn't 'clicked')~~. Actually, IoC containers have the nice notion of instantiating something as a singleton, per-thread singleton, transient, etc. But if I don't care/need this, then yeah, I may not need to use IoC containers. 
That means the textbox has not property called `text`. Try with a capital `T` (`txtExame1.Text`)
You should use `ConfigureAwait(false)` wherever applicable.
No async &amp; await with an IO library is sad. :-(
Unity3d not supports async &amp; await. You can implement async and await on top of library. (but i can't imagine cases of usage)
&gt; (but i can't imagine cases of usage) Basically all IO operations where you wait for external resources (file access, network access).
Yeah, I don't want to be a negative nancy but I would never use a networking library for .NET that isn't async.
You achieve this by simply reading in a dedicated thread in a loop. If there's nothing to read you essentially block the thread and it can't do anything. The same with `Thread.Sleep` - that's a pretty big no-go nowadays. It's purely wasteful.
That didn't work, sadly :( still nothing in Release mode. I'm calling it basically immediately after my app starts up, when the ViewModel gets initialized and a class implementing ISupportIncrementalLoading starts downloading.
Honestly, I haven't tried that. My use of it is from a stateless Web API client point of view where no cookies were involved and you are dealing with a very high volume of outgoing requests where latency was crucially important. If you're simulating a human user using cookies and only doing a few requests here and there at human speeds, then using one HttpClient per virtual human user would be more appropriate.
Correct me if I'm wrong, but another option is to use HttpWebRequest instead of HttpClient, since HttpWebRequest automatically takes care of connection pooling. So even if you create multiple HttpWebRequests in different parts of the software, the requests will share the same HTTP persistent connection if possible.
Thanks! Helpful video for a newb like me. 
 If you look at v110 of the docs, it lists which methods are actually thread safe. https://msdn.microsoft.com/en-us/library/system.net.http.httpclient(v=vs.110).aspx 
It's called "method chaining" (or sometimes a "fluent interface"). It's all about what the method returns. If it returns the instance it was called with, then you can chain the calls. http://stackoverflow.com/questions/1119799/method-chaining-in-c-sharp
It always worries me when I see spelling mistakes in libraries. I realize not everybody speaks English as their first language, but it just looks sloppy. Transperancy for example.
Oh, I knew it! Haha. I had problems with that word. Thank you for letting me know. I will change it right away.
Fixed it!
Thread.Sleep used only in logic thread. It really needs (packet resends, disconnect timeouts, packet flow controller). Because this is high performance library with minimum allocations. I tested some things with async/await (because library supports Windows 8.1/10 runtime). And this was very painfull to achieve good performance with this Task allocations and some other things.
that's some badass shit going on there m8.I like it
Danke
Thank for info about ValueTask. When I get free time i will try some async methods and test it.
You could put a grid around the entire grid, then define a new content control at the same level as the grid so it sits on top. Then show/hide with visibility. 
This library firsly created for Unity3d. I can't drop unity3d support.
A couple of things. \#1: No one (at least not me) is reading the entirety of that tutorial to try and guess which pieces you implemented and changed in which manner, and then speculating on what bug you may have introduced when implementing the tutorial to fit your project. Post your code, and your methods. \#2: What you described as a 'guess' of the issue is called a race condition. These are fairly common, and what you described in your debugging and observations are actually a pretty good indicator that it *could* be a race condition. When the error occurs, **what does the database actually say?** Does the data at least get correctly updated in the database, or is that incorrect, too? \#3: When you say you return to look at permissions, how are you returning? Is it something that you are clicking, or does the code do it automatically? 
Ayy paddi, neat stuff 
Yes, that's the idea. :) Moreover, DI and IoC are great when you're dealing with a lot of libraries and classes (and long term support: it help to keep things clean). Like in big ASP.NET MVC or WPF projects where you don't really know when and where dependencies are asked, but they will be resolved when needed as it's registered. If your application is really that simple, it seems a bit overkill for me and I would recommend you to stick to the KISS principle.
Well, `IAddSystem&lt;TestComponent&gt;` is not convertible to `IAddSystem&lt;IComponent&gt;`. If it were, the definition of class UnexpectedComponent : IComponent { } would require the existence of `TestAddSystem.OnAdded(UnexpectedComponent)`. The `TestAddSystem` obviously can't know about all possible `IComponent`s, so we have a contradiction. There is a way around this restriction by using the `out` modifier, but it only works when the generic type is returned and not taken as a parameter. interface IGetSystem&lt;out T&gt; : ISystem where T : IComponent { T Get(); } class TestGetSystem : IGetSystem&lt;TestComponent&gt; { public TestComponent Get() { throw new NotImplementedException(); } } Debug.Assert(new TestGetSystem() is IGetSystem&lt;IComponent&gt;);
The result you're seeing is completely reasonable. Consider this: public class TestComponent : IComponent{}; public class BadComponent : IComponent{}; public class TestAddSystem : IAddSystem&lt;TestComponent&gt;{ public void OnAdded(TestComponent component){} } TestAddSystem testAddSystem = new TestAddSystem(); bool typeTest = testAddSystem is IAddSystem&lt;IComponent&gt;; //let's assume this "works" IAddSystem&lt;IComponent&gt; addSystem = (IAddSystem&lt;IComponent&gt;)testAddSystem; //and assume this "works" too IComponent badComponent = new BadComponent(); addSystem.OnAdded(badComponent); //what now? With this, we've been able to feed a `BadComponent`, which has no relationship whatsoever with `TestComponent`, into the `TestAddSystem.OnAdded(TestComponent)` method. (EDIT: And this would be a [disaster of biblical proportions.](https://www.youtube.com/watch?v=SA1SxZoFmOU)) So yeah, it's unsafe right now and as such, you can't do that with the type-safety mechanisms in C#. But how do you know if it's an `AddSystem&lt;?&gt;`? As in, you don't care what the generic type `T` is, just that it's an `AddSystem&lt;&gt;`? Yeah, no real way to do that short of adding your own non-generic interface or using reflection. Not sure what exactly you're trying to do, if it's over-engineered or what. At some point you're going to have to check/cast against a concretely defined `T` to be able to call the methods. Perhaps you can leverage the Dynamic Language Runtime to make some of your calls easier, but it's still the same problem as reflection and if you're using Unity, I don't think the DLR exists there. This particular issue I don't think is a Unity issue. Assuming [this is the place where Unity complained](https://www.reddit.com/r/Unity3D/comments/4qvuuk/difficult_question_involving_interfaces_abstract/) before, that is definitely a bug/limitation in Unity's partial implementation of covariance/contravariance. [(Also described here)](http://answers.unity3d.com/questions/456135/c-covariancearrays-raises-arraytypemismatchexcepti.html) The code you have here with `IAddSystem&lt;T&gt;` won't work in full .NET either; this would be due to the language specification, not the runtime implementation. (On a side note, I'm really looking forward to them updating to the latest mono or .NET core runtime!) So all I can suggest at this point is consider a redesign of your classes, or settle for the reflection as you have it. Perhaps you can create some type-safe wrappers around the reflection to hide it? ¯\\\_(ツ)_/¯ I do agree, it might be nice to have similar syntax to `IAddSystem&lt;?&gt;`, especially if you're accessing members that are irrelevant to `T`, but more often than not, it's usually a sign of another code smell. Or in this case, you can simply move the non-T-related members to a non-generic `IAddSystem`.
Good question. I would line out some constants, maybe put a dictionary mapping of tier to health together. That would look like: Dictionary&lt;int, int&gt; TierToHealth = new Dictionary&lt;int, int&gt;(); TierToHealth.Add(1, 50); TierToHealth.Add(2, 100); Etc... You could also just take in tier value and calculate health from it in the constructor. Pick a good function, you could do liner such as health = 50*tier or even expontential, such as health = 2^tier; 
Do NOT make a global. Every time you make a global variable, a puppy dies. Or in the case of Toyota, every time you make a global variable you kill a family of 4. Google the toyota code review. The lawyers hired software engineers to look it over, and they called it unintelligible spaghetti code.
1. General best practice is to have public properties and private fields. Since auto-properties automate creation of the backing fields it isn't overly verbose to just get in the habit of using them. This will lead to more flexibility down the road, as presented in a [handy list here](http://stackoverflow.com/questions/1568091/why-use-getters-and-setters). 2. Private properties are simply as useful as having a private property with backing fields can be to you. They don't allow for the fields to be access outside of the class. Many of the perks listed from the above link no longer apply due to this.
I experienced something eerily similar with a WCF service. A service I used was seeing an abundance of connections simply never closing or taking too long to close. I was disposing my client exactly the same as OP. And as OP mentioned, the recommendation across any searching was decrease the timeouts on the server side. So I did that and after awhile things died down, along with tons of shot in the dark optimizations. But I've been living in fear of it since. Could this be related too? I'm testing this out as soon as I can
&gt; As far as general convention goes, you should never use public fields. I consider them acceptable **if** the field is `readonly` **and** the value is **immutable**.
Indeed acceptable, but as of C# 6 you can also use read-only auto properties for this and should probably prefer this.
'Never' is a bit much. Public fields can be essential for mutable structs, which are important for high performance applications.
Post your code, there are limits to psychic debugging.
That is a good point. We're not yet using C# 6 at work. *weeps a single tear*
They're simply aligning with the general web development.
Time to instigate a revolution! They're small features, but I use `nameof`, read-only auto properties, expression-bodied properties/methods and string interpolation all the time now, and would sorely miss them if I had to use C# 5.
Maybe. It seems daft to me. The reason the web picked up so fast was because development was *easy*. I've tried to add another view and controller, and now the project has &gt;200 errors. I haven't touched a single line of code. I scrapped that, as I simply don't have time to waste, and instead added a folder with a aspx form in it. I press F5, the browser opens and takes me to localhost:xxxx/foldername/newpage.aspx - and then returns a 404. The IDE took me there! How can it not exist?
I've just started from scratch - as I feel it's all a bit too unstable to try to add to an existing project that we rely on. I simply created a new MVC project from the "New" option. I now have hundreds of folders. Some subfolders have things like "AddPhoneNumber.cshtml" in them. Why is this? What would I need it for? If it's an example, then why do I have about 30-40 of them. Surely just the one would do? It's filled with about a dozen javascript frameworks. Why do I need these? So far, I haven't written a single line of code, and yet the project weighs 77MB with 338 files and 173 folders. Am I the only one that thinks this might be overkill? EDIT: I thought I'd run it on the AddPhoneNumber view - and, it redirects me to a login page. I'm fairly certain that this is not the reason that web development rocketed upwards in the early 90s. I can't even get a simple form up and running.
Ok. I've just tried again - this time, using the "Create Single Page Application". So far, it's created about 20 pages - and I get redirected immediately to a log in page. Not sure when MS redefined the word "single" to mean "multiple". I simply want to create a page where a user can amend values in a single table and save them. Is there a way to do this in C# these days? In PHP, I could have done this in minutes. In fact, in pretty much any other language I've ever used, I could have done this in minutes. If I wrote it in C# WinForms, I could have this working in less than minutes. Why have they made this stuff so over-convoluted?
I don't get any generated files when setting up MVC projects. I start with the empty project template, switch it to a library (from console app) then `install-package Microsoft.AspNet.Mvc` and I'm ready to rock. 
Are you using ASP .NET Core or the old one (ASP NET 4 was it?)? IMHO ASP .NET Core is a fucking charm: Plug and Play for developers. 
In the properties of the resultant project. The template will create an empty console-app project. Switch it to library in the properties.
God knows. I've opened VS, chosen ASP.NET Application etc... &gt;&gt;Plug and Play for developers. This is what I'm afraid of. I *like* to program, I *like* to be in control of what code I'm writing - I find it makes it much easier to debug if you've written it and are not relying on some auto-generation program to create the code for you, and you get fewer surprises. If this is the way dot net development is heading, I may have to re-train back to a programming language instead.
String interpolation is awesome. I'm also quite a huge fan of the elvis operator for dealing with orm database queries. The big reason to use C# 6 though is that if you don't have C# 6 you don't have Roslyn.
Yeah, I tried that, but then as the rest of it is MVC, the page wouldn't ever load - I could only get 404 when VS took me to the exact path.
I added no options at all. It appears you have to UNadd the options that it puts in by default.
Yes, I just mentionned that to solve his current problem, eventhough obviously it's a class var that should be used, but since he doesn't know classes.. :-/ 
I suggested it, but the general agreement was that while C#6 would be nice, it does not bring must-have features that we would need. It's mostly syntax sugar. We also strongly consider waiting for VS15, instead of purchasing VS14 now. Especially with the tendency to leave out great features from current VS versions and just release them in newer versions.
There are plenty of other aspx files in the same project that work just fine.
Then there is some other configuration wrong. Understand how the things work first, then you can figure out why your particular case is not working. **Old** MVC versions did use aspx files. Never versions don't use and support them anymore - at least since MVC4.
&gt; It appears you have to UNadd the options that it puts in by default. Yes, that's correct. In Visual studio, when you do File &gt; New &gt; Project, the first step is to select the project type. Assuming that you selected "Web project", the next step prompts you to select a template. The default template is MVC (which includes "Individual User Accounts" for authentication) but at that step you can choose the "Empty" option. I think maybe you're shooting from the hip on this project. With ASP.NET MVC, you're better off going through a tutorial before jumping into it. The [ASP.NET website](http://www.asp.net/aspnet) and [Microsoft Virtual Academy](https://mva.microsoft.com/en-US/training-courses/introduction-to-aspnet-mvc-8322?l=nKZwZ8Zy_3504984382) have good learning material.
Or you overestimate yourself with your +25 years.
Create **Empty**. Drops out maybe 20 including the project, sln, assembly info etc. I'm very displeased with the insanity of nuget, .net core, and .net standard. But MVC has always been fantastic. The MVC templates have been for years small stand up sites. It sounds like you're telling it to give you everything it has. A login system, crud forms over EF, it comes with bootstrap or whatever css framework now.
You can think that if you like, but I like to code...I don't like having to get inside someone else's mind to find out how they have created a code-generation tool to create the simplest of things. It's taken longer to get it to create a load of files (one of which is similar to what I was after), than it would have to create myself...and it would have been a lot more efficient. You can rely on these 'wizards' etc... and have it done for you, but developers like to code. Learning to step through some third-party tool to create a load of code for you, a developer does not make.
It's trivial to create yourself. Create a web project, add MVC, add a controller, add a view and you're done. I've never relied on such wizards, I always do it myself. But frankly, right now you seem like someone who learned something and wants everything to continue working just as he knows it. Stuff develops, stuff moves, sometimes to the better, sometimes to the worse. But your posts are basically just rants right now. Do you have a concrete issue? Then you should create a post about that and people can help you. I've never had any of the issues you seem to have so awfully right now.
The scaffolding and generation **is** geared up for people who don't want to do manual coding and who are fine with standards.
I like to think that old projects that are "ripe with bugs and other issues" are actually still a good place to employ a testing strategy and learn the benefits of automated testing (not just TDD). I feel like it helped me figure out what testing was really for - like there was so much going wrong with these projects that I couldn't waste time writing the wrong, brittle, or unnecessary tests. Plus, when you start a new test project for a legacy codebase - it's pretty much a clean slate where you can write whatever you want. It's kind of like a greenfield project in itself. You seem to be lucky in that you are able to treat this project as a blank canvas, but you might also be able to use a hybrid of techniques to 1st - solidify the functionality of the old project with tests and 2nd - use the tests you wrote to re-implement pieces of the project safely. I've been talking a lot about it over the past couple months starting around this [blog post](https://buildplease.com/pages/debugger/) and the following 5 or 6 posts. Also, I use xUnit. It's good. Never used MSpec, but it looks a lot like a BDD framework like SpecFlow. BDD frameworks add a special kind of "terminology" to tests - an enhancement over the "Arrange-Act-Assert" setup into a more "Give-When-Then" terminology. This helps a lot, but you can do BDD with a vanilla test framework like xUnit and I'd say if you're just starting out you should let the need for BDD arise after you've dipped your toes in the TDD waters. Hope this helps.
Fair enough. This is how I've done it in the past - it has to be absolutely spot on - there's no room for error (which is to be expected). I thought there might be a better, more 'proper' way of doing it.
Its definitely slow. Its taking 17 minutes to multiply two 4096x4096 matrices.
&gt; Fair enough. This is how I've done it in the past - it has to be absolutely spot on - there's no room for error (which is to be expected). We also use Fluent mappings for all of our objects but for most people it is an unnecessary step as EF is pretty good about figuring everything out on its own (with attributes on properties to help). But there are a few things you can only do with fluent mappings and I personally like that it makes it feel like EF is using less "Magic". But thats more of a personal preference. &gt; I thought there might be a better, more 'proper' way of doing it. There may be a way to have Visual Studio update the classes, I've just never come across it. 
...or a bad idea. Not knowing what it does, I'd have no way to judge if it were a good or a bad thing would I?
If you read OP's article, it links to multiple sources - including one under the banner of "guidance" - in which the using construct is the recommended one.
Parallel for and foreach make my code much slower. Thanks anyway. They end up creating wayy too many threads. My question was more to how i can create threads only when available.
&gt; Parallel for and foreach make my code much slower. Quite possibly that your code won't benefit from parallel execution anyway. 
Why not? Its matrix multiplication. Its supposed to be great for parallelization.
If TPL and Parallel aren't good fits, then you'll have to hand-roll your threading. Create "x" threads with "x * 2" concurrent queues. Use queue x to feed work to the thread, and x + 1 to receive completed work. In the past, Microsoft has advised that x in this scenario should be about the number of processor cores times two, so that they stay busy. 
Parallel does not use "too many threads", it's using thread pool.
I'm not sure how. No matter which options I choose, I get some kind of wizard creating a load of stuff - at the minimum, it's a 'scripts' folder with a load of scripts in it and some other files that seemingly do nothing. EDIT: I've created it in PHP. It took about 5 minutes and I have a form that updates the DB in the background (I had to knock it up in MySQL quickly instead of SQL Server, but the difference would be negligible)....and I've used PHP a handful of times over the last ten years. I seriously believe that MS have made a mistake here. Unfortunately, it has to be part of the bigger project (which is all in VS using C#) so this is not a long term solution.
I dont have control of the original grid. I need to work within the capabilities of my user control. Can I step out and use the bounds of a parent usercontrol or a parents parent?
There is no additional context switch because each thread is executed on separate core.
This really worked. Thanks!! Is there any way to get the number of cpu threads on the fly?
I am using strassens. In fact i'm comparing it with naive and divide and conquer. As for GPU, how would one do that within C#? Right now I have accelerated it with SIMD (System.Numerics.Vectors).
Correct. I mostly made this for practice, and I will update it to get better and better at C#.
why would I use this over https://github.com/lidgren/lidgren-network-gen3 what makes this library different?
1: Done. Sorry. Long day 2: I don't know why I didn't think of the term race condition. Guess I've never dealt with it in this kind of context. 3: I'm returning to the same edit page to see what permissions are checked, but also stopping it with breakpoint when loading and the count on the list of permissions is not the 0 it should be, so i'm getting that confirmation from two locations
Done...it was a long day
With some optimization, mine is taking 372205 on strassens and 243727 on strassens parallel in milliseconds. Thanks for the code. Can you tell me what CPU you are running on?
"physical threads" - Not to be *that guy* but a thread represents a piece of work to be performed, and a core is where that work gets done. So the terminology is moderately important. :) http://www.nbc.com/saturday-night-live/video/anal-retentive-chef/n9695 
I added using of Vector&lt;float&gt; Starting Single thread multiply Single thread multiply elapsed seconds: 0.7454876 Starting Parallel multiply Parallel multiply elapsed seconds: 0.6371078
Actuall I removed Prefer 32bit and now it's Starting Single thread multiply Single thread multiply elapsed seconds: 0.5246324 Starting Parallel multiply Parallel multiply elapsed seconds: 0.5200374
Actually Vector tests are crap, Vector maximum size is 4
Agreed. I could have phrased that better.
huh, well that sucks
We use them a lot in game development. The need for high performance makes it essential. We also use ref and out very frequently which cant use properties.
This wasn't known to me as well. Your suggestion sounds much more sensible. Any idea why they would deviate the two? IIS support? I cannot recall another modern language/framework that would separate their HTTP services from the rest in such a way.
Full disclaimer. I haven't used either, but that's what it looks like to me.
My favorite, in a work codebase, was some Firefox specific code: `mazillaFirefox` was peppered everywhere...
They did (I am running ASP.NET Core on the full .NET 4.6 framework). You can (sorta; I cannot seem to find the release branch at the moment) get them from https://dotnet.myget.org/gallery It is possible to start a .net console app with the .net core project structure, target the full framework and get the aspnet nuget packages and get a web application built that way. It is simply easier in VS to start a web app project immediately with the Asp.NET dependencies already in project.json.
Public fields are evil. Just say no.
&gt; I don't know why they didn't just have .NET Core and make the ASP part of it a module you could NUGET in. That's exactly what is happening. You just have a .NET console application and add the ASP.NET Core packages.
Ya, this is my approach. I put the handler in my DI container as a singleton, and use constructor injection. Edit: to expand, usually I'll actually set this handler up in a Lazy type, and key it to the context it's used in, eg per controller, say, so you end up with something like KeyedService&lt;MyController, Lazy&lt;HttpMessageHandler&gt;&gt;. This way you can customise the handler per context, such as controlling the DNS or cookie behaviours, per context. 
The empty one has literally no code in it. A couple of folders where your stuff has to go but not much. You can auto-scaffold from your models if you want but you're not forced to.
Your question is underspecified. In .NET, a dll is an assembly ("the thing (usually file) that specific types are defined in") that doesn't have an entry point (e.g. Main, the thing that happens first when you double-click an .exe). Based on your description, you've got a project building as a library with the following: MyAwesomeGui.cs DLL.cs What exactly does "set strings inside DLL.cs" mean? Have you defined a class DLL{ } inside DLL.cs? Are the strings static?
found it: https://www.nuget.org/packages/Microsoft.AspNetCore.Mvc/ but yeah "all" you have to do to go from a new empty core console project in VS to a web app running asp.net core on the full framework is create the project and modify the project.json file to this (ish; you probably want a bit more to do something meaningful): { "dependencies": { "Microsoft.AspNetCore.Mvc": "1.0.0" }, "frameworks": { "net461": { } }, "buildOptions": { "emitEntryPoint": true } } and then follow the conventions with a startup class and whatever (I could have looked at my project.json file at the start and realized what I needed to know to find the package on nuget)
By DLL project I mean Class Library, you then have Class1.cs initiall (This is the DLL.cs I mentioned) I've also added a windows forms besides this.
Enums technically do have a default constructor: var x = new EmpType(); But it's not useful since it just initializes the default value (0). Something like `new EmpType.EnumConstructor(Contractor);` does not work, they do not have a constructor that takes any parameters, and it wouldn't work like that anyway since `Contractor` on its own wouldn't be a defined symbol. Conceptionally, enums are basically just groups of constants, something like: static class PseudoEnum { public const int Value1 = 1; public const int Value2 = 2; } Also for correctness sake - although this is probably a bit beyond your current skillset - neither enums nor ints are classes, they're structs a.k.a. value types.
&gt; The problem is, I don't want to create too many threads. That's what TPL is for. By default it uses a thread pool rather so that you have the correct number of threads for your CPU count.
&gt; &gt; If TPL and Parallel aren't good fits, then you'll have to hand-roll your threading. I don't see how TPL could not be a good fit. Even if you wanted to hand-roll your threading, that just means creating a scheduler for TPL. In my mind the only question is whether you use TPL directly or a high level library such as Parallel LINQ or TPL Dataflow. (Man, I love Dataflow.) 
MVC with repository pattern is wonderful. You don't need any of it if you don't want it.
Can it be dongle based? If so we've had great success with Keylok over the years (on multiple languages and platforms). keylok.com 
Then you are doing it wrong.
Here's photo album summarizing what most of the threads are trying to explain: http://imgur.com/a/EelUD
Thank you for the suggestion. Unfortunately this won't really work for what I am trying to do but I will keep this in mind.
Yes, it's called open source.
Phoning Home at each launch will anmoy your legitimate users and do nothing at all to stop people from pirating your application.
A DLL lives inside it's parent process' memory space. So if you have two EXE's that both make use of the same DLL, the data in the DLL will be stored with the EXE that owns it and won't be shared. If you want to pass data between programs, look into stuff like DDE, sockets, named-pipes, or even writing it to a file or database. Sharing memory would be a fast way to write a virus, and the OS doesn't permit this. 
Thanks for the response I appreciate it :)
You could do periodic checks, if that's really a major issue for you. Constant phoning home makes your application online only. Maybe that's fine, but a lot of times it's just not. What you don't want to do is make using your software less pleasant for people who paid you than for people who don't. Any plug and play license management system is going to be cracked in minutes so you're not going to stop people who are actively willing to pirate. Requiring license validation at first install is probably good enough realistically. Periodic if you're really worried or if you have some more complicated multiseat license model. The goal is to make license violation a deliberate choice, not to make it impossible. You can't make it impossible. People who spend more money than you will ever have in your life can't make it impossible. 
&gt; "all" you have to do to go from a new empty core console project in VS Technically there are only console applications. The distinction between "web" and "console" does not exist anymore. All web projects are console projects.
Open your gui project in VS In the Solution explorer , right click the top level and Add a new Class library project (this will be your dll) Create a new class in your dll project, say MyClass.cs , and give it : public string MyString get; set; Add your dll project as a reference in your gui project In the codebehind of your gui project, add MyClass test = new MyClass(); test.MyString = "I really should do some online courses"; Sort the relevant Using statements out or use the VS hints to do it for you. Done
&gt;No licensing and just throw it out there? That's absolutely an option. DRM free software can and has worked before. The Witcher 3 is an extremely prominent example, considering that it's high profile and successful. They actually poked fun at DRM in the game. One thing that has to be kept in mind is that no client side software can be make "piracy proof". You can make things harder (at questionable use of time), but a good software cracker with enough time and interest can (and likely will) come up with a pirated version that gets around your checks. And if your checks are annoying enough, you can bet that some number of users who would purchase the program will instead pirate it. I strongly doubt that this is a majority (despite what pirates want to believe), but there's definitely some. Avoiding phoning home isn't *that* hard, anyway. You'd essentially figure out what portion of the compiled code is executing this call home (eg, if you have a function somewhere that is like `bool CallHome`) and they'll just remove the call and replace it with a dummy success. Personally, I maintain that it's not worth taking the time to implement any kind of heavy handed DRM (beyond a basic license check) simply because the time spent implementing that doesn't necessarily get you more sales. Plenty of users who do pirate wouldn't have bought the software anyway. Legitimate users can be very annoyed if DRM is too obtrusive. And obfuscation of the structure of the program just hinders development (and development is what's driving your income). It's also important to recognize that certain classes of clients aren't likely to ever pay for the software at the prices you're willing to sell it for. This drives piracy numbers up, but doesn't really mean much for your software. This mostly applies to expensive business software. Legitimate businesses tend to purchase licenses while home users don't. They'll possibly pirate it instead of just going without, but whatever. They aren't your target audience and they weren't going to be customers anyway.
I used to do this with atl/wtl. And a couple times with winforms... but basically after you get the form setup inside the dll add your dll to your main project or add your dll project to your main project (add a reference to the form dll). In your main project when you want to show your dialog (dll) create an instance of the class and call show () or showdialog (). I can't recall the exact syntax. The winforms in the dll will have to be derived from a windows class to have the show functions. If you want your dll winforms to be a sub-window inside your main window you need to make sure to set some properties like no frames or no close,minimize maximize buttons etc. I'm not at home so I can't give you details right now. Look at this project it may have what your looking for.. http://www.codeproject.com/Tips/546639/How-to-create-an-easy-plugin-system-in-Csharp Hope that helps.. Edit: forgot.. To set string inside your dll you can make the controls to the form in the dll public and set them directly via instance of the class, or add public methods with string params and set control values or other variables. To add a reference to your dll right click the references node in your solution and add..
As int is an integral type, it can only store whole numbers. It looks like your values are being rounded to zero, thus the error. If you have to use int, maybe represent a quarter as 25, and so on. I'm not sure why that would be a restriction to be honest. 
He means stop thinking about $0.25 as .25 and just consider it 25 cents, so your total would be 92 divided by 25; just remove decimals from the equation if you are required to use integers.
so represent a quarter as 25 and the total as 92 instead of .92 ?
How would you change it to loop based forward recursion with four recursive calls at each step? You would need four stacks to store the data.
Hey, would you mind looking at my code? And telling me how long it runs on your CPU? Thanks.
From what I understand, creating a Task or whatever also has an overhead associated with it and from what I can see, its what's hurting my program.
Thank you. 
Here, thanks. https://drive.google.com/file/d/0B3dgbKx4bmwwUkZIaWVmSldyRXM/view?usp=sharing Sorry but my git isn't set up yet.
http://www.asp.net/ is the official .net solution by microsoft. Howerver, it is pretty big and might be a bit overwhelming.
ASP.NET MVC would be the first thing worth checking out. I'd suggest that over ASP.NET Core/5 because the documentation and online discussion is a bit more mature. Relevant questions are: * What will this server do * How are you planning on hosting it * What have you done before that is like this
Are you talking about writing an HTTP server from scratch on top of TCP or just serving back HTTP? If it's the former I really wouldn't bother - it would be a huge undertaking without much benefit. If it's the latter, asp.net is the .net standard. That being said I find it overkill (although I haven't yet used the new .Net core stuff) and prefer Nancy which is a lightweight Sinatra style http server
Yeah, just move the decimal point. One dollar is int 100; cents.
From memory:. var reader = new StreamReader("filename"); var lines = reader.ReadLines(); reader.Close(); for each (var line in lines) { if (Regex.Match(line, pattern).Success) do something } There are other things you can do to improve things, but that should get you on the right track.
How about instead of reading all lines to memory read them one by one: using (var reader = new StreamReader("file")) { var regex = new Regex(@"WHATEVER", RegexOptions.Compiled); while (reader.Peek() != -1) { var line = reader.ReadLine(); if (regex.IsMatch(line)) { /* do shit */ } } } Technically if one line is bigger that the whole memory you still got problems but at least you could read a 16 GB file (with lines) without running out of memory.
Yes better. I was thinking that but I'm on the phone and couldn't remember the syntax. Long gone are the days when I can code straight from memory without intellisense and Google open on the other screen!
Few tips * Do not copy matrices in your recursive multiplication. Create Matrix class that can accept bigger jagged array in constructor and just have start row and start col together with Width and Height. Each time you create submatrix pass original A and B jagged arrays with shifted start row and col. You can do the same for result allocating once and pass to result submatrices inside to fill. * Try to stop on 4x4 matrix and use Numeric.Matrix4x4 to multiply. Maybe it will be faster. * Do not use Task.Run on small jobs on lower levels, use it only say 4 times on the top level only when you divide matrices first time. * Recursive algorithm can be slower anyway because of constant cash misses because of non linear calculation. UPDATE: * Probably the same with huge once allocated matrices you can do for temporary matrices.
By the way, to get ```Is hardware accelerated : True``` you need to compile with "Prefer 32bit" disabled.
&gt; Q: I heard Bower is dying? What about tooling inside Visual Studio? &gt; A: ... not all rumors you hear are true. ... ...but, some of them are. Wanting that not to be the case because some parts of the VS tooling rely on it isn't going to magically make it not dead. I think it's a little insincere to play it down as though there's no problem here. There's a massive problem with relying on bower, and the solution is easy: **DONT**. This has been discussed before, at length.
It means, here you can add your own lines of code to do something with the text string that's been identified.
Enums are one of the few places Java beats C#, in Java enums are classes and you can declare variables that have specific values for each enum entry. In C# they are just ints.
Giving that he says that don't know if it works with WPF, I hardly doubt it will work with UWP. Would be awesome! :(
There's [Owin](http://owin.org/) which is used in [Katana](http://www.asp.net/aspnet/overview/owin-and-katana). It is simple and makes writing an API easy. Nancy is similar as others have stated.
you can write your own with mono.net.httplistener from nuget
ReadLine returns null at EOF, so you can reduce operation complexity by one method call: using (var reader = new StreamReader("file")) { var regex = new Regex(@"WHATEVER", RegexOptions.Compiled); var line = reader.ReadLine(); while (line != null) { if (regex.IsMatch(line)) { /* do shit */ } line = reader.ReadLine(); } } Also, Regex is great, but it really depends on what OP is looking for in the string. If you can solve the same problem with a simple `StartsWith`, `EndsWith`, or `Contains` then it is faster than using Regex.
You actually can declare enum values in c# to be equal to specific values as long as the values are of the underlying type. Typically int, the approved types for an enum are byte, sbyte, short, ushort, int, uint, long, or ulong. A common case scenario for setting the enum values to be equal to specific values is a bit mask: [Flags] enum SomeEnum { None = 0, FirstValue = 1, SecondValue = 1 &lt;&lt; 1, ThirdValue = 1 &lt;&lt; 2 } 
For communication between two different running applications you want to use named pipes, or some similar concept. I've also seen lots of storing things in a DB and then polling the DB for updates, though that counts as "saving" it. If these are web apps then also consider just making an endpoint for each other to communicate across (and secure it somehow). Sharing a library won't work because the library becomes part of whatever runtime loaded it: i.e. ApplicationA and ApplicationB will have their own distinct copies of SharedLibrary.dll in memory.
+1 for Nancy or ASP Core of you want multi platform web api
While Java is definitely more flexible in that regard, I have also seen it used to build monstrously complex things that really should not have been enums. So, great power, great responsibility, etc
Is this a type safety thing or does this feature just not exist yet? I suppose I'll get around it by changing the parameter type to Object. It will work exactly the same. 
I found it practically and just switching to 32bit, which I tried first, does not fix it.
No, it's not related to passing by value or references. 
https://github.com/aspnet/KestrelHttpServer 
Technically, they are structs containing a field of type &lt;certain numeric types&gt;, and a bunch of constants. The language hides this, though.
WFA?
I've been having some really good results with [mHttp](https://github.com/joongonn/mHttp) - it supports websockets too :D
i was able to make it as message box but wasnt able to make it appear on the label!
Oh! It's label1.Text = blablabla;
And not label1.Show(blablabla);
okay so it will be something like this label5.text = " The Average is " + average.ToString("n1"); i ve tried that and it says 'Label' does not contain a definition for 'text' and no extension method 'text' accepting a first argument of type 'Label' could be found (are you missing a using directive or an assembly reference?) 
Text with capitalized "T"! Never forget that programming is CASE SENSATIVE :D Don't worry, you'll get the hang of it.
Thanks, that was dumb of me... didn't realize you had to put ref on both the parameter and the function (it was trying to say I couldnt lol).
Maybe you have skype or something? I would love to teach you what I know so you could get a high grade!
Removed: Rule 4. Maybe try reposting with more context about what you're trying to do and why? Also, there are quite a few decompilers out there you can use to extract the original source code (more or less). Maybe give those a shot?
Does Nancy have any form of https?
put a /u/ in front on reddit, like /u/the0MIKE or /u/TangibleLight.
You realise it would be much cleaner, simpler, and more elegant to return `shuffledDeck` right?
WFA...Windows Form Application?
Didn't you post a crazy ass generics question the other day? I don't know exactly what you guys are doing but it feels like you are on a generics hype.
MVC is light years better than web forms. Take some time and create an MVC app from an EMPTY .net solution... there are minimal files that you need to actually run an app.
I like it when a language gives you enough rope to tie a fancy knit or to hang yourself. What you do with it is up to you...
You can't actually do this, but enums are equivalent to enum MyEnum { ENUM_1 = 1, ENUM_2 = 2 } sealed /*no beforefieldinit*/ struct MyEnum : System.Enum { public const MyEnum ENUM_1 = 1; public const MyEnum ENUM_2 = 2; public int /*rtspecialname*/ value__; } you can see based on this how a constructor would not apply
I don't have an issue with tracking references, but I thought there might be some special issue with Dictionary that made it particular for memory management. Thanks for the advice, though.
also just keep in mind that &gt;form of an array (called args) whose length is unknown prior to the method definition in c#, any array that exists has a known length in `Array.Length` this is as compared to eg c where the array is a pointer and it's length is unknown and must be provided, `int main(int argc, char *argv[]) { ... }`
uhmm, mein Deutsch ist nicht das beste, aber kannst du mulichwisten schrieben en English?
Never expose your application server directly. Use NGINX or similar in front (and let it handle HTTPS).
What's the version of your Visual Studio? What's the version of your NuGet extension within Visual Studio? What framework version are you targetting?
from [help &gt; about](https://gist.github.com/Coding-Enthusiast/88ecd2160242d2958e22e0a3360e7378) VS 2013 (V12 update 4) NuGetpackage manager 2.8.5 i don't know this last one! but here is the [link to Wampsharp Nuget page](https://www.nuget.org/packages/WampSharp.Default) it has 4.5 listed and i don't know how to target any of them, i thought it is automatic.
it is 4.5 (from Project &gt; properties : target framework) the only other NuGet package that i have installed (in my whole life not in the same project) is Newtonsoft.Json and i never had this problem
Just pass along an intermediary data structure could be a stack or a queue if that helps. 
thank you for your help. the NuGet update worked. the package is now installed. and it has lots of dependencies!! which i think was the reason for the bug! PM&gt; Install-Package WampSharp.Default -Pre Attempting to resolve dependency 'WampSharp.Default.Client (= 1.2.5.21-beta)'. Attempting to resolve dependency 'WampSharp.NewtonsoftJson (= 1.2.5.21-beta)'. Attempting to resolve dependency 'WampSharp (= 1.2.5.21-beta)'. Attempting to resolve dependency 'System.Reactive (≥ 3.0.0)'. Attempting to resolve dependency 'System.Reactive.Interfaces (≥ 3.0.0)'. Attempting to resolve dependency 'System.Reactive.Core (≥ 3.0.0)'. Attempting to resolve dependency 'System.Reactive.Linq (≥ 3.0.0)'. Attempting to resolve dependency 'System.Reactive.PlatformServices (≥ 3.0.0)'. Attempting to resolve dependency 'System.Reactive.Windows.Threading (≥ 3.0.0)'. Attempting to resolve dependency 'System.Collections.Immutable (≥ 1.2.0)'. Attempting to resolve dependency 'System.Threading.Tasks.Dataflow (≥ 4.6.0)'. Attempting to resolve dependency 'Castle.Core (≥ 3.3.1)'. Attempting to resolve dependency 'System.ValueTuple (≥ 4.0.0-rc3-24212-01)'. Attempting to resolve dependency 'Newtonsoft.Json (≥ 6.0.5)'. Attempting to resolve dependency 'WampSharp.NewtonsoftMsgpack (= 1.2.5.21-beta)'. Attempting to resolve dependency 'Newtonsoft.Msgpack (≥ 0.1.10)'. Attempting to resolve dependency 'MsgPack.Cli (≥ 0.6.2)'. Attempting to resolve dependency 'WampSharp.WebSocket4Net (= 1.2.5.21-beta)'. Attempting to resolve dependency 'WebSocket4Net (≥ 0.15.0-beta4)'. Attempting to resolve dependency 'SuperSocket.ClientEngine.Core (≥ 0.8.0.6)'. Attempting to resolve dependency 'WampSharp.Default.Router (= 1.2.5.21-beta)'. Attempting to resolve dependency 'WampSharp.Fleck (= 1.2.5.21-beta)'. Attempting to resolve dependency 'Fleck (= 0.13.0.57)'. Installing 'System.Reactive.Interfaces 3.0.0'. Successfully installed 'System.Reactive.Interfaces 3.0.0'. Installing... //the rest is reporting installing and sucess
I had to migrate from ClosedXML to EPPlus for exporting large result sets (in excess of 50k rows with 20-30 columns) in a project recently due to ClosedXML causing out of memory exceptions when generating the document, EPPlus on average uses about half the memory for my use case(s), just something to consider.
If you're going to be creating a new list in the method then you should be returning it. Otherwise you should be mutating the passed in list. Neither of these cases require passing in a parameter byref. You should only use byref when you're trying to output several variables. You should avoid unnecessary memory allocations and just mutate the list if possible. Also I'd just use linq for this: var r = new Random(); var shuffled = ordered.OrderBy(x =&gt; r.Next());
Take a look at Skip()
Save the input string to a local variable before parsing it. Then do the if (inputString == "00") break; You can follow that if statement with what you have (though you would need to make sure cel comes from parsing the inputString and remove the break check you currently have at the end).
So you want the input "00" to stop the program, but even when that's entered you're parsing it as an integer. So, every time you enter "00", the same line sets 'cel' to 0 (no quotes, it's an integer). Also, you have a syntax error inside your condition (cel = "00" should be ==). The quickest fix is to accept the input as a string, check if it's "00", and if not THEN parse it as an integer Console.WriteLine("Enter a temperature in Celsius or press 00 to leave: "); string input = Console.ReadLine(); if (input == "00") break; int cel = int.Parse(input); // ... However, you could also structure this better, using concepts you know already. You've probably been taught do-while loops as well, which will help you avoid using 'break' when it's really not necessary. Repeating user-input is one of the common uses for do-while loops. Since it looks like homework, I won't give you that answer but instead will let you think about it. 
Can't edit on this free app, so: https://en.m.wikipedia.org/wiki/Fisher–Yates_shuffle
Would you believe I didn't even know about that function? Seems like that was just the input I needed. Actually in the short time since I saw your comment, I've now thrown together a rudimentary paging system... Want to see? 
Go for it. 
You need to subtract 1 from page otherwise page 2 is getting rows 20-30
That also means you don't need an if statement as when page is 1 you'll skip nothing. Skip((1-1)*10) is Skip(0)
Take a closer look at the end of the line you are declaring "function" on. There's something at the end that doesn't belong there.
Look at the timer method. Count the curly braces. What are you missing on the function method for curly braces? What's there instead?
doh;
https://www.youtube.com/watch?v=OCmuATH2yzo
Then its your type. In either case, whats the error that actually occurs?
I gave the error above. http://i.imgur.com/XZkOdoT.png
The error is because you cannot access non-static members/fields as part of field initializers. Your old code was within a constructor/method (so after class initialization), but your new code has been added to a field initailizer. You can only access _static_ members in this way. To fix it, you need to move the code back to your constructor. Arguably, this is the best place for it anyway.
Did you use to write C by any chance? That line would look more in place in a .h file.
It just needs opening and closing curly brackets, like your timer method has. private void function(object sender, ElapsedEventArgs e){ }
The problem is you are trying to create a new property in a different scope or trying to initialize it with an unknown value. If you set it in the same initialize method from your other post it should work, just remove the public part as you aren't creating a new field there, but just setting it's value
if (y % 3 == 0 &amp;&amp; y % 5 == 0) is true, (y % 3 == 0) would also be true. then in your case the "Fizz" would be printed and the rest will be skipped.
In short, your most specific condition needs to go first, and (y % 3 == 0 &amp;&amp; y % 5 == 0) is the most specific.
Still no luck. http://i.imgur.com/FNK5CwK.png
That's kind of what I'm working on now sadly. I have a timer, but it won't run. No errors. http://i.imgur.com/AnZ3bVZ.png
Perhaps you're getting an exception trying to alter the GUI components from a background thread. See: http://stackoverflow.com/questions/18877671/system-timer-timer-is-other-than-ui-thread-or-not or http://stackoverflow.com/questions/13050784/why-doesnt-system-timers-timer-update-non-busy-ui EDIT: Also, it's superfluous to set the `.Interval` in this case as it's already supplied in the constructor call.
A couple simple things, why is your atimer declared inside your runTimer method.. It will immediately go out of scope. Secondly, are you ever calling runtimer()?
I don't know considering the console writing doesn't work either. It never prints to console.
Oh boy, technical debt.
Sorry, it's a bit out of date now. I got it running, but as said. The timer doesn't loop and I'm unsure how to fix that ^^;;; Timer:http://i.imgur.com/ueaHd1x.png Here's what's triggered: http://i.imgur.com/x5i0IPn.png
Check out the [docs](https://docs.microsoft.com/en-us/dotnet/articles/core/index)([and ASP](https://docs.asp.net/en/latest/)), the getting started sections have you covered.
I see you understand the issue now, but if you have similar problems in the future, the best way to figure it out is to pretend to be the computer and "run" the program yourself. Get a pencil &amp; paper (or use Notepad, whatever) to keep track of variables and their values, and in your head step through the program one line at a time, doing whatever the computer would do. So in the case of this program you'd start at the `int y;` line, and add the variable `y` to your notepad with a value of 0 (since this is the default value for integers). Then you'd move on to the `for ...` line, notice that `y` gets set to 1 and update the value of `y` in your notepad (with just one variable like this, you could just keep the current value in your head, but with multiple variables it makes sense to write down their values!). Next you're onto the `if (y % 3 == 0)` line, so work out in your head if that expression is true, which it isn't for y=1, so onto the `else if (y % 5 == 0)` and so on. You'll find that often you can spot the flaw in the logic this way. Another good technique is [Rubber duck debugging](https://en.wikipedia.org/wiki/Rubber_duck_debugging)
Move the "int y" declaration into the for loop: for (int y = 1; ...) Variables should be moved to their innermost scope possible, and you don't use y outside of the for loop.
Even if it were to run correctly it would still not work since you are not allowed to make GUI changes on non-GUI threads, and the timer callback occurs on a background thread.
All objects get garbage collected unless they pin themselves somewhere, which I don't see Timer doing.
[By my google-fu](http://stackoverflow.com/questions/6799955/how-to-detect-windows-shutdown-or-logoff), there are solutions that seem "standard". The problem being that system shutdown is quite short these days in most cases, so it's possible you can't reliably detect it in your program before it's closed. For console programs, you can kind of workaround by detecting [when the console gets closed](http://stackoverflow.com/questions/11291352/shutdown-event-for-console-application-c-sharp) (there's also this [hackier way](http://geekswithblogs.net/mrnat/archive/2004/09/23/11594.aspx)). Ultimately, have a look [here](https://social.msdn.microsoft.com/Forums/en-US/53e109b2-13c6-47f0-8ced-b5de93d32d1d/detect-windows-shutdown-in-consol-application?forum=csharplanguage), looks like there are a bunch of ideas on the matter.
Don't bother with WCF unless you want fancy stuff like events and duplex connections. Use a REST service with WebAPI 2.0. It's really easy to do. It just uses standard HTTP Verbs. The service could connect to a database of register keys and verify the installation, then deliver an update package. Google for creating a REST API using C#. Loads of info about on how to do that.
Not sure about console, but WPF app has ApplicationExit event that handles Windows shutdowns among other things.
Except as far as I can find monodevelop doesn't actually support .NET core properly yet and building a new project in mono at the moment seems insane.
Have you looked into making it a service? More reliable options are available there. 
But also in a C# interface or abstract class (with the abstract token in front).
In this case the error message points pretty clearly to the problem, but try accidentally removing one } in a program and watch everything go to shit.
You don't need to do this. Just write the app to do the clean up code then execute under local or group policy. There is a policy event that fires scripts when windows is shutting down/starting up.
Did you remove the `richTextBox1.Text = "It worked";` line or put the `Console.Write` line before it? If not, the exception would cause the method/program to abort before writing to your console. EDIT: Lovely. From the [link posted below](http://stackoverflow.com/questions/18136735/can-timers-get-automatically-garbage-collected/18137151#18137151) the `Timer.Elapsed` event will swallow any errors thrown. I would suggest you get rid of the rich textbox writing (for now) and maybe toss in a debugging breakpoint to ensure it's entering the method (it should be at this point).
Sure, I agree 100% on that.
Tell me more....I'm using code-first.
This is the way to do it. I've got some stuff I need done as the machine is shutting down, but there's no need to detect anything. I just use a regular old batch file to do it, and just run it from (in gpedit.msc) Computer Configuration --&gt; Windows Settings --&gt; Scripts --&gt; Shutdown section.
I don't know how to do this but you're asking for a bad race condition by having your clean up process trigger and try to finish before the system's shutdown process.
You'd be better off using the official API: https://api.tfl.gov.uk/
&gt; As John pointed out in his answer, both timers register their callback (System.Threading._TimerCallback) in the GCHandle table. As Hans pointed out in his comment, the state parameter is also kept alive when this is done. &gt; The reason System.Timers.Timer is kept alive is because it is referenced by the callback (it is passed as the state parameter to the inner System.Threading.Timer); likewise, the reason our System.Threading.Timer is GC'ed is because it is not referenced by its callback. http://stackoverflow.com/questions/4962172/why-does-a-system-timers-timer-survive-gc-but-not-system-threading-timer
Nope, no need for threads for this. This looks reasonable: http://stackoverflow.com/questions/2414244/how-do-i-properly-close-a-winforms-application-in-c ; Can't really tell without knowing how you manage your forms.
Most often formulating what you want in a question is just enough push to get the problem solved. Ergo [rubberduck debugging](http://www.rubberduckdebugging.com/).
This is assuming of course his user has such permission. 
Late to the game, but wanted to get a little clarification regarding the "overall" success of what you're trying to accomplish. When you are searching through this text file, will the target text ALWAYS exist entirely in a single line of the source file, or can it span multiple lines? If it spans multiple lines, you need a completely different approach from the answers so far. Is there a special format to the file? Looking for quotes has me wondering if you are dealing with some type of delimited file that may have a more suitable approach to resolving. Will their ALWAYS only be only one set of quotes on a given line? If not, is the one you want always first? Also, a faster way to test for and extract the value you want if the quoted value always exists somewhere in the middle of a line from the file would be to use Split. If you split on the quote and the resulting array has 3 elements, the your target string is in the middle. var fragments = line.Split('"'); // Either assign the value var value = line.Length == 3 ? fragments[1] : null; // or test for the length and do something else if(line.Length ==3){ Console.Write("Lookey what we found: {0}", fragments[1]); } 
...did you try Google?
Right, that's why you don't pay attention to the marketing and look at the description. * Cognitive Services - I presume is to do with natural language parsing, understanding, and interpreting syntax. i.e. Google Voice, Apple Siri, and Microsoft Cortana * Azure Machine Learning - exactly what it is says, except in the cloud * Azure IoT Hub - IoT is internet of things, hub would be to manage all those IoT devices. And again Azure means in the cloud * UWP - "The purpose of this software platform is to help develop Universal apps that run on both Windows 10 and Windows 10 Mobile without the need to be re-written for each." 
you should split this method into a few more submethods. pull the console writeline out, make the transformation functional. 
Can be deployed in a domain environment if the admin are OK with it
I'm still very novice, thank you for the help.
http://www.dotnetperls.com/array Basically, refer to an array item by its index, e.g.: fingers[2] might be the middle finger. When you're new to arrays you need to always remember that the first item is 0, not 1. So an array of length 5: int[] fingers = new int[5]; has no [5] index, only 0-4. You can also have multi-dimensional arrays, so the first index could be the hand and the second index the finger on that hand: int[,] fingers = new int[2,5]; fingers[0, 1] could be the right thumb, and fingers[1,1] could be the left index finger. Set an array value: fingers[1,4] = 9; Get an array value: var x = fingers[1,4]; Of course replace int with any type you need an array of. If you have complicated needs you might be better off looking into List, Dictionary, and so on as well. 
It's hard to know exactly what your goal is with out an example, but there are a lot of different data structures you could use. It really depends on what you want to do with the data and how you want it organized. If you want to be able to find specific values you could try a dictionary for fast lookup based on a key. 
Could I ask for one follow up in helping me here? Lets say I have Fingers[5,5] set up. Is there a way I could easily make multiple = the same thing at once? Say I want [0,1] - [0,3] all to = 1. Could I do that in a single line?
I don't think you can do it. ~~The easiest way I know of would be a 'foreach':~~ EDIT: you can't do this in a foreach. Ignore my stupid comment. 
Or i think task scheduler can also schedule tasks to trigger on shutdown
Genuinely good to know, thank you for information.
&gt; They can only be 1 or 0, but a 0 can never be before a 1. You literally just stated your criteria. Even without trying to be clever you could just do for (int row = 0; row&lt;=4; row++) for (int col = 0; col &lt;4; col++) if (a[row,col] == 0 &amp;&amp; a[row,col+1] ==1) throw new Exception("zero before one"); Which honestly now that I look at it, doesn't even seem like bad code. It's simple, direct and does exactly what you asked for. 
This doesn't work. That's a compilation error
Sorry, I was doing that from memory, and it's obviously wrong! In my defence I rarely use arrays, I mostly use lists, for which that code would work... I think for arrays you would have to do a standard for loop: for(int i=0; i &lt; fingers.Length; i++) { fingers[i] = 1; } 
Fyi, even with a List, the foreach code can't compile. It is a compilation error to assign to the iteration variable. 
Might be an idea to use a bit array and loop on it.
haha, you're right. My head is ignoring the fact the variables are int. That means you'd have to be changing the variable inside the loop, which as you say you can't do. I'll edit my responses to prevent giving out the wrong info.
You have a solid answer already, but you can always use LINQ and Regex :) var regex = new Regex("^.*?01.*^$"); var hasAnyInvalidEntries = data.Select(x =&gt; String.Join("", x)).Any(regex.IsMatch);
Awesome, thanks for the information!
looks like a school assignment!
I just use DateTime.Now to stay current
Go home, Dad.
What's line 2? The "{"?
Also note that condition will be checked before executing the loop body every time. Not just after the first entry. for (;false;) [statement] Will not execute statement 
Function breakpoints usually show up on the curly brace. If that breakpoint isn't hit then I assume that the delegate isn't attached to the event member on the Form instance
Hey this might seem off-topic but I am a .NET developer and I want to move to New Zealand one day. How does the job market/living expenses look over there?
 // It's five o'clock somewhere from timezone in TimeZoneInfo.GetSystemTimeZones() let local = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, timezone) where local.Hour == 17 select local
Nice, thanks!
Get a free VS Dev account here: https://www.visualstudio.com/en-us/products/visual-studio-dev-essentials-vs.aspx Then get the free pass to PluralSight for 3 months from your dashboard area. Then take https://app.pluralsight.com/library/courses/c-sharp-fundamentals-with-visual-studio-2015 You could probably skip over the first few videos, but I recommend watching them all. You can also take the free assessment and it will place you into a set of courses that it thinks you should learn 
that sounds great! sounds like theres a possibility if i pursue it!
I can't help you other than to say that "BananaGetter" offends my sensibilities for some reason. It just seems like a really ugly name.
Is it possible to provide more context? Because the property is read/write, perhaps there's a bit more than this. From the _caller's or external API's_ perspective: * Is your intent that consumers treat the delegate _like_ it's a class method and it's only invoked (that is, `var banana = myObject.GetBanana()`)? * Or is it your intent that consumers treat it like a variable and passing around references to it, writing to it, assign a new delegate to it, etc.? For example, `Func&lt;Banana&gt; bananaDelegate = myObject.GetBanana;`? * Or are you doing both?
It's a configuration property, so setting is the first use case, not getting, not invoking.
Only in my code, not the user's.
Maybe we should just start ginning up alternate suggestions. * BananaAccessor (if 'BananaGetter' isn't sufficiently comp.sci.) * BananaFactoryStrategy (if you really like patterns) * CreateBanana (if 'GetBanana' doesn't quite do it for you) * InitializeBanana (maybe if it's an action that sets a Banana property elsewhere, because you hate functional programming and also all good things) * BananaTree (if you like names that *sound* sensible but are actually confusing and misleading in context) * AccessoBananum (if you really liked *Harry Potter and the Et Cetera, Et Cetera*) * BananaBanana (Banana banana. Banana banana, banananana.)
*How* is it used, not where? Is the Func being passed to something else, or is it being treated like a method inside your class?
I can't speak for u/FizixMan, but I'd probably decide what I would name it if it were just a method, and use that for the name (so, a verb phrase).
I'd call it BananaPredicate. Some feel this is a throw back to hungarian notation, but I mean that's what the thing is. I feel its the same as naming a variable memoryStream or something like that.
I put together C# Digest, that's how I know how much love and hard work goes into it ;) All the others are really sources for news and I like to read/listen to them.
I don't do .NET for living anymore and I still listen to you guys. Keep the shows awesome :)
yeah yeah, sorry was just reading this on my phone and thought it was returning a bool. Yeah, I'd probably end up with a BananaFunc in there and would happily wait to take my shaming from whoever could give me a better name.
I think that is feasible - checkout flatmates listing at [trademe](http://www.trademe.co.nz/flatmates-wanted/wellington). If you cook you probably spend around $500 on food. If you eat out cheap places are like $10 lunch and $20 dinner. Alcohol is expensive (I come from a place where beer in a pub cost $2) - beer in a pub is $10. I think graduate salaries (so people just out of school or a bootcamp not you) are at least 50k and you can calculate [net income here](http://www.paye.net.nz/calculator.html).
Well, it does say "configurable". Truthfully, though, I like hollow names. The alternative is me staring blankly at the screen for 10 minutes while I try to think up a non-hollow name. As long as the method names are specific, I don't see the problem.
&gt;I think graduate salaries (so people just out of school or a bootcamp not you) Do you mean graduates as in Master's Degrees or Bachelor's Degrees?
Sorry if this is unhelpful but I just read a post on this sub about avoiding disposing HttpClient like that: https://www.reddit.com/r/csharp/comments/50hyfz/youre_using_httpclient_wrong_and_it_is/ As to your question, are you getting a HttpStatusCode.OK for your HttpResponseMessage.StatusCode ?
This just *feels* wrong. I've passed around `Func`'s and `Action`s in method parameters. But as a public property? Doesn't feel right.
I suggest https://www.microsoft.com/net/tutorials/csharp/getting-started from the r/learnprogramming wiki. If you select the "I already have experience with &lt;some language&gt;" it will skip past the beginner sections and just help you understand the differences.
You seriously rock, and your comment has made my day. Cheers. 
Don't convert to doubles. Especially in calculations. I'm too lazy to provide a reference (on mobile), but doubles (aka floats) are the devil, and if you use them in calculations, you're going to have a bad time. Whenever possible, always use an accurate data type like decimal, or int. I suggest you look into why doubles are inaccurate - it's actually pretty interesting and very good to know.
Found this in another sub; thought y'all might be interested. (It is written in c#)
Is it still developed? Last update is Dec 2014
Dude, it's `DateTimeOffset.Now`, we decided we actually care about time zone information.
Try out the immediate window in VS, you can call a method independently and it will spit out the result. EDIT: You could have a seperate class with your experiments as static methods and call them from the Immediate Window. Though i am not quite sure if thats what you are looking for
Yeah, a separate project with a bunch of methods seems to be the way to go. Just gotta figure out how to change which project is run when I hit F5. 
I cant find it in the Extension Manager. Is it released yet?
I love it! Sadly I don't use resharper anymore, but could this not be an extension for plain VS? 
I had the same, updated Resharper and voila! appeared in the extension manager. 
&gt; Just gotta figure out how to change which project is run when I hit F5. Right click the project in the Solution Explorer panel -&gt; Set as StartUp Project 
Where are you looking? This is a ReSharper extension, not a VS extension. Tho I don't understand why - this is a prime example for Roslyn and Analyzers. Probably to support earlier VS versions.
&gt; I think C#N blog posts are fine until C#N+1 is useable (beta, RC, whatever). So, C#7 blog post would be alright until C#8 is here. I dunno, I don't think C#7 is quite usable yet, but I'd hate to see another post about string interpolation. I think the cutoff should be timed, I.E. you can post about a new C#N feature for only two months after C#N has been released.
I agree, I just a lot of C# 6.0 features. Never bothered to use the static using statement.
* BananaPhone (Ring ring ring ring ring ring ring)
You'd really be better off just using a loop, but you could always create your own extension method: public static Extensions { public static void ForEach&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T&gt; f) { foreach (var x in source) { f(x); } } } You could also abuse one of the LINQ methods that force reification of the collection, like Aggregate() (but please don't) myList.Where(x =&gt; x &lt; 50).Aggregate(0, (_, x) =&gt; { Console.WriteLine(x); return _; }); But, really, just use the loop. As long as your where condition's short, you can just throw it into the foreach itself: foreach (var x in myList.Where(x =&gt; x &lt; 50)) { Console.WriteLine(x); }
Thanks, I'll try that one.
Hmm, interesting! One thing that's worth pointing out: you say, yourself, in your conclusions that: &gt; Declarative programming works best when generating sequences... In the examples you've given (and I suspect this would be true generally, but I'd have to put more thought into it to be sure), the declarative style actually hides the rules of the sequence. This might not be a problem for a simple sequence, but it isn't necessarily desirable. Let's take the Fizz-Buzz example. The rule regarding buzzes is that: &gt; If the number reached is divisible by five, they say “buzz”. And the imperative version directly shows this rule: if (i % 5 == 0) { entry += "Buzz"; } But the declarative version shows the following: var buzzes = Cycle("", "", "", "", "Buzz"); Because this example is trivial, it's trivial to see that the declarative example does the same as the imperative example. But for more complex examples, reading the declarative code may not immediately make it apparent what the imperative rule is from which the code is derived. In fact, my old maths teacher was very fond of giving the class sequences just like your declarative example, and asking us to work out the imperative rules for the sequence, as a challenge exercise! One solution to this would be good commenting - an explanation of what each declarative statement does, in imperative form. But then perhaps this might counteract the benefits that you're talking about. Thoughts???
Why not modify rule 7 so that "all content (submitted) must be made with some effort or quality" instead of just blogs? Doesn't explicitly rule out beginner-themed posts but requires that the user not submit "helo my name is jim smoth an 2dei we go ovr how make list in SEE SHARPE" level content.
Could be cleaned up even more, maybe less readable but less code foreach (var element in myList.Where(x =&gt; x &lt; 50)) { Console.WriteLine(element); } edit: I read down further, /u/Canthros already posted the same solution
I like contradictions though! I guess I meant to use 'simplified' or, as they called it in the old days, 'bummed'. I agree on your usage, I prefer to store things in named variables as well, but it seemed like OP wanted to have less code to get his result.
&gt; but it seemed like OP wanted to have less code to get his result. Then it's up to us to teach OP about the ways of Clean Code.
"Why fewer lines is often better, sacrificing readability, even in C#"
See, there you go pointing out something useful. I don't know if I can stick around if you're actually trying to help! I agree on the Clean Code - I'm still fairly new and forget sometimes that it's not just about the result.
...because it's not like MS have made mistakes in the past when jumping on bandwagons, is it?
You can select into a function that prints x and then returns x. Deferred execution will require you to enumerate the IEnumerable to get the prints out though. 
I agree. Fizzbuzz was perhaps a poor example because the requirements/description of Fizzbuzz _is imperative_. Converting it into declarative code is kind of twisting it around, and in so doing, the requirements/rules/intent is lost. To me, declarative programming is about describing _what_ you want to do, not _how_ you go about doing it. Which again, drives that Fizzbuzz is a bad example because _what_ you want to do **is** _how_ you do it; working around that just obfuscates the intent. Even by that definition, I would argue that the "declarative" example here isn't very declarative; it's just [trying to be clever](http://programmers.stackexchange.com/questions/25276/why-is-cleverness-considered-harmful-in-programming-by-some-people/25281) with no _real, practical_ benefit. You should be able to read it, like english, and understand what it's doing. Not read it and scratch your head. The `GenerateFizzBuzzFooBarBangList` just generates a lot of [WTFs/minute](https://blog.codinghorror.com/content/images/uploads/2009/02/6a0120a85dcdae970b012877707a45970c-pi.png) and, I would argue, dangerous for someone to modify the requirements and maintain correctness. (Even the way they wrote the "imperative" Fizzbuzz implementation is a bit awkward; it can be rewritten to be much more direct and clearer in its implementation of the requirements.) A good rule of thumb in deciding which style (declarative, imperative, or other) of programming ought to be used is which better describes the intent or behaviour of the task at hand. This might be a bit subjective though, and probably influenced by the past experiences of the developer. Of course, context is king and exceptions are abound. The "declarative" version of the Fizzbuzz posted here (if I'm reading it right) has _5_ iterations from 1 to 100 and certainly has more overhead than the standard `for` loop. While trivial in scope/scale here, in some contexts this can be debilitating. For example, the Roslyn compiler had to ditch many of its declarative LINQ based iterations to manage object allocation, garbage collection, memory usage, and performance. Or sometimes the logic within the loop is complicated enough that twisting it into a "declarative" format might cause a lot of unnecessary work. Regardless, it's definitely worthwhile for developers to be able to program effectively in both. But choose the right tool for the right job.
This should do the trick, sounds an awful lot like a homework assignment though.. List&lt;Fruit&gt; fruits = new List&lt;Fruit&gt; { new Orange(), new Apple(), new Pear(), }; foreach(Fruit fruit in Fruits) { fruit.Name(); } //print random fruit Random random = new Random(); int number = r.Next(0, fruits.Count); fruits[number].name();
How I wish it was a homework assignment and that I could go to school for this. I understand how this works in the example above. I want to work with the base classes and not instantiated classes. Say, something like (but this is probably very wrong) List&lt;Class&gt; FruitList = {Orange, Apple, Pear} foreach Fruit myFruit in FruitList Fruit newFruit = new myFruit;
With my limited knowledge I am having trouble understanding how static classes are a solution to this problem. Could you show me a basic example or perhaps a relevant guide? Also I am using classes defined by interfaces which I believe prevents me from simply defining all of this within a static class? Again my understanding is limited. Thanks for any help you can provide Edit: Maybe I am missing that you really can just create a List of classes? what would the syntax be like?
If you have an application with data, you will probably need LINQ.
The given example works with the base class - but of course you cannot instanciate an (abstract) type. So there will always be a location within your code where you instanciate a *concrete* type. So perhaps you look for some kind of *factory*, which creates objects by a given *category*, an enumeration or string for example? 
If you want to use methods and properties of a class without instantiating it, you have to use static. iirc you can use const in your classes to get around this. Something like Public const string typeoffruit = "Apple"; In your Apple implementation, then you can call Apple.typeoffruit without instantiating it. The problem if getting a list of fruits from the bass class is that an interface can't declare any types like an enum which would be your list of fruit.
Depends on what you mean by "mastering" (and which kind of LINQ). I'd consider understanding the use cases of various standard collections and the common LINQ to Object methods something that should be taken for granted from any professional C# developer. LINQ to Objects is really just a handful of largely trivial extension methods on the `IEnumerable&lt;T&gt;` interface, most of them can be implemented in less than a dozen lines of code (ignoring the special case optimizations). There really isn't much there that I'd consider worthy of "mastery", this stuff should be self-evident for a competent developer. Collections are a bit more complicated. While 99% of the time you *can* get away with sticking everything into a `List&lt;T&gt;`, halfway decent devs should at least be aware of other types of collections such as hash sets and tables. Competent devs should at least roughly understand their implementations and their performance characteristics for different kinds of access.
don't master linq, master what linq is, passing delegates or expressions to be invoked, understanding lenses, ect. for instance, where clause ```Func&lt;person, bool&gt; myWhere = x =&gt; x.name == "cool"; ``` ```var people = new List&lt;Person&gt;(){ new Person("jason")};``` ```var coolPeople = people.where(myWhere); ``` you can then do things like build expression trees on a iqueryable for fast searching ect. edit: just realized in my example, i'm not cool :(
If you want to dive deep into LINQ, definitely check out [Jon Skeet's Edulinq series](https://codeblog.jonskeet.uk/category/edulinq/) where he re-implements the various LINQ-to-Objects methods. Great way to get a good handle on delegates, deferred iteration, yielding, and just getting a sense of how the various LINQ methods more-or-less work.
In my Unity game I have a class class Room : MonoBehaviour and many inheriting from it class RoomLong : Room class RoomAttic : Room class RoomBasement : Room Without going into a lot of detail the Room class contains code needed to get a room into the world and the RoomTypeOfRoom classes contain code to turn these into different flavors of rooms. Now it is pretty easy in the code to spawn a particular type of room such as RoomLong //newRoomPrefab is an instantiated GameObject //attach the RoomLong class as a component to the prefab Room roomScript = newRoomPrefab.AddComponent&lt;RoomLong&gt;(); //build out the prefab with walls, doors, etc roomScript.Build(); But it will be very difficult and lengthy to write this way when there are dozens or hundreds of types of rooms! And I need to work with the base types. I would for example change the above so that RoomLong, which is a class/type, can be fed in through a variable So how can I work easily with iterating through or selecting from lists of classes? Again I know this is not functional code but the key here is the last line - myFruit is a reference to a member of a list in a loop, it is not a class itself; List&lt;Class&gt; FruitList = {Orange, Apple, Pear} //these are base classes foreach Fruit myFruit in FruitList //for each of these classes Fruit newFruit = new myFruit; //instantiate a new instance of the class
 public abstract class Fruit { public abstract string Name { get; } protected Fruit(){} private class Orange : Fruit { public override string Name =&gt; "Orange"; } private class Apple : Fruit { public override string Name =&gt; "Apple"; } private class Pear : Fruit { public override string Name =&gt; "Pear"; } private static readonly Dictionary&lt;string, Func&lt;Fruit&gt;&gt; ctors = new Dictionary&lt;string, Func&lt;Fruit&gt;&gt; { {"Orange", () =&gt; new Orange()}, {"Apple", () =&gt; new Apple()}, {"Pear", () =&gt; new Pear()}, }; public static Fruit Create(string name) { if (!ctors.ContainsKey(name)) { throw new ArgumentException($"Unrecognized fruit " + name + " requested", nameof(name)); } return ctors[name](); } } This is probably a bit overkill for whatever you're up to, though. ETA: or maybe not, if your actual code has 'hundreds' of subclasses that need juggling.
Personally i use it constantly. It makes code so much more readable. I sort of think with linq once you get to grips you start using it for everything. As someone else said if you work with data alot its pretty much essential. For instance a trivial example like Distinct void Main() { var example = new int[] {1,2,3,3,3,4}; var distinctArrayLinq = example.Distinct().ToArray(); distinctArrayLinq.Dump(); var distinctNoLinq = GetDistinct(example); distinctNoLinq.Dump(); } public T[] GetDistinct&lt;T&gt;(T[] items) { T[] distinctArray = null; var hashedItems = (new HashSet&lt;T&gt;(items)); distinctArray = new T[hashedItems.Count]; hashedItems.CopyTo(distinctArray); return distinctArray; } It just saves so much time.
I used something like that in a PHP project. I hated it. "Your method/class/wathever is one line longer than the max value allowed!!", "this file has excessive indentation. One level more for only this part is just plain wrong!!!". Code reviews should handle this kind of things.
Agreed. I have some code that takes a while to run, and then returns another view. This works fine removing my loading gif. For downloads I was hoping to do the same thing. Once the download starts I'm fine with the gif going away. Do you think there is a better solution implementing a loading gif?
Thank you for your kind words!
only if you define "power" to mean "express certain semantics with slightly less typing but with vastly less efficient execution". the good news is that the .net devs are hard at work trying to reduce that efficiency problem. Until then i would just go ahead and type a little more when possible. learning it is good so that you can recognize it and excise it if need be. it isn't hard to learn anyway. 
it absolutely sacrifices quality.
Outside of C#, knowing LINQ will prepare you for functional programming in other languages.
I expect the downvotes, I know that most programmers don't think performance is important. I am here to help them. 
We require a phone home every 30 days. It seemed a decent compromise, and if they unplug 1 day before the license expires those 29 days that they're "getting away with something" aren't that big a deal.
It's pretty important, but not imperative. Start with simple statements if possible to gain familiarity, and work up from there. One mistake I made early on was using it for everything. Know that LINQ is more expensive than other techniques, but will (typically) make your code far more readable. My advice is the avoid it for intensive operations, and focus on it for non-intensive operations that are often changed/maintained and need to be readable.
If you aren't already, you might want to use: https://github.com/PerfDotNet/BenchmarkDotNet You can get memory allocation insight as well. 
Also, with a List&lt;T&gt;L for (int i = 0; i &lt; list.Count;i++) //do something with list[i] is faster than using a foreach, and allocates less memory. I can't remember if there are array bounds issues to worry about with List&lt;T&gt; also, with raw arrays their are. (I've been doing a lot of benchmarking lately) 
There's always /r/dotnet
If they're downvoted heavily, doesn't that mean the system is working and new rules aren't necessary?
Perhaps. Still doesn't stop people from filing illegitimate moderation reports or commenting with complaints on posts such as these. Although, I don't know if that also means that "the system is working" or not.
Only if you work with data. :) Another words...yes, it's very important.
Why bother with needlessly slow C# when you could program in Assembly?
It's certainly useful for situations that range from just-above-trivial to moderate complexity. And at the moderate complexity side I end up adding a several-line comment explaining it for later-me who has to maintain it. Simple iteration over a collection, with nested code? Just do a foreach. Iteration with an operation applied to each element, and *nothing else*, then Linq is pretty cool. Extracting an element from a collection/dictionary with multiple selection criteria - still pretty useful. Anything above this -- you probably need to think about what you're doing a little while first. 
Maybe they have, maybe they haven't. Mobile market springs to mind... What exactly is supporting your argument that they've jumped on a bandwagon and "shot themselves in the foot" regarding MVC? Your beef appears to be entirely with their templates (which you don't have to use) and not at all with MVC itself.
What about using Reflection to get the type of the object as you iterate through the list? I don't have an example to show, but I remember doing something like this in VB.NET a few years ago.
You definitely should at least be familiar with it. How in-depth you need to go will depend on what you're doing. If you're doing MVVM it will be pretty much essential.
Yeah, I forgot to include the "I am simplifying things a lot" notice that I generally put on these types of posts. I was trying to explain pointers offsets *without* talking about pointers since OP doesn't seem to yet be at the point of worrying about them.
If you're reusing the myWhere Func.
From most of the answers here it seems there is a very limited understanding of what LINQ is. Can't see a single code example here that shows any true LINQ. When most people talk about LINQ they're referring to the powerful set of methods and extension methods that deal with manipulation of IEnumerable&lt;T&gt; or IQueryable&lt;T&gt;. [But this is not LINQ](https://msdn.microsoft.com/en-us/library/mt693042.aspx). **LINQ is the ability to manipulate IEnumerable&lt;T&gt;, IQueryable&lt;T&gt;, or indeed other monads, using first-class language keywords and operators**. This is LINQ: var q = from c in customers from o in c.Orders where c.Name == "Alfred" select new { o.Value }; Which the compiler effectively converts to: var q = customers .Where(c =&gt; c.Name == "Alfred") .SelectMany(c =&gt; c.Orders) .Select(o =&gt; new {o.Value}); However, you can use those functions without ever using LINQ. In fact, the shortcomings of LINQ (it does not support a comprehensive set of query operators like SQL) mean that for many non-trivial tasks you have to switch between the declarative/imperative approach of LINQ and the functional approach. This shortcoming, along with the fact that the functional form for expressing the query is just as readable/maintainable as the LINQ form, means that LINQ itself is rarely used in my experience. Having a good understanding of these functions is very important but LINQ itself is not all that useful.
Slightly off topic, but in the article you posted/written, you included `checked {}` arithmetic blocks for the "C# for loop" implementation, and state: &gt; Checked arithmetic is used in the loop body for parity with Linq, which also uses checked arithmetic on sum, though this has almost immeasurable impact on runtime. Actually, the `checked` block should have no impact whatsoever because it only applies to _integral-type_ arithmetic. The for loop, as written, will compile to the exact same IL code with or without the `checked` block.
If only reddit allowed people to upvote and downvotes posts. Then we wouldn't have these problems.
I pretty much just use LINQ by default, and optimize as needed.
Part of programming is knowing when to use certain things and when not to use them. I'm not really sure what /u/jackmott is trying to say. "Don't use LINQ" isn't particularly helpful. Examples of when not to use LINQ would be much more useful if you'd like to help.
I think it will work if you just omit the ToList(). ForEach should work against an IEnumerable, which is what Where() is giving you.
Please... public static Fruit Create(string name) { Func&lt;Fruit&gt; factory; if (!ctors.TryGetValue(name, out factory)) { throw new ArgumentException($"Unrecognized fruit " + name + " requested", nameof(name)); } return factory();
That kind of stuff is functional, yeah. I'm still new, but just today I realized I could replace an entire class with a single function that would construct an observable object and attached a bunch of linq statements to it. 
&gt; not imperative :-)
I disagree. C# is much more than LINQ, and mastering it isn't necessary. Knowing enough about it to be able to press F1 (or . and see what methods pop up in VS) is enough.
Lambdas are already pretty optimized like that, though.
GUI has "lost" interest since you'll do much with SPA javascript frameworks, and less and less with winforms (rip), WPF (might happen but....) and razor in MVC (still a lot, but very easy to get) game dev doesn't mean anything, it's like asking "okay, I know how to use a camera, now should I make a blockbuster or be a wedding photographer". There are many many things you must know to develop a game that have nothing to do with the rest of development... physic engine for instance. Being done with coding in console is also quite "easy" to say, but do you master threads, async operations, linq, database access, messaging between applications, delegates, etc? Or are you just bored to have a console app running white on black with pretty much no interactions? 
It depends on what you want to do. Web development is probably the most popular right now - learn basic web stuff first (HTML, JavaScript, basic site hosting), then WebApi and/or MVC. Desktop apps still have uses despite more and more things headed to the web and cloud - WPF will serve you best here. Mobile app development is still pretty big, and can be one potential client for a WebApi - Xamarin if you want to stay in C#, Swift if you want to learn native iOS development, your java background will serve you well for Android development. If you want to learn game development then try Unity
It does not. `ForEach()` is part of `List&lt;T&gt;`, not an extension method of `IEnumerable&lt;T&gt;`.
I've taken it before, I find that there are a few obscure questions on there about things. Some of the answers will be easy and obvious (*but be very careful, because there are syntax-tricky questions they throw at you; those are the worst*), others will be things you may or may not have done. The exam covers a broad number of topics. Things like: * How to load a DLL into the GAC (And what you use to do so) * How to sign a class library. I can't remember everything, but I remember it seeming harder than my test score would imply.
I agree with deadlychambers. But MS insists on new things, so you should learn new things in c# 4.5 or at least work year or two with specific version of .net and c#. There's no general coding questions, just MS new stuff. 
Because depending on your field, performance can be completely optional. Consider the fact that some developers don't care about performances because they don't need to write performance-critical algorithms. As always, it's the old matter of performance vs readability/productivity/maintainability.
But is it really worth it? That looks like some complicated call.
what books did you use to study? 
Why do you need different types for the different rooms? Classes are there for behaviour purposes. Does a RoomAttic have different behaviour to a RoomLong? If it doesn't then I'd question the need to have different classes. Maybe you can do something along these lines? public class RoomAttributes { public Size Size {get; set;} public List&lt;Location&gt; ExitLocations {get; set;} public List&lt;Artifact&gt; Artifacts {get; set;} etc. } public Room(RoomAttributes attributes) { // Do stuff with the attributes here } Then you create different instances of the attributes for each of the rooms and give them to the room class 
Like the other responses its more about memorizing the whole book then your programming skills. I am trying to get it at the moment and i already failed 2 times. With a month to prepare it is doable, just dont think you are going to get it by programming, you need the book and read the shit out of it. Pay close attention to the questions and the answers, because as already mentioned, they like to throw syntax errors in them.
I think questions should be posted in StackOverFlow or another similar Q/A sites. I would be more interested in read news about C#. Convert /r/csharp into something similar to /r/programming, but about C#.
I guess he used the official 70 483 green book edited by Microsoft
A friend of mine developed this sidebar using open hardware monitor. https://github.com/ArcadeRenegade/SidebarDiagnostics
It wraps a websocket connection to an event service, pushing the messages on to subscribers. The cool part is that creating and closing the connection are handled automatically as subscribers are attached and detached. 
Makes sense. Do you know what this feature is called?
I don't think it has a special name (or is even an isolated feature), it's simply a block with the same scoping rules that all other blocks use. Technically `if(x) { }` is just an `if` statement followed by a block `{ }`.
Hm... that sounds like a strange problem! It smells like a falsy design... because so many subclasses (at the same level) just lead to the problem of instanciating the *right* one. Are you sure you cannot identify some level in your class tree for grouping factories according to your room siblings? Perhaps you should strive for reducing the amount of classes by defining more different behaviour classes for rooms or sub components of rooms. Then you can have traditional factories for them.
Oho! Thank you for learning me something new! This will help me MASSIVELY for all programming languages.
It's just block scoping which in C#, happens to restrict scope to a subset of function's variables (whatever's above the block if you think of your code as a tree). It's similar to how in the below code, there's a scoping issue: if (true) { int i = 10; } i = 3; // i out of scope If you were implementing a compiler you'd be doing something like: Read a statement: The next token happens to be an if, indicating the start of an if/else. Eat the if. Read a token. It must be a parenthesis. Read an expression which must evaluate to a boolean, representing the conditional of the if statement. It happens to be the True constant, which is a boolean. Read a closing parenthesis. Read a statement representing the body of the if statement: The next token happens to be {, indicating the start of a block. Eat the {. While the next token isn't }: Read a statement... Eat the } We're done reading the block. It turns out the block is being used as the body of an if statement, though there's a good chance our recursive call to read the block isn't aware we're even reading into the body of an if statement. Read a statement: The next token happens to be i, which is not a keyword. So this has to be assignment, invocation, etc... while the next token is a period, eat that, then the next token must be another identifier (e.g. asdf in i.asdf) The token that follows is =, so we're dealing with an assignment statement, eat the =. At this point, we can read an expression (3) followed by eating a semicolon, though we already know i isn't in scope so we can error out here.
This is far more useful in C++ where objects immediately have their destructors called and memory freed once they drop out of scope.
Test Kings :)
The last time I took a MS exam, I had memorize the answers so well, I didn't even have to look at the questions. It is silly to actually study for the exam because nothing they ask you ever applies to the real world.
The long and short of it is that there aren't many uses for this, aside from the existing control structures and suchlike. That is, if syntax is more or less defined like so &gt; if (*boolean-expr*) *expr* where *expr* winds up being something like &gt; *expr* = *single-expr* | *block* &gt; *block* = { *expr*\* } So, it's exactly the same thing you do with for, foreach, if, while, using, etc when you have multiple statements. Without that sort of control structure, it's unidiomatic, and doesn't serve much purpose aside from reusing the same variable names.
I thought it was pretty difficult. When I was taking the test I felt confident I would pass but I think that Microsoft wants you to know it the MICROSOFT way. I took it 1 time and failed. I can't remember but I think I was 1 or 2 questions away from passing. I took it last year. I don't really need a cert in my job so it's not important for me to get. I do have a practice test with answers if you want to dm me your email address. 
That's no longer really a ForEach then - that's a map to self which happens to also run an action. You've introduced additional semantics on top of foreach which is misleading due to the allocation.
I don't think they are overloads. I think Bar() has an optional parameter, which means that if the parameter is omitted then it is given a default value. If the default value is null then just calling Bar(foo) all the time would be perfect. If the default value isn't null then Bar() is different than Bar(null).
In this case, I get a run time error if it is null - I think it is an overloaded method, not an optional param. Sorry for the misleading title - I added this comment above.
So, here's how I see things: - Good content: Not enough of it. Most of that would be related to personal projects / internals (what else can you really write about) and discussion on that doesn't generally get pushed up. See "Come share your side projects" threads I made a year ago. - Bad content: Too much of it. I definitely dislike the beginner content because of how repetitive it is. To me, the subreddit's problem isn't that there's too much bad content. It's that there isn't enough good content that gets upvoted. The bad content usually gets downvoted. What's usually upvoted is related to language/ecosystem developments and framework internals. That means posts on side projects (which is where I feel the majority of content could come from) or lessons learned from them don't get upvoted. I still do feel that encouraging side project discussion would be healthy for the community. I'm going to post a thread on that today to see how things work out. But last time I did this, a few threads in people were only posting top-level replies on their work, but not commenting on others'. I think there's a lot of alternatives we could take. E.g. having a C#/.net book of the month with a discussion thread, a "focus topic" of the month (e.g. computer graphics) which the community would vote on, then create content for, etc.
It really depends on how often you have to call this method. If this only occurs once or twice, the raw if-block is fine *in situ*. If you've got a bunch of calls that all need this kind of thing, it would be reasonable to stick together a wrapper for the method and use it, instead. If it's a public instance call, you could do that with a extension method. If you wanted to know what the difference is, you could probably find out with ILSpy or dotPeek or Reflector.NET or something. I wouldn't recommend writing code around that information--since it's third party code, the implementation could be changed without warning, which might invalidate your own code.
Unity manages a lot of stuff; for example, it creates the instance of the class that becomes attached to the GameObject. Have you tried asking about what you are trying to do in a Unity-focused forum? 
I've been working with a friend on an app that keeps track of upcoming rocket launches, and makes sure you get a notification a user-defined amount of time before. We also give a livestream link, and an infosheet on the rocket and launching agency. It's not quite ready to share, since we've begun a major refactor, but we are getting closer. Our goal is, ideally, to be *the* place to keep up with upcoming launches. The is intended to be open sourced after our refactor is done.
Dude. That actually sounds awesome. Not sure if I want another app, but I really wish I'd get notified when a spacex launch happens or when a solar eclipse is going to happen. How are you scraping the launch information, or is it all hand-done?
I have. I am pretty sure that this is what I was after; https://msdn.microsoft.com/en-us/library/w3f99sx1(v=vs.110).aspx found finally via this; https://blogs.unity3d.com/2015/01/21/addcomponentstring-api-removal-in-unity-5-0/ Thanks to everyone for their help!
That's true, not so much fresh news every day. But it would be phenomenal if, time to time, we discover some good blogs about C# publishing here new posts
Understanding the internals is nice. What I think matters the most is getting into the functional mindset that LINQ gives you - that is, you're dealing with data transformation, not mutation. If you look at functional languages, LINQ is like operating on streams of data. 
What are you taking the exam for? Also confused.. &gt;&gt;I'm bachelor in computing and work as a .Net developer for 2 years. followed by. &gt;&gt;During my studie I also tried to focus on .Net So, you study .net, work in .net but want to take a test for .net? 
You can use it for declaring multiline inline functions ex1 Func&lt;int, int, int&gt; Add = (a,b) =&gt; { int x = a; int y = b; return a + b; // HA! }; or more realistically, var result = SourceItems.Select(si =&gt; {var temp = ...; return si;}); This, of course, can be put on multiple lines.
Is it with certification for dev anymore? Almost nobody asks fit that and haven't since around 2000
Your options as far as I can tell: 1. null coalescing op: `Bar(foo ?? CONSTANT)` 2. that if statement 3. Extension method with a different name (containing 1 or 2): public static void MyBar(this BarType @this, FooType foo) ... 4. adapter/facade patterns around the library to isolate that code from yours depending on how testable the code was and how long I expected to be supporting it, I'd lean towards #4
If you're interested in C#, I'll go after 2 things: 1. Web development (ASP.Net, Core, web api) 2. Microsoft is pushing hard their Azure. I'll go after that too. Good luck.
[MaterialForms - Schema generated material dialogs in WPF](https://github.com/EdonGashi/WpfMaterialForms). What I'd like to achieve in the future is automatic dialog generation for small DTO's. Say you have a Person(FirstName, LastName, DoB). You would ask for a DialogFor&lt;Person&gt;() which would return a strongly typed object which the user would have filled out in the displayed dialog.
How do I sign up to contribute or as a user?
I spent a few bored weeks writing a [ZMachine](https://github.com/BrianPeek/ZMachineLib) interpreter which I recently posted to GitHub. It's also available as a [NuGet package](https://www.nuget.org/packages/ZMachineLib/). I need to flesh out the docs a bit more and continue my v5 implementation, but it works reasonably well for v1-v3 games. A BotFramework "Zork Bot" is coming as well, but I haven't yet posted the code/URL quite yet. 
that being said it is a very effective workaround to the lack of top-level functions/constants/etc. that almost every other language has
I needed this like 4 weeks ago. I've since moved on to other projects but I was wondering why this doesn't exist. I'd like to take a micro orm like PetaPoco and MVVM dynamically in WPF. I'm not sold on EF since surprisingly a lot of projects need a portable data store like Access.
These exams can help a company become a Microsoft Partner, which comes with some pretty cool perks. In order to do that, you need to have your developers pass the criteria, which taking exams like this one.
It really depends but follow the money. A lot of enterprise projects are console apps so knowing how to interact with and manipulate data is huge. Then create a micro-service in .net core and learn to scale applications. From there you can add on any kind of UI in web, mobile or desktop. Game development, especially real time multiplayer games, rely on all of this infrastructure heavily. Game UI, short of Unity, is mostly done in a framework with configuration scripts interacting with the framework to define a game. So C# is really limited to the framework on the UI side.
Well, noob questions in general don't go over well on SO in particular, given their zealous 'zomg dupe question close it now!' manner. Those noob questions *really* belong in the search bar of one's choice, certainly not SO. That said, i like the idea of this sub being a bit more advanced discussion-wise while also remaining noob-friendly, which this rule would help a lot with. [Contrast this with SO: discussion discouraged, less noob friendly.] 'How do i use var' and 'what is wrong with my unity3d' are real questions, even if RTFM or lmgtfy.com is the right answer. [otoh, not knowing proper search terms can be a legit hangup when you're getting into something new.] "How to use var" type BS is pretty much just spam at this point tho.
I built LanHUB.net, event management website for medium to large Lan Parties. Get about a thousand attendees a year :)
We has some LINQ in our game that reduced the average framerate from 55fps down to 7fps. The amount of garbage LINQ seems to produce is huge. It saddened me because I really like the look of LINQ. But we just got resharper to convert the LINQ into code and the problem went away.
This isn't a "side project" as much as it is "my capstone project", but I'm thinking of making a neural network that uses genetic algorithms to teach itself to play Pac Man, similar to the [MarI/O project](https://www.youtube.com/watch?v=qv6UVOQ0F44). I've got a lot of research and tinkering to do, and I'm not even sure if I can pull it off by December, but machine learning is cool and I don't have any better ideas for a capstone project.
In C++ this is often used to more easily control scope guards using RAII. Specifically, you see it a lot with mutexes contained within scope guards. 
This is how it is used in C++ but it doesn't work so well in C# because you don't generally know that the object will be destructed when you go out of scope. You have to wait for the garbage collector to do it which might be right away or it might not. 
damnit I completely forgot about this half of c# for a moment
I'm working on an app which track flights, provide info on average age of airline fleet (also when an aircraft was added to said fleet), maintenance record of flight, usual route and anything in future that I might need. This is just for personal use though.
I'm writing a library to interface with and control a fingerprint sensor (model ZFM-20). My end goal is to use this with Windows IOT core on a raspberry pi 3 but right now I'm still writing it and using it on my laptop with a test app.
I created a console app that can take Security Groups from AWS and then you can save them as a default. Later on you can then compare your default security groups to your current ones and it will show you which ones were changed. &amp;nbsp; Currently I'm working on a Windows Application that will pull data from Twilio (phone records). It's multi-threaded in order to speed it up. Pretty fun stuff if you ask me!
A neural net for a Capstone project, jesus that sounds intense. What's your major?
Very cool. Not sure if overkill but you should check out projects like Roslyn that can parse C# solutions and give you more useful stuff like "this file consists of a tree, the tree consists of a namespace block, inside that is a class named X, inside that is a method named Y".
I like it :) 
I need to work more on [AutoCompare](https://github.com/StevenGilligan/AutoCompare), my kickass library for creating object diffs. I have started a pretty big refactor that's in my dev branch and it's almost done, I'm only missing a couple things and a good cleanup and it would be ready.
I dig it :) Which reminds me, I should resume my coding tuts before I forget everything D:
i was just trying to make a point with these example classes, in reality i had something like `void Initialize()` in mind where it uses a `HttpClient` to connect to internet and fill all the properties that way. and then i use the instance of the class to retrieve those properties `instance.prop1` so it is not really a `GetName()` simply returning the `Name` prop about the last part i read somewhere that you should hide the internal parts of your code from the rest of the world hence the private `_name` which i guess it works when i want to receive `Name` and change it then work with the changed version as `_name` internally without outsiders know. am i right?
i edited the classes to better reflect my question.
Why is snoo creepin on me?
Second thought.. you're right, and I take it back. The end-result just feel so hideously over-engineered.
We are still in an an early phase. I will keep you in mind for when we open up :) 
You should post about it on /r/csharp or a monthly side-project thread!
I would just call it bananaFunc, but as others have asked, why do you want a public function property?
&gt; What are you taking the exam for? Well. One day the manager has said "Here is XXX money for your training. This year I want to see you do some certificates."
I'd be really interested in reading a blog on this adventure.
I wrote a small and fast named string formatter called [FormatWith](https://github.com/crozone/FormatWith), after being dissatisfied with the speed and accuracy of some of the other options available. Specifically, it keeps allocations low, actually handles escaped braces properly, works with .NET Core, and is completely regex free :D 
I'd be interested in an analysis on why the alternatives (e.g. string.Format? how about string interpolation?) are so slow. Also, it's great to benchmark the performance but for something like this with a lot of alternatives, it would be nice to see comparisons as well.
He's just getting off to your enormously long LINQ query chain, which AFAIK is completely normal. Who isn't a bit IEnumerasexual?
The main aim of the library is to dynamically format strings at runtime, which you can't do with string interpolation (since the format string needs to be static in code, and is also just sugar for compile time string concat and `string.Format()`), and `string.Format()` only accepts integer parameters. String interpolation and the highly optimised `string.Format` are almost certainly faster than my code though. A good use case for this library is reading a format string from a configuration file at runtime, and then formatting it for use somewhere. An example might be a path like "./{year}-{month}-{day}-{id}.txt", which the user can redefine in a configuration file. The main reason I wrote this was because the other examples I found (mainly [here](http://haacked.com/archive/2009/01/04/fun-with-named-formats-string-parsing-and-edge-cases.aspx/)) either used regex and had issues with escaped brace edge cases (which a state machine avoids), used more exotic .NET libraries that were not available in .NET Core (some even invoked the .NET C# compiler which seems like a huge security vulnerability), or did a lot of unnecessary string operations (like `string.Replace()`, `Substring()`, etc). Also I love reinventing things as a challenge, so I was never just going to modify someone elses code ;) As for profiling, I haven't done any extensively, apart from generally observing that the my state machine method beats the regex implementations (no surprises here). In theory, I'm doing a lot less string operations and allocating a lot less string objects, so it *should* be faster than the Haacked implementation, although I haven't confirmed it with controlled testing. I could also probably turn some classes into structs, and get some extra perf there. 
I agree that there is some bloat, but I find some serenity in it too. IRouter approach is interesting. How do you avoid sequential typecast + null checks?
It's actually a desktop app that runs in the background. I accidentally used the wrong word. Right now it's winforms, but we're rewriting in wpf. 
:: slow clap::
What do you mean by portable data store? In the past I have deployed a configured EF with SQL compact or SQLite which are portable without any installation.
"usable" should be defined as "released". C# 6 features blogposts are forbidden once C# 7 is officially released.
I am pretty sure another post about string interpolation will be quickly downvoted at this point. I mean we should not be trying to replace the community moderation with moderator rules, we should use moderator rules to prevent jamming the community moderation system. Therefore I think C# N is OK up to the point where C# N+1 is officially released.
SQLite and SQL Server Compact are not Business Analysis friendly. Sadly, more often than not, I'm required to interface with Access which from my understanding is not supported by EF. In my development world, our magic is in highly customized delivery with abnormally short delivery times. This means that schema changes are often done by a non developer PM in Access with the client, a template generates our ORM and the developer tries to keep up with forms and business logic. It's not like schema changes every 5 minutes, most of it is data in our baseline schema. But the expectation is that something as large as SharePoint site, can be deployed in minutes over and over as for a client to play with using merely an adjustable framework configuration in Access. If we had a traditional development pipeline with enterprise databases, it would take weeks to do what we do in a few hours which affects the business margins
# added a cooler metalic look to the text https://i.imgur.com/N8UUvPT.png [for the header logo](https://www.reddit.com/r/CSSTutorials/comments/xcld3/tutorial_change_subreddit_logo_header_image/)
You have Console.WriteLine(numbers); This should probably be Console.WriteLine(number); without the s 
Ahhh silly mistake! thank-you for your response
Aha, this sounds interesting and quite advanced.
I'm upset that the question was closed because it's supposedly "opinion-based." In fact, it isn't, given their explanation of what "opinion-based" means. &gt; Many good questions generate some degree of opinion based on expert experience, but answers to this question will tend to be **almost entirely based on opinions, rather than facts, references, or specific expertise**. Your accepted answer is nothing _but_ facts, references, and specific expertise. &gt;:| Can you appeal the closure?
It'd make sense if the outer *result* was declared before the conditional block, but after?
Working on a "Swiss Army Knife" ping tool. It's an excuse to work on learning WPF and hopefully MVVM. It's been rather fun so far.
You don't have to override all properties of a base class if you are not make special cases out of them in your derived class. Same goes for methods and functions. Base provides 'default' functionality. All your derived classes are variations on the same theme. If you have no default implementation then just use an Interface. Personally I use an Interface for the base too.
Well yeah, games are the exception to almost everything. Most of us don't write games - we write boring applications used by government and commercial clients. Performance isn't as important as maintainability and cost.
Nice!
i did not know that LOL. reading about it now, but i still don't know how to type it in photoshop. i guess i have to manually rotate :)
If null is not the default value for an optional, it's pretty bad design (for reference types, of course) I'd say.
I wouldn't really say that at first glance this is "arbitrary" but I see your point.
I like an IRouter-like approach. If you add something like `bool HasHandlerFor&lt;T&gt;()` you can have an automated test that spins up a fully-loaded handler and then checks that all relevant types (e.g. all types from a particular assembly marked with a particular attribute) are registered in that handler.
copy paste did the job. [now with the real ♯ symbol](https://i.imgur.com/7RUXAPV.png)
Yeah, it's an explicit design choice made with C#, presumably to avoid bugs. It's not affecting the actual scope of the variable, which is the block it's declared in. 
/r/csharp_test/ is moderated by the same moderator /u/FizixMan , maybe tried CSS and didn't like it or people weren't interested 8-9 months ago?!
At least in debug mode on .NET 4.6, variables seem to be pinned till the end of the current function regardless of scopes. 
Did you take this from the /r/bitcoin logo?
I wanted to slow down a little bit this week and cover something a little bit smaller. I'm thinking about doing the Socket API next, but are there any requests?
yes and i made a reference to the creator of the design in my first comment.
The why is because in IL local-variables are declared at the very top of the block (like pascal/delphi) so the compiler sees this as you trying to redefine something later on as the error message suggests. Hopefully that helps someone understand this a bit better.
Yeah, it's definitely "surprising" code (and that's never a good thing).
Consider `bool IOneOf.Is&lt;T&gt;` and `T IOneOf.As&lt;T&gt;`. These methods come in handy e.g. when you've got an IEnumerable or IObservable of sum types and you want to do the equivalent of OfType or Cast.
OP is claiming that it doesn't make sense because even though the variable is in the outer scope, it's declared _after_ the inner scope block. OP thinks the inner scope variable declaration should be fine because the outer scope variable shouldn't be in-scope yet. I'm saying, that it just doesn't work that way. The outer scoped variable exists and is scoped for the entire outer block. (Accessing a variable before it's declared, even in the same scope, is a _different_ error altogether.)
This isn't true for the **IL**. But it could be an implementation detail of the runtime and the JITter. For example, the code: int x = 5; if (x &gt; 1) { x = 6; } int y = 4; if (y &gt; 1) { y = 6; } Console.WriteLine(y + x); Doesn't declare/put the `y` variable at the top of the compiled IL code: IL_0000: ldc.i4.5 IL_0001: stloc.0 // x IL_0002: ldloc.0 // x IL_0003: ldc.i4.1 IL_0004: ble.s IL_0008 IL_0006: ldc.i4.6 IL_0007: stloc.0 // x IL_0008: ldc.i4.4 IL_0009: stloc.1 // y IL_000A: ldloc.1 // y IL_000B: ldc.i4.1 IL_000C: ble.s IL_0010 IL_000E: ldc.i4.6 IL_000F: stloc.1 // y IL_0010: ldloc.1 // y IL_0011: ldloc.0 // x IL_0012: add IL_0013: call System.Console.WriteLine IL_0018: ret EDIT: That said, perhaps some places of C#, depending on the context it _does_ move the IL declaration to the top, I'm just not aware of any off the top of my head.
The CSS was derivative of /r/dotnet (which in itself isn't necessarily a bad thing, but can sometimes be confusing for subscribers of both subreddits) but wasn't finished. There were still some significant formatting issues that were left unresolved. In general, CSS can be a pain to keep up to date and working properly cross-browser and keep up to date when Reddit makes changes. I would like to have a nice one set up (maybe like Visual Studio?) but short of someone skilled and trustworthy volunteering to make one and keep it up to date, it probably won't happen. FYI, I'm in the process of setting up this image. Just (surprise) some CSS issues getting it to be flush with bar. Personally, I would like more emphasis on the "#" part and make it look like "C#" not with the "#" inside the C. To me, right now it looks too much like the "C" language. That said, [this version](https://www.reddit.com/r/csharp/comments/51v7v0/this_sub_looked_naked_so_i_made_a_little_logo_for/d7fpoe1) is my favourite one so far. Cleaner than the metallic version, and it's great to see the proper sharp ♯ symbol used.
I often use empty interfaces purely for extension methods. Its one way of doing mixins in C#.
State can be stored in a ConditionalWeakTable, for example.
Why not?
If you can find a course on versions 5.0 or 6.0 then I'd obviously recommend that, otherwise, 4.0 is fine if you're still learning the basics. Although, if you consider yourself more advanced, I'd go for a higher level because I believe asynchronous programming wasn't introduced until 5.0.
https://msdn.microsoft.com/en-us/library/system.io.file.create(v=vs.110).aspx File.Create(String) requires a full file path, rather than just a file name.
&gt; File.Create(String) requires a full file path, rather than just a file name. This is not correct. From the documentation that you linked: &gt; The path parameter is permitted to specify **relative or absolute** path information. Relative path information is interpreted as relative to the current working directory.
Try running Visual Studio as an Administrator, that Exception is usually thrown when you are not, well...authorized to write to a given folder. In this case you are using a relative path therefore you are asking to create a file where your program executable is and for some reason you are not authorized. Another suggestion is to try to write to another folder and see what happens (e.g.: C:\somewhereelse\filename.txt)
I like it.
C# 4 will give you the basics and has everything through dynamics. C# 5 added async/await, 6.0 added a bunch but it was mostly syntactic sugar (null propagator, dictionary initializers, etc.). Very easy to learn after you get the basics under your belt. C# 7 has a set of features that they're planning on at this point that is pretty big if they end up in there, namely pattern matching, tuples, and records. Still not sold on local functions but whatever. Also a little disappointed that contracts didn't make it in and probably never will... But anyway, version 4 has about 90% of what you'll see in most C# apps.
Realistically, you'll get anywhere from 80-95% of what you'll use out of C# language that way. After it becomes clear how things work, you can look over the new features that will mostly just make writing code easier. ^Null?.Conditional?.Operator?.is?.glorious?.dont?.judge?.me
The features from 4 to 5 are incremental meaning that you just learn the new features and add them to your repertoire. The features in 6 are minor but in a way they make some older patterns redundant. Specifically I tend to use get-only properties everywhere where before I used get; private set; If you feel you need to learn more C# on this level I'd say take the course. It is not like you are learning 2.0 and 3.0 will make a lot of the patterns and practices outdated.
I reran my benchmarks. For array/immutable array, for is significantly faster than for-each. For the other types, for is only slightly faster.
Which was what I did to fix this. However typically I don't add the additional else unless required. I think it saves vertical room and whatnot. However I do always use braces, even on one line statements, so it depends for me as to when I'll do something to save space and when I wont.
What have you tried and what errors have you run into? The important stuff (what/how much XPath is supported, the System.Xml.XmlDocument class and how to use it) can be found on MSDN. ETA: this might also be a good candidate for r/learncsharp.
I do, sometimes, miss having the option to reuse symbols inside a narrower scope. (I *think* this was possible in C++.) Could make for some confusing stuff in places, though.
Gotcha. Makes sense for that specific use case.
Why are your classes in `KafkaMSSQL.Models` `partial`? And usually the using statements go outside of the class like this:- using System.ComponentModel.DataAnnotations; using System.ComponentModel.DataAnnotations.Schema; namespace KafkaMSSQL.Models { [Table("vwMaxOffsetByPartitionAndTopic")] public class vwMaxOffsetByPartitionAndTopic { [Key] [Column(Order = 0)] [StringLength(1000)] public string Topic { get; set; } [Key] [Column(Order = 1)] [DatabaseGenerated(DatabaseGeneratedOption.None)] public int Partition { get; set; } public long? MaxOffset { get; set; } } } Are you sure those attributes in use are the correct ones? I'd expect to see them under the Entity Framework namespace. Apart from that, not much else to say.
I used schema first so when EF generated them, it created partial classes, I'm assuming to allow developers to write custom code in a different location to prevent it being overwritten by the auto-generated code. Also, I noticed the using statements, I'll move them outside. Thanks for the feedback..
I think the point was to show what can be don't with functions. Most people only see the inline predicate and don't realize that you can pass declared functions themselves into the methods in their place.
I've seen a few pluralsight courses where they made a "tee" function, the name of which is taken from *nix consoles that means do an action with this object, then yield the object. Though I recommend avoiding using it to change the object itself, as it violates the no side effects part of linq. Example (I'm on mobile, forgive me). in ext class. public static IEnumerable&lt;T&gt; Tee&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T&gt; action) { foreach(var item in source) action(item); yield return item; } Usage: source.Tee(MyAction); // lazily executed 
"Visual Studio Code" is Microsoft's super lightweight .Net (among others) editor. No GUI builder though. It's more for websites and services.
Thanks. I had tried running as an admin before this post and it didn't work (though I'm kinda glad this wasn't the solution as I need to run this at school where I don't have admin rights) but it hadn't occurred to me that I may not have access to the folder that the relative path specifies. I'll try that, and thanks again for your help.
Be modern and ready for your future jobs and learn directly C# 6.0
Afaik Xamarin Studio is no longer available on Windows in an official way unless you already have it.
My first suggestion is to break up the 2d array into rows, or a list of arrays. Here's what I got in linqpad using this code. var list = new List&lt;int[]&gt; { new[] {1,1,0,0,0}, new[] {0,1,0,0,0}}; list.Select(arr =&gt; arr.Aggregate((bool?)null, (haveZero, current) =&gt; { // if we've not had a 0, but now have it, set the flag if (!haveZero.HasValue &amp;&amp; current == 0) return true; // if we've had a 0 and now a 1, invalid if (haveZero.HasValue &amp;&amp; current == 1) return false; // return what we have, as no change is necessary return haveZero; }) .Dump()) //output in linqpad .ToList(); //consumes the list // True // False How aggregate works: http://referencesource.microsoft.com/System.Core/R/82b209add5c21465.html How the code works: pass in a nullable bool with a value of null to represent a flag that has not been set as the starting value of the loop that is managed by the aggregate function. For each item in the array, if 0 has been found, set to valid. If 0 has been found and we now have a 1, set to false. Otherwise, return the flag. EDIT: I like maybachsonbachs solution. But would it give a bounds exception? Edit Edit: ok, I have no life. I made the loop break. void Main() { var list = new List&lt;int[]&gt; { new[] {1,1,0,0,0}, new[] {0,1,0,0,0}}; list.Select(arr =&gt; arr.AggregateWhile((bool?)null, (acc, current) =&gt; acc.HasValue &amp;&amp; current == 1 ? false : !acc.HasValue &amp;&amp; current == 0 ? true : acc, (acc, current) =&gt; !(acc.HasValue &amp;&amp; current == 1) ) .Dump()) .ToList(); } public static class Ext { public static TAcc AggregateWhile&lt;T, TAcc&gt;(this IEnumerable&lt;T&gt; source, TAcc seed, Func&lt;TAcc, T, TAcc&gt; func, Func&lt;TAcc, T, bool&gt; takeWhile) { // null checks var acc = seed; foreach (var item in source) { acc = func(acc, item); if (!takeWhile(acc, item)) return acc; } return acc; } } 
No I dont, it seems I didnt understand you
You can use literally any text editor. Notepad will work. 
StackOverflowException cannot be caught. It will crash whole VM. I made a library ProcessThread to run unpredictable recursive code in separate process. One of related mistakes is Property returning itself when it was intended to return field which has the same name but small first letter. 
Running in debug has 0 reason why it would hang. And if he was missing a dependency, it wouldn't build.
Are people with crashes running on the same bitness (x86 vs x64) as you? Are you compiling to anycpu or x86 / x64?
http://csharppad.com
I see that this question has been answered, but (and I mean absolutely no offense to you in any way) the question being here in the first place maybe points to a lack of knowledge about the debugging process. It would definitely benefit you to get SUPER good at using the Visual Studio / Xamarin Studio debugger. In this instance, you could put a break point inside the for-loop and however over the variables that should have had the values you wanted, to hopefully see why errors like this occur. This was obviously just a pretty silly mistake. But I wanted to point you in the right direction now because the errors are obviously not this easy the further into C# you go.
Try anycpu.
Yeah, I guess that's true. I'll take the course and then do some trainings in C# 6.0.
Before ditching Visual Studio 2015, there are a few tricks you can try: * If you're running Windows Defender / Microsoft Security Essentials (or some other A/V software), add the Visual Studio project folder to the excluded folders list and add devenv.exe to the excluded processes list. * Disable or uninstall add-ons. A few people mentioned Resharper, and Web Essentials and others have known problems as well. * Change your start page to an empty environment. * Tools &gt; Options &gt; General: uncheck "Enable rich client experience"
How to write good code.
What about the tooling is "getting you?"
late night and brain farts! http://imgur.com/a/hhHeM
Advertisement for non-free online courses. Nothing of value in this post.
ALSO - Memory......... ADD MORE RAM. If it's using the slow laptop disk to store data, the program will grind to a halt and freeze regularly.