If project A uses code from project B, project A must reference B. 
 public interface IBaz { } public interface IBar { } public class Foo { private IBar _bar; private IBaz _baz; private IBar Bar { get { return _bar; } set { _bar = value; } } private IBaz Baz { get { return _baz; } set { _baz = value; } } public Foo( IBar bar, IBaz baz ) { this.Bar = bar; this.Baz = baz; } } :)
Ok that's cool I believe thats the way I have it. Project A has the GUI and references project B which does not. Thanks for your help. 
You cannot call C# code from your Javascript. All the c# is executed before anything is ever displayed on the page. Unless you store the id somewhere on the form, it'll never get posted. Also, your cannot execute Javascript during the render process, especially if the item you're referencing does not exist. You need to read up on the page lifecycle for webpages in general and razor pages in particular.
B-eautiful!
You could make a public static property for one of the form classes and use it as a holder for the ID
Thats what I was thinking as well but I need to pass that value to all other forms because of interactions between databases.
Why not make separate, static class?
Well... I didn't know I can :P Thx, I'll try it this way
Create a public static method in the Program class. Then it can be called from anywhere. Program.MyMethodName(); public class Program { public static MyMethodName() { // Do things } }
I have a slightly different rule, which explains our difference in opinion: "the more complex code I have to write, the more bugs in the system". IMO, I'm less likely to create a bug by writing a simple SQL statement, then by writing and maintaining complex data mapping rules, which I don't necessarily completely understand (nor would I want to understand them, because I don't want to have to learn a different ORM every time)
On the plus side, it will come easy to those familiar with inline functions and linq. It's not a terribly exciting feature though, especially considering the currently implemented quick phrases to auto-generate get,set functions. It seems to me that the juice probably wasn't worth the squeeze for this feature. On the other hand, there doesn't seem to be much of a reason to dislike it either. Edit: &gt;they introduce an alternative syntax Seems to me that this syntax has been around in csharp for years, this is just a new application for it. what's new about it?
[Singleton](http://csharpindepth.com/articles/general/singleton.aspx). Be careful though, using singletons as a global variable is a code smell, YMMV. When you construct the next form you could also pass the user if you make a property on the form, like so var form = new MyForm(); form.User = "test"; form.Show(); PS. Every form can have it's own database connection in most cases.
Whoops! You're totally right. Got my Replace and Public mixed up!
I like the CodeMaid extension: http://www.codemaid.net/
Would it be enough for you to set the Tag property of your "Main" form, then set the Parent property of all associated forms to the "Main"? You can access the parent's Tag from any child form if needed.
well you could encapsulate the property in a class -- let this class have 2 properties, first property is the ID the second property is a public event that all of your forms 'subscribe' to. Then have the setter 'publish' the event. any form that subscribes to the event can then respond accordingly. To maintain the state of the object you could have it be a static class. I'd probably stay away from using the singleton pattern though. that or I'd just inject the instance you want into each form's constructor. if you want a code sample i'd be happy to post one. 
I think I wont be able to access that class, it will be multiple inheritance...
SQL Server supports encryption at both the table and database level. All you do is run some SQL commands (more than a few, really..) and you're set. The catch is .. anyone who has rights to the database can read the data, so you'll want to protect their password (or use integrated security). If the above scares you - it should. Doing this stuff is hard, and many people get it wrong ... like [Adobe](https://nakedsecurity.sophos.com/2013/11/04/anatomy-of-a-password-disaster-adobes-giant-sized-cryptographic-blunder/). Don't write your own password manager - go buy/download one that has a proven history of being secure. 
I sort of understand what you are saying. I understand encapsulating hide stuff by using private, but never used it before but I am excited to finally use it. I am confused how the form will 'subscribe' and how to 'publish' the event. a code sample or psuedo code will be helpful since I am trying to learn with this project. Thanks!
I'm not talking about the user knowing the underlying framework. My point it the way they work on the desktop. An MDI main and child windows all in a container. I must not gave explained myself perfectly. I'm pretty sure you are saying the same thing as me but trying to argue something I didn't imply. As much as I like reedit this is why I generally don't comment on here.
Well the reason for an event-bus is you can notify listeners of every small change. That way, you don't need complex mappings, nor do you need complex code to figure out what the difference is between your in-memory data and the data in the database (to clarify, the event-bus is nothing fancy, just a decoupling between the source and destination of things that happen in the domain model, not a full fledged remote messaging system).
Just remember, resharper is free if you're a student.
I work at a place that is against using 'var'. It's called using the language. Being against change and getting old correlate directly. 
Community doesn't give me a magical license for visualstudio.com.
I meant more of data bundling instead of encapsulation although they're arguably the same thing. So in my example you would 'bundle' the ID and an event. Subscribing and unsubscribing to an event is as simple as using the += and -= operator respectively. In the constructor, or wherever you're passing in this object, you'd subscribe to the objects event property. Then whenever you set the ID property, you 'invoke' the event Then all subscribers (forms or w/e else you want) will then run a method in response to that invocation. your class would look something like this: public class EventDrivenID { public event NotifyIDUpdatedHandler UpdateIDEvent; public delegate void NotifyIDUpdatedHandler(); private int id; public int ID { get { return id; } set { this.id= value; if(UpdateIDEvent != null) UpdateIDEvent.Invoke(); } } } and then your 'subscriber' would look like this: private EventDrivenID eventdrivenid; public AddableForm(EventDrivenID eventdrivenid) { InitializeComponent(); this.eventdrivenid = eventdrivenid; eventdrivenid.UpdateIDEvent += this.UpdateLabel; //whatever method you want to fire upon invocation of the event } 
close but not exactly! check my reply. If you want to PM me your email I can send you a working example of what I'm talking about. :)
It is generally not a good idea to have the form manipulate any data except for display or validation purposes, but separate the responsibilities into another class/project. You can [follow up on one of the methods here](http://en.wikipedia.org/wiki/Business_logic) check out the magic pushbutton concept, depending on where you're going with the code you write you might want to avoid that
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Business logic**](https://en.wikipedia.org/wiki/Business%20logic): [](#sfw) --- &gt; &gt;In computer [software](https://en.wikipedia.org/wiki/Software), __business logic__ or __domain logic__ is the part of the program that encodes the real-world [business rules](https://en.wikipedia.org/wiki/Business_rule) that determine how data can be [created, displayed, stored, and changed](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete). It is contrasted with the remainder of the software which might be concerned with lower-level details of managing a [database](https://en.wikipedia.org/wiki/Database) or displaying the [user interface](https://en.wikipedia.org/wiki/User_interface), system infrastructure, or generally connecting various parts of the program. &gt;==== &gt;[**Image**](https://i.imgur.com/Ap6df1L.png) [^(i)](https://commons.wikimedia.org/wiki/File:Overview_of_a_three-tier_application_vectorVersion.svg) --- ^Interesting: [^Business ^Logic ^Toolkit](https://en.wikipedia.org/wiki/Business_Logic_Toolkit) ^| [^Elemenope](https://en.wikipedia.org/wiki/Elemenope) ^| [^Enterprise ^JavaBeans](https://en.wikipedia.org/wiki/Enterprise_JavaBeans) ^| [^Data ^binding](https://en.wikipedia.org/wiki/Data_binding) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cm5j53z) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cm5j53z)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
It's barely new syntax. It is almost identical to lambda expressions, which are well established.
That and major bugs have been open for years. https://youtrack.jetbrains.com/issueMobile/RSRP-179384 Once we get some Roslyn based plugins, ReSharper is in trouble. 
I had an interview at a place a few months ago that informed me they don't use Entity Framework because it has a .Remove() that they feel could be abused by junior developers and they don't believe in code reviews. So at least your place isn't that level of bad yet ;)
Sounds worthy of a dailywtf submission. 
You can't use a singleton?
I am an architect and also design our coding standards, StyleCop dictionary etc. While I don't outright forbid var I strongly discourage it for maintainability &amp; readability reasons. Its simply easier to read &amp; understand code when type declarations are explicit rather then implicit. Certainly there are times when the type is sufficiently clear that it doesn't matter (EG - a foreach with a well named collection) but developers using them by default leads to maintainability issues. This has nothing to do with being against change (I love many new framework &amp; language features), its simply that the syntactic changes which make development easier often work against other goals that must be considered. Its the same way with rampant pattern abuse (99.1% of all cases of someone implementing MVVM are inappropriate, before that is was Entity-Observer, before that Factory etc etc), developers are not supposed to be mindless drones simply copying what other people do because it is popular to do it that way, they should be considering when it is appropriate to use certain language features and when it is not. In the last several releases c# has had new features that smell distinctly Ruby'ish of placing simplicity over good design, var is one of those cases as is expression bodied members (but to a much lesser extent).
I am using a 3 tier business logic and data logic. I am trying to test this solution to my problem with sending information to the database. 
&gt; Its simply easier to read &amp; understand code when type declarations are explicit rather then implicit. That is entirely subjective. I find that type declarations just get in the way of things. I really didn't feel too strongly about it before I began developing in F#, but now I just view it as clutter. If it's difficult to understand what's going on in a function, I don't believe that type declarations will help.
I have experience with an [Expert Beginner](http://www.daedtech.com/how-developers-stop-learning-rise-of-the-expert-beginner) Architect who maintains the `coding standards 2014.docx`. It's been moved to a SharePoint document list finally. `var` is in the don't-do category, and it's infuriating as hell. The argument that's trotted out and trumps all is readability. "How am I supposed to know what this type is just by reading it?" is the refrain. I get the sense that when choice is taken away from the dev, and the benefits are negligible or nil, it's a power play. It hurts more than it helps. I'll agree that you should likely explicitly declare your type when you're initializing a variable with the return of a method call. Again, it's a matter of having well-named methods and good variable names. That far and away helps readability over the small-potatoes of explicit type declaration. It takes one hover in VS to confirm the type if you need it. Did we also need FQ namespacing to help? So where's the line on what's readable? All of these are readable and don't leave any question. var address = "123 Any Street"; //did you *really* need string here? var numberOfCowsInField = 9; //yes, it's an int. //if I want a double or decimal, I'll say so. var customer = new {id=9, categoryid=8, timeZones=new[]{"Pacific","Eastern"}}; var removeEmpty = StringSplitOptions.RemoveEmptyEntries; var stingParts = "a,b,c,d,,,e,f,g,,".Split(",".ToCharArray(),removeEmpty); var append = System.IO.FileMode.Append; var csvDir = @"D:\files"; //hope you're not too confused here. using(var fileStream = new FileStream(csvDir,append)) { //are we confused on what type this variable is? //have we really sacrificed readability? } 
I'm with you. But not in the 'var' is bad way that seems to be discussed here. In the way that I don't use if (thing) do otherthing(); Code block constraint are there for a good reason. I've seen far too many bugs using the 'simple' if syntax. Including high-profile security bugs. The benefit of this feature isn't worth the possible downside. Plus, it just makes code harder to read. One-line methods intermixed with traditional ones seem like they would be confusing in a large/complex class.
&gt; It seems to me that the juice probably wasn't worth the squeeze for this feature. I agree. But more importantly that is an amazing saying hah.
I can think of dozens of reasons to not use EF, but that's by far the most novel.
What color is your spacesuit? Not using var hurts maintainability because now types are hard coded, making changing return types tedious. And style cop? Really? Haven't you figured out how to use the auto-formatter yet? 
I'm in complete agreement here- I've dealt with far too many bugs over the years caused by folks omitting the code blocks. IMHO there's really no reason not to use them.
&gt; Plus, it just makes code harder to read. For you. I have no trouble with the simple if *as long as* it's just the one line. I find it easier to read than methods with multiple if's that use braces. I find the method just looks messy. But this: foreach (var code in list) if (code == "X") dothing(); I don't like. I'd prefer the foreach in braces. 
No, "show()", will not recreate your form, it will only toggle visibility flag (if previously hidden). You're missing parts of your question, but if you get exception, then toggle all the exception catching on in debugger (Ctrl+D, E and then check "common language runtime exceptions" as they're thrown) and look at variables and what might've caused the error.
Show() and Hide() only change the visibility of the form. What in your code is calling message.show()? For a simple proof, create 2 forms named Form1 and Form2. Put two buttons in Form1, one which shows an instance of Form2 and another that hides it. In Form2, put a Messagbox.Show() command in the constructor. You can show/hide Form2 all day long but MessageBox.Show will only be called once. **Example code for Form1:** public partial class Form1 : Form { public Form1() { InitializeComponent(); } Form2 f; private void button1_Click(object sender, EventArgs e) { if(f == null) f = new Form2(); f.Show(); } private void button2_Click(object sender, EventArgs e) { f.Hide(); } } **Example code for Form2** public partial class Form2 : Form { public Form2() { InitializeComponent(); MessageBox.Show("Initializing"); } } In the example, I just dragged a couple of buttons onto Form1 and kept their default names. I waited to create an instance of "f" as a Form2 object for the first click of Button1. All subsequent clicks of Button1 will see a valid Form2 object and not attempt to recreate f as a new Form2. **Edit:** Fair warning - this overly simple example has no exception handling - if you use the red X to close Form 2 instead of hiding it using button 2 on Form 1, you'll get an exception the next time you click a button as I added no code to handle a disposed form.
&gt; No, "show()", will not recreate your form, it will only toggle visibility flag (if previously hidden). Thanks for that. That's cleared up my confusion. I shouldn't expect an exception then, as the object is not being re-instantiated.
&gt;What in your code is calling message.show()? Thanks for that. I'm only using messagebox.show to see if the method being called by the form_load event is working. I've since commented it out.
It's all about signal to noise. Leave the compiler to catch type issues and let code review focus on business logic. 
 Dictionary&lt;string, List&lt;string&gt;&gt; blabla = new Dictionary&lt;string, List&lt;string&gt;&gt;(); Now what extra information did you just infer from that one?
In my opinion, this is the same problem designers of computer architecture ran into, magnified. Programmer convenience is a valid concern. Abstractions will always leak. At some point, though, you have to land on an acceptable leak and just move on. EF currently does shove a large amount of overhead by simply doing a 'SaveChanges' - and in a lot of cases, that's okay. I'm currently developing a reporting solution that uses THREE "ORM"'s. Dapper, EF, and SqlCommand. Sometimes I require the pure speed of a native solution, sometimes I can abstract it away to EF, and sometimes I need the dynamic infrastructure of Dapper. Every developer I'm working with understand the in's and out's of each - we're all comfortable with native SQL, and L2E. Your needs of an ORM are entirely dependent on your application. Programmer convenience is not an outdated concept.
I use var when the type is not clear from the expression on the right side. var values = GetValues(); but var s = "some string"; //string literal var d = new Dictionary&lt;Guid, List&lt;Customers&gt;&gt;() //type mentioned Even when I disagree with the usage of var I can clearly see the advantages. Easier refactoring (although with a slight risk), less ceremony in code, arguably easier to read, no need for importing namespaces and of course anonymous types are outright impossible without it. On the other hand I simply don't see the benefit of expression-bodied methods. I don't see why =&gt; is significantly better than a pair of braces. Yes the return is gone but is it worth it? Note that your comment did not point to any benefits from the new syntax.
I am not worried about understanding the feature or even that it will make worse. I am worried because I do not see any benefit and somebody far smarter than me thought there was enough benefit to do all the development. What am I missing?
I always write the block braces too :) However I do see the benefit of skipping them. I don't see the benefit of expression-bodied methods.
http://msdn.microsoft.com/en-us/library/gg406140.aspx That is the place to start. Well not start, it is fairly advanced and difficult to follow at times, but it's where you should be headed. You might want to look at understanding MVVM pattern first as it really unlocks the power of WPF, and to some extent Microsoft's documentation relies on a preexisting understanding of MVVM.
curious : why don't you like this style ? what's hard to read about a simple foreach loop?
In general, I'd recommend against using structs unless you're experienced in C# and .NET. There are many pitfalls.
You can't insert into an array, only overwrite elements.
I was just going by the OP, he might have meant list. Or he meant that first they are all put into an array then sorted, in which case I misunderstood the initial problem.
I suggest you tackle it step by step. You already divided it into several steps: * How do I create an installer * How do I store configuration settings Other examples are: * How do I create appropriate tests * How can I automatically build the installer If you learn several of these key components of making a well-rounded application you can have a better view on how to plan things and how long they will take.
I read somewhere that all problems with software come from either users or data. If your application does not have users and data you should be fine no matter what architecture you choose.
Value types make reasoning about your program easier because there is a direct correspondence between variable names and storage allocated for them.
I can see the point on this one but even in this case I prefer the bracket wrapper- tho in some situations I'll remove the newlines to minimize line count. if (thing) { return; }
&gt; It takes one hover in VS to confirm the type if you need it. You shouldn't hover over code just to make it readable. I tend to use var where the type is clear and not use var where the type is not clear. I had a painful experience last year with something like (not the actual code): foreach(var item in GetItems()) { _fancySerializer.Serialize(item); } which led to many wasted hours because GetItems() returned a dicitionary, not a list.
I think this is more appropriate for /r/windowsazure.
just fyi XNA is no longer developed at all. It is considered kind of a dead framework
Took me 2 days to figure out you have to download it separate through a thing called Web Platform Installer.
This is really the key here. programming, application development, data storage, data distribution, etc are all sides of the same shape. These are all tools and a proficient developer has a large tool chest. Metaphors aside, it is extremely important to understand all the components of your application. Since you've already broken those pieces down, research them. Very few (if any) guides are going to properly cover all aspects of large application or enterprise level development in sufficient detail to put it in a single guide. 
The issue here is not `var`, but with the poor naming of `item` and `GetItems()`
I've really loved but subsequently abandoned all single line blocks as you've described after seeing [Apple's goto fail](http://www.imore.com/understanding-apples-ssl-tls-bug) in Feb 2014. It's just not worth it.
Actually I think what he describes is somewhere halfway towards EventSourcing and CQRS which both are very good and powerful patterns. When I did my first application with these patterns I had that exact same thought that you have, but when you start working with it you realize that generally the "complex custom built solution" isn't that complex. It's often enough dead quite simple. What is complex however is 3rd party ORM's. Have you seen the complexity of getting EF/NHibernate to work the way you want them to when you start getting a decently sized project? If you go all the way in the CQRS/EventSourcing you can often enough get rid of the entire SQL database and get rid of that huge lump of complexity. The one thing I dislike with the pattern shown in this post is that he still has an RDBMS in the bottom, if you're going in this direction just cut that part out and save the events instead. If you can't cut the RDBMS out, you could use NEventStore with the RDBMS as a backing storage instead. :) http://martinfowler.com/eaaDev/EventSourcing.html http://martinfowler.com/bliki/CQRS.html
Why do you say that? I was thinking the same thing at first, but I'm not sure it's worse than other CQRS recommendations we've been seeing over the past few years.
OK, I made it (almost) work. I simplified it to this: $(".findParentsId").click(function() { var mDiv = $(this).closest("div").attr("title"); $(function () { $("#someRandomId").attr("value", mDiv); }); }); changing some hidden input value seems easier... problem: this does work when I want to change value of an input control on this, current page. (Task/Zadanie) If I want to pass there some input's id from different page (Task/DodajTask) it does nothing any tips how to pass it properly?
I don't see why not but I don't care enough to write something involving threads before I've had my caffeine, and [yes](http://i.imgur.com/sBQYJkX.png). Before you ask, I can also look at diffs and manage branches. IDK if you can directly export a patch, but tbh you should probably be using the command line for anything more involved than simple merging/branching.
var is to me like a dye, it highlights issues with readability. If your code is harder to read with var, you are doing it wrong.
&gt; And style cop? Really? Haven't you figured out how to use the auto-formatter yet? I see you are not familiar with CI at all then.
Sorry but I haven't the faintest clue what you're trying to do.
I disagree with how you suggest implementing logging for some cases. For example in iis applications your logging can go in the application error event handler, so your code isnt littered with try catches with nothing but logging statetments. 
Agreed however it depends on the context really, from his post it suggests hes working in winforms so IIS error handling won't work! And even with IIS error handling its best to log the error yourself rather than just returning 500 and a page full of stacktrace. I think that given the objective here is to learn that its best to do as much of the code yourself and create modules that you are going to have to re-use everywhere so you can experience and understand the importance of re-usability and conforming to common practices.
&gt; If I want to pass there some input's id from different page (Task/DodajTask) it does nothing &gt; any tips how to pass it properly? I'm not sure exactly what you mean, but it sounds like you should add these properties to your model for the Zadanie page and populate that in the controller before returning Zadanie... does that make any sense?
The only spot where I can actually see the value is with really short function definitions that fit on a single line. So instead of: public string Convert(int Value){return Value.ToString();} it's: public string Convert(int Value)=&gt;Value.ToString(); That said, I don't write too many methods like that. I think it makes more sense at the property level, where I might actually use it. That said I would have preferred it to have been a getter/setter set up with the value being the initialization value... Because, once again, I don't write that many read only properties.
Hadn't heard of Code Rush before but it doesn't appear to be free from what I can see...?
Well it kinda does as long as you only have up to 5 users who need to access your VSO account. http://www.visualstudio.com/en-us/visual-studio-online-pricing-vs.aspx
&gt; they don't believe in code reviews Couldn't Junior developers just use Entity Framework anyway then? 
Through this thread I've discovered [CodeMaid](https://visualstudiogallery.msdn.microsoft.com/76293c4d-8c16-4f4a-aee6-21f83a571496) which appears to be an attempt at a FOSS version of ReSharper.
 foreach (Frobnitz item in GetItems() { Console.WriteLine(item.ToString()); } What extra do you now know about how a Frobnitz prints itself that you didn't before?
That's a good point and I wonder how much stuff does slip in. But then again, they also didn't believe in source control either - everything would sit on their machines until they were ready for production and then the head guy (the guy who interviewed me) would release it to production. The offer they gave me was actually compelling (I was going to be one of the team leads and I thought maybe I could bring change) - but at the end of the day it felt they were too far gone and the guy in charge was really set in his ways of doing things really dumb.
Based on the way you asked the question, I presume you have a series of forms that are all related in some larger way. As an alternative to the options of making a separate class to encapsulate the value, why not create a BaseForm that inherits from Form and have all of your forms inherit from that BaseForm? This allows you to put your common methods and variables used into one form that all the others can access.
&gt; var values = GetValues(); Why is that called "GetValues" if it isn't clear from the context what that is going to return?
Now I know that GetItems doesn't necessarily return Frobnitz objects and that a cast is involved. Oh, you didn't intend to cast Blitzin objects into Frobnitz objects? Oh dear.
Wait, you had to lookup what CI meant? I see you are unfamiliar with formalized build environments either then. Its pretty standard to call StyleCop from an MSBuild script, Microsoft do so internally and so do many many dev houses, Microsoft even publish an MSBuild plugin to do just this. Its actually uncommon to encounter an environment where it is not used even if only to run metrics. You have pretty much just outed yourself as that guy who builds in VS, doesn't work with other people and don't understand even a small part of how teams work together.
* Line noise distracting from the real code * wasted vertical space so its harder to see whole functions at one time * Doesn't solve any problems that couldn't be handled by the auto-formatter * Requires someone to do something, as opposed to just happening automatically Let's stop coding like it is 1972.
Just curious about 2-3 reasons 
I'm fairly new to this subreddit but I am surprised that the good code design stuff seems to be fairly unpopular, are most of the dev's here solo's who don't have to worry about teams being able to work together?
And if they had written: if (a == b); { DoSomething(); } Then what would you have done? 
What about this? foreach (var codeA in listA) foreach (var codeB in listB) CrossJoin(codeA, codeB); Compared to this: foreach (var codeA in listA) { foreach (var codeB in listB) { CrossJoin(codeA, codeB); } } 
Unless your abstraction layer is absolutely perfect, you will expose security flaws that an ORM wouldn't.
No jackass, I didn't have to look up what CI means. I am paid to write about, setup, and sometimes build, Continuous Integration servers. And I also teach classes on Continuous Improvement techniques. Yes, I've seen plenty of teams use StyleCop in that manner. And it is utterly retarded. Half of what it does is make programmers manually adjust the spaces around parens, something the IDE is more than capable of handling. The other thing is does is pretend like it is a half-ass version of FXCop, also know as the built-in Code Analysis feature of Visual Studio. 
I don't see how that's the fault of using var. It's clear that the issue was either the function not returning what needed to be returned, or the serializer being inappropriate for the task. In the first case, that's the kind of stuff Code Reviews should pick up. In the latter, whoever is in charge of picking technology needs to re-evaluate their choices. Especially with the latter, there's honestly not much you can do. I work with my fair share of awful and dated technology (NHibernate), and sometimes there's nothing you can do except for notice patterns when things go wrong. I do agree that the name of the function was *horrible*, but at the same time, a second pair of eyes should have said, "what is GetItems()? What are Items, and why are they important?". The first step in debugging something isn't to break out the debugger, it's to attempt to get some context about the problem.
&gt; Yes, I've seen plenty of teams use StyleCop in that manner. And it is utterly retarded. Half of what it does is make programmers manually adjust the spaces around parens, something the IDE is more than capable of handling. How cute, you don't know that you can import StyleCop dictionaries in to RE# either. If you understood how StyleCop works in the context of CI you wouldn't have said something retarded like; &gt; But StyleCop is not relevant to either of these, so you are clearly just assembling random buzz words in a vain attempt to support your position. Nice job pretending that you are "paid to teach" something you don't even have a basic understanding of though, congratulations.
For #1, the method should called GetCustomerIdMap or something to that effect. Or even better, return a subclass of KeyedCollection. That way you can use it as a collection or a dictionary as you see fit. For #2, that usually involves anonymous types so using var is required.
I kind of dislike adding the type (Map in this case) in the method name. I don't see how a subclass would help if it is not written in the code due to var.
Owh wow ok, it's been a while since I've used it. I always likes how easy it was to use. Is there anything that you would suggest instead? Or just bite the bullet and write the access layer yourself 
Welp, that earns the user a compiler warning. 
With the subclass, the type ceases to matter. You can enumerate it like a list or do dictionary lookups and it will behave correctly in both cases.
For the vast majority of what I do, the so-called MicroORMs are the best choice. I don't care if you write your own or use someone else's, they all do basically they same thing. Which is to say, they make database calls more pleasant without hiding the nature of the database.
Ok, I'll try to be more specific now: Let's say I got 2 pages: 1) Task/Zadanie, and in it's view &lt;input type="submit" class="findParenstId"/&gt; &lt;input id="myId1"/&gt; 2) Task/DodajTask, and in it's view &lt;input id="myId2"/&gt; now, my script $(".findParentsId").click(function() { var mDiv = $(this).closest("div").attr("title"); $(function () { $("#myId1").attr("value", mDiv); }); }); when I click button with **findParentsId** class (in view #1), it works perfectly (input value changes) but when I change it to $(".findParentsId").click(function() { var mDiv = $(this).closest("div").attr("title"); $(function () { $("#myId2").attr("value", mDiv); }); }); after clicking the button **on page #1** I would love it to change value if input on **page #2** but sadly it doesn't work this way (I think it's probably because of refreshing/reloading the page) ------------------------------------------------------------------------ I was talking about this with my colleague, and he told me to read about **session storage** which now,when I think about it, makes some sense --------------------------------------- I hope it's at least a bit more clear now :P PS. sorry for shit formatting -.-
&gt; against using 'var' I guess those people have no idea what F# is then? The mind blowing amount of type inference done by F# would leave these peasants lying in a corner crying with their heads between their knees. a hello world-type F# line seen in introductory tutorials: let multiply x y = x * y Seen any types around?
This is mainly just an exercise for myself to learn some encryption and database tools, I understand it won't be easy. I'm looking at encrypting passwords before they are put into the database and decrypting them as they are read. However I do thank you for the Info
&gt; That doesn't mean ordering pizza is an essential part of the CI process Clearly you need to re-evaluate your priorities. Pizzas are *essential* to CI.
Beer yes, but I can't eat a slice of pizza every time the build doesn't fail.
Flat file datastore. Sorry, I am referring to it as a database in code. It is a class with data that is being serialized into a file.
Also, much of what you are enquiring about is not related to managing large projects. It might be worthwhile to create a packaged and tested program that prints out its arguments. Your first attempt at things is likely to be a bit rough, so practice on something you can throw away. 
 public static MyClass Instance = new MyClass(); Static is the key thing here.
Use an IoC/DI Container (Inversion of Control/Dependency Injection). They are usefull for doing more than a simple task like this, but they are a nice, clean way of doing what you want. Instead of System.IO.TextWriter output = new System.IO.StreamWriter(sock.GetStream()); you'd write System.IO.TextWriter output = container.Resolve("MyTextWriter", sock); where you have configured the container to resolve requests for a "MyTextWrier" by returning a System.IO.StreamWriter Singleton. A Singleton means that a single instance of that class will be created and that same instance will be returned every time a request is made to the container to resolve that type. I don't have a code example to offer, and there are dozens of different brands of IoC container available. I'd recommend staring with Unity (Microsoft's implementation) or Castle Windsor (because it is fairly common with many examples available, there are other good ones too.
Give each form its own reference to the underlying data class. The main form creates the data file on load (or on some user action, whatever). Each child form is passed a reference to the data via either the constructor or a public property.
Without knowing the context of the two functions you want to access **output** and **input** from, it's hard to give good advice. [I would tend to discourage using global state](http://programmers.stackexchange.com/questions/148108/why-is-global-state-so-evil), and instead suggest using [dependency injection](http://stackoverflow.com/questions/1638919/how-to-explain-dependency-injection-to-a-5-year-old). using System; using System.IO; public class IrcBot { protected TextReader reader; protected TextWriter writer; public IrcBot(TextReader reader, TextWriter writer) { this.reader = reader; this.writer = writer; } public void Write(string message) { this.writer.WriteLine(message); } public string Read() { return this.reader.ReadLine(); } } If you don't like that, you can also just pass in the server and port numbers and create the socket that way. using System; using System.IO; using System.Net; using System.Net.Sockets; public class IrcBot { protected TextReader reader; protected TextWriter writer; protected string server; protected int port; protected Socket sock; public IrcBot(string server, int port) { this.server = server; this.port = port; this.sock = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp); } public void Connect() { IPAddress[] IPs = Dns.GetHostAddresses(this.server); this.sock.Connect(IPs[0], this.port); this.reader = new TextReader(this.sock.GetStream()); this.writer = new TextWriter(this.sock.GetStream()); } public void Disconnect() { this.sock.Disconnect(); } public void Write(string message) { this.writer.WriteLine(message); } public string Read() { return this.reader.ReadLine(); } } You could go further and implement **IDisposable** on your IrcBot class to call Dispose() on the Socket and the TextReader/Writer, but that might be a bit advanced if you're just starting. Good luck!
When is it? I'll see if I can go
Tuesday, December 2, 2014 6:00 PM Intel JFCC Auditorium
&gt; Also are you going to attempt to keep avoiding the point you didn't know what CI was? You're only basis for thinking that I didn't know what CI was is the fact that I happened to know two different terms with that same acronym. Well that and your fevered imagination. 
This is the approach I took. It took a fair amount of work to get everything the way I wanted (I needed to add more customizations), but it's a really nice solution.
Well if in C# operators were implementation of certain interface it would be, wouldn't it?
If you want to take a look at some other IRC code, or use a client that parses the messages for you, take a look at my lib [here](http://github.com/Banane9/Iris). Feel free to ask further questions :)
Mads calls it "simpler and clearer". YMMV. http://video.ch9.ms/ch9/76cd/0df0049e-1ea4-42a8-a8ac-3a9ba42376cd/WhatsNewinCSharp_mid.mp4
I agree, haha.
Don't get me started. I've argued with MS drones on countless occasions but have never been able to make a good enough argument to get them to even consider it.
I answered his question correctly
Technically, sure, but it's not exactly a good practice. Exposing global state like that is generally bad.
No source control and no code review? "I thought you fixed this bug." "I did." "It's not fixed." "I know." "But you said you fixed it." "Yep, I said that." (etc)
This guy is obviously a complete beginner looking to get his app up and running. Top voted answer in this thread is an implementation of dependency injection along with a hundred lines of code. That's just going to confuse a beginner. Give the guy a chance to get his software actually running before you chuck him in the deep end and lecture him on best practice.
Now that the compiler's open source, you can extend it! Hooray language fragmentation.
Right behind you. This whole thread reminds me of the infamous [stackoverflow parody](http://howtodoinjava.files.wordpress.com/2013/04/use-jquery.gif); just replacing JQuery with DI. A static instance is absolutely fine.
Ok, web project or locally run?
Yea, that one I will agree with you on.
My advice would be to learn the raw language before you start dabbling in higher level abstractions. CUDA/OpenCL have some funky limitations, and SIMD is a much different programming paradigm from any other that you'll normally encounter.
Have you considered [CUDAfy](https://cudafy.codeplex.com/), it generates both CUDA and OpenCL. Also if you don't need the parallelism of CUDA and/or want to stay on the GPU any one of the HL/GL abstractions like MOGRE would do the job too. 
I'm just messing around in an app I made for myself to modify my website, no one else has access. Me and my use only :P 
Eh, I've just never used MySQL in C# before.
Doesn't have much to do with the [language you write in](https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet)
So could you send me in the right track? if you know, I don't even know what to call this lol. You said Reflection... hmmm... Any idea how I would do this? 
I used an SQL validator and it said it was fine :P, oh and ran it from phpmyadmin manually. and Sequel :P
http://msdn.microsoft.com/en-us/library/ms173183.aspx Have fun!
1) The OP explained to you what the error was, it was the brackets 2) I don't know what SQL validator you used, any of the first MySQL validator results on google rejects it 3) PhpMyAdmin rejects it 4) Both of the above reject it with an error coming from MySQL meaning it is incorrect **MySQL** as opposed to just "SQL" syntax. 5) It is also rejected by SQL92, SQL99, SQL2003 validators so whatever you validated I don't think it was a correct replication. Unrelated to that you've been offered advice that will allow you to avoid getting your career ended on your first code review, you should probably take it 
If not for output, why do you need to make it have the decimal? 
So selection sort is a good algorithm, it's just the data's fault.
It is for output, the entire program is pretty long to post here. Here is an example of the display: Console.Write("\n\nMinimum value: {0}", Math.Round(rngArray[Small(rngArray)], 1)); This works fine if it needs to round. But if it returns an integer, it will no longer round. But I think I am an idiot and had these things backwards. I can't apply {0:D1} to integers because they have no decimal. It should work with the double. I probably listed some variable as an int where it should be double. Nevermind me sorry to waste time :P
That one does work, thank you! Perhaps I am missing a reference or something and that is why {0:D1} will not work. 
Jesus....
I got it to work myself, thanks. I must've posted an older version here, before I made small modifications. (also good thing I'm only a first year student too!)
I see, I thought that D would work for floating point types, I guess not. f does though, so it has all worked out. Thank you!
I am a hobby programmer who is fortunate enough to be able to write line of business apps for my company even though it is not my main role. I am currently going through a rewrite of our old apps moving them from winforms to asp.net, this is all around a new ERP system. Is there any problems with mixing ORM's? Some of the information that I need to pull out of our ERP just seems overly complicated trying to do through EF when I have a strong background with SQL. 
Warning: I didn't read the tutorial you provided as link thoroughly, but here're my two cent thrown in: 1. You should take care, that your application layers have defined knowledge of each other. The UI knows the ViewModels, not the Models. The ViewModels know the Models, but not the UI. 2. Therefore the UI layer knows the ViewModels and uses them all the time. So, I don't see an issue in having some good old code-behind that invokes ModalDialogs and creates ViewModels and modifies them.
You are trying to set fieldName.watchLimit. 
Heh, I played around with that too, I'll try to remember to post some code :) Edit: Already had a gist for [2D Matrix Calculations](https://gist.github.com/Banane9/b1aa823535eafa3fd6d1)
He had great blogs on current versions too if you don't live on the bleeding edge.
Exactly!
I guess I'd have to ask, what do you mean by 'problems'? Our developers are as comfortable with SQL as they are with L2E, so using one or the other doesn't making things confusing. StackOverflow uses old style Linq2SQL where they can, and then Dapper where they need more performance. Again, throwing back to performance-bottlenecked C routines - use the abstractions exposed by a higher level programming language when convenient, then write assembly for high-performance requiring routines.
This is my general approach to doing modal dialogues in WPF. I use MVVMLight. All views are hosted in a Window, and are UserControls. My MainWindow has separate 'MainViewModel' and 'ModalViewModel' properties. These are ContentControls hosted by the MainWindow. When I need to show a ModalViewModel, I send it via a message. The MainWindowViewModel is registered to receive this message. My MainWindow has ZIndex'd layers, where the bottom layer is the MainView, on top of that is a grayed out layer (usually collapsed), and on top of that is the ModalView (usually collapsed). When the MainViewModal receives a ModalViewModel message, it changes the visibility of the grayed out and ModalView layers to Visible. When the ModalViewModel completes, it restores these layers to Collapsed.
fieldName is of type `System.String`. You retrieved `PattConfigurator.Window1.watchLimit` field info. This field does not exist on `System.String` but you still try to set the field value of a field on a object that does not have that field. Replace fieldInfo.SetValue(fieldName, newVal); with fieldInfo.SetValue(obj, newVal); and I think it should work.
why would you need mvc for a web api?
Interesting article. Sublime is a hell of an editor. I will have to try this setup at home. 
Thanks man, I will try this out. Edit: gave you gold. Please keep those posts coming.
Sure... but there is no good reason to do it. Use a dictionary instead.
God, no don't use an IoC-container when you're new to programming. It's a great way to make horrible software design in a flash. Use dependency injection, sure, but shy away from containers which will instead promote a service locator pattern.
with asp.net 5, web api and mvc have been unified in single component named MVC 6.
Thanks for following up and reading my other posts :)
&gt; Nothing, but in this case it is completely unnecessary. I would say that all that injection rigmarole is far more unnecessary. &gt; Java also has static. You missed my point. I wasn't saying we should try to be less like Java; I'm saying that strict adherence to OO (or at least, what Java thinks is OO) ended badly for Java, and we should not make the same mistakes. &gt; Is static actually simpler in this case? Demonstrably. One line, that is clear in its intent, using a language feature that is explicitly designed to facilitate global members. &gt; The code would not support multiple connections without writing a convoluted abstraction layer. I guess List&lt;T&gt; isn't enterprise enough?
I was a big fan of lazy loading for years (including manually writing properties that called into the DB in my very early junior years) but since recently if I start a new project the first thing I would do after setting up EF would be to disable implicit lazy loading. The most annoying thing is that lazy loading in EF does not work for the one thing I really want to use it - load a single property represented as a column in the DB.
More mvc or more webapi? I was a huge fan of Web api and custom attribute methods.
&gt; It's not. If you already know object oriented programming you don't have to learn a damn thing. Nothing is new. There are no new *language constructs*, but then the Eiffel Tower is only girders, nuts and bolts; and that's what I think OP is being encouraged to make. &gt; At the same time you suddenly have a IRC bot where you can easily create a new instance and have it listen to a different stream. That's a nice thing to have, but he didn't say he needed it. I understand that everyone's only trying to help but it's a bit like hitting someone with a dictionary when they ask what a word means (not a great analogy, but you get my point, I'm sure). &gt; It's not though. First of there is a new keyword static that in my experience mystifies newbies. Few beginners understand static, and for the most part it is not required to understand in order to make a working application. So we should teach them 'astronaut architecture' techniques, instead of introducing them to an integral keyword (and actually quite a simple one to understand, imo)? &gt; That's convoluted compared to just providing a Stream in the constructor. List&lt;T&gt; isn't a "convoluted abstraction layer", but I agree that it's an inferior design to DI in that case.
You can have your own struct for a pixel, but the GPU doesn't know the bitmap class.. You have to do byte crunching, pretty much.
For those data-heavy pages (when basing app on mvc)
[Fundamentals of Computer Programming With C Sharp](http://www.introprogramming.info/wp-content/uploads/2013/07/Books/CSharpEn/Fundamentals-of-Computer-Programming-with-CSharp-Nakov-eBook-v2013.pdf)
Actually, I am looking for a book that assumes I already know some programming!
[MSFT Virtual Academy](http://www.microsoftvirtualacademy.com/)
Channel 9 has a great series: http://channel9.msdn.com/Series/C-Sharp-Fundamentals-Development-for-Absolute-Beginners
That's an interesting point. I can't remember seeing books that target experienced devs that use exercises. They tend to say "here's how this works." http://www.amazon.com/Depth-3rd-Edition-Jon-Skeet/dp/161729134X ^ I don't think there are exercises, but I like Jon's writing style and his technical knowledge is beyond reproach. 
I know! That sucks, I learn a lot quicker that way. Thanks for the link anyway, I´ll check it out
Well, projecteuler (if that is what you are referring to) does not call for big solutions that is using the tools of VS.
Not to mention the goddamn sidebar is staring them in the face.
Came here to recommend /r/dailyprogrammer. That place is great.
this, and supplement with Illustrated C# 2012 4th ed. - D. Solis (Apress, 2012) BBS. 
Why use `IHttpControllerActivator` in WebAPI instead of just using the [DependencyResolver](http://msdn.microsoft.com/en-us/library/system.web.http.httpconfiguration.dependencyresolver\(v=vs.118\).aspx)?
Sorry, I'm new here, won't do the same mistake again.
Well, that's easy then. No.
+1, would say no again.
Don't you mean "hell no"?
No problem! Enjoy it! If you get _specific_ questions about your language or issues, you can also use [StackOverflow](http://www.stackoverflow.com) as a place to ask them. (Just be sure to read over their [help information about asking questions](http://stackoverflow.com/help/asking) first.)
How would you do this? Not write a program, but if I asked you, /u/PeterSux, to write out 37, 48, 25, 17, 58... etc, how do you do it? Can you find a pattern for what you're doing each time? Can you break down the problem into smaller steps? Are there special cases you need to consider? First figure out how YOU do it, then figure out how to make a computer do it. 
I will make it for you. It will only cost you 250 € (and that is pretty cheap!).
Thanks for the gold! That's awesome. Yeah I am going to focus on some vNext stuff for sure in the next few weeks. It's too awesome not to mess around with. Next project is deploying it to a linux webserver.
I was just joking! I posted my actual question.. and the name is joke between me and my friend!
This isn't trolling.... Why would i put so much effort into the post if it was??
Well I could write the program for it, its just I have to use methods and thats whats messing me up. Like I know how to do it without methods but I have to use them and I would like it to be efficient. Cause I kind of understand methods but the tutorials online aren't really helping me which is why I came here!
Thank you, this was helpful
Microsoft Press' "Visual C# 2013 Step by Step." It's made for programmers who want to learn C#, and covers a really wide range, from fairly basic things at the beginning to more advanced topics like delegates, LINQ, and generics towards the end. It does a really great job of not only explaining the concepts, but also why C# works like that and what advantages that feature has over other languages. Every chapter has a culminating project; the focus is on learning the workings of C#, but it also teaches you some really cool features of VS, like implementing interfaces and extracting methods.
Took a quick look at your code and you haven't abstracted your business logic from your view logic which causes these problems, your xaml code behinds should be nearly empty. The most popular way of doing this is using the MVVM pattern, something like the [Prism](http://msdn.microsoft.com/en-us/library/gg406140.aspx) framework would be your best bet. Even if you don't want to include a separate framework there are many changes you can make in order to make your code easier to maintain &amp; test. As an example I can see you are using click handlers in your code behind, instead you should be binding your buttons to a class which implements ICommand. In your unit tests you then have two clean tests; one mocks your ICommand class so you can verify a button click raises Execute and another which mocks your data layer and ensures when Execute is called on your command class the correct data operations are executed. As another example all your business logic (everything which isn't a command handler) could be exposed via a class which is injected to WPF via a static resource bound to DataContext (a poor mans ViewModel). Want to unit test data binding? Mock your ViewModel and ensure your test text is correctly bound to the right control. Want to test your business logic? Mock your data layer and check your ViewModel.
I have this venn diagram pined on my cubical wall. It's my go to source on doing joins. http://www.codeproject.com/KB/database/Visual_SQL_Joins/Visual_SQL_JOINS_orig.jpg
While I generally agree with you here sometimes it is just easier to express things in a functional way. Having some ability to do this in C# can help that along if you don't want to maintain multiple projects. This can also lead to performance improvements while you do not cross a dll boundary. Don't get me wrong though, I'm of the camp that loves null pointers and would hate to keep adding additional memory requirements for Options. **TL;DR;** *Bias: I do a lot of scientific programming in C# and sometimes a sprinkle of functional programming is nice.*
I would suggest trying to learn to how to write queries by hand at some point because there are times when a graphical editor cannot express what you're trying to query. But to answer your question: in SSMS, under the Query menu, there is a 'Design Query in Editor' (shortcut Control + Shift + Q) which is likely what you are looking for. Not 100% sure it's in Express, but should be.
Is this something you're going to be doing a lot of? Maybe you should learn more about what goes on behind the scenes than relying on a GUI. Since you're posting this to /r/csharp, I will bring up that you may want to investigate LINQ. It's pretty expressive in building a SQL query. Beyond that, maybe relying on Crystal Reports and their interfaces? Last I remember, they had a table mapping interface.
&gt;OO languages use nulls for good reason And what reason would that be? Because Java did it? It seems like a mistaken reason to me. Nulls are used mostly for references in C#, not pointers. Pointers can only be used in unsafe blocks. There is no inherent reason that an implementation of references must allow for nulls. Option types don't eliminate the possibility of having an "empty" value. They just make it explicit in the type system.
I have this book and it's great. I use it half as a reference and half to get a grip on new concepts (I am self-taught in VB.net, so have no theory background). 
I think you may need a primer on your fundamentals. &gt; And what reason would that be? A reference is a type of stack allocation which contains a pointer, when an object is created it is added to the heap and a pointer reference is created for it on the stack. When you pass a reference type in c# its actually passing a pointer, internally a new stack allocation is created for the destination method which contains a copy of the original pointer. The stack is memory assigned to your application, it contains all your value types and pointers. The heap is shared memory, the stack refers to the heap by way of pointers; a pointer is a range of memory which contains whatever the reference refers to. When you receive an object reference error it doesn't say "Object is null" or "Object is empty" or "Object is not set", its telling you that the pointer on the stack (the reference) does not contain a valid pointer to the type. &gt; Pointers can only be used in unsafe blocks. The Pointer type is distinct from a pointer. The Pointer type allows us to address the heap directly rather then having it be abstracted by the stack and allows for us to push things from the stack to the heap. This is why you can't use a Pointer type to refer to any object type, the object type is already a pointer. &gt; There is no inherent reason that an implementation of references must allow for nulls. In functional languages the difference between the stack &amp; heap is abstracted, you will note that f# has to provide the box keyword precisely as functional languages don't distinguish between heap &amp; stack. Most provide some mechanism to do this if you really need to do so (just as c# provides some functional elements) but in general functional languages are supposed to be high level abstraction languages, you don't care about memory allocation or management. In OO languages null is an empty pointer, it is distinct from an invalid pointer or an empty object. It does not mean nothing, it means that the pointer on the stack is empty. It is useful information.
If you need something more advanced than a book, then you are ready to write your own applications. If you are struggling to find an 'idea' for your app - stop thinking so hard and go back to the basics. Write a 'calculator' app, that is similar to the windows calculator. That is not a trivial pursuit, as easy as it looks!
I always look at Microsoft Press first for books on any new topic. I've never been dissatisfied with any of their material, and it's a brilliant balance between being a reference book that you can flip through if you forget how to create an indexer, a guidebook that you can go through cover to cover, and exercises to help you get the practice you need.
Maybe I didn't see it on mobile, but how about you tell us *where* exactly your error is? Also if it's a NRE, just check if you ever assign something to the variable...
The `Turn` class, although not being a `static class`, has all the fields declared `static`. This means that *all* thirteen turns will be *identical* even though you have 13 different instances. Don't use `static`. As a general rule you don't need it. If you do, and you class contains nothing but static members, declare the class `static` as well. The only thing that really needs to be declared `static` is `Program.Main`.
Try adding Turn[turn] = New Turn(); before you start affecting the object and see what happens.
What kind of database would be best to use als an alternative to SQL Server or should I just have some windows server running SQL Server? 
And how would a None value be anything other than a synonym for null? You assign a method pointer or whatever a None. Somebody attempts to dereference that and now you get a None exception? What am I missing? Frankly it seems somewhat like trying to apply formal verification methods to software development. Ideally you just get rid of concept of bugs and it sounds like, "Wow - how is that not ALREADY a thing?" from an academic perspective. In reality you just passed the buck of screwing up in code to screwing up in proofs, or in your pre/post conditions (and verification of such) for the case of automated verification.
An "Object reference not set..."-exception isn't that hard to debug. Did you try? Visual Studio will be all in your face about where it happened in the program exactly, and you can easily figure out which reference is null.
I suggest you read over [What is a NullReferenceException and how do I fix it](http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it) on StackOverflow then take a stab at fixing it. To give you a head start, I think it might be because you're creating your array but not filling it with instances of `Turn` or `Die`; they're being left with `null` elements.
&gt; var name = tuple("Paul","Louth"); &gt; var res = name.With( (first,last) =&gt; "Hello \{first} \{last}" ); &gt;Or, you can use a more functional approach: &gt; var name = tuple("Paul","Louth"); &gt; var res = with( name, (first,last) =&gt; "Hello \{first} \{last}" ); TIL functional means lower-case method names.
If you're interested, I've posted a follow-up article on how to use some functional programming concepts to make Pure DI a bit easier: http://www.kenneth-truyers.net/2014/11/19/using-partial-application-for-dependency-injection/
Thanks for the update! But uhhhhh, maybe the example use of `Lazy&lt;T&gt;` you added to your example isn't the best use: public class CompositionRoot { public static void Bootstrap() { // Create the services we need var repository = new Lazy&lt;TaskRepository&gt;(new TaskRepository()); // use lazy here, because it’s expensive to construct (suggestion by FizixMan on Reddit) var notificationService = new NotificationService(); // Use partial application to fix the extra parameters the handlers need // and create and register an Action&lt;CreateTask&gt; and an Action&lt;MarkTaskDone&gt; Commands.Register&lt;CreateTask&gt;(createTask =&gt; TaskCommandHandlers.CreateNewTask(createTask, repository.Value); Commands.Register&lt;MarkTaskDone&gt;(markAsDone =&gt; TaskCommandHandlers.MarkTaskAsDone(markAsDone, repository.Value, notificationService)); } } Let's assume that the request being applied can _either_ perform a `CreateTask` _or_ a `MarkTaskDone` but _not both_. Problem here is that the `TaskRepository` is used for _both_ tasks. If the object/repository you're using is going to be used in the lifetime of the request, you're not really saving anything by wrapping it in a `Lazy&lt;T&gt;`; it's gonna have to be instantiated no matter what. There's no real benefit to wrapping a `TaskRepository` here _unless_ for whatever reason you want to execute your `Bootstrap` as fast as possible, but likely in a request/response scenario, it doesn't matter -- the total time to response is still the same. ^1 But let's say instead the `NotificationService` was wrapped in the `Lazy&lt;T&gt;`: public class CompositionRoot { public static void Bootstrap() { // Create the services we need var repository = new TaskRepository(); var notificationService = new Lazy&lt;NotificationService&gt;(() =&gt; new NotificationService()); // Use partial application to fix the extra parameters the handlers need // and create and register an Action&lt;CreateTask&gt; and an Action&lt;MarkTaskDone&gt; Commands.Register&lt;CreateTask&gt;(createTask =&gt; TaskCommandHandlers.CreateNewTask(createTask, repository); Commands.Register&lt;MarkTaskDone&gt;(markAsDone =&gt; TaskCommandHandlers.MarkTaskAsDone(markAsDone, repository, notificationService.Value)); } } When executing a `MarkTaskAsDone` request now, notice a call to the `NotificationService` will be made. But when executing a `CreateTask` that same lazy call will be ignored; a `NotificationService` object will _never_ be instantiated for this request. Also, another minor bit, the `Lazy&lt;T&gt;` constructor takes a `Func&lt;T&gt;`, not the instance of the class. So this: var repository = new Lazy&lt;TaskRepository&gt;(new TaskRepository()); Should really be this: var repository = new Lazy&lt;TaskRepository&gt;(() =&gt; new TaskRepository()); EDIT: ^1 Your mileage may vary naturally. Perhaps both tasks are executed in a parallel fashion; using `Lazy&lt;T&gt;` here can kick off both tasks to start executing as soon as possible and only instantiate the `TaskRepository` for whichever one needs it first while the other can continue processing until it needs it later.
Thanks, spot on again. Note to self: a quick fix is never just a quick fix. 
Compile-time error: `None` is not a valid value for type `string_that_cannot_be_null`.
Just a few days ago I was also writing an Option\&lt;T\&gt; struct, and cursing the C# behavior of always allowing the use of the default constructor. I'm curious to see how much of an issue that turns out to be in real-world code.
Finally I get functional programming!
&gt; And what reason would that be? Because Java did it? It seems like a mistaken reason to me. Databases. How do you represent the fact that a piece of data doesn't exist? Have a number field, is the number 0 or does the data simply not exist? Nulls are necessary. Yes, they can be error-prone. But you know what? That's why programming is hard, and you need to know what you're doing.
I think it's not so much the method names as how they are called. In the first case, they're used as extension methods acting on the object: name.With(...) Functional languages tend to have the same action written as a higher level function with `name` as an input: with(name, ...) Either are fine (really, either are pretty much identical when it comes to the compiled code), just make the code more readable or less readable depending on their use. This example is pretty trivial only making a single function call; it's when you have to chain/nest several calls is when the style can make or break readability. Sometimes its nice to chain method calls (ala LINQ), sometimes it's nice to nest it the other way. Depending on where you're coming from, dot-syntax might be "weird" or backwards to work with in a functional paradigm (depending on which language you're coming from) The author is using lower case names in general to make the calls feel more like _intrinsic language features_ rather than an interfacing library API.
Yes i tried to debug it myself, having absolutely no luck figuring out why its null. Thats the only reason i posted in the first place. 
But my turn object is filled with basic values, even tried assigning "empty" to the strings. 
If that column is clicked, here's how it sorts: if (lastSortedOrder == SortOrder.Ascending) series = series .OrderBy(s =&gt; s.NextAirDate != "-" ? s.NextAirDate : "z").ToList() .OrderBy(s =&gt; (IsValidDate(s.NextAirDate) ? GetDateTime(s.NextAirDate) : GetDateTime("30/12/3000"))).ToList(); else series = series .OrderByDescending(s =&gt; s.NextAirDate != "-" ? s.NextAirDate : "z").ToList() .OrderByDescending(s =&gt; (IsValidDate(s.NextAirDate) ? GetDateTime(s.NextAirDate) : GetDateTime("30/12/3000"))).ToList(); The laptop sort, if you didn't notice, sorts as a string - its sorting as the day of the full date - as you can see it goes 2, 3, 9 and up. Look at the years too. Everything works perfectly on my PC, I just don't know why not on my laptop. I'm pretty sure it has something to do with language settings of the laptop but I want to make it work for any PC/laptop
IsValidDate just returns a bool - whether or not the parsed date is valid or not. I have it like that because I use IsValidDate in other places too.
Yeah that's the default format its in, dd/MM/yyyy (how its reading it in the beginning). Only some manage to get converted to d MMM yyyy.
&gt;How do you represent the fact that a piece of data doesn't exist? With option types. You can do everything you mentioned with an option type. The only thing you can't do is get a null reference exception at run time. Nulls are not necessary. Yes, they can seem necessary. But you know what? That's just because you've grown so accustomed to them.
Not your _Turn_ object, but your _Turns_ array. Nowhere do I see you fill your array. Also, you have this line in your main program: Turn[] Turns = Turn.Turns; This can only produce headaches as within its local scope, you'll be using it instead of `Program.Turns` field which shares the same name. Overall, you need to break your program down into smaller, debuggable chunks.
Is it possible you can avoid having your dates stored as strings? If you can simply store them as standard `DateTime` objects then sorting becomes trivial. I guess the issue could be this line: .OrderBy(s =&gt; s.NextAirDate != "-" ? s.NextAirDate : "z").ToList() Here you're clearly using string/alphabetical sorting. Maybe try: .OrderBy(s =&gt; s.NextAirDate != "-" ? GetDateTime(s.NextAirDate) : GetDateTime("30/12/3000")).ToList() Otherwise this definitely seems like a culture issue. There are many resources online to resolve culture issues with date times, and even how to best store/workwith/manage dates.
I think you may have a fundamental misunderstanding of foreach loops. foreach( player name in players) iterates over all player objects in players[], assigning the current player object to the variable "name". It looks like you think it means "iterate over all name fields in each player object in players[]". To make things easier for you to understand, rename your player struct to Player. It will help you to understand when you see other foreach loops.
The static "p" is likely where your problem is. You are reading the value from the user into it ("p.name = "...), and then reading out of it in the other method (Console.WriteLine(p.name + "..you have moved to square.." ...). You never store the responses into the array. Static variables are "global" and can be modified anywhere in your code... they are best avoided unless they capture truly global state. Also structs have stack allocation and are copied with each assignment... they are best avoided unless you are sure of what you are doing. Just use a class.
You are setting p to the last player in players in your code somewhere. Try changing your PlayerTurn to this: private static void PlayerTurn( int playerNO , int distance) { player somePlayer = players[playerNO]; do{ somePlayer.pos = somePlayer.pos + distance; } while (somePlayer.pos &gt; 65); if( distance &gt; 65) { Console.WriteLine("You have won the game"); } else { Console.WriteLine(somePlayer.name + "..you have moved to square.." + somePlayer.pos); Console.ReadLine(); } } 
I also forgot to mention LINQPAD. Its amazing and lets you write LINQ and execute your query. It shows you the SQL, and functions generated. If you don't know LINQ I would HIGHLY suggest you take the time to. http://www.linqpad.net/
Im afraid you have this completly wrong my friend. You need to read up on some stuff. Look up for each loops, because it isn't doing what you think it is. Get rid of p completely its not needed and not used correctly. Feel free to message me if you need some guidance. 
Very interesting approach. I like it.
Okay. Thanks hewm and QuietUser - it worked. I didn't know I would have to do it for TryParse as well just to check if its a valid date. Thanks!
I'm glad to hear you like it. Like I wrote in another comment, I really enjoy everything Microsoft Press puts out. Whenever I'm trying to learn any topic within the Microsoft stack, I always go to their books first.
&gt; Databases. How do you represent the fact that a piece of data doesn't exist? Have a number field, is the number 0 or does the data simply not exist? I'd argue that this is more of an issue of trying to stuff everything into a relational model, shoehorning everything into a structured form when it often times really isn't best represented that way. Doing that results in throwing nulls into fields everywhere, and our entire way of dealing with that is thinking it's somehow a valid data representation. That's bullshit, and it's frustrating that people like you then go on to say that "it's hard and you need to know what you're doing". It's not hard. People *make* it hard. People go to great lengths to create complex object models when just simple functions (call them static methods if you like) do the job and are just as easily-tested (aside from raw data access, but that's another story). People try to stuff fundamentally unstructured data into a relational model. People only use maybe 2-3 of the functionality LINQ offers because they're unwilling to think about their code as expressions of intent. People use fucking singletons when they aren't even accessing a single, non-copyable resource. C# does not exist in the same context as systems programming. It's a tower of abstraction above that kind of stuff so we don't have to deal with those same problems.
I think you might be misunderstanding how an Option type works. In F# the Option type is defined as type Option&lt;'a&gt; = | Some of 'a | None That is an Option can either be Some or None. Here's an example function that converts a nullable int to an Option type that contains an int. let nullableToOption foo = if foo = null then None else Some foo Now from here you can't pass that value to a function that expects an integer. You have to first handle the possibility that the value could be None before doing any work on that data. In F# the idiomatic approach handling the Option type is to use pattern matching which unfortunately isn't in C# yet. match nullableToOption foo with |Some number -&gt; printfn "Value is %A" number |None -&gt; printfn "No value" This is equivalent to if nullableToOption foo = None then printfn "No value" else if nullableToOption foo = Some then printfn "Value is %A" number.value The major advantage of the pattern matching approach is that you'll be warned at compile time if you forget to handle either the Some or None case.
In this case, I think you'll want to do both options. The mutable struct will fail (because it's using copies) if you end up using any collection other than the builtin array. For example, change `players` from `player[]` to `List&lt;player&gt;` and the code will no longer even compile (basically described [here](http://stackoverflow.com/questions/3729873/problem-with-struct-and-property-in-c-sharp). Moreover, I imagine the pitfalls of a mutable struct in this case will only serve to make things more difficult for /u/barcemo12 going forward. If someone doesn't know what the difference is between a struct and a class, then they should stick to classes. (but ideally, learn about the difference then apply appropriately. But if we're having fundamental issues with classes, loops, and arrays, then this is not a good time to be dealing with the details of structs)
I'm not arguing databases shouldn't support nulls. I'm saying that stuffing data that isn't best represented in a structured model results in unnecessary nulls. That's not practical at all.
I understand that. But the fact of the matter is that these databases exist, and there's millions of them. When designing a language that's primarily aimed at LOB applications, are you going to design your language so that it cannot easily work with existing databases?
If you're new to writing SQL, one tool that helps write joins is the view designer. In SSMS, go to view, create view and you'll be able to add tables and join them. It will give you the SQL for the join as well. 
ctrl + shift + f is a more advanced search that may not reset under the condition you mentioned. 
Yeah, that does appear to not pick up the window level defaulting. Thanks. Going to have to retrain my muscle memory to do the ctrl-shift but that seems to work.
I don't think this question is appropriate for the C# language subreddit. Perhaps you can try /r/learnprogramming or maybe /r/dotnet, perhaps even http://programmers.stackexchange.com/ (or some other relevant StackExchange subsite)
It is advanced, but it changes the scope of what it's searching behind my back as well. I get at least a little salty because I mentally have it mapped as the "find in the solution" shortcut and sometimes it decides it's in my best interest to search in the current document alone, which breaks my brain for a minute before I figure out why it's failed to find what I asked it to.
&gt; When designing a language that's primarily aimed at LOB applications, are you going to design your language so that it cannot easily work with existing databases? That's the thing, though - it *is* easy to work with existing databases in a language like F#. You can distill all your null checking through one function call in one area, and guarantee non-null information everywhere else. In the case where you want null to have meaning, it's also very easy to work with an Optional type. I don't see why C# can't adopt the same standards.
Not quite as neato as ReSharper however!
&gt; How do you represent the fact that a piece of data doesn't exist? If you're talking about .Net apps talking to databases, the answer is often [DBNull](http://msdn.microsoft.com/en-us/library/system.dbnull%28v=vs.110%29.aspx) which, curiously enough, is not null, which is why you can perform standard equality checks in code testing to see if a given reference equals null or not, while SQL would check your ass for trying that bullshit. None is an enhanced null. Capturing the fact that an object is None (as opposed to null) or that a property is None (again, opposed to null) doesn't mean that applications are going to lose their shit and start inserting None into the DB, because we all get that they're representing the fact that the DB either didn't find a record or stored out the fact that there was a DBNull value there.
The list and tuple functions seem pretty useful. The LINQ overlap is obviously less amazing imo, and the Option&lt;T&gt; can pay dividends if you're willing to restructure your code to do so. 
Resharper has an [Architecture View](https://www.jetbrains.com/resharper/webhelp/Reference__Architecture_View.html), and there's always [NDepend](http://www.ndepend.com/features/). At only 16 and 9 projects, this isn't _too_ bad, but really, it's hard to say where to start. When inheriting existing code bases, there is always a period of "WTF" (or having "needle-in-a-haystack" situations) trying to understand it. Some are far, far worse than others. I'm assuming this project doesn't have tests (or if it does, poor coverage)? If it does have good covering tests, these are sometimes a good place to start, assuming they're following some modicum of BDD or demonstrating/stating the intended behaviour of the system. If you don't have good tests, you could start from the UI layer down -- see how each bit of functionality is implemented. You could also start from the bottom up: get a sense of the lowest level project with the minimum of dependencies, then work up adding one layer at a time.
Just to be clear, are you looking for a book to learn good _object-oriented programming practices_ from or a book to learn OOP _and_ C# _and_ .NET?
I see, thinking about it now it's obvious haha. Thanks!
This thread was bemusing for me because I had been using CTRL + F since 2008 to search current document and CTRL + SHIFT + F for entire solution and never noticed that the change in 2012 would have messed with people's workflows. 
I would recommend checking out StyleCop and CodeAnalysis before getting too deep. There are a lot of stylistic differences and nuances between C# and Java that these tools will clue you in on.
This isn't a critique at all, but your first project is very *win32* by this I mean almost C like. Whilst P/Invoke, IJW and co are much better than JNI, it's not really C# for those afflicted by Java. There are lots of cool features Linq, Rx, TPL which you probably won't get to play with in this context. It's a really fun project, and you've done it nicely. I guess I'm saying welcome to C#, please don't fall into the pit of Java devs I've seen crossing into C# who use just the common subset. I'm not saying you will, as your project didn't really involve any requirements for them.
Ah Resharper. You'll quickly find yourself being at a loss without it over time. I've found that it is an impartible tool for development in Visual Studio.
Oh, that's even better. 
As a sidenote there's DateTime.MaxValue/MinValue to avoid quirks like GetDateTime("30/12/3000") and .ToList() between each linq query will hurt performance
Don't bother. Turn on auto-format on save (Productivity PowerTools) and Code Analysis. The combination of the two is far superior to StyleCop.
I'm not the OP, but could you provide some specific examples? Language Integrated Query (LINQ), Reactive Extensions (Rx), and Task Parallel Library (TPL) aren't going to help him "hack" into the message processing loop of another native running application (hence his calls to direct Win32 APIs). It's been a while since I've done Windows Forms programming, but there aren't a lot of .NET classes and methods to handle the sort of coding that he's attempting. I'd love to learn more though, so please take an example of where he was *too win32* and give me your translation using Windows Forms or other native .NET libraries, if possible. Thanks in advance. TLDR: I don't think .NET framework classes/methods exist to manipulate the message loop (click a button, maximize a window, etc) in another executing .NET or native Windows application.
I'm a private tutor and that's the book I give my students. 
&gt; var append = System.IO.FileMode.Append; Anytime the right side of the assignment offers *any* question I make the left side explicit. If you see 'var' in my code then you can be fairly sure that the right side is going to be very straight forward. If you see an explicit type you're already thanking me ahead of time for saving you the .05 seconds to: grok it, hover over it, go to definition, or whatever. Granted it's not about the time it takes. It's about breaking someone's cognitive frame while they're trying to understand your code. I guess it's all a matter of having coding standards to begin with and sticking to them. 
click bait. shame on you.
Make the client app the active project in the solution. Hit F10 key. Start stepping. 
That's my reference book. To learn I used head first c#. I already knew php, html, and sql. 
I know I know. Still very kind of you to type that up. Accurate and informative. 
Can you please elaborate on some of the issues you've seen and why it leads to service locator? As long as resolve is only done in controllers and other application roots, i don't see it as service locator at all.
Putting using statements inside namespaces is #1 on their list. I've never seen a template in VS that looks like that.
Skipping the underscore for fields is one that really pisses me off. Fields that look like locals are a major source of bugs. As are static fields that look like instance fields, so I strongly recommend using m_ and s_. A standard that Code Analysis in VS supports.
Having to prefix everything with `this.` is another one. The extra line noise really hampers readability and offers no benefit. (Other than allowing the other rule about never prefixing fields with underscores.)
Found another one. StatementMustNotBeOnASingleLine prevents you from collapsing simple expressions into one line, wasting a lot of vertical space. Microsoft is going exactly in the other direction, making it easier to express simple functions in one line in C# 6.
DoNotUseRegions Another example of doing the exact opposite of what the IDE and most developers do. Now I'm no fan of regions and usually delete them from code I inherent, but even I see the benefit of hiding boilerplate code like the IDisposable pattern.
He means it makes it easy to do the wrong thing - ie weeks of writing manual DI boilerplate can save you minutes of writing a coding standard.
On the contrary, your style is awful.
You really can't go wrong buying an Andrew Troelsen book. I still have his *C# and the .NET Platform* book from 2001. It was written when .NET was still in beta, so it's probably long overdue for the recycling bin - but it's hard to part with a well written book. For best results, code up the examples and follow along, i.e., don't sit on the couch and read the book from front to back. 
I think its a great book once you are familiar with the basics of the language, but it might be a bit high level to jump into as a beginner.
the latter. I was thinking to do tutorials and once i get a good understanding of c# and .net I'd try the book. Not sure if it's the best approach.
Even for a beginner? The first chapter just really baffled me. Is it best to start the video tutorials and Microsoft Visual C# 2013 Step by Step, then jump onto Andrew Troelsen's book?
Has it got a lot of project examples? and useful with understanding oop? I've been using php html and sql as well, but with the company i work for they're more c# .net. 
That tip seems reasonable. I was reading the first chapter and thinking where do i start coding. The examples it had were decent so far; a calculator class that prints a line in a console with the parameters given. Did you write out the examples from the beginning? or did you wait for it to start saying to create a project? 
Sure, but also please have in mind I was trying to say that this hobby project won't make it natural to explore all these things. It's probably worth noting in this kind of project that understanding P/Invoke and IJW is very worthwhile. Having a passing experience of C++/CLI won't hurt either. I mention this because having .Net in someone elses process is always going to be a bother. A C++/CLI DLL/EXE or even just a regular .Net app all have a reference to *mscoree.dll*. This will be on the Import Address Table, when windows starts a process, or loads a library, it scans this table, resolving the references, loading them up. mscoree takes a guess as to which version of .Net to load. This is why hooking and the like with .Net is always going to be ill advised, as ultimately you can have all kinds of problems when someone else is hooking it too. Or just say Excel add-ins can be pesky, because one of them wants .Net 1.1 whilst you are up to date. With that out of the way, let's pretend with this you want to do something a bit more clever with the mouse, some kind of analysis or similar? Rx is brilliant for this. But you really need to understand how dispatching and threading will work in it, this can be quite useful, if you were wanting to do anything remotely complex in calculation, Rx would make it quite easy to pass this off to a background thread. You could use the Observable.Window method to chunk the mouse movements up. There are lots of examples of the Observable.FromEvent in terms of UI application processing of user input, which ultimately isn't any different to when you are in a message proc of another process. Rx loves this kind of thing, it's a stream of events, if you want to do something conditional on the back of it, then it's a much neater way of programming it up.
Thank you for feedback.
&gt; Did you write out the examples from the beginning? I didn't at first. I was an Industrial Engineer back then and just read it for my own interests - off and on when I had time. It used cars as the basis for teaching OOP in C#, and each chapter built upon code from the previous chapter. I got about halfway through the book and realized that I had lost the plot. At that point I went back and wrote all the code from the beginning. In general it's a good practice to write the code as you read a book, but with this book it's even more important because of how it builds on previous material and parts of it assume you know the code base. 
I agree!, I worked with a guy who enforced comments above every property, and StyleCop auto placed them in there. Imagine my terror when there was a property called "Name" with a comment above it saying "The Name". I guess I can see the uses for stylecop, but everyone I've worked with who enforces the use of it has a strange style that doesn't quite sit right with me.
With ReSharper you can search for types, members and symbols instead of text. That and 'locate file in solution explorer' are huge time savers.
Eh, I've long since given up on reading the first chapter of any programming book. I skip ahead to chapter 3, core concepts, as supplementary reading material.
I'm wondering if it's efficient to start with this book if I want to learn C# and .NET or it will be better to start with some C# basics? Already have some experience in programming (C++, python) and no problems with OOP. 
This book seems quite advanced. If you want to look at it google the name and there is a website called it-ebooks comes up where you can download a copy for free (most books are on there). Im planning on going onto this book after doing something easier like the other book i suggested, the video link on the side bar and the book /u/necine suggested (which was also on that website). Good luck
You've confused me a bit with [this piece of code](https://github.com/RobCubed/EliteDangerousCrosshair/blob/master/EliteDangerousCrosshair2/MainForm.cs#L231-L242), could you perhaps elaborate on why this is as it is? does it have a specific reasoning, am I missing something about .NET - or was this just a honest mistake? Just curious, it could very well be unused code, but I had a quick browse through and that piece of code just made no sense at all to me :) Edit: This may very well be default Visual Studio code, in which case that boggles my mind even further. I'm not quite sure why that would be a template of some sort. If anyone could elaborate there, that'd be great.
Good catch - that's meant to be: private void linkUpdateLabel_LinkClicked(object sender, LinkLabelLinkClickedEventArgs e) { const string url = "https://github.com/RobCubed/EliteDangerousCrosshair/releases"; try { Process.Start(url); } catch (Win32Exception) { Process.Start("IExplore.exe", url); } } I just messed up when typing it in, apparently. Sometimes opening a url with Process.Start will fail in Windows (for reasons beyond me), and the 'easier' solution rather than detecting a browser and opening it correctly etc. is just to fall back to IE.
Just in case you forgot: a quick fix is never just a quick fix.
It's fine to learn good OOP from Java-based books. Java and C# share many of the same qualities and syntax. When it comes to _object-oriented_ design and practices, it's mostly universal regardless of language. Java and C# will have nuances separating them, or maybe you can use some language features in C# to drive different API designs. Sorry I can't be of more help than that; I haven't read any "OOP best practices" books based in C#.
Are you 12?
Hi, If you're certain that the MediaEnded event is not being called, then I would be tempted to suggest this could be a MediaElement bug - historically, it's always been a bit temperamental. I don't think that you're "leaking" here because you're subscribing to events on the DispatcherTimer and not the other way around, which would prevent the timer from being gc'd. I would consider re-using the same timer by stopping, changing the interval and then starting again. But mostly because it's a little less wasteful. I would also consider testing that the MediaElement has finished playing manually by periodically checking if the Position property matches NaturalDuration.
From what [I could find here](http://msdn.microsoft.com/en-us/library/53ezey2s%28v=vs.110%29.aspx), Process.Start() may not work on URLs, although you seem to have proven different. Maybe it's a fault in the documentation. Remarks Note If the address of the executable file to start is a URL, the process is not started and null is returned. and // Opens urls and .html documents using Internet Explorer. void OpenWithArguments() { // url's are not considered documents. They can only be opened // by passing them as arguments. Process.Start("IExplore.exe", "www.northwindtraders.com"); // Start a Web page using a browser associated with .html and .asp files. Process.Start("IExplore.exe", "C:\\myPath\\myFile.htm"); Process.Start("IExplore.exe", "C:\\myPath\\myFile.asp"); } 
Did you tried clean and then build? It's worth a shot
OK, thanks for clearing that up. I understand your comment now. I agree that another type of project might involve more of the .NET features and libraries. 
Haha, oops, the reference to the image restriction was a leftover from my StackOverflow post! Removed. Thanks! Thanks for your feedback. I will check those other two options out. That last bullet point may well be causing my problem as this control is expected to stick around for a LONG time. I'm disappointed that such a buggy element would be included in WPF!
I am not sure how to fix it long term but I have had this error before and the only thing I could do to fix it was make sure the file was not open in visual studio when building. I know it sounds strange but for some reason if the file was open I would get this error. Other times I would get the error even when the file wasn't open but when I opened the file and then closed it and built it would work again.
What you might need to do is call out to some external latex command either pre-installed on the target system, or distributed with your software, in order to create the output PNG, which you can then load.
The `String.Substring` method takes a starting index and ***length***, not end index. See the documentation: http://msdn.microsoft.com/en-us/library/aka44szs%28v=vs.110%29.aspx So your code is currently saying, "Get me the substring starting from 19568 and the next 19582 characters." So really, you want to put in the difference between your end index and start index: `htmlFromFile.Substring(indexOfHTMLBegin, indexOfHTMLEnd - indexOfHTMLBegin);` (just double-check; this may be off by 1, I haven't tested) EDIT: lol, the irony of your user name :P
Its start index and length not end index. You are telling it to start at 19568 index and go for 19582 characters. Should be 19568 and 14 length
The second parameter of Substring is the length of text to use after the beginning index (first parameter), not the index of the last character. Your second parameter should be indexOfLinkEnd - indexOfLinkBegin Edit: Your other substrings are probably incorrect too.
Here [Project Euler](https://projecteuler.net/)
Just loop through and do whatever it is you need to to display each property: //Assuming myList is a List&lt;object&gt; with the objects defined as above stored in it. foreach(var obj in myList){ print obj.name; print obj.height; } I'm simplifying the syntax here but but that is the basics of how you would access the data in each obj/row in the list. edit: formatting issues.
To print out an html table: string strTable = "&lt;table&gt;&lt;th&gt;&lt;tr&gt;&lt;td&gt;Name&lt;/td&gt;&lt;td&gt;Height&lt;td&gt;&lt;/tr&gt;&lt;/th&gt;&lt;tbody&gt;"; foreach (var obj in myList){ strTable += string.Format("&lt;tr&gt;&lt;td&gt;{0}&lt;/td&gt;&lt;td&gt;{1}&lt;/td&gt;&lt;/tr&gt;", obj.name, obj.height); //if you aren't familiar with string.Format, it is pretty useful for creating string. In this case {0} and {1} are replaced with the values of obj.name and obj.height, respectively. } strTable += "&lt;/tbody&gt;&lt;/table&gt;" //strTable is now a string of the html table you posted.
I've come from the future to report Mono/Xamarin are still alive and well.
Your program is located under bin/Debug bin/Release What you just listed is your project, including source files. But depending on what you do it won't be a `exe`-file alone. It will also be a bunch of `dll`-files. You need to ship them with your `exe`. There are ways to combine these, but they are not advised and are more for intermediate or advanced developers.
Same reason the following wouldn't work: int i = 0; while (i == 100) { // logic here i++; } i is not 100, so it never enters the body of the loop.
 for (int i = 0; i == 100; i++) i starts at 0, never equals 100, and therefore the block of code never executes. I believe you want "i &lt; 100" as the conditional.
A downloader? That's with threads and thread synchronisation though (which is fairly simple in C#, but still)
Not sure if this is the problem but I noticed you're populating a lisg of strings with an existing list of strings (correct me if I'm wrong). Strings are referenced, so if you change the value of one string in a sequence of referenced strings, it changes them all. I'm no expert and it has been a while since I threw some code together but a switch-case method to define string literals, rather than reference them, was my ultimate solution. Forgive my lack of code completion; I'm on my phone and walking home, but one example was for a deck shuffler in a text based card game. Say you deal a card from a deck to player hand. Instead of player.hand[0] = deck[0], you would do if deck[0] = "Ace of Spades" then player.hand[0] = "Ace of Spades", onlg in a switch case method instead of an if then loop. Not sure if relevant; again not an expert.
Not sure if this is the problem but I noticed you're populating a list of strings with an existing list of strings (correct me if I'm wrong). Strings are referenced, so if you change the value of one string in a sequence of referenced strings, it changes them all. I'm no expert and it has been a while since I threw some code together but a switch-case method to define string literals, rather than reference them, was my ultimate solution. Forgive my lack of code completion; I'm on my phone and walking home, but one example was for a deck shuffler in a text based card game. Say you deal a card from a deck to player hand. Instead of player.hand[0] = deck[0], you would do if deck[0] = "Ace of Spades" then player.hand[0] = "Ace of Spades", only in a switch case method instead of an if then loop. Not sure if relevant; again not an expert.
By the way, there is a library called [HtmlAgilityPack](http://htmlagilitypack.codeplex.com/) that parses the given HTML and gives you an organized and queryable result (with XPath).
It's in hungarian, but I'll try translating it. Btw I found a longest common subsequence method, I think it will be a good start, if I can understand how it works. *There is string A and string B. A is a subsequence of B if A can be created by deleting characters of B. For example A = "abd" B = "abcdef", then A is a subsequence of B.* *There is text T (read from text file). Find the shortest X word, for which is true that all words from T are subsequences of X. Write X to the console.* edit: first semester in university and this is some kind of half term work.
I'm currently reading Illustrated c#, I think it's spot on for what you're looking for. It doesn't cover .net though, just c#, but it does it rather well.
also trying to use the user input of the amount of players but when i try to make int i equal to PlayerNumberInGame it doesn't work properly. Is there anyway to make that change and instead of asking "what is your name" can it ask " enter name of player 1" "player 2" ect
How are you even trying to see what's wrong if your code is formatted like that? Why don't you even format it yourself before you ask for help? Here is it properly formatted: struct Player { public string name; public int pos; } class Program { static Player[] players = new Player[4]; public static void GameTurn() { for (int i = 0; i&lt; players.Length; i++) { PlayerTurn(players.Length, 3); Console.WriteLine(players[i].name + "has moved to square" + players[i].pos); Console.ReadLine(); } } public static void Gamereset() { players[0].pos = 0; players[1].pos = 0; players[2].pos = 0; players[3].pos = 0; players[0].name = string.Empty; players[1].name = string.Empty; players[2].name = string.Empty; players[3].name = string.Empty; Console.WriteLine("Hi and Welcome to tactical space chess battle"); Console.WriteLine("How many player are taking part in the game?.... Enter a number between 1 and 4"); int playerNumbersInGame = int.Parse(Console.ReadLine()); for (int i = 0 ; i &lt; players.Length; i++) { Console.WriteLine("what is your name"); players[i].name = Console.ReadLine(); players[i].pos = 0; } } private static void PlayerTurn(int playerNO, int distance) { { Player p = players[playerNO]; do { p.pos = p.pos + distance; } while (p.pos &gt; 65); } } static void Main(string[] args) { Gamereset(); GameTurn(); } } And now it's very easy visible where a big mistake is: PlayerTurn(players.Length, 3); .... Player p = players[playerNO]; `Length` is the length of your array. In this case this is 4. So you pass this to your `PlayerTurn()` method, then try to access the fourth element of your array... but the index starts at 0. So accessing index 4 is invalid and you get an exception. This could also have been figured out really easy with a debugger. Set a breakpoint, investigate the values at runtime, see if they are the way you expect, etc etc. I did not check for any other mistakes.
Seriously. I bet 80% or more of people that looked at that mess just decided to look away before getting a seizure.
Does this mean that i have to change the players[i].name in gameturn method?
struggling so much on it. it's really hard, well at least for me
Formatting code cleanly should be the easy part. =)
Possibly inherit it in a new class that is readonly?
Well, that was short lived lol. This situation is using the Unity3D game engine, which does not let me use readonly at all really :(. Man, I thought that was going to be so easy. I should note that Unity3D is actually using Mono (2.?) and not pure C#.
Can you create an interface where, for the set methods of your "readonly" version, they do nothing, and the normal version has full get/set capabilities?
Yeah that's an option. I considered setting a flag during construction that was then tested every time I want to call a method. But, I'm not sure how to use a flag to stop someone from directly changing a public variable. Note: The variable is public to avoid the need for getters and setters. This section of code needs to be as fast as possible, and from my understanding, getters and setters add a couple extra memory accesses at runtime.
Yeah I think you are right. Darn. Well, looks like I just have to be super careful with my code then. Thanks.
Can you expand on your use case a bit? It sounds to me like you want two different classes that happen to have the same data fields, but represent different functionality.
Mono provides a full implementation of C#. The version in Unity is just really old, however.
Yeah.. No.. Please just let that thing drop under the table and die.
gross
Eh... am I missing something? I thought it was interesting. And it's part of the language.
Either make a sub-class and tune it that way, or make a wrapper class. These are two different use cases so you may want to avoid inheritance. Up to you.
You guys are taking this way harder than I expected. You don't have to use it, and at work you can just add it to the styles guideline as bad. But it's a cool language feature!
dynamic has nothing to do with functional programming. And it doesn't make the language really more powerful... It just makes the code that stupidly uses dynamic a mess to read and debug.
How is it a cool feature? You throw away compile time checks to gain.. what? Not having to define proper structures? Yayyy.
&gt; Note: The variable is public to avoid the need for getters and setters. This section of code needs to be as fast as possible, and from my understanding, getters and setters add a couple extra memory accesses at runtime. That's generally not true for simple properties. If the only logic in your getter/setter is to return/set a variable, it's trivial for the compiler to optimize out the property overhead.
If you remove this CSS definition: pre, code { border: 1px solid #e6e6e6; } The code in this page actually becomes readable.
http://en.wikipedia.org/wiki/Ternary_search_tree ?
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Ternary search tree**](https://en.wikipedia.org/wiki/Ternary%20search%20tree): [](#sfw) --- &gt; &gt;In [computer science](https://en.wikipedia.org/wiki/Computer_science), a __ternary search tree__ is a type of [trie](https://en.wikipedia.org/wiki/Trie) (sometimes called a *prefix tree*) where nodes are arranged as a [binary search tree](https://en.wikipedia.org/wiki/Binary_search_tree). Like other prefix trees, a ternary search tree can be used as an [associative map](https://en.wikipedia.org/wiki/Associative_map) structure with the ability for incremental [string search](https://en.wikipedia.org/wiki/String_search). However, ternary search trees are more space efficient compared to standard prefix trees, at the cost of speed. Common applications for ternary search trees include [spell-checking](https://en.wikipedia.org/wiki/Spell-check) and [auto-completion](https://en.wikipedia.org/wiki/Auto-completion). &gt; --- ^Interesting: [^Search ^tree](https://en.wikipedia.org/wiki/Search_tree) ^| [^Doubly ^chained ^tree](https://en.wikipedia.org/wiki/Doubly_chained_tree) ^| [^Hash ^tree ^\(persistent ^data ^structure)](https://en.wikipedia.org/wiki/Hash_tree_\(persistent_data_structure\)) ^Parent ^commenter ^can [^toggle ^NSFW](/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cma18t5) ^or[](#or) [^delete](/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cma18t5)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
&gt; You don't have to use it, and at work you can just add it to the styles guideline as bad. You're forgetting that those of us who've been writing C# for more than 10 years.... heck even those starting NOW... will have to maintain code written by other people in years to come. Who's to say that someone will start to use `dynamic` because they bullshitted their way into a C# job from a JavaScript background, and littered the code with runtime bugs... ... only for you to sort when you've been brought in as an experienced software engineer contractor to fix hundreds of weird, runtime errors that only happen in prod but never in dev. Yes, this is the nightmare that is brewing.
Yeah, you're right.
I found a method called LCS (longest common subsequence), but its running time is high as hell. It's recursive and calls itself tons of time, if the two words have a lot of letters that differ. For example, x = yxyxcy y = asdasd It calls itself 1847 times in this case. Luckily they won't look the running time now, so it's not a problem. The problem is how to continue. I have two char[] arrays that contain the missing charachters and the existing ones. But how to find the correct place to insert them?
Interesting that C# is capable of this, though I'll echo the general consensus here of "Oh god no, please no, please never ever use that". I'd be interested in hearing a legitimate use case for "dynamic" and "ExpandoObject". I'm sure it exists, but I suspect it'll be a niche case where it belongs.
So far, nothing as I can't think how it would be done.
Just because you can, doesn't mean you should. If you use this abomination, you're most certainly doing something wrong.
I like Reflection more than dynamic, simply because .NET makes it so easy to use as opposed to say, Java. In Java it always feels like a crappy hack.
The thing is though, all language features like LINQ and stuff like event handlers are optional but have genuine use cases. Like simplifying a 2 layer foreach loop into a LINQ select. But this doesn't add anything but pain, there is literally no benefit. Even if you were to need something really specific like NoSQL-esque records you'd be better off with a Dictionary of `&lt;string, object&gt;`s or `&lt;string, dynamic&gt;`s.
[Here](https://www.microsoftpressstore.com/store/microsoft-visual-c-sharp-2013-step-by-step-9780735681835), under the Companion Content tab.
I sure can. ------ The best way to explain what I have is to relate it to a node-based datastructure. Essentially, I have a network of nodes that point to other nodes. The number of pointers at each node is dynamic. In addition, the data that each node stores may be manipulated. Last, each node may influence its connected nodes and change their data, and even their connection into the structure itself. Also notable is that there is no head/root to the structure, and it isn't "tree" like in form. Basically it's a dynamic graph using nodes/pointers instead of a multi-dimensional array. In this dynamic structure, I want to be able to insert a "generic" Node which has a non-editable set of data, and it's pointers cannot be changed either. I was thinking of simply making a read-only instance of my Node class which would have satisfied all of my requirements, but it appears I am not able to do so. Also: The read-only protection is desired for coding purposes, and can be a compiler-level restriction.
&gt; Interesting that C# is capable of this Really? This is just syntactic sugar for Dictionary[Key]. So it's nothing special. As for a use case for dynamic, it was invented for scripting languages like IronPython and works quite well for that.
I was hoping that was the case. Do you by chance know if Unity3d's compiler has such functionality? I may need to go visit Mr. Google...
&gt; I'm not sure what you mean by having to install in every project. You do know that you can make one rules file and just use that, right? I'm on the phone now, but I will try to find an example for you. Actually now it's come to running Stylecop, I've realised it's not even a real one on NuGet! http://imgur.com/nnzx3QP,eRKOZY2#1 Which raises the question: How the hell do you actually install Stylecop these days? Have they silently killed it off or something? How did you install it?
Nothing? Not even a slight idea? Try to break it down into tasks you have to do, then think how to solve each single task. You need to learn to solve these things on your own, the earlier the better.
You can use dynamic objects to create proxies for objects, which allow you to override behavior at runtime.
Just because YOU don't see valid use cases doesn't mean there AREN'T any.
Dynamic typing has nothing to do with functional programming. Static typing and dynamic typing can appear in a functional language or an object oriented language. It is not normally tied to one or the other. 
I don't think what you're asking for here is appropriate for the C# _language_ subreddit. Check out /r/learnprogramming, /r/dailyprogrammer, and /r/programmingbuddies instead.
Seems I missed some information. Student is an object with the parameters: * Name * Email * Address * Matriculation Number Module is another object with the parameters: * Name * Code * Module Leader (Which is a Staff object) Students that are enrolled on a module are put into a List&lt;Student&gt; which is then serialised to a file named using the module code. I have considered making another class for the marks but I was wondering if there was a way to store it in the XML file without having to make another class. 
Okay, as I read about it I need the Shortest Common Supersequence. It's an NP-complete problem, meaning there's no way to solve it in reasonable time. But there are approximate solutions that won't give the shortest one, but one that's close to it. Greedy method they call it. Is there a way to write this in c#? I haven't found anything about it. 
Nothing wrong with another class; classes are good. Make classes to represent that data schema that's in your XML file. Work on deserializing/serializing that data.
Can you link to your StackOverflow question so we can see the duplicate they were referencing? And what's the problem you're having? Is it not compiling? Is it throwing an error? If so, what's the error? This line here: PSQLinfo[3] = xn["port"].InnerText; Seems suspect to me. You create your array as: `String[] PSQLinfo = new string[3];` which means it has only **three** elements. But you access the ***fourth*** element in the above line. I think perhaps you meant to have: PSQLinfo[2] = xn["port"].InnerText;
One thing you can do is declare your string array an out or ref variable for the function – basically, you define the string array in the calling method, then pass it as a reference or out variable and the function fills it with data and returns nothing. See the MSDN docs for details on this. return also means "return this and quit this function", so only the first iteration of your foreach will ever be executed. Furthermore, accessing element 3 in a String[3] array doesn't sound like a good idea – indices are 0-based.
PSQLinfo[0] = xn["server"].InnerText; PSQLinfo[1] = xn["database"].InnerText; **PSQLinfo[3] = xn["port"].InnerText;** is almost definitely it.
It's okay. Happens to everyone. Sometimes you're stuck and you just don't see where the goddamn bug is. Your coworker comes by and takes a look – "hey, aren't those parameters the other way around?" or "you forgot an increment there" – and bam, it runs fine.
Don't use lcs unless it is a backward facing implementation. What i mean by this is, imagine you are looking for, "abe" in ababaabbabababbbbaaabedbbae, if your search is forward facing, you'll try to find "a" followed by "b" followed by "e". What you really want to do is reverse the direction the algorithm looks, to find "e" preceded by "b" and then preceded by, "a". 
Ahh see, this is useful information. The stack trace shows that `sqlGlobalVars` type failed to initialize. This means that one of the static field initializers for it likely failed. Let's look further down; it failed because of a `NullReferenceException`. That means one of the expressions you have for your field initializers must be attempting to call a member on a `null` object. What do you have? public class sqlGlobalVars { public static String PSQLserver = getPSQLinfo()[0].ToString(); public static String PSQLdb = getPSQLinfo()[1].ToString(); public static String PSQLport = getPSQLinfo()[2].ToString(); } You have a couple possibilities here: 1. `getPSQLinfo()` returns `null`. Then attempting to access its indexer will throw the error. (like calling `null[1]`; you can see why this would fail) 1. `getPSQLinfo()` successfully returns an array, but one of the elements in `[0]`, `[1]`, or `[2]` is `null`; calling `ToString()` on the null reference would also throw the error. Looking at your `getPSQLinfo()` method though we can see that it will _never_ return a `null` array. `PSQLinfo` is _always_ instantiated and always returned. That leaves us with possibility #2 above. At first glance, this might make sense, we already collectively identified that the line: PSQLinfo[3] = xn["port"].InnerText; Is a problem. So you're _never_ assigning element `[2]` to the array. So the line: public static String PSQLport = getPSQLinfo()[2].ToString(); Would actually execute like: public static String PSQLport = null.ToString(); Which could result in your `NullReferenceException`. But this is where it gets interesting. That bad line we saw: PSQLinfo[3] = xn["port"].InnerText; The problem isn't that you're assigning to `[3]` instead of `[2]`. If this was happening, it would throw an `IndexOutOfRangeException`. (attempting to access the fourth element of a three-length array) So what's going on here? Let's trace through your `foreach` loop: foreach (XmlNode xn in xnList) { PSQLinfo[0] = xn["server"].InnerText; //fine PSQLinfo[1] = xn["database"].InnerText; //fine PSQLinfo[3] = xn["port"].InnerText; //BANG! IndexOutOfRangeException return PSQLinfo; //will never reach because of the exception the line before } So what's the deal here? How come this isn't erroring out? Well, perhaps `xn["server"]` or `xn["database"]` is returning `null`; then accessing `InnerText` on them would throw a `NullReferenceExeption`. But I don't think so: the exception message and stack trace doesn't seem to indicate that; the error didn't happen _in_ `getPSQLinfo()`, it happened _in_ the type initialization of `sqlGlobalVars` Well, there's then really only _one_ possibility: I think actually _this:_ XmlNodeList xnList = xml.SelectNodes("Application/PSQL-config"); What's the problem with this line? It compiles, right? Well, I'll bet you that it's returning an _empty set_. That no nodes match your query string, or you're looking in the wrong level in the XML structure, or perhaps you're looking at the wrong `config.xml`. Why would this be a problem? Well it comes to the `foreach` loop, if `xnList` is _empty_ then the `foreach` loop _never executes_ (after all, how can you iterate on an empty list?) Fine, so the program skips the `foreach` loop. What happens next: PSQLinfo[0] = "failed"; return PSQLinfo; Ok, fine. No error here. But wait, you haven't filled `PSQLinfo[1]` and `PSQLinfo[2]`! So what happens then when we get to the `sqlGlobalVars` type initializer? public class sqlGlobalVars { public static String PSQLserver = getPSQLinfo()[0].ToString(); //fine, executes as "failed".ToString() public static String PSQLdb = getPSQLinfo()[1].ToString(); //BANG! executes as null.ToString() public static String PSQLport = getPSQLinfo()[2].ToString(); //never executes because of the previous BANG! } That means that your program is _actually_ failing on the line: public static String PSQLdb = getPSQLinfo()[1].ToString(); (Although, the original `PSQLport` line would also "BANG!" in the same way because it too is essentially `null.ToString()`) So where does this leave us? Well, unfortunately, right back to that duplicate StackOverflow question they referenced you to: http://stackoverflow.com/questions/4660142/what-is-a-nullreferenceexception-and-how-do-i-fix-it The possibility they stated here could be your culprit: &gt; The runtime throwing a NullReferenceException always means the same thing: you are trying to use a reference to an object which isn't initialized (or it used to be, but isn't anymore). &gt; This means the reference points to null, on which you cannot access members. The simplest case: &gt; string foo = null; &gt; foo.ToUpper(); And later in the post: &gt; **Array Elements** &gt; Person[] people = new Person[5]; &gt; people[0].Age = 20 // people[0] is null. The array was allocated but not initialized. There is no Person to set the Age for. This can be extended to your `string[]` array: string[] myArray = new string[3]; myArray[2].ToString() //myArray[2] is null. The array was allocated but not initialized. There is no string to call ToString() on. So how to _actually fix this_? Mainly, spin up your Visual Studio debugger and start cracking. Set a breakpoint at the start of your `getPSQLinfo` method and move through it line-by-line. Inspect each variable for the lines and _validate_ that their value is _what you expected it is_. If it's not, figure out why not. Debugging skills are arguably one of _the most important skills you can have_ as a developer. This debugging method to fix it is pretty much what was said in that StackOverflow post: &gt; **Debugging** &gt; &gt; How do you find the source of a `NullReferenceException`? Apart from looking at the exception itself, which will be thrown exactly at the location where it occurs, the general rules of debugging in Visual Studio apply: place strategic breakpoints and [inspect your variables](http://msdn.microsoft.com/en-us/library/esta7c62.aspx), either by hovering the mouse over their names, opening a (Quick)Watch window or using the various debugging panels like Locals and Autos. &gt; &gt; If you want to find out where the reference is or isn't set, right-click its name and select "Find All References". You can then place a breakpoint at every found location and run your program with the debugger attached. Every time the debugger breaks on such a breakpoint, you need to determine whether you expect the reference to be non-null, inspect the variable and and verify that it points to an instance when you expect it to. &gt; &gt; By following the program flow this way you can find the location where the instance should not be null, and why it isn't properly set. Beyond that, even if you fix your XML loading, you're still going to want to fix the error-case of your method in that when you can't read your XML file and you put in "failure", you need to put it for the other elements of your array: PSQLinfo[0] = "failed"; PSQLinfo[1] = "failed"; PSQLinfo[2] = "failed"; return PSQLinfo;
Dapper uses them in it's query code so that it can return results as fast as possible from the database. It then iterates over the dynamic object to map the data to entities. Minor complexity, significant performance gains over mapping the query results directly to the entity while reading from the database.
&gt; When done right 
I prefer dynamic to reflection, since it's much easier to read and less verbose.
Nicely done. I have not seen expressions used that way before. TIL.
In order to format your code properly in Reddit you need to: - Have an empty line before and after the code. - Have 4 spaces in front of every code line. Please format your code properly, so it's not a pain in the ass to read it.
I use dynamic all the time for objects that will get serialized to json. Pretty sure that's exactly what it was designed for. If your object is being consumed by javascript, there is no point creating a type for it. Even when serializing *from* json, it's nice, but if the object is going to stick around then I will usually type it properly.
Um no... it's a lot more than that. You can't add all sorts of different and unknown types to a dictionary and have them get resolved at runtime.
Sure there is. 1. A well defined structure. You just need to look at the class to know it's build up, not at all locations where your dynamic object is manipulated. 2. You could later add a C# client, then you'd need to refactor every occurrence of the dynamic object. 3. Classes you could automatically translate to TypeScript, making it type safe in both worlds. 4. Dynamic potentially hides bad class structure.
It pretty much is just that - you can cast an ExpandoObject to an IDictionary&lt;string, object&gt;. The string represents each property name and the object the property value. var expando = new ExpandoObject(); expando.MyProperty = foo; would add the key { "MyProperty", foo } to its internal collection. It implements things like INotifyPropertyChanged, but there's nothing inherently special about it.
More often than not, none of those scenarios apply. Pointless classes which do nothing take up space, clutter the IDE and source tree, and reduce readability. Instead of looking at a class structure you can just look at the few lines of code where the object is built before being returned. If you you plan on keeping that data around and using it elsewhere, I agree you should not use dynamic. I am speaking about working with json data that will be be passed off to other languages. That's the whole point of dynamic - to make interop with dynamic languages easier. TypeScript looks neat, but not super relevant if you aren't writing the JS. Not sure why you would have to refactor anything if adding a C# client.
Oh I see, that's interesting. It is still saving you from needing to do quite a bit of reflection though. It resolves arrays, letting you lookup by index using normal syntax and also nests itself lazily. Couldn't imagine doing all that with just a dictionary and reflection.
Wow... thats.. so beautiful..? Now show me one representing an object model 3-4 levels deep with arrays and lets compare the corresponding dynamic code.
You can change all shortcuts in the options dialog. Surprising, isn't it?
Processes do not have a **type**. However the task manager groups the processes, it is by an internal algorithm. I'd suspect that **Apps** are processes that have a UI window - then the solution mentioned by /u/hewm might work. **Windows processes** are probably a special list of processes.. Or perhaps processes launched by the system. If you want to know how exactly they're identified, your best shot is to ask **Raymond Chen** (perhaps using Twitter). TL;DR: Processes do not have a type.
Is this screenshot helpful enough? http://i.imgur.com/ypleKQD.png
Really? Oh, well.. This is so easy to find that I didn't expect you to need help for this. 1. Open Visual Studio. Since here you want to change the settings. 2. Go to the options. You get there by selection "Tools" and then "Options..." in the menu bar. The menu bar is this long control right under the window title bar with "File", "Edit", and so on. 3. In the options dialog search for "shortcut" - since you want to change a shortcut. This will lead you to the element where you can change shortcuts: "Keyboard". 4. Enter "format" in the "Show commands containing:" edit box, since you're looking for the formatting command. 5. Either select "Edit.FormatDocument" or "Edit.FormatSelection", depending on what you want. 6. Set focus to the "Press shortcut keys" editbox. You do this easily by simply clicking into it. 7. Press the new shortcut you want this command to run under. 8. Click on the button "Assign". 
Thank you very much :)
Thank you for the *step-by-step* although not 100% needed, it is very much appreciated. Apologies if I came off as rude- it was more so a *come-back* so to speak for my own personal amusement based on your comment. The reason I posted was because I was unsure as to where to find the formatting change. I am brand new to VS and did not expect any immediate or fast acting help- simply was posting for help :)
I'm trying to develop a Windows Forms App and I was trying to call the form in a class file. The form opens and the comboBox in the DataGridView works OK when I open it from another form, but with form1.Show();, not form1.ShowDialog();. Does this mean I've accidentaly tried to run it from another thread? 
Is your application multithreaded? E.g. do you anywhere explicitly start a new thread?
No. Not intentionally, I'm still learning C#.
I'd prefer not too. What is the recommended way to open a form in a class file in a Windows Forms App?
I was near the top of the classs when I studied VB.NET in my degree. So I'm not a newbie to programming, just C#. If you can't answer my question just point me to some tutorials.
OH, THE TOP OF THE CLASS! Well, then you don't need help. You were the top of your class. Just a side note: VB.NET and C# are both .NET languages. You can pretty much mostly change them 1-to-1. And the error has nothing to do with either, VB.NET or C#.
Did you try this? http://stackoverflow.com/questions/13580475/single-thread-apartment-issue
Not yet. I'll look at it. Thanks.
I use `dynamic` every now and then for one-off, non-production type work (like if I need to analyze a bunch of objects from an API that returns a string, such as an xml string returned by a service). For example, one thing that I use it for sometimes are dealing with a group of classes which are defined in an xsd and are automatically generated in C#. I'd normally deserialize the string returned from an API call into whatever automatically-generated class (hierarchy) I need. There are times where an entire set of classes will all have the same properties of the same type. For instance, maybe `ClassA`, `ClassB`, ... `ClassZ` all have string Name string Description DateTime LastAccess or something like this. Instead of generating an interface like `IHasNameDescriptionAndLastAccess`, and then changing all of the generated classes to implement this interface, or using reflection, I will just refer to instances of these classes as `dynamic` objects and access `Name`, `Description`, `LastAccess` as properties. I realize this would lead to a runtime exception if the classes don't have what I'm expecting, but for one-off things or cases where you know these properties are there, `dynamic` is much faster. Edit: formatting
/u/hewm *
Anonymous objects are good for this also. It would seem that dynamic offers a lot more flexibility on that end though, but I feel like anonymous objects would be more than enough to handle json serialization even without the need for the dynamic class.
The ViewBag dynamic object in the MVC framework is exactly this. Sytactic sugar around an instance of Dictionary&lt;object, object&gt;
Here's my thought: int skipchar = 0; for(int seedLength = 1; seedLength &lt;= searchString.Length-skipchar; seedLength++) { var seed = searchString .Reverse() .Skip(skipchar) .SubString(0, seedLength) .Reverse(); var remainingSearch = searchString.SubString(0,searchString.Length-(seedLength+skipchar)); var seedIndex = stringToSearch.IndexOf(seed); if(seedIndex &lt; 0) { skipchar++; seedLength--; continue; } else { var stringToSearchForRemaining = stringToSearch.SubString(0,seedIndex); var remainingIndex = stringToSearchForRemaining.IndexOf(remainingSearch); if(rememainingIndex &gt;= 0) { Console.WriteLine( string.Format("Seed: {0} found at {1}\n Remainder: {2} found at {3}", seed, seedIndex, remainingSearch, remainingIndex)); } } }
 using System.IO; using System; using System.Collections.Generic; class MainClass { public int BotAmount; public MainClass() { } } class CreateBot { public int BotNumber; public CreateBot(int x) { this.BotNumber = x; } } class Program { static void Main() { MainClass mainClass = new MainClass(); mainClass.BotAmount = 5; List&lt;CreateBot&gt; createBotList = new List&lt;CreateBot&gt;(); for (int x = 0; x &lt; mainClass.BotAmount; x++ ) { createBotList.Add(new CreateBot(x)); } foreach(CreateBot createBot in createBotList) { Console.WriteLine(createBot.BotNumber); } } } Should output: 0 1 2 3 4 Hope that helps.
I have found that, but when I clink the link, it says file not found :/ Wierd
I've blogged about [why it isn't just UpdatePanels in disguise](http://navigation4asp.net/2014/11/22/link-yourself-rich-with-navigation-for-asp-net/)
Post your XAML and we can probably help. If you're just dragging and dropping in the designer that has a habit of creating fixed margins for everything, which is why it looks weird when the window is resized. You really need to understand how WPF does layout a bit more. Take a read of [this guide](http://www.codeproject.com/Articles/140613/WPF-Tutorial-Layout-Panels-Containers-Layout-Trans) to get a better idea of what's going on and how you can use different types of panels to lay things out properly.
Here's my XAML file: http://pastebin.com/TdbD3Zn4
Yeah, that looks like it's been dragged and dropped from the designer all right. Have a read of the link above and learn how the different panels work. In the meantime here's a layout that approximates the main portion of your screen. There are any number of ways you can do this sort of thing - it could all be done with one grid, but I often find it nice to nest things to semantically define areas of the screen. &lt;Grid&gt; &lt;Grid.ColumnDefinitions&gt; &lt;ColumnDefinition Width="3*" /&gt; &lt;ColumnDefinition Width="2*"/&gt; &lt;/Grid.ColumnDefinitions&gt; &lt;Grid Grid.Column="0"&gt; &lt;Grid.ColumnDefinitions&gt; &lt;ColumnDefinition /&gt; &lt;ColumnDefinition /&gt; &lt;/Grid.ColumnDefinitions&gt; &lt;Grid.RowDefinitions&gt; &lt;RowDefinition Height="2*" /&gt; &lt;RowDefinition Height="*" /&gt; &lt;/Grid.RowDefinitions&gt; &lt;GroupBox Grid.Row="0" Grid.Column="0" Header="Offline Controls" /&gt; &lt;GroupBox Grid.Row="0" Grid.Column="1" Header="Server Status" /&gt; &lt;GroupBox Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1" Header="Browser" /&gt; &lt;/Grid&gt; &lt;GroupBox Grid.Column="1" Header="Editor"&gt;&lt;/GroupBox&gt; &lt;/Grid&gt;
Ah, you're right. I'm sorry I never even bothered to check if the link worked. Here, I'll upload it to my OneDrive and you can grab it from there. EDIT: Here's the link on my OneDrive: http://1drv.ms/1xRqQwW
Read his comment history. He's pretty harsh
tl;dr... but it looks like you are trying to use excel as your database. i would use nosql, sql, or mongo db and learn a bit about developing in a set language. Once you know how to read, update, and delete tows from the database, you will have solved most of your concerns. Then you can use dapper to export to excel if excel is a requirement. 
I've used dynamic for a couple of things: * View models (and by view models, I mean things that I'm serializing to json mostly). Instead of creating a class, I use dynamic and anonymous types. * Configuration. I've created some systems that would allow the person to just create an anonymous type with a couple of properties for configuration. Anything that was missing, the system just used a default value. It was either that or an xml file that was about 100k in size... It wasn't my design choice. * Database objects. Note that this is usually for one off apps, proof of concept items, or when it's literally going straight from database to serialized object. * Serialization. Basically just at edge points for an app. Either I'm getting data in or sending data out. Also note that while I use dynamic, I don't use ExpandoObject any more. Too many limitations and issues. Instead I developed my own class that handles data conversion for properties, the class itself, has some methods like subset, etc.
 6 &amp; 5 are handled by using a true database. 4 check for validity as they are entered (on blur for example). Alternately you could put everything into a collection and iterate through them as you check validity. That's a long way around the block though. 3 http://haacked.com/archive/2007/08/21/i-knew-how-to-validate-an-email-address-until-i.aspx/ 2 don't copy code. Write one class or function and pass the information to it. 1 Clearing is fine, make it work first, then make it work better. 
Are you using WPF, or WinForms? In WinForms, you can change controls programmatically using this.Controls. I just tested this in a VS 2013 Community WinForms project with three TextBoxes. Here is my form load: private void Form1_Load(object sender, EventArgs e) { var controls = this.Controls; foreach (var control in controls) { var controlToUpdate = control as TextBox; if (controlToUpdate != null) { controlToUpdate.Text = "changed progromatically"; } } } As for verification that emails are valid, this would, in my experience, be solved with regular expression. [Here is a stack overflow topic about regular expression for email validation.](http://stackoverflow.com/questions/5342375/c-sharp-regex-email-validation) I would recommend reading the various answers to see what is and isn't good about each suggestion. [Here is a microsoft article about the same topic](http://msdn.microsoft.com/en-us/library/01escwtf.aspx) As for multiple checks, you have a variety of options. Having a boolean for each check on each box is feasible in a smaller situation, but not likely to be useful when making multiple checks against multiple text boxes, especially if you intend to reuse those checks. This is where you are going to want to look into [Flaggable enums.](http://stackoverflow.com/questions/8447/what-does-the-flags-enum-attribute-mean-in-c) The explaination on stack overflow about how these work is very thorough. I've worked with the Excel Interop a few times in the past and I would recommend you choose a different method of storing your data. That's not to say you can't output your data to a CSV or excel file, but trying to use excel as a database is going to be a nightmare. SQLite is an option, there are others as well.
6&amp;5 I've learned how to create and do basic stuff in database management system and access, but I've never created a db from c#. First question, if I just wanna give the .exe program to people is it possible to use a db? If yes is are there any links that you could give me where I can read up on this stuff? As I have no clue how this works, if i make a program that uses a db does the "end user" need to have the db programs installed as well? I've also seen that you can add a service-based db in visual studio, is this the same as a db I create with access/db management system? 4 I've never heard or seen onblur so I'll definitely check it out 3 After reading the link about email validation I think my idea is more then enough to validate an email eg "non whitespace @ non whitespace . non whitespace" 2 someone recommended me to create a separate class where I should place all the methods I could need but I have no idea what he means and google isn't helping. I think what you're saying it the exact same thing, any chance you have some more info on that? 1 Well at least I'm doing something right :)
I'm using winforms, as for the rest of that first part I genuinely don't know what you're talking about :/ I will read up on the email verification, was thinking about using the following "non whitespace @ non whitespace . non whitespace" Never heard nor seen enums or flaggable enums. As far as I understand I can determine which checks have been passed depending on the total value of these enums? I don't want to use excel as a db, I just thought it would be easier then to create an entire db. I also don't know if db's are portable etc, see my above post about my concerns for db's as I don't have any knowledge using them with c#
I recommend giving your forms meaningful names.
It has tons. And you're expected to read it cover to cover and do all the fun little puzzles. I really like the head first series when tackling a new technology.
It most certainly does not have everything though. I'd say it gears you up for entry level work. But very fast and very well.
In explanation of my first part: Lets suppose you have a form. For simplicity's sake, we shall call this form Form1. On this form you have three TextBoxes. These textboxes we will name textName, textEmail, and textPhone. On this form you also have a checkbox. We shall name these checkSubscribe. On this form you also a button. We'll call it btnSubmit. Lets say, after you press the submit button, it does any kind of validation and data entry, and then you want it to clear the textboxes and reset the checkbox to unselected. This can be accomplished easily by calling each individual control object by name and setting it to it's desired state. private void ResetFormInformation() { txtName.Clear(); txtEmail.Clear(); txtPhone.Clear(); checkSubscribe.Checked = false; } That's all well and good, but what if we have a dozen check boxes and twice as many text boxes? We could do the same for each of them, but that's going to lead to a lot of code duplication. Or, perhaps we need to reset the form differently now, and instead of using txtName.Clear() we need to use txtName.Text = "DEFAULT"; Having a large number of these objects is going to make it much less convenient to write the code. You might find yourself copy pasting a lot, or when it comes to changing things you may find yourself running a find/replace. These are viable but certainly sub-optimal solutions. So, lets make an assumption here: The method ResetFormInformation is a member of Form1. Lets write it so that our reset will be consistent even if we add new textboxes or check boxes to the form. private void ResetFormInformation() { foreach(var control in this.Controls) { //because ResetFormInformation is a method of Form1 "this" will refer to the object Form1. this.Controls will return an IEnumerable of all the controls added onto the form. we will enumerate through it, returning a variant named control for each control found on the form. var textboxToReset = control as Textbox; //What we are doing here is attempting to cast the control we've enumerated to as a TextBox object. If the cast is successful, then the variant textboxToReset will be the TextBox we've currently enumerated. if the cast is unsuccessful, then textboxToReset will be null, and attempting to reference it will result in a NullReferenceException. We don't want this, so if(textboxToReset != null) { textboxToReset.Clear(); //The control was a textbox, we will clear it. } //Similarly, we can also attempt to do this for checkboxes as well. var checkToReset = control as CheckBox; if(checkToReset != null) { checkToReset.Checked = false; } } }
Noted. Okay so, Form1 --- Main form Form2 --- Buy Menu Form3 --- Help Menu1 Form4 --- Help Menu2 Form5 --- Cheat Menu
what are you using the readonly node for ?
It's a source that influences the other nodes, but shouldn't be influenced by them. Edit, in other words, each node's data influences the data in the nodes around it. But I want this node to do that, without the nodes influencing it back.
I think I fixed my problem. I found the answer here (by Mg): http://stackoverflow.com/questions/6373645/c-sharp-winforms-how-to-set-main-function-stathreadattribute I'll do more of a Google for the answer you suggested but I'll be interested to ready any more comments you might make about it. Thanks 
Thanks for that. I hope your pc will be OK soon (not just for the pseudo code, I just hope your pc will be OK).
Thanks for the criticism friend. I will update the program code with your critique in mind tomorrow, and use the information you've given in future programs. I have a question though, Why is it wrong to use static classes to store data? I do it mostly so I can access and manipulate integers across the program. I've always done that, never knew it was wrong. What exactly do you mean by instances?
Yeah, I have considered that. I appreciate the help. As for now, I am just being careful with my code, making sure when I place this "uneditable" node, I refrain from actually editing it. [This is the most critical part of this project, or I wouldn't be so picky about speed](http://www.reddit.com/r/csharp/comments/2n3e18/how_can_i_make_a_single_instance_of_a_class/cmaazwk)
You are very helpful, thank you :)
18a. Form2.cs, 126-256: These functions can be shortened with use of ?: operator.
&gt; Why is it wrong to use static classes to store data? I do it mostly so I can access and manipulate integers across the program. I've always done that, never knew it was wrong. What exactly do you mean by instances? A lot of information about this here: http://programmers.stackexchange.com/questions/148108/why-is-global-state-so-evil - Make sure to read not only one answer. With instances I mean an instance of the class that is passed around like `new GameData()`.
I don't get your argument about portability. Not every Windows (hell, NONE of Macs nor Linuxes) will have Office installed, so depending on them can yield bad results. Like noobzilla said, SQLite is your way to go. It's like a database stored in file, which you can query like a normal SQL database.
Well, if he's trying to be platform independent what he did is actually better. However using Path.Combine would be even better.
I think the SDK is separate, comes with tutorials and examples which are all typical of a proper SDK.
I'm surprised it's such a bug problem. JetBrains (resharper) ship the CanBeNull/NotNull attributes for usage on parameters/properties/fields and it warns you if you're not null checking when you need to. On top of that they documented the null behaviour for a stack of the core libraries so that those are covered too! I make sure my team always documents nessecary areas so that one always knows wether or not to expect a null.
1x High Five for Angular! I'm working on a community project atm that statics most things and it is horrible. It's like they needed to access some data in a class so lets just public static it. Currently and slowly implementing Dependency Injection in it and already everything is becoming some much more understandable and stable.
Good points, no clue how I haven't thought about that... As for SQLite basically I need to create an empty db with it and include that file with my exe?
While you are at it "Integers" is a terrible name for a class or really anything.
Ah now I understand completely, thanks for the help and the explanation!
I use ForTea, a Resharper extension. However, I also find that T4 templates easily become difficult to read and not the easiest thing to understand (runtime, designtime, execution context - how to reference assemblies or read external files with relative paths ...).
I haven't yet read the linked article, but instead started to read the series from beginning, and I think the author (OP(?)) makes some excellent points -- indeed very relevant for the C#/.NET community.
Your commit messages ~~suck~~ have room for improvement. The point of a commit message is to be able to see what changed, without needing to actually read code. A good commit message either describes why that specific change happened `fixes issue #0H5H17 - keyboard explodes when space is held down for 3 seconds`, or summarizes what changed in a human-readable form `prevents keyboard explosions by preventing the thingamajig from verbing the whatsit`
Sorry, I messed up some of the syntax on that guy (it's why Markdown isnt a compiler =D) The LINQ extensions are generic static methods that take delegates as the parameter, and let you apply some 'functional' logic to your collections. The three methods I used were: - Select: This takes a delegate in the form of `Func&lt;TSource, TResult&gt;`, where `TSource` is inferred from the collection elements, and `TResult` is inferred from the type you return in your delegate. So to use another example: var list = new List&lt;int&gt; { 1, 2, 3, 4, 5}; var projection = list.Select(item =&gt; item + 1).ToList(); // projection is a List&lt;int&gt; with contents { 2, 3, 4, 5, 6 } I'm using lambda syntax to quickly construct a delegate matching the pattern. The select function will pass each element of the collection into this method, and the lambda syntax infers the type and names it `item`. I then return the value of item + 1, so the signature is `Select&lt;int, int&gt;(Func&lt;int, int&gt; selector)`. So to one of your original questions, `customer` was just the name of the element I assigned to this method (and conveniently, forgot to use =D ). It would be the same as: var projection = list.Select(delegate(int item) { return item + 1; }); - Where: This method takes another delegate, but in the form of `Func&lt;TSource, bool&gt;`, and is filters elements from your collection that match your criteria. - GroupBy: This method will group your collection by a specified key, in the form of `Func&lt;TSource, TKey&gt;`. You select the key field (what is to be grouped on) in your delegate, and then you end up with an enumerable of sets grouped by your key. 
Not exactly encompassing. Digital signatures are just one part of cryptography.
Once you move your state into an instanced class then use something like Jil/JSON.NET or Protobuf to write it out in one shot and read it back in one shot. Protobuf takes slightly more effort in decorating your class with attributes (it may be easier nowadays) but results in a smaller binary file. Jil or JSON.NET will produce a readable JSON file (which may be better to allow users to modify it). If you absolutely prefer not to use external libraries, then there are some slow JSON/XML/Binary serializers available in .NET Framework.
A follow-up question to this: Is there a way to quantify the gains plugins like ReSharper bring to your workflow? How do you guys justify these asking for the company to make these purchases? I ask because I've been developing a Visual Studio extension and am wondering how businesses make these kinds of purchasing decisions.
Take a rough estimate of how many minutes a day Resharper will save you with its features/tools. Take the number of working days (minus vacation) that you have a year, multiply against your minutes saved, multiply against your hourly wage. For example: 240 * 5 minutes * $25/hour = $500 of improved productivity. At $250 a commercial license, that means Resharper has paid for itself in 6 months just in increased productivity, not to mention improved code maintainability if you end up writing better code with Resharper than you would have before. You can also flip the formula: License / Days in a year / wage = number of minutes of saving per day to break even. So for example: $250 license / 240 days / $25 per hour = 2.5 minutes per day Naturally substitute your own estimated time savings and wage. I don't know what company you work for, but if it's a startup JetBrains has a 50% discount for them: https://www.jetbrains.com/estore/startup/ Beyond that, what can I say? A) You should be able to appeal to _any_ tool that makes your life as a developer more productive and satisfying. Any good employer should provide the best tools for their employees. B) If you can't appeal on improved productivity, then go with the above cost calculations. At $250 Resharper is a steal compared to your salary, payroll taxes, employment insurance, health insurance (or whatever additional costs associated there are to your salary), your computer equipment, other software licenses, and day-to-day costs for supporting you as an employee. That said, I feel you. I've had similar issues procuring (cheaper) productivity tools for me and my coworkers. Good luck!
I think it depends on the company unfortunately. Some are ok with purchasing better tools so their developers are more productive and able to create higher quality code faster. Some can't look beyond the bottom line of the annual budget and justify a fraction of a percent cost increase on tooling that a company doesn't **need**. But I can't really say for sure; I haven't had to manage a budget and thus far have only been in the position of lobbying for the best tools for my coworkers so I'm a bit biased in terms of how I perceive the issue of taking on new/additional costs.
If your company quantifies the type and number of errors received in production, it might be possible to semi-quantify the gains of ReSharper. I know out of the box, ReSharper barks at you for not catching possible Null Exception Values. It would be easy to say that if ReSharper was a standard, all those errors would either 1. Go Away, or be blatantly ignored by a developer choosing to ignore those lovely squiggly lines. For a better answer though: try this stack-overflow [response] (http://stackoverflow.com/a/2340742). 
Why not just replace everything with mocks using something like Rhino? Generic tests like this don't actually capture scenario failures and/or are made redundant by actual scenario testing. If you are looking at replacing this code anyway why not start to migrate your code to reasonable testing and deprecate the legacy code?
Thanks. I have never used Rhino Mocks before, but it looks like something worth exploring. I'm not sure why you consider a generic tester of this nature as not beneficial. There are times, you simply want to test whether or not certain event fire after a particular action occurs. I planned on expanding the tester to allow the test to indicate which events it cares about, and keep track of the order of the event firing. The legacy code I referred to is not used for our unit tests. It is part of a set of internal controls that used to be used by our QE team in their testbeds.
For VS 2013 I find resharpet a bit redundant, just my $0.05. For older versions of VS it was required but now the only thing I miss is go to implementation. Granted there is built in functionality for this in VS but is significantly slower.
http://stackoverflow.com/questions/24399510/executable-file-including-a-database http://www.pluralsight.com/courses/object-oriented-programming-fundamentals-csharp ^ I would start by learning about OOP. It will fundamentally change how you write the program. Then I would learn a bit about sql lite or noSql. 
Buy your own license. It's worth the money.
I use resharper at my new job and am considering asking if its ok to remove it. It just seems to double up on existing functionality, but change things JUST enough that the keystrokes I'm used to using don't work as expected. Plus it opens up suggestion popups that get in the way of code I'm trying to read and causes a delay for the built-in code completion that I really wanted to use. Honestly don't see what all the fuss is about.
Immensely helpful. Cheers!
I don't think you'll get by just with anonymous methods since they still have fixed type parameters, they're just inferred. Do you really *need* to subscribe to all events dynamically? Seems to me that, at least for unit tests, such a helper would be useless without somehow defining which events you care about. And if you have to manually set up the events anyway in the test method, you might as well do something like int event1count = 0; foo.Event1 += (s, e) =&gt; event1count++; and save yourself the trouble writing a helper class. However, if you really have to do this you should be able to build the dynamic methods using Expressions, which is probably a bit easier and cleaner than CSharpCodeProvider. You also *might* be able to use a method with either a generic or `dynamic` second parameters encapsulated in another class storing the key instead of an anonymous method, but I do not know if you can get `AddEventHandler` to play nice with those. 
Use it more, I can't handle being without it, I don't want to have to remember which namespace my code is in, I don't want to have to go through all of my code to refactor when I can just let resharper take care of that. 
This. Every time I've tried ReSharper, I've uninstalled it after a few days as it makes VS go sloooow. To me, the benefits don't outweigh the pain of how slow and sluggish the whole environment becomes.
Agreed. When a dev insists on ReSharper, I begin to question their ability to maintain a cohesive understanding of our code base. To me, it makes developers lazy and lose sight of the overall architecture of the platform.
Why is it not allowed? And it's not required to write code, so they're not really required to purchase it.
Templates are also much nicer than snippets.
It also does a lot for readability of code in many ways and does consistent formatting for complex/long code segments automatically.
It's fine. You just have to promise you're not being reimbursed. You can still write it off your taxes, I believe (in the US at least).
I read it rather carefully before buying - It is allowable in see section 4 (esp 4.c) of [personal license](https://www.jetbrains.com/resharper/buy/personal_license.html)
Agreed 
Alright! I'm gonna go take a look at what this 'Dependency Injection' thing is and how I can use it. I honestly had no idea that global states were so awful, never seemed to do anything bad for me... Thank you so much for the help!
Okay! Still learning how to get a good grip on this whole Github thing. Thanks for the insight.
I tried Mono once, I had no idea what I was doing. Honestly, I'm completely content with making applications Windows only. Maybe someday I'll make a move to Java for the cross-platform capabilities. Actually, C# and Java code is so similar I've even done some things with Java, but that was just some Minecraft related stuff. I was writing it in Java, but I was writing Java like I was writing C# which is probably wrong.
Didn't know I could do that... :O
Grrr. I'll add it to the list of bugs to fix.
Got it; More meaningful names.
Yeah. I didn't think anonymous methods would work either due to it inferring the parameters but it was the only way to express what I was trying to achieve. This helper class would be in our base unit test framework and could be used by any of the test projects. As such, it would need the ability to subscribe to any/all events. We currently have some test methods setup with code like you've listed. I just wanted to encapsulate all this functionality into a separate class to simplify and standardize the test code. For example, a very very basic test on a button would look like this: [TestMethod] public void ButtonEventsTest() { using (FormWithButton form = new FormWithButton()) using (EventTester tester = new EventTester(form.Button)) { UnitTestUtilities.Click(form.Button, MouseButtons.Left); Assert.AreEqual(1, tester.GetEventFiringCount("Click"), "Incorrect number of Click event firings"); } } I'll see what Expressions has available for me. Thanks. 
No need to move, MS is open sourcing .NET and working together with the mono team for x-platform support :)
To clarify, I'm talking about [System.Linq.Expressions](http://msdn.microsoft.com/en-us/library/system.linq.expressions%28v=vs.110%29.aspx). Basic idea would be to use reflection to get the required parameters from the `EventInfo` and build analog `ParameterExpression`s, create a `LambdaExpression` with them and then compile it into a delegate.
I'm trying out the C++ ReSharper right now and I have mostly the same complaints, plus it duplicates the lovely new refactoring stuff in VS2015 for C++. It's also overly aggressive sometimes. "HEY MARK THIS CONVERSION FUNCTION AS EXPLICIT!" Um, no Resharper, that's just a normal constructor... The Intellisense seems to be a little more responsive than the one out of the box for C++ but that's about it.
Alright so at the moment I'm beginning work on applying what you've said. I've created a new item, a class called "GameData.cs". In it I've moved all the integers and booleans, and removed the globals &amp; static from the MainForm(I also renamed the forms :D) So I'm at the GatherVespeneBtn_Click now, this is what I have so far: GameData SetGameData = new GameData(); SetGameData.VespeneAmount += 1; Is this proper and is there a way to pass 'SetGameData' around, like move it over into GatherMineralsBtn_Click or will I have to create a new instance each time? Sorry if this seems like a dumb question, my knowledge on things like this is rather limited. 
Okay, so I just moved the code which creates the SetGameData object to the program's main method, and now I can access it in the other buttons. I'm still not sure if this is good or not.
There is a nuget packge called dynamitey that makes this easy. The method you want is `Dynamic.CoerceToDelegate` private void SubscribeToAllEvents(object objWithEvents) { foreach (var eventInfo in objWithEvents.GetType().GetEvents()) { var genericMethod = new GenericMethod(paramaters =&gt; EventHandler(eventInfo, paramaters)); var eventDelegate = Dynamic.CoerceToDelegate(genericMethod, eventInfo.EventHandlerType); eventInfo.AddEventHandler(objWithEvents, eventDelegate); } } public delegate void GenericMethod(params object[] paramaters); public void EventHandler(EventInfo eventInfo, params object[] args) { //Do Stuff with event }
Unfortunately, I think it might be a bit more nuanced than that. Do you intend to be running any virtual machines? Decently sized databases? How much power does the application you're developing need to run and debug? Are you developing 3D applications? Are you going to be running any mobile emulators? That all said, the _minimum published_ requirements for Visual Studio 2013 are [here (assuming 2013 Professional/Community)](http://www.visualstudio.com/products/visual-studio-professional-with-msdn-vs#Fragment_SystemRequirements), and Resharper is [here](https://www.jetbrains.com/resharper/download/system_requirements.html). Naturally, I'd take those with a grain of salt. Since you're asking for "reasonable" (which in itself is pretty subjective) I'd say _maybe_ a quad-core Intel i5 with 4GB might be "minimum". Can easily push 8GB to be safe (especially since RAM is, relatively speaking, cheap). But again, hard to say since you haven't provided any idea of _what_ you plan on developing or what your perception of "reasonable" is. 
Maybe give /r/learnprogramming or /r/gamedev a shot.
Thanks for the interesting read. A few months ago I could have sworn that I read an article where certain list operations out-performed an array. Perhaps I'm mis-remembering and it was a linked list. I believe that article was posted to r/csharp. Anyone else remember? Regardless, this was still a good read.
Thank you! I got it working using Expressions.
You mean that the native `CTRL+.` functionality is not enough? My point is that VS has loads of features that casual ReSharper users don't know about. `CTRL+,` navigation for example.
I've been thinking of buying the license privately, quite the hefty price tag though. Love it at work, feel crippled without it 
&gt; I tried Mono once There's an STD joke somewhere in there
I recommend a SSD drive, it's affordable these days. Put your visual and your code on it, compilation will be a breeze !
&gt; (Instead of dynamic, Reflection would also be possible, but then instead of a one-liner it would have been at least 30+ lines of reflection code, which is never easy to read). dynamic is definitely better, as it's simply a fancy, optimized version of reflection.
..and performs better, especially for repeated calls.
Nice article, but worth keeping in mind that such considerations are irrelevant for %99+ of the common development scenarios. Usually a single web service or database call is likely to "cost" more than the entire set of gains achievable through unrolling across the entire app. Not to mention the readability/clarity and maintenance taxes involved. So in short - it's good to have these techniques in your arsenal, but use judgement regarding how &amp; when to apply them! (Edit: The comment is for the benefit of less experienced readers out there, not meant to be critical of op's great blog post)
Unless the array has been pre-allocated or there is enough space for the insertion, then the insertion cost is less than the linked list.
Some thoughts: What is "large amount of data"? Have you really measured the size of data and concluded it is an issue? Could whatever you are trying todo be achieved with simple ftp/sftp transfer? Dump the data you want to transfer to a .zip file and ftp/sftp it over. Even old technology like BITS Upload might work, depending on your setup/environment http://msdn.microsoft.com/en-us/library/aa362828%28v=vs.85%29.aspx ? How about BackgroundUpload - https://code.msdn.microsoft.com/windowsapps/Background-Transfer-Sample-d7833f61#content ? Web Api doesn't sound like a good idea, if you need to xfer huge amounts of "raw data". If you really need to, and you need todo it in big piles, I would look into ways of enabling chunked transfer of the files with capability to resume the uploads it something happens. If you are worried of bandwith use, you should also look at ways of limiting the bandwith in IIS on the Web Api side. 
Sorry, I should have been clearer. I'm not talking binary file information here. I would classify a string containing a list of all the applications installed on a PC as a "large amount" of data.
I think you have a better chance to be helped at stackoverflow.
"Some values may have been changed since it was last read." It sounds like your database/entities (models) are out of sync. All table columns must match properties in your EF entities, unless they have the attribute [NotMapped]
No its not enough. Also I can do things like define our teams coding standards and then have resharper automatically apply it across a file in one go.
I just started, with C# 2.0 and a BinaryReader. (Halo 2 mods back in the day)
If you want real grown up answers, talk like a fucking adult.
Compressing is a certainly a good idea if the files are huge. The other dimension to consider is the number of machines that will be reporting their application lists. This will help you make the best decision regarding the "server service." Do your client Windows Service and server service both have access to some network folders? Off the cuff, I'd lean toward creating an application list *file* on each client, then drop it in a *hot folder* that your server service watches. The server service processes files in new threads as these files arrive. I've always liked this approach because: * It's clean and simple. * It's easy to recover if something goes wrong. * It leans more on native OS functionality, and less on code and messaging libraries. This means it's easier to configure. * If you really need to, you can just manually create a file, or bring it back from an archive, to reprocess it. (I know that this is for auditing, but can be handy in a pinch.) As far as the contents of the files go, you could serialize your app lists as XML or JSON, but a simpler format like CSV or SDF could work, too. These would reduce the files' size since you wouldn't need field labels and extra punctuation. A final note about submitting changes ("delta"): it's a good idea if your application lists are really large, and you're concerned with the load on your server service, but it will make services on both ends much more complex. EDIT: typos; note about "delta" info
best way, in my opinion, is come up with a project and start working on it. use google to help you solve your problems. 
I lurn bye programing cumpoters
Buy a book or borrow one from the library. Pick a project and start implementing. Honestly, I find learning languages secondary to understanding programming concepts.
If you roll your own poco and pass that around via Web api, the transfer will be stringifies/serialized, so it'll take advantage of gzip compression. Other options are to dump the messages/info into a message queue to be consumed by the "writer to sql" app whenever it can. I've used ActiveMQ to great effect before.
I would have suggested that you use JSON for this but if you are concerned about the size of the data you are sending, consider using https://code.google.com/p/protobuf-net/ or http://msgpack.org/ I have used protobuf in the past to decrease the size of data that we were putting in a cookie. Without protobuf, we were exceeding cookie limits but not with it. The only thing you can max out in this case the post size of the document. That would be what you should be concerned about. That is easy to change. If you are changing everything to a string before submitting, you're doing it wrong. Your serializer and deserializer should be able to handle your data type. Please don't send datasets across the wire. Everytime you do this, God kills a kitten. Here's a post on why not. http://www.dotnetconsult.co.uk/weblog2/2009/01/23/WCFMessagesAndDataSetsHellipOhMy.aspx
It seems the issue was in the stored procedure used. Thanks!
Because licensing doesn't work like that when you work for an MSP. I can't license hundreds of seperate companies and networks with one central SCCM, nor can I put SCCM on every single company we support. It's not feasible, either logistically or financially.
I've been unimpressed by ReSharper for this exact reason. It seems like it adds nothing for me. And the things it does add either don't work, or work worse than the similar thing that's built into VS. For instance, ReSharper's CTRL+, is worthless for me because it only seems to search for references I have already visited, and it's slower than the VS one. Also, Refactor -&gt; Rename is pretty much always greyed out. What's the deal?
This. MainClass seems pointless. Also, no need for two loops, add Console.WriteLine to the creator loop.
I thought that about the loops but its possible they did 2 for demonstration purposes.
I just also wanted to point out that you could query this information using SNMP. This allows the centralized server to query the machines at the cost of requiring reachability via SNMP to all the individual machines. 
Also, SCCM requires Active Directory as far as I know and the setup is painful. Not worth it. There's better solutions. 
Could you provide more information about what you're trying to do? You'll want to save their selections and write logic based on their choices. For example, you might have a checkbox that when checked sets the bool "IsMale" to true and if not it is set to false. Then you would write some logic for your program based on IsMale. I think that's what you're asking.
Maybe the [Property Grid](http://wpftoolkit.codeplex.com/wikipage?title=PropertyGrid&amp;referringTitle=Home) from the Extended WPF Toolkit is sufficient for you. Or you could try to port the [DataGrid](https://silverlight.codeplex.com/) from Silverlight to WPF. Or you could write your own control. Maybe a grid with dynamically added controls from codebehind via reflection?
Actually I feel really stupid now. I simply want to call another window that will contain the settings controls. 
I think best thing to do here is to keep it simple. Don't use oddball stuff ,because these kind of projects go out of hand real fast.
Mongo isn't a like for like replacement. It has been fine for our needs though. You don't need EF for Mongo - it makes no sense. Without sounding rude, I think you need to do some more research on what Mongo is and how it differs from SQL Server. 
&gt; On the Windows Service side I find I am changing everything to a string before submitting But HTTP is all strings. You're really not going to get away from that unless you change your protocol. Even then you'll have to have a conversion plan and process. &gt; I find I am having to change arrays to strings to they can be submitted through to the Web API And on the first part. Use Newtonsoft JSON.Net. MS includes it by default in the latest WebApi and MVC templates, and it's very easy to use: using Newtonsoft.Json; var jsonString = JsonConvert.SerializeObject( myObject ); So your classes can be defined however you want (including arrays) and then you can let Newtonsoft serialize them into strings. On the receiving end you can deserialize them back into objects as long as you know what the type is. var data = JsonConvert.DeserializeObject&lt;MyClass&gt;(input); And if you don't know the type then you can use dynamic objects (although there is a greater performance hit. It's not an issue if it isn't called often though) dynamic data = JObject.Parse(input); &gt; I am having to make a lot of additions and changes to the Web API and the Service as there are so many fields that are being submitted In software change is the only thing that is consistent. Ever. If you're reading from some standard MS API into standard classes then you can just serialize that and send it along. Or make a request model that only has the fields in it that you need.
FTP has issues across firewalls and adds additional complexity. Not worth the hassle. 
Use two-way data binding between your GUI and a viewmodel that implements INotifyPropertyChanged and exposes settings via public properties. Couple years ago I've made an app ([github link](https://github.com/AmadeusW/Aurora/)) whose majority of the GUI is the settings. I did it without knowing of WPF and MVVM principles, and I never updated the code, but you may want to check out the "Preset" class. You'll be better off reading [msdn articles](http://msdn.microsoft.com/en-us/library/gg405484%28v=pandp.40%29.aspx), though! Good luck 
I have MongoDB in place to scratch a particular itch in my application (a high-ish traffic persistent K/large V store to take a lot of I/O off of the DB), but it decidedly lives alongside a traditional DB, not in place of it. It is really easy to get up and running and its schema-free nature can be a really big selling point. 100% agree that the OP asking "does a K/V store differ from an ACID DB" is a horrible design smell.
Have you no shame, Microsoft PR department? Who in their right mind would run TFS in their free time?
For an add (insert at the end of the list), sure. I'm not so sure you would be right about an arbitrary insert though, since you still have to shift the tail elements.
Do you recall *which* operations? For `List&lt;T&gt;` that seems rather unlikely, since `List&lt;T&gt;` is basically a wrapper around an array.
Oops! Something terrible happened... and it's your fault
For real. That thing is so crappy at source control, it's embarrassing. Any SCM that makes developers ask a 'build master' if it's OK if they make a branch, should be dragged out back and put out of its misery. 
oh, sorry buddy, it only works in US.
Generally speaking, you usually pop up a modal window, where you have a bunch of checkboxes/radio buttons, etc. As to what happens when those checkboxes, etc, are changed depends on how you set things up. The easiest is to use two way binding and pass in something that keeps track of your properties. You can do it the super-old school way by handling click events, etc, but I don't recommend it. Google around for MVVM basics, and how to use modal windows in WPF. It's really easy once you wrap your brain around it, but can be confusing at first.
Why don't you recommend event handlers? 
do you know c# or are you starting from scratch? either way i suggest you start here http://rbwhitaker.wikidot.com/start 
Good idea. I think I also need at least 16 to 32 gb of ram. I always seem to max my resources out. 
FYI formatting can be accomplished by putting four blank spaces in front of a line, which is interpreted as code by Markdown, like so: public static void tacticaldice() { Console.WriteLine("Do you want to roll the tactical dice....Y or N"); char respone = char.Parse(Console.ReadLine()); for (int i = 0; i &lt; players.Length; i++) { //figure out a way to store the random dice that has been generated and use it with the switch/case statement if (respone == 'Y' || respone == 'y') { players[i].pos = roll + players[i].pos; } else if (respone == 'N' || respone == 'n') { break; } Console.WriteLine(players[i].name + " has rolled a " + roll); Console.WriteLine(players[i].name + " has moved to square " + players[i].pos); break; } } I think I get what you're trying to do, but your logic is flawed in your code. Start with a simple worded pseudo-code solution: Given: Players Given: Single Die For each player's turn Ask the player if they want to roll the dice If they select YES, then Roll the dice Store the value Calculate the player's movement Output the results of the player's turn End turn &amp; move to the next player If they select NO, then Do nothing End turn &amp; move to the next player Now, looking at this worded solution should give you a better idea of how your logic needs to flow: &gt; Given: Some Players &gt; Given: Single Die So you know you have an array of players and an integer value that can be any number [1:6], those are your variables &gt; For each player's turn This right here defines the group that you are looping through, your array of players. &gt; Ask the player if they want to roll the dice This happens at the start of EVERY players turn, so you know this happens every time the loop goes around &gt; If they select YES / If they select NO This is where you break your control path and decide what is going on. Are they rolling or not? If they chose to roll, you have to calculate a random number 1-6 (inclusive), store that in integer variable, calculate the movement, and then output the messages. That's one whole block that has to be done *every time a player rolls the die.* If the player chooses not to roll, then nothing is done for that player. This happens *every time a player chooses NOT to roll.* &gt; End turn &amp; move to the next player This signals the end of that player's turn, and ending a player's turn means that cycle of the loop is over, so this is the end-of-cycle condition on the loop, aka the last thing done. If you compare the code that you listed with the walk through I listed here in psedo-code, you should be able to figure out where your problems are.
Thanks for the quick response was actually trying to do it myself, first time doing anything programming related so anyways.. I did what you told me to do and this is how it went.. I know I did something wrong so please bare with me :P First when running I get this error: http://i.imgur.com/L07JCyk.png I added this code for checking, I'm sure its wrong still figuring it out. public static bool DoesRegKeyExist(string valueName) { if (Registry.ClassesRoot.GetValue(valueName) == null) { return false; } else { return true; } } private void button3_Click(object sender, EventArgs e) { if (DoesRegKeyExist("ls")) { Registry.ClassesRoot.CreateSubKey("ls"); } else { MessageBox.Show("Registry key not found."); } RegistryKey lsKey = Registry.ClassesRoot.OpenSubKey("ls", true); string keyName = "URL Protocol"; string keyValue = ""; lsKey.SetValue(keyName, keyValue, RegistryValueKind.String); lsKey.Close(); MessageBox.Show("Registry Key deleted"); }
Perhaps you can consider trying /r/learnprogramming, /r/dotnet, or maybe even /r/gamedev depending on what you're doing.
See if any of the tips here will help you: http://stackoverflow.com/questions/562350/requested-registry-access-is-not-allowed
Keep in mind that adding that info to the manifest may get you flagged by AV. To address your last paragraph, yes you need to run VS as admin to debug anything that requires your app to run as admin. Once the parent process is admin, child processes will follow, in this case the debug build of your application.
Thank you!
What 
http://m.quickmeme.com/img/4f/4f2d442380840b7bb0fe4bd0bb491d846ef0cac9e786baa7ef543959789cf2b9.jpg
An even better example: Cancellation. Imagine implementing a button that starts a 500MB download from a URL. Now implement a Cancel button for that activity. The "Start Download" button should be disabled while the download is running. The "Cancel" button should be enabled while any cancellable activity is running. ...and then *also* put the "Start Download" feature in a File menu and a Right-Click menu, both of which should be disabled while the download is running. With event handlers, it quickly becomes a huge nasty web of interconnected state management that probably isn't even thread safe. With MVVM, you bind each "Start Download" control's Command property to the same ICommand, bind the Cancel button to an ICommand that triggers a Cancellation Token Source on the View Model, and you're done.
Noticed a different and considerably more concise and flexible way of writing this: public static bool RegistryKeyExists(RegistryKey key, string valueName) { return (key.GetValue(valueName) != null); } This can check all keys now, and isn't specific to root. if( RegistryKeyExists(Registry.CurrentUser, whatever) ) ...
Ah true, I completely forgot insertions might not be at the end.. My bad :)
Another addition you can make is to use ReadKey instead of ReadLine if you're looking for a Y or an N. You'll also need it to loop in case the user presses some other key. char[] answers = new char[]{'y', 'n'}; char response = 'a'; while (!answers.Contains(response)) { response = Console.ReadKey().ToLower(); }
http://www.apress.com/9781430210740 Looks like there's a "Source Code/Downloads" tab, and that leads to a zip file that's full of source code organized by chapter.
Yeah we are. I got through this problem thanks to the reply but encountered another one with tactical dice roll 3
I think you made a good choice going with WPF. It is pretty flexible, probably the next thing you're going to want to look into will be WPF binding. That way most of the UI glue will be done automatically. 
Have you looked into OpenXML? http://www.codeproject.com/Articles/36694/Creation-of-a-Word-document-using-the-Open-XM
Try using [OpenXML](http://msdn.microsoft.com/en-us/library/office/bb448854%28v=office.15%29.aspx). 
You could try /r/learnprogramming, /r/gamedev (maybe), or /r/dotnet; these might be more appropriate than the **C# language** subreddit.
Others have mentioned OpenXML, which is probably the best way to go. Another option I've done before is output HTML (which I was very familiar with), and then convert it to Word format at the very end. You might also be able to generate RTF easily, which can then convert to many formats.
Downvote explanation: The fact that MongoDb does not support joins means that at the very least your mappings would need to change. And how would navigation properties be handled? By assuming that Mongo could just be dropped in means you are implicitly expecting EF to either be **MUCH** more sophisticated in how it evaluates IQueryables or have terrible performance (naively, one might imagine it would partition the where clauses by the collections whose data they refer to, grab the data from the relevant collections, perform joins in-memory, then filter by the where clauses that use data from multiple collections... but this scheme would become brain-breakingly complex when subqueries come into play). Further, sometimes a goal can be counterproductive. Making EF allow transparently swapping relational databases and document stores is a bad goal, because it makes EF much more complicated for essentially no benefit: the task at hand dictates whether you will need one or the other clearly enough that you should not need to switch the same code from one to the other.
Do you have a budget to pay for a library? If so, then Aspose is a pretty solid enterprise-grade library for creating and updating Office documents. I tried using OpenXML myself once upon a time and it was not a good experience for me, but YMMV.
The interop requires you to have Word installed and when called creates an instance in memory which often fails, its an absolute nightmare to work with non-interactive office interop. The formats for 2007+ are just zip files containing XML files describing the documents, they are insanely easy to work with directly rather then using interop.
I concede the point about needing Office (or at least Word in this case) installed to use the Interops. That's because they're really nothing more than wrappers for the COM objects. You can find any number of applicable alternatives online (OpenOffice I believe provides a functional set). Honestly though, I've never encountered a problem using them like you describe. Strange, but I've seen stranger. Oh well, that gives me something to read about this morning :)
Monogo supports joins. If you don't want to send JavaScript to the server you can perform the join client side. Though in theory joins aren't necessary because you can just store object graphs directly.
The .net drivers for mongodb already support Linq and IQueryable, and you need database specific logic even for each database anyways.
If it's slow, it's probably the real-time solution analyzer (the red/green dot in the bottom right corner). It's super useful if your computer can handle it but if not, turn it off.
I feel that if you're going to spend a few hundred dollars on a tool, you should learn to use the tool properly. There should be no casual ReSharper users. I use 2013 at home with no ReSharper and the navigation is painful, especially if you code using DI. I estimate ReSharper saves me close to an hour a day navigating code that heavily uses constructor injection. Resharper loses some of it's appeal if you don't use DI but if that's the case, you should definitely learn DI.
Do you write code using DI? I estimate ReSharper saves me an hour a day just navigating code that is written using constructor injection. Life without it harsh and inefficient. If you don't write using DI, then you should learn to. It means writing code that's easier to maintain, easier to test and easier to update. Resharper really shines when writing code that uses DI and that's where you will see your production gains. tl;dr; If you don't already do it, learn DI. ReSharper really facilitates efficient DI coding and efficient TDD coding. The end result is cleaner, more maintainable, more testable code. It pays for itself very quickly.
That is surprising; there are several places in the docs that say or strongly imply that Mongo does not support joins.
The question isn't whether IQueryable is supported, but whether the sorts of IQueryables you get with code written with the assumption of a relational model can be evaluated in a performant way with a manageable level of complexity. I would be blown away if non-trivial queries Just Worked after switching from a relational database to a document store.
Quickly hacked solution using JSON.NET: void Main() { var strings = new[] { "Car A machine", "Car very useful", "Cat An animal", "Ice YUMMY!", "Pizza Awesome" }; MakeTrie(strings).ToString().Dump(); } public JObject MakeTrie(string[] strings) { var obj = new JObject(); foreach (var str in strings) ExtendTrie(obj, str.Split(' ')[0], str); return obj; } public void ExtendTrie(JObject trie, string key, string full) { if (key == string.Empty) { if (trie.Property("def") == null) trie["def"] = new JArray(); ((JArray)trie["def"]).Add(full); } else { var n = key.Substring(0, 1).ToUpper(); if (trie.Property(n) == null) trie[n] = new JObject(); ExtendTrie((JObject)trie[n], key.Substring(1), full); } } Should give you an idea. Creates a trie build up on the first word of each string. Output of the example is: { "C": { "A": { "R": { "def": [ "Car A machine", "Car very useful" ] }, "T": { "def": [ "Cat An animal" ] } } }, "I": { "C": { "E": { "def": [ "Ice YUMMY!" ] } } }, "P": { "I": { "Z": { "Z": { "A": { "def": [ "Pizza Awesome" ] } } } } } }
Wow nice, I actually just came back to delete the post from lack of responses and I Just got it working by making a recursive function that adds each node one by one directly to the main JSON object (instead of making a separate JObject and trying to add it into the main object. ) (Basically what I was doing in the wordJSONBuilder, but adding to main object.) (I can also delete the whole IF if else mess in the main question.) Thank you. :) ( Now that there is an answer here I won't delete. ) edit: Do you know if there is a minification call I can make on the JSON.ToString() function ? (I'm now unable to write the JSON to file using JObject.ToString() on a streamwriter, because of memory.)
&gt; Do you know if there is a minification call I can make on the JSON.ToString() function ? (I'm now unable to write the JSON to file using JObject.ToString() on a streamwriter, because of memory.) You mean... `ToString(Formatting.None)`? Did you even take a look at the documentation?
I didn't look for the formatting question (the question hit my while I was writing the first part). I have been swimming in the documentation for a few days ref the main question. Again thanks :) 
If you are comfortable at all with xml, you will be pretty happy with openxml
In the properties of your element in the designer, is generate member variable set to true? (visual studio)
It's rather nuanced. Technically speaking, MongoDB doesn't support joins on the server. But it does (kinda, sorta, please don't use it) support JavaScript on the server which can be used to perform the join. But that isn't the same as no supporting joins. MongoDB offers DBRefs, which drivers use client-side to perform joins.
If you care about performance you shouldn't be using EF anyways. The queries it comes up with for SQL Server vary from naïve to downright bizarre. If EF supported anything beyond basic SQL I would argue differently. But it isn't like you are going to need to deal with a CTE or window function. EF just offers basic SELECT, WHERE, ORDER BY, and JOIN clauses. 
Thanks!
Just use add a reference to Microsoft.ReportViewer.WebForms or WinForms. Then simply add an RDLC file from the list of reporting file options to your project. Within the namespace Microsoft.Reporting.WebForms, is a class called "LocalReport". You can use that class to generate PDF, DOC, DOCX, XLS, XLS, etc... Best of all, its all built in and free.
I think you'd be better off asking this in the support forum for the SDK or somewhere else that is dedicated to it. Good luck finding an expert on that here :)
with what error?
Yes lol...
https://www.dropbox.com/s/7p01smhw6vxjvh9/Screenshot%202014-11-26%2016.14.18.png?dl=0 System.Runtime.Remoting.RemotingException [2852] Designer process terminated unexpectedly!
I think you should post this to http://codereview.stackexchange.com/ instead. If you currently have errors, what are they?
Switch statements should clean up those Ifs.
Unfortunately my teacher did not teach me switch statements yet. I have a brief understanding of them but I am not sure how to properly use them.
this obscure flow usually solves all my VS designer problems on different devices: 1. exit VS 2. create new user in windows and make him admin 3. switch to new user 4. open your project (at this point, designer should work fine) 5. logout from new user 6. switch back to your account and delete new user 7. designer should be OK now under your account Hope this helps, developing without designer is pain in the ass.
I downloaded the DocX source and modified some small things to suit my needs. I like it because it's lightweight and quite capable. If it had the ability to generate a pdf it would be the tits. Edit: the code is clean and makes sense so modifying it was no big deal. 
yes it is, but this designer problem is probably source of your intellisense problem
Yeah thats what I figured after I put 2+2 together
True, but I suspect this is counter to the intent of the homework assignment. (likely to teach input, numeric parsing, comparisons, and combining strings)
if you really want to do something more manual, just do this: if (int.TryParse(hrs.Text, out hours) &amp;&amp; hours &lt;= 24) { label1.Text = hours == 12 ? (12).ToString() : ((hours % 12)).ToString(); } else label1.Text = "Incorrect format";
Are you doing database work? Hosted locally? How resource intensive is your typical development project (assuming you want to run/debug from inside VS etc). We need a bit more info about what you're planning to do really. If you're thinking of a laptop instead of a desktop, the physical screen size and resolution are likely to be important too.
I'm supposed to have a user input a time and have it converted
I think you need to .Add an element to the outer list first. So do: board.Add(new List &lt;string&gt;()); board[0].Add("test"); Edit: not sure lists of lists is a good way to go, is there another collection type that might fit the data better?
I'm not really sure if there is a better way.
If I may ask: What benefit do you hope to gain from using nested lists here, opposed to 2D arrays?
For starters, rename those text boxes and buttons, then the functions that go with them! (Hint: Use the Refactor menu, if you have it). Next up, 24 hour time does not have a 24:00:00 in it. Midnight is 0:00, which follows 23:59:59. And now some code feedback: Why are you passing hours into the function and never using it? Make your H, M, S variables parameters and cut out those 3 lines. That whole if structure in your button click function? If your convert function works properly, it should simply be: if (/* input has a funk */) /* Tell the user they have a funk */ else /* Introduce the time */ + Convert(hours, minutes, seconds); The final if statement in your Convert function needs a similar treatment. You need to check the MSDN on [Standard Numeric Format Strings](http://msdn.microsoft.com/en-us/library/dwhawy9k%28v=vs.110%29.aspx). Since seconds are being rounded and not returned, round them first. The if block you have doing that now is overkill. This is sufficient: if (S &gt;= 30) M++; // Or M = M + 1 The if blocks for deciding AM/PM can be refactored into 2 blocks instead of 4 as well. You'll want to fix the issues with midnight first, then hopefully this will be clear.
/u/sernick_'s suggestion does exactly that, he is just using the built in functionality of the [System.DateTime structure](http://msdn.microsoft.com/en-us/library/system.datetime%28v=vs.110%29.aspx) to do the conversion. If your teacher would rather you convert it manually via your own code, then the easiest way is to validate the input and (assuming valid input numbers are H:0-23, M:0-59, S:0-59) you could do this (simplified code for readability): // This eliminates the seconds from the equation because we aren't displaying them, we just round if necessary if (Seconds &gt;= 30) Minutes++; // Now we check to make sure that hours minutes haven't gone over 59 from rounding seconds // If the minutes are over 59 (largest minute we display), we need to increase the hours by one and // set the minutes to the appropriate value. % gives us the remainder, so 60%60 = 0, 65%60=5, etc. if (Minutes &gt;= 60) { Minutes = Minutes % 60; Hours++; } // Now we check to make sure we haven't rounded ourselves over the date line into tomorrow // If hours &gt;= 24, then we have turned the day, and need to reset hours. Again, I use the % operator Hours = Hours % 24; // Now set your AMPM string: the div operator gives exact numbers, no decimal, no rounding // If hours div 12 is 0, then it is 0-11 which is AM hours, but if hours div 12 is 1, then it's 12-23 which is PM hours // Hours cannot be more than 23 because of the Hours check above if (Hours / 12 == 0) AMPM = "AM"; else AMPM = "PM"; // Now we check the hours for 00 which is midnight. Midnight is displayed in standard time as 12 if (Hours == 0) Hours = 12; // Finally we set the label text label1.Text = String.Format("The traditional time is {0}:{1} {2}", Hours, Minutes, AMPM); And that's all there is to it (unless my beer brain isn't coding correctly!) 
What you're talking about is often called "smoke testing" - in other words, try it and see if it works or if smoke comes out. :) You need to learn to do some of that yourself. What you want to do is test any *specific* cases you've coded for (for example, I see you have handled the case of midnight specifically, so you should test to make sure that works correctly), and then try some arbitrary inputs (random times, in your case), and then try some invalid data and make sure you've accounted for that too. I see for example that you're using Double.Parse(), which has three different exceptions it can throw, and you haven't handled any of them or checked your inputs to make sure the exception can't occur. (Don't know if your teacher has explained how to handle exceptions or sanitize your inputs yet.) But really, the best thing you can do as a programmer, once you've written something, is *try it*. If it works for you, then in a professional environment you'd pass it on to a QA department for further testing.
Oh, one small syntactical tip: you don't have to put braces around a single statement in an if/else, and if the statement for the if or else is one line you can put it on the same line as the if or else as well. So, if you've written: if (foo) { bar(); } else if (baz) { qux(); } you can condense all that down to: if (foo) bar(); else if (baz) qux();
Why are you using a multidimensional object to represent a two dimensional surface?
I don't know the game, but you could use a Dictionary&lt;string,string&gt;. You just need to create a key everytime you need to access it. string key = string.Format("{0},{1}", x,y); board[key]="test"; Meh.
You didn't initialize the inner list first.
Do you need to expand your board? Why not just use arrays?
board[0] doesn't exist yet, you have to start by saying board.Add(new List&lt;string&gt;()), which adds the first element to your outer list. However, nesting Lists like that is also considered to be bad practice in many circles of programming. If you need to use dynamic structures due to an infinitely expanding world, most programmers would tell you the better way is to use some collection like a Dictionary, HashSet, or even better, a Hashtable. Hashtables work the best because you can assign the center of the board (origin) and move outward from there, so that every square on the board that gets used will eventually have its own hashed value that can easily be looked up by the location. However, most programmatic versions of the GoL are a minimal version that stipulate the board size of R x C from the beginning, so rather than make lists within lists, you could simply make a single list of R*C length and deal with the index math, or even a two dimensional array bool[,] array = new bool[R,C]; if you are working with fixed bounds. 
Thanks :). It's been a pain in my ass
If a list of lists is really your best option, then you need to create the list you wish to add to your list collection first: List&lt;List&lt;string&gt;&gt; board = new List&lt;List&lt;string&gt;&gt;(); List&lt;string&gt; SubItem = new List&lt;string&gt;(); SubItem.Add("test"); board.Add(SubItem); It could then be accessed like so: MessageBox.Show(board[0][0]);
Don't know any. But perhaps you could try /r/dotnet (if you're looking for .NET projects specifically), /r/learnprogramming (if this is intended as a teaching tool), /r/shittyprogramming (if this is for the lulz), or /r/programmingdiscussion if you're looking for a more general discussion.
A two-dimensional list to represent a two-dimensional surface? I dunno...
Assuming your grid is meant to be unbounded, I'm not sure a multi-dimensional list is the best idea, considering a piece can travel both in positive and negative directions infinitely. If you don't want to use up tons of memory, you might want to look into developing a [sparse matrix](http://blogs.mathworks.com/cleve/2012/09/10/game-of-life-part-2-sparse-matrices/) class (although that's going to be more complex than just a list of lists)
This might sound a little preachy, but.... Your naming schemes are not very good. What I mean by this is that not very many of your object names are descriptive. "Button1" doesn't tell you what that button actually is, besides a button on the form somewhere. Neither does "textBox1" or "textBox2". Instead, try something like txtMinutes and txtHours, so they make more sense when you are writing code. You should never use the default names VS gives your objects. 
Wow. Is it possible to call a list element by array index in C#? Cool... 
Yep, check out [Indexors](http://msdn.microsoft.com/en-us/library/6x16t2tx.aspx).
We used mongo in a production mvc environment, it worked out very well. You don't really need EF since the mongo C# driver has a linq provider and works really well. If you want to use EF, the current version EF6 won't allow you to. However, EF7 (which is still in preview) provides multiple backend stores and while mongo isn't a storage option yet, I have no doubt someone in the community (or microsoft) will provide a mongo db storage implementation. So it is coming.
&gt; However, I wouldn't blame EF for this as I think it's practically impossible to build a great or at least longterm-pain-free ORM. That's my belief as well. We've been working on it for decades and no one has come up with something that, at a design level, doesn't make me cringe.
Try these - https://github.com/SecurityInnovation/SuperSecureBank - http://pentestlab.org/10-vulnerable-web-applications-you-can-play-with - https://hack.me/ - https://github.com/OWASP/OWASP-VWAD All have some web apps that are insecure and I'm pretty some of them are OSS.
Not my ad; just one of the weirdest I've come across.
&gt; although that's going to be more complex than just a list of lists I had some free time, [so I wrote a simple sparse matrix](https://gist.github.com/GeirGrusom/48eed077d8bede601f78). Not sure if it suits all of OP's needs though. I think it is less complex, at least in use, than a list of lists.
What would that include? Just "beginner" questions, just advanced questions, or all code questions? The thing is, almost every C# question you can think of is already answered on either SO, or some forum/blog.
You can always create a class that does the dirty work for you. Quick and dirty: public class GameBoard { private Dictionary&lt;int, Dictionary&lt;int, string&gt;&gt; _innerDictionary = new Dictionary&lt;int, Dictionary&lt;int, string&gt;&gt;(); public string DefaultValue = ""; private Dictionary&lt;int, string&gt; this[int index] { get { if(_innerDictionary[index] == null) { _innerDictionary[index] = new Dictionary&lt;int, string&gt;(); } return _innerDictionary[index]; } set { //this is not strictly necessary, but useful for setting up / clearing the board if(value != null) _innerDictionary[index] = value; else _innerDictionary.Remove(index); } } public string this[int x, int y] { //Use this for actual indexing, because this will only increase the size of the dictionary if necessary get { return (_innerDictionary[x] == null) ? DefaultValue : (_innerDictionary[x][y] ?? DefaultValue); } set { if(this[x, y] != value) this[x][y] = value; } } public void Compact() { //Minimizes the size of the dictionary, don't call it too frequently though. var xIndices = _innerDictionary.Keys.ToList(); foreach(int x in xIndices) { var yIndices = _innerDictionary[x].Keys.ToList(); foreach(int y in yIndices) { if(_innerDictionary[x][y] == DefaultValue) _innerDictionary[x].Remove(y); } if(_innerDictionary[x].Count == 0) { _innerDictionary.Remove(x); } } } public int NonDefaultNeighbors(int x, int y) { //Bit of a freebie, given that you're doing a game-of-life int output = 0; for(int dx = -1; dx&lt;2; dx++) { if(_innerDictionary.ContainsKey(x+dx)) { for(int dy = -1; dy&lt;2; dy++) { if((dx != 0 || dy != 0) &amp;&amp; this[x+dx, y+dy] != DefaultValue) output++; // I could have used the [][] indexer instead of the [,] but it doesn't matter // IIRC the game of life counts the diagonal neighbors too. // If it doesn't, just change the (dx != 0 || dy != 0) to (dx == 0 ^^ dy == 0) } } } return output; } } After this, you will have a 2-dimensional indexer: var gameBoard = new GameBoard {DefaultValue = "O"}; gameBoard[0, 0] = "X"; gameBoard[1, 2] = "X"; Console.WriteLine(gameBoard[0, 0]); //Writes "X" Console.WriteLine(gameBoard[21, 32]); //Writes "O" You could make the first indexer public too. The main difference is that the [x,y] indexer only increases the size of the dictionary if you *set* an element and returns the DefaultValue if the object at the index doesn't exist, while that indexer will increase the dictionary even if you *get* an element and returns null if no value is stored at that index.
The bartender asks if they ALL want one, The first won't know if the second or third does, the second won't know if the third will but the third will know as he's the last answering.. I think that makes sense, I haven't slept all night...
True, but I think that 'lead developer' means *only* developer in this instance.
thanks mate, makes sense. it just isn't funny
Kinda, but how does the third one know if the first two want a beer? Also, this has nothing to do with C#
I have no idea, It's just not a very good joke. :P
Meh, looks like a "we need a programmer, and it would be advantageous if you knew about/understood what we do as a company" to me. 
I've done quite a bit with EDSDK but only for static photos. I'll dig out my code when I get home and see if anything stands out that might help you. Edit: haven't forgotten about you OP! Bit of a manic day!
I think reddit's strength is in facilitating discussion so "advise me" type questions would be a good fit here. Questions with definitive answers would be better asked on stack overflow.
Because if either of the first two didn't want a beer they would have answered no (as then they would be sure that all three didn't want beers) The third knows the first two both want beers because they answered "I don't know"
This is a play on the word "all". The first programmer wants a drink, but doesn't know the second or third programmer's preference. The second programmer knows the first programmer wants a drink, and he himself wants a drink, but doesn't know the third programmers preference. Finally the third programmer wants a drink and also knows that the first and second programmer both want drinks, therefore he is safe to assert that they "all" want a drink. bool allWantBeer() { if (first) { if (second) { return third; } } return false; } which is just an expanded version of bool allWantBeer = first &amp;&amp; second &amp;&amp; third;
 bool allWantBeer = new[] { first, second, third } .All(p =&gt; p.WantsBeer);
This sub has become /r/learnprogramming but just for C#. There's a hundred places on the internet for beginners to learn code but not that many to discuss and learn about C# (from an intermediate level up). If it were up to me all question topics would be removed and the posters redirected to all those hundred places instead. I'd rather a slow-burning sub with only good quality posts than what we have now.
 bool allWantBeer = first ? second ? third : false : false;
I dont get it... Its a lot or too little ? I have like 5 years experience and i make about 30k€ which rounds out to about 50k stralia moneyz. Am i being cheated ? 
But a lead dev also usually has a lot more than 1-2 years of experience. And with the additional needs / wants, they probably only have a very small handful of possible candidates, assuming any of them are looking. This almost sounds like one of those "we have to post this publicly, but we already have a candidate" deals - it's oddly specific. 
Yeah, you should be looking at the job market and your capabilities as a software developer to see what you should be getting paid. In my experience you rarely get raises equal to what the job market offers relative to your experience. In software development use your current job to get experience for your next job which will pay more.
Where I work no developer makes that kind of money. They basically force you to move on to project management or "software architecture" if you want your pay to reach those levels. 
Of course. Still funny.
Yeah... I keep telling myself that. But : 1. I kinda like where I work 2. I'm afraid of change So I go to interviews from time to time but I just don't go all out and it seems like the recruiters "sense" that
Microsoft Limited Public License http://msdn.microsoft.com/en-US/cc300389
And for the first time of my life, I feel pain as I dont know anything about golf, yet have all the other experience :D
I too make 30k€. But my total living expenses a year is like 10k€. It's about where you live and what your life costs..
Maybe give /r/dotnet or /r/programmingdiscussion a shot. Also, what do you mean by printing? Do you mean given a PDF file, you want to send it to a physical printer? Or do you mean given your content, you want to _create_ a PDF file?
I completely agree; I see far too many posts that would be a better fit at SO. I can think of many types of posts that would be allowed such as: "Hey guys, I really agree with [Best Practice A]'s ideology. I also use [Unrelated (usually) Best Practice B] because I completely agree with its methodology and feel it adds a lot of readability to my code. However, I am now at a point where [A] and [B] are conflicting in this particular instance. Here's my code: [Code example which shows that using both [A] and [B] won't work, so one must be chosen.] I could go with [A] because [pros] but [cons]. I could go with [B] because [pros] but [cons]. I need help deciding which route to go!" because this type of thing facilitates discussion, as opposed to "I don't know how to do this thing! Help me!"
physically print...
You can use Foxit Reader or GhostScript to silently print with command line arguments, or [GhostScript.NET](https://github.com/jhabjan/Ghostscript.NET) (I think) to do so from code. Why don't you want to use either of those?
i would need to install the programs on alot of computers... ghostscript.net might be a solution ill take a look.
That does seem to be the rule, but there are some companies that make it very attractive to work for their company, including fair raises and opportunities to move up into higher level roles.
Few and far between
You might be able to use [Ghostscript Portable](http://portableapps.com/apps/utilities/ghostscript_portable) that you can package with your application to avoid installation. (not sure if Foxit has a standalone) However, I have no idea about the licensing/distribution side of doing this.
What about questions [like this one](http://www.reddit.com/r/csharp/comments/2n4it4/c_beginner_issues_getting_a_string_return_working/) where they have already tried StackOverflow? Maybe we can have a FAQ/Sticky/Rule where if your question is appropriate for StackOverflow, try there first. If it's not appropriate for StackOverflow, or you did not receive a viable answer, you can post it here? (but then, I guess we have to require that they mention that in their post? It might also be worthwhile to link to it because sometimes information/discussions on that StackOverflow question can be relevant or help us here) So if they post a StackOverflow-appropriate question here, but haven't stated/linked that they already tried StackOverflow, mods should remove the post and tell them to try StackOverflow first? (Then if they reply to the mod and tell them that they did, the mod undelete it?) EDIT: Also, if we say "StackOverflowish" questions should be removed and direct them to StackOverflow, does that mean /r/csharp allows the "My code is broken, fix please **[insert massive code dump]**" or "I don't know where to start with this homework assignment **[insert entire homework assignment]**" kind of questions? Or just the kind of questions like, "Should I use LINQ-to-SQL or EntityFramework? Should I use JSON or XML? WCF or REST?"?
Awesome!
[What do you mean this is not golf](http://codegolf.stackexchange.com/)?
I would say the fewer rules the better, so allow everything but don't be offended if people recommend stack overflow. I think in a lot of cases that is legitimately good advice.
My mom always said the money I wasted on golf lessons would come back and bite me in the ass. Suck it mom, I'm about to get payed! But seriously though, where's this job at, I'd like to apply, I love golf.
concatenating them?!?!
It's far too little for the amount of responsibility you'd be taking on.
Indeed, in London it's normally £50-150k pa. But the living costs get quite high, quite quickly.
Ok, i'll ask there, thanks.
It also depends on where you are in the county. Places like San Francisco, NY and Seattle have waaaaay higher base salaries due to demand. A senior or a lead developer is 130-160. Glassdoor is a decent tool to figure out location vs salary. 
I graduated in 2012 and make 85k. I went to a noname school, was in upper percentile but not top of class. I consider myself a hard worker and very friendly, but I'm not brilliant. I don't foresee myself creating the next big thing, but I lead a comfortable life where I can travel and do the things I love. 
If you're planning on learning WPF/XAML soon then I wouldn't go anywhere near Winforms. They work very differently and your knowledge of Winforms will just confuse things when learning WPF. The people I know who thought WPF was hardest to learn were the people who spent many years doing Winforms.
One thing at a time. C#.NET is pretty expansive. You can spend just as much time learning the C# _language_ as you would any _single one platform_ in the .NET ecosystem. So first, focus on C# _as a language_. Do some simple stuff in a **console** application first. Get a handle on the language and OOP concepts. Once you got your brain wrapped around that, you can then move to GUI/platform concepts. Feel free to jump to WPF (you could do WinForms, but know that it's likely to not lead anywhere worthwhile), but leverage the Visual Studio designer tools where you can; don't fret too much about the advanced features of XAML (styling, resources, data binding, MVVM), focus on basic GUI, basic GUI event handling. Use the GUI to help expand your C# programming abilities (that is, provide basic input/output to your backend. Make simple games/utilities/crap to help learn) Once you have that down. Then consider _what you want to build_. Based on that, go _deep_ with that platform. * Want to make a Windows desktop program? WPF. * Want to make a W8/Windows Phone app? Windows Store app development. * Want to make a web site application? ASP.NET (and maybe Azure) * Want to make command line utilities? Console application. * Want to make a 3D (or 2D) game? Consider Unity3D. * Want to make a cross-platform "app" for phones? Consider Xamarin. (unless it's a game, in which case also consider Unity3D) But do research/google for how to best develop your application/platform. The above suggestions are just one-off, very general suggestions.
First thing I thought of.
&gt;"Should I use LINQ-to-SQL or EntityFramework? Should I use JSON or XML? WCF or REST?"? EntityFramework, JSON, REST
The part I don't get is if they are a 40 year old golf retailer why don't they already have a domain expert on staff who can tell a non-expert developer how fitting works? I've been in this business for 15 years and I have never had a job that required me to be a domain expert. 
I guess like this (maybe with my own comments): &gt;string text = "Your important text that you want to write to a file."; &gt;System.IO.File.WriteAllText(@"C:\YourFolder\Filename.txt", text); I guess I should expect most people to copy it all as is and modify it to their own use. I just want to make sure what the legal position is.
That seems low… I have 2 years of experience (all of which I got at the job I'm working at) and I make 32k€ And even that's on the low side and the only reason I'm not looking for another job is that I love what I'm doing and the environment.
Normally, if it's in your own code, these samples are _so basic_ that you wouldn't need to worry about legality because they're examples of the API. The two example lines I posted are so basic there really is very few other styles of calling `File.WriteAllText`. So if it's all closed source, compiled and deployed and the users can't see that code, then I don't see the problem of using the MSDN example code. That said, I am not a lawyer and I don't understand how you're planning to distribute this code. If you're thinking you're going to provide an offline Android app of the MSDN or publish the MSDN examples for users to read, I think you'll definitely be wanting to check the Microsoft Limited Public License that /u/boxingdog linked too and consult a lawyer.
I need to expand my board.
-_- really?
Is it something that happens often? Because you can resize arrays.
Yeaaa, no.
Good advice. Learn the language, follow some tutorials, google specific issues... Twill be no bother to ya.
Not for the whole file sorry, but SvcConfigEditor.exe can be used to configure WCF services, and it does it very well.
Thank you very much. I'll do this. I'm going to focus in WPF for Windows Desktop at first, and C# as languaje. I have some experience doing little things in console for learning, and all my question had appeared when I wanted to go further. Again, thank you all.
German, yeah 
The third edition of Head First C# covers developing Windows Store (Windows 8) apps and Windows Phone apps using XAML.
*cringe*
This isn't a C#-specific, or even programming-specific question. It's just a logic puzzle. If either the first or the second didn't want a beer, they could have said "no". Since they didn't, then the third deduces that the first two want beers. The third also wants a beer, so he can confidently say "yes".
You have a point there, and they probably did have someone in mind. A lot of open positions start that way.
And why not write an administrative module to do all that? That sounds like a disaster waiting to happen (missing quote, closing tag). 
If the site uses IIS ( 7.0 or higher) then IIS Manager has a feature called Configuration Editor under Management. It can be used to edit values of the config files for a site.
I find domain expertise helps in some areas. I was valued a bit more for my current job because I worked in marketing before.
We'll they do offer *on-site* parking as a perk so it works out.
&gt; But a lead dev also usually has a lot more than 1-2 years of experience. I was "Senior Software Developer" after two years of experience at my first job after all the other developers quit. Titles mean absolutely nothing, because you can call anyone anything.
Here are a couple from code project: http://www.codeproject.com/Articles/30837/Setup-and-App-config-editor http://www.codeproject.com/Articles/6160/Application-Configuration-Editor-using-the-PropertIt You probably shouldn't let users edit the entire configuration though. Might be simpler if you create a custom GUI with only the necessary configuration items exposed as checkboxes/dropdowns/inputs. You can update the config programmatically like this: http://jeanpaulva.com/index.php/2011/01/13/how-to-edit-app-config-file/
Thanks - and you're right, before we go-live with this (if we ever decide to!) I should provide a 'proper' means of changing these things. During development I have a situation where the end-user 'tester' needs to change a boolean and the database in a connection string. I just wanted an easier route than him doing it from notepad for now. 
Could you post an example of data? From what you wrote: - Array is single dimensional i.e. int[] someArray and it contains some values i.e. {1,2,3,4,5,(..)60} - Table is object representation of some table in database that has 60 columns - You want e.g. someArray[40] element to be inserted to the 40th column in this table? It's not possible to do so as object properties don't have indexes to iterate over. You can iterate over all properties of given object but it wouldn't do you any good. If properties in this object are named in convention SomeName[incrementalNumber] you could use this construction. var property = typeof(T).GetProperty("SomeName"+incrementalNumber.ToString()); property.SetValue(TableObject,value,null); // http://msdn.microsoft.com/en-us/library/xb5dd1f1(v=vs.110).aspx 
Well you're absolutely right, and that's something that normally I would do before it left the shop. But right now it's a development/skunkworks kind of project and I just wanted to make life easier for the semi-techie guy who's been given the task of testing/playing around with it.
Good old legacy code. I have such a monster in my code base, I have posted semi-solution in separate comment in this post.
Well it is a string array. Basically it contains a lot of stuff from a text file. for example {"apple", "garlic", "onion",... "up to 60 different products."}; and then I have a table, it has the rows AppleT, GarlicT, OnionT, ... Up to 60 different productsT. So now I want to insert what's under apple to AppleT, whats under garlic to GarlicT, whats under onionT. My English is slightly crap, so I am having a hard time explaining it. I got skype maybe that's easier to explain over. Also the array is filled up by using another array.
Oh, and the first of your links is absolutely perfect, it's exactly what I was looking for. Thank you very much!
Quad core i7, 16gb min RAM, a normal hdd for min spec but you'd be dumb not to go for an ssd
I have to admit I find that page hard to understand. 
&gt; without trying to guide them through right-clicking the file into Notepad and then navigating the XML &gt; semi-techie So which one is it? They're comfortable updating connection strings, as long as it's not in notepad? What about validation? Being able to put in a value doesn't make it the right value (put "eight" instead of "8" when you're expecting an int). /u/atticusalien's answer won't help with that either.
The guy is technical enough to change an obvious login name in a connection string. He's technical enough to alter a true to a false (or vice versa) if he needs to try a/b testing of something. The point about having something better than notepad is exactly as you first said, in notepad he'll be navigating angle brackets and XML notation. I wanted something where he wouldn't see all of that, just the content of the settings themselves. It's not a released tool, it's internal development and testing, hence me not particularly caring about any kind of validation. If he got the connection string wrong, the program would tell him it can't connect and he'll just email me. I see him changing this once or twice a week until we're settled on a few details, then it will likely be cast in stone, but either way at some point it'll be worth writing a screen that lets them alter the connection string through the program should it ever be necessary.
Ok so this Product looks like public partial class Products { public stirng Apple {get;set;} public string Onion {get;set;} publc string Garlic {get;set;} (..) } If this structure matches your then you should think about changing it. Correct table structure would have tables like: - Products (ID, Name) i.e. (1, Apple), (2, Onion); - ProductVariations (ID, ProductID, Name) ie. (1, 1, "Green Apple"). Having it all in one table is very bad from database structure point of view. But sticking to current implementation: In my opinion this text file should be written to Dictionary&lt;string,string[]&gt; where key is i.e "Apple" and value is an array of i.e. {"Green Apple","Yellow apple". Value should match name of property in Products where values should go. Here is mine implementation for this structure. List&lt;Products&gt; listOfProducts = new List&lt;Products&gt;(); //Key is for example Apple. Value is an array of associated values like "Green Apple" Dictionary&lt;string, string[]&gt; stringDictionary = new Dictionary&lt;string, string[]&gt;(); // i &lt; 60 is fixed but it is only a quick solution that needs to be modified in final solution for (int i = 0; i &lt; 60; i++) { Products productObject = new Products(); foreach (KeyValuePair&lt;string, string&gt; pair in stringDictionary) { var property = typeof(Products).GetProperty(pair.Key); property.SetValue(productObject, pair.Value[i]); } listOfProducts.Add(productObject); } entityContext.Products.AddRange(listOfProducts); entityContext.SaveChanges();
Yeah I have public string apple{ get { return GetProductItem("apple"); } set { SetProductItem("apple", value); } } public string onion{ get { return GetProductItem("onion"); } set { SetProductItem("onion", value); } } Also in the table, I do have an ID, I just forgot to mention it. Sadly I have no control over what happens in the other class. The guy who made the other part made it using an array. 
Did you try implementing code I have posted in my previous comment? You would only need to populate the dictionary with currently existing array. 
The first example is already wrong. Also it is constantly using the wrong names. And a lot of stuff is not even mentioned... Including the most awaited feature: the null propagation operator.
I totally agree; pretty bad article all around. Readers should just scroll down and watch the video from Mads Torgersen himself (which is a good video), or better yet, just watch it directly on Channel 9 here: http://channel9.msdn.com/events/Visual-Studio/Connect-event-2014/116
I will give that a try as soon as I am at the computer, where the source code is on. 
The second code snippet won't even compile. He's writing "with the new null-propagation operators".. It's one operator. The null-propagation operator. Does the author know the difference between singular and plural? And yes, no example of this. In another example he also uses the new string interpolation feature.. Without even mentioning it. It's also still using the old syntax, which is already known to change to a new syntax. The author is simply incompetent. Edit: He edited again. He writes: The C# have also made the syntax of string interpolation less confusing. What used to be: return String.Format("({0}, {1})", X, Y); …will soon be: return "(\\{X}, \\{Y})"; *NO*, it will not be like that. Make your homework.
Are you using a C# 6 compiler?
&gt; The author is simply incompetent. Not to mention a spammer.
 public class Point { public int X { get; } public int Y { get; } public Point (int x, int y) { X = x; Y =y; } public double Dist } "`public double Dist`" won't compile even in C# 6.
Do you know C#? That won't compile in any version.
Looking at his post history he is only promoting his own articles. Shines a bad light on the S&amp;S Media Group and JAXenter.
All your questions are answered in basically any WPF book. And also in a loot of tutorials. Did you actually follow any tutorial and try out things yourself, or did you just "read quite a bit"?
I recommend the MVVM route, try something like Caliburn.micro.
http://www.wpf-tutorial.com/panels/stackpanel/ http://www.snowball.be/2006/07/11/WPF+Examples+Databinding+In+WPF+A+Simple+RSS+Reader+With+XAMLWPF.aspx http://msdn.microsoft.com/en-us/library/system.servicemodel.syndication.syndicationfeed.aspx http://www.wpf-tutorial.com/treeview-control/treeview-data-binding-multiple-templates/ http://wpftutorial.net/DataBindingOverview.html https://code.msdn.microsoft.com/windowsapps/RSS-Reader-affe3358/sourcecode?fileId=59460&amp;pathId=1312426089 Those are part of the things I've gathered throughout my researches, I might have miss things obviously 
&gt;I don't know what controls I should use. I'm think about a StackPanel for 1 and a TreeView for 2, would that do what I'm looking for? Think of StackPanels and TreeViews as ways of organizing and displaying collections of controls. That being said, I would recommend at least a basic (custom) user control for section **1** (your stack panel view). Something basic that binds and displays whatever information you want your RSS information to be. Then, you can display those custom user controls in a Orientation="Verticle" stackpanel as you add/remove RSS info. &gt;Binding data would be the way I'd updat ethe data, but I'm not quite sure how it works, I've read quite a bit about it but I don't understand where you register which classes you want to bind to the xaml I recommend that you read any of multitude of stack-overflow questions, MSDN articles, tutorials, etc for XAML data-binding and/or listeners. While I could possibly answer this question for you, its kind of the heart-and-soul of your task at hand, and simply giving you the solution does not a better programmer make. &gt;Finally how can I bind 2 (treeview) to 1 (news list) so that 1 only displays the news from the feed selected in 1? You could use a view model that holds a collection of items in a TreeView (of which, each item has its own collection of RSS info). Then attach an 'OnSelectionChanged' listener to update what collection to display based on what item is selected. *tl;dr* *Use custom user controls, use view models, keep reading about data binding - its not hard.*
At _minimum_ yes, then it would be a public mutable field. But in the context of the previous code, it's _supposed_ to be a method. So even if you were to add a semi-colon, all code originally accessing/calling `Dist` would fail to compile (they would be treating a field as a method). The C# 6.0 code that (likely) was intended to be published would have been: public double Dist =&gt; Sqrt(X * X + Y * Y); Which is used later in the article (but is now using the new "static using statements" feature which was not mentioned in the article either)
Ah, thanks. I tend to ignore missing semicolon errors and take each snippet on its own.
Caliburn is really easy. Check out their docs and you should have something going pretty quickly.
I'm not having any troubles with the data, but the UI really is giving me troubles, thats where I only need some help Thanks for your link :)
The first sentence from the documentation: &gt; Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined. And from the remarks: &gt; Applying ConditionalAttribute to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with ConditionalAttribute is defined. The big difference is the following: Code with `#if DEBUG` will simply be gone from the understanding of VS and the compiler. Code like namespace imports can be removed without seeing any hint or error during compilation. However, with the `ConditionalAttribute` VS is still fully aware of the code. You can't accidently remove required parts, because then the compilation will fail. Easily testable: using System; using System.Diagnostics; class Program { static void Main(string[] args) { #if DEBUG Console.WriteLine("One"); #endif Test(); } [Conditional("DEBUG")] static void Test() { Console.WriteLine("Two"); } } Switch to release mode and remove the `using System;`. The `Main()` method will compile fine, no problem here. The `Test()` method however will complain that `Console` is not defined.
I could only guess.. And that would be my guess.
Well so I guess the point that I was trying to make was that the UI should be the EASIEST bit. The left listview will have a binding to the list of feeds, the right listview will have a binding to the left list's selecteditem's (which will be a single feed) article listing. Then you just define templates for the listviewitems and that should be that.
Well not for me haha I know all the theory, I just have troubles putting it in practice for some reasons.
Would be interested as well, thanks :)
Caliburn is basically just an MVVM framework that's really opinionated (read convention over configuration). It forces you to do things the ways it wants, but most of it makes sense. I haven't worked with prism. 
coursera,com
/u/alkrun is correct. For your other problem I don't know how your data looks, but you shouldn't store the columns as List&lt;string&gt;. You can use LINQ to Join the data.
&gt;I tried to peek with this metadata feature but it just links me back to the " public string[] Split(params char[] separator);" in the same file. When it says "from metadata", VS was unable to find the actual source code and just generates stubs from the assembly metadata, e.g. method signatures without bodies. If you want to browse the source of assemblies, there are some tools listed in the sidebar that can decompile them. ReSharper is the most convenient in my experience, as it integrates nicely with VS and automatically downloads the reference source code or decompiles when you use the "go to definition" feature, but it also comes with a lot of other stuff and is somewhat expensive.
Hello there, I've been reading up on sqlite for the past couple of days and I wonder if you could tell me where I can let people check out my db to see if it's correctly made? Since I don't have much knowledge+experience with dbs I want to know what I'm doing good/wrong. Cause my first db was just one db and one table where I quickly noticed some flaws, now I'm trying out foreign keys and constraint, and I would love some feedback on what I'm doing 
You don't need that for the MS stuff anymore, the sources are available online :)
While ASP.NET is good for creating web applications, it's just one thing that it's good at. Modern web applications are more likely to use something like AngularJS on the front end and then call into a web service on the server so you would want to look specifically at the ASP.NET Web API. And then that API can also be consumed by desktop and mobile apps and other developers. But I agree with the overall comment that learning '.NET' depends on what you want to do. But I think that the ASP.NET Web API needs to be called out because of it's unique role across applications.
At this point, you probably don't have a lot to worry about, schema wise. Make sure the tables are organized so they are easy to understand and just roll with it. Using 1 table is fine for a small project. What I would do for learning is, build a table, fill it with data, read and write as needed. If you write a program that does that, you are doing well. You can start making more complicated structures, but don't do it just because you want to, do it because the more complicated structure is necessary.
What guides did you follow? Have you restarted the server? A friend of mine and I got a normal ASP-App to run, but we eventually switched to our own self-written server (problems with the mono gc (that is non-moving and ...gnah!) and file-uploads that get loaded into the RAM completely before we can read the stream).
Mostly the MSDN defines how things are done. Since .NET was closed source until recently Microsoft defined pretty much everything. At least I did not hear of much stuff outside MS to be canonical. 
I'm mostly looking for textbooks. I know Microsoft Press puts out a lot of good work. Can you recommend any authors?
I don't know how open you are to using more than one text, but Jon Skeet's [C# in Depth](http://www.amazon.com/C-Depth-3rd-Jon-Skeet/dp/161729134X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1417278768&amp;sr=1-1&amp;keywords=C%23+in+depth) is about as canon as it gets. A second-term course where C# basics are already understood would be great for this text. I can't speak for a truly introductory book, however.
Java is terrible, by you teaching it to other students they will think that using, developing for and running Java applications is a good thing. If you build a house out of shit, it will still fall apart no matter how well the structure design is. /endrant. Anyway, I worked for a Uni and Java issues are more common than not, as well as being heavily exploitable, and should be killed off. C# ftw. http://codeproject.com http://lmgtfy.com/?q=C%23
I googled variations of "running asp.net website on linux", found couple of blogs that had step by step guides. I think I managed to figure out how to deploy it (using xsp, since my website won't have much traffic, so performance is not #1 priority), but due to me following various tutorials I have multiple version of mono, xsp4 and other programs installed and I think it's causing conflicts. Since the VPS doesn't have anything important on it, I'm just going reinstall the OS and start fresh.
You can use: ComboBox.SelectedItem = null; If you don't want the Clear button selecting the item at index 0.
I've done it with an MVC 3 site. I'm using nginx instead of Apache. It sounds like Apache may be serving the file directly instead of passing the request to your app. Check your Apache configuration. Also, it sounds a little strange that you're saying your page displays as a text file. What kind of URL are you using? MVC uses routing, not file names like you often see with PHP sites. If you're not too invested in MVC and have your heart set on hosting the site on Linux, you should consider switching from MVC to [Nancy](https://github.com/NancyFx/Nancy/). Nancy is designed to be able to be run on Linux and has documentation on how you can do so.
[The C# Yellow Book](http://www.robmiles.com/c-yellow-book/)
Can you give me an example?
PluralSight I think its not free though
Jon Skeet has great books and O'Reilly has some good books as well for C#.
I currently have a project running that reads/writes/copies/edits and deletes data out of a sqlite db. Projects basically keeps a db with personal info of people that attend events. Currently my biggest problem is that when a person attends multiple events, they show up multiple times in the db and when that persons personal info changes I have to change every field manually.
Microsoft Virtual Academy. It has pretty good material on just about every part of the Microsoft stack. Everything on the site is free. Pluralsite is another good one, but as someone already mentioned it is not free
Currently using /u/noobzilla solution for resetting everything and using ComboBox.SelectedIndex = 0; Only problem with selectedindex so far is that it saves in the db as a number, if you by any chance now how to get the text that would be awesome!
Fast question on wpf vs winforms, how hard is to to switch from winforms to wpf, everything I've learned so far in school was with winforms. After reading up on it I've come to the conclusion that winform isn't really used much.
http://stackoverflow.com/questions/17900677/running-mono-3-2-0-with-net-mvc-4 http://www.cafe-encounter.net/p1510/asp-net-mvc4-net-framework-version-4-5-c-razor-template-for-mono-on-mac-and-linux 
Wow.. This is amazingly inefficient: var readByte = gZipStream.ReadByte(); while (readByte != -1) { output.Add((byte)readByte); readByte = gZipStream.ReadByte(); } And there is a lot of obsolete code... Even wrong information: &gt; I have recently been using RabbitMQ as a messaging platform, and to post a message you need to convert it to an array of bytes. In general this is a bad way to serialize to a byte array, as it has no backwards compatibility. Alter the objects structure a bit and all data becomes invalid. Poor article.
Switching to wpf is as simple as just starting it up. Winforms has a monolithic reputation that is rightly earned by the way it tends to accumulate business logic within your form and view which will blur your separation of concerns, which will lead to code that is more difficult to read, debug and redactor. Wpf views are created using xaml which is not as easy to understand as drawing controls onto a form but not so difficult that you should find the daunting. If you want to switch to wpf, which I recommend you do, you will want to look into the model-view-viewmodel (MVVM) design pattern/architecture to understand the larger goals and advantages of utilizing wpf, and follow any one of a number of tutorials to get a grasp of the basic mechanics involved in actually creating one. Make something simple that uses a few features, then once you have that working change the requirements and implement those changes. If you can alter your business logic without having to change the form and vice versa you are, most likely, maintaining your separation of concerns.
I recommend starting by teaching some version control basics. Focus on git and quickly cover others like TFS and subversion. You can read [Pro Git](http://git-scm.com/book/en/v2) for free. If you teach a hardware/software course, [CODE](http://www.amazon.com/Code-Language-Computer-Hardware-Software/dp/0735611319) is an excellent book. I also recommend C# in Depth. I would also think it'd be cool to offer points for contributing to StackOverflow or the new open source .NET projects on GitHub. If you teach design/analysis or other classes focused on architecture, [Adaptive Code via C#](http://www.amazon.com/Adaptive-Code-via-principles-Developer/dp/0735683204) is pretty good. I'm only a few chapters in, but it discusses Scrum methodology, layering and tiers, as well as how to follow practices for writing great code. I would also suggest a course on JavaScript. I have had to train too many Junior and Senior developers on how to write JavaScript. It's scary that many web developers don't even understand fundamentals.
Calling ComboBox.SelectedItem.ToString(); Will return the text of the currently selected item. 
We will be building a two-course system. I find the second course is always the hardest one to find books for. Thanks for the recommendation.
Thanks for the recommendations. Definitely looking at C# in Depth. We teach Git and JS extensively across our curriculum (it's a full-stack web program) and are always looking at new resources. Thanks!
Thnx!
I agree that using the good ol' `BinaryFormatter` should be discouraged if the purpose is for cross-platform communication and persistence of information using POCOs. One could still use an XML or JSON serializer and convert the string output to a byte array for communication. Or one could even use [protobuf-net](https://code.google.com/p/protobuf-net/).
Can you explain why it is inefficient? 
Because it reads each byte individually...
Bonus points for it being a) a college textbook that is b) free.
Sidebar, /r/learnprogramming, /r/gamedev
Jamie King has some fantastic videos on C# https://www.youtube.com/user/1kingja/playlists
Udemy has a few classes you can do as well. I got one for C# a while ago for free, but I believe they have a decent amount. They also have Unity ones as well when you get ready to dive into that. 
Most impotantly: var result = (from m in Enumerable.Range(0, 1 &lt;&lt; groups.Count) select from i in Enumerable.Range(0, groups.Count) where (m &amp; (1 &lt;&lt; i)) != 0 select groups[i]) .First(set =&gt; set.Select(s =&gt; s.Count).Sum() == 180); What does: * Enumerable.Range(0, 1 &lt;&lt; groups.Count * (m &amp; (1 &lt;&lt; i)) != 0 means? i understand that .First(set =&gt; set.Select(s =&gt; s.Count).Sum() == 180); selects first set with sum of 180 Thanks.
Seconded for Microsoft Virtual Academy. It's an amazing resource, and they have separate C# tracks for beginners and people who recently have programmed. However, the format of MVA course is as follows: various modules each have a topic. Each module has a video of the instructors presenting and working with the material, and these videos usually last around 45 minutes to an hour, in my experience. If the instructors used a slide presentation, then it's available for download, and there's usually a multiple-choice assessment for every module. The material is great, and I've learned a lot from those videos, but what's lacking in relation to CodeAcademy is the actual coding aspect. The videos teach you the concepts and even go through examples, but you won't get the actual coding that's integral to CodeAcademy. For this, you'd have to supplement yourself. From your post I assume you're fairly competent in other languages, so a really great resource I can recommend is Microsoft Press's *Visual C# 2013 Step by Step*. It's written for developers who want to learn C#, and it's pretty fast paced, but every chapter has really in-depth programming exercises and the book does an excellent job of teaching you C# from the ground up, going from your first "Hello, world!" program and defining variables to using LINQ, implementing interfaces, delegates and events, and other pretty advanced C# topics. It's how I learned C# and I always recommend it to any programmer who wants to learn C#. There are other really great resources where you can just generally practice your programming, such as Project Euler and codingame.com, but as far as specific, culminating C# examples, that book is amazing.
Microsoft Press's *Visual C# 2013 Step by Step* is awesome. I taught myself C# with this book. However, this is a introductory book for C# written for people who already have programming experience, and are just trying to learn C# as another language. For people who are true beginners to programming, this would probably be very fast paced for them, but it does its intended job better than any other book I've looked at. The book begins with the traditional "Hello, world!" program, and goes through C# in depth, finally addressing more advanced topics like LINQ, delegates and events, and generics. Every chapter has a pretty in-depth discussion about the topic, then one or two large projects where you apply the principles. It isn't written like a traditional academic textbook, with questions at the end of the chapter and such, but it's been an invaluable resource for me not only in learning C# but also as a reference afterward, as every chapter has a quick reference at the end, where it has things like "To declare a class, write the keyword class, followed by the name of the class, followed by an opening and closing brace. The methods and fields of the class are declared between the opening and closing braces," along with a code example. Like I said, whether or not you choose this book depends on your audience. If you're teaching absolute beginners to programming, this might be too much. It goes really in depth into many behind-the-scenes topics, like how C# manages memory, the stack and the heap, the intricacies of the garbage collector, etc., but it does assume you already have basic programming knowledge, like how decision constructs and loops work. If your students already do have some programming background, I definitely recommend it.
After spending quite some time benchmarking and playing around, I came to my personal rule of thumb: For maximum performance and min. size I use protobuf-net, everything else JSON, as it is really convenient to be able to read the data. The libs I use are Jil or JSON.NET. Jil is considerably faster for really large object-trees, but generally JSON.NET has more features and is also really fast for normal sized stuff and has more comfortable defaults (easier out-of-the-box for some cornercases). As everything over http is (should be) compressed anyway, the size difference between JSON and protobuf is not that relevant for web-stuff and moderate use-cases. I'd recommend to create a baseline with protobuf-net and than doublecheck Jil / JSON.NET or ServiceStack or ... to decide if protobuf-net's binary serialisation is really needed.
Did you try to split it up into it's basic parts? Which part don't you understand? The `Range` method? The bit-shifting? The linq-query syntax?
Hi, I understand the linq syntax. and what is is trying to do. I don't understand the use of &lt;&lt; operator in the range() operation and what the line: where (m &amp; (1 &lt;&lt; i)) != 0 does. thanks. 
It's been a while since I used bitwise operators but if memory serves : Enumerable.Range(0, 1 &lt;&lt; groups.Count) is going to give you an enumeration of the total number of combinations possible assuming order doesn't matter. 1 &lt;&lt; count is going to take a binary 1 and bit shift it to the left by the number of groups. Say you had a set of 3 items {1, 3, 5} bit shifted that would 8 combinations {{1},{3},{5},{1,3},{1,5},{3,5},{1,3,5},{}}. (m &amp; (1 &lt;&lt; i)) != 0 Is going to narrow the set down. IE in the case above, if m = 1 then you have an iteration through the set and where the set index binary anded to the permutation index does not correspond to 0 the item is returned. In the case of 1 you have your indexes 0,1,2 so 1 &amp; 1 &lt;&lt; 0 = 1 //1 shifted 0 bits is still 1 so true 1 &amp; 1 &lt;&lt; 1 = 0 //1 shifted 1 bit is 10 which anded with 01 is 0 1 &amp; 1 &lt;&lt; 2 = 0 //1 shifted 2 bits is 100 which anded with 01 is again 0 which will net you out a set of {1}. This gets more interesting in higher permutations ie say m = 5 where you have 5 &amp; 1 &lt;&lt; 0 = 1 //remember 101 is 5 and 1 both line up so it's true 5 &amp; 1 &lt;&lt; 1 = 0 //101 &amp; 10 is false since the 2 bit is on for one side and off for the other 5 &amp; 1 &lt;&lt; 2 = 1 //101 and 100 is true as the bits line up again So in this case you end up with the set {1,5}. I'm not completely sure of this explanation (as I said it's been a long time) but the main thing holding me back is the line (from m in Enumerable.Range(0, 1 &lt;&lt; groups.Count) as near as I can tell the 0 in the enumerable by my logic always returns back the null set which seems unnecessary in this case.
&gt;&gt; I have recently been using RabbitMQ as a messaging platform, and to post a message you need to convert it to an array of bytes. Double quotation for double ouch.
1 &lt;&lt; i is a number that, in binary, is all zeroes except for the i^th digit. m &amp; (1 &lt;&lt; i) masks every bit of m except the i^(th). It is thus zero unless the i^th bit of m is one.
Thank you sir. This is a really good explanation. I'm still new in bitwise operation. Need to learn more. As for your other post, this algo works on a small subset of array. once the number of entry goes beyond 100, it just goes in infinite loop and outofmemory error. I'm trying to solve the given sum problem and still stuck on it for a long time now. Do you have a recommendation of good sample codes to solve this? Thanks.
Not necessarily an infinite loop just a very very very large one. For one thing, c# will only let you shift at max 63 bits netting you a Int64.MaxValue. Keeping in mind that you're carrying around sets of data, at that level of permutation you're carrying around 9,223,372,036,854,775,807 lists, no surprise you're running out of memory. Also worth noting that even on the beefiest of machines it won't work since it's not going through the full level of iterations past a 63 item list. The reason you're blowing up around 100 is every new item you add makes the size of the sets you're carrying around ever larger. I'd suggest looking into a divide and conquer style algorithm for this if you need to do it. Do you have any context on what is driving this outside of learning?
I see, that is interesting. Thanks for the info. I am primarily iOS dev but is starting to learn c# to delve into .net programming. Some project that I'm involved in uses .net server for controlling the database and rest api. Since I got no c# experience at all, I just tried going through challenges and solving problem instead of learning from zero. A lot of the language part is quite similar with swift actually. more fun, if i dare say so.
I don't have too much time to answer, but I would advise on looking and reading up on these topics: - For binding - Just Google whatever you may need at the time, or better yet, read a bit about WPF in books or tutorials online. - For your view(s) (1 and 2) - Look at *DataTemplate*s, they're what's going to make data objects look the way you want them. Keep in mind that they heavily rely on bindings etc, so make sure you know that first! - For 1 I would use a simple ItemsControl with a StackPanel to back it up. [Like so](http://paste.ofcode.org/YXTeK2XLKWYrZ7cGqUVxij). - Definitely look at the **MVVM** design pattern, it's super helpful once your get the hang of it, and makes maintaining your code a lot easier and your applications a lot easier to manipulate and change. Hopefully that helps.
I've been having fun lately toying around with http://www.codingame.com/ for languages I'm not very strong in. It's not much outside of basic syntax but it's been a fun exercise once you work out the horrific documentation around inputs/outputs. Typically if you're only interacting with sql and a rest API, I doubt you'll run into much in the way of bitshifting so you're probably safe to leave it be. Understanding bitmasks is a useful skill though. Be prepared for regular expression fun at some point :P
I haven't worked with Caliburn.micro, so I can't give my opinion on it (but from their website it looks great honestly). I do work with Prism day-to-day though. Very rough &amp; dirty ELI5 about Prism: Prism is a framework to allow you to create *Composite Applications*. Composite Applications are applications that are, well.. composite. What that actually means though is that an application is usually built from several *"modules"*, that can be separated between them and aren't really connected to one another, and can therefore be developed independently from other modules. So you develop a few modules, or use existing ones, and then combine them into a single "big" application that "ties" them together. A classic example for a composite application is Microsoft Office Outlook. You have an Email module, a Calendar module, a Contacts module etc. Each of them is independent from the others and could technically be used on it's own, extracted to it's own application. So you give each development team a module to develop, and then at the end you "tie" them all together and bring out a product called "Outlook". Taking this concept further, if you make the text editor for Microsoft Office Word a module, it can also be used to write emails in Outlook, so in this case, you might already have a working (and tested!) module, and you can incorporate it into a new application relatively easily and without testing too much into it. Taking this concept ***even further***, say that in Outlook 2015 you want to change the Calendar module to a new, better one, for whatever reason, you can do that pretty easily if the module keeps it's public API the same, and when you finish developing the module you just replace the old one with the new. So you can pretty much pick &amp; choose whatever you want to use for each and every application you develop. Prism is usually used in big applications though, so I wouldn't go that route for a simple application like OP's one, especially not when he's the only developer working on it.
This may help: http://msdn.microsoft.com/en-us/library/windows/desktop/aa365503%28v=vs.85%29.aspx Also, it may help to define exactly what you're looking for or trying to do with reparse points.
yeah i can kind of understand the codes now, but just getting into the fun part like linq. oh i wish every language have linq. make life so much better :) Thank you sir, you have been an amazing mentor today.
Someone give the man a cookie. OP, I can't stress enough how important it is what he is talking about. Views don't matter. You could have a 1000 different views that don't look anything like the next, but the "ViewModel" - the class that those views bind to is what is actually important.
DirectoryInfo will tell you: DirectoryInfo dInfo = new DirectoryInfo(@"C:\"); FileAttributes attributes = dInfo.Attributes; if ((attributes &amp; FileAttributes.ReparsePoint) == 0) From command line you can see reparse points with "dir /A L".
Or just commit more often.......
I was about to say, that is why you use version control
Prevention is always better than cure, I can't argue with that. But really, and this is an honest question, how often do you commit? Every key stroke? Each 5 minutes or 10 minutes? Do you commit broken builds or half complete methods? If you've been coding like a madman for 2 hours and added some awesome new methods, doing a final test before committing then BOOM! Everything is gone. Now what?
Ok interesting, I guess I should try this. I usually commit when I've added something that works, or whenever getting up to take a break, whichever happens first. Even so, within a 30 minute window you could lose something that was the result of a pretty convoluted thought process and after the distraction of rebooting your dev environment you'd struggle to get that exact same solution. Nice to know, hopefully never need.
Had this problem a while ago, solved by rolling back one changeset and rewriting the logic (I commit rather often so it wasn't a problem). The Recuva solution is a good touch though, this is going to “saved”.
Here's a link to the app: http://www.mediafire.com/download/404hh3cws3ye9c1/RedditCheckerWCF.7z Feel free to ask if you have any questions :)
will do!
Thanks, I've been looking at that one for our first course. I think it hits our audience best. The program is a compressed curriculum. So they will have some programming before taking C#, but will need to pick it up fast so we can get into advanced topics.
git-svn :)
&gt; so, within a 30 minute window you could lose something that was the result of a pretty convoluted thought process and after the distraction of rebooting your dev environment you'd struggle to get that exact same solution. Nice to know, hopefully never need. Also, if using TFS (and not Git) then you can shelve the changeset if checkin policies are too strict.
Awesome! Like I said, the only thing you may find lacking for an academic setting is that the comprehensive chapter projects are the only thing there as far as questions or exercises, but they're pretty in-depth as they are, and for a pretty fast-paced environment, that may be just what you need. I'd be interested to find out which you end up choosing and how the class ends up going.
TFS shelve sets bring back some bad memories...
I've removed this submission as: a) It's a borderline spam submission b) Has no real association with C# as a language; this would be more appropriate for more general programming subreddits (perhaps /r/programming or /r/webdev) 
Not a problem. I have a personal copy and still find insights from this book from time to time. Jon Skeet really does have a way of expressing things succinctly and effectively. It's no surprise, either, since his *vast* StackOverflow answers are the same - straightforward and enlightening. 
You get what you pay for, unfortunately. Use Parallels or VMWare Fusion, works great. And I second the suggestions to commit every xx minutes, and also wire up your IDE to automatically make backups of your open files as you save them (VS does this by default I believe?) 
&gt;How does firing the async method from a property setter get around the whole issue? I'm not sure what exactly "the whole issue" you're referring to is, but the code works by starting an asynchronous task that converts the byte array to an `ImageSource`, and indicates the completion of the task via `INotifyPropertyChanged` which will cause the data binding to update with the now loaded `ImageSource`. &gt;How is all this safe? It isn't. If you set the `ImageBuffer` property twice within a short timespan, there is no guarantee that the two `LoadImageAsync()` tasks finish in the expected order. Similarly, setting `ImageSource` after setting `ImageBuffer` while there's still a `LoadImageAsync()` task running can lead to unexpected results. That code may work for narrow use cases (e.g. you only set the `ImageBuffer` property once and don't set `ImageSource`), but it is rather fragile. 
Thanks. That just confirmed Desktop is a reparse point.
Thanks. That looks interesting. 
You aren't alone. WPF, and therefore WinRT/Xaml are both a total fuckin mystery. Adam Nathan's WPF Unleashed book is pretty good, though *Very* down in the weeds. 
Hmm really? I might need to look into this
I actually watched these before. It was a little slow for me but it is good. 
Don't expect people to just fix arbitrary blocks of code with no context. That being said, the IDE gives a line number and highlights the lines where the compiler wasn't happy. Fix it there. Also, consider refactoring.
Yeah I totally missed that thanks! 
Also.. string.IsNullOrWhitespace() Use it!!
Is the title misleading or did I misunderstand the issue: His virtualbox environment crashed or VS crashed - and caused the issue?
I still use Visual Studio on Windows for development, I just deploy to a Linux machine. I'm usually on my work laptop which is a MacBook so I have a Windows VM for Visual Studio. Visual Studio is my favourite IDE and probably the best IDE in existence at the moment so I don't mind using it at all. Microsoft recently released a pretty good fully-featured version of Visual Studio ("community" edition), it's worth looking at if you have a copy of Windows. Recent versions of MonoDevelop have pretty good ASP.NET MVC support (and even ship with an ASP.NET MVC template) if you want to go that route. The tooling's not quite as good, but it's definitely doable. I'd suggest looking at Nginx as its FastCGI support is generally a bit better than Apache's (whose FastCGI support seems mostly unmaintained these days). ASP.NET MVC is **far** superior to PHP, I'd definitely recommend it! For what it's worth, you don't even need an IDE, you can use a plain text editor if you like. The hard bit is creating the `csproj` file (which I'd always use Visual Studio for) but once you have the csproj you can just run `msbuild blah.proj` on Windows or `xbuild blah.proj` on Linux/Mac to compile the site. Everything you need is bundled. An older version of MSBuild comes with the .NET Framework and is available on every Windows PC, and IIS (the web server on Windows) is available to install in Control Panel.
I think you could do worse than some of the stuff found on http://www.pluralsight.com/academic That is where I got started in C#/.NET in my last 2 semesters of my undergrad program, and I can definitively say it has been transformative for my knowledge and career. I would recommend something like a lecture on a topic, followed by a video or 2, and some exercises or quizzes from the site. Then again, if you're looking more for books than multimedia stuff, the rest of the answers here have you covered.
If you keep an array or a list of all the text boxes, you can check like this: boxes.Select(box =&gt; box.Text).Any(string.IsNullOrWhitespace);
The local variable doesn't matter, the crux of what it is doing is the fact that setting the ImageBuffer property causes the ImageSource property to change at some later point and cause the property notification to fire. Yes, if you set ImageSource yourself it could get overwritten by the value from the task. I guess the author assumes you won't do this!
javascript
It really depends on what you are doing with the language. What are you trying to accomplish?
Can the coupon be had without the 2 wk clause? I would like to take it but most likely would need more than 2 weeks to complete it. Although will definitely leave a review at the end of it.
From what i remember from the last time i checked out udemy, your test questions focus far too heavily on nomenclature and not enough on implementation.
You are probably a fine instructor but I have a gripe: You are a *relative* no-name in the screen-cast space and yet you charge $19 for just 2 hours of (relatively mediocre?) content - content by the way, that has already been covered *really* well for [free](https://www.youtube.com/user/1kingja/playlists). What's more, your video quality *seems* poor (my opinion is based on the preview) - the resolution is low and the microphone gain is too high. Granted your course is cheaper, but for just $10 more ($29) someone could get not 2, but **hundreds** of hours of content produced by industry leaders and expert instructors at Pluralsight (among other places). I thought to be apologetic but in reality I am a little bit cross. It bothers me that someone might not get the best value for money simply because they found this resource first. (Yes, you are giving away access but this post is effectively an advert.)
I would use SQL server compact instead of sqllite, as you can still use your existing code (including EF)
&gt; probably data analysis and maybe some web For data analysis I recommend python, most of what you will need can be done in R, but at least for me python is a cleaner and saner way to achieve the same results (take a good look at pandas). For web it's fundamental to know javascript, literally not optional, if you plan to do web take the time to learn about javascript before diving into one of the hundreds of frameworks/libraries available. &gt; I was thinking python, and I'll probably give it a try, but would be the most useful second language in your opinion /experience? Useful is relative, if you have no project in mind I suppose you are looking into languages that are useful in the sense of "getting good jobs". If that's the case and you don't mind working in corporate environments I suggest that you learn Java as well. If you already know C# and Windows then learning Java is not that difficult since the languages are pretty close in terms of syntax. Knowing java will open many other opportunities while also giving you access to the best tools for mining data (think hadoop for example). You will also become a unicorn, it's very rare that someone know the details and differences between these two ecosystems. As I said, useful is relative, I just mentioned Java because knowing it was helpful in many of my previous jobs. If I had to pick the top 5 things that were most useful during my 12 years programming I would say Javascript, C#, Java, Linux/bash and SQL.
&gt; SQL server compact Thanks for that. I found it here: http://www.microsoft.com/en-au/download/details.aspx?id=17876
I guess everyone is different but are these topics really 'advanced'? I would expect these to be known at an intermediate level and I wouldn't hire an entry level developer without this understanding. 
Then I would go for a language that ist based upon other paradigms as C#. That leads you to something functional oder logical... If you want to stick with the .NET world, then I would recommend F# as mostly functional language. Other options could be Scheme, Haskell oder for pragmatic stuff Clojure. For logical stuff I only know Prolog - which I do not like much 😈
How would SQL server compact compare to LocalDB if I wanted to let other people download my app and use it? Would LocalDB work better in that instance and could I still use the same C# code?
Javascript - A must nowadays for the web. I do most of my work in C# now, but do use PHP quite a lot, a good contrast, and especially useful for what I do, being web based.
SQL Compact requires no installation and is a dll file. LocalDB does require installation(i might be wrong here). For a more detailed comparison between the different SQL editions check out the links bellow: http://technet.microsoft.com/en-us/library/bb896140%28v=sql.110%29.aspx http://blogs.msdn.com/b/jerrynixon/archive/2012/02/26/sql-express-v-localdb-v-sql-compact-edition.aspx Also if you are currently using Entity Framework with SQL 2014, switching to SQL Compact is a breeze. All you need to do is import the EntityFramework.SqlServerCompact nuget package (https://www.nuget.org/packages/EntityFramework.SqlServerCompact).
Thanks for that. I'll look at those links.
i would love to try it out! if you have any coupons left hit me up :)
I will take a review today if you send me the code
I'm still learning c-sharp but would like to try out your course if it is possible?
I would love to try it out, hit me up if you have any coupons left ;)
I concur.
I came to C# from Java with relative ease, so I guess you could do the same? Also has web implications, but generally isn't that different.
For data analysis (particularly backend processing type stuff) and functional experience, go F#. For web, go Javascript. In fact, given the rise of JS these days, I'd recommend that next anyway.
sure, i got an udemy account, pm me the coupon, and ill leave a review.
If you want to shift your way of thinking while still having the utility of .NET, give F# a swirl. Read [this useful series](http://fsharpforfunandprofit.com/why-use-fsharp/) where it compares and contrasts with C#, and play around with it. Programming if F#, or any functional language, will change how you write code for C-style languages. You'll think less about state, objects, and patterns, and more about sensible program design and elegant composure of functionality. You'll also be the cause of less bugs in the future, because functional code is less buggy. If you want more motivations, [read what John Carmack has to say about it](http://gamasutra.com/view/news/169296/Indepth_Functional_programming_in_C.php).
just a cursory look. A string array of 52 variables representing 52 cards. A two dimensional array that represents 4 players holding 13 cards each. The code randomly "shuffles" the card array and loops thru the two dimensional array to assign cards to each player. Once all cards have been assigned to the two dimensional array (the players) a loop goes thru each of the players cards that were assigned an displays each one for each player.
This, a thousand times this
i will try it, could you send me the code? thank you.
That's sad.
It starts by making an array of strings. They seem to represent cards, and contain both a suit and a rank. H2 is the 2 of Hearts, SK is the King of Spades, and so on. Then it creates an array of booleans (every value is set to false in the loop that follows) and a 2D string array that's 4 by 13. Then it enters a loop that terminates on the stupidly named "allDone" condition. It generates a random number using a library function then performs the mod operation to put it in the range of 0 to 52. Mod written as % in programs, is a function that basically gives you the remainder of a division, if you can remember doing division with "answers" and "remainders" in primary school. This number is then used as the index in the boolean array. It seems to have 53 elements and use the random number+1 instead of just using 52 elements and the random number. I don't know why. But the point of the code is to randomly select an element in the boolean array, set it to true, and put the "card" text like H2 or HJ into the "shuffled" array. Notes, because as FizixMan says this isn't a piece of code you can learn much from * This representation of the cards is basically only serviceable for this kind of trivial example where the only purpose of the program is to print information. * Never name a loop condition variable something like "all done" or "finished" unless you're writing a trivial example for a textbook. In a program you were trying to write for real you want things to have meaningful names, to help you understand the state of the program. For instance if this variable had been named "cardsDealt" you'd have found it easier to understand the program. * You can pick a range for the random numbers generated by the C# library, you don't need to MOD shit. * This looks to be a contrived example to show you something about arrays and 2D arrays. If you were actually shuffling cards there are some shuffling algorithms which are fun to read about. This one has a particular flaw in that **the program may enter an infinite loop because there's no guarantee that every index in the "chosen" array will be generated**. Random number generates do not eventually produce every number, there is no guarantee that a particular number will ever be generated. 
I don't really understand arrays or the idea of how it randomizes the cards.
If your app version doesn't change, upgrade will merge the settings, overwrite your new values and then save the old settings.
Arrays are a collection of objects. For example, we could have an array of 52 cards. That's a one dimensional array. We could have a two dimensional array. Imagine a table of values in your mind with rows and columns. That's what a two dimensional array is. The syntax would be MyArray[NumberOfRows, NumberOfColumns]. If I were trying to organize my playing cards in my program, I might make my NumberOfRows equal to each suite. So row 0 would be spades, row 1 might be hearts and so on. Then the NumberOfColumns might represent their ranks. In this case, we'd have thirteen. That means whenever I want to work with my spades, I would work with MyArray[ 0 , #] where 0 is the first row (spades) and then # would be the number representing the rank of the card I want. So MyArray[0,12] will be the King of Spades. In the code you posted, the program takes a random card from the array cards and adds it to the two dimensional array "shuffled" where each row represents a player and each entry in the columns represents the 13 cards they are dealt. I agree with the other posters that this code is not very clean or readable and would not recommend learning from this source.
Really? Why? I know the merge process can be a pain the ass (depending on the extent of the conflicting changes), but I don't think it's *that* bad.
The MSDN library has a set of articles that outline the major differences in the way Java functions vs C# that was created to aid Java developers who are moving to C#. [check it out here](http://msdn.microsoft.com/en-us/library/ms228358%28v=vs.90%29.aspx)
Thanks. That'll be a huge help.
SQL, Javascript, Jquery, vb.net 
I definitely agree with you here. These are not the 'advanced' sides of C#. The advanced C# should include topics from architectural stand point of view as well and not just the programming language features. There are tons of articles/blogs about the language features and the maximum level you can go would be 'intermediate' if you are purely telling about the language features. To make it advanced, there must be topics about design principles, architectural best practices within the scope of C#, considering new/existing language features. As a side note, I sometimes get empty looks and awkward silence when I ask about extension methods and their use cases to those who claim to have 7 years of experience in C#. 
Huh... I wonder if this is actually necessary: for (i = 1; i &lt; 53; i++) chosen[i] = false; Wouldn't they all be false by default?
I would suggest Javascript. As a full stack developer. I have the need to use Javascript MUCH more than SQL. Plus to be honest, SQL is very easy.. a few google searches usually answers everything in SQL. 
This is exactly what I thought. Advanced C#? Sounds interesting! Then I see the list... None of it is something advanced.
Welcome to the wonderful world of FileStream :) In W32 native land when you perform a File op it will only read exactly what it needs from the FS in order to perform the operation but FileStream instead loads all the attribs and permissions tree for any operation, the Init method on FileStream is where all the chatty crap is coming from. The only two ways I am aware of which avoid this problem is to wrap W32 native calls for your FS ops or to use a mapped drive.
Thanks for that link! Because of his series on Linq i finally understand 'yield return' :D
Define not much information, my goal is to keep personal info of around 50k people. Personal info includes, name, middle name, surname, email, cellphone number, phone number, city, state, zip code, address, house number. The reason I don't use any of the options you mentioned is because I've never heard of them, so I don't know them nor do I know their capabilities. The only reason I wanted to start with excel is because my final goal was to export the data into excel files. The reason I use sqlite atm is because I have some knowledge of db's.
NetApp
So, do you think it's excessive permission checking? Once for every level on the tree?
If you can store the amount of information you need in an Excel file you can store it in XML, JSON, or CSV. Excel has native support for both XML and CSV so you can import directly and view the data there. If you need to import the data into a different software other than Excel then storing it in an open standard would be best. From what I've read you can't directly output to CSV with .net so you would have to build your own string in CSV syntax then output that to file. Your best bet would be XML since it's extremely flexible, supported by Excel, and you can read/write the files using [System.XML.Serialization](http://msdn.microsoft.com/en-us/library/system.xml.serialization%28v=vs.110%29.aspx) or [System.Runtime.Serialization.DataContractSerializer](http://msdn.microsoft.com/en-us/library/system.runtime.serialization.datacontractserializer.aspx) [Here's how to import the XML in Excel](http://office.microsoft.com/en-gb/excel-help/import-xml-data-HP010206405.aspx)
I think most of it is checking that the path is correct... When you call File.Open, it internally initializes a new FileStream object which calls FileStream.Init: http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs,644 FileStream.Init does a few potentially important things here (among the rest of whatever it is doing): 1. [Line 736](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs,736) - Path.NormalizePath potentially calls several Win32 apis (1: normalize the ~ char if it is a shortened filename; 2: it walks the directory tree to figure out what the filesystem says the full path is) 2. around line 833 depending on which .NET framework - FileIOPermission gets created and potentially walks the directory tree to figure out if you have permission to write the file... 3. finally it opens the file with kernel32.dll::CreateFile (not the c api _wfsopen but pretty similar) some recommendations: 1. avoid deep directory paths 2. don't use tilde "~" char in path or filename 3. Use .NET 4.5.2 if at all possible 4. run in full trust 5. potentially cache the file into a temp file locally (replace file.open with your own method which creates a cached copy and stores a dictionary of original to cached and then copy/open the cached one) 6. if necessary, wrap the kernel32 [PInvoke] yourself (or the c api _wfsopen)... I'd view this as something of a last resort; if you have some heavy multithreading you can get into trouble with these low level apis 7. edit: somewhere before item 6: use the SafeFileHandle versions of the filestream contstructor instead of the ones that provide path strings: http://msdn.microsoft.com/en-us/library/sz7bz1s4(v=vs.110).aspx 
FileStream has a constructor that takes a file handle instead of a path, and seems to skip most of the validation that the other constructors do. Perhaps you can avoid the undesired queries by opening the file via pinvoke instead?
The various File and Directory api classes are pretty strong cases of defensive coding, I'd hazard to suggest mostly to protect inexperienced developers from many potential security pitfals. I am certain there are plenty of cases here where you could do something significantly faster by avoiding the many checks these classes do and expose a lower level API to the filesystem. Just be sure to mitigate the risks yourself if you do.
SQL is not easy at all when you do some more advanced stuff beyond a tiny little web app.
http://msdn.microsoft.com/en-us/library/microsoft.win32.safehandles.safefilehandle(v=vs.110).aspx contains code for initializing a filehandle and doing the PInvoke work which can be passed into the FileStream constructor. 
From my personal experience. I have found SQL by far the easiest to do while working on the full stack. And I have worked on quite a few large enterprise level applications. My experience might be different, but that's what I feel. 
This is a classic case of **read the fine manual** (aka rtfm). From the documentation of `File.OpenWrite(..)`: &gt; If you overwrite a longer string (such as “This is a test of the OpenWrite method”) with a shorter string (such as “Second run”), the file will contain a mix of the strings (“Second runtest of the OpenWrite method”). Solution: Don't use low level stuff like a `FileStream` - use a `StreamWriter` instead. I had no clue about this. All I did was to look at the documentation of the first method you use.
/r/lolphp disagrees :P
Stupid me. Thanks AngularBeginner!
Nice! Does Xamarin give you one when you buy a license? I've been evaluating Xamarin, and I'm about to buy the business edition.
Well it seems like the person who made the example comes from a C++ background or something. At least that is what that coding style looks like to me. Also all of this could be done on 3 - 4 (long)lines with lambda/linq xD
Thing is, you're not initiating a new variable, you're initiating a new object from a class. For example: User Ampix0 = new User(); You're creating a new object (Ampix0) that has a class (User). That's when you use "new".
How long did it take to get yours? Mine still isn't here after 2 weeks :(
There's a bunch of different concepts in play here (literals, value types vs. reference types, boxing), and honestly I'm not sure where to start and how much of it to cover in an attempt at explaining them. The general idea is that most types have to be instantiated via the `new` keyword. A handful of built-in types can be expressed with "literals" directly in the code (e.g. int, string, bool).
While what you say is generally true, it's not exactly the answer to his original question. Not all value types can be defined with literals, many still have to be created with the `new` keyword (even though they technically aren't instantiated). And `string` has literals but is a reference type.
He's having a list of strings.
Very good recommendations, thank you for taking the time to help me! :)
Eh, around 2/3 weeks to Toronto, ON.
come on guys, be nice :) BinaryFormatter has it's strengths, the main being it recreates identical object graphs no matter how complex. Also, there is plenty of wiggle room for maintaining backwards compatibility between versions. As long as the messages are being consumed by NET processes and the load is not to high, the solution should work well enough. The compression on the other hand will probably make the messages bigger :)
I realize that's probably not the way you meant it, but I like the idea of a thousand dollar purchase hinging on the inclusion of a free t-shirt.
Getting something done, and getting something done well are two very different things. IMO SQL is where the difference between the two is most noticeable. If you do something poorly in your SQL code, you will affect not only your program but the effectiveness of others that share the same server instance. In many environments a RDBMS scales vertically, but other resources scale horizontally. That kind of a setup makes SQL efficiency very important.
You meant READ THE FUCKING MANUAL :D ? Cuz this shit's been buggin me for a really long while. But I am pretty sure I use StreamWriter and not FileStream.
A thousand is not enough.
Come on man... I'm eating ... please.... .... ok that was it .... no dinner for me today.... thanks a lot
I generally agree with you, but: &gt;XML has XSL available for extremely fast data transforms which JSON doesn't have For JSON, there's [JSON schemas](http://www.jsonschema.net/). The standard might not be as adopted as XML's XSL, but it's available. 
No offense but going from C# to Java is like going from a Ferarri to a Honda Civic IMHO.
Pretty sure your problem is here &gt;while (!(answer == "N")); since Y is != N, it will keep "doing". Hope that helps guide you
This isn't a T-Shirt... this is a C-Shirt :D 
so... while (!(answer == "Y") || (answer == "N")); ??
XSL is transformation not schema (you are thinking XSD), XSL lets you do things like transform an XML doc to HTML or translate two disparate XML formats between one another. Back before we got Razor XSL was the go-to method for generating control markup on the fly, XSL generates ASPX that you drop in to a LoadControl. Given how fast it is and how few resources it uses its still the go-to for situations where you need to render large amounts of data in a uniform manner too, the MSDN library is an XSL transform of XMLDoc. Also frequently used to generate PDF files (using XSL:FO) in the same situation.
If this is John Sharp's book you are talking about then I don't think you need any programming experience at all... aside from holding the mouse and pressing keys on the keyboard xD At least that is how much I knew when I first started learning C#. I got the 2005 edition and had no previous experience whatsoever. I am going to forget to mention my age at the time for ... personal ... reasons :D
Yep. You're exactly right. That was just a knee-jerk reaction on my part. My bad.
do you have to use a do/while loop? Edit: But yes, that should work fine 
I am going to go ahead an recommend you John Sharp's C# Step by step book(2013 was the latest edition I believe). It is quite easy to understand in my opinion and the author explains everything in a way that even a 7 year old can understand it ...(totally not speaking from personal experience :D) Another good book that is also free is Svetlin Nakov's book. The "level" it's written in is a bit higher but he also explains other concepts that are usefull in programming in general like Quality Code, Algorithms etc. Here is a link to the second book: http://www.introprogramming.info/english-intro-csharp-book/
nah you just need some brackets bool allWantBeer = first ? (second ? third : false) : false; here this better?
Defaulting is only part of it. To get a non-default value, you new DateTime/TimeSpan or use the static factory method which calls new for you. Null is unrelated to the question about when it's appropriate to use new. You use new when 1) you want a value that is not the default (for structs) or null (for classes, here glossing over default for fields vs. uninitialized for locals), and 2) it doesn't have a compiler-recognized source code representation, like numerics and strings have.
XNA is dead... just saying. Don't start learning something that is dead.
It's quite a fine manual, not a f\*cking manual. Really, I don't know where you grew up, but cursing is not nice.
[Here is MSDN's documentation about the constructor (and therefore use of new) for value types](http://msdn.microsoft.com/en-us/library/s1ax56ch.aspx). Specifically of note is the section titled Initializing Value Types, where it points out that locally (where defaulting does not occur as it does for fields), you MUST initialize the value by calling new and a constructor, or for types where the compiler allows it like numerics, use simple assignment which serves the same purpose. You can demonstrate for yourself that the following snippet: DateTime x; Console.Write(x); does not compile. In fact, the compiler will tell you that x is unassigned! This would not be the case if the defaulting behavior works as you insist it does for local variables. You are conflating defaulting behavior, which works only for fields, with when it is necessary to use new. That's only half the picture. 
How does .NET 4.5.2 help this issue? Is there something specific there that makes a difference? 
:D 
Simplest way would be to incorporate the user into the mutex name. I'm not sure if there are any gotchas regarding duplicate names, domains and whatever to look out for, or if you can just use the user name as a prefix. (Edit) MSDN on [Mutex](http://msdn.microsoft.com/en-us/library/system.threading.mutex.aspx) notes: &gt;On a server that is running Terminal Services, a named system mutex can have two levels of visibility. If its name begins with the prefix "Global\", the mutex is visible in all terminal server sessions. If its name begins with the prefix "Local\", the mutex is visible only in the terminal server session where it was created. In that case, a separate mutex with the same name can exist in each of the other terminal server sessions on the server. If you do not specify a prefix when you create a named mutex, it takes the prefix "Local\". Within a terminal server session, two mutexes whose names differ only by their prefixes are separate mutexes, and both are visible to all processes in the terminal server session. That is, the prefix names "Global\" and "Local\" describe the scope of the mutex name relative to terminal server sessions, not relative to processes. Are you sure this isn't already working as intended?
Reading a little deeper, perhaps 4.5.2 is more than necessary. In 4.5 at least under full trust the FileIOPermission object is not created according to [this comment](http://referencesource.microsoft.com/#mscorlib/system/io/filestream.cs,744) in the reference source. 
Yeah it is! And I can definitely relate, I was the same way. It's just that I'm referring to the intended audience as outlined by Sharp, and I think that, despite the statement at the beginning of the book, Sharp does a pretty good job of writing in a detailed enough fashion that even a complete beginner could pick up the book and learn C# fairly well. The one issue I would raise is that since Sharp sets out with the goal of writing for developers completely new to C#, although there are generalized discussions, most of the material is about specific implementation in C#, and I think that beginners courses tend to work the other way, teaching general principles then applying it in a language.
Makes perfect sense. Thank you very much. I didn't know the syntax would work like that exactly.
I think you should remove these lines of code: stringArray[0] = dateValue; stringArray[1] = decimal percentage; stringArray[2] = int number; You're probably getting compile errors there. Also, you don't seem to use those values anywhere else. If you're trying to convert from a string to a date or number value, you should use DateTime.Parse, or double.Parse. See here: http://msdn.microsoft.com/en-us/library/b4w53z0y%28v=vs.110%29.aspx Basically, this is what you would want to do: DateTime dateValue; decimal percent; int number; if(DateTime.TryParse(stringArray[0], out dateValue) &amp;&amp; decimal.TryParse(stringArray[1], out percentage &amp;&amp; int.TryParse(stringArray[2], out number) { // // Use dateValue, percentage and number here // } else { // // Input file is invalid // }
Lmao, I don't understand the down votes :P Whatever :P You're just all jealous ;)
Well, yea... Java to C# is easy xD
:D
I'm fairly positive SQL Compact requires an additional installation. Sqlite ships as a dll and doesn't require an installation
Maybe you can use Javascript to take the page content and send it as an ajax call to the server. However, I suggest you try a more appropriate subreddit than the C# language subreddit; perhaps /r/programmingdiscussion, /r/learnprogramming, /r/webdev, or /r/dotnet.
While appreciate your dedication to .NET related submissions, and I understand that niche, tech-related subreddits benefit from by-definition-spam submissions (as 100% of your submissions are to your own website), this article has very little to do with C# and as such it's been removed. Submissions such as this one are more appropriate for other subreddits; perhaps /r/dotnet, /r/windowsazure, or /r/webdev. I encourage you to re-submit this article an appropriate subreddit and encourage you to continue to submit to /r/csharp when a post is relevant, appropriate, and beneficial to the C# community.
 If I'm reading the above correctly you are parsing a comma sep string. first value is the date? If so you are not setting the datevalue properly here stringArray[0] = dateValue; it should be something like DateTime dateValue= DateTime.Parse(stringArray[0].ToString()); But with a try parse instead, I think you are assigning your values backwardly. i.e stringArray[0] = dateValue; instead of dateValue = stringArray[0]; You'd still have to convert it to a datetime before setting it though.
my OCD took over and i simplified it some https://dotnetfiddle.net/zrHCuw
I've had to design systems that worked on files on NAS filesystems. In my case I needed to access the files repeatedly. I found the fastest performance from copying my working set to the local drive, working on it, then copying the results back. 
Yes, PHP is celebrated on January 6th.
More like April 1st. Because only *fools* use it. ^^Or ^^those ^^forced ^^to ^^by ^^fools.
Yes, yes you can :)
You're right. I didn't quite want to address it unless you pointed it out. If I were to write the GetData method, this is what I would do: try { using (StreamReader streamReader = File.OpenText(filename)) { while (streamReader.EndOfStream == false) { string elements = streamReader.ReadLine(); string[] stringArray = elements.Split(','); DateTime dateValue = DateTime.Parse(stringArray[0]); decimal percentage = decimal.Parse(stringArray[1]); int number = int.Parse(stringArray[2]); Console.WriteLine(dateValue.ToString("d") + " " + percentage.ToString("p") + " " + number.ToString("n")); } } } catch (Exception ex) { Console.WriteLine("Error: Input file not in correct format. " + ex.Message); } A few things to note here: I'm using Console.WriteLine as a shortcut. I tested this as a console application. If you want to use this, you'll have to replace the Console.WriteLine with dataListbox.Items.add() and MessageBox.Show(). The using statement may be new to you. This is another shortcut for declaring the stream reader variable. When the CPU leaves the block of code, it automatically closes the streamReader. This is why I don't have to call streamReader.Close(). With this as the input file: 10/1/2013,78,103172 10/1/2013,78,103172 10/1/2013,78,103172 This is my output: 10/1/2013 7,800.00 % 103,172.00 10/1/2013 7,800.00 % 103,172.00 10/1/2013 7,800.00 % 103,172.00 If you are expecting an actual percentage in stringArray[1], you should divide it by 100 before trying to process it: decimal percentage = decimal.Parse(stringArray[1]) / 100; This would be the resulting output: 10/1/2013 78.00 % 103,172.00 10/1/2013 78.00 % 103,172.00 10/1/2013 78.00 % 103,172.00 
The way unix apps have done it. Drop a file with the id of the process (PID) in the user's local data folder. Every time you start up, check if it exists, check if that PID is running and then don't start another instance if it is. 
Love the tshirt. Up vote for you.
You should check out filehelpers http://filehelpers.sourceforge.net/ http://www.codeproject.com/Articles/12170/FileHelpers-v-Delimited-CSV-or-Fixed-Data-Impor This is a better way of parsing csv or excel files. 
I hope you got your stuffed monkey, too! (Dig into the code deeper, if not!)
Oh?! I never looked for anything other than the tee! Thanks for the tip!
You are right. I was thinking about them backwards. Thank you for pointing it out!
I am creating this program as educational program to help me understand arrays and data formats. But thank you for the link as well. 
Xamarin is the most practical (and about the only) way to achieve what you ask, and it does so reasonably well, but it is expensive. If you can get in discount price, I'd say go for it.
I really liked working with Xamarin. It was very easy to figure out, auto-complete in Visual Studio helped. I threw together a front-end for something at my local .NET group in about twenty minutes. I don't know if it is true, but if you only use the emulator, you can get it free. It isn't until you try to put it on hardware you have to pay.
If you are an absolute beginner with programming in general, I would definitely recommend going with a console application. It's less code to fuss with (and fewer places for things to go wrong). Typically if I want to try something quick and dirty I'll use a console application.
It's like going from LEGO to Mega Blocks.
Nah, you can deploy to a device with the free edition. However, the free edition limits the size of your app (64k max) and doesn't let you call third party libraries. Some of their examples won't even run with the free limitation. You can still sell apps developed with the Starter edition on the respective stores. If you need something more they push their Indie edition, which costs $25/mo on their subscription pricing model.
Alright, thanks
It's all good, I've been working with it a lot lately so it's all fresh on my mind.
I did not know that they were doubling the limit, that's kinda nice. And yeah, I completely forgot about the student deal.
Takes a couple of weeks here in the UK, but it's cool when it arrives. I managed to get 2 because the first time it went through I thought it crashed, and I ran it again later. :-)
To be 100% honest, after working with Xamarin at my day job, a lot of it doesn't really feel ready for primetime yet haha. 
Xamarin have a really nice tool set these days (I personally paid for both iOS and Android 'indie level' subscriptions out of my own pocket, hoping it will lead to some work and a change of job for me in the longer run). They have a very usable IDE in Xamarin Studio, and if you have Visual Studio you can get a plug in for it so that you can develop from VS instead. Recently they released Xamarin Forms, which gives you layout and binding in a similar fashion to WPF, it's pretty neat and extendable, and there are quite a few people busy doing a lot of work on (and with) it right now. I've knocked up a handful of simple Android apps with it, including doing stuff like Firebird database access, and it's easy to do - you can't come straight from (say) WinForms and start kicking out complex Android apps, you do need to have a little empathy with the platform itself and acknowledge how the platform works but it's surprisingly quick to get going and an awful lot of stuff is moved out of your way. You can largely concentrate on the forms and the behaviour of your app, not worrying too much about the implementation on the platform (for straightforward stuff anyway). It is considered a little expensive unless you can find a way to get a discounted version*, but if you got the starter edition now (free) you could knock up a few simple Android demos and run them in Xamarin's emulator (which feels quite a bit quicker than the standard Google one), and you'd be able to tell if it felt 'right' to you without spending any money. *Tip - I paid for an Indie Android subscription a long time ago, and when it came around to annual renewal I faithfully renewed it and then got in touch with them via email and asked if there was any way they could help me add an iOS indie sub too, a little cheaper, to help me out - they were surprisingly accommodating and so all I will say is, it can definitely pay to talk to them, especially if you have already spent some money with them.
If you're interested in data formats, there are two main formats that people use: [XML](http://en.wikipedia.org/wiki/XML) and [JSON](http://en.wikipedia.org/wiki/JSON). XML is an older standard, and is used more frequently. JSON is newer, but has heavy use in the web world. ______ In the .Net world, XML is supported natively. Objects can be serialized directly to XML using an [XMLSerializer](http://msdn.microsoft.com/en-us/library/58a18dwa%28v=vs.110%29.aspx). This is an example of how you might create and save data to an XML file: /// &lt;summary&gt; /// Holds a single record of data. /// &lt;/summary&gt; [Serializable] //This attribute tells the XmlSerializer that the Record can be serialized. public class Record { public DateTime dateValue { get; set; } //This is a DateTime property public decimal percentage { get; set; } //This is a deciamal property public int number { get; set; } //This is a integer property } public class Program { static void Main(string[] args) { Record[] recordArray = new Record[3]; //create an empty Record array for(int i = 0; i &lt; recordArray.Length; i++) //loop used to populate the Record array { Record record = new Record(); //create a new Record record.dateValue = new DateTime(2013, 10, 1); //set the dateValue of the record record.percentage = (decimal)0.78; //set the percentage of the record (Note: I have to typecast 0.78 to a decimal number) record.number = 103172; //set the number of the record recordArray[i] = new Record(); //set the i'th element of the array to the record } XmlSerializer serializer = new XmlSerializer(typeof(Record[])); //creates the XML serializer //Note: I have to tell the XmlSerializer's constructor which type I want it to serialize. string filename = "sample.xml"; serializer.Serialize(File.Create(filename), recordArray); //Creates the file and stores the recordArray as XML } } This is what the sample.xml file looks like when the program executes: &lt;?xml version="1.0"?&gt; &lt;ArrayOfRecord xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt; &lt;Record&gt; &lt;dateValue&gt;2013-10-01T00:00:00&lt;/dateValue&gt; &lt;percentage&gt;0.78&lt;/percentage&gt; &lt;number&gt;103172&lt;/number&gt; &lt;/Record&gt; &lt;Record&gt; &lt;dateValue&gt;2013-10-01T00:00:00&lt;/dateValue&gt; &lt;percentage&gt;0.78&lt;/percentage&gt; &lt;number&gt;103172&lt;/number&gt; &lt;/Record&gt; &lt;Record&gt; &lt;dateValue&gt;2013-10-01T00:00:00&lt;/dateValue&gt; &lt;percentage&gt;0.78&lt;/percentage&gt; &lt;number&gt;103172&lt;/number&gt; &lt;/Record&gt; &lt;/ArrayOfRecord&gt; This is an example of a program that would read in the file: /// &lt;summary&gt; /// Holds a single record of data. /// &lt;/summary&gt; [Serializable] //This attribute tells the XmlSerializer that the Record can be serialized. public class Record { public DateTime dateValue { get; set; } //This is a DateTime property public decimal percentage { get; set; } //This is a deciamal property public int number { get; set; } //This is a integer property } public class Program { static void Main(string[] args) { Record[] recordArray = null; XmlSerializer serializer = new XmlSerializer(typeof(Record[])); //creates the XML serializer //Note: I have to tell the XmlSerializer's constructor which type I want it to serialize. string filename = "sample.xml"; using (Stream inputStream = File.OpenRead(filename)) //Opens the file for reading { recordArray = serializer.Deserialize(inputStream) as Record[]; //Deserializes the recordArray from the XML stored in the file } if(recordArray != null) { for(int i = 0; i &lt; recordArray.Length; i++) //loop used to process the array { Console.WriteLine(recordArray[i].dateValue.ToString("d") + " " + recordArray[i].percentage.ToString("p") + " " + recordArray[i].number.ToString("n")); } } else { Console.WriteLine("Error: Could not read the file."); } } } ______ Unfortunately, JSON isn't supported natively in the .Net world. However, there are 3rd party libraries that actually make it easier to use JSON for this example than XML. You will have to install [NuGet](https://www.nuget.org/) for Visual Studio and the [Json.Net](http://james.newtonking.com/json) package. This is an example of a program that stores data to a file as JSON: /// &lt;summary&gt; /// Holds a single record of data. /// &lt;/summary&gt; //[Serializable] //This is no longer needed for JSON serialization. public class Record { public DateTime dateValue { get; set; } //This is a DateTime property public decimal percentage { get; set; } //This is a deciamal property public int number { get; set; } //This is a integer property } public class Program { static void Main(string[] args) { Record[] recordArray = new Record[3]; //create an empty Record array for(int i = 0; i &lt; recordArray.Length; i++) //loop used to populate the Record array { Record record = new Record(); //create a new Record record.dateValue = new DateTime(2013, 10, 1); //set the dateValue of the record record.percentage = (decimal)0.78; //set the percentage of the record (Note: I have to typecast 0.78 to a decimal number) record.number = 103172; //set the number of the record recordArray[i] = record; //set the i'th element of the array to the record } string jsonString = JsonConvert.SerializeObject(recordArray, Formatting.Indented); //serializes the recordArray directly into a JSON string string filename = "sampleJson.txt"; File.WriteAllText(filename, jsonString); //opens the file, writes the jsonString and closes it } } This is the contents of the file: [ { "dateValue": "2013-10-01T00:00:00", "percentage": 0.78, "number": 103172 }, { "dateValue": "2013-10-01T00:00:00", "percentage": 0.78, "number": 103172 }, { "dateValue": "2013-10-01T00:00:00", "percentage": 0.78, "number": 103172 } ] This is an example of a program that reads the file: /// &lt;summary&gt; /// Holds a single record of data. /// &lt;/summary&gt; [Serializable] //This attribute tells the XmlSerializer that the Record can be serialized. public class Record { public DateTime dateValue { get; set; } //This is a DateTime property public decimal percentage { get; set; } //This is a deciamal property public int number { get; set; } //This is a integer property } public class Program { static void Main(string[] args) { string jsonString = File.ReadAllText("sampleJson.txt"); Record[] recordArray = JsonConvert.DeserializeObject&lt;Record[]&gt;(jsonString); if(recordArray != null) { for(int i = 0; i &lt; recordArray.Length; i++) //loop used to process the array { Console.WriteLine(recordArray[i].dateValue.ToString("d") + " " + recordArray[i].percentage.ToString("p") + " " + recordArray[i].number.ToString("n")); } } else { Console.WriteLine("Error: Could not read the file."); } } } _______ Hope that helps! :)
Well, I learning java for an android project, while I am a C# dev (well, ASP.NET, but not proud on that part, so lets forget it, everyone have to do something for living) - so, I started it some months ago. If you are in C#, you wont have many problem with java (except Android studio and Eclipse, in my opinion, suck compared to VS) - but with a decent C# background, java and android dev is an easy thing. If I were you, I would head straigth for java. And if you want to get into graphics, come and hate the openGL and its implementations (and the wonderful qualcomm drivers) with me! :)
 if (a % i == 0) `a` = 12 and `i` = 2 Therefore `a % i ` = 0 and the first **if** condition is met so the code inside executes. **inside the first if block** `i` = 2 `a` = 12 `a / i ` = 12/2 = 6
I use Xamarin for half of my consulting projects, especially for cross platform apps. It is so nice to use C# instead of java. Where it really comes in handy is with cross platform apps. I create my network, data access and controllers as portable class libraries. I can do the initial development and testing as native windows applications. When I'm satisfied, I then create the UI for Android and iOS. They are designed to be very "thin and dumb". It works great. They do have Xamarin.Forms which is a unified way to create cross platform UIs, but I haven't had the opportunity to use them much. Another interesting project is MVVM Cross https://github.com/MvvmCross/MvvmCross which, among other things, has data binding. 
First off, you're outputting `a` which is the result of dividing your number by your prime factor; I suspect you intended to output `i`. (EDIT: that is, output it _before_ you reassign it back to `2`. Similarly, you want to divide `a` by `i` _before_ you reassign `i` back to 2) Secondly, name your variables with much more meaning. `i` and `a` mean nothing and makes it harder to understand. Thirdly, step through it with the debugger; track your values as they change and verify that your logic is operating the way you expect it. Feel free to do the same work _on paper_ side-by-side as you step through it. Once your paper work deviates from the algorithm, then you can identify and fix the problem. EDIT: And your `break` statements are very suspicious; looks like you are terminating very early. But you'd probably find this once you start debugging. EDITx2: And this line is _definitely_ a problem: i = i++; This is incrementing `i`, then _assigning the ***old*** value_ back onto `i`; you're essentially just throwing out the increment. Instead just have: i++; See [this StackOverflow question/answer](http://stackoverflow.com/questions/14175964/why-dont-a-a-operation-increase-the-value-a) for a more in depth explanation.
I haven't used Xamarin for anything real. I have only tried it for a short time and I really didn't like it. It just didn't feel right. In my opinion if you are going to develop for Android just go with Java. It isn't so hard to learn if you are coming from C#. This is just my opinion.
Saving for later.
Are you using C# for web or application development?
There's a huge depth to SQL beyond the entry level queries. TSQL includes many powerful tools as well, there's much more than sql server management studio as well.
ToArray() isn't returning a string, so your first line will break since you are assigning a non-string value to a string variable. try this: char[] final = (convert(guess1,guess2,guess3)).ToArray();
No I put the guess1 2 and 3 into a method (convert) and I want the output of the method into an array.
hard to know what your trying to do with out know what you are trying to do or being able to see your methods code 
 public string[] convert(string p1, string p2, string p3) { string[] result = new string[3]; result[0] = p1; result[1] = p2; result[2] = p3; return result; } this is what i think you want tho this can be done much better but this looks like a homework problem and assuming they don't want you using params keywords or ICollection collections yet or Linq 
Check out [MusicBrainz Picard](https://picard.musicbrainz.org/). It actually looks at the music, rather than the existing metadata, but it does essentially what you want.
Primarily web, but have just started doing some application development.
I'd learn how to use xaml efficiently. When done right you can save yourself a ton of work and do quite a bit without actually writing any code outside of the xaml.
If you want to go native, you can use Remobjects C#. It can compile to android, mac, iOS or windows phone, but you have to do the native UI for each one. 
There are a lot of APIs you can use to check the ID3 tag data like [Discogs](http://www.discogs.com/developers/), [Gracenote](https://developer.gracenote.com/), etc. but if you just need a GUI application, MusicBrainz Picard is really the best option. If you are looking for something that you can further customize for you needs, you can use something like: https://github.com/MediaPortal/MPTagThat 
I am just starting to lean C#. Do you recommend switching to Java if I want to make Android apps (since I am still new to C#), or does using C# and Xamarin, instead of Java, to develop for android work just as well? I just don't want to be at a disadvantage while starting off making apps, but I love Visual Studios. If you have time, thanks for the input.
Taglib Sharp is a nice little library that will let you read and write ID3 tags, and you can easily install it to your application through NuGet. I used it a year ago and really enjoyed it.