Check the documentation. It's pretty clear on this. https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assemblyversionattribute?view=netframework-4.7.2
As promised. Its ugly but shows the necessary components of it and downloads a test file. class Program { const string baseURI = "https://vredd.it"; const string requestEndpoint = "/ajax_process.php"; const string downloadEndpoint = "/files/"; const string contentType = "application/x-www-form-urlencoded"; const string fileDownloadLocation = @"C:\whereeverYouWantThisToGo\"; static void Main(string[] args) { MainAsync().GetAwaiter().GetResult(); } static async Task MainAsync() { Console.WriteLine("Requesting video object"); var response = await GetVideoResponse("https://v.redd.it/mppst6eqgf421"); Console.WriteLine($"Received object, id={response.id}"); Console.WriteLine($"Downloading {response.id}.mp4"); await DownloadVideo(response); Console.WriteLine("Download complete"); Console.WriteLine("Smash enter, you're done"); Console.ReadLine(); } static async Task DownloadVideo(VRedditResponse vRedditResponse) { try { var builder = new UriBuilder($"{baseURI}{downloadEndpoint}{vRedditResponse.id}.mp4"); var request = WebRequest.CreateHttp(builder.Uri); using (var response = await request.GetResponseAsync() as HttpWebResponse) { var fileStream = new StreamWriter($"{fileDownloadLocation}{vRedditResponse.id}.mp4"); var responseStream = new StreamReader(response.GetResponseStream()); await fileStream.WriteAsync(await responseStream.ReadToEndAsync()); fileStream.Close(); } } catch (WebException ex) { throw; // do something here or don't, Im not your dad } } static async Task&lt;VRedditResponse&gt; GetVideoResponse(string redditVideo) { try { var builder = new UriBuilder($"{baseURI}{requestEndpoint}"); var request = WebRequest.CreateHttp(builder.Uri); request.Method = HttpMethod.Post.Method; request.ContentType = contentType; var requestStream = new StreamWriter(await request.GetRequestStreamAsync()); var content = $"url={redditVideo}"; await requestStream.WriteAsync(content); requestStream.Close(); using (var response = await request.GetResponseAsync() as HttpWebResponse) { if (response.StatusCode == HttpStatusCode.OK) { var responseStream = new StreamReader(response.GetResponseStream()); var text = await responseStream.ReadToEndAsync(); return JsonConvert.DeserializeObject&lt;VRedditResponse&gt;(text); } else { throw new Exception("Well shit"); // do something here or don't, Im not your dad } } } catch (WebException ex) { throw; // do something here or don't, Im not your dad } } public class VRedditResponse { public string id { get; set; } public decimal conversion_time { get; set; } } }
Well, a tutorial page is made out of HTML and js, exactly the same thing that make Monaco (the vs code engine), so if you really want, you can do it. Btw all of the Angular tutorials have links to tools like these.
I wasn't using Safari, but Chrome. It worked great with Firefox and Edge, though. 
Of course and I spent all day getting into that stuff. But you need to start somewhere and I am one of those people who enjoys doing thinks more than reading about how to do them. ;) I wanted to get to know a bit of the syntax before I totally dive into importable modules and stuff like that. 
You can't do it with WPF itself, but it isn't too difficult using NAudio.
There are some great courses on pluralsight. Huber I think is the guy's last name.
The "View" and it's corresponding .cs file is the same thing - it's a `partial class` with code in more than one file. Things you define in your .xaml file are available in your .cs file. The .cs file is called the "code-behind" MVVM basically means you want to achieve decoupling of your logic and your presentation. What is coupling? It means that by placing your logic in a view's code-behind your logic is now a part of that specific view, and you might be tempted to refer to named controls in your logic. By having a named progressbar and referring to this control in your code like `progressbar.Value = 85;` your code is now dependent on the existence of this control in your view. &amp;#x200B; To avoid this and the temptation of referring to controls directly we create a completely separate class in its own .cs file which by convention is called &lt;ViewName&gt;ViewModel. Let's say we expose a `public double Progress` property. Now *any* kind of control can bind to this progress value, and our logic code need only update its own property as it does calculations, without worrying about controls existing or not. Now you're free to make your view however you like; you don't have to always make sure a progressbar exists. That's one simple contrived example, but it's the gist of it; logic is contained in its own class and can be used by itself without necessarily having a view at all. A view can exist without creating unnecessary controls or binding to every exposed viewmodel property. Multiple views can use the same viewmodel and represent the data differently.
&gt; Comparing to Optional, I like that you can't wrap null and have HasValue Are you saying Optional does let you do this or?
Can you explain what this offers that the standard library doesnt? I’ve never had issues simply using standard Tasks for everything. 
You got that backwards.
i love you i was having a hard time figuring out how this all plays together as all tutorials talk about .asp forms... and even after digging around all i could find was the main.js and the ajax_process.php... which i wasnt sure if thats the url im supposed to be submitting to... and then it updates the page with a alert instead of just giving the url in response... the longer i was looking at this stuff the further away it seemed to get lol so to get your code running heres what i had to do: first i had to install nuget package Json.NET and include this up top (to get rid of the compiling errors): using Newtonsoft.Json; using System.Net.Http; so far so good, compile and go and it actually works... well kinda... not rly: it runs sucessfully and returns a file with size of 19.2MB (using https://v.redd.it/mppst6eqgf421 as example here). great... but weird the the video does not play in VLC and is not recognized by youtube. downloading the same video manually results in a file sized 10.6MB that plays fine in VLC comparing the two videos (manual and script) i dont think what we downloaded is even a video https://i.imgur.com/GY48lMv.png this makes no sense to me whatsoever as it should downloading the same link (https://vredd.it/files/mppst6eqgf421.mp4). bringing up that url manually after the clip has already been converted once works (the site keeps the clips for a month according to the faq) works fine i tried giving it a id for video thats never been converted but that just results in a 404 (as it should) and not 19MB of gibberish any idea whats going on here? 
I love you both
I'm gonna take this opportunity to plug TryItOnline: https://tio.run/#cs-csc It works great on mobile devices, supports nearly 600 languages (SNOBOL, anyone?), a full minute of execution time, and in particular C# mono has a bunch of Nuget packages like morelinq and System.Memory. 
At the very least you'll need a Windows virtual machine.
I own 2 workstations: Custom Ryzen 7 1700 (4ghz) 16gb DDR4 3200 MHz Nvidia GTX Titan X Samsung 960 Pro NVME SSD 4 xSATA SSD’s HP E3-1245v3 16gb DDR3 Nvidia Quadro M2000 Multiple SSD’s It runs like crap on both of them even with small projects. It has always run like crap on every pc I have tried it on. If there are some magic settings that I am missing please let me know. 
Span&lt;char&gt; fullName = "John Jacob Schmidt".ToCharArray().AsSpan(); Span&lt;char&gt; middleName = fullName.Slice(5, 5); middleName[2] = 'k'; That example can't be right, considering that the string being sliced doesn't even contain the letter K.
No you don’t. What are you doing? 
I’ve actually used python as pseudo pseudo code...
I’ve actually used python as pseudo pseudo code...
I use Fody weavers for a bunch of stuff (INotifyPropertyChanged, log injection) and it has a nice plugin for [handling ConfigureAwait setup](https://github.com/Fody/ConfigureAwait) As well
Removed: Rule 4.
In EF when you are creating the mappings for your entities, there is a method called `HasColumnName(string)` which you could use to map `Id` to `_Id`. If you aren't using EF, there is most likely (read: hopefully) a comparable method/attribute/etc.
I would prefer C#, unfortunately, since I want to do a standalone application and not have to do an electron type thing.
Yeah, don’t worry about it. Object orientation is a concept that takes years to master. Just keep working at what you’re doing and you’ll be fine.
That's correct, Thomas Claudius Huber. I'm fairly new to programming as well and his video taught me a lot. He has several on PluralSight about WPF, XAML, and MVVM
&gt; For example, I’ve read in some places that the CS file that comes with the View is the View Model No, thats the View code behind, not tbe ViewModel. &gt; and I’ve also read that each View needs a totally separate file as the View Model and very little code should go in the CS file that's the correct way. View code behind shouldn't have business code at all, just code relted to view.
I saw you say this a few times on this thread and I'm confused. For one, I don't know of a "Visual Studio" and tbh in either between community and enterprise has C# not been selected, mostly I have to hunt down and selec C++. Can you enlighten me? 
Reeeeee
It works for me. Try this: **CefSharp v67.0** using CefSharp; using CefSharp.WinForms; // or CefSharp.WPF add this: private CefSettings settings = new CefSettings(); private ChromiumWebBrowser browser; private bool IsWebBrowserRunning { get; set; } = false; mouse click event. I use a button to start the wb, named button1) private void button1_Click(object sender, EventArgs e) { Thread browserThread = new Thread(InitializeWebBrowser); browserThread.Start(); } then add a panel (mine is named panelWebBrowser) and finally this method: private void InitializeWebBrowser() { if (!IsWebBrowserRunning) { //settings.CefCommandLineArgs.Add("proxy-server", "http://193.213.211.94:60659"); settings.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36"; settings.PersistSessionCookies = true; this.panelWebBrowser.Controls.Add(browser); Cef.Initialize(settings); if (panelWebBrowser.InvokeRequired) { panelWebBrowser.Invoke(new Action(() =&gt; { browser = new ChromiumWebBrowser("https://ebay.com") { Dock = DockStyle.Fill, Parent = panelWebBrowser }; })); browser.BrowserSettings.FileAccessFromFileUrls = CefState.Enabled; } IsWebBrowserRunning = true; } } [It works!](https://i.imgur.com/XiCDgRX.png)
Dealing with asynchronous activities in a mostly-synchronous framework has some interesting challenges when you tack on error handling. From what I've read of the library so far, it helps developers reason about async/continuation error handling in a more reasonable way.
Some(null) is a state that can be represented by Optional.
Yes, but do you know at what size it will struggle at? I think the number will shock you. I will immediately question any linked list I see in a code review. Either an array will be faster, or there is a better way to solve the problem anyway. Thankfully, my team knows better and never bothers with that awful data structure.
Also try out LinqPad, amazing small but powerful editor. Https://www.linqpad.net
Thanks man .
Why is it called `SafeFireAndForget` when it's used to either *not* forget about a fired task and to handle its exceptions, or to crash the application if you don't specify the optional exception handler?
Word of warning: this appears to be the same guy that recently gave a talk on async/await best practices that was absolutely awful. I only watched half the talk but virtually everything the guy said in that time was either flat out wrong or l missed out important caveats and gotchas. [Link to the discussion at the time](https://www.reddit.com/r/dotnet/comments/9vw23v/correcting_common_mistakes_when_using_asyncawait/?st=jps0r7c9&amp;sh=a3058f2e)
No, you actually didn't come across like that at all, so my example of a Rewrite Everyting All The Time-developer was hypothetical (maybe a bit influenced by certain co-workers). I just wanted to add this perspective since all other answers was so technical. And I believe it's important to have a growth mindset, even if you have empathy with those like me, and can communicate in a way that don't trigger an unnecessary defensive position in the other, you can always get better! For instance, have you read about non-violent communication? That shit resonates with me on a fundamental level and I didn't discover it until like a year ago. 
My advice is remember, that method that doesn’t look too important was written for a reason, step through each line using the debugger and take your time refactoring it
Or consider using semver guidelines for your versioning strategy https://semver.org/ 
Let me give you a concrete example of bad vs good: Let's say your UserControl has a ProgressBar called `progbar` and you start to refer to `progbar.Value = progress;` in your code. Now your logic is dependent on a progressbar called progbar existing. Maybe you put some logic in eventhandlers for buttons. Now your code is dependent on those existing, and that controls exist to raise them. &amp;#x200B; This is called coupling - your logic knows about the user interface, your user interface knows about your logic. They *must* exist together for your code to work. &amp;#x200B; MVVM separates these layers. Instead of a progressbar you have a `public double Progress` property on your viewmodel. *Any* control can bind to this property, you're no longer required to have a progressbar, and your logic now refers to a property in the same class, no external dependency on a user interface control. Instead of specific code like `public bool IsProgressBarVisible` you can now refer to your logic alone with a `public bool Executing` or `public bool ReportRunning`, then any kind of control can choose to bind to these, use a converter for visibility or pick anything else, without making it seem weird - it would feel strange to bind a cancel button's visbility to "IsProgressBarVisible," but not "Executing" A viewmodel could be used alone without a presentation at all. It's where you put the code that define your application, the reason it exists in the first place; imagine wanting to reuse this logic for a console application, ideally you wouldn't have to rewrite anything, you just new up the viewmodel and call its methods.
 I couldn't get your method you provided in your example to work. This code is injecting multiple interfaces etc, how can apply your method to this? public class ViewModel5: ViewModelBase { private readonly Itest1 _test1Interface; private readonly Itest2 _test2Interface; private readonly Itest3 _test3Interface; public ViewModel1 ViewModel1 { get; set; } public ViewModel2 ViewModel2 { get; set; } public ViewModel3 ViewModel3 { get; set; } public ViewModel4 ViewModel4 { get; set; } public ViewModel5(ViewModel1 viewModel1 , ViewModel2 viewModel2 , ViewModel3 viewModel3 , ViewModel4 viewModel4 , Itest1 contractGroupAccessor, Itest1 test1 , Itest2 test2, Itest3 test3 ) { this.ViewModel1 = viewModel1; this.ViewModel2 = viewModel2; this.ViewModel3 = viewModel3; this.ViewModel4 = viewModel4; this._test1Interface= test1 ; this._test2Interface= test2 ; this._test3Interface= test3 ; } } 
But that's going to be quite a bit of work. Sounds like you're trying to automate something that the website doesn't want you to automate, why is that? 
I often find myself doing similar, but if you're passing that much in then maybe your ViewModel is taking on too much responsibility and its functionality should be broken off into one or two sub-ViewModels. The other option is creating a more bespoke object to pass in but that can mean you have a few very coupled classes and can get messy. A third option is to only pass in the IoC Container/Factory object and let the ViewModel construct itself using requests from the IoC Container. It puts a dependency on the IoC Container though, so I'm less keen on this approach.
Well, yes that is technically the way to do it. BUT....If your classes need that many dependencies, you're putting too much brains into one class. Take a look at this from MSDN: [https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.2#design-services-for-dependency-injection](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.2#design-services-for-dependency-injection)
I wrote some very quick notes in Sublime Text and found that what you want is not to remove, change or delete the old list but just to use the new one, right? I am pretty sure it would achieve the same functionality. Here are my quick notes: &gt; * Add new items that doesn't exist in the collection &gt; * Change an item if both items have the same ID &gt; * Remove the item if the ID doesn't exist in the new collection. &gt; OldList List&lt;int&gt; { 5, 9, 13, 17 } &gt; NewList List&lt;int&gt; { 1, 5, 11, 13 } &gt; Apply rules above here &gt; FinalList List&lt;int&gt; { 1, 5, 11, 13 } &gt; The final list and new list retrived from whatever source are equal.
Something is wrong with your class structure and responsibilities if it takes that many different dependencies. There's likely some grouping and some functionality that you can put together in a class on its own. It's like your building a car and injecting all the parts (hoses, radiator, belts) instead of an powertrain, chassis, and wheels. 
Where can I find this? I just want to update my collection to be consistent with the new collection. Which means, unchanged items stay the same, but ID which doesn't consist in the new collection should be removed, and new ID in the new collection which doesn't exist in the old collection should be added. I want to update the old collection without having to "new" a collection if you understand what I mean! :)
well, it's not like that website is against automation[.](https://it.now) nowadays every login form has a CAPTCHA to prevent spam from robots and that's totally fine I don't even want automation in the login form. as I said the login form will be showed as is using WebBrowser class. and you know this is a long story why I want to put a program as an interface between user and website but it is for an absolute good cause.
Yeah it’s not very safe. The exception should be swallowed when the the handler is null. You don’t need “async void” for fire and forget. Just ignore the returned Task.
Why not use a LocalDB instance. This way you can still use SQL to query it which will make it easy to see if you need to add/update data.
Just a heads up, Fody is moving to some weird ['community-backed paid model'](https://github.com/Fody/Fody/#community-backed) where you have to pay to be able to use it or open any issues/PRs, even though the project remains under the MIT license.
This doesn’t sound like a .NET Core issue... try building that project, see if it gets rid of the editor errors. Sometimes VS does that and you just have to build to make them go away
Well, would it work when I deploy the application for use?
Yes, the LocalDB database would be deployed with the application, or you can create it in code when the application first runs. It's a database that runs locally, it's literally just a file or two. You could also use [SQLLite](https://sqlite.org/index.html) which is used by loads of companies for exactly this sort of scenario. 
Well, this doesn't sound like a bad option. What is the difference between a cache and a localDB?
A cache is simply storing frequently accessed data close to its user. You can have in memory caches, disk backed caches, and then a whole lot of others. LocalDB/SQL Lite are just databases that run in your application, so they can act as caches, but actually offer a lot more because they're actually database systems. The benefit of something like SQL Lite is that someone else has done all the work in making it fast and reliable and you get SQL for querying built in.
This is the correct answer. I feel OP might have misunderstood or perhaps dug themselves into an architecture hole. Also, don't have setters for things being passed in via DI. Even better, don't have properties to access any of the injected dependencies at all.
hmm that's annoying, I was hoping to give the library a try. 
Why are you making two collections at all? Why not simply manage the first collection, instead of making the second? You can override the add method on an extended collection to do this.
Don't you still need to install LocalDB(sql server) on the machine or is there a way to run in without actually installing?
Did you specify the correct exchange version in the exchange service? Step 4.2 here: https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/get-started-with-ews-managed-api-client-applications
Yeah. I ended up converting the EmailMessage to another class with the properties that I needed. :-)
Well, this is embarrassing. 
I'm not actually sure what is required for LocalDB, I'm corporate so I just assume it's there :) SQL Lite doesn't require anything to be installed, you just need references to a couple of DLLs.
Yeah, I thought the same, but it didn't make a difference, so I created a MSTest project instead....but got the same issues.
WTF. Thanks for the heads up
Check out rich text controls like CKEditor. One of the most important lessons moving from being a programming student to a professional programmer is that someone else probably already solved the problem you're working on: don't reinvent the wheel.
Is the time taken to develop this going to be less than the total time spent performing captchas? 
Can confirm. This is the github equivalent of meeting a reasonably good looking woman at a bar, then going back to her place and finding heroin needles and two kids she claims aren’t hers.
Or, you know, use a dictionary.
Have you looked them up or contacted them to determine if they have a way to facilitate automation? Like am API, RSS feed, or whatever applies for your situation.
I can do only one collection, I just thought maybe it would be better to use two, in order to compare. How do you suggest me to do this?
Do you know of a good guide for proper use of async and awaitables? I'd like to learn how it works, but I want to learn it the right way first...
I'd do something like this: `public MyCollection : ObservableCollection&lt;IMyObject&gt;` `{` `public new void Add(IMyItem item)` `{` `if (this.Items.Any(i =&gt;` [`i.Id`](https://i.Id) `==` [`item.Id`](https://item.Id)`))` `{` `this.Items[i] =` [`item.Id`](https://item.Id)`;` `}` `else` `{` `base.Add(item);` `}` `}` `}`
You might also try downloading the latest SDK for .NET Core, restarting VS 
Thanks, i have looked up OpenNAT before but i have no clue how to implement it into my solution. Well the program was intended to be a modular network solution, so i could implement it and change as little as possible for my needs. So at this moment im doing it for a game project im working on, but i would like it to be open for other applications as Arduino programming, and whatever possible. &amp;#x200B; All im using at the moment is simply, the using the standard "system.net", "system.net.sockets" libraries. &amp;#x200B; And for why im using UDP over TCP, is because i feel like through researching online and discussing with a couple of friends in the game development industry, most of them told me UDP would be regarded more useful since the data loss is minimal, and TCP is a lot more costly since all of the checks it does to ensure the data being sent is correctly sent. &amp;#x200B; For OpenNAT, is there ways for me to get a tutorial or code snippets or whatever to show me how it could be implemented? &amp;#x200B; Code shown below: &amp;#x200B; So the server is tugging on it's own thread, the code block below is working fine in the background The code below is there to recieve incoming data. public void InitializeServer() { int port = MainWindow.SelectedPort; if (myProtocol == Protocol.Udp) { //Since UDP doesn't check if the data sent is delivered //you need to make that the server is acting like a middle man //so when a client wanna send data over to another client //the client then send to the server, whom later distribute //the data to the destined client(s). IPEndPoint sender = new IPEndPoint(IPAddress.Any, port); while (true) { //Sitting here and waits for info to be recieved byte[] data = myUdp.Receive(ref sender); //Builds a string upon the data it recieved string rec = Encoding.ASCII.GetString(data); //Writes out the information it recieved onto a log //In this case it showcases the infos start endpoint, and what the message is CommandManager.Instance.AddCommandToLog(string.Format("{0} says {1}", sender, rec)); //Do the things the information wants to be done. DecypherIncomingCommand(new Command(rec), sender.Address, sender.Port); } } } &amp;#x200B; Below is a code block of how the server sends data over to the client. Ip Addresses and ports is stored when a client "connects"(when the client program starts it sends a small hello world, so the server knows the ipv4 and the port of the data's sent from) public static void SendContent(string content, IPAddress ipAddress, int port) { UdpClient myUdp = new UdpClient(); byte[] data = Encoding.ASCII.GetBytes(content); port = ClientPort; IPEndPoint ipEndPoint = new IPEndPoint(ipAddress, port); myUdp.Send(data, data.Length, ipEndPoint); } For the client program to send data i have a exact copy of the code above, only changes is that it has knows before hand the ip and port, so it's hard-coded into the program. &amp;#x200B; And for the client program to recieve data i have a Async recieve function setup. Shown little below void AsyncRequestReceiveData(IAsyncResult result) { IPEndPoint receiveIPGroup = new IPEndPoint(IPAddress.Any, 8888); byte[] received; if (this.udpRequestReceiver != null) { received = this.udpRequestReceiver.EndReceive(result, ref receiveIPGroup); } else { return; } this.udpRequestReceiver.BeginReceive(new AsyncCallback(AsyncRequestReceiveData), null); string receivedString = Encoding.ASCII.GetString(received); this.QueueOnMainThread(() =&gt; { // Fire the event this.OnRequestReceived(receivedString); }); } &amp;#x200B;
I feel like that makes the most sense too. Thank you! And then I guess you would use the ICommand interface to make commands to the View Model from the code behind? Like when a button is clicked?
Well to be fair though, things do change. You do have to update code with new ideas, insights and rules that meet your needs, as well as adjust to new and better ways of doing things. 
You can pass in an interface where the resolved object uses the IoC container. Then only the interface implementation has a dependency. 
Yeah, that's kinda where I was going with the second option. Converting all of the dependencies to a single dependency and letting that sort out how it builds itself, but then you'll just be kicking the can down the road. It's probably better to break up the functionality into more manageable sized classes.
Yes, absolutely. By no means can you *always* find existing libraries to meet every demand. Otherwise being a programmer would be more like being a software procurement agent.
… with the exception of dependencies that are exposed to concrete implementations (e.g. injecting a logger into a base class should have a corresponding protected property)
There's kind of some rules, because DI tends to go hand in hand with unit testing. DI makes it easier to construct classes that have a lot of dependencies. That doesn't mean it's OK. In your unit tests, you'll still have to test your types, and if each one takes many dependencies you'll find your testing efforts are 90% fake object setups. That's a smell. On the other hand, not all dependencies are created equal. In this example, you depend on 4 other ViewModels. If each of those 4 is so simple you don't even need to write fakes/mocks to set them up, the tests aren't particularly complex to set up anymore. Also, the larger your application the more dependencies top level types are likely to have. Those top level types are usually so complex they require integration testing, and we relax the rules a bit for those. So this is a bad example, if only because it's relatively trivial. It's too hard to tell if your 7 dependencies are "too complicated". The unit tests would tell you. If they were "too complicated", the technique to addressing it would be to try to figure out if anything in the list can be combined into one object. A long dependency list suggests maybe we don't have enough layers. Example: Suppose you depend on a thing that loads a file based on the current time. That could be 2 dependencies: some kind of `ITime` and an `IFileSystem`. Let's say there's also an `IPathGenerator` and make it 3. The unit test is a little tough because we need to tell all three of these things what to mock. Our ViewModel has complex logic because it needs to get the time, generate a path, and load a file. But we could combine all of those into "a type that loads the newest file". Now 3 dependencies collapse into 1. 
Take a peek at how both [NETworkManager](https://github.com/BornToBeRoot/NETworkManager) and [TailBlazer](https://github.com/RolandPheasant/TailBlazer) are built. Also the [MahApps.Metro](https://github.com/MahApps/MahApps.Metro) sample project.
API
Can i know what API and how to use it?
Is this from a Razor view? The easiest way would be to `POST` the data using `fetch` or `XMLHTTPRequest` (depending on your browser support) to an `API Endpoint` in C#. The full MVC API document is here: https://docs.microsoft.com/en-us/aspnet/web-api/overview/getting-started-with-aspnet-web-api/tutorial-your-first-web-api
&gt;Razor view Not sure what you are asking about but I am using ASP.NET framework
JS is run on a client, .NET is run on a server. You need client-server communication. You really should learn basics before doing any *server-side processing*.
Are you trying to send your JavaScript variable from a `.html` file or `.cshtml`? The latter is a `Razor` view, a format that allows .NET to compile both C# and web technologies into a single browser-friendly format. Either way, `POST`ing the data to your backend would be the easiest way of managing this.
I am trying to send Javascript variable from .aspx to C# .aspx.cs file
So WebForms. Which is basically deprecated. You'll need to specify that.
Yes you can use an API endpoint for that.
He is clearly a beginner trying to gain some experience! 
Well then what you specified is exactly what I would do. Make a hidden input. Write to that via JavaScript. Give it an id and runat="server" then you should be able to access it from backend as any other control.
If the variable is an object, and not just a string or integer, etc, you'll have to serialize the object before you put it into the hidden field. You can use json.stringify or similar to do this.
If you just want to check one simple thing, C# Interactive is a good option. &amp;#x200B; If you haven't used it before, try *View -&gt; Other Windows -&gt; C# Interactive \[near bottom\]* &amp;#x200B; Good quick demonstration: [https://www.youtube.com/watch?v=zUO2s0oIRZs](https://www.youtube.com/watch?v=zUO2s0oIRZs)
I know, that's why I'm telling him to go learn basics before doing advanced stuff. I mean he doesn't know what an API is. He should do "Web development for beginners" or whatever before trying to actually make something happen. He will fail and waste his own time doing everything wrong.
I hope he is doing that on the side. But as we commonly advise, you learn best by picking a project and just starting. He may not have realized how difficult it would be when he picked it. And he can learn a lot by trying to figure out this specific thing even though it’s painful. This task can be advanced for him (he doesn’t even know what razor script is and he’s on .net) but I think it’s small enough that he can learn while still managing to get it done the same day he asked. I would link and throw hints at him but I’m on mobile so I’m too lazy haha. 
An api will be the server side controller that you would send your data to. You'd have to develop this yourself. You can use AJAX on the front end to get the data sent and then once you receive it on the API side, you can do whatever it is you need to do with it. 
Or use a SqLite database. It’s a single file and easy to deploy. The application can create it if it doesn’t exist via SQLiteConnection.CreateFile(), so support becomes easier - you can instruct the user to delete &amp; restart the app. 
Are you forced to use WebForms? If not, then I wouldn't bother learning it and just move on to asp.net MVC and use razor pages. It will save you so many headaches. 
Sure you learn best by doing, but only after grasping the basics. You don't start building a house without knowing what a hammer is. Get knowledge from a course/university/tutorial -&gt; apply it. Rinse and repeat. You can't *apply* nothing. You will hit yourself with the hammer and waste your time for no reason.
I guess but personally I inject logging where it's needed via composition, not really felt the need to pass logging in via inheritance.
Do you have your hidden field set to runat="server" ? If not, there will be no object the code-behind file can access. The canonical way to do this in WebForms: Create a hidden field in your .aspx form like this: &lt;asp:HiddenField id="myHiddenField" runat="server" /&gt; You will need to put a line like this in your JavaScript in order to access the ID of the field since WebForms generates its own ID in the HTML it outputs from its helpers: var myFieldIdInJavaScript = &lt;%= myHiddenField.ClientID %&gt; Now you'll have an object you can access in your C# code-behind file as: myHiddenField.Value I think that's going to be a lot easier to work with than setting up an API at this point, especially if you have only one value you need to pass back. 
You've never had a task where it was outside your knowledge base and you had to learn on the fly to do it? When you pick a project, and then you start working on it, and you find out that you need to do something and you can't do it, you don't just give up on the project or stop working on it. You try to figure out what knowledge is associated to the feature, and you learn that, and you continue on with what you're doing.
Correct me if I read the question wrong but you want to use the WebBrowser class as a bridge between a website (login page) and your program? If so, I believe the WebBrowser class has a GetElementByID method that allows you to interact with elements such as buttons, text boxes, etc on web pages. 
&gt; You've never had a task where it was outside your knowledge base and you had to learn on the fly to do it? Sure I have. And every time I've felt my time fighting with something that could have been easily explained by someone with more experience was time completely wasted. &gt; You try to figure out what knowledge is associated to the feature, and you learn that It's not that hard to figure out what knowledge is associated to the *feature* for OP, feature being the most basic client - server communication. You just google "how to website" and you will find your answer there, which OP obviously didn't do.
&gt;var myFieldIdInJavaScript = &lt;%= myHiddenField.ClientID %&gt; Needs to be: &gt; var myFieldIdInJavaScript = document.getElementById(‘&lt;%= myHiddenField.ClientID %&gt;’) Otherwise myHiddenField.Value won’t work as intended. 
To reference a public variable in the code behind you can do this '&lt;%= VariableName %&gt;' Make sure you put quotes around it 
Ajax call
It’s been a while, but I believe you can make an Ajax call to a web service (.asmx).
It may seem obvious to us because we are experienced, but he may not know what he's looking for. I do see that he tried, he listed the very few things he did as solutions because to him those aren't "basic steps", but those were the things he's done.
I wasn't pulling the value, just giving the OP a way to access the ID of the hidden field (hence the name of the variable). I didn't know whether OP was using straight JS or jQuery or some other tool to set the value of the field.
&gt;I think those were their own learning experience in a way. Yes it sucked to go about a roundabout headache, but there is a level of preserverence you learn and those lessons sort of tend to be the ones you learn the best. The feeling of accomplishment after seeing the elegant solution adds to it, I'm sure. You spend 8 hours a semi-colon and you never need that ever again. Well, this (almost) changed my mind. I guess you need a bit of both worlds, true. Still, you should make your life easier whenever you can.
You’re right. I did say it earlier but I do agree that I really hope he is also doing some general basics course online or something somewhere.
Created a quick WebForms project to test this out. On the aspx side we have this: &lt;input type="hidden" value="some hidden controls value" id="hdnTestControl" name="hdnTestControl" /&gt; &lt;asp:Button ID="btnFoo" Text="Postback event source" runat="server" OnClick="btnFoo_Click" /&gt; Then, on the server side, in the event handler, we have this: protected void btnFoo_Click(object sender, EventArgs e) { string hiddenControlValue = Request["hdnTestControl"]; } This brought me the value of the hidden control. One *very important* thing to keep in mind is that it requires the name to be set. Just setting the id did nothing when I first attempted it. And this is how you read values from pure html control on your server side.
ASMX Web Service for Web Forms, Web API for MVC. I’ve never done it, but it would probably be better to start a separate project in Web API, and make an Ajax call from the front end to it. The ASMX Web Services are a pain in the ass to work with, and the last thing you need is another pain in the ass... since you’re working with Web Forms.
If you're using `&lt;input type="hidden"&gt;`, the code-behind can't see it. Use `&lt;asp:HiddenField ID="whatever" runat="server"&gt;` instead. Then your code-behind can refer to "whatever" as a control object and get the whatever.Value from it. To allow your javascript to write values into it, you will need to dynamically generate some javascript from the code-behind. Why? Because controls in the asp: namespace get generated ID's like "ctl00$ctl01$someName$ctl00$whatever". So you'll need to have something in your code-behind to write out whatever.ClientID into a snippet of javascript somewhere. Usually, I like to define a mapper that just emits `var whateverElement=document.getElementById("` + `whatever.ClientID` + `");` into a script tag somewhere in the page. Then the javascripts can all just use whateverElement to refer to that hidden field (or whatever it is) later in the code.
This is assuming he is using ASPX of course.
Why did you pick Web Forms?
He specified that he was using .aspx and .aspx.cs in another comment chain
I am sure this is XY problem. if you explain what is the context we can be of a great help
Nice blogpost, I love it :) ! Lots of awesome bits.
This is what OP is using.
Plus you get access to a dependency injector. When I was doing web forms in school, I couldn't find a way to do DI. In the MVC/WebApi world, it's stupid easy. 
If you're using the WebBrowser control, you can just use it's object model to access elements on the page. It's very easy. This article covers the basics... https://social.technet.microsoft.com/wiki/contents/articles/15070.dev-tutorial-webbrowser-web-scraping.aspx You should also refer to this Stack Overflow post (first answer) about making the webbrowser control behave more like IE 10/11 rather than older versions... https://stackoverflow.com/questions/28526826/web-browser-control-emulation-issue-feature-browser-emulation/28626667#28626667 Alternatively, you could use CefSharp which lets you embed a Chromium browser in WinForms and WPF. The downside to this is that you don't have a .NET object model to interact with the page - you have to use javascript (see the documentation for examples)... https://github.com/cefsharp/CefSharp Browser automation is pretty easy these days - if you want more examples, do a google on ".NET page scraping".
Yep exactly :) You can create the database file in LocalDB too, but I actually prefer SQLite, so I don't know why I made it my second recommendation :) 
Check out yetanotherforum.net it's an open source forum you might incorporate or learn from.
Well that's the dumbest thing I've read in a while, looks like I'm going to start pulling Fody out of my projects. &amp;#x200B; &gt;Do I need to be a Patron to contribute a Pull Request? &gt; &gt;Yes. You must be a Patron to be a user of Fody. Contributing Pull Requests does not cancel this out. It may seem unfair to expect people both contribute PRs and also financially back this project. However it is important to remember the effort in reviewing and merging a PR is often similar to that of creating the PR. Also the project maintainers are committing to support that added code (feature or bug fix) for the life of the project. Ha. No.
stackblitz won't allow you to run .net code... it runs completely in your browser, that isn't going to be helpful to the OP.
There's this: https://github.com/bubibubi/JetEntityFrameworkProvider Although don't know how easy the whole thing will be.
You can query the Access database with OPENROWSET() in T-SQL and create a script to import the data directly into your new database without using Entity Framework.
If all of your users use one browser, you could just create a browser plugin.
I guess I am trying wrap my head around Entity, because everything is wrapped up and attached to the app through a Dbcontext right now, and every table and object is through Entity. 
This looks very promising! I am going to disect it to see what it has to offer. &amp;#x200B; Thanks!!!
Stack-only nature of Span&lt;T&gt; means that the Span&lt;T&gt; itself (not the memory it points to) can reside only on the stack. This is in contrast to "normal" C# structs, that can reside on the stack or on the heap (when they are embedded in classes/reference-types). It does allocate enough space on the stack to store itself, though it does not allocate the memory it is referencing. So both your statement and the authors statement are factually incorrect.
I think it is just the wrong tool for job. An ORM like Entity Framework is for manipulating an existing database with an object oriented programming language (Or designing a new database in the case of Code-First). SQL is the the tool you want to migrate data from one database to another.
And I get that totally and agree with you on it. Before I came on to this particular project, it was already agreed upon and invested in to utilize EF.
I am not saying not to use EF in your new database. It just doesn't make sense to use it for the migration step. Writing a script to take data and transform it to a new database is a very straightforward one-step process in SQL. Trying to do it all with EF is not. Why go to all the effort to set up EF to work on an old database you are going to discard immediately?
I get what you are saying now, thanks
I tried it before years ago, but it was quit e"limited" iirc.
i wouldn't say there's a more proper way to do it because you're technically doing it right. But There's definitely a cleaner way to do it. You could create a class, call it like ViewModelPool or something, and it can just be a viewmodel that holds all of your other view models. Then you can just create that class, populate it with the viewmodels you need, and inject that into your class instead. 
You can choose the initial path displayed by the dialog by setting the SelectedPath property prior to calling ShowDialog(). But you cannot restrict a user's movement in a stock FBD--you'll need to find another solution (either an existing package or create your own).
I assumed where the author wrote &gt; Span allocates the memory on the stack. They were talking about Span actually allocating the memory across which it operates, not itself. Span is stack only, Memory&lt;&gt; can escape the confines of the stack and can also travel in 1st on longer journeys. So factually I'm right but you didn't consider that either you misunderstood me or I didn't explain the facts well enough. You also ignored context. In conclusion. Facts. Still, upvote because I like an argument :)
Jesus is this the new normal? Fucking emojis in tech articles? I just vurped.
No fun at work eh?
Here is NUnit test project which successfully runs. Make sure Microsoft.NET.Test.Sdk and NUnit dependencies are added. If you would like tests to appear in VS Text Explorer window then add reference to NUnit3TestAdapter. &amp;#x200B;
Maybe try live charts. It has zoom capability. https://lvcharts.net/
No idea, but I would guess that it will involve WMI calls. 
 "Always implement things when you actually need them, never when you just foresee that you need them." (YAGNI)
In my past role we just had 2 repos and we checked them both out and rather than having dll references or nuget packages we just included the projects in the solution 
hmm that is an interesting addendum. Thank you.
Can you elaborate that a little bit more? Do you mean each developer just referenced dependent projects after git pull manually?
You can do this very easily with submodules as well.
i went ahead and replaced the download code with what i already had (wasnt easy) and that seems to work.. thanks a lot for your help so something about this part here is fucky: using (var response = await request.GetResponseAsync() as HttpWebResponse) { var fileStream = new StreamWriter($"{fileDownloadLocation}{vRedditResponse.id}.mp4"); var responseStream = new StreamReader(response.GetResponseStream()); await fileStream.WriteAsync(await responseStream.ReadToEndAsync()); fileStream.Close(); }
In my experience this does not work as easy as it should when you are working with nuget because your project will not build properly. Sometimes when I tried it the parent project was manipulating the child project when the project was built.
Create a nuget package. Version that package. Reference the package. If the package needs to change, create a new version and publish it.
:) I mess up a lot, always feel free to hold me to account, and I will do likewise :) 
You add it to the solution and reference it. How is nuget even involved?
Even if he wanted to implement his own dialog, there are easier ways than WMI Queries
To see what drive letters map to specific physical drives? How would you go about that without WMI?
Don't roll your own, use the microsoft bot framework and host it on azure.
To be honest, emojis always give vibe of immature and indecent writing. I'm not saying that the article is indecently-written though.
I believe it fully depends where and how you use them. On your personal blog or Medium, do ya thing. On an enterprise company page, I’d rather disperse. 
Wow, I'm working on almost the exact same thing right now. It's not ready to release yet but basically it'll store the hashes and make sure not to reprocess anything unnecessarily
No
All I need is to be able to detect when the server pushes new messages to the website. This project is mainly to learn more about networks, I don't see the point in using a paid service to skip over the stuff I'm trying to learn.
Open Chrome's developer tools and see what's going on in the network tab, then recreate that in C#.
Awesome up-to-date info on writing a Roslyn analyzer. Thanks for posting this!
Yes, bind your command to your button.
Wow. Thank you. I'll download that tomorrow back at work.
Okay wow there's a lot going on in there. I've been spending hours on this and I need to go to sleep now but thanks for your reply, I have something to work with.
No* *Unless the cost of doing a deployment is greater than your certainty that you won't suddenly need that view in code and your system is generic enough that you could turn it on as a report or something without any code changes.
&gt;Thanks, i have looked up OpenNAT before but i have no clue how to implement it into my solution. It can be hit or miss but the idea is you ask OpenNAT to open a particular port, if it's successful then you just listen on that port as normal and it should work as expected. &gt;And for why im using UDP over TCP, is because i feel like through researching online and discussing with a couple of friends in the game development industry, most of them told me UDP would be regarded more useful since the data loss is minimal, and TCP is a lot more costly since all of the checks it does to ensure the data being sent is correctly sent. For games udp can be useful but it doesn't really seem suitable for your goal. Even if they claim it's minimal you still need to cater for it by either providing your own handler or just ensuring your code doesn't care if packets are lost or arrive in the incorrect order. This sounds more like a premature optimisation if anything. Granted if you use TCP you'll need to handle streams (could send 5 bytes but receieve 1 byte per call to Receieve) Going through your code now. Can you clarify the issues when using an external network? does the server not receieve the initial messages or are the clients not getting a response? Currently you have 3 programs, two clients and a server. Client: On startup will connect and send a message to the server Server: On packet receieve will store the clients ip/port (are you storing port?) I haven't really used the UdpClient much but it seems this sender should be the address of the client and not the server IPEndPoint sender = new IPEndPoint(IPAddress.Any, port); myUdp.Receive(ref sender); Receieve( "An IPEndPoint that represents the remote host from which the data was sent." ) &gt;For OpenNAT, is there ways for me to get a tutorial or code snippets or whatever to show me how it could be implemented? I would rule out the issue why it's not connecting first, considering you've handled port forwarding it should work. I'm not in the best position atm to verify Open.Nat or setup and test an example for you but maybe this project will help https://github.com/7wingfly/P2Pchat 
There are many options which can greatly improve performance of VS+R#. Check this article https://www.jetbrains.com/help/resharper/Speeding_Up_ReSharper.html One of the most important settings is to add an exclusion for the ReSharper cache directory. Note that this can be in temp directory, or solution directory, depending on your dotsettings. One thing to keep in mind is that VisualStudio is limited to address around 2GB of RAM. There are plans to move ReSharper out of process running in 64bit mode. You can read on here https://blog.jetbrains.com/dotnet/2018/05/28/introducing-resharper-performance-series/ Meanwhile an alternative option might be JetBrains Rider, which is a standalone .NET IDE that also runs cross-platform.
It's just a prank bro.
Started to read and noticed he signed "David Pine" to art from http://hyperboleandahalf.blogspot.com/ Why?
I like you. I'm stealing your idea for a future project!
"Ah yes, not adjusting the unit tests to fit the code, but adjust the code to fit the unit tests." FTFY.
I paid for Visual Studio 2017 enterprise and it works, I am not spending more money on a new IDE that I hear isn't perfect either. Thanks for the information though, I feel like it's a limitation with memory or the cache like you mentioned. I will go through your suggestions and hopefully something works.
First, you're right about implicit vs explicit styles but there's a way around that. So, start by defining an implicit style that covers the majority of the buttons. This will get applied to all buttons that don't otherwise have a style set. Next, define a new explicit style for the number buttons with only the property changes/overrides that vary from the implicit style. The trick here is to base this new style on the implicit style so that it inherits all of those stylings and then overrides/defines only the differences. Here's a simple example: &lt;Window.Resources&gt; &lt;Style TargetType="Button"&gt; &lt;Setter Property="Background" Value="DarkRed"/&gt; &lt;Setter Property="Foreground" Value="White"/&gt; &lt;/Style&gt; &lt;Style TargetType="Button" x:Key="GreenButton" BasedOn="{StaticResource {x:Type Button}}"&gt; &lt;Setter Property="Background" Value="DarkGreen"/&gt; &lt;/Style&gt; &lt;/Window.Resources&gt; &lt;StackPanel HorizontalAlignment="Center"&gt; &lt;Button Content="Button #1"/&gt; &lt;Button Content="Button #2" Style="{StaticResource GreenButton}"/&gt; &lt;/StackPanel&gt; If the number keys are all enclosed within a container (like a Grid or StackPanel) and there are no non-number buttons within that container, you could also define a new implicit style within that container's Resources that will target all Buttons within the container.
I signed my name, since I'm the one that drew that picture. :P
Hi man! That sounds awesome, let's work together - yeah? Do you have an existing app or project, or do you want to start on mine with a PR?
Thank you, kind sir
You can use a dependency tool like [depends.exe](http://www.dependencywalker.com/) to inspect the dependent assemblies of your new generated assembly and see what it's looking for. There's the [AppDomain.AssemblyResolve event](https://docs.microsoft.com/en-us/dotnet/api/system.appdomain.assemblyresolve?view=netframework-4.7.2), which is invoked when trying to resolve an assembly, may give you some more insight into which assemblies are being loaded, why, and which ones aren't working. The [Fusion Log Viewer](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-1.1/e74a18c4(v=vs.71)) (comes with Visual Studio) lets you look into the details of assembly resolution a bit more, so it may help you identify the assembly that's failing to load in the cases where the exception isn't telling you where to look. [AppDomain.Load(string)](https://docs.microsoft.com/en-us/dotnet/api/system.appdomain.load?view=netframework-4.7.2#System_AppDomain_Load_System_String_) does not take a path, it takes an assembly display name, are you sure you're using the right API? Do you want Assembly.Load or [AppDomain.CreateInstanceAndUnwrap](https://docs.microsoft.com/en-us/dotnet/api/system.appdomain.createinstanceandunwrap?view=netframework-4.7.2)?
Yes, if you have infinite time and money and don’t need to ever deliver a product to your customer.
Is there any benefit to building your own? I’d just use RPA like UiPath 
Since you don't own the server, the only possibility is probably to poll the website to see if they uploaded anything new.
Two collections make it much simpler. If you have two dictionaries, then you can loop through the new data and add if doesn't exist, change if exists. Then you can loop through the first dictionary's keys and check if the new data has them, and add the ones that don't exist to a list. Then you can finally loop through the list to remove all of those keys from the first dictionary. &amp;#x200B; However, I don't see why you want to avoid making a "new" collection, given that the cost is the same. If all you want to do is not call the constructor, just empty the first collection and add all of the new data. If the goal is to have events for these things, then I guess that might make sense. Also I would prefer using LINQ for conciseness but that is pretty much making a "new" collection.
You should build the project using .net 4.0
While this works in the traditional webforms sense, web methods still totally work in webforms and don't need a yucky post back.
You can build your backend web app using visual studio 2017 no problem; however, the server you deploy it on must have the correct runtime version (or higher) for the framework version you are targeting. If the client doesn't want to or can't install a higher version of .net framework then you will be limited to 4.0 when [selecting your target runtime in visual studio](https://docs.microsoft.com/en-us/visualstudio/ide/how-to-target-a-version-of-the-dotnet-framework?view=vs-2017).
Wow. This entire time I've been telling people that YAGNI stood for "You ain't gonna need it".
Global tools are very cool, and have a lot of untapped potential IMO. I also built a 2D Snake game that works as a global tool: dotnet tool install -g snake
No. That's a huge security vulnerability.
If you can move to .NET Core (would also need to be ASP.NET Core) then you can make a [Self-contained deployment](https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd) which doesn't require any framework to be installed on the target machine.
Thank you all for your quick replies. I think my first step tomorrow is to find out if I can update the client's server to 4.5. 
What IDE do you use for Vue?
One more question: the client wants my app to generate pdfs and store them in a directory at the system root level ("C:\\\\MyProjPdfs"). I remote-desktop to my own user profile on his server. He wants the pdfs to be directly accessible from his admin account. I have a vague hunch that my web app can only access files stored in its ... project directory (or whatever the proper name for the directory that holds the project once built/released/published/hosted/deployed .. (innerException.Message: What is the proper term? haha). Or is it possible to access files stored outside of the project? Sorry for adding an unrelated question. But once I know: a) what environment I should build this app, and b) I can properly read/write to my target directory outside at the system's root level, I will be good to go on setting up a simple UI to put my much-belabored openxml report generator to use. Thanks again.
How is it a huge security vulnerability? I believe you, I'd just like to know what makes it a risk.
Read the reports yourself. I'm not going to dig through 6 and a half years of patches because you want to justify running a dangerously out of date server.
I don't want to justify it. I thought there might have been a general answer to my question. If my client asks why running on 4.0 opens security vulnerabilities I'd like to justify upgrading.
Thank you.
I like the sound of that. I will look into it. 
Actually I used MSFT classes, then WMI ones in work with partitions
That was my first thought but it looks like VS2017 doesn't support MVC 4.0. Now I'm thinking I should push for an upgrade to .NET 4.5 so I can develop the app in familiar VS2017, plus it'll be more technologically current- and secure, from what I hear.
Just push to the highest version of 4.x that you can run in both your dev and prod systems. Ideally go for 4.7.2
They may insist that they can't, in which case you either lose the customer or target 4.0 anyway. You can target a project in 4.0 and it won't be too much of an issue. You should ask them if they ACTUALLY mean .net 4.0 or just .net 4 or just .net 4 compatible. To the other question, the app would need to run with... unfortunate permissions. It'd be better if there were a shared drive that you can drop the reports in. Part of installation can be a script that runs net share and allows access for both administrators and the account for which your application will run https://www.windows-commandline.com/list-create-delete-network-shares/
Right on. Thanks!
&gt; It is expected that all developers become a Patron on OpenCollective to use Fody. Go to licensing FAQ And then.. &gt; But it is MIT, can't I use it for free? &gt; Yes all projects are under MIT and you can ignore the community backing honesty system and use Fody for free. And then... &gt; Yes. You must be a Patron to be a user of Fody. Talking out of both sides of their mouth. When in doubt, respect the license, which is MIT and contains no patronage requirement. Requiring patronage makes Fody non-free software which is not compatible with the MIT license. They can't have it both ways.
Idk why this is being downvoted. If it's client side is and you need your server to process the data. You need to use AJAX. Or something that can easily send HTTP POST like an HTML form. Ajax/jQuery is just the easiest route to post data imo
Very cool
I think a web app hosted in iis can write to any folder that the application pool user has been granted permission to. By default that's none but it could be any.
took 2 seconds to glance. It looks like this is the method you want to call: public void Update() 
That's really sweet man. Thanks for sharing!
Thanks for sharing! :D
Nice and clean library
Do you mean private fields? If the method is part of the class, you can access the class fields.
Cool! I wish I had a use for it
Hard to imagine what you could possibly be doing where this would be a good solution. School assignment? If not maybe take a step back and let us know what problem you are trying to solve. 
Yes, although image APIs like `Bitmap.LockBits` will generally give you a single dimensional array of RGB or BGR values and you'll have to manually split the bytes into your multidimensional array if you really want that.
How about Image.FromFile()? &amp;#x200B; Then ... `public byte[] ImageToByteArray(System.Drawing.Image imageIn)` `{` `using (var ms = new MemoryStream())` `{` `imageIn.Save(ms,imageIn.RawFormat);` `return ms.ToArray();` `}` `}`
Uuuuh this looks good. As a total newbie on this type of memory-stuff: Will this have access to the memory of every process on the machine? I am looking to read stuff from the memory of a game.
You should read about operating systems and how they restrict processes to use only memory dedicated to them. But if you have administrator rights, there are 3 functions in Windows you can call: open_process, read/write_process_memory. And then you can do whatever you want. Basically you are trying to create your own CheatEngine :)
No I want to scrape prices automatically instead of manually logging them :)
While this seems like a ticket to reverse engineering paradise, It is likely that a few things will stop you. Also you can already do this with a debugger, both the visual studio debugger and windbg should let you read and write to any address in an attached process's memory space. * Some processes can register with windows to be non-debugable, this is used mainly for DRM (Digital Rights Management) software which includes games. * If you do manage to attach to your game with a debugger you might find things running a bit differently than normal, as some games and software have code which attempts to detect when another process (debugger, this library, etc.) is attached and can read its memory. I am a little fuzzy on how this works though... Neither of these things however, can stop you from trying :) Happy hacking!
The method I'm trying to invoke is `appDomain.CreateInstanceAndUnwrap()` for a type in the loaded assembly. It worked perfectly fine without dependencies, but trying to add a referenced assembly when compiling ends up throwing the mentioned exceptions. I tried calling `appDomain.Load(assembly)` before creating the instance, but that threw the same exception. I'm pretty sure I've tried loading using the assembly path, the AssemblyName, and the assembly display name, all of which probably failed. Thanks for telling me that it uses the assembly name (even if I don't know how that works), I'll try experimenting with that. Also, I'm working in Rider, not VS, but I'll try to look whether FLV exists for Rider as well. Well, thanks! I'll look further into it in the afternoon.
Can you use this for game hacking as well?
https://www.cvedetails.com/vulnerability-list.php?vendor_id=26&amp;product_id=2002&amp;version_id=97706&amp;page=1&amp;hasexp=0&amp;opdos=0&amp;opec=0&amp;opov=0&amp;opcsrf=0&amp;opgpriv=0&amp;opsqli=0&amp;opxss=0&amp;opdirt=0&amp;opmemc=0&amp;ophttprs=0&amp;opbyp=0&amp;opfileinc=0&amp;opginf=0&amp;cvssscoremin=0&amp;cvssscoremax=0&amp;year=0&amp;cweid=0&amp;order=1&amp;trc=57&amp;sha=9acfd00e1a4694754d57b6b4e8f5f9ce69a0c628
Nice proof of concept work, I think working in the mixed managed/unmanaged space is one of my favorite things to do. So much to think about with the interaction between the two! I think the usability of this library would be greatly improved by writing some proper error handling around the system calls (GetLastError) and ensuring that all parameters are being used taken advantage of (some of the out read sizes are passed in as 0). I know it is UGLY to deal with HRESULTs and Win32 error codes in C# but it is a necessary evil when making system calls on windows.
You mean *fields*, not class level variables. You can call them class level members if you like. As to your question, it depends. For private methods, I try to pass everything as a parameter so it self-documents the dependencies of the method. For all other methods (public, internal, protected) that use one or more class members, I don't pass them in as parameters since those parameters are supposed to be provided by the caller. If you can get by without using **instance** class members in a method, then the function should probably just be *static* anyway.
It's a learning project to learn more about how networks communicate. Also I doubt if any existing frameworks would know how to interface with chatango, I'd probably have to write a custom implementation anyway, and in that case the bot framework is all just extra fluff I don't need.
Thanks for feedback! I fully agree with your point on proper error handling. Most of the handling done at the moment is a just done so that users don't break things but I am definitely planning to implement it properly using the things you mentioned in the near feature.
Definately! Obviously you will need to know the addresses that you want to edit as well as the values you want to write into the processes memory space but that once you have that it is fairly trivial to do :)
Yes in terms of games, you will be able to read / write to whatever address you wish. 
Could you post a short tutorial on finding an address, based on a string or int known, and reading from it?
I mean instance fields and instance methods, nothing static in this context.
Virtual machines suck, speaking as a windows user who tried to VM linux (on an AMD chipset, possibly related). I think double booting would probably be better
Good job! In order to speed up pattern scanning you can try to implement [Boyer–Moore algorithm](https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_string-search_algorithm).
LINQPad is arguably the best REPL/Snippet Manager across all languages.
This feature is coming in a near update where you will be able to pattern scan for known datatypes But to answer your question it's quite simple to do. Convert the string/int/datatype into a byte\[\] (Get the byte representation of it) Convert each byte into a single string - For example {0xFF, 0x5A, 0x21} would become "FF 5A 21" Then call the PatternScan using that pattern to get the address of the pattern
I was originally looking into this but I was having trouble handling wildcards. I'll revisit it in the future
Roslynator does 90% of what I used Resharper for, at 0% of the cost. Actually that statement isn't even true, since I got Resharper for free at my previous company, and I donated some money to Roslynator after I discovered it at my current company. But if you are looking for watertight lawyer-grade testimony, asking on a site filled with anonymous trolls probably ain't a great idea.
&gt; Then you can loop through the first dictionary's keys and check if the new data has them, and add the ones that don't exist to a list. Then you can finally loop through the list to remove all of those keys from the first dictionary. The reason I don't want to "new up" a collection, is due the gridview blinking because it empties the data totally. 
Thanks, but I was thinking more in finding the two first parameters of PatternScan
I’m sorry I don’t quite understand what you mean. The first parameter of PatternScan is either the process name (string) the process id (int) or a safehandle to the process. The second parameter of PatternScan is an IntPtr to the address you want to begin scanning from. For example if you want to scan the entire process, the address would be the base address of the process. 
How do I find the base address of the process?
Get an instance of the process and then - process.MainModule.BaseAddress
just took a short glance and noticed there are many repetitions in the memorymodule. why didnt you make a Process class that would take the id, name or handle and just pass that instead of having 3 versions of each (and 3 constructors for memory wrapper)?
Still in the early days of the project with many improvements to be made. Thanks for the advice though I'll definitely look at restructuring the repetitions when I get the chance.
You probably wouldn't want to [parse pattern integer on every byte](https://github.com/Akaion/Jupiter/blob/master/Jupiter/Extensions/PatternScanner.cs#L111). Performance is very important with these type of libraries, have you measured/compared it?
Can you get me a sample method call so I can take a look? Is this in Win32?
I would recommend looking into XML serialization. This will allow you to store a list of objects in an xml file. You can load this file at a later time to persist the objects 
Thanks for taking the time to look. But looking at update it's setting the value of currentboardbuttonstate but i see no way to call unthrow(). public void Update() { _lastKeyboarstState = _currentKeyboardState; _currentKeyboardState = Keyboard.GetState(); _lastMouseState = CurrentMouseState; CurrentMouseState = Mouse.GetState(); LastBoardButtonStates = CurrentBoardButtonStates; CurrentBoardButtonStates = SerialManager.Instance().ButtonStates; }
Absolutely beautiful. Love the API, clean and functional.
&gt; that doesn't have an API Im sure there is an API but it might not be a public one
You're looking for 'serialization'. Depending on what you're up to, you may have to write some or all of it yourself, but there are existing libraries to handle some approaches, like JSON (e. g. Json.NET) or XML (in the .NET Framework!).
Looks like there is another variable named process. There is lowercase process which holds that function, but then another one that is uppercase defined outside of what you posted. (Since you specifically pointed out line 3)
it's the same as ProcessInfo process = new ProcessInfo(someParameter, this); process.AutoDeRegister = autoDeregister; process.Process.Status = "waiting"; process.ProcessStatus = ProcessStatus.OnQueue; It's often called "eye candy", a shorter/easier way to write something that was achievable before.
Okay. So it's a special feature of the object initialization syntax. Thanks for clarification.
also called syntactic sugar
Yes, it's very nice to have when a class you're initializing has a read only (or getter-only) field you need to modify before further use. ... Process = new Process() { Status = "waiting" }, ... would not compile if Process field was read-only.
It is a way of setting fields on (existing) fields. It is defined in the spec (https://www.ecma-international.org/publications/files/ECMA-ST/ECMA-334.pdf) in section 12.7.11.3. It gives the following example there: Rectangle r = new Rectangle { P1 = { X = 0, Y = 1 }, P2 = { X = 2, Y = 3 } }; which has the same effect as Rectangle __r = new Rectangle(); __r.P1.X = 0; __r.P1.Y = 1; __r.P2.X = 2; __r.P2.Y = 3; Rectangle r = __r; You don't see this syntax used often
It's not exactly the same. Imagine you had an exception thrown at, say, line 3 of your code - in this case your `process` variable would be initialized, but not all of its members would be set properly. In case of object initialization, it would simply be null. So, while it's not a major benefit, I'd say it's marginally better to use object initialization whenever applicable (you don't end up with variables in inconsistent state in some far-fetched, border cases).
At least put the first brace on a new line, dang
Well, in the presented example, the *process* variable is declared in the same block that an exception would be thrown, so there's no way to access the partially initialized object anyway. But it's a nice border case.
It's the K&amp;R Style, which is what I prefer too.
Ok, now I'm writing all the data to a categoryCache.txt, which hold all the data in cache, with JSON SerializeObject. Is it easy to maintain the cache, like if a update is edited on a object ?
&gt;or should you pass in all variables as params The entire point of having properties and fields is so that you don't have to do this. The object you're working with is implicitly an argument to all instance methods on the class. If you're finding you have problems figuring out which parts of the class are used by which instance methods, your class is probably doing too much and should be split.
... no, probably not? You would need to write every object back out. If you're wanting to supporting this sort synchronization, using a local database of some sort (perhaps SQLite) may be advisable. What *problem* are you actually trying by writing your objects to the disk?
I explicitly put it there to not get confused with my line count. In my file it is "correctly" formatted. The indentation was killed by reddit markdown and I honestly didn't bother.
Thats what I figured. I saw a lot of stuff by now, but none of my colleagues knew either.
Better visibility: var process = new ProcessInfo(someParameter, this) { AutoDeRegister = autoDeregister, Process = {Status = "waiting"}, ProcessStatus = ProcessStatus.OnQueue }; Means: Call a new object with the specific constructor AND then inmediately write some value into its properties. It is completely the same as: var process = new ProcessInfo(someParameter, this); process.AutoDeRegister = autoDeregister; process.Process = {Status = "waiting"}; process.ProcessStatus = ProcessStatus.OnQueue; &amp;#x200B;
Wait that sounds wrong... what's the read only field in your example? Status? Or Process? 
Just visual studio
'messier'
Too many things named "process". I mean the field "Process" in class ProcessInfo. I'm not familiar with the exact type in OP's example, but /u/Zeroto's example with Rectangle is nicer. If Rectangle was defined as: class Rectangle { Point P1 { get; private set; } = new Point(0, 0); Point P2 { get; private set; } = new Point(0, 0); } Then both P1 and P2 are "read only" from outside, and if you want to initialize them nicely, you need to use this: Rectangle r = new Rectangle() { P1 = { X = 0, Y = 1 }, P2 = { X = 2, Y = 3 } }; If however the Rectangle was defined as this: class Rectangle { Point P1 { get; set; } = new Point(0, 0); Point P2 { get; set; } = new Point(0, 0); } You could also use: Rectangle r = new Rectangle() { P1 = new Point() { X = 0, Y = 1 }, P2 = new Point() { X = 2, Y = 3 } }; Mind you, these two methods are not interchangeable, the second one creates new Points and writes them into the Rectangle. The first one modifies existing points. 
That’s not the question. The Status part is.
IMO The left hand of the = operator is a property. The right hand is a class, therefore a static field. If not, then the type of the ProcessStatus' field has an "OnQueue" field that you access. The ProcessStatus is initalized in the constructor, so when you get to the part between {} the entire object is already initalized, and you can access all props values.
You should add a method with a size parameter that allows you to read / write strings.
I prefer the open curly brace on the same line in every language accept c#... odd
I’m just trying to mess around with making image filters. Think blurring them/ changing saturation/ etc.
Very cool to see C# being used in this way, I'm looking forward to taking a closer look at it.
Cursory Google search: [https://stackoverflow.com/questions/21456215/persisting-memorycache-content-to-file](https://stackoverflow.com/questions/21456215/persisting-memorycache-content-to-file)
Honestly, the "when in Rome" principle applies. However, if you are using VS, it will automatically format braces so they line up vertically, so by *not* vertically aligning your VS, you are either fighting the default formatting of VS or you had to manually change the formatting. If you manually changed the formatting, then everyone else using VS will need to change their formatting. Otherwise, version control diffs are going to be polluted with just formatting changes and will make it harder to review them. Ultimately, simply use the "when in Rome, do as the Romans do" principle. Personally, I much prefer vertically aligned braces. It makes it easier to determine the beginning and end of some scope and the opening and closing braces being the only character in the entire line breaks things up visually which I believe aids readability (it aids mine, anyway). However, I do break this rule if, without affecting readability, the open and close braces can be on the same line. The following property demonstrates both of the ways I write my braces: public string Name { get { return _SomeFieldOmittedForThisExample; } set { _SomeFieldOmittedForThisExample = value; } } Horizontally-aligned braces for thw getter, vertically-aligned braces for everything else.
Thank you kind internet stranger.
Thanks for this. I'm an old C/Win32 - C++/MFC coder working in C#/.NET for the last 10 years. I really miss C++ and write C# in C++ mode, much to the chagrin of my fellow developers. I'm pulling this down right now.
Lazy programmers code 😁 ctor parameters + property initializers (even with an anonymous type)
The first is true, and both articles say the same.
just started learning C# on my own. and i would love to do that one day on my own. Just love people like that! you rock dude! 
If you are Administrator, then of course you can do that. But it's not so much accessing a game's memory that's the problem, as finding the actual location where the prices are stored!
I see. I'd never seen the P1 = {X = 0, Y = 1} syntax before. At the end of the day though it's not really 'nicer' than r.P1.X = 0; r.P1.Y = 1; other than being syntactically shorter. For example, it doesn't help make your classes more immutable in any way, which is what I thought you were alluding to earlier. Also, this might be a terminology nitpick, but private set is not the same thing as a read only property which would be: Point P1 { get; } = new Point(0, 0); Read only means that even your class cannot change the reference to that property or field, after it has been set in the constructor (or the field declaration). 
Yep, they just need to give that account ntfs permissions to C:\\MyProjPdfs.
Maybe I'm missing something then, but comment on the stackoverflow seems to be opposed to the statment that there is concept of 'chaining references' , at the bottom part the guy says how c# differes to c++ in regards to that particular detail.
It looks like object initialization. This: &amp;#x200B; var process = new ProcessInfo(someParameter, this) { AutoDeRegister = autoDeregister, Process = {Status = "waiting"}, ProcessStatus = ProcessStatus.OnQueue }; &amp;#x200B; Is the same than this: &amp;#x200B; var process = new ProcessInfo(); process.AutoDeRegister = autoDeregister; process.Process = {Status = "waiting"}; process.ProcessStatus = ProcessStatus.OnQueue;
It is a bit nicer if you're using object initializers and there are multiple nested levels. Before this, you'd end up with a wall of repeating text, or with combination of object initializer followed by few lines of setting properties. This makes things a bit more consistent. But I think we can agree that beauty is subjective, therefore "nicer" is too and leave it at that. I know what read only means, but I wanted to use simpler terms, which is why I wrote &gt; "read only" from outside
I agree that it's 'nicer' in that sense :) Like I said I had thought you were implying that it was immutable, so I just want to be sure you didn't mean it was *that* nice :D &gt; "read only" from outside I figured as much :)
There's no anonymous type in the example. Anonymous type would be new { Status = "waiting" }
&gt; For private methods, I try to pass everything the method needs as parameters so it self-documents the dependencies of the method (basically dependency injection but for methods). But aren't private fields part of the class state? if your non-static method is not using class state, why not convert the method to static?
This is awesome. Great work and really clean code.
Just legacy Code which we converted from VB.NET
Can you provide some benchmarks on some operations with/without your library?
So there is no way for me to update the objects in the json text file without writing to a new file?
This is why I suggested SQLite in my previous response to you. XML and JSON are a nightmare for CRUD (Create, Read, Update, Delete) operations. It is way to easy to have a failure during the process and lose all the data. You can only update records in situ, so edit the record without writing out the whole file again if you are replacing it with something the exact same size. So you could overwrite "Hello" with "olleH" but "Hi there" would write over the next bit of information. Again, this is why things like SQLite exist.
How is the SQLite working? IS it working fast? There as about 2.3millions items
I don't have a sample ready at hand, take a look at this https://msdn.microsoft.com/en-us/library/windows/desktop/hh830524(v=vs.85).aspx
I'm not really sure if I understand you correctly, but The code in the screenshot would work exactly the same even without "ref". It's because "Program" is a class. If you used a struct type (or other value type), the "ref" would be necessary, because it would be copied each time you passed it as an argument of a method. But the "ref" in m2() allows you to add "p = null;" in the method, which would affect "p" in both m1() and Main(), resulting in exception on the line 25.
If you want to change just one of those items it will immediately be 10,000 times fast. If you just want to write them all out and read them all in, it will be as fast. It's a binary format, so less bytes to write, the way it gets the data from your program into the database is very optimised and efficient. The easiest thing to do is take half an hour to make make a couple of unit tests and use Benchmark.net to time the things you want to do. If you do need to change 1, 10, 1000 of the items it is the only way to go if you don't want to risk losing information. Trust me on this. I've seen too many people over the years try and use XML as a backing store and at some point they lose everything.
Thanks for your clarification, But do I need to install some software inorder to use the local DB after deploying my application? Is there any good guide for an easy implementation?
Removed: Rule 4.
This is incorrect. Consider this: public static void main() { var sb = new StringBuilder(); DoStuff(sb); bool isNull = (sb == null); //this evaluates to false DoStuffByRef(sb); isNull = (sb == null); //this evaluates to true } static void DoStuff(StringBuilder sb) { sb = null; } static void DoStuffByRef(ref StringBuilder sb) { sb = null; } **EVERYTHING** in C# is passed **by value** unless you use `ref` or `out`. The difference between how value types and reference types are passes by default (in C#) is as follows: * Value types - the *value* of the value type is copied to a *new* address location and a new *pointer* to that new address is passed. * Reference types - the **pointer** of the reference type's address is **copied** and passed. In both cases, a *new* pointer is being passed (i.e passing by value). The difference between the two lie in which memory address the new pointer is pointing to. If you use ref or out, the *existing* pointer is passed instead.
SQLite can be packaged by including the appropriate libraries/code with your application. The user doesn't need to install additional software. Here's a decent answer/writeup on StackOverflow which also has links to other tutorials and resources to help get you started: https://stackoverflow.com/a/15292958/1269654
Yes, you are right, maybe I havent chosen the best example, but I guess I will try to simplify what I mean. What I want to know is this: when you pass reference type by keyword 'ref', you are essentially putting reference in the parameter of the called method ( so now that parameter refers-points, to a reference type variable which in itself refers to something else). This is what I meant by statement 1. Statement 2 just says that the parameter in the called method isnt refering to the reference type variable in the MAIN method, yet it IS the original variable. The difference is subtle. Is this a bit more clear?
Evaluationmode in debugger now works as expected. My life is saved.
Private methods as I've described could certainly be static but since the class itself is the only thing using it, I am not sure it matters. There might be some performance differences that someone can enlighten us with. A private static method also ensures no instance members are used which is a plus. Also, changing from static to non-static or vice versa wouldn't consitute a breaking change since the method is private. At least, I don't think it would be a breaking change.
Well, you have two main parts of the "back end." The server application (C#) and possible a database (SQL or some such). If you are already familiar and comfortable with Javascript then picking up C# should be fairly straightforward. The issue is what sort of framework you are interested in. I would start looking at "[ASP.NET](https://ASP.NET)".
Just fyi, you can use the division and modulo `%` operators to retrieve what you want from a 1-dimensional array in some contexts.
You’re making a new processinfo object and initializing it’s fields (properties)
I am semi-comfortable with C# syntax as of now, just have to Google for methods here and there since it's definitely much more robust than the ones I have available day to day. "The server application (C#)" for [ASP.NET](https://ASP.NET) Core is pretty much what I'm trying to get direction/learn. I lack a lot of basics/fundamentals of BE engineering and was just hoping there was some type of one-stop-shop tutorial that can get me rolling come the new year. 
Create a separate Residents table with a BuildingID column so you can relate a resident to a building.
The pattern scanning is very much in it's early stages. I recognise that there a dozen ways I can improve this (one of them being what you said) and will be improving constantly
In general there's lot's of info on Database design but if you look for normalization it might help. You basically want to make a new Resident table with an ID and a FirstName, LastName, it's similar to the relationship you have between City and Resource Table Resident * public int ID { get; set; } * public string FirstName { get; set; } * public string LastName { get; set; } Table Resource * public int ID { get; set; } * public string BuildingName { get; set; } * public string OwnerFirstName { get; set; } * public string OwnerLastName { get; set; } * ~~public string ResidentFirstName { get; set; }~~ * ~~public string ResidentLastName { get; set; }~~ * public int CityID { get; set; } * public virtual City City { get; set; } * public virtual ICollection&lt;Resident&gt; Residents { get; set; } //New relation 
I write p/invoke if I have to, but using C++/CLI (and the clr support lib) to do stuff for me beats p/invoke straight out of the park. Plus, C++/CLI implements IDisposable automagically and correctly, it's glorious! Will never forget Microsoft for not having C++/CLI in Core 😁😁😁
You have a lot of work to do. Pick an asp.net core tutorial and start there. It's not really something you can speed run unfortunately.
Isn't that what the ASP.NET sync context is for?
Go with SQLite as you have more control over versions. [This one looks good](https://www.codeproject.com/Articles/1250586/%2FArticles%2F1250586%2FWorking-with-SQLite-in-Csharp-VB). It's quite long and links to some other more basic tutorials too. 
What basics and fundamentals do you think you’re lacking?
I'm currently reading **ASP.NET Core in Action** by Andrew Lock, after listening to him on Scott Hanselman's podcast. The book is structured very well and has been helpful for me to build a good foundation. https://hanselminutes.com/660/aspnet-core-in-action-with-andrew-lock The podcast also has a coupon link. 
Ref is to C# what `type*&amp; param` is to C++ 😁😁😁
There were a few cases where AspNetSynchronizationContext lost HttpContext as well.
I feel like this went through a bad translation. Maybe try a different service?
Having been a .net dev for years, I'd suggest Pluralsight. 
Moreso backend principles, patterns, etc that .NET employs. I do have a Node.js background, but that was from several years ago and I haven't touched it since. At my gig I find myself having no idea what I'm looking at (as in how/why) when I dig into the BE code.
&gt; It’s often called “eye candy”, Although that term is also sometimes used for pictures with boobs and similar.
No that’s wrong. Object initializer syntax doesn’t change anything with respect to readonly. 
Is it MVC code? Even if you don’t know, there’s a good chance it is, and you probably want to familiarize yourself with that design pattern. I’m sure Wikipedia has a good article on it.
Your examples will mostly not work. Readonly or private setters are not assignable from the outside by using object initializer syntax. It’s purely syntactic sugar, it doesn’t give you any special powers. 
There was a comment on here from u/kankyo where he said the mobile layout was horrible. I just wanted to let him know that I at least fixed the code layout for mobile.
I'm not saying that object initializer changes something with readonly. I'm saying that if "Process" field was readonly, or public getter-only, then ... Process = new Process() { Status = "..." } ... wouldn't even compile, but if the field was initialized in constructor of parent class, you may use ... Process = { Status = "..." } ... and it'll work fine.
Ok cool. Yeah, that’s part of the WMI suite. Specifically, it’s a WMI Provider. Glad you were able to get it working. 
But like, if I do a post to my db, how do I update the SQLite cache? Do I have to also send a query to it?
1. I'm not saying they'll allow you to do something that's otherwise unavailable. 2. I already said it's just "eye candy" 3. It DOES work not only mostly, but [completely](https://imgur.com/gallery/MmtO21z).
I would also add a location table so you only need 1 entry for each city-state combination.
Table Location city state Table Person FirstName LastName Title ID Table Building ID name 
&gt; In C# you never have chain of references (~~double~~ triple pointer concept from C++). Fixed that for you.
Hah , I'm confused. Could you clarify
I'm afraid I'm not very confident in my knowledge of C++ to provide a comparison with which I would be sure. I'll try, but be sure to double-check it from elsewhere. But any variable of "reference type" in c# would be written in C++ as a pointer. // C# var a = new AType(); m1(ref a); Would be something like // C++ AType *a = new AType(); m1(&amp;a); If we're talking about "value types", equivalent C++ code would look like this: // C++ AType a = AType(); m1(&amp;a);
How do you manage to listen to and stay awake while listening to these types of podcasts? These podcasts put me to sleep harder than ambien.
https://github.com/JasonGT/NorthwindTraders This is a great setup and how I structure most my my backend applications.
I usually listen during my commute or in the gym. 
Just don't forget that var in C# is different than var in JS. Also *this* has one meaning (the one that makes sense). Another difference is that in C# unlike JS things either make sense or if something doesn't make sense but you still try to use it in a way that feels right but is not allowed the compiler will slap you.
&gt; The resources I've all found have been not been entirely what I've needed as I still need to build a foundation for my backend skills. Translation: I have no clue how to ACTUALLY develop software lol
You can have a reference to a struct variable. Single pointer. You can have a reference to a reference variable. Double pointer. You cannot have a reference to a reference to a reference variable. Triple pointer in C. 
Pluralsight.com is a pretty good resource if you are more of a visual learner.
[The Little ASP.NET Core Book](https://recaffeinate.co/book/), nice &amp; concise
The service layer shouldn't know anything about the viewmodel, so forget about that. What usually happens is, your viewmodel calls methods in the service and updates its own properties based on the result. This is about as detailed an explanation I can provide without reviewing the code in depth.
I am only mentioning this because you said you were new and it may be important later, but if you haven't already, I would also set the ID fields of these tables to be the Primary Key, and probably enable Identity Specification (aka Auto insert identity) for those fields. 
you can scaffold a new dotnet core webapi (after downloading and installing the sdk ofc) with dotnet new webapi -o &lt;project name&gt; then i would just suggest playing around. If you are familiar with how APIs work in general the syntax of a dotnet core webapi controller will make perfect sense [Route("api/[controller]")] [ApiController] public class ValuesController : ControllerBase { // GET api/values [HttpGet] public ActionResult&lt;IEnumerable&lt;string&gt;&gt; Get() { return new string[] { "value1", "value2" }; } // GET api/values/5 [HttpGet("{id}")] public ActionResult&lt;string&gt; Get(int id) { return "value"; } // POST api/values [HttpPost] public void Post([FromBody] string value) { } // PUT api/values/5 [HttpPut("{id}")] public void Put(int id, [FromBody] string value) { } // DELETE api/values/5 [HttpDelete("{id}")] public void Delete(int id) { } } 
I get this when debugging standard C# projects in VS; it's not confined to Xamarin. FWIW, following the suggestion in the error tends to help. Did you try it? I tend to get it when I'm debugging in the body of a lock statement - the timeout is on pulling the value of certain properties of certain objects in the debug context. If any of the get accessors for any of the properties you're debugging are doing a "lot of work", it can tend to exacerbate the issue.
Your comment is the only one that made it click for me lol. So how is that part treated in c#? That situation where you have a ref to ref to ref?
Yes I did look at the help but I do not seem to have anywhere in my code where I use Xamarin.Forms.Application.Properties.get So I am not sure what to look for.
Look into Web API for API development, including exception filters, authorisation, attribute-based validation, and input sanitising. Learn about dependency injection (and what dependency inversion is). Check out the Gang of Four design patterns. You can find explanations for them on sourcemaking.com. Although the design patterns apply to any OO language. Learn about application architecture such as MVC, N-Layer (smaller projects), Onion (larger projects). Also learn about CQRS (commands and queries) which is basically a foundational architecture you can use to drive any and every application you develop. That should be enough to get you started on a good footing for backend .NET development.
One reason I sometimes opt out of object initialization is it makes debugging a null ref or exception harder. If you initialize properties after instantiating you will see exactly what line the null ref or other exception occurs, where as using obj initialization syntax it just blows up on the initialization.
&gt;Clearly it is. But the OP was specifically about the 3rd line. meaning the Process = {Status = "waiting"} line. The only confusion that I could see coming from that line was that the result of the constructor was being assigned to process, while in the constructor it was assigning {Status = "waiting"} to variable Process that belongs to the ProcessInfo object.
Ohh I think I found the problem. I had used Application.Properties before, and had added a watch on the variable, after removing the watch the problem seems to have gone away. 
I've posted this before, I've put together a pretty comprehensive list of C# books and learning resources along with some web technologies. https://github.com/AdamHess/TrainingMaterials
Interesting. Never realized C# was so popular with the russian trolls. Figured they were more javascript/python kind of guys. 
Ok, but where should like my function be then? Because atm it's in the view model, but I don't feel like it should be there, because it would be too much logic?
If I try to learn anything while I'm working out, I find myself just standing there listening and not working out, or just ignoring it and not retaining anything. I wish I could multitask like that, I would learn so much and get a lot done around the house at the same time.
Nothing wrong with being a multidisciplinary autodidact.
Calling external services direct from the view model is ok, though I get what you mean. Often I go for a slightly unconventional approach of defining an interface specific to the viewmodel, that provides any methods the viewmodel needs to call. Implement this interface as class that calls whichever services required, and pass the interface to the viewmodel constructor. This will provide a separation of concerns between the viewmodel and model layer.
But external services which like mapping and comparing objects, does the logic stay in view model or in service file? Because I map object to view model etc. I mean the function is doing a lot of manipulating of the view model class variables. What do you suggest me to do? Like I'm updating many class variables and its object, depending on comparing etc.
Look at the error message. Tools-&gt;Options-&gt;Debugging-&gt;General-&gt;Property evaluation. Don't read too much into the Xamarin.Forms.Application.Properties.get thing.
Maybe I'm interpreting you incorrectly, but I don't think it's wrong for me to admit my shortcomings. I'm a Sr. Engineer and this industry to me means learning things you want when you want to.
Although others have already explained, I feel you may need an ELI5: so, you know how you've already created the building table so you can link multiple buildings to the city table via city id? Do the same by creating a table for residents and link them to the buildings table. It's relationships all the way down!
When you're learning, avoid `var` in C#. It allows you to get lazy about declaring the type of a variable, which saves time when you fully understand what you're doing. But when you first start out, and especially coming from a dynamically-typed background, avoid using `var`. Here's why: Example 1: `int blah = someInt;` Example 2: `var blah = someInt;` Under the hood, they're equivalent. The compiler figures out that you're assigning an `int` into that variable and compiles the second example to the same IL as the first one. But then later, if you try `blah = aDecimalValue;`, one of those declarations tells you *exactly* why you got a compiler error without even reading the error message. The other one might leave you scratching your head. I only recommend that moratorium on using `var` while you learn and get familiar with the language. After that, it's mostly a matter of personal style/choice whether you continue to explicitly declare types or not.
Let's say A is a string variable. A = 1004, the memory address of the string object. B is a ByRef parameter. B = 5008, the memory address of A. C is a ByRef parameter as well. We user it in Foo(ref String C). Foo(ref A). C = 5008, the address of A. Foo(ref B). C = 5008, the value of B because B is already a ByRef.
You simply can't express that in the language. Anything like `ref ref foo` is a compilation error.
Udemy!
Searched for dependency and came across your recommendation. There’s a couple books with that title on Amazon, can you tell me the author? I have a guess as to which one it would be but just want to make sure. Thanks. 
Looks like a straight copy of someone else's work.
Alright, I somehow managed to solve the problem, thanks for the help! The problem was in the Assembly Resolution method I took from somewhere on the internet - subscribing it to the AssemblyResolutve event caused errors when loading further assemblies. I'll probably look into it if needs be, but for now it works just fine without it.
Semantic versioning only defines 3 numbers. You can still use the 4th number as a revision number, I see no conflict.
Not sure what he meant. 
A few options that I can think of: 1) Get a different version of visual studio on your dev environment. 2010, 2012, or 2015 I believe should let you target development on 4.0 2) Upgrade the prod system to a higher version of framework or a newer operating system 3) .net Core 4) Do something completely different? Java\Spring framework, Python\Django\Apache
you have to have a sponsor for a work visa. employer, family member that is a citizen, etc..
Removed: Rule 5.
New to C#, and learning the basics using Visual Studio Community 2017. How do these compare to each other?
Based on his post history he's a bit of an anti-FE guy.
Weird stance to have. I’ll tag him and be sure to reply to him with CSS anytime I see him. 
Most people are using Rider because it's cross-platform, they're coming to .NET from a background using other JetBrains tools, or simply because it performs better for their workloads. If you're a beginner, none of that really applies - so stick with Visual Studio.
Welcome to Backend! MSDN (I'm sure someone has already linked it) has a TON of [documentation](https://docs.microsoft.com/en-us/dotnet/csharp/) for C# and anything [.NET](https://docs.microsoft.com/en-us/dotnet/) related. Personally- I'm a C# dev and loving it. I skipped reading the books after getting just the basic down. My first link is a great starting point too. It's definitely an awesome resource for getting the concepts down.
Unless it's Visual Studio for Mac \*shudder\*
Mark Seemann
Stack overflow a lot and look for answers from Jon Skeet, the legend. Other than that, Microsoft's documentation for .Net Core is amazing.
I've recently encountered [Building Web Applications with Visual Studio 2017 - Using .NET Core and Modern JavaScript Frameworks](http://www.allitebooks.com/building-web-applications-with-visual-studio-2017/) (2017) and found it very helpful - first part is a tutorial strictly on back-end of ASP.NET Core (with best practices) and the second one on modern JS frameworks, so you could just focus on the first part. Good luck! :) Btw have you thought about finding a mentor/someone experienced in BE that could guide you occasionally? It could speed up your progress tremendously.
*C# In Depth* by Jon Skeet as well.
This sub seriously needs to put this question in a FAQ sidebar
Definitely use the api browser to see what they have. I would recommend .Net Standard when creating class libraries from now on and satisfying those constraints. 
ASP.NET core
Manipulation of the view model data belongs in the view model. If you can separate the service data transformations from the view model updates you should, and put those in a separate class, but don't sweat updating your view model data with multiple service calls and complex logic - it's better that it's all contained in the one view model class.
I'm aware of Reddiquette. I searched, I checked old for the sidebar, etc. I felt my question was unique, and if you disagree, please downvote and move on.
/r/programmerwoosh
First You're case is absolutely not unique at all. It's pretty close to every other person trying to learn, whether they have a programming back ground or not. Second, I wasn't trying to attack you specifically but more commenting on your post in hopes that some MOD would read. 
Can you use SuspendLayout and ResumeLayout so that it doesn't update until you are finished?
Was this randomly generated text from an AI? If so, I'm impressed.
I used Rider since I had been using (and love) other JetBrains IDE's. I eventually moved to Visual Studio because there was some features missing I found I had to keep opening Visual Studio to do. Eventually I found that Visual Studio + Resharper is the best way to go (at least on Windows). &amp;#x200B; &amp;#x200B;
Courses are $12 until tomorrow night.
UWP + sqlite [https://docs.microsoft.com/en-us/windows/uwp/data-access/sqlite-databases](https://docs.microsoft.com/en-us/windows/uwp/data-access/sqlite-databases) 
How about you configure NLog with a couple extra targets. Like file and console and debug output. Look and see if those work. If they do, you have issues with the database connection or settings etc.. If they don't work, then something else is wrong. You have to just keep isolating the problem as much as possible
I’m a noobie developer and I have gravitated to mongoDB for any database needs I have had. It’s easy to learn and make helper libraries, flexible and not punishing for beginners, and u can get free AWS hosting with Atlas https://www.mongodb.com/cloud/atlas Hope it helps, good luck!
I should have mentioned that I configured it for file logging originally and it worked fine, so the issue is with the database part of it. I'm not sure how to isolate it any further though. It's tricky to debug something that gives no error messages.
Reminds me of the VB6 IDE occasionally deciding that `1 = 1` is false. You would spend hours debugging something, then as a sanity test type `1 = 1` in the immediate window and if it came back false you restarted the IDE and everything started working again... &amp;#x200B;
Using Windows as a host to a Linux VM is never pretty. The other way around is better. 
SQLite is probably best, though depending on what you plan on doing a simple JSON file may well be easiest.
Which language? But most likely no. Enums are supposed to be unique (except flag ones). 
TIL that C# enums don't have to have unique values
Text file (XML, json, raw)?
Short answer is no. At the end of the day those nice string representations for an enum are just wrappers around integers - they're essentially just named constants. Consider it as a pointer, item2 = item1. Item2 in this case doesn't really have a value, it's just another way to access item1. 
You can't and you never need to. &amp;#x200B; Unless you use real pointers and unsafe context, but that's not really pure c# anymore.
damn, that's what I use at work. It does suck compared to the Windows version, but is Rider that much better?
I’m just learning C# as a JavaScript dude and I don’t find that to be the case at all. Firstly I generally dislike the idea of resetting vars outside of something like a loop where it’s basically still only set one per iteration. Secondly this is like a 10 second “problem” you’d run into. Besides if you’re writing C# for a company and other people use var, then you probably should spend the super insignificant extra time to learn that it infers the type 
Well as a front end guy the whole inversion of control dependency management was bizarre. Shit just randomly gets injected into my classes for me? It is pretty cool now but took a day or so to wrap my head around 
So much for razor templates being here to stay huh? Lol :p
I have a ton finished right now but let me get it into a shareable state and clean up some of the code before I publish it on GitHub. Shouldn't be too long, maybe a few days at the most. I have to just get the file watcher code ported from the prototype form I wrote before writing the CLI version. I'll let you know as soon as it's up!
IntelliJ IDEA is/was easily the best Java IDE... But the Java world doesn't have to compete with Visual Studio haha.
I'm pretty sure SqlServer CE does not run on linux at all.
c#!
Looking forward to try out the "Zero-latency typing". Right now Rider often freezes for more than a second and silently eats all keystrokes, which can be somewhat annoying.
You could use the `Enum` class to find all *possible* names for a given value, but it's impossible to tell what particular constant a non-unique value came from.
Visual Studio definitely is the best C# IDE overall, but it is very bloated, the installer is very unreliable and can mess up your Windows installation, and it (Visual Studio) doesn't run if you're not regularly letting it access the internet. If that isn't acceptable (it isn't for me) then there only is Rider.
Frontend can't go to backend, on demand. That's where heavy lifting is, boy, you will be overwhelmed and destroy and going to cry like a little bitch. Better stick to editing CSS styles and writing basic JS procedures.
I haven't tried this with an enum where one item points to another, but it can't hurt to give it a shot. You can set Display Names for enum items like this: public enum Foo { [Display(Name= "Item 1")] item1, [Display(Name= "Item 2")] item2 = item1, } Then you can create an extension to retrieve the display name, like this: public static string GetDisplayName(this Enum val) { return val.GetType() .GetMember(val.ToString()) .FirstOrDefault() ?.GetCustomAttribute&lt;DisplayNameAttribute&gt;(false) ?.DisplayName ?? val.ToString(); } I suspect this will result in the same issue you are having now as the extension function looks up the value using val.ToString(). You might be able to get around this by getting the nth value rather than the FirstOrDefault 
Why not just use a json file?
VS for Mac has come a long way but I prefer Rider a bit more. Just easier to get around in general.
You don't need node.js, you can run MongoDB locally, but MongoDB's flexibility tends to clash with C#'s strong typing. 
Finally, they've introduced an integrated memory profiler. Three more items, and then Rider officially solves all my desires: 1. Edit and Continue -&gt; [Go vote for it](https://youtrack.jetbrains.com/issue/RIDER-5176). 2. Database first. 3. WinForms support.
didn't know it require those to work in Australia, for many other countries it's easy to work if you only got an offer. Anyway thank you
this could be helpful [https://github.com/dodyg/practical-aspnetcore/tree/master/projects](https://github.com/dodyg/practical-aspnetcore/tree/master/projects)
For a C# friendly NoSql option, my choice would be RavenDB. It can also run embedded, so no need for a separate install. 
&gt; Firstly I generally dislike the idea of resetting vars outside of something like a loop where it’s basically still only set one per iteration What?
Use atlas for mongodb with easy setup and free on minimum tier. Or like one other person mention you can suffice for testing using something like jsonserver to server a json file acting as a database something like this to get you up running quickly for testing [https://jsonplaceholder.typicode.com](https://jsonplaceholder.typicode.com). if you want something little more powerful than sqlite there is an h2 in memory database solution I've used it with Java haven't used with c#
Maybe you’d get more done if you spent less time on that wheel you love so much.
yea, thats not how it works in prod - atleast for a bunch of us. &amp;#x200B; many companies wont just update their .NetFx to anything higher than what came with windows, except when it was previously tested on systems to make sure it does not interfere with any of the other applications. &amp;#x200B; Had a VoIP Client written in Net4.0 not working on net4.5 and the company just refused to update because the VoIP Client was EOL and thus had no support going for it.
I've enjoyed using [LiteDB](http://www.litedb.org/) as another option.
Just deserialize the List as you normally would, then construct a new ObservableCollection and pass it the deserialized List.
The documentation is really good.
I was about to ask this. In my work, a senior .NET developer suggested the following. Keep in mind that I'm already familiar with backend, but using Java. *.NET MVC Application *.NET Core RESTful API (maturity lvl 3) *Entity Framework Core *CQRS *Learn and apply DDD/TDD/BDD *Migrate the MVC App to a .NET Core RESTful API (using everything) I would appreciate suggestions on what I can add to this roadmap.
Why not just encrypt the values instead of obfuscating the keys? The way you've done it, I can still see ALL the important data (names, age, friend's names etc.) It wouldn't take me 2 minutes to figure out what those fields were.
No you dont need obfuscation. If youre just learning programming which it seems so, nobody will want to crack your app. If youre serious, security by obfuscation, and also generated through a tool (like in this case) is no security.
Pretty much sums up why I stopped using it and ended up installing a Windows partition for VS. Got frustrating and demotivating to write for a couple of seconds in the flow of work to have the IDE swallow up what you've typed and break my train of thought.
Could you give me an example?
I also had to look it up because I also had not seen it before
the data stored in the json file isnt important. only the binary of the exe itself is important. And i want to allow transfer of the json file to different comupters
He's obfuscating his program, not the data. And Newtonsoft.Json uses the property names as keys when serializing. But when he runs the obfuscator over his app, then the property names are changed.
&gt; i need my program obfuscated. Big question is: Why? Obfuscation will not protect your app in the slightest.
yeah thank you very much for clarifying that
i want to solve this programming problem. i dont do it on purpose
Use the `JsonPropertyAttribute` on **every** property and explicitly give it a name. Then Newtonsoft.Json will use that value as the key, instead of the obfuscated property name.
&gt; He's obfuscating his program, not the data Again, I may be missing something here, but Json is data, it's not a program. He's obfuscating his data As far as I can tell from his description he's deserializing to the same model as before, so all he's doing is obfuscating the keys in his data. That's not the same thing is code obfuscation.
&gt; Again, maybe I'm missing something here, but Json is data, it's not a program. Yes, you are missing my second sentence: &gt; And Newtonsoft.Json uses the property names as keys when serializing. At runtime you tell Newtonsoft.Json "hey, please serialize this object of type `Foobar`", and Newtonsoft.Json will gladly do so. It will generate a JSON string for the object, where the keys are named after the properties of `Foobar`. But when the obfuscator renames the property `Foobar.Name` to `foobar.n`, then you will suddenly have a `"n"` key in JSON.
thank you very much !! reference: [https://stackoverflow.com/questions/15915503/net-newtonsoft-json-deserialize-map-to-a-different-property-name](https://stackoverflow.com/questions/15915503/net-newtonsoft-json-deserialize-map-to-a-different-property-name)
What is the **exact** error you get? Not a "seem like it only hangs up". What is the code you use to serialize the objects and write them to a file? Come on, show at least **some** effort when asking for help.
And how is that obfuscating his program? All you've told me is that his data changes. You see what I'm getting at?
absolutely perfect solution. Big thanks to you
No error is given, it just works forever... IT works fine if I reduce to 320 000 objects.
&gt; And how is that obfuscating his program? I assumed you know what an obfuscator is and does. He has this class in his code: public class Person { public string Name { get; set; } } Then the obfuscator runs and changes his code to: public class p__re__q { public string n { get; set; } } So when someone tries to decompile the program, the code is less easy to understand. Instead of having an understandable name `Person.Name` you have the name `p__re__q.n`.
And why do you ignore the second question?
Have you tried inverting the modular converter polarities?
So you're saying that if I have "John" and "Sam" and I change the key/property name from *Name* to *p\_\_re\_\_q* that's suddenly going to completely baffle me and I will have no idea what "John" could possibly be. That's not obfuscation, that's just fucking up your data and your data models. It's zero level security and completely pointless.
var deserializedList = Deserialize&lt;List&lt;object&gt;&gt;.FromStream(stream); var observableCollection = new ObservableCollection&lt;object&gt;(deserializedList);
What is _getData doing? What is calling SerializeAndCache? If you're creating endless allocations somewhere it could potentially use up all the memory or slow down the garbage collection so much that it basically becomes useless. We need more info. How much data is in the serializedData for each pass? Etc...
What do you mean exactly, and what is `Process = { Status = "..." }` supposed to be?
See [this thread](https://www.reddit.com/r/csharp/comments/a7agax/can_someone_please_explain_this_piece_of_code/), they talk about it there.
Can you use annotations on your model class that newtonsoft can use for names so it doesn't obfuscate the files?
Thanks for your reply . It worked !! https://stackoverflow.com/questions/15915503/net-newtonsoft-json-deserialize-map-to-a-different-property-name
Personally, I would recommend sqlite as well, even if you may not need it at this point. It's something you should definitely familiarise yourself with.
&gt; It's zero level security and completely pointless. There's no value Congratulations. **Now** you understand obfuscation!
Of course it does. Heck you can even use full ms sql on Linux. The issue doesn't seem to be with the sqlserverce but something with the IO as detailed in the error I'm getting.
&gt; That's why me, and others here Errr yeah, me. &amp;#x200B;
Is it exactly a number. Maybe it’s choking on a specific object that is formatted incorrectly. 
Thanks for answer... Could you provide me an example? I noticed that the 320k objects provides a txt file on 500mb. I have shown you over how I did this, could you provide an example? The GetData(); function returns a List&lt;Category&gt;
Separate your database table concerns, like you did for City for ex Table Owners * public string OwnerFirstName { get; set; } * public string OwnerLastName { get; set; } * public int ID { get; set; } * public int ResourceID { get; set; } Table Residents * public string ResidentFirstName { get; set; } * public string ResidentLastName { get; set; } * public int ID { get; set; } * public int ResourceID { get; set; } &amp;#x200B; Table Resource * public int ID { get; set; } * public string BuildingName { get; set; } * public string OwnerID { get; set; } * public List&lt;Residents&gt;ResidentsList { get; set; } * public int CityID { get; set; } * public virtual City City { get; set; } &amp;#x200B;
Well, I have only tried 320k and 420k and it starts choking on 420k. Retrieving data is just fine, and it returns all the objects (320k and 420k), but at serializing it seems like it just hangs up, it works on its own thread, so I'm not sure. But the process memory is around 3GB
Are you running as 64 but or 32 bit?
Pseudo Code item2 = Foo.item2.GetValue() then item2 .GetName() ???
 var obj = new { Name = "Bob", Age = 50 }; using (var fileStream = new FileStream("Foo.txt", FileMode.CreateNew, FileAccess.Write, FileShare.None)) using (var textWriter = new StreamWriter(fileStream)) { var serializer = new JsonSerializer(); serializer.Serialize(textWriter, obj); }
Hamsters gotta get that cardio, bro.
When you make software that runs on people's PCs they have complete control over how it runs. In theory, that means no DRM or other security is possible. In practice that means if you add enough layers of such protection, most people will give up at some point. 
Probably you're running out of memory. Can you check your memory usage? If my memory serves me correctly, 32bit applications has 2gb limit per process. So if you're running in 32bit mode, it will probably hit that limit. Can you also force your app to run in 64bit mode?
When obfuscating or protecting data, do not change the data. You generate your data, then the obfuscation/encryption function. When you want your data, you run the decryption/deobfustication, then process data normally.
That’s exactly what he’s telling you, though. Obfuscation is a feel good attempt at security. With your example, it’s like taking a car and putting a car cover on it. You can easily find out what kind of car by taking the cover off - obfuscation causes someone to take longer to guess what kind of car it is but ultimately, there’s nothing from stopping them from taking the cover off. I imagine op has a school project on obfuscation and it’s a point of concept, not anything that would be used legitimately in production. 
Jesus Christ I ammend you for your patience 
&gt; i need my program obfuscated why?
Removed: Rule 4.
C# enums are generally very weak, from a typing perspective. You can assign any value to an enum via a cast, even if the value doesn't exist. You can even assign 0 to any enum *without* a cast, even if that value doesn't exist.
&gt; Which language? If only we knew what sub we were in... :p
I thought I was in another sub yes. My bad. Why wouldn’t they be unique? There’s usually very little point in having separate names for same values, since it doesn’t really make sense. 
&gt; Big question is: Why? Obfuscation will not protect your app in the slightest. If someone wants to crack it, he/she/it will. Obfuscators won't change anything about that. While I agree in an absolute sense, it definitely can raise the bar. It will probably mostly succeed to annoy people who need to reverse engineer it to see how something works.
If you are looking for video tutorials, [kudvenkat](https://www.youtube.com/user/kudvenkat) is one of the best guys
I'm using "Any CPU". Okay, give me a moment and I'll test. I'm thinking of trying to test binary serializer instead.
Reminds me of resharper which, while great, used to perform like a dog unless I gave it 2843828GB of ram. 
Setup nlog's internal log output to capture any errors in your configuration. Like type casting errors etc. 
Do you know how I can deserialize it? Maybe use binary serializing to compress the file?
I find sqlite to be the most suitable for your case. You can simply create a generic handler for sqlite and query your database through it using Linq.
Checked your script. Your exception column is too small and will result in nlog errors if your try to log a stack trace. You need to review the other columns too. Use a text type instead of varchar. There is no performance penalty In postgres using text instead of varchar. Varchar is basically a text field with a constraint of 50 characters internally.
Why is SQL necessary for this use case?
Aside from attributes, the problem seems to stem from two different compilations of the same program. Most of these obfuscators offer compile time obfuscation and not runtime obfuscation as the later makes no sense. Therefore it shouldn't matter what the compiled version of the symbol is as long as the same program is both serializing and deserializing the data. If this was run from visual studio directly then odds are it is doing a recompile on each run with a new psudo random seed for obfuscation. If the json data is public or is interacting with a service for that data then yes you need attributes or use a classless JToken instead. There also might be an attribute for the entire class that the obfuscator will recognize to not obfuscate it.
Probably following a technical specification written by senior management.
Sounds like OP would like to get experience with it by writing a simple little program. I’d probably do the same just for ease of data access and not having to write my own layer. 
Turns out they're using websockets like one of the other commenters said, those enable the server to push updates to a client
First you should mention if this solved your problem. For deserializing... Well, do the opposite? Open a file in read mode instead of write mode, create a stream reader instead of a writer, then deserialize instead of serialize. It's no black magic.
I made the points he made in my very first comment though before he replied, so I’m still trying to figure out what he’s trying to correct me on.
The word is commend.
Does this looks correct? WHat if I want to use binary serializer? private async void DeserializeAndCache() { using (var fileStream = new FileStream(FilePath, FileMode.Create, FileAccess.ReadWrite, FileShare.None)) using (var streamReader = new StreamReader(fileStream)) { using (var reader = new JsonTextReader(streamReader)) { var serializer = new JsonSerializer(); this.Collection= serializer.Deserialize&lt;ObservableCollection&lt;Category&gt;&gt;(reader); } } } 
&gt; Does this looks correct? Sure. Did you try it? Do you want me to hold you hand when you try it? &gt; WHat if I want to use binary serializer, how can I write and read to/from file? That would depend on the serializer you use. There is no common API for serializers in .NET / .NET Core.
This implementation of ForEach() is going to have problems if the IEnumerable&lt;T&gt; is not safe to re-iterate. You probably should go with something more like public IEnumerable&lt;T&gt; ForEach&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T&gt; action) { foreach (var x in source) { action(x); yield return x; } } You could do some type-sniffing for arrays, lists, etc to optimize, though.
I can't help but find this funny because I exclusively use Rider because of the same problem with Visual Studio (with or without Resharper). It's crazy how differently these tools react to varying workflows.
Obfuscation is a waste of time, it doesn't stop anyone who really wants to read you code from doing it. Now that that's out of the way. Your obfuscator is changing the name of your variables, that's literally what it does. You can fix this by using [a json property attribute ](https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonPropertyAttribute.htm) to specify the property name. 
Between a dynamically typed language and a statically typed language, I will always choose the latter.
No.
Your `IsValidIp` method does not work correctly. Testing it with `"[::1]"` returns `false`. And another note: I think extension methods on .NET primitives are heavy code smell. They add methods to the types that are not applicable in the majority of values.
Got it to work now. Thanks! Yes please hold my hands :D 
Scanning over the rest of this, a lot of it looks either kinda iffy or very specific in purpose. IsNullOrDbNull could be more cleanly implemented: bool IsNullOrDbNull(object x) =&gt; x is null || x is DBNull; rather than getting and comparing types. And I'm skeptical of the URL validation. Wouldn't it make more sense to leverage Uri.TryCreate?
That `.Empty()` method is terrifying; on first reading I thought it meant something like `IsEmpty`. Why not use `DeleteAll` and include a boolean flag for `recurse`? No chance of confusion, especially for a very destructive method.
This version has issues too. The name `ForEach` implies it's happening for **each** element. But if I don't continue to iterate the enumeration the action is never executed for the remaining elements. To comply with the name you'd have to iterate and store the elements in a list, then iterate again for the yield. Double iteration, potentially often increase of the lists capacity. Hidden away in an obscure extension method. public IEnumerable&lt;T&gt; ForEach&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T&gt; action) { var elements = new List&lt;T&gt;(); foreach (var x in source) { elements.Add(x); action(x); } foreach (var x in elements) { yield return x; } }
Ah, you're right. Best to return void, then, and just deal.
The IP regex doesn't support IPv6, and the framework already has `IPAddress.TryParse` anyway (although that also supports a couple of esoteric formats). The URL regex is broken in multiple ways. The `\w` character class includes punctuation which isn't valid in domain names (like `_`), and because it doesn't specify start and end matching it allows anything *containing* a valid URL like `foohttp://example.com\r\n\tbar`. If you fixed the latter issue, then it would reject valid URLs like `http://example.com/fo_o#bar`.
Rider always worked perfectly for me on Windows, but I needed Linux for my work and had the option to use VS on Windows so I did. When I gave in and switched to Fedora, Rider was unusable and VS was inaccessible, the only option left was VSCode and it felt inferior seeing as I'd only just come off VS. Weird world.
&gt; In ToDictionaryProperties, don't create an empty array. Instead use Array.Empty&lt;T&gt;() to avoid allocations. And, on that note, having a method named `Empty()` that *deletes the contents of the directory* rather than returning a boolean indicating whether the directory is empty??? That's not a good name for that.
Totally a memory issue. You’re converting the entire thing in memory, then writing it all to disk. You need to parse/write in chunks.
C# has attributes, not annotations.
I see obfuscation as a cut off filter. All it does is to make it non-trivial to extract the source and imo that's more than good enough to disincentivize most low skill wanna-be-hackers. The way .Net is built, there's no way it will hinder a highly motivated coder, but these guys probably have the talent to duplicate whatever the code does faster than it takes them to extract the code anyway :) 
See how your owner table and resident table are identical? (DRY - Don't repeat yourself) You don't need two tables, you need a distinction between owner and resident. Add one more field, name it appropriately (like people) and get rid of one table.
This is pseudo code, but most probably in a full scale app it would store different types of fields, for a owner and a resident.. So your DRY thing is relative. &amp;#x200B;
"data annotations" are a thing though in C#
&gt; IEnumerable&lt;T&gt;.ForEach [`IEnumerable&lt;T&gt;` isn't really intended for methods with side effects.](https://blogs.msdn.microsoft.com/ericlippert/2009/05/18/foreach-vs-foreach/) &gt;String.IsValidIp() This a rather naïve implementation and, critically, won't work with any IPv6 address. But why does it even exist? `System.Net.IPAddress.TryParse` does what you want. &gt;DateTime.ToFormattedDateTime(bool includeTime) This seems a bit specific. It should probably also make it clear that it's formatting _for HTML_. I thought this was creating a string, as in pure text. (This is also very US-specific.) &gt;DirectoryInfo.Empty() As FacticiusVir said, I'd call this `DeleteAll()` and make `recurse` an optional parameter. This intuitively makes it far clearer how dangerous the method is, while also making it more flexible. &gt;String.IsValidUrl() Again, please just use `System.Uri.TryParse`, which is faster and far more correct.
If this is static data, i.e. won't likely change during the lifetime of the client application being open then you can store these values in application memory, persist to disk or use a caching mechanism (all depends on the application complexity). If you're building a simple app with very limited overhead (memory usage) then you could simple read in this data from MS Access via ADO.NET and store it in global memory somewhere (maybe an application Instance?). This way, it only ever connects to the database to read this data once, either the first time the application is loaded (pre-loading technique) or first time the application needs the data (on-demand technique) and saves the data in memory so that the next time it is needed it does not re-fetch it from the database. **I'm guessing your app is perhaps even simpler and these approaches are more enterprise grade then necessary.** If that's the case, why don't you just read data into the Windows form from the Access DB [the traditional way](https://docs.microsoft.com/en-us/visualstudio/data-tools/connect-to-data-in-an-access-database-windows-forms?view=vs-2017).
By not doing the thing that causes the error.
[Realm.io](https://Realm.io) is fun to use. Has a lot of benefits like living objects. Check out their .net documentation
https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.2 Go through the Web App / Web API tutorial. It has everything you need.
I'm trying to set it into my observablecollection, but it results empty.
So you assign this.Category with a Deserialize call.... THEN you reassign it to obj as ObservableCollection&lt;Category&gt; &amp;#x200B; What is "obj"? Also once you the second assign happens, I imagine the original assignment (from the deserialization) goes bye-bye (unless it is a property with some side effect)
Thanks, that bit about text vs varchar was new to me. I didn't realise that nlog had the ability to do internal logging. I set that up and got tons of errors but knowing what they were I was able to fix them. Thanks you!
seems like you just need to track your width/height and then just replace the # with a . when the # only has one or less neighboring #, you track the width and height so you can calculate the Y (up and down) neighbors 
I'm not entirely sure what you're asking. I think that what you're trying to do is to remove the dots that are outside the room, but leave the dots that are inside the room? If that's right, then the way to do it is to trace a line from a particular dot, to the edge of the diagram. If that line crosses the room boundary an odd number of times, it's in the room so leave it. If it crosses the boundary an even number of times, it's outside the room so remove it. In your case, one thing to consider is that "crossing the boundary once" might involve passing through more than one # sign. If the # signs are adjacent to each other, then you've only crossed the boundary once. If that's not what you're asking about, then more clarification is required!
Visual studio for mac has pretty much nothing to do with visual studio for Windows. It's essentially the latest version of MonoDevelop. Rider gives you so much more in terms of refactoring and it's a much more feature filled ide. Personally I would order them like so 1. Visual Studio (Windows Only) 2. Rider (Cross platform) 3. Visual Studio Code (Cross Platform) 4. Visual Studio for Mac (macOS only)
This is the type it returns: obj Count = 100 object {System.Collections.Generic.List&lt;DataAccess.CategoryData.CategoryData&gt;} 
It doesn't raise the bar that much, since decompiled C# will have all your external library calls unobfuscated. After that it's pretty easy to just refactor-rename things for a few minutes in your IDE of choice. And if you have any connection strings or other literals, or you're using an ORM (which gives you the field mappings for free) you're boned.
I've never called this middleware. I always called it a service or daemon application. Whether you use TCP/HTTP/Socket it or use Windows, Mac, Linux the name is the same. It's very very important to note, if you're going to use HTTP and not HTTPS, it's all clear text. Doing a service application over HTTPS that talks with hardware and having a website that talks to localhost with JavaScript is a great way to interface hardware/devices into a web application. But you have to be smart about your security.
I assume you are meaning you want to remove the points on the outside of the shape? &amp;#x200B; I'd processes this a line at a time. Start with some flag indicating you are currently outside the shape. `is_outside_shape=true` then go through the line one character at a time: * if the character is a `#` then toggle the value of `is_outside_shape`. `is_outside_shape = !is_outside_shape` * if the character is a `.` and * `is_outside_shape` is `true`, replace the `.` with the charater you want to remove it with (space, #, whatever) * `is_outside_shape` is `false` leave it as it is once you reach the end of line, reset `is_outside_shape` to `true` and start the next line. 
I think you would be missing the case on the left in row 6-7 from the bottom. I think I would take another approach and actually look at when a tile has 3 or more neighbors (counting with diagonal) and then match to see if those neighboring tiles are connected and if they are remove the tile and if not keep it. This does though require that you spriral from the outside and in to the middle when iterating and update the array you are going over while doing so.
Hi what’s a good library that readily handles and creates XML files according to dictionaries or data array? I am new to the database and data handling as well 
That's not what middleware is....
You can use binary serialization, this is a C# feature that allows you to convert objects into binary data files and back. https://gist.github.com/vaclavbohac/962739 this is an example (not by me)
Depending on what type of development you wish to do, a good intro to web dev with ASP.NET MVC and Razor Pages can be found on YouTube. I dont have exact link on me, but if you search "asp.net mvc todo list" there should be a 14 or so part series with a guy who will explain stuff at a good level as to be not too complicated, as well as exposing you to new tools and features you haven't used yet. That's what I did and I think it worked great. It gave me a better sense of how all the different parts of an app interact with each other in the backend and how the user experiences the front end.
Noob here too. Other than tutorials, something to try could be to find "a need" that needs filling, and make an application for that. Something small. :-) Good luck with it all.
That make sense to me but how can I check if tiles are connected?
Normally you can set the obsfuscator to leave certain parts of the application alone. I’d move these classes (are the just dtos?) into their own project and tell the obfuscator to leave that project untouched. That way the application code doesn’t have to worry too much about the obfuscator. As for the comments about obfuscation more generally, I’d say it has a place. If your application has lots of logic you don’t want share then it makes sense. If it’s just wiring up various other libraries and frameworks then not so much.
In your example you made two identical tables by way of demonstration. I can't think of a single example where DRY would be anything but applicable. 
Obfuscation isn't necessarily about protecting the app itself, but rather the actual logic in the code. Sure, it's still easy to crack, modify, and reuse. But if the codebase is complex, it would be basically unreadable. I've literally seen non-obfuscated codebases that take dozens of hours to understand and are extremely difficult to port over into another app. If it were obfuscated, there'd be no chance in hell of doing anything with it. 
if you iterate though the list of the list of neighbors clockwise and do something like this. Bool groupOfThree = false for (int i = 0; i&lt;9; i++) { Char prev = i==0 ? neighbors.get(8) : neighbors.get(i-1) Char current = neighbors.get(i) Char next = i==8 ? neighbors.get(0) : neighbors.get(i+1) if (prev == '#' &amp;&amp; current == '#' &amp;&amp; next == '#') { groupOfThree = true; break; } } &amp;#x200B;
You should now send you CV for NASA.. Have a nice day. 
I wrote an article about this, you can found it here. https://medium.com/@danijelhdev/multi-page-net-core-with-vue-js-typescript-vuex-vue-router-bulma-sass-and-webpack-4-efc7de83fea4 And github https://github.com/danijelh/aspnetcore-vue-typescript-template
The company I work for pays more than they do. And the developers I hire are responsible for their code, including DRY and SOLID principles. Definitely focus on those things as you learn, don't resist them. Also, don't take comments made in a code review as a personal attack. We all need to be reminded when we are making a small mistake. If you can't tolerate a small and respectful comment about your code then you really will have a difficult time in this business. 
??? Who's taking it personal? Did you even read what you wrote? Who's so good that he needs to show off in the internet how much he his paid? And how good he his and how he makes the people he hires use dry solids?? ? Get your head out of your ass and be HUMBLE! 
The Analyzers are interesting. Has anyone else come across the problem that you should document all return types but doing so means that autorest detects multiple return types and creates an API that returns type object. Has anyone found a suitable solution to this?
So you are trying do a reference type cast from System.Collections.Generic.List&lt;DataAccess.CategoryData.CategoryData&gt; to ObservableCollection&lt;Category&gt; ? If so, I assume the run time would simply regard that as null as they are not compatible types. Also, wouldn't: this.Category = bf.Deserialize&lt;ObserveableCollection&lt;ContractMetaData&gt;&gt;(file); become useless, as you are overwriting that property on the next line of code?
Technically, he just needs to replace all `#`s with `.`s.
Well obviously I was wrong. Clearly you are not angry or snarky. My fault, I appologize. Also, I am blocking you so this will never be a problem again.
Nooop, head still stuck up his ass. But good we won't be having dry solid agile scrum kiss problems again... 
what do you want to make? They didn't have them fancy tutorials on their fancy world wide web when I was young, we just did what we had to do and we liked it. &amp;#x200B; but seriously, I think the best way to learn is make something and figuring out how to do what you want t do.
You and I are both being downvoted and there are no other comments. I smell vote manipulation.
That's because you're both wrong
Okay. So I did something like that: 1. I create list of neighbours which is List&lt;char&gt; containing 9 elements. 2. I go thorugh my map which is array presented in post. 3. I check clockwise some kind of 3x3 square around i, j "coordinates" and I add to list '#' if neigbour is equal to '#' or space if is not. 4. After checking i, j-1 coords I add to list space. 5. At the end I check if there is connection between points with your function. What am I doing wrong because it's not working like it shuld be? And thanks for patience. ;) 
Boy I really hope C# gets record types soon!
Csharp is better just the discord .NET is unweildly
What are record types?
Basically a lot of the boilerplate the original post is talking about, immutable PODOs with boilerplate for things like `IEquatable`, `Deconstruct`, and `With`, baked down to a single line of syntactical sugar. So you'd basically write `public class Foo(string Bar, string Baz, DateTime When);` and it'd roll it out into a whole data type complete with accessors, constructors, etc. Check out [the proposal](https://github.com/dotnet/csharplang/blob/master/proposals/records.md), it has several examples of how it might end up, or here's a [blog post](https://blog.cdemi.io/whats-coming-in-c-8-0-records/) with a succinct example
You need a building Identity table, an owners Identity table which references the building identity ID table, a resident Identity table. With ID columns in each. Then you can have a building resident table, containing just the IDs of each of the identity tables. BuildingID, ResidentID -- this can have multiple rows A table join can create a view then so this is all human readable later. 
&gt; MVC’s validation system is designed to be extensible and flexible next joke
Awesome thanks! Automatic POCOs? Count me in! Glanced at the proposal on GitHub, do you know how the proposal gets "voted in"?
I wasn't aware .NET Core had a pipeline? I know ASP.NET/ASP.NET Core has one though. Yes I am being pedantic, because I think its just lazy to not even call something by the correct name.
Is there a name for the pattern that this code is using? public abstract class DocumentTranslationResult { private DocumentTranslationResult(){} public sealed class Success : DocumentTranslationResult { public Success(Document translatedDocument) { TranslatedDocument = translatedDocument; } public Document TranslatedDocument { get; } } public sealed class Failure : DocumentTranslationResult { public Failure(string error) { Error = error; } public string Error { get; } } public sealed class PartialSuccess : DocumentTranslationResult { public PartialSuccess( ImmutableDictionary&lt;int, ImmutableArray&lt;string&gt;&gt; pageErrors, Document translatedDocument) { PageErrors = pageErrors; TranslatedDocument = translatedDocument; } public ImmutableDictionary&lt;int, ImmutableArray&lt;string&gt;&gt; PageErrors { get; } public Document TranslatedDocument { get; } } }
Has this changed in a recent-ish version of C#? Because the code from your screenshot certainly does not compile for me in VS2013 targeting .NET Framework 4.5 (which I believe is C#6). Lines 58 and 59, where you're assigning to RectangleRO.P1 and RectangleRO.P2 don't compile because: `The property or indexer '...' cannot be used in this context because the set accessor is inaccessible` Which is entirely what I would expect. Otherwise the object initializer \*would\* have special semantic meaning, allowing you to set a private setter from outside the class. (So it's no longer just syntactic sugar.)
Removed: Rule 4. Here's a StackOverflow question/answer that demonstrates how to add interaction and manipulation between forms: https://stackoverflow.com/questions/38768737/interaction-between-forms-how-to-change-a-control-of-a-form-from-another-form
You should hear the one about mvc authorization
Is PathHttpContext called once or many times? If it's called my times you may want to cache those reflected results. 
1° Mark cells as "inside the room". You can do this by starting with a cell known to be inside the room (the one in the middle?) then recursively marking all its `.` neighbors (north, east, south, and west) without touching the `#` cells. 2° If a `#` cell does not have any neighbors inside the room (north, east, south, west, as well as northeast, northwest, southeast and southwest), then turn it into a `.`. This will end with a room that is surrounded by a thin wall of `#`, and all `#` not part of the room will disappear.
Haha! That is also a joke.
I had a problem a couple weeks ago, the library provided by hardware manufacturer was sharing sensitive information with Google Analytics- a no-go. Company refuses to take out GoogleAnalytics / stop sharing- and the hardware is already installed on thousands of devices. So I decompiled the library and started the refactor- the issue was: the library contained code for 15 other devices, bitmasks different for each one, etc etc. I worked on it for a couple days getting nowhere fast- I threw all that code away and started from scratch- and saved me a lot of time and the code runs better. Obfuscation isn't about absolute protection of your code, its merely a deterrent from casual code theft.
I was a professional developer. 4 years ago I would tell you it would only take an hour. A couple of weekends ago I said it would take 16 hours. Took me 80 for perishable food, then scope increased it to another 80.
 enum Version { 1_0, 1_1, 2_0, Latest = 2_0 }
Honesty it's all a just a typical Medium post to me.
Indeed
Sorry for long response time. You are not going through the array in a spiral manor on the big scale, which is necessary for it to work. A bit clunky i admit. It's not really an easy thing to do.
You can vote for it by reacting on GitHub. The holdup really isn’t lack of interest though; there’s disagreements over the details (e.g.: how do they differ from tuples). They’re less looking for votes and more for a comprehensive sound proposal.
No problem. Does it have something to do with modulo operations? Because I have an idea but I'm not sure if this is what you have in mind. I have one more question. Is order of checking the neighbours correct? You wrote that it has to be clockwise so I went that way but I don't know if my approach is corresponding to yours.
I would suggest to do something like extracting the first row of the array, then removing it and then turn the array to the left and and then repeat for doing the spiral, but you would have to make a lot of functions yourself. The clockwise thing could just as well have been counterclockwise it's just important that you do it in order around the middle tile.
Looks like a variation on a discriminated union.
Well, that's the benefit of having an API - you're abstracting the backend. This allows you to make changes and only push new major changes in version when needed. Since you've made this "contract" with the user for this version, you shouldn't change schema so you'll need to find a way to fill that column (or null if it was nullable). Comes down to business cases - if you need to change schema to customer, new major version, else, fill that data.
Sounds complicated. Thank you very much for you help. I’ll try that later.
XML serialization is built into the framework (search for `XmlSerializer` in the doc and XML attributes such as `[XmlElement]`). I wouldn't call it a good library as it is a bit ancient with some shortcomings but it does the job for simple cases. `DataContract` serialization is a bit more modern but also slightly more involved, but again built-in the .net framework. Then you have third-party libraries. Json.Net is one of the most popular for json files. SharpYaml is good for yaml files, etc. Some links to get you started: * https://docs.microsoft.com/en-us/dotnet/standard/serialization/introducing-xml-serialization * https://github.com/JamesNK/Newtonsoft.Json * https://github.com/xoofx/SharpYaml 
Yeah, if you've promised some data in a version of your API, you need to provide that data as long as the version is live. If you need to drop support for something, you need to talk to your callers and get them on the next version. 
I've been stuck in tut world for a month. Gave it up and built a simple dice roller via console app. I'm pretty sure it sucks, but I built something that doesn't crash when I do Ctrl+shift+B - so there's that. It just asks the user how many dice are we using, and it rolls that many. Then after rolling the dice it prompts the user if they want to play again.
Thank you so much. I will try the xml case first . Thank you for the help .
Obfuscation renames variables that's it. It makes it harder for you as the developer to support and does nothing else to anyone else.
Well, no, it also renames methods, classes, removes comments, etc. And developers should pretty much never see obfuscated code, unless it's in a stack trace. Obfuscation is a process that is performed during a release build. 
Now I don't have my dev studio open to confirm this and am a few beers in but... Shouldn't 'SomeMethod(MyClass myClass)' function bit be on a dereference error because you're not using it AND it's only dereferencing the function variable? So the warning is fine as is?
&lt;mic drop&gt;
Given your code, `obj` is unrelated to serialization issue. Where does it come from and what are you trying to do with it?
It renames symbols. And of course developers see obfuscated code. Code doesn't magically disappear when it goes to release. Obfuscation hurts you far more than it helps.
Oof, you are correct! I had copied and pasted the wrong piece of code (Was checking what you are saying above). But the text in the article is still correct. For example : class MyClass { public Random Random = new Random(); } static void Main(string[] args) { MyClass myClass = new MyClass(); SomeMethod(myClass); var next = myClass.Random.Next(1, 10); } static void SomeMethod(MyClass myClass) { myClass.Random = null; } This will only generate the assignment warning, and not the fact you are 100% going to get a null reference exception. 
Handling SFTP and FTPS is pretty simple from what I remember doing in .net framework. Is there differences in .net core that require additional libraries now? Honestly wondering.
I had to write some ridiculous program 2 days ago where I used Process() and winscp and was passing command line parameters and it was a headache but it worked, this is a million times easier holy shit.
Why ?
Have you used either?
What did you use for that? I've never been able to do SFTP in .net framework without a third party. SSH.NET is available for both regular and core.
So I go curious and went back and opened the project from my company's server. Turns out the project was using SharpSSH from back in 2013. It was abstracted into an interface and I was working on a different portion of the project. I did do FTPS which is fairly simple being just certificate management. Looking at SSH.NET now looks to be a lot more modern and we'll maintained.
I don't get it. I honestly don't understand the purpose of this. Just don't set things to null? Seems like a lazy excuse to not handle possible errors being thrown. 
I mean you could say the same thing about type safety. “Just don’t assign a string to an int!” 
You could also use [winscp library](https://winscp.net/eng/docs/library) to do that. 
That’s a great theory, and yet almost no complex .NET app ships without `NullReferenceException` bugs. Trying to discover them at compile time should significantly reduce them.
I haven't had chance to use Core's validation, but from some glances it looked clearly better than MVC v3-5 validation. Not so much, or are you referring more to the older versions?
Is that really a point of debate? Wouldn’t the obvious difference be having actual fully baked named properties, as opposed to the fake compiler magic that’s used to be able to reference Tuple members by name?
use `nameof()` to avoid strings and let the compiler catch any potential errors from renaming properties
Subtle, but I think I r/foundthemobileuser
Ah, you got me
`nameof` is returning the name of the variable, so it is not exactly what I wanted. This is what I was doing which made me think whether it is possible to do what I asked, basically using enums to pass in names/options like what .Net is doing with things like `NumberStyles.HexNumber`, and I use it in two places: enum CurveNames { SecP192r1, NistP192 = SecP192r1 } Then calling a func `CreateFromNamed(CurveNames name) { Name = name.ToString()}` then a `switch` to set other stuff. Obviously that didn't work. In this case the fix was simple since the values don't matter! I just removed the equality part and in my `switch` used two cases at once for those names that were equal. But another case the values matter (list of Forth-like operations): enum OpCodes { OP_0, OP_False = OP_0, } The names here still don't matter much, it was a matter of curiosity to see if I could get the names without adding an extension and extracting the attribute. 
I just did this today. If there are schema relationships it can be tricky to have a tool do this so it may be easier to do this in code. Also, presumably there will be schema changes moving from Access to SQL, so my process was such: 1. Create new DB Schema in EF. Code first, database first, doesn’t matter. 2. I find it much easier to go from EF -&gt; EF so I import Access data into SQL. SSMS has a built in import function. Create a separate empty SQL database. Tasks -&gt; import data -&gt; use the wizard to import your MDB file into SQL. 3. Once the data is in SQL you can start a new console app. In this app you can add a new database first ado.net EF model of the SQL db you imported from access. 4. Then I just wrote the console app to iterate through the records in the imported DB and migrate them into the appropriate entities and relationships in the new schema. If you’re not careful it can be slow but it only has to run once so it’s not that big of a deal. You can also have it flag the old records with a new bit column in the imported DB as they’re migrated so that when you inevitably encounter errors you can pickup where you left off.
If they implement records the same way they implemented ValueTuples, then I will abandon C#. That will be way too error prone.
That’s a great theory, and yet almost no complex I mean you could say the same thing about type safety. 
There are professional solutions that make your life a lot easier, especially when it comes to anti-tampering, anti-debugging/virtualization or even licensing itself. While it may break some things when used incorrectly, like view models and any reflection use, it's still a huge benefit. If you use a proper byte serialization (like ProfoBuf), your structures remain unreadable for the most part - they become a *moving target* between different releases. That seems especially pleasing in networking code - when you don't want the end user to just consume your documented API - some solutions randomize your layout and serialization methods. While the structures themselves could be reconstructed by usage-analysis and some heuristics, the control flow is irrecoverable, and so most of the logic is safe - it's converted into junk code with random MOVs and JMPs. The intent is not to prevent reverse-engineering, but to slow it down. In such case, you want to have a new release by the time someone has reversed the previous one. In networking code, by randomizing layout and serialization, you effectively prevent the attacker from using a previous, reversed release to connect to a current server.
That's right that
The serialization is working perfectly, I'm just having problem to map the deserialization objects to a observablecollection.
Control flow is always recoverable because control flow is what your application **actually does**. You can fuck around with it, but all you're doing is making your application slower and more unreliable. Those random MOVs and JMPs are actually changing the app you wrote in a meaningful way. In networking code, by doing that you're also ensuring previous versions of **your own code** can't connect to current versions of your server and vice versa. And God help you if you built the client and the server on different hardware,they won't talk at all. None of this shit works.
.NET includes FTP/SSL and FTP clients only. If you want to use the SFTP you have to get a third party lib. There is a list of sftp libs at [https://www.sftp.net/client-libraries](https://www.sftp.net/client-libraries) \- many of them are commercial, but some are free.
https://github.com/videolan/libvlcsharp
The entire point of ObservableCollection is that it raises an event when items are added or removed. Anything using it as a source should automatically know things are changed, there shouldn't be any need to new up anything.
Haha, hilarious update. Anyway, I just found out about this theme and what's especially interesting is how they were generated. Visual Studio 2017 has a very short supply of quality themes compared to Visual Studio Code and I think it's in part due to Code's rising popularity and Visual Studio's obnoxious theming system which seem to get some undocumented changes with every major update along with so much being themed with language specific keywords which are less flexible than a more generic system. So I think key for what's needed _is_ a "refactoring" of sorts with a generator, where the user supplied "base" uses a simplified, semantic system. Then you only need to adapt the generator for new Visual Studio releases. Maybe one day, Microsoft will redesign their theming system to be compatible with Visual Studio Code. Then we'd truly be getting somewhere...
The real question is why you're making so many enums with multiple items having the same value.
ew
What do you use the place order for?
I’m obfuscated using agile.net. I think it obfuscates the program quite hard
To display them in a list that grows bigger when the admin adds new entries. &amp;#x200B; The order in which entries should be has already been defined (in this case: [1st gen Pokédex](https://bulbapedia.bulbagarden.net/wiki/List_of_Pok%C3%A9mon_by_index_number_(Generation_I))). 
Guids won't be generated in any order. They're unique. Are you sure you're not thinking of ids?
is that you, /u/programming_SS ?
I use the Guid as the primary key \`Id\` because of that exact reason. When I was designing the whole ordering thing, I only took account of the Id's I seeded (with them being ordered already) so I didn't think ofdynamically generated Guids being unique.
Depends which other properties are available. But it is always good to have property int for ordering items
so you have to do static void Main(string[] args) { MyClass? myClass = null; if (myClass != null) { myClass.SayHello(); } } and can't do static void Main(string[] args) { MyClass? myClass = null; myClass?.SayHello(); }
Mentioned by others, it depends in which field you are going (web/mobile/desktop/etc). Based on that you should ask for resources. As general I would recommend you to getting used to msdn and using documentation as primary resource, since sooner or later you will end up with mostly it (well and stack overflow of course 🤣)
The error isn't related to IO, it's just that the Path class is in that namespace. Path.Combine takes two paths, like "/usr/bin" and "some/thing" and combines them into "/usr/bin/some/thing". In your case, the right side is null.
It's not a pretty example, but there are absolutely use cases for aliasing enum values.
I'd just add an Order property, like you were thinking, then.
 var latest = Enum.GetValues(typeof(Version)).OfType&lt;Version&gt;().Max(); &amp;#x200B;
You might want a Version 1 or COMB GUID generation method - those types of GUID's are sequentially ordered in time. If you're using a GUID as a clustered key in a database (which your primary key likely is) you really should be in the habit of using a sequential GUID, not a completely random GUID, to avoid fragmentation issues.
Reply hazy, try again.
Please use the code snippet formatting, this is unreadable in this state.
Go away.
In cases like this, I use `int` as primary key, and `Guid` as an alternate key which is the one I present to the end user. Make sure you index this field though, since you'll have to search for it as well. 
Use the NewId NuGet package. It’s an ordered unique Guid algorithm, and designed for use cases when you need an ordered primary key (and also clustered index for table page ordering). The bonus is that it also isn’t assigned by the database eliminating that dependency and allowing the Id to be created much further upstream for better tracking. 
How do you express possibility of value missing? How do you tell if parameter is required or optional? How do you handle external libraries setting things to null? And most importantly, why do you want programmers to do work that computer can do, cheaper, faster and more reliably? Why you are against our tools improving so we can ship better software?
Don't give a second meaning to your PK's, they should be used as a unique identifier only. In this case you should create a second property in your entity that corresponds with the pokémon number in the pokédex.
This is when I would just go back to a normal number type key instead of guid 
Having a Guid as a second “key” is also useful for database replication. 
This is the real answer. Guids are a pain in the arse unless your trying to duplicate a database or obscure stuff for the end user. Dont obscure stuff for the programmers.
Professor Oak always did have trouble sorting his data.
No readme?
The wiki contains everything, will update the readme
Removed: Rule 4. Please make sure to format/indent your code for display on reddit (use 4 spaces to represent an indent) Also, please better describe the problem and help you're looking for. Right now, the question you've asked is difficult to understand.
I have been using MSDN to research a few things and here. My interest in C# is mostly desktop &amp; web as that is what my job uses it for. However can C# be used for android?
As others have pointed out, GUIDs aren't generally intended to be ordered, which is why you're having the issues you are. For auditing purposes, have you considered a "date created" field? That would give you the functionality you need, as well as being trivial to auto-generate.
A wadl just describes a normal REST resource(s) so you can consume it using an HTTP client using the wadl as a guide.
Why can't you just use numbers instead of guids? Try to really think why you need guids. If you really need guids, just generate random guids but maybe also add a second column with an auto incrementing number. Then when you need a ordered query, order by this column. Or maybe a timestamp if that fits your purpose.
In case you're planning on storing a GUID as a database primary key in a relational database (and therefore placing a clustered index on this column) - DON'T. This data type will wreak havoc on indexes; they'll be essentially permanently fragmented and therefore almost unusable. For database primary keys, a type that is narrow and always ascending (like an integer) is always best. (I'm not sure if this applies to NoSQL implementations.)
Lol um, OP just so you know there is plain text login information and what i'm assuming is a working get url contained in that. Not sure what this is for but you may want to repost without that stuff ha. &amp;#x200B;
heh, you can do it fast or you can do it well.
Don't use GUID as a primary key.
you shouldn't use guids for any property other than to uniquely identify rows. If you care what order things were added to the db, that should be its own column.
You can avoid this by adding an incremental int column as a clustered index alongside the UUID PK.
In the blog post it's a private method called in a static constructor, so only called once. However, in the package, it's a public static method that's called during application initialize. It has to be public static to be able to be called during application init automatically. There is a guard on it, though. &amp;#x200B; [https://github.com/SOLIDSoftworks/Solid.Extensions.System.Web/blob/master/System.Web/HttpContextPatcher.cs](https://github.com/SOLIDSoftworks/Solid.Extensions.System.Web/blob/master/System.Web/HttpContextPatcher.cs) &amp;#x200B; [https://github.com/SOLIDSoftworks/Solid.Extensions.System.Web/blob/master/System.Web/Startup.cs](https://github.com/SOLIDSoftworks/Solid.Extensions.System.Web/blob/master/System.Web/Startup.cs)
You can use xamarin for Android and mac/iPhone. It's not perfect but most stuff can be done. In general yli recommend after you k ow the basics and are comfy with language, learn patterns since they are universal to any environment. In desktop you most likely will end up with wpf, so knowledge of mvvm will be beneficial to you. With web I would suggest learn net core (if you use Windows server then net mvc) with mvc and crap like js
Always, Always enact a data sanitation policy that uses generic words that establishes meanings of terms without the including your information.
This is the unmodified WADL from DHL with dummy data in it. 
On top of that, guids kill clustered indexes. Unless you fall back to sql and use sequential guids. Better to index off of an int than a guid - especially as data grows. 
How do you actually want to sort things? By their creation order? Use a DateCreated field. Last modified? Modified field. User-sortable order? Add an Ordinal int field and use that. Primary key should be for selection only.
You've then made an ever wider column, a composite key. Narrower is generally better for indexes; a simple surrogate key for the clustered index (on a unique, ascending integer), with a non-clustered on the GUID will provide MUCH better read and write performance.
I am currently organizing a bunch of projects across dozens of repos by grouping related codebases within a single repository, fixing their namespaces (the original authors didn't utilize the recommended namespace conventions) and refactoring. Only a little bit of refactoring at the moment since I don't want to make hardcore functional changes while I am still in the middle of these migrations -- that level of refactoring will come after. I am also deprecating chunks of code and cleaning up our CI builds as I go. I've only had 2 professional programming jobs since graduation and damn man, it's like people don't even try to maintain tidy codebases. I don't know if they care to, or maybe they care but it was impressed upon them that "this must be done now", or they simply don't understand the benefits of such organization. We can't even talk about the actual *hard* stuff yet like software architecture and design.
That’s one reason for the addition of sequential Guids (mentioned by another poster)
Could you possibly message me? I have a few questions for you
You need signaling between the collections if you want changes to one to update on the other. Easiest thing to do is to write your own IMPL wrapping observable collection. The only thing you want to implement is the methods to hook your 2 collections together and the IMPL on the actions for when things change in the collection. 
Yes the older shit. I just use FluentValidation now, which means it can be used in MVC or REST API's without tying my validation to MVC.
DI using Scoped? 
`Should I add a new property to my Entity which represents the place order of the entry or are there smarter ways to go about this?` Add a column called DateCreated.
&gt; The wiki contains everything, No, it's missing what this actually is, why its used, what it achieves, etc...
&gt; very short supply of quality themes compared to Visual Studio Code and I think it's in part due to Code's rising popu I appreciate your reply! I think most theming systems are too complex – even the one of VS Code. Dainty (and Base16 – which I have to admit that I’m not too familiar with) works as much needed abstraction layers. I think theme authors rather should spend their time figuring out what their color palette should look like, what color strings should have, and what color numbers should have. I think the UI should be as minimal and out-of-the-way as possible. At the same time I do think it should be possible by theme authors to go “low level” if/when needed.
I actually like this idea a lot better than anything I had planned prior. Thank you so much!
Go through this tutorial: https://www.youtube.com/watch?v=ayp3tHEkRc0&amp;t=1900s I found it really useful for learning to work with databases and formatting the data using LINQ and LAMBDA expressions. Use that as an outline to start building your own inventory management system. He sells a more in-depth version of that video on his website. I haven't purchased it and watched it but if you like his teaching style it might not be a bad idea. Tim also has some really good videos for design patterns I would recommend.
When you create an instance of an object using the new keyword, the constructor is automatically run -- that is correct.
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/constructors https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/object-and-collection-initializers
add a created on date modified on, order on either of those. you shouldn't be ordering by GUID. 
Hello, been writing code for 15 years. It is all of those things, and a few more. There are many many coders out there who just treat it as a way to pay the bills. You only ever hear from the ones who are motivated to write blogs, or record podcasts, which gives the impression that all programmers are like that. Not so! There are many reasons that codebases start to rot. I think that you have covered most of them! 
I actually strongly disagree with that sentiment. I could well be missing something, but in this situation, Pokémon number is by definition unique and is basically a pre baked primary key. Why wouldn't you use this? 
Having it as a primary key isn't a problem. Just don't cluster it, unless it's a field you do a lot of lookups against.
You're right, of course; not clustering on a PK is a pretty atypical implementation, however, as you want to typically cluster on the column(s) against which you'll be doing the majority of the lookups, if possible (i.e., uniqueness is guaranteed) in order to take advantage of the index - lookups on a clustering key are always going to be the most efficient. Typical usage means that most lookups are on the PK. MSFT is pretty clear about their advice around using GUID (or SQL UNIQUEIDENTIFIER) as a PK.
I agree it's not typical, just something to watch out for. Your first sentence implies "uniqueness is guaranteed" for all clustered indexes - obviously, that only definitely applies when clustering includes the PK (or another unique field).
I do not obfuscate my code. (My coworkers might disagree about that, though.)
I have no reason to obfuscate my code, so no I don't.
Obfuscating code won't help that much. 
I pushed some changes to Program.cs if you want to take a look :)
No, I’ve only ever heard bad reasons to do it. What conflicting information have you heard? When would it be good to do?
This is going to be a bit of a stretch in this case, but let's say The Pokémon Company's marketing department decides that Pikachu has to be #1 from now on, because it's the most popular Pokémon. Now you have to change every table that has a foreign key to that Id, because you gave a 2nd meaning to your PK. Another example that you might find in business software are integer PK's that are used as a order number. For auditing purposes you want these to be sequential with no gaps. At first glance an identity (auto incrementing) integer PK would be perfect right? Nope. SQL Server caches its sequences for performance reasons (1000 values per sequence IIRC). Whenever the server reboots, that cache will be cleared and you'll end up with a big gap in your IDs. Transaction that fails? That's another gap. Do NOT give a second meaning to your PK's! It might be fine for now, but it will bite you in the ass some day!
Don't bother, decompilers are damn good -- especially for languages like c# where you can't compile obfuscated code to binary.
If you’re shipping binaries to customers and are worried about someone potentially looking at or stealing code then it could make sense. Otherwise it’s pretty pointless.
No worries. Hope it works out 
I'm not really a fan of obfuscation. If someone really wants to know how your code works, it won't stop them and only delay them at best. On the other hand it makes analyzing stack traces from crash reports that much harder. Either you must guess which obfuscated method belongs to which method in your source code, or you were clever enough to keep a copy of the mapping file and use that to deduce that information.
I heard that obfuscation is used as protection against cheats in the game. Or in commercial applications. Some people write that you need to use obfuscation constantly. But I do not think it makes sense
If it's a game, and it's client side, it will be cracked. Doesn't matter what you do with the code. It'll be cracked.
We use obfuscators at my company. We expensive niche enterprisey stuff and our own customers apparently attempt to steal it all the time. That's what management tells me.
"Just don't put bugs in your software and you won't need to have exceptions."
It's merely a question...
&gt; Is the new Foo(); part a constructor? Yes. Everything in the brackets { } happens after the constructor. In fact, it is just setting properties normally but without the need to repeat the variable name over and over again. 
There's no point. If it needs to be protected, it needs to run server side. 
&gt; Do stuff, The only stuff you can do is properties initialization. 
Not only does my software get obfuscated, it has a ......&lt;gasp!&gt;.....license dongle!
So it is correct to do it this way? Like when I'm refreshing my collection, it seem like adding item to the ObservableCollections does seem to update the Querycollectionview
Yeah, obfuscation will add hours or days of difficulty to cracking it, at best. If the hackers are familiar with the obfuscator's behavior, possibly no difference at all. Even games written in compiled-to-binary languages with binary obfuscators still get cracked. The hackers don't need to understand your entire code. They only need to find the part that gives the final allow/deny and change that. Many, many, of these hackers are non-english speakers already, so the fact that the variable names and method names are obfuscated makes zero difference to them. 
Yes during builds I encrypt any code containing configuration settings and details such as database credentials. I then have the application decrypt it during run time.
You can encrypt c# code though, we do so to our c# applications during builds and it decrypt during runtime to get sensitive data like credentials for communication between system services and such.
I just code badly, making it very hard for anyone to understand how it works!
That’s not what obfuscation is.
I don't meant to piss on the parade that "the C# compiler is a great example that proves that code can remain clean as it grows" — it's an inspiring project with great people and, more recently, a decent community around it. However, I don't find this statement supported by what little data is provided in the article. As it says earlier: &gt;While some of the types seem to have come from refactoring, many of them are directly related to the new language features. Surely for the same reason many of those types come from _new_ features, existing code hasn't increased much in complexity: those new features by and large don't make existing features more complex. Code grows in complexity when we keep adding oriel windows to existing buildings, not when adding a garage next door.
Truer it's better than obfuscation
There is absolutely no reason. Here's a way to see exactly how good an obfuscator is at protecting your code: go find a C# repo on Github, and build it with obfuscation. Now, use something like dotPeek to crack open the compiled DLL and look at the code. You'll notice that a lot of names have changed, but the structure of the code is the same and all the references to .Net or other DLLs will be unobfuscated. All your string literals will be there unaltered, and if you used something like Entity Framework there will be a mapping from the class names in your project to the column names in SQL which means unobfuscating anything listed there takes 0 effort. Obfuscation is only protection against the least capable attackers, anyone with the skills to actually do damage will only be slightly inconvenienced for your effort. There are things you can do to secure a binary, but honestly anything you don't want cracked shouldn't ever leave your own servers. Even C++ using extremely clever assembly hacks to mess with disassemblers has been cracked, and IL-based assemblies can't even come close to that level of obfuscation. 
You can't really encrypt something in such a way that the client will be able to get access to it and at the same time won't be able to access it.
[...license dongle](https://www.youtube.com/watch?v=Q3LE15AyT5g)
The nearest I come to it is minifying things like the JavaScript I send to the browser. 
Do they have a different barcode scanner? most barcode scanners will vary in how they send HID input to the system. That could also vary based on the driver software in use for it. &gt; I'd like to know what's coming from the scanner and what's being input from the actual keyboard. This is an aspect I'd like to understand. Why would it matter where it is coming from? What I mean is- in every case where you can accept a barcode via the scanner, it doesn't make sense to prevent the user from also manually typing the barcode.
We've used programs to condense JS when we pushed it into production and some of that also obfuscates (by changing variable names, etc.). Beyond that, I don't really work in an industry where I need to be paranoid enough to worry about obfuscating stuff that will only ever be seen by other devs.
Reminds me of an old piece of software I had to crack. It had this 4,5 MB binary library responsible for processing of the license key (no idea what it was doing) wrapped in a C# method that would just return true/false. Ilspy + Reflexil got the job done in about 30 minutes.
You can go either direction if its wired (sounds like it is by default for that class). You should also be able to alter either if the wiring is correct for the class you are using. I am not seeing QueryableCollectionView as a standard WPF class so I am guessing it is 3rd party (syncfusion, telerik?) I have written one of these myself in the past though I called= it something different.
I imagine the developers understand this, but the managers and the C-levels probably don't.
I do not ~~have a girlfriend~~ obfuscate my code, but I do know a ~~girl who would be really mad~~ co-worker who would laugh at me for saying that.
Where do you work? 1996?
Obfuscation gives a false sense of security, I would never ever recommend anyone to do it. People will find a way to exploit your client application no matter what you do. You shouldn’t make it easy for them, there are good ways to make it harder, but obfuscation is not a good way. Besides not really making it that much harder for someone to figure it out, your code will be way less understandable which will have consequences in development and debugging.
I think the problem with trying to anti-tamper your app, which is basically what this is, is that even the most hardcore solutions are not that good. Denuvo games get cracked in days when the top groups feel like it. That's a big deal built on top of a C++ codebase. Anything like that with .NET is very difficult due to the much easier disassembly. If it's not for anti piracy and you just want to keep your code a secret, then you would run it on the server, if that's possible.
P.S. st breakpoints! Set them on everything. It really helps you understand what's happening. 
Reminder that Minecraft Java Edition is obfuscated and its probably the most decompiled software in history. 
It sounds like you encrypt configuration and decrypt that at runtime
I think we just call that minification, no? It has the advertised advantage of less data transfer, but also makes your JS hard to read.
Something something short methods something single character variable names something “hard to read”.
Kind of a shot in the dark but do you have the correct barcode fonts installed on your target system? I ran into this myself this week when I was setting up a new Windows 10 panel PC. Once I got everything installed and registered right it started working right. However, we use Seagull Scientific drivers since we need to work with multiple scanners at a time (manufacturing line app). Therefore, I'm not sure if this would apply to your situation.
a release build is pretty obfuscated already. there are niche cases where there might be value in obfuscating further, certain portions of your code. Game can save non trivial amounts of money if they delay hackers by even a couple of days. But that is all you can accomplish, delay someone from figuring out your code. the machine instructions are there.
Where to start... Using GUIDs for identification is a good idea. I use them myself. However there are some caveats to go with their use. Especially if you're storing the objects in a database, say SQL server. 1. When you make the GUID your primary key the database will apply a clustered index to it. You need to remove the clustered index. 2. You will need to choose another field in your object for your clustered index. For example a creation datetime field. 3. You will still need an index on the GUID field which you will need to create manually. Clustered indexes control the order in which data is stored in the table. Having a clustered index on a GUID field is a nonsensical thing to do and will only degrade your performance as, more or less, every insert you do will require reorganisation of your table. You can use a special version of GUID that can be ordered to help alleviate this issue, but you still should not store objects in a database in GUID order. Hope this helps.
Industrial applications where a delivered system is easily six figures (USD) and customers in various parts of the world wouldn't hesitate to duplicate the software for their own benefit. It's not a sure-fire preventative measure, but it's a deterrent.
It's just making it more work to access, not making it impossible. 90% of the time if someone has access to your system to pull the application files(Enterprise systems) then everything can be assumed to be compromised however you can make it take a long time to get access to the to code to discourage the opportunist but not the targeted actors.
Not every application is a web application...
Any recommended obfuscators for .NET Core or Standard?
To be fair, that very much depends on which obfuscator you'd be using. There's tools that both encrypt strings and heavily obfuscate control flow, plus a whole slew of other features. I've seen MSIL obfuscation good enough to make dotPeek, de4dot, JustDecompile etc. refuse to decompile a method entirely. It's not something you'd use everywhere, but for obfuscating some calculations or whatever your "secret sauce" is, I wouldn't *not* use if if I had the option to. In the end, it depends on what your market is and who you're trying to prevent from getting access. I'm personally not good at reverse engineering, but I've more than once got past permission checks in applications to get access to things I wasn't intended to, just because no one tried to hide it from me. In that case, any obfuscation de4dot doesn't take care of would've been enough to prevent me, and the tools weren't publicly known so I wouldn't have been able to find a "cracked" version. (The application was a tool to reflash firmware on a chip, the program was available on a CDN, but not intended to be public, so there were password checks before you got permission to do more than read statistics). I doubt they would care about what I did, but OP or someone else might care if their secret sauce gets leaked.
Some companies want to protect their IP regardless. If that's the case, there might be some valid reasons to obfuscate code on the client side.
And I want a new Bridgeport with over overarm and DRO. But what I have is a chineese mini mill because that's all that reality allows.
&gt; There's tools that both encrypt strings and heavily obfuscate control flow Sadly, we are victims of our own good tooling, and un-fscking control flow can largely be done automatically. Decrypting strings is harder, but there's a limit to how well that can be hidden. At the end of the day, once someone has your binary they can crack it- it's just the ratio of annoyance to payoff. Any code that absolutely can't be seen shouldn't be visible at all to the user, and if code is unimportant enough that tampering wouldn't be a risk then it's not worth the extra hurdles.
Really? Seems to me that it would be more likely since they would want to be rid of the inconvenience of the dongle.
GZIP/DEFLATE compression pretty much makes minification unnecessary. There are tools that "prettify" code so if someone wanted to learn the javascript logic, they can. 
That really shouldn't be hard to automate. When I work with obfuscated stack traces, the mapping file is part of the automated build process.
Only obfuscate if you are deploying your libraries to public facing machines. That is my view
The dongle isn't really an inconvenience. It's just another piece of hardware plugged into a task-specific PC locked in an electrical cabinet. It's only an inconvenience if you want to inappropriately duplicate a production system.
What are you looking at obfuscated code? I work on an application that gets obfuscated on every release build and I've never had to even look at the obfuscated code, except in a stack trace, which I can just feed through a script that deobbs it through our mapping files, which are kept each release version. This is the second time I've seen someone claim that obfuscation makes development harder, and it's simply not true if you're doing it even somewhat correctly. The only difference in code is you need to tag certain classes to not be obfuscated if they are subject to reflection, say for data serialization, which isn't too big of an inconvenience. 
It's not useful for application security or cheats and such. The one and only thing it will reliably do is make your code harder to read for people who decompile your app. This isn't too important, but for certain applications, it can help with code being stolen. For example, say you release a free application but you have an algorithm you don't want to hand out. Obfuscation makes it much harder to port to a new application. It makes it so that the hacker would save more time by just coding it themselves. It's protection against lazy copycats. Which actually can be useful. I work in a field with a lot of script kiddies, so obfuscation really helps.
Oh, totally. That is, if you know about that file existing in the first place. I didn't knew about that file until I had to personally look into our build process, and then was like: "WTF? So you're telling me there was a file generated during the build process that could've saved me a huge amount of guesswork, but we don't bother to save anywhere?".
You work in a shitty environment. Our Dev ops would be on top of this faster than I could think.
That's what happens when you work in a small company. I'll try to push for improvements where I can though. Other than that it's pretty nice.
I would assume a _good_ obfuscator is going to cause a pretty big hit to performance.
Still doesn't understand where does `obj` come from.
Ah. Job security.
Pretty much this. The only times we do it is when there has already BEEN attempts to misuse the source beyond licensing and we don't want to burn the bridge or the customer.
decompilers cannot unobfuscate code though... it would be super hard to read. even no obfuscated code can be very hard to read if you use typical .NET stuff like Action/Func delegates, LINQ, etc..
It sounds like you’re getting used to the language itself, I would look into .net core mvc, and some frontend JavaScript framework like react or angular. Start making small websites and web apps. Manning publishers have really good books on the subject that walk you through building projects, Pluralsight is also a great resource it has a few really fleshed out video playlists that walk you through developing a full web app using MVC. 
I'll check them out, thanks
it'd be useful to hide trade secret stuff when the target platform is .Net because your customers can decompile the IL to their language of choice. or to prevent people pirating licensed software. though even to prevent reverse engineering your licensing mechanism can still be done, it just makes it much much harder..
C# all gets compiled to intermediate portable code and then compiled to native code when run for the first time. Even if you obfuscate your c# code the intermediate portable code is going to turn out fairly not obfuscated compared to intermediate code from normal c# code. Anyone versed enough in reading decompiled .net is going to have no issues either way.
I was thinking about doing something like that! I actually have a Pluralsight membership. I used the intro to C# fundamentals by Scott - which was awesome to be honest. But, I'm feeling a little burnt after that. I was thinking about moving onto his next course on generics, but I am not applying the knowledge. I figured programming a little, and getting comfortable with the language is the only way. Any recommended full web app course on Pluralsught - I know of the one by Scott and Mosh, but I'm told Mosh's videos are not that great.
Here is a good one, it gives you a great overview of the entire stack front to back. I worked through that one just out of curiosity because my employer pays my Pluralsight subscription so I’m constantly trying to learn as much as I can with anything related to C#. https://app.pluralsight.com/id?redirectTo=/library/courses/753958d7-82a3-4458-a819-f2536c3a523c https://app.pluralsight.com/id?redirectTo=/library/courses/753958d7-82a3-4458-a819-f2536c3a523c
Obfuscation is no substitute for security. It's a waste of time and effort. 
What kind of customers is your product (I'm assuming software) aimed at?
A is more readable. A ternary operator is "shorthand" for an if statement... so on simple statements it makes sense, for example, `myVar = isNifty ? "hooray!" : "naaaaah!";` - but for the statement in your example with much more going on it all turns to mush upon first glance. Closures are inherently more maintainable. They would probably have little to no difference in performance. I've never once seen the phrase "Big-O notation" used outside of a computer science class in my decade in this profession. A seems clear and concise, and is what i would go with... though i might put a line break before that final `return` :)
SmartAssembly just added preliminary support a couple weeks ago. [https://documentation.red-gate.com/sa6/release-notes-and-other-versions/smartassembly-6-13-release-notes](https://documentation.red-gate.com/sa6/release-notes-and-other-versions/smartassembly-6-13-release-notes)
https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.trygetvalue Also, `SkillsToPeople` should be a `Dictionary&lt;string, HashSet&lt;Person&gt;&gt;` if possible.
This is fairly tricky for me as I'm on mobile, so my answer will be fairly brief and unfortunately won't answer all your questions. I think ternary operators have a time and a place and I personally dislike the usage in method B. I think any single line using both LINQ and a ternary operator is poor practice and tricky to read. I know it's not what you asked but I think overall you're misusing Dictionaries. You have a string-to-object dictionary where the key is an property on those objects. Why not just have a list and use LINQ to fetch the ones with the wanted 'key'? This means they can be looked up by anything not just what your dictionary currently uses for it's key. I also wonder if this isn't a great use of OOP? As I'm half way through my answer I can't go back and review your code but it strikes me now that both methods have complex LINQ queries and there must be a better approach than either if OOP practices were leveraged more.
I open source everything I can
I have never noticed any performance issues using SmartAssembly. Not saying it doesn't have any performance hit, but if it does it's never affected my software.
That makes more sense. My experience is with old video games and business apps where you legitimately need to move between machines. 
Been there done that as a consumer (AutoDesk, ProE, etc). It sucks for sure.
Not at all, workmates may disagree I've never heard a good reason to do so
It's basically the argument about surrogate vs. natural keys. Interestingly enough, Pokemon number is *not* the natural primary key in Red/Blue, those games use a surrogate key (based on when the pokemon was added to the game, probably - Rhydon given ID 001) https://helixchamber.com/2018/09/11/internallist/
Many globally, but the Chinese market is the problem. They'll pirate your shit in a heartbeat.
I've had to use obfuscated libraries which I had access to the source code. It made debugging really difficult. It's apparently useful for when you have some kind of proprietary way of doing something which you don't want your competitors figuring out easily. The decompiled code looks a bit like every variable and method name is just a letter. I think there might even be some additional code added in which can do nothing for a low perf cost. In the end, I imagine it's a cost benefit thing. If you're doing really well, and you have competitors who are somewhat competent and morally indifferent, then eventually they will be able to figure out the gist of what you are doing. All you're doing is slowing them down while hopefully you come up with something better. Nothing however stops them from literally using your libraries if they've got their hands on them, so it's not that great a defense. Alternatively, if you did have some kind of secret sauce, ie a special way of doing things you need to protect, you could provide some kind of web service and run your code there, that would reduce the chances your code gets into the wrong hands. If it's has to be online only, and runs on a device, then all bets are off, since anyone who has their hands on the dll, could figure out what you're doing with enough time and effort. I've recently heard of the concept of write only memory, the kind used by [YubiKey](https://en.wikipedia.org/wiki/YubiKey), so if you have control over the hardware your customers use, there's also the possibility of using something like that. Though I have a hard time imagining how one would write code for that. 
&gt; I know it's not what you asked but I think overall you're misusing Dictionaries. You have a string-to-object dictionary where the key is an property on those objects. Why not just have a list and use LINQ to fetch the ones with the wanted 'key'? Oh I didn't write this class lol. Well, actually, I wrote the *example class*, but it mimics what the 'real' class is doing. &gt; On the off chance you've seen my comment already, does mentioning you in an edit notify you so you can see the second half? u/pgmr87 - let me know :P I saw your edit by chance, actually. I don't think people don't get notified unless they've been gifted gold or have that gold membership or whatever. As to the details of your post, your suggestions are certainly better than the 'real' class and is probably how I would have designed them myself had I been the original author. The real class is called `InMemoryStore`, if that brings a little more context in what the rest of the class (that I omitted from my abstract) is doing and its purpose.
&gt; Also, SkillsToPeople should be a Dictionary&lt;string, HashSet&lt;Person&gt;&gt; to completely avoid the second lookup, if possible. Unfortunately, it isn't possible with how the 'real' class is designed at the moment. It certainly *is* possible if we could be granted some time to refactor a few things in the project.
&gt; They would probably have little to no difference in performance. What about pressure put on the GC? Method B will always create at least 2 `IEnumerable` objects (it may create an empty hash table) whereas method A will only ever create 2 at most. &gt; I've never once seen the phrase "Big-O notation" used outside of a computer science class in my decade in this profession. This actually wasn't something we disagreed about or considered. I considered what the complexity was after the fact and first thought it was O(nlogn) but ended up resting on O(2n). Since I am not 100% sure, I decided to ask this as well to satisfy my own curiosity. &gt; A seems clear and concise, and is what i would go with... though i might put a line break before that final return :) Lol oddly enough, I usually do put a line break before returns, among other things, to 'break up the noise'.
Thanks for the input. I'm not sure about that in my case, though. I could be misinterpreting what you mean by fonts, but I believe the scanner itself does the translation. It also correctly reads the barcodes on the tablet when I have it set to output as normal keystrokes. Are you asking whether it's able o read the barcodes?
I already responded, but I forgot to mention -- I forget about `TryGetValue` way too often. I often find myself doing this: if (dict.ContainsKey(someKey)) { var value = dict[someKey]; //do stuff } It would flow better like this: if (dict.TryGetValue(someKey, out var value)) { //do stuff }
("dlroW elloH")nltnirp lmkwyt
yeah that IL is all classes, variables, and method names and so on are changed to gibberish and better obfuscaters even call random method calls and such to even further make the IL gibberish.. yeah you can reverse engineer the logic but its a FUCK ton of work. there's a reason there are commercial obfuscaters available.. i've seen this in real life in real products made in .NET. you can't understand the code at all. sure people mucking around can luck out and figure out a way around the licensing mechanism or what not. it's not fool proof, it's a big deterrent, and it works.
It's the same scanner, just on the tablet this time. As for the driver, it appears to be the same. The scanner itself is no longer supported by the manufacturer, but the driver appears o be a generic Microsoft one for POS Barcode Scanner. As I mentioned, it's working as planned, just not on the tablet for whatever reason. My reasoning is that there's too much risk for error from manual entry or openly modifiable text fields. I don't know if it's just my office, working in research, or people in general, but I've found it's hard to trust their attention to detail with anything on a computer. I've spent the past two weeks cleaning data from a different study that required duplicate (to compare and theoretically catch mistakes) data entry, and there's still hundreds of errors from thousands of data points. I want these scanners point and click, and while this little task isn't critical, future applications that use this device may very well be. We don't want to mix up DNA samples because someone decided to start typing before switching out of the barcode text box.
Im another one for the `A` function. The Big O notation of both functions is exactly the same. Written Best - Worst case Dictionary look up `ContainsKey`: O(1) - O(n) Another dictionary look up `SkillsToPeople[skillname]`: O(1) - O(n) An array check against a dictionary lookup `Where()`: O(n) - O(n\^2) So your big O for best case is O(1) where it skips the entire array and does a dictionary lookup perfectly, O(n) is probably your average, and worst case is O(n\^2) I'd honestly be surprised if the computational time of either method would be *that* different. I think the only computational difference would come from which would instantiate faster, `Enumerable.Empty&lt;Person&gt;()` or `Hashset&lt;string&gt;()` and thats in your best case scenario. That ternary operator is ass ugly though. Just written in the middle of a LINQ statement makes it harder to parse what is going on by comparison to the `A` function. A `C` function would need that `TryGetValue` to squeeze much more out of this in a single thread. I don't see any way off hand to get much more out of it in a single thread environment without changing the data structures. Your real bottleneck isn't the two dictionary lookups, its the array against a dictionary lookup. If you really needed to squeeze speed out of this you could parallelize it for your `D` version.
&gt; they aren't selling something that's a pointless thing to do. I got a bridge to sell you if you think no one's selling useless shit
So you're getting a lot of joke responses. The answer is no, you don't do that in any professional setting. If it needs obfuscated because you're reselling it or something, you do that as part of a production release. 
Here is the Interface Code public interface IQueryInterface { IQueryable&lt;ResultObjets&gt; ResultObjets { get; } }
That's totally fair. I don't actually know, I just would assume it would have to do some serious obfuscation and lose some of the microperformance improvements people make
Load the csv files into local sql dB and read from that instead with EF and Linq. Or use python and pandas. The road you’re going down won’t scale because you’re heavily dependent on memory holding all the files and effectively doing a union and then a filter by way of a queryable object. Just my 2cp
Make mobile apps for a bank. Yes we obfuscate amongst other things. Out develop builds areny obfuscated as its time consuming and whats the point but our test and release builds are :)
Well yeah, after I got this stuff working I was going to upload it into a DB. After I got this Stage working, where the concept does what I want. It was going to be a one time run. where it uploads to an SQL DB ( or something). The program will just be a maintain DB and interfacing it with .Net Core. Same question then, How would I take the parsed data and keep it together within the same object or "table."
&gt; It had this 4,5 MB binary library responsible for processing of the license key (no idea what it was doing) I managed to make a 5MB .Net dll. It has 1024 generated methods for unrolled fast copying of 1...1024 bytes. And another 512 for characters. Along with some overrides and switch statements for dispatching on size. It takes a lot of code to get to 5MB. Otherwise embedded resources can do it easily, but I'm not sure what a license verifier could need that much embedded data for either.
&gt; That is, if you know about that file existing in the first place. If you're producing obfuscated code as part of your livelihood you sure ought to know about it.
You've never seen obfuscators that turn every identifier into a unicode character that only shows up as a square box? Identifiers that aren't valid c# and won't compile. It can kinda be a pain in the ass.. unless you've already written a little tool to at least unobfuscate the unicode garbage back to ascii identifiers ;)
There is a lot of variety in the quality of .Net obfuscators, and some of them are pretty decent. They definitely make life difficult, whereas poorly obfuscated code is often a breeze to deal with. &gt; better obfuscaters even call random method calls and such to even further make the IL gibberish Ugh I hate them but I have to give them credit. Some of them are tricky and will break the executable when you start adding or removing IL.
Had to do something similar recently. Used textfieldparser to import to datatable then sqlbulkinsert into sql. Processing 10k rows and about 30 fields runs pretty quick. 
Do a commercial obfuscater obfuscates itself with itself? *philosoraptor.jpg*
Of note, the recursive pattern feature hasn't been merged yet, and that'll be pretty significant, as a bunch of switch-related logic has been refactored. Also outstanding are the using statement and nullable apis, so that'll add some new code paths as well. 
Making it hard to figure out what it was doing, most likely 
&gt;Is the new Foo(); part a constructor? The new keyword informs the object to call its constructor. Within your class Foo, you can define 1 or more constructors. Since your example is passing no parameters Foo(), you are calling the default constructor that you are not required to define. &gt;Is that why I am able to set things with it when I do something like These two things are not related in the way that you are seeming to describe. Consider: // Add a name property to Foo, define the default constructor and an overload that accepts a string parameter: public class Foo() { public Foo() { this.Name = "Sam"; } public Foo(string name) { this.Name = name; } public string Name { get; set; } } //Instantiating some foo objects var foo1 = new Foo(); var foo2 = new Foo("Mike"); var foo3 = new Foo() { Name = "George" }; So at runtime, foo1 will be Sam, foo2 will be Mike because the constructor overload will set the object Name property to whatever you pass in, and foo3 will be George because you instantiated a new object, which briefly was named Sam, but the immediately changed to George because you used object initializer syntax to set the Name property directly. 
Go csv to database then query from that
Don't know what kind of data objects are being serialized. Are you running into a deep reference or even a circular reference? 
It's pointless to even try, because people like me can read CIL directly without needing much assistance. If you have done it at native level though, then the barrier of entry just got a bit higher, but it's still possible and doable for reverse engineer with prior advanced knowledge and tools. You must assume client side is always compromised so you try to secure the server-side and prevent cheats by establishing a game logic model and verifying that actions from each player are possible when playing multiplayer. Single-player though, I'd just leave it alone, if they want to cheat that badly, let them, they bought the game, they should enjoy how they want it in the game.
Wait. Do compiled assemblies contain the original variable names? I always assumed that stuff gets auto-obfuscated by the compiler.
We obfuscate our code at work, even applications that are just used in-house.
Like mom's spaghetti code.
If it’s a one time use only, you can use the Import feature in SQL server. Then map your source csv columns to sql server columns. If you want to transform your data before inserting a database, you can use SSIS to do it.
Obfuscation is bad solely because it adds no value. The other reason is if somebody. Usually a dev is deconstructing your DLL and they spot obfuscation they make it their life goal to understand it. So for non technical people they don’t care and people who do, know how to remove it. It’s pointless. 
Yes, it sucks much compared to Windows version.
Are you sure about O(n^2)? If there are 10 people in the hash set that is returned from `SkillsToPeople`, the `where` will iterate 10 times. Worst case, all 10 people are returned in the `where`. So far, this is O(1) + O(n). Then the `select` iterates ten times as well so now we have O(1) + O(n) + O(n) which equals O(2n + 1). We can drop the insignificants and we end up with O(2n). If the `where` doesn't return all people, then we have O(n + m) where n &gt; m. O(n^2) would be iterating over an entire collection within an iteration over another collection, which isn't what we are doing. Am I wrong?
You're not wrong, Walter, you're just an asshole.
Am I wrong?
My code is either 1) running on my employer's servers, so there's no point in obfuscating it or 2) Uploaded as open-source to github.com and nuget.org. Not only am I not obfuscating it, I am trying to get [sourcelink](https://github.com/dotnet/sourcelink) working to make it _easier_ for you to read the source.
If it's quick and easy sure why not, but your not gaining anything except time from it, at the end of the day it needs to be valid IL to run, and if it's valid IL then you can read it just fine. Some obfuscators go fairly deep as well, ie invalid metadata, string encryption etc, but its all reversible.
Generally it's not worth the money, since it doesn't really add any value. Obfuscation only "protects" your code in that it wastes the time of the person examining your code. At best, a low threat individual will be mildly annoyed with the obfuscation and do something else with his/her life. Otherwise if someone *really* wants to know what your code is doing, they can and will find out. So it might be worth it if you want to protect a game from cheats, but completely useless if you intend to use obfuscation for protecting corporate secrets, or thinking it makes it harder to find security flaws in your software (probably makes it worse in many cases).
&gt;There's tools that both encrypt strings and heavily obfuscate control flow I've yet to see any obfuscator use multiple types of string obfuscation in one assembly, so you just have to reverse engineer one method to undo all string encryption in the entire assembly. As for control flow, that's generally not *too* much of an issue. &gt;I've seen MSIL obfuscation good enough to make dotPeek, de4dot, JustDecompile etc. refuse to decompile a method entirely (or just show the method as empty). That's usually easily fixed by manually inspecting the IL and removing some junk. Even if it doesn't, the IL is relatively high-level, and I can usually keep going just based on the IL.
I’ve been using babel, works very well and pricing is reasonable. Years ago I used smartassembly, which was great at the time, until red gate decided to buy them and hike the prices into oblivion.
If it doesn't have a barcode font installed it may not be translating the code page correctly, depending on the type of barcode being read. It's just like if you loaded a document and you didn't have a particular language code page or font loaded. Do you know what type of barcode it's reading?
Do you \`await\` the \`Task\` returned by \`UpdateAndRefreshCollection\`?
Yes I do, await _refreshDataHandler.UpdateAndRefreshCategoryCollection
I would use one of the audio libraries available instead of doing all the nasty API stuff yourself. The nuget packages NAudio or CSCore can do what you want. NAudio has a class called MMDeviceEnumerator to enumerate devices and that allows you to perform actions on the device. Take a look at the demo code on github. It has a demo that controls volume. [https://github.com/naudio/NAudio/tree/master/NAudioDemo](https://github.com/naudio/NAudio/tree/master/NAudioDemo)
Is the code posted above the actual code? I notice that the parameter is `categories` with a lowercase `c` but everywhere in the function uses `Categories` with a uppercase `C`.
&gt; Is the code posted above the actual code? I notice that the parameter is categories with a lowercase c but everywhere in the function uses Categories with a uppercase C. Sorry, it should be lowercase, but I don't got the code here, so it's just a dummy code. But it should run fine.
The point is that it doesn't work. If someone has an executable binary they can get your code. The computer needs to be able to read the instructions so anyone can. You might make it marginally more difficult, but not very much. 
Can you show us the code of GetCategoriesAsync()? Also, did you do a find/replace in the code shown or something? The code doesn't really make sense and will never work. For example, you can't remove an item from a collection while enumerating over it.
Thank you so much for a quick answer. I have checked out Naudio. Do you know what I need to change in the code/library in order to set the volume of a given playback device?
[Jesus Christ](https://www.reddit.com/r/csharp/search?q=author%3ALekowski&amp;sort=new&amp;restrict_sr=on&amp;t=all&amp;feature=legacy_search)
 public async Task&lt;List&lt;Category&gt;&gt; GetCategoriesAsync() { var Categories= new List&lt;Category&gt;(); using (var sqlHelper = new DatabaseHelper(_connectionString)) { var CategoriesDataRows = await sqlHelper.GetCategoriesAsync(); Categories.AddRange(CategoriesDataRows .Select(CategoriesDataRows ).OrderBy(c=&gt; c.Inst)); } return Categories; } The data from my method returns just fine.
We're not victims of our own good tooling, it's just an impossible problem. The obfuscator can't make any real changes to the control flow, it can just introduce context breaks that make it difficult for people to put it together. The computer doesn't care you did that, if it did your code wouldn't work, so you only have to strip out instructions that don't actually do anything. 
there are other techniques: I've met in DOS age code which checks itself - if it was modified then it fails. Also I've met different signing of the code (Windows apps) and encrypted code which is decrypted on the fly with 2 keys: "license key" and some big hash of our hardware (license is result of hash with it). The last was in Unigraphics IMHO. So, no, it's not so simple as you can suppose.
This works for the default audio device: var deviceEnumerator = new MMDeviceEnumerator(); var device = deviceEnumerator.GetDefaultAudioEndpoint(DataFlow.Render, Role.Multimedia); device.AudioEndpointVolume.MasterVolumeLevelScalar = 1; // Volume between 0 and 1 where 1 is max volume Any type of application will do. I used console to test this.
I use a commercial obfuscator and am reasonably happy with it. Anyone saying that there is a noticeable performance hit is using a hat as a mouthpiece. But lets not get into a religious war about something subjective, it may be appropriate, or it may not. Depends on your use case. IMO makes sense for what I do. ymmv Why? 1. All it really does is to make it slightly more difficult for someone to extract the source code without having to put in some modicum of effort. Obfuscation costs near zero effort which is about as much as I'm willing to spend on the feature. If you are clever enough and willing to make the effort to make sense of obfuscated code then good luck to you, I'm not trying to keep you out. I don't believe its possible to keep you out if you are sufficiently motivated. 2. Packaging - it's often possible to package the deliverable into a single deliverable, so avoiding a full blown installer. For times when you want a quick turn round on iterations of a Proof of Concept, having a single executable makes life simple. Obfuscation has its downsides too - often AV and security software will trigger false positives. 
Did you just put this code into a program class main()? Or did you do it live into the buildt program?
 using NAudio.CoreAudioApi; namespace ConsoleApp17 { class Program { static void Main(string[] args) { var deviceEnumerator = new MMDeviceEnumerator(); var device = deviceEnumerator.GetDefaultAudioEndpoint(DataFlow.Render, Role.Multimedia); device.AudioEndpointVolume.MasterVolumeLevelScalar = 1; } } } This was the exact program I used to test this.
I just created a new program class, and it worked, thanks! I did get an error stating that I need to add an executable project to the solution which references the library, I guess I'll find a how to in the internet. Do you know the method for setting volume for a specific playback device?
I suggest you first do some digging/playing yourself and come back with concrete questions after that. I can't do all your programming for you ;)
Obfuscating code is pointless. You can do it to make things a little bit more difficult to find for the majority of snoopers, but anyone who knows anything about reverse engineering won't be deterred. For example, SPA calls to a public facing API - engineers might not want people pulling directly from the API itself so they attempt to write some crazy javascript to hash access tokens or attempt to make it difficult for anyone to directly make these calls. But simply flip on developer tools in a browser to see what calls are being made to where, and the obfuscation becomes futile. 
Gotcha, again, thanks for your help, you're a life saver!
I have never used Telerik, and maybe you should ask Telerik for help in this case. But my guess would be that the "updatedCategories" you are getting is not actually of type `ObservableCollection&lt;Category&gt;`, but rather a sub-type. You can debug this by setting a breakpoint in SaveCurrentCollectionOfCategoriesToCacheFile, and using the "Immediate Window" in Visual Studio to call `updatedCategories.GetType()`. If it is different than `ObservableCollection'1[Category]` (plus namespaces), I would probably convert the collection or its items to a safe serializable type.
There is no such thing as "calling a class". You can methods. When you write `new Foo()` you construct a new instance of the `Foo` class and call one of its constructors (which is a method).
No idea as I wasn't able to decompile the library but going through disassembled code indicated few dead end paths, or at least that's what I remember (it was few years ago).
I was going this myself when I was parsing a csv file then saving it into a sqlite db. I noticed that your doing it as a stream reader is there a reason to do that over the following: string\[\] lines = System.IO.File.ReadAllLines(csvFileName); &amp;#x200B; &amp;#x200B;
A release build should have dumped the original variable names, but would still retain the original names for methods, types, properties, etc: things you can reflect over.
Babelfor.NET, or like, Babel with Grunt/Gulp?
I tried to convert it to a List&lt;Category&gt; but it doesn't work... Still getting that weird error...
What is the result of `updatedCategories.GetType().FullName`?
Yes I do and it hasn't let me down since.
It's appropriate when distributing desktop software that has IP in it. While it's not 100% foolproof, it will slow people down and limit the number of people willing to spend the time to rip you off. You can never make reverse engineering impossible, only harder. Most obfuscators rename things and make winding paths through code. Dotfuscator is one where, if you pay, you can also set booby traps in your code for when people try manipulating your code. DotNetRocks recently had Gabriel Torok on their show to talk about modern obfuscation and what his company's tool can do. This is probably going to be your best, most recent overview of .NET obfuscation. [https://dotnetrocks.com/?show=1578](https://dotnetrocks.com/?show=1578) 
if you look under the hood, ReadAllLines is using a streamreader as well, it's just a wrapper. [https://referencesource.microsoft.com/#mscorlib/system/io/file.cs,675b2259e8706c26,references](https://referencesource.microsoft.com/#mscorlib/system/io/file.cs,675b2259e8706c26,references)
What's the type of `Category`? It seems like it contains a class that can't be serialized by the `BinaryFormatter`.
Babelfor.net indeed.
Babelfor.net indeed.
I like how a ton of people are saying to not obfuscate due to it not stopping the best of hackers. No shit, but that’s like saying locking your doors at home is pointless because people can pick locks. Ain’t trying to stop the best here, just the large majority of people in between
This is the concept of data normalization and it's why any company worth a dang has a dba. First off, an object and a table don't necessarily have to be the same thing. In normalization, you minimize the times you duplicate data. For instance, instead of having a varchar(50) column for each customer's country, you would have a country table with a foreign key pointing to that from your customer table. (Most ORM frameworks are smart enough to populate the country table and disregard the foreign key when you query them, but this is all configurable). As such, if you have data in multiple csv files that represent one entity (regardless of normalization), then you'll want to somehow get an id for that entity on your first entry and a way to identify that entity on your extraction. Are you familiar with the term "ETL"? It stands for Extract, Transform, and Load. These are the 3 steps of importing data into a database. Extract is half of your example above, which is getting the data out of one medium. Transform is to shape the data into the representation you want it to be on the database, then Load is to finally load it into the database. Transforming on the client side can be slow, painful, and prone to running out of memory. As /u/ [Creeeeeeeeeeg](https://www.reddit.com/user/Creeeeeeeeeeg) pointed out, this doesn't scale. Instead of doing your Transform in C# on your machine via loading several csv files into memory and creating objects from each row, a popular and common method is to have staging tables in your database and do the Transform on the database-side. Load your csv files directly into staging tables that mirror the format of your csv, doing validation along the way that each required field is populated and of the right data type (your validation can be done db-side via TVPs, referenced below). Once your raw data is in the database, you can use the database's powerful and fast data manipulation abilities to shape and combine data in the desired manner and place it in it's final table(s). Lastly, large data importing can be made easier with TVPs, check them out: [https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/table-valued-parameters](https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/sql/table-valued-parameters)
I don't and never did
For the observableCollection&lt;Category&gt; updatedCategories :"System.Collections.ObjectModel.ObservableCollection`1[[DataAccess.Category.Category, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]" And after New List&lt;Category)(updatedCategories ); is "System.Collections.Generic.List`1[[DataAccess.Category.Category, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
Firefox dev tools have prettifying built-in 
 For the observableCollection&lt;Category&gt; updatedCategories :"System.Collections.ObjectModel.ObservableCollection\`1\[\[DataAccess.Category.Category, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\]\]" And after New List&lt;Category)(updatedCategories ); is "System.Collections.Generic.List\`1\[\[DataAccess.Category.Category, DataAccess, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null\]\]"
Why don't you use the CsvHelper? [https://www.nuget.org/packages/CsvHelper/](https://www.nuget.org/packages/CsvHelper/) This package is does a good job and you don't need to invent the wheel again. I used it in this tutorial: [https://asp.net-hacker.rocks/2018/10/11/customizing-aspnetcore-07-outputformatter.html](https://asp.net-hacker.rocks/2018/10/11/customizing-aspnetcore-07-outputformatter.html) &amp;#x200B;
I mean seriously what does `compile-and-run program launcher` even fucking mean?
I mean the type definition of `Category`. Like I said, very likely that class has references to types that can't be serialized (e.g. the Telerik Data classes).
The problem is probably that ObservableCollection is not meant to be serialized, since there's no real reason to serialize all the extra logic for observation hooks. I'd recommend just turning it into a collection, a list, or even just an IEnumerable before serializing, and after you get that back, just making a new ObservableCollection from that. 
I really thought you were onto something there, but it didn't seem to help. I went through the fonts on the machine that's working and installed any missing ones on the target machine, but still nothing. I think it has something to do with the actual communication, because it's not registering anything when I perform a successful scan, whereas on my machine, I can see a WM_INPUT (raw input) message coming through. 
Hi again, The category model should be [serialized]. "DataAccess.Category.Category" it say. [Serializable] public class Category: INotifyPropertyChanged { public int ID{ get; set; } public stringTitle{ get; set; } public event PropertyChangedEventHandler PropertyChanged; private void OnPropertyChanged(string propertyName) { if (this.PropertyChanged != null) this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName)); } }
Okay, so it's still a normal .NET ObservableCollection, and not one of Telerik's alternatives, good. We might have to have a look at your Category class definition. Is there any references to Telerik in that class?
Hi, I've already tried to do that. &amp;#x200B; var list = new List&lt;Category&gt;( updatedCategories ); and I'm still getting the same error. Does this look correctly ?
The `BinaryFormatter` is trying to serialize the backing field for the `PropertyChanged` event, but such fields can't be serialized by the `BinaryFormatter`. Mark the field as non-serializable: `[field:NonSerialized]`
Do you not lock your front door either? If not, can you please post your address? It'll just save time.
Hm, maybe it's the Event on the Category class then. Try decorating it with `[NonSerialized] `
I work in software security, and have input on our corporate policies around this stuff, and no, no obfuscation. It's not a security defense.
&gt; MSIL obfuscation good enough What tools do this as well as you've ever seen?
&gt; the IL is relatively high-level, and I can usually keep going What's your process here? Trying to read the code, or trying to alter the given assembly to do something else? If it's the latter, what tools do you use to alter the assembly?
&gt;public event PropertyChangedEventHandler PropertyChanged; private void OnPropertyChanged(string propertyName) { if (this.PropertyChanged != null) this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName)); } &amp;#x200B; How should it look when I do the nonserialize with these?
&gt;\[field: NonSerialized\] &gt; &gt;public event PropertyChangedEventHandler PropertyChanged; &gt; &gt;\[field: NonSerialized\] &gt; &gt;private void OnPropertyChanged(string propertyName){if (this.PropertyChanged != null)this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));} &gt; &gt;How should it look when I do the nonserialize with these? &amp;#x200B; Because I'm getting field is not a valid attribute location if I put like this: 
The backing field for the event must be marked as non-serialized, not the event. See https://www.reddit.com/r/csharp/comments/a88kkw/binary_serializing_and_deserializing_problem/ec8ya9t/
&gt; PropertyChanged Like I said, mark the field of the event as such. Not the private method. Delete the second occurance of `[field: NonSerialized]`.
 class Program { public List&lt;T&gt; ParseCSV&lt;T&gt;(string filename) where T : class, new() { List&lt;T&gt; result = new List&lt;T&gt;(); using (StreamReader stream = new StreamReader(filename)) { while (!stream.EndOfStream) { string line = stream.ReadLine(); try { T element = Activator.CreateInstance(typeof(T), line) as T; result.Add(new T()); } catch { continue; } } } return result; } } public class MyValue { public string val1 { get; set; } public int val2 { get; set; } public string val3 { get; set; } public bool val4 { get; set; } public MyValue(string line) { string[] values = line.Split('\t'); if (values.Count() != 4) throw new Exception(string.Format("Should be 4 values, not {0}", values.Count())); val1 = values[0]; int val2_tmp; if (int.TryParse(values[1], out val2_tmp)) val2 = val2_tmp; else throw new Exception(string.Format("'{0}' could not be parsed to an int", values[1])); val3 = values[2]; bool val4_tmp; if (bool.TryParse(values[3], out val4_tmp)) val4 = val4_tmp; else throw new Exception(string.Format("'{0}' could not be parsed to a bool", values[3])); } }
Worst case scenario is n/^2 because worst case scenario of a dictionary lookup is n and you already know you're iterating through the entire array which is another n. N*n is your worst case then
No. I use a contract written by my lawyer that covers reverse engineering. 
Agreed 100%. I use this to parse a giant csv file that's dropped once a week and then compare the changes to some db for my team and all of that is automated. This library is great.
I don't have much experience with dBs so I was approaching this the wrong way. But im excited to give it a go Thanks for the references. 
Just load loadit to database 4head. Lol 
Yes this is the approach I'm going to go with. I was over complicating it. I'll save code like that for when I write the net core app. Lol. 
Thanks for making it generic appreciate yah my dude 
I just threw up a little on my sweater.
According to this article it's supported starting with 15.3, which is a VS 2017 version: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/
There aren't any alternatives. Either rollback or upgrade all your devs to 2017 (which, you really should by this point anyway, it's quite a significant improvement over 2015).
Did you make that change on purpose? Upgrading frameworks is never trivial.
Heh, dont look at me, im on 2019 preview
Unintentionally
 if (!SkillsToPeople.ContainsKey(skillName)) return Enumerable.Empty&lt;Person&gt;(); return SkillsToPeople[skillName] .Where(name =&gt; People.ContainsKey(name)) .Select(name =&gt; People[name]); 
Yes, it was calculated. Just didn't take dev environments into account...
This sounds like an organisational problem if the team isn't even using the same version...
Why should two individuals, given the same task, use the same tools? I'm fundamentally against that assumption.
haha ok then
" Individuals and interactions over processes and tools" - [https://agilemanifesto.org/](https://agilemanifesto.org/)
Because then you make a change, the other devs cannot build and then you have to rollback.
Ah yeah, I had run into a similar problem before and that was just updating from 4.0 to 4.5, though we forced the devs to fix the environments. Sometimes Microsoft tech doesn’t play well even with itself. 
well, you didn't interact with the individuals on your team to figure out if this change would break their environments
savage this is exactly my point how the fuck can you have an "agile" team if 1) people are unwilling to upgrade to 2017 2) people aren't communicating versions of the tool
Parsing CSV is *not* as simple as it looks. I wrote my own CSV parser in .Net, and it has been in production use for years now. But getting it bug-free and corner-case-free wasn't simple. (I wrote it back when .Net libraries to parse CSV files were outrageously priced and had stupid licensing requirements and all kinds of nasty *known* security holes. They were not satisfactory, so I commited the "sin" of rolling my own.) I'm also quite aware that my implementation is inefficient. But it's *correct*, even for the vast number of quirky files I have to deal with. The final "product" of the parser itself is a List&lt;List&lt;string&gt;&gt;. It uses a line-terminator (default: '\n'), a field-separator (default: ','), and a field-encapsulator (default: '"'). The first step is to read the entire file into a string, then split it on its line-terminator character. That gives us lines. Then split each line on the field-separator. That gives us fields. Field encapsulation is handled by having a merge-flag telling the next loop to merge this field into the previous one. Now process each field accordingly: - Remove spurious "\r" characters. This is for \r\n newlines. The \r's are left over when you split on \n, so you have to remove them. - If the merge-flag is unset, initialize the field value, otherwise, append a field-separator character to the field value. This is because a do-not-merge means that your current value is new and should be blanked-out. Otherwise, your split on the separator has stripped out a separator character that was encapsulated and should be part of the data, so you have to append it back to your continuing field value. This allows an encapsulated field to include a separator. Example: "Blah, Inc." would stay as a single field value because it's encapsulated in double-quotes, even though it has a comma in the middle. - Trim encapsulators and whitespace from the field contents, then append the field contents to the field value. This just adds the current-index field's contents to the accumulating merged field value. - If the field is just an encapsulator, invert the merge-flag, otherwise, if the field ends with an encapsulator, unset the merge-flag, otherwise, if the field starts with an encapsulator, set the merge-flag. This updates the merge info for the next field. If you have a separator just before an encapsulator (Ex: something,"blah,",whatever), you'll still include the trailing separator in the encapsulated field value (in the example, "blah," is a single field value, complete with the comma at the end). Otherwise, a trailing encapsulator ends the merge, and a leading encapsulator starts the merge. - Replace double encapsulators in the field-value with a single encapsulator. This allows an encapsulator-literal in the data using the double-encapsulator method. So """whatever""" becomes "whatever" as a field value. - If the merge-flag is unset, add the field-value as an innermost item in the List&lt;List&lt;string&gt;&gt;. This is basically saying "we're done building this field's data, add it to the pile." But if the merge-flag is still set, then we're not done and it keeps going into the next loop. Then, after processing all fields in the line, add the fields from that line as a List&lt;string&gt; into the List&lt;List&lt;string&gt;&gt;. Then you have to add a bunch of ragged-array handling. (Some data structures handle this better than others.) My implementation shoves the List&lt;List&lt;string&gt;&gt; into a System.Data.DataTable after it has been parsed, and can optionally use the first row of data as data column names.
&gt;" Individuals and interactions over processes and tools" - [https://agilemanifesto.org/](https://agilemanifesto.org/) &gt;That is, while there is value in the items on the right, we value the items on the left more.
Good point about worst case dictionary look up being n. That's what I was missing. So, you are right and it is 2n^2. with 2n likely being the average I think (based on what I know about the real class). I appreciate your discussion and insight.
You can either do this: Foo f = new Foo(); f.Blah = 1; f.Whatever = 7m; f.Stuff = "hello"; Of you can do this: Foo f = new Foo() { Blah = 1, Whatever = 7m, Stuff = "hello", } They're 100% equivalent. It's just syntactic sugar.
Why do people stick with old versions of an IDE? I get that VS has a history of being kinda buggy for the first release or two of a new version, but 2017 is mature by now (and way better than 2015).
This is a good question. There's nothing more frustrating than not being able to use new C# features despite everyone having VS 2017 apart from that one guy who just won't upgrade. So it builds fine for everyone except him, meaning everyone then has to undo their commit when they remember it wont work on that one guys machine.
Yeah, you're right. *"You might make it marginally more difficult, but not very much."* - is kind of what I meant to imply. It's a mild deterrent to any one who's trying to copy your code.
Learning languages/tools is the easy part of this work, I'd suggest getting a solid understanding of common architectures and best practices after you feel comfortable with the toolbox itself.
Budgeting - Visual Studio professional isn't free you know...
Depending on the company they could still not have the new license.
I guess that's a fair point, but if other people on the team are on 2017, it seems unlikely. Also, if that's the point, someone needs to have a serious talk with management about the importance of staying up to date with tooling.
Usually there's an API from the hardware manufacturer. I've only ever dealt with built-in barcode scanners on Intermec/Motorola handheld computers running WinMo 6.5 (or, more recently, the rebranded version: WinEH 6.5). But I would assume there's something similar for USB ("wasp"-style) scanners as well. There's usually an API library you can get from them that allows you to get BarcodeRead events (or similar), complete with BarcodeReadEventArgs (or similar) that have, not just the value it read (either as a byte[] or as a string), but things like the symbology it identified, the dimensionality (some symbologies are stackable and can be used as either 1D or 1D-stacked/2D), and various other details about the barcode that was scanned. Also, sometimes it will support giving a *list* of values it read, since there were multiple barcodes in the imager's viewing window/range. (And supporting that type of functionality becomes especially handy for when you start supporting an RFID reader input that gets every value from every RFID ping in a radius from the device.) TL;DR: See if the barcode scanner manufacturer has a library you can use.
Please equip me to have this conversation
Hypothetically, you could maintain two different project files to target both platforms, and the devs still using 2015 could use the one targeting 4.6.2. That seems like it invites some logistical challenges keeping it building on both platforms and keeping both project files synchronized. Long term, though, it really seems like they're going to have to upgrade. I hope that's on somebody's agenda in the next year or two.
I wander what happens if you do that with `ExpandoObject`.
Bad plagiarism of https://dejanstojanovic.net/aspnet/2018/december/registering-multiple-implementations-of-the-same-interface-in-aspnet-core/
Says every novice JavaScript developer.
GZIP only helps during the transfer. Minified code can be faster to parse. Tree-shaking lets the browser avoid parsing and JITting unused code.
If I remember correctly it was [Babel](http://www.babelfor.net/), but it's a few months since and I didn't work with it directly, so I might be wrong.
I'm pretty sure it would still work. ExpandoObject is just an IDictionary&lt;string,object&gt; under the hood, but with sugared syntax to convert the dictionary keys to properties. (That key-to-property mapping is the entire purpose of the `dynamic` keyword, from what I can tell.)
Faster to parse? Please explain as i'm not aware of this
&gt; everyone then has to undo their commit when they remember it wont work on that one guys machine. If I was in that position, that one guy would just get installing VS 2017. Does he really needs VS 2015? if so, fine, he can run it _and_ VS 2017. If not, why is he delaying the team like that?
Not always. One of them could use Rider on a Mac or VS Code on Linux if they want and are preferred to set it up themselves. Should one team member hold back the rest of the team by refusing to update to a _2017_ version of the usual tool? No, definitely not.
Or an alternative: https://github.com/jehugaleahsa/FlatFiles I honestly don’t know how those two compare, but the OP should realize he has choice.
Exactly. The problem comes when that one guy is a senior etc.
Maybe he could get around having different IDE preferences by installing MSBuild through the Visual Studio 2017 build tools? This comes without a license and you may be able to to get stuff working for the time being.
Maybe they need to interact with that individual to help him understand how they are holding the rest of the team back?
Manifestos are great for quoting, but implementations are always less than perfect. As you have run into, you can only do what the maximum common denominator is. At this point in time you should be able to upgrade the solution to .Net Standard 2.0. I have a colleague that only last year updated to VS2015. I can understand somebody not being as up to date with software as myself, because bleeding edge is more risky. But this can be a little ridiculous.
It's not always so much "staying up to date" in the sense of "it came out last week, i'll upgrade", more like "it's been out for six months and seems stable, let's agree to try it and then all upgrade".
This is what I do with one particular project. My Standard project references links to the same files as the Framework project (without copying the files). It is a manual process to keep the dependencies and files in sync though.
And what if there isn't a server? I know it comes as a great surprise to many in this sub, but there are still desktop only applications being written in C# in 2018. :D
The `dynamic` keyword also works with methods. You can see an example of it in the MicroORM article. https://www.infoq.com/articles/MicroORM
Desktop applications can make network calls. Even in the pre-internet era they would setup black box license servers for especially expensive software.
That's different than code obfuscation of C#, though.
Tell the developers to man up and upgrade their ide....
Personally the second option looks cleaner to me. It's what I use most often if there's more than one thing to initialize.
Calling a class was much easier to spell and less typing than "constructing a new instance of a class. " I figured most people would get what I meant... 
This turned out to be a hot issue! I can not say that I often use **obfuscation**. As it has already been written, *any code can be hacked*. In the case of protection against hacking applications, slightly different solutions are used. These are whole **licensed system**s like **ArmDot** and similar. And obfuscation can be used as part of this system. This is one of the options.
Yeah, me too. It's pretty much just a limited, initialization-only version of VB.Net's `With` keyword/block.
I was just making the point that not only is it possible, but every C# developer has the tools to do it easily. I wasn't claiming that we're literal victims of tooling.
Well isn't this some of the dumbest shit
God good luck adding/deleting files. And oh god the build process
Hence, 'logistical challenges'. Although the build process should be straightforward enough, if you can manage to keep everything in the old-style project, too: you just point the build server to the .Net Standard project and build that. There's a whole, long list of obvious problems with developing on one platform and building/deploying from another, but if OP is determined to move this to a platform that some significant number of his coworkers are unable/unwilling to move to, that's the sort of trade-off you get.
Oh yeah I agreed with you on the problems. Was just expressing how I wouldn't want to do this
I would expect most .NET shops to purchase VS through an MSDN subscription which would come with the rights to install the latest version.
I don’t think this is the sort of hill worth dying on. The team needs to be on the same playing field or else you are doing it wrong.
If the codebase allows it, you might consider targeting a lower .NET Standard version. This will increase your framework compatibility, but reduce the number of APIs that you can target. I did this on a recent project of mine where I wanted to generalize targeting. I had been targeting .NET 4.6, but the nature of the library meant it made sense to target .NET Standard. Because I was using VS 2015, and due to other restrictions, I had to target .NET Standard 1.1. The library is simple enough that the lower standard version is fine for our use case. I believe there was only one "nice to have" library feature that we had to do without, but obviously YMMV.
Up to a point. "I installed Java and Python, I have some good tools; bring it on". "well, we have 20 000 lines of C# that targets NetStandard 2.0 here". There is more than 1 tool that does the job. There are many tools that don't. Pick one of the tools that does the job.
2015 is damn near unusable, it's so slow. You'd have to drag me kicking and screaming to get me to go back to it.
&gt; Visual Studio professional isn't free you know... `dotnet` commandline and Visual Studio Code _is free_. It will work. 
Thanks, I may try to look into that. That said, apparently this model is no longer supported by them, so I'm not sure I'd be able to find anything. I was considering using their Serial Port Emulator driver, but I couldn't get it installed with my newer machine. This is an ooooold barcode scanner. What's really confusing me is I've learned a lot about raw input working on this, and I have everything set up so it works just as I'd like it to, but not on this old POS (and I don't mean "point of sale") laptop/tablet. The issue isn't getting it to work, it's getting it to work on this specific shitty, old laptop.
I didnt know you could buy the IDE separate anymore. I thought it was subscription based only. 
I mean, where I work we distribute build artifacts from the build farms to reduce local build times, and this necessitates everyone being on the exact same version of the VC++ compiler, down to the hotfix. On top of that, we want to make sure that everyone is working with the same configuration so we don't get any surprises when we ship the thing. "Whoops, turns out Joe was building with a slightly different version of the compiler, so we didn't find out about this bug until we hit beta." The developer machine configuration is synchronized by our IT department to make sure nobody is out of spec. It's pretty normal to say "here's what we use, if you don't use that, then you can't do your job and you're fired". This is not to say that you can't do out of band work using different tools, or use different toolsets for different projects. We do that all the time on my team. But if you're working with other developers, you have to standardize on some common toolset for the project strictly for technical reasons. If you have one dev using VS2015, and one dev on VS2017 for Mac, 2 devs using VS code, and another 3 devs using Xamarin Studio, it's gonna be a clusterfuck, even if there *aren't* strict framework incompatibilities.
Even if it's unsupported, manufacturers will usually leave downloadable stuff like that available on their website. It'll be among the manuals, firmware updates, etc. That said, sometimes USB scanners *only* have keyboard-wedge functionality, so you may not be able to do what I mentioned above.
1) A is more readable. B might be more informative, like I know for sure that name is a string... but in this instance I think that's just clutter. 2) For the most part, they are pretty similiar for maintainability. In most cases you'll likely just end up modifying the filter mostly... and since they both utilize linq in the the same way for that it'll be the same change. But, the first one is a bit more maintainable since using something other than a hashset in the future won't cause as large a change. Also, if you decide that you want to change how it handles a case where skillname isn't found... the first one is much better for that. 3) I've got to imagine the 'hot' path is a skill/name that is found. I think they should have similiar performance there. I would think a name that is not found would be more likely then a skill that's not found. The second method instantiates a new object but the empty set might at least clones one... but then there are two additional method calls on the empty set in the B version... so.. A should run ever so slightly faster. 4) O(n) for both.. I mean, linq might use some partitioning to reduce it from there... but unless the data is ordered by the properties you are filtering by you have to check each object. 5) I wouldn't mess with it unless it was a bottle neck. 
Lots of reasons. * licensing (although most people who use Professional or Enterprise are probably on a subscription) * compatibility with third-party add-ons * reliability (several colleagues of mine refused to update to VS 2017 for a while because there were some major issues until around 15.3) * upgrading takes time and effort, and may break stuff, which means it takes even more time and effort * in more conservative enterprises: not having permission to upgrade, and not being able to/willing to go through the necessary bureaucracy Of course, at this point, 2017 is mature enough that you should almost certainly upgrade if you can afford to. But not everyone needs the latest bling.
&gt; If the codebase allows it, you might consider targeting a lower .NET Standard version. The guidance that I have seen is that if you can, have a NetStandard 2.0 target. You can of course multi-target and also target NetStandard 1.3. 
Money.
What do you think "interactions" _means_, though? Everyone using their own preferred tools has obvious benefits, but it can also be a burden for teamwork. Imagine being on a tight deadline and doing a git fetch. Now Joe Schmoe from the other building decided to change a critical library to depend on .NET Standard 2.0. Not only do you not know what .NET Standard is (because it wasn't a thing until quite recently), you also don't really care, because you have code to ship. So you sigh, try getting stuff to build, and eventually figure out that your toolchain just isn't going to be compatible. What do you think the outcome is going to be? * Everyone screeches to a halt until they've upgraded, because agile™ or something * Your director says hell no, because in the short term, the benefits you may have are far outweighed by the chaos you've produced (There's also a hilarious irony of championing "individuals" when _you_ were the one who unilaterally decided to break the build for someone else. What about _their_ individual preference?) Agile gets some ideas right, but teamwork has merits.
probably money. 
ive built .net2.0 in 2017 and 2015. 
Hm, weird. I had read that "you should target the lowest version you can get away with," but now I see that while that recommendation is still accurate, MS also recommends targeting 2.0. It sounds like this is [mainly to reduce complexity in the dependency graph](https://github.com/dotnet/standard/blob/master/docs/versions.md#how-do-i-know-which-net-standard-version-i-should-target). I OP's case, I don't think the 2.0 advice is really relevant, because if they know they have this VS 2015 dependency, they still can't consume the 2.0 version of the library. They'd be targeting it for no reason.
Are you seriously suggesting taking a project from VS Professional to VS Code and a command line, i.e. a completely different toolchain, for the sole reason that someone decided .NET Standard was the new fancy way of doing things? VS Code isn't the answer to everything. Nor will it be. Maybe in the _far, far_ future, VS and VSMac will be killed off in favor of it, but right now it's more complementary than a replacement. (Enjoy doing GUI development in it.)
I mean you've ran into a pretty compelling example right here.
Tooling and frameworks require constant updating, because the world changes. The companies who support your tooling won't support it for ever, and eventually you'll be hamstrung by either a bug which affects you, and has been fixed in a version of a framework or tool you don't have access to, or because you're lacking access to newer features which would make implementation far faster and easier. And when you've ignored updates for a long, long time, updating is hard. Far harder than staying on top of things and doing incremental updates. You don't always have to update to the latest and greatest - in fact, I wouldn't recommend it, as you're more likely to encounter issues that way, but you do need to keep things relevant, to within about a year of release of the tool/framework.
You have a point about GUIs. I'm not thinking about them much as I work in APIs mostly. OP doesn't either, just "one of our class libraries" &gt; Are you seriously suggesting taking a project from VS Professional to VS Code No, I'm saying that 1 stick-in-the-mud has free options to do basic things with a library, if they won't upgrade like everyone else.
There's a difference between using different tools and using outdated and incompatible tools.
Sure, and the affected developers (who are still on VS 2015) may even find that they prefer Code. But I think what many of them would prefer even more is not for Oxymoron290 to break their build in the first place…
I may never get used to RedHat + Microsoft... Great time for dotNet!
I agree. Have you tried managing nuget packages with VS Code? **shudder**
Publish a nuget package. Have them reference that. Move on with your life. 
MSDN Subscriptions are even more money though. If you use a lot of Microsoft software they're worth it, but if you just use Visual Studio it's not (unless they changed the pricing recently).
Because it costs money to upgrade.
I'm currently developing in vs2010 .net 4.0 targeting server 2003, I still have c++ applications that I have to load a virtual to run visual studio 6 if I want to so much as look at the code because it's never been upgraded and that headache is so not my job.
Still not a problem. The senior doesn't make the decisions, then team as a whole does.
The we'll gave it away