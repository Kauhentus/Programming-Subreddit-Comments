I think what you are looking for is multitennancy. Basically what you want to do is resolve a service based on the incoming request, you can do so by providing a factory for your service in your DI configuration and resolve the httpcontextaccessor. Then inject your service based on a specific port, header or cookie. Check out dotnettency aswell ;)
It depends on if you have a valid use for the interface. If you are just doing it because that is what everyone else does you probably shouldn't. It is a waste of time, and you are spending too much time overthinking it. With that said, most of the time the reason why you see interfaces used with dependency injection is for testing purposes. So if you are going to unit test then sure use it so you can do proper testing, if not then there is no real reason to create an interface. 
Correct, but his explanation was based on the fact that he mangled the source material's message. The message was absolutely clear, but it is also a fact that many people misunderstand when pass by value and pass by reference actually happen. That's all I was getting at. I've had to convert many immutable structs to mutable for speed in critical areas. I haven't had to deal with Unity, though.
whats wrong with RabbitMQ?
Does RabbitMQ work together with WCF? I asked about MSMQ because WCF can use it for reliable messaging...which is one of the things that WCF does well that you don't get with REST for free.
 ON ERROR RESUME NEXT (sorry - couldn't resist)
Two of us wrote an entire web-based ERP system. Through development it worked well. But when we deployed it to test, nothing but blank pages. We finally found that the framing written by another designer (this was ASP, so "modules" were just include files that ran inline in-process) had an "On error resume next" in it. So that line was at the top of every page. We pulled it, and now all the errors that had been suppressed during development started showing up. It was a long weekend. 
https://www.rabbitmq.com/dotnet-api-guide.html I have never personally used WCF and msmq together out of the box, but I have played with the RabbitMQBinding(not in a deployed project) and it seems to work well. 
/u/van-dame [explained it well](https://reddit.com/r/csharp/comments/999eg0/_/e4m7v9y/?context=1): LocalDB runs in a user context. When you run under IIS you run under a different user, a system account typically, which would not have access to *your* database. You can test this by running your application‚Äôs pool impersonating your current user and you‚Äôll have access to your LocalDB
absolutely, i'll PM u with my info
I'll let you know when I see it
So it‚Äôs not an answer to your question but a question of my own. You say you got your first programming job after a year of learning C#. What was your experience before that? I want to use pluralsight to learn soon. If you went from nothing to that in a year, that would be promising for me.
My experiences was learning on my own, and only ever applying once to a small local business that needed a programmer. It was more, I took my first class in C# In Jan., aced it and applied to the first opportunity that arose itself. I worked as a student worker at my college in our IT department which got me PC Support experience and customer service experience which is great. I wrote batch files to help me complete remedial tasks. Work. Your. Ass. Off. Apply yourself, be patient. It will be worth it.
dotnet.js
this is what being 'agile' looks like
\`ON ERROR GOTO 0\`
What you're doing isn't passing a tuple to the add function. Do `Add (4,5)`, you'll get the error you expect. I also get a warning if I use your code as written, even if I pipe the output to printfn by `Add 4,5 |&gt; printfn "result %i"` &gt; The result of this expression is implicitly ignored. I assume that's a reference to the curried result of `Add 4` that's being ignored, as `"result 5"` is printed.
Coffee and crying 
I'm getting there !lol
Waiting for this so I can use ncrunch with it. It had problems with 2.1 on integration tests. 
&gt; F# and c# share the same type system Ehh, kind of yesnoish. They both are based on the CLR, but C# does not support union types (and there are currently no concrete plans to support them).
Ah curses. I only drink tea.
At least in that case it was because someone else had done something wrong. Yesterday I kept wondering why something wasn't rendering properly, yet there wasn't any error logged whatsoever. My stupid arse had added error handling, but the component for displaying errors hadn't been implemented yet, so the error had been neatly tucked away inside an object variable waiting to be read. All in all implementing the thing took me much longer than it should have because I couldn't find the damn error that **I** had handled.
&gt; The third position of the SDK version number communicates both the minor and patch number. The minor version is multiplied by 100. Minor version 1, patch version 2 would be represented as 102. Soo... Why is the version listed as `100` for the initial release? Last time I checked `100 * 0` was still `0`. Or did something fundamentally changed in C# and arithmetic?
Ncrunch is the best!
&gt;I should loading view models that are mapped from the models only passing in data I am ok with sharing with the client Yes, exactly. A view model is a representation that is "Taylor made" for the purpose of the view. It doesn't have to correspond with the actual model class. For example, if your user view displays each user's top 5 books, then it's perfectly reasonable to create a `UserWithTopBooksViewModel` class, which would contain data about both the user and their top books, even though this doesn't correlate precisely to your model classes. Sending model objects down to the client is [one of my favorite anti patterns](https://ayende.com/blog/4011/the-stripper-pattern) 
I'm sure you are very correct üòÅ
I'l keep it in mind when I have to move files for a larger project, cheers.
I found this article extremely helpful: http://codebetter.com/karlseguin/2008/05/30/foundations-of-programming-pt-8-back-to-basics-exceptions/
try-catch the entire main. Let it fail silently, go away and look at the guys maintaining it. Laugh 
https://imgur.com/gallery/D6l8fu1
Eric Lippert wrote a nice article on the subject of how to handle different exceptions... https://blogs.msdn.microsoft.com/ericlippert/2008/09/10/vexing-exceptions/
&gt;A folder cannot have an extension Thats wrong. at least to some point - "E:\\temp\\test.jpg\\a\\" is a valid directory path, where a is a directory inside test.jpg
Keep up the good fight. The next place i worked at wanted to reimplement some javascript table bollox, which to its credit was open source. I wrote a pangination, filter, sorting table thing over the weekend just to avoid the pain of shoe horning another lib in for a simple problem. I suspect its a go to for people who cant program.
Reminds me of [this story](http://www.dodgycoder.net/2012/02/coding-tricks-of-game-developers.html)
Well you can just create a 10-20 megs file and write there some weird shit like digits of Pi calculating it in the process. Then you can gradually reduce the amount of digits achieving less processor load, disk consumption and running time. When your users will quit complaining you can put some untested shit or bizarre api call and nobody will notice.
Oh, looks like my math was correct but I forgot to hook up the click event so it looked like I was clicking on nothing!
Hmm, actually if you say so
Im sure customers don't know anything about api calls
It is also how to make servers love you - some flood protections would block you for hammering the sockets. Works for humans and machines equally. 
100% of ‚Äòconsultants‚Äô
Thanks. I will keep that in mind, but as for now I am going to stick with my SQL queue which gets checked immediately on service restart. but if I can use Rabbit for IPC then I will have to do some research and possibly in my next release add that. I think that might be a bit much to incorporate by October 1. Althought this IS the final component I need to do to wrap this project up.....
Sad to say- I **am** the group. I'm currently the only developer working for this company (its very small, \~50 employees) so it's a lot of trying to figure out what the guy before me did. Thankfully, the programmer before me moved to the department manager and I have him to turn to. I've asked but he admits that "Exception Handling is something I never really looked into or got good at. Wish I did though." The scary part is that Ive only been here 4 months and am now making decisions of where the program is going to go, how it's going to get there and how **I'm** going to get it there. It's a whole lot of pressure it seems for someone who doesn't even have a cert or degree yet. (looking into getting certs and have almost finished my degree)
The Category objects that are part of the new Client are not in any way connected to Entity Framework when you add the Client... so it assumes they are new. Try something like: var catRepo = new DataRepository&lt;Category, ApplicationDbContext&gt;(); var clientRepo = new DataRepository&lt;Client, ApplicationDbContext&gt;(); var selectedCategory = catRepo.GetSingleItem(GetDropDownListSelection&lt;Category&gt;(CategoryList).Id); So the category that you add to the Client has come from the database, and Entity Framework knows that it's already in the database and won't re-add it.
I realize I probably didn't answer your question- I **started** C# in January, and excelled past my class's curriculum. I turned in about 5 personal projects I was working on on my own (I only needed to turn in one project for my final grade). I was wanting feedback from my instructor on how I could better my code. However, his only reply was "Please, stop sending in projects. You have already passed my class and these projects won't be able to help your grade. " Little shameful to me. I got the first job I applied to (mainly because they settled for me and the other two people who interviewed were.. undesirable when it came to people skills). A friend of mine working as a Desktop Analyst at the same company told me about it and told me who I should send my resume to. Had an interview within a week, and a job within two, after applying. I'm aware that **most** cases are not as simple as mine. I wasn't expecting to get hired and only applied to shut up the friend. I had a great gig at the college I was student working at and sad to leave it behind since I was learning a **ton** about cyber security from our CISO. Would go back in a heart beat, I just need the money right now. Can't say I've heard of PluralSight. From a quick search on it- it seems pretty useful! I've also seen and heard quite a bit about Udemy- haven't taken or seen much myself, just know a ton of people enjoy it. I would recommend starting small, just making small programs that have no use outside your hard drive. I started with programs that would move a file from one location to another. And then one to find whatever file I needed it to if all I gave it was the drive letter (ie. C:\\). The best way to learn is by doing. So I just did a lot. 
The answer I accepted on SO recommended the same thing, but with some difference: if (item.PrimaryCategory != null) db.Categories.Attach(item.PrimaryCategory); Don't suppose there's a way to do this in a more generic way? I see you're still using the passed generic object (client in this case) so I have to wonder...
Yes, exactly.
I'll look into those thanks! I literally had no idea what even to google. 
It's the [speed up loop](https://thedailywtf.com/articles/The-Speedup-Loop)!
Inb4 someone refers to the Mongolian Vowel Separator. 
&gt;What would be the process if I want to see a continuously growing progressbar? Update the progress bar with 4096 bytes of progress each time. You know the total size and how many blocks you've copied. There's no need to look at the file.
Your customers are inferior to my customers!
You could try to use `DestinationStream.FlushAsync()` after the CopyToAsync. I'm not sure if that flushes.
I was working on a device this summer, and I put delays in to make sure certain communications happened. I ended up forgetting they were there, so when we needed to drastically speed things up (like down to less than a second) I found them, face-palmed, and took them out. They were only 50ms delays, but in a loop, so it dropped everything down. Tldr; I did this to myself
What are you using to serialize it with? I normally use a Data Contract Serializer. This will serialize everything unless you use the DataContractAttribute/DataMemberAttribute.
Lead programmer did this with memory, during production, hid 20 megs of memory in the engine. We ran for a lot of the project with our current memory projections then he magically saved 20 meg. Programmers knew what happened but kept our mouths shut. Trying to get artists/musicians to cut 20 meg from every part of a game is hard. We were still over budget in many places.
inb4 when the malware guys reverse engineer your binary and see what you're actually up to.
I'm not actually serializing it manually; rather I'm passing it into an AppDomain, which means it gets automatically serialized when going into or out of the AppDomain.
Thats when you claim its was for debugging.
Mine don't know anything either. Most just know how to operate a computer well enough to do what they want, and that's about it.
A classic DailyWTF that I am too lazy to Google on my phone. Worth noting it was game programming for some console. I don't think it was only artists. Most programmers didn't know either. The legend says that when everyone declared that there was no way to shave off more memory he deleted the useless array in front of the shocked junior dev (the one telling the story)
The code I provided should be sufficient. No need to attach the navigation properties Category and Subcategory separately. The documentation says: &gt;**Begins tracking the given entity in the Unchanged state** such that no operation will be performed when SaveChanges() is called. &gt;**A recursive search of the navigation properties will be performed** to find reachable entities that are not already being tracked by the context. These entities will also begin to be tracked by the context. **If a reachable entity has its primary key value set then it will be tracked in the Unchanged state. If the primary key value is not set then it will be tracked in the Added state.** An entity is considered to have its primary key value set if the primary key property is set to anything other than the CLR default for the property type. That means when you call db.Set&lt;T&gt;().Attach(item); your client will be tracked as unchanged AND any Category and Subcategory will be tracked as unchanged as well (because their Id != 0). By calling db.Entry(item).State = EntityState.Added; you will ensure that the entity (and only that entity) will be added when you call SaveChanges(). It will not add any Category or Subcategory UNLESS their Id == 0. 
Hmm, I wasn't getting errors on that; I was getting errors on things like a class in my game data called `MiningModel`, which is referenced from the `Galaxy` class that is being converted to `SimpleData`...
Picturebox.Image = tempBmp; should work fine.
Thats what I thought. But I then I get an exception in Program.cs (that starts the form) System.ArgumentException HResult=0x80070057 Message=Parameter is not valid. Source=System.Drawing StackTrace: at System.Drawing.Image.get_Width() at System.Drawing.Image.get_Size() at System.Windows.Forms.PictureBox.ImageRectangleFromSizeMode(PictureBoxSizeMode mode) at System.Windows.Forms.PictureBox.OnPaint(PaintEventArgs pe) at System.Windows.Forms.Control.PaintWithErrorHandling(PaintEventArgs e, Int16 layer) at System.Windows.Forms.Control.WmPaint(Message&amp; m) at System.Windows.Forms.Control.WndProc(Message&amp; m) at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&amp; m) at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m) at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam) 
How about just var image = Image.FromFile("some file name here.png"); using (var graphics = Graphics.FromImage(image)) { graphics.DrawString("hello world!", font, brush, new PointF(0,0)); } PictureBox.Image?.Dispose(); PictureBox.Image = image;
Normally when I get an error during serialization, at least when using MS, the specific error is several layers down in the exception (inner exception). What is the specific error in the most inner exception that you are receiving?
Dont load from a file. Test it and then add the file back in.
Does he work for Verizon?
For anybody else wondering about this, I‚Äôd not touched F# for a while and this did look wonky. What appears to be going on is that the comma is used in tuple literals and that the tuple symbol/operator has higher precedence than function application. So as /u/adnan252 points out this IS a case of not having familiarity with the syntax. 
Tried an approach like this - nope, still get an exception - see my other comment. This is weird.
Dick move.
I acutally use this: Thread.Sleep(-5000); I live in the future
There is no inner exception: System.Runtime.Serialization.SerializationException: 'Type 'FrEee.Utility.MiningModel' in assembly 'FrEee.Core, Version=0.0.8.0, Culture=neutral, PublicKeyToken=null' is not marked as serializable.' What I can't figure out is where this `MiningModel` object is trying to be serialized; I thought I converted everything to a [`SimpleDataObject`](https://bitbucket.org/ekolis/freee/src/default/FrEee/Utility/SimpleDataObject.cs) class before sending it over? 
However, with testing, I'm still leaking memory. I cant dispose on the image (`image.Dispose()`)... run into the same exception I had before... I'll just stick to the silly GDI+ way for now.
My customers complain when we didn't make something simple into an API.
That is exactly what im doing, only taking screenshots of the outer edge. However im observing that it takes a very good deal of time just to initialize the CopyFromScreen function. 
While I didn't traverse your entire class (ObjectGraphContext) that you are serializing, it's possible one of the members has a class that uses the type MiningModel and that is causing the issue. Also I see you are using Object everywhere, maybe you are using a concrete type of MiningModel and assigning to an Object in your class. That is an example of where you are not using MiningModel directly, except during serialization.
Im using the CopyFromScreen() function, however it is build on BitBlt() if im not too incorrect.
You can use any other transport you feel like (you just have to implement it) such as Binary Json https://en.wikipedia.org/wiki/UBJSON Or https://codeclimate.com/blog/choose-protocol-buffers/
Oh yeah, forgot to remove that after I put the while loop in
I can't seem to find the story on DailyWTF, if you have some hints to find it. I had the feeling like he had done this before, not that it's totally original idea or anything. This would have been around 2010.
The scope of a `switch` is everything in the braces, unless you're using pattern matching variables; a `case` does not create *scope* by itself. So, no, it doesn't bother me to have the `throw` instead of `throw`-then-`break`.
Its a useful warning. Years ago I would leave the break commented out, but eventually, the break after the return started to look wrong. 
``` void doThing() { if (a) return b; } ``` Is syntactically valid and perfectly fine, though it would be better on the same line as the if statement.
It‚Äôs not mandatory to have the break. It‚Äôs not in common to see statements without a break on purpose so it executes the code in one and then goes to the next statement and executed the code in that one as well. 
Hmm. One big thing that comes to mind is `GetPixel()` is comparatively slow. If you dig around, you'll find ways to access the pixel data directly via C# unsafe code and the `Bitmap.LockBits()` method. I've never done it, myself, but I know it's pretty fast compared to `GetPixel()` calls. But since we're talking such small time margins and such large magnitude of operations, there are lots of microoptimizations I'd usually not mention that might be useful. For example: for (int y = _Ypos; y &lt; _Ypos + _Height; y += (int)AmbiLightModeBlockSampleSplitNumericUpDown.Value) Every iteration of the loop, you have to: 1. Fetch the `Value` property of a NumericUpDown. 2. Convert that 96-bit floating-point number into a 32-bit integer. 3. Add the integer to `y`. You can cut out (n-1) iterations of 1 and 2 *and* reduce cognitive load by writing this instead: var sampleSplit = (int)AmbiLightMode...Down.Value; for (int y = _Ypos; y &lt; Ypos + _Height; y += sampleSplit) You might think the compiler would do this for you, but it won't. For all it knows, `Value` could change as part of the iteration, so it's going to do a property fetch (which is a method call) every iteration. Another thing that worries me here: ultimately `GetColorOfSection()` is called from a method named `AmbilightThread`. Since the numeric updown is a control, it should only be accessed from the main thread. So this is very unsafe. It will behave correctly sometimes, oddly other times, and crash other times. The "right" solution is to marshal accesses back to the UI thread, but that takes time. If I have a thread running like this, I prefer to make it depend on a variable that the UI thread can update via change handlers. It might look something like this: private readonly object LockObject = new Object(); private int _sampleSplit; private void WhenSampleSplitChanges(object sender, EventArgs e) { lock(LockObject) { _sampleSplit = longNameNumericUpDown.Value; } } private void MyThread() { while (true) { // Declare variables each iteration needs here int sampleSplit; // Fetch all variables needed here lock (LockObject) { sampleSplit = _sampleSplit; } // Now use the local copy } } With some clever code you can reduce locks, perhaps by using flags to indicate when no variables have changed, but that distracts from the basic idea: don't directly access controls from a thread. Anyway, keep in mind any index operation and any property access has a cost. When you see yourself indexing the same thing or accessing the same property multiple times, it's good for both performance and sanity to store a reference to that thing in a variable. For example: if (AmbilightColorStore[0].Count == Count) { AmbilightColorStore[0].Add(new List&lt;int&gt;()); AmbilightColorStore[0][Count].Add(OutPutColor.R); AmbilightColorStore[0][Count].Add(OutPutColor.G); AmbilightColorStore[0][Count].Add(OutPutColor.B); } You may not realize it, but this is at least two property accesses per line. Why? `AmbilightColorStore[0]` is actually calling the array's indexer, which has to do some math to find a thing to return. The `[Count]` tacked on the end is accessing a List's indexer, so now we have two indexes per operation. It's probably faster to write it this way: var colorStoreList = AmbilightColorStore[0]; if (colorStoreList == 0) { var colors = new List&lt;int&gt;(); colors.Add(OutPutColor.R); colors.Add(OutPutColor.G); colors.Add(OutPutColor.B); colorStoreList.Add(colors); } I see a lot of room within your code for improvements like that. I can't promise making changes like that will speed up your process. You need to use a profiler to answer that question. But I do think your code could do with some refactoring towards helper methods. It looks like `AmbilightThread()` has 4 sections with copy/pasted code for each segment of the screen. It would help your cognitive load if it was 4 sections calling a helper function that takes parameters to describe the part of the screen it works with. But I'm very worried about the threading issues I mentioned. I'm kind of surprised it runs at all if I'm right about that. 
I am well aware that this threading chaos is bad. However i found out that as long as i only read from a control, it does not conflict with the UI thread, not sure why tho. I am aware that GetPixel() is slow, however i have tried many diffrent ways with unsafe code, and it did not help at all, since the main problem comes from getting the bitmap data in the first place. I will also implement the changes you sugested \^\^
You should also ask in /r/powershell.
I tried and can't find it :( I remember that the story ended with a claim that the author found the practice bizarre at the time but as he got more experience he started to understand.
the only way for a non-empty `case` to drop down to the next is with a `goto case`
It's the top voted comment in this very thread. https://old.reddit.com/r/csharp/comments/99kh95/how_to_make_your_users_love_you_101/e4opzox/
Bind the password box to a property on your view model. Then simply access the property when the command fires.
Ah... still strange. I can swear I've read this on Daily WTF...
That's why I'm trying to be a little wiggly. It could be that CopyFromScreen() takes a fixed amount of time for reasons we can't discern without digging deeper. If that's true, the problem isn't you and you can't make it faster. You'd have to find an alternative way. 
That is what i fear, however it is actually very hard to find another method
That's not as true in C# as it is in JavaScript, Java, C, or C++, at least.
Even assuming that `a` and `b` are declared, `void doThing() { if (a) return b; }` is *not* syntactically valid. `void doThing() { if (a) return; }` *ought* to be, but I'm too lazy to check.
Not cross platform, but the idea hasn't been completely shot down from being added for .net core as a windows compat pack nuget package https://github.com/dotnet/corefx/issues/6204
Same.
Well.. they are expected errors, since you put your try catch blocks there. Hehe. But yes. If code has reasons to fail that are outside your control, you can prevent crashes and continue execution this way.
Same, I found mvc far easier to pick up and I really liked having complete control over scripts, css and markup versus dealing with WebForms-generated pages. I lead a small team on a twelve year old financial product, so we're stuck with WebForms. We're constrained both by risk and by budget, but a large section of the site is just config pages that I am eager to migrate. We only allow deletion of objects that haven't yet been authorized so we don't use flags. We'll have to start archiving pretty soon... 
But security is not a concern here if you're using mvc with server side rendered razor pages. The pattern is just for ease of development
Do you have to use XML seralization? I have yet to encounter something that Newtonsoft JSON can't 
Who needs a time stone when you can code like this 
I've juste been interviewed in this type of "c# IDE built in the browser". &amp;#x200B; This is absolutely a pain in the ass. Nothing will come close to watching someone code and asking question directly to the applicant. &amp;#x200B; For the record i got the job, but i hated every moments spent on the browser c# ide, despite it having a a bit of auto-completion. 
You're probably getting it confused with this Daily WTF - The Speedup Loop; https://thedailywtf.com/articles/The-Speedup-Loop
The way we do it is by simply handling the Paint event and drawing the desired background image. In our case the image is a Map on top of which we need to draw certain business information. We keep the Map image loaded and then just paint that as a backdrop in the Paint event, then in the same event, paint the necessary added information. 
Removed: Rule 3, Rule 4.
Wow
How can you know a machine can't bend time if you don't ask?
I actually found that Newtonsoft.JSON couldn't serialize my object graph! But then maybe they fixed those bugs since I last checked... 
Yep! They were optimized to take advantage of new vectorized comparison functions. https://blogs.msdn.microsoft.com/dotnet/2018/04/18/performance-improvements-in-net-core-2-1/
No, reading the post it is obvious that I remembered too many details to be thinking of anything else. I certainly am thinking of precisely the same article with the wording and all.
 await SourceStream.CopyToAsync (DestinationStream, 4096); CopyToAsync completes, when the file is completely written, which makes access to the current progress almost impossible (except for using FileInfo and .Length, but this is imprecise and might not actually work for you) Take a look at my example under /u/Jdonavan's comment
ButWhy.gif You can create a simple layout in html and print it if you need to. Or convert it into PDF with itext#. Much easier code, written one time that accepts a template and data. Here you will have to write the layout of elements by hand in c# each time as well as write a data provider.
Why not just make a class that contains both the command and the title? And then loop through that list/array and call it like: Foreach(var command in commands) { //command.Command //command.Title } Written on my phone so sorry for short and bad syntax.
It looks like you're mapping the properties in the top 2 layers but not in the data layer, you're just replacing the reference? something like this: var entity = db.Set&lt;T&gt;().Single(x =&gt; x.Id == item.Id); //foreach (var property in item properties) //entity.property = item.property db.SaveChanges();
I've worked on a similar thing. I'd have been happy with 1FPS at 1280x1024... I'll definitely be checking this out.
Except that the first benchmark is completely useless since it's testing equality of two identical strings which thanks to interning are also the exact same object at runtime.
The document is downloadable. It is a 27 page document with Naming conventions and Code practices. It has some code samples showing correct approach and the approach to be avoided. 
Reminds me of this https://thedailywtf.com/articles/The-Speedup-Loop
Why would it drive me nuts? Other than the opening brace not being matched by a closing brace ofc. It's clean and concise 
Yeah, that works for web, this was to replace a type writer......
Here is nice example how to achieve Identity like authentication without need for Identity. You can still use Authorize attrs, and you control authentication process, storage and hashing. All you need is to setup builtin middleware and create Claims with user identification. [https://www.codeproject.com/Articles/1205161/ASP-NET-Core-Cookie-Authentication](https://www.codeproject.com/Articles/1205161/ASP-NET-Core-Cookie-Authentication)
By the way, I would recommend staying away from using `Activator.CreateInstance`, you don't need it here. You may need to add a type constraint on your repository though, for example: public class DataRepository&lt;TContext&gt; where TContext : DbContext, new() { public void UpdateItem(T item) { using (var db = new TContext()) { //Here use the techniques from the other responses } } }
 using (var db = (TContext)Activatory.CreateInstance(typeof(TContext))) { db.Set&lt;T&gt;().Update(item); db.SaveChanges(); } And as others have pointed out, you might want to use dependency injection.
Merge sort. Used for decades, got it's start when computers had big tape drives.
So we're doing algorithms 101 posts, now? This might be better placed in r/learncsharp or r/learnprogramming, I suspect.
Multidimensional arrays in C# probably don't behave quite as you expect. `Length` returns the total number of elements in the array, and `foreach` will loop through every element in the array in breadth-first fashion (i. e. [0,0], [0, 1], [1, 0], [1, 1], etc), when it looks like you're trying to walk through it, row-by-row. It really looks like you're probably using the wrong data structure. You probably want something more like an array of tuples: `(string name, string command)[]`. public void Checks() { var commandarray = new (string name, string command)[] { ("date", "date"), ( "kernel version", "uname -r" ), ( "cpu cores", "cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l" ), }; // omitting the null and length check: the variable can't be null because we just assigned it, and it can't be empty for the same sort of reason. foreach (var x in commandarray) { // execute x.command // put the title to plain output Console.WriteLine(x.name); } } If you're not up to C# 7, though, you could use an anonymous type, too, if you liberally apply some `var`: public void Checks() { var commandarray = new [] { new { name = "date", command = "date" }, new { name = "kernel version", command = "uname -r" }, new { name = "cpu cores", command = "cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l" }, }; foreach (var x in commandarray) { // execute x.command // put the title to plain output Console.WriteLine(x.name); } }
Yes, it‚Äôs XLS only. It can be useful for data exchange between applications, because a lot of applications still support XLS import. Additionally, this library is very simple and small (at least 10 times smaller then Open XML SDK). 
The strings aren't identical though - `The effect can be seen here, in the comparison of two strings that differ only in their last character:`
Attaching is what I decided to go with in the end. Your code works, but you need to explicitly indicate that the entity was modified: public void UpdateItem(T item) { using (var db = (TContext)Activator.CreateInstance(typeof(TContext))) { db.Set&lt;T&gt;().Attach(item); db.Entry&lt;item&gt;.State = EntityState.Modified; db.SaveChanges(); } }
If you do a lot of this, `Enumerable.Zip` may be your friend, but I'd like to reiterate myself and the other commenter: this is probably a sign that you're using the wrong data structure in the first place. An ordered list of title and command tuples would probably serve you better in the long run, whether you implement them as a custom class or struct, an anonymous class, a ValueTuple, a KeyValuePair, or whatever.
Try using the [Desktop Duplication API](https://docs.microsoft.com/en-us/windows/desktop/direct3ddxgi/desktop-dup-api) like [this demo](https://github.com/jasonpang/desktop-duplication-net)
That's not entirely true. If you use SQL parameters in your query, it will cache the execution plan. See "adhoc query caching": [https://msdn.microsoft.com/en-us/library/cc293623.aspx](https://msdn.microsoft.com/en-us/library/cc293623.aspx)
It was a bad *I*Design interface joke, sorry lol. As if the link was just an interface and the implementation was somewhere else
We use EPPlus, I haven't tried the Open Xml Sdk, but I have read that EPPlus is easier to use. Support for .Net Core was recently added to the official version. https://www.nuget.org/packages/EPPlus/
How is GetValueOrThrow different from just using the indexer? https://docs.microsoft.com/en-us/dotnet/api/system.collections.generic.dictionary-2.item?view=netcore-2.1 I probably wouldn't suffix the the methods with "OrThrow". 
I've heard the same thing, but we use openxml because you don't have to load whole files into memory (this might be possible with EPPlus too, but it didn't seem to be based on some cursory googling about 3 years ago)
Why is that useless? This will happen sometimes in real life, and it goes faster now. &amp;#x200B;
I was wondering the same. It's just trading one exception `IndexOutOfRangeException` for another `ArgumentNullException`.
In my opinion, dependency injection is the right solution here. Keeping everything limited to one context per request simplifies things quite a bit.
&gt;Thanks for your reply, i will try to look into the Desktop Duplication API, and see how that works out for me.
 public static class Validation { public static TParam ThrowIfNull&lt;TParam&gt;(this TParam o, string paramName) where TParam : class =&gt; o ?? throw new ArgumentNullException(paramName); public static string ThrowIfNullOrWhiteSpace(this string input, string paramName) =&gt; string.IsNullOrWhiteSpace(input) ? throw new ArgumentException("Value cannot be null or white space", paramName) : input; } public class ValidationExample&lt;T&gt; where T : class { public T ClassProperty { get; set; } public string StringProperty { get; set; } public ValidationExample(T classArgument, string stringArgument) { ClassProperty = classArgument.ThrowIfNull(nameof(classArgument)); StringProperty = stringArgument.ThrowIfNullOrWhiteSpace(nameof(stringArgument)); } }
He added the offending key to the exception message
A little update, i have reached a point where the screen capturing and color determination is very fast (\~5-10ms), so thats fine now, however my next issue is getting all that data transfered over to my Arduino. The Arduino runs at 1M Baud rate, so thats not the problem. But is still takes \~30-40 ms to transfer all the data and that is even after compressing the RGB values down to a 0-9 value. Im afraid that its my methods over on the Arduino side thats not fast enough. I have tried to make a lot of optimization on it, however i just cant get it to work faster, and i dont know if there is anything im doing wrong, any help would be appreciated :)
The SafeSubstring function has some special handling to avoid ArgumentOutOfRange exceptions. I'm not sure it's a complete solution, but it's not about nulls.
It's handling both.
Duplicate keys, and I don't *think* Dictionary&lt;K, V&gt; or HashSet&lt;T&gt; guarantee order, which might be important.
Self submitted links are typically not allowed, but i'll allow it (this time).
You're right! How about this? public static class Validation { public static TParam ThrowIfNull&lt;TParam&gt;( this TParam o, string paramName, [System.Runtime.CompilerServices.CallerMemberName] string memberName = "", [System.Runtime.CompilerServices.CallerFilePath] string sourceFilePath = "", [System.Runtime.CompilerServices.CallerLineNumber] int sourceLineNumber = 0 ) where TParam : class =&gt; o ?? throw new ArgumentNullException($"Argument {paramName} had unexpected null value in {memberName} of file {sourceFilePath} at line {sourceLineNumber}", paramName); } The CompilerServices attributes will have their defaults overridden for each call site at compile time, so the exception's message will include the file, line number, and name of the argument that caused the problem without introducing runtime overhead beyond what's needed for the string interpolation. In some situations, that prevents you from needing to look through the stack trace.
should be using nameof(parameter) instead of "string" in your argument null checks tbh
Hi Joe, sorry for the late reply and thanks very much for the explanation. I ended up giving up on the idea of using snake case, mostly because it seemed troublesome when automatically creating mapping tables. I'm actually having a bit of trouble understanding how EntityFramework would work without migrations. How does it understand which mapping tables for many-to-many relationships to use for example? Can you point me towards a good resource of this by chance?
Hi, I've actually been using FluentMigrator a lot over the past year. The things is I've felt that I wasted an inordinate amount of time writing data access, and as you say, it's helpful during greenfield development. I'm a bit miffed as to how I get the DB context to understand the data layer, especially with regards to things such as mapping tables or inheritance, where EF Migrations add a Discriminator column to distinguish between entities in these patterns. Do you have a understanding of this or any resources that might aid in this? I'm also not entirely sure what defensive migrations are in this context?
We don't really have a DBA. We are a bunch of "fullstack" developers that I've set a Jenkins server up for to handle deployment. I'm not sure if you're joking in saying that you've experienced it taking 10 seconds to log users in?
You don't need to read a book to use EF, that said I did read this book. [https://www.amazon.com/gp/product/B006C3CXTA/ref=oh\_aui\_search\_detailpage?ie=UTF8&amp;psc=1](https://www.amazon.com/gp/product/B006C3CXTA/ref=oh_aui_search_detailpage?ie=UTF8&amp;psc=1) Long story short, EF handles a lot of stuff for you by convention. So just make your classes and add them to your db context, EF should figure out that they are related to each other and need to be m to m. It should make the cross table for you automatically. A quick google search "ef many to many" turned this up. Much better than what I was going to write from memory. [http://www.entityframeworktutorial.net/code-first/configure-many-to-many-relationship-in-code-first.aspx](http://www.entityframeworktutorial.net/code-first/configure-many-to-many-relationship-in-code-first.aspx) &amp;#x200B;
??
I also have this issue - basically any time I update nuget, VS adds binding redirects to 4.1.1.2 in the web.config, which breaks everything on publish to Azure. I've had to maintain the binding redirect to 4.0.0.0 in order to have it not break, which is quite annoying. Would love to figure out how to fix this permanently as well.
Ahh, I'm sorry, I meant with regards to naming conventions for many-to-many relationships. If I use the typical way of generating a many-to-many relationship, it'll generate it with the standard naming convention. I figured it would be possible using the fluid API, but it seems like a lot of work for the sake of a naming convention that we mostly follow for the sake of making SQL queries easier to write anyway, if that makes sense. 
I didn't expect to see an old coworker of mine on here! Hope all is well, Chris - send my regards to Neil, the filthy one. ( Õ°¬∞ Õú ñ Õ°¬∞)
The output is being printed to the console. (Console is like the command prompt window, and when running a command line program, it *is* the command prompt window. Unix-ites call it "standard out" or "stdout".) If you build and run that program, it will show the console screen for a moment, then close it when the program terminates. You won't be able to read it, because it closes the console window too fast. At the end of the body of Main, add the following: `Console.ReadLine();`. That will force the console to wait for you to press enter before it ends the program and closes the window.
Use paket instead of nuget.
"defensive" migrations are those where there is code like "if this column doesn't exist, add it". For the things like Discriminator columns, or getting EF to jump through non-standard hoops, or not understanding what columns EF needs. It just comes with experience and/or copying your data model classes into a throwaway code-first project to see what tables/columns/foreign-keys would make EF happy. I'm sure there are articles out there, and I probably learned a lot from PluralSight courses.
I can't comment on Webforms example, because i won't touch that framework with a ten foot pole, but can the author explain: ‚Äã 1. Why does IDictionary ‚Äì GetValueOrThrow accept a defaultValue parameter, that it never uses? `public static U GetValueOrThrow&lt;T, U&gt;(this Dictionary&lt;T, U&gt; dict, T key, U defaultValue = default(U))` `{` `U value;` `if (!dict.TryGetValue(key, out value))` `throw new KeyNotFoundException($"Cannot find key {key}");` `return value;` `}` 2. How is IDictionary ‚Äì GetValueOrDefault better than: `var valueOrDefault = dict.TryGetValue("key", out var value)` `? value` `: "default";` 3. Using String ‚Äì SafeSubstring over: `input?.Substring(0,20);` &amp;#x200B; I think good code is minimalist and clean. This post provides anything but.
Why would that even be necessary? Surely it should be trivial to find that information when debugging the exception.
That's all information that would be captured by the stack trace, though. There are some issues with compiler optimization around throws. It might be preferable to use your custom method to build the exception in whatever your standard fashion is, and throwing it in calling context: ClassProperty = classArgument ?? throw NullArgument(nameof(classArgument));
Switch to .NET Core. You‚Äôll be fighting the GAC until you do.
This bug should be fixed if you upgrade to 4.7.2 See Release notes: https://github.com/Microsoft/dotnet/blob/master/releases/net472/dotnet472-changes.md#bcl &gt; Increment the assembly version of System.Net.Http and System.IO.Compression to be compatible with netstandard 2.0 and the compatibility package. [504519, mscorlib.dll, Feature] In all solutions I had this issue previously the update has fixed it.
Try using AutoMapper. https://automapper.readthedocs.io/en/latest/Value-transformers.html public class InputSanitization&lt;T&gt;: ActionFilterAttribute public override void OnActionExecuting(ActionExecutingContext filterContext) { var model = (T)filterContext.ActionParameters.FirstOrDefault().Value; // T if (null != model) { var newModel = Mapper.Map&lt;CustomModel&gt;(model); filterContext.Controller.ViewData.Add("model", newModel); } } } elsewhere... // on app start public void InitializeAutomapper() { Mapper.Initialize(cfg =&gt; { cfg.ValueTransformers.Add&lt;string&gt;(val =&gt; Sanitize(val)); cfg.CreateMap&lt;OldModel, CustomModel&gt;(); // you'll need to declare all the maps between the unsanitized and sanitized versions of your models, // but properties with the same name will copy from one to the other without further configuration }); } 
Ha ha! Now I get your joke. Lol, I am very poor in understanding these jokes. It's my bad.
System.Net.Http is keeping me from moving to 4.7.2 It works on 4.7.1 and nothing I have tried will get it to work with 4.7.2
I've been there I feel your pain. [See this thread](https://github.com/dotnet/corefx/issues/17522#issuecomment-411804312). This is the fix that worked for me: &lt;assemblyIdentity name="System.Net.Http" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" /&gt; &lt;bindingRedirect oldVersion="0.0.0.0-4.1.1.2" newVersion="4.0.0.0" /&gt; &lt;/dependentAssembly&gt; 
One thing you could do is break that into explicit calls to foo.Add(), instead of using the collection initializer.
Add it in with the nuget. [https://www.nuget.org/packages/System.Net.Http/](https://www.nuget.org/packages/System.Net.Http/)
This looks like you can easily wind up with the sort of graphs that will choke many serializers. That said, Newtonsoft has an option to [preserve object references](https://www.newtonsoft.com/json/help/html/PreserveObjectReferences.htm). You may want to try that if you haven't. That said, you'd probably get better results with something like [Hyperion](https://github.com/akkadotnet/hyperion). The output can be more compact than JSON.NET and tends to be quicker for serialization/deserialization. Biggest drawback is that it is not always the most tolerant of Interfaces being passed around (Concrete types work far better)
Thought of another one: ThrowIfNull can be used when there isn't an assignment or call going on. public void DoSomeThings(OneThing arg1, OtherThing arg2) { arg1.ThrowIfNull(nameof(arg1)); arg2.ThrowIfNull(nameof(arg2)); // Actual method logic }
I bumped my head into this and freshening up with nuget didn‚Äôt fix it. It‚Äôs a weird jagged edge. 
Fucking GAC.
Yes, [Learn Xamarin](https://reactdom.com/xamarin). 
switching to netcore or netstandard will help a lot because the newer csproj is much better at dealing with references since it has a specific &lt;PackageReference&gt; that uses strict nuget version numbers instead of the older hint path ambiguity
There is no proof that it is because of the new optimization since that benchmark doesn't test that at all.
So a model can help... For example class pizza { public string type { get; set;} public string price { get; set;} // or use double or float } Then in your controller you can create as many pizzas as you want Example controller { pizza pizza1 = new pizza() { type = ‚Äúcheese‚Äù, price = ‚Äú$8.99‚Äù // use a double or a float if you will add and subtract }; // create as many as you need, then Add them to a list and pass that list to the view and iterate through the list with a foreach }
Are you sure? Does string.equals do an up front check to see if the pointer and length are the same before scanning the string? I don't know where it is in the repo, anyone know? 
thanks so much I have just PM'd you could you check it when you get a chance? Thanks in advance
Yeah, this took me hours. Fuck System.net.http. I think I ended up removing it from all project dependencies, manually re-adding it. Praying. Repeating the step 6 times. Then it worked. Or at least very similar to this.
Sadly netcore support for WebForms is not that great :P
Well, there are a couple of ways you can do this. You could try and subscribe to the event that is fired when you click a cell, then do your evaluation in there. The other option is to bind your DataGrid to some sort of generic list, then you can put some extra logic into the setter of the property (row) that you're changing. Since it looks like you're not binding to a viewmodel of any kind, you can intercept the check changed event by adding a custom CellStyle to that particular column. It would look something like this: &lt;DataGridCheckBoxColumn&gt; &lt;DataGridCheckBoxColumn.CellStyle&gt; &lt;Style&gt; &lt;EventSetter Event="CheckBox.Checked" Handler="CheckBox_Checked"/&gt; &lt;/Style&gt; &lt;/DataGridCheckBoxColumn.CellStyle&gt; &lt;/DataGridCheckBoxColumn&gt; and in the code-behind of your window, add this event handler: private void CheckBox_Checked(object sender, RoutedEventArgs e) { if (sender is DataGridCell cell) { //do stuff } } I don't want to take all of the mystery away from you, so toss a breakpoint in the `CheckBox_Checked` method and see what you can do with the `cell` and `e` variables. 
That's exactly my point. Not sure what's yours then.
So there is a shortcut: [https://github.com/Microsoft/referencesource/blob/master/mscorlib/system/string.cs#L558](https://github.com/Microsoft/referencesource/blob/master/mscorlib/system/string.cs#L558) &amp;#x200B; The implementation is this: &amp;#x200B; [https://github.com/Microsoft/referencesource/blob/master/mscorlib/system/object.cs#L82](https://github.com/Microsoft/referencesource/blob/master/mscorlib/system/object.cs#L82) &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
Desktop Duplication is where it's at. But you will have to offload some of your algorithms to the GPU probably, since the bottleneck is the memory transfer from GPU to main. Desktop duplication also has some shortcomings. It will not provide you with pictures if nothing in the scene has changed. So you will get very dynamic framerates. There are ways around it, but its tricky, since you have to juggle multiple surfaces.
Don't look into the Nvidia Capture SDK. It's outdated and really - really hard to get right. Focus on Desktop Duplication since it's DXGI you already have the driver abstraction.
[A few more I made - Might come in use :p](https://github.com/Reelix/ReeCode)
You could use an enum for the types of pizza. Then in the pizza class, have a property PizzaTypeEnum PizzaType. In case you want a bit of extra info about MVC (Model - View - Controller) here are a couple links. Don‚Äôt worry about it too much while you‚Äôre learning, but I found it helped to be aware of it at a high level when I was learning all of it. [StackExchange ](https://softwareengineering.stackexchange.com/a/127632) [Good ol Wikipedia](https://en.m.wikipedia.org/wiki/Model‚Äìview‚Äìcontroller)
Thanks so much for your advice :) I am still wading through it and have been stuck in the same spot all day (as well as all this week -_-) I've currently narrowed it down to me having to declare the values in the controller, then passing them through to the table.. I'm still stuck there aha. Where I'm stuck at is in the OP, both the links. The next part asks me to create an action method inside the controller called purchase then have two parameters one with PizzaCount and PizzaType, then I must create a view file to generate a HTTP response which will then show the PizzaType * PizzaCount. Its really sticking it in me -_- any advice will be appreciated if you have any experience with Visual Studio 2017 ASP.Net core or C#, or possibly in both since I'm working in Razor.. Thanks in advance :) 
I use Razor Pages, C#, VS 17, and .NET basically every day. Use a different framework for everything, but the general idea is the same. On mobile at the moment, so I can give some better input on the morning when I crawl out of bed. When the URL is visited, the controller is the piece that handles the request. So if you had something like this: Public string Index(){ return ‚Äúthis is a pizzaria‚Äù;} That string would be on the page when you visit the site. (If index is set to default in the startup cs) So if you want a list of pizzas, you can create a list of pizzas and send that list to the view. This can be done a number of ways. For the sake of simplicity you can pass data to the view by using the ViewBag. ViewBag.pizzas = myListOfPizzas; And then you could loop over it in the razor page @{ foreach (pizza in ViewBag.pizzas) {...}} [short tutorial on ViewBag](https://tutorial.techaltum.com/ViewBag-in-MVC.html)
Unless I'm mistaken, the OP is using Windows Forms, not WPF.
You know what you're actually really helping me understand and thank you so much for sharing your knowledge with me, I kind of have sort of a stronger idea now. I am going to PM you though, so please check that when you get a chance if you can :) Ah and its no rush I know you're headed to bed, Im just sending you through my specs if I could just trouble you to have a look and if you can provide more of your &lt;b&gt;awesome&lt;/b&gt; help :) 
You could try migrate to package references - https://docs.microsoft.com/en-us/nuget/reference/migrate-packages-config-to-package-reference
Check for null prior to initialisation 
"Sadly"
You could use fiddler to watch what Skype does. Those endpoints are secured though, so you'd have to reverse engineer that.
Headless Cef.Sharp instance that lotgs into web Skype (outlook) and injected js to call commands and return info.
One of my favorite little extension methods is this. public IEnumerable&lt;T&gt; Yield&lt;T&gt;(this T value) { yield return value; } Now whenever you need pass a single value to something that expects an IEnumerable it's just Foo(1.Yield()) Which as the nice benefit that all types will now have it via intellisense.
Is there a reason that you are not using the data annotations on your view models? public class User { [Required(ErrorMessage = "Username is required.")] [RegularExpression("^[a-zA-Z0-9]*$", ErrorMessage = "Only Letters and Numbers allowed.")] public string UserName { get; set; } }
I think your project and code are referencing aspnetcore MVC not Razor Pages. They are two related but different approaches to creating web sites with aspnetcore. Razor Pages is actually part of MVC so it gets confusing. Make sure that when you look things up you look for MVC because it can be even more confusing if you start looking at Razor Pages expecting it to teach you MVC because it won't make much sense. I would take a look at the MVC section of the docs. There are tutorials that will help you grasp the basics of MVC. MVC: * https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/start-mvc?view=aspnetcore-2.1&amp;tabs=aspnetcore2x Just for reference here is the comparable Razor Pages docs: Razor Pages: * https://docs.microsoft.com/en-us/aspnet/core/razor-pages/index?view=aspnetcore-2.1&amp;tabs=visual-studio It can be very confusing to newcomers to aspnetcore because the terms overlap. Both MVC and Razor Pages use "Razor Markup" (.cshtml files) * https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-2.1 
This tutorial is pretty detailed and has all the basic information about Web Development. Some of the content has changed from the Full Framework to .NET Core. It should also help you: [ASP .NET MVC Tutorial ](https://docs.microsoft.com/en-us/aspnet/mvc/overview/getting-started/introduction/getting-started) 
&gt; Assembly Sandboxes I think those are called AppDomains?
The old one works fine for me?..... Skype4Com is it, yeah?
You‚Äôre right actually. I swear I thought I saw some sample xaml, but maybe I was reading another post at the same time and got them switched
I second that. Took me days just to get my own online status, nevermind contacts.
If you like learning from Video's [pluralsight.com](https://pluralsight.com) is a great site to use. So much so that I've seen companies offer this to all of their development employees. I've use it occasionally to get up to speed on new tech. I would bet there are some free video's on youtube as well perhaps alternatively as a free option. &amp;#x200B; It also depends on how you like to learn. Some people like to just learn by trying out things in the language. Some like to learn by reading, then trying, etc. For me I like to watch video's on a topic or read or both, then try things out in the new stack or language. &amp;#x200B; &amp;#x200B;
Maybe a year or so ago, Skype stored a sqlite db on the user's machine with a bunch of info including contact info and calls made. I don't know if that is still the case, but at the time I was able to pull out call logs and such, and if things haven't changed, it should still be possible.
Fiddle is used to record http(s) calls. Skype is not using http.
There are a TON of jobs for ASP.NET frontends. I don't know who would have told you otherwise.
"How to expose C functions from .NET Core" FTFY üòÅüòÅüòÅ
Google is always the best choice.
I can confirm this is still the case as I have used it recently to pull messages to contacts. 
Take a look at CodeMaid (http://www.codemaid.net) which has lots of formatting options
Even from a non developers perspective, I've come to hate Skype. I use it for all my phone call and I'm on conference calls all day. The GUI is retarded and the recent change made it even worse. No support for skins, unreliable DTMF tones, etc. I'm *this close* to switch to some SIP service since I use Skype only for phone calling. 
This is the best answer regarding the question. You will need take some time to learn about reverse engineer methods though 
The version 1.5.0 is not yet released, but is already committed in the Main branch.
this is pretty cool but my team leader doesnt want me to modify old code :(
Yeah sounds like lots of fun
Unlike the other commenter, I believe that this is a terrible answer. It would be unsupported and Microsoft could change it at any moment. No, give up on Skype. The world has moved on. Choose an open protocol instead.
Yes, those are that. &amp;#x200B;
I'm really looking forward to C# 8.0. Nullable reference types will clean up so much boilerplate.
Damn. I'm ok with Dapper beating Chain by a hundredth of a millisecond, but how the hell are you surpassing both of us by a whole tenth?
Also, I'm not liking those EF Core numbers. It shouldn't be spending that much time CPU bound for this benchmark. 
it? Blazor? [Bridge.NET](https://Bridge.NET)? Please expound. Thanks!
I guess it depends on if the candidate wanted a C# job or not. If they want one they should put it there. While we might consider others potentially that didn't have it under the right circumstances, we would prioritize candidates that did have C# on their resume'.
I got some of pluralsight from my VS subscription. Can't I say I'm impressed, though, that's mainly because everytime I found an actually useful course, it told me it wasn't part of my subscription... C# crypto talks - nope. Xamarin such and such - nope. From the ones I did watch, YouTube has better quality tutorials and such. Though, I'm more of a give me the code and I'll find it out kind of person.
I have run this twice and the result is identical. The benchmark of Franz is far more accurate than the others. You can rerun the benchmark to see the rest in your end, I am running it locally with my development laptop, and that may vary.
I don't question the accuracy. I question why EF is still CPU bound when so many other ORMs have demonstrated better ways to do it.
Before, we know our IL is very fast, but we are slow in individual fetch until we come up with the idea of caching the request and command text, override the hash codes, compile with the expression, statically caching the IL, and refactor the chain of the calls. This takes us a month before we even come up with this performance. We will then proceed with BulkMerge, BulkUpdate feature.
So am I. So is Dapper. But you're beating hand-rolled code and that's not supposed to be possible.
Maybe, I should release 1.5.0 to see it in the other‚Äôs side. Again, we did the improvement in our own ways. We have a baseline Dapper to always check our progress. I explained what we did on it and can be seen in our codes. May I know which ORM you are referring besides Dapper?
Tortuga Chain. You can see it in your profile results. I've got two versions. One uses reflection, the other uses CS-Script to compile and cache the materializer logic.
Seriously, your library is so damn fast and so Dapper. I always notice that you guys are always beating the others and competing at the top. We might did the same way after all, the lesser code is the fastest, may be. Have you tried caching you command texts and your class properties reflection?
Class properties are cached. Command texts cannot be cached due to the way we generate them. Basically building a cache key would be just as expensive as the SQL itself. We do things like generate `col = @col` or `col is null` depending on the runtime parameter. This is faster than `(col = @col OR (col is null and @col is null))` in most databases.
One most important thing atleast in RepoDb, and this helps us a lot. I created a class named ClassProperty and holds all the possible caches for the properies. And we cached this. Meaning, inside RepoDb, there will only be single GetType().GetProperties on every class type, each class property is wrapped into ClassProperty to make sure that every calls to the definition is only happening once (IsIdentity, IsIgnores, IsPrimary etc).
Exactly what we're doing. Also caching the Get and Set methods on each property. I have no idea why `GetType().GetProperties` is so slow. You'd think MS would figure out how to cache that so we don't have to.
We never tested RepoDb in other DB. Btw, it is a bit hard for us to come up with this result as we are still maintaining the promise of making RepoDb the hybrid and the a fast-switching lightweight ORM.
I'm actually going in a different direction. While it us still lighter than EF, we're investing heavily into database specific functionality. For example, on every database we support you can do a single line upsert that also returns the old (or new) values. That takes very different SQL depending on the database. I'm also seriously considering investing more in introspection so that you can use it to do lots of reflection against the database at runtime. Mostly for building database analysis tools and code generators.
That is great to hear and I am thankful that many developers are keen to improve this layer. I hope somebody in the future has a new idea on improving ORM layers. I liked our library because it solves so many problems that others can‚Äôt. We are just sharing it to everyone, for their choice. At least in our end, we can now again focus on implementing major features (Bulk Operations) as we already have completed the baseline of the performance implementation. Btw, RepoDb is now not type coupled liked all other ORMs mentioned on this benchmark. In the last release, we have removed the DataEntity support.
Did you know that RepoDb supports the following: 1. InlineInsert 2. InlineMerge 3. InlineUpdate It is different from Insert, Merge, Update. All these six operations were supported. And this means that we might be moving in the same direction as well. We already supported the real BulkInsert and so to support the real BulkUpdate and BulkMerge.
Agree - use it in linq, foreach, etc, and when type is syntactically obvious. 
 If you set a design time type for the view model you should get better auto complete functionality. Depends on VS version and other things, but try that. If you set the DataContext to an ViewModel type with no ctor parameters, it will make one when you edit the xaml and add auto complete/correction. The binding sytax is a bit complicated at first, you get used to it pretty quickly. There are only half a dozen things to learn really. If you're writing a tiny application, screw MVVM, treat it like Winforms before MVP and just bind to the events in code behind. When you work on a large application, MVVM has huge benefits in testablitiy and separation of concerns. Another helpful thing: If you have a property you want to bind, you can use the properties in the window that appears when you press F4 and that includes builders for bindings. Useful when you're learning. If you want to set the colour, you absolutely can do it in C# code. You can either bind directly to a property which exposes a Brush or Colour, or you can bind to a view agnostic property that returns "red" or "0xff0000" as a string and then use a Converter to map from the agnostic name to an actual brush/colour depending on what you need. I've no idea what you're talking about with "creating and assigning delegates through Google". If you're trying to bind a control event to something on the view model there are many ways to do this. Triggers and behaviours being two such things. No UI pattern to date is perfect. WPF with an intelligently applied (some people just bludgeon the star shaped MVVM into the round shaped WPF hole) MVVM it's actually one of the most pleasant to work with. 
[MonoBehaviour.OnTriggerEnter](https://docs.unity3d.com/ScriptReference/Collider.OnTriggerEnter.html) is a message unity sends to objects with 3D colliders when they touch a trigger and vice-versa. If you want to listen 2D trigger enter events, you should use [MonoBehaviour.OnTriggerEnter2D\(Collider2D\)](https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnTriggerEnter2D.html). I can't find a Collider2D.OnTriggerEnter on docs, maybe you meant the one I just said?
Ye that I thought also but I think there is a monobehaviour.OnTriggerEnter2D as well. 
As you can see, this has the ending '2D' to denote the 2D physics system. It is maybe a bit confusing caused by having two different pages for the same message and also this whole unity message system being somewhat out of ordinary. FWIW, I would rather have Unity to ditch this message system and have a subscription based event system to clear all this up.
Ye I think that would also be better. It would be a lot easier. 
Ah ok thank you. 
Thank you. I just subscribed to it and unity2d
Stop throwing stuff. Nothing exceptional here. 
5 years ago I'd sort of agree with you. These days, we "var" everything. If there's a case where the type is so fundamental to understanding the intent of the code, you've got the code wrong.
Exceptions are tough actually, so kudos to your for asking for guidance. I can't write now, but I wanted to say the above and leave you in the competent hands of those who will comment below :) Seriously, it's complicated and you're a better developer for intuiting that :) 
I don't agree with this at all. We have huge code base over 10 years in development and we use var everywhere, we never had any problems related to var. I think opposite is true, not using var adds lot of visual noise to your code making it harder to read.
Heh thanks :) RawRabbit is still a great solution. I felt there was room for a simpler solution too.
Do you have BulkInsert for PistgreSQL yet? It's a right pain in the ass compared to SQL Server, if I'm reading the spec correctly. (Haven't implemented it yet.) I did do multiple resultsets from PostgreSQL. Ping me if you need that; there's some tricks with cursors-like things you need to know.
What does this offer over using MassTransit?
Well, considering that the vast majority of my day-to-day development work is in WPF, there's not much to "embrace" since there is no .NET Core-equivalent and the clients we serve are all Windows-based. We do have some MVC, but it's almost entirely relegated to providing some web services that we run on Azure. So again, not much benefit for us at work to convert to Core (at the moment). That said, I did take the time to convert everything over to .NET Standard 2.0 where possible.
A stable and fully featured GUI framework. Until that happens the entire thing is unfortunately largely useless to my work environment.
We have created two LOB web applications and one customer facing order fulfillment portal so far in [ASP.NET](https://ASP.NET) Core (the latter hosted on Azure). If the middleware takes getting used to, just think of them as IIS modules, but without requiring IIS.
Been creating some windows services (I know, people are wondering why you would do something like that with cross platform but fuck off, it's fun to do in .net core and incredibly easy). Another project is a web project using razor pages. Have a bunch of different APIs as well running out there on linux docker instances - "microservices" in a way I guess. Our department has fully embraced .NET Core 2.1 and all of our current projects are being developed with it. Honestly, this is the most fun I've had programming in a good while.
Winforms/WPF for sure
what kind of support does this have for declaring exchange types, queue bindings, etc? That is one that that turned me off from masstransit and towards a solution like EasyNetQ. I mind less being forced into a box if I can access the amqp features when I need them. 
Full support for all topology creation and destruction.
My product team.
(Windows only.)
I was basically able to achieve authentication using JWT but I also intend to have Authorize attributes in my web application on different controllers. After I get the jwt, do I store it in a cookie and retrieve it in every request to bulid the Claims and Roles? Similarly, I presume storing the JWT in the cookies will allow me to also use it in ajax calls. Kindly suggest the best practice for the same. Ajax calls to the api from web application User requests to different pages on the same web application. jwt are created only during login and then reused, right?
What UI toolkit do you use? Can you point us at any example code with these things? I found this for canvas drawing. https://bridge.net/docs/html5-application/
Loock up background worker, for example here: https://www.wpf-tutorial.com/misc/multi-threading-with-the-backgroundworker/
Bind you button to a command instead of directly hooking up to the clicked event. Make the command async and await whatever you need to. While you're waiting, change properties in the view model that will automatically update the screen
They haven't committed to .NET Core 3.0 running on Windows 7 yet, FWIW.
This sounds like an instancing problem. I don't think you want your data objects and your UI objects to be bound so rigidly together. It's too common that you'll want to make a new data object, but not a new form. If your data class is a subclass of your form, that might get rough. Off the top of my head, the way I'd structure this is as follows: A Windows Form named StatisticsWindow. It is just a window. Inherits nothing. Go ahead and design it, put some textboxes in or whatever. Name them properly. I'd make an entirely different class now called Statistics with all of the fields and properties inside of it. Inside of the Statistics class, make a method called Populate() and make it do what your Generate class is doing. In your StatisticsWindow class, right above it's constructor (the StatisticsWindow() function, create a public instance of Statistics. public Statistics statistics; Now, when the StatisticsWindow is called from a button, app startup, whatever, there is the InitializeComponent line. Under that would be code that starts using the public statistics that you declared just now; something to the effect of statistics = new Statistics(); statistics.Populate(); //Populate the controls in the form with the data textboxStatisticWhatever.Text = statistics.StatisticWhatever; //if it's not a string textboxStatisticAlso.Text = statistics.StatisticAlso.ToString(); And I'd manage the data as needed with events, button clicks, textchange events, etc. Just keep referencing the object you made called statistics. You get this down and it'd be good to start looking into MVVM and databinding because it makes wiring the data to the UI so much less painstaking. 
I work mostly in WPF in a Windows only business environment. I just don‚Äôt have the need to port anything over, or start in core. I have ported some libraries over to standard though for cross-platform use, but that‚Äôs it and it was relatively simple. IMO working in Framework is the best option for Windows native desktop apps. It‚Äôs designed for just that. Switching to Core serves no purpose. 
The generate class should not inherit from the form1 class. Whats happening makes complete sense. The generaye class dhpuld be stand slone. 
Various libraries to work right. COM interop to be fully supported. Probably a dozen other things. Ability to host WCF services. ASMX services. Web Forms sites. Lots of this is never going to happen. So, for that stuff, never.
Are you moving to netstandard for libraries? Or just avoiding it all until then?
I would not recommend `BackgroundWorker` for new development. See the rational here: [https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html](https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-intro.html)
As u/jetiger pointed out, you should bind your button to a command that is defined on the viewmodel side. Then, have an async method be the actual implementation of that command. (I'm hiding implementation details in the code snippets below) public ICommand Execute { get; } // bind the command to the OnExecute() method in the constructor using RelayCommand or similar implementation private async void OnExecute() { // ... } The next thing to do is to split your long running method into smaller part that ideally take only a few minutes to execute. And in between each step, you can report progress. Something like: public string ProgressMessage { get; set; } // actual implementation needs to raise PropertyChanged event private async void OnExecute() { int progress = 0; while (await DoOneStep().ConfigureAwait(true)) { ProgressMessage = $"step {progress} out of {maxStepCount}"; // might need to update that property using the dispatcher from the UI thread } ProgressMessage = "Job completed"; } That is a common pattern, so you could even build a small utility/library to not copy/paste boilerplate code. Cheers,
One main thing holding us back is verifying that some of our dependencies not targeting netstandard don't touch unsupported api's. And of course the fact that it's not really feature work so it takes a lower priority. However, we expect significant code simplification if we were to rewrite our main web service, as well as guess that we'll see significant performance improvements. There's also a lot of sync-only spots in older MVC that we could finally transition to async in a clean manner. In the past year we rewrote our main public facing website and our main internal admin website using .Net Core, which involved transitioning some big pieces over. Our code base is over a decade old and mainly uses a long outdated ORM, we took the opportunity to start working in EF Core (a little bit too early I'll also say - we started at v1.1 and have been held back a bit by missing features - but there was no way I was going to do the work of bringing in EF and not jump full EF for Core, expecting full EF development to dwindle as EF Core becomes the primary EF going forward). We also migrated all our library, command line, and daemon projects to the new csproj format as well as migrated our old MVC projects to use &lt;PackageReference&gt; over packages.config - mainly due to major hassles with assembly binding once various netstandard stuff started getting in our dependency tree. We've also started using some of the new api's like Span and Memory, ArrayPool may come at some point but we already had a custom solution built that provides similar functionality. Middleware is amazing. I was hooked the moment Owin dropped. Sooo much better than old MVC modules and handlers.
`var` all the things. Ceremony is bad or, at least, distracting.
Wannabe dot net developer here. What's middleware? Is it like SAP?
Full support for WinForms and WCF and adoption by the major gui component vendors.
 &gt;quantity.SubItems.Equals(quantityColumn.Text); Take the subitems collection of the current ListViewItem and call the Equals method to determine if it is equal to the quantityColumn.Text String object, then discard the return value. Is that what you want it to do? Because that is what you have it doing. ‚Äã
Aka Thank god...
Don‚Äôt use source control for code reviews?
That's nice. I have multi-million dollar government applications that are 15 years old.
I made this: [https://github.com/wasabii/Cogito.AspNetCore.ServiceModel/](https://github.com/wasabii/Cogito.AspNetCore.ServiceModel/) Let's you do a WCF ServiceHost as [ASP.Net](https://ASP.Net) Core middleware. Obviously, has to be running on the full framework. But, you can use the Kestrel pipeline, anyways.
If you really need to know the type of something then if it's new, it's type is included in that PR or if it's old then just check source code you should already have in your computer.
This is valid C#: Content = new Grid { RowSpacing = 0, RowDefinitions = { new RowDefinition { Height = GridLength.Auto }, new RowDefinition {}}, Children = { PageHeader.Create(PageMarginSize, nameof(vm.RegistrationTitle), returnToPreviousViewCommandPropertyName: nameof(vm.CancelEnterRegistrationCodeCommand), centerTitle:true), new ScrollView { Content = new Grid { RowDefinitions = { new RowDefinition { Height = 170 }, new RowDefinition { Height = 75 }, new RowDefinition { Height = GridLength.Auto }, new RowDefinition { Height = GridLength.Auto } }, RowSpacing = 0, ColumnDefinitions = { new ColumnDefinition { Width = 160 }, new ColumnDefinition { } }, Children = { new Label { Margin = fieldNameMargin, LineBreakMode = LineBreakMode.WordWrap, HorizontalOptions = LayoutOptions.FillAndExpand, VerticalOptions = LayoutOptions.Center, HorizontalTextAlignment = TextAlignment.Center, }.SetFontSize(WspFontSizes.Size15) .SetColRow(0, 2, 0, 1) .Bind(nameof(vm.RegistrationPrompt)), new Label { Text = "Registration code", VerticalOptions = LayoutOptions.End, Margin = fieldNameMargin }.SetFontSize(WspFontSizes.Size13) .SetColRow(0, 1, 1, 2), new Label { HorizontalOptions = LayoutOptions.End, VerticalOptions = LayoutOptions.End, Margin = fieldNameMargin }.SetFontSize(WspFontSizes.Size13) .SetColRow(1, 2, 1, 2) .Bind(nameof(vm.RegistrationCodeValidationMessage)), new Entry { Placeholder = "E.g. 123456", HeightRequest = 44, Keyboard = Keyboard.Numeric, BackgroundColor = WspColors.White.ToColor(), TextColor = WspColors.Gray1.ToColor(), Margin = fieldMargin }.SetFontSize(WspFontSizes.Size15) .Bind(nameof(vm.RegistrationCode), BindingMode.TwoWay) .Id(AId.RegistrationCodePage_CodeEntry) .SetColRow(0, 2, 2, 3), new Button { Text = "Verify", Margin = PageMarginSize, HeightRequest = 44, HorizontalOptions = LayoutOptions.FillAndExpand, TextColor = WspColors.White.ToColor(), BackgroundColor = WspColors.ColorValueAccent.ToColor() }.SetFontSize(WspFontSizes.Size13) .Id(AId.RegistrationCodePage_VerifyCodeButton) .Bind(Button.IsVisibleProperty, nameof(vm.CanVerifyRegistrationCode)) .Bind(nameof(vm.VerifyRegistrationCodeCommand)) .SetColRow(0, 2, 3, 4), } }}.SetColRow(0, 1) } }; 
Entity Framework 6. I migrated one project fully and another to ASP.NET Core on top of the Full Framework. The latter took some time but was straight-forward and resulted in very few regressions. The latter was terrible experience. I am never attempting that again. EF Core is a mistake.
My colleagues..
`.Equals` or `==` translate to an equality-check, you probably do not want to CHECK equality, but instead SET equal to something here, using the `=` operator eg.: i++; quantity.SubItems = i; or shorter: quantity.SubItems = ++i; Also you might want to notify the user if the input is wrong (`TryParse(ext, out i)`) eg.: if (int.TryParse(quantityColumn.Text, out i)) // Only goes into this if text was correct { foreach (ListViewItem quantity in listView1.SelectedItems) { i++; quantity.SubItems = i; } } else { MessageBox.Show("Wrong input!"); } Or better, using early return to make this Method more obvious if (!int.TryParse(quantityColumn.Text, out i)) { MessageBox.Show("Wrong input!"); return; // early return, no more computation } // Only happens if Text was parsed successfully foreach (ListViewItem quantity in listView1.SelectedItems) { i++; quantity.SubItems = i; }
Personally I would use objects with DataBinding and a DataGridView and not a ListView. (source: I develop retail software for a living)
Only in linq and obvious situations. var person = GetPerson() - never. I have to hover on things to know whether this thing returns Person or SpecialPerson or SomeOtherPerson. Yeah, it shouldn't in the ideal world. But practice shoes it still does.
Been thinking about switching to .NET core a couple of times, but there's simply no reason for me to. We make SaaS applications in .NET and everything we make is built in a Windows environment, and will be hosted on a Windows / IIS server. We've ported some websites to .NET core as an experiment so that our Apple / OSX using UX designer could work around in them and didn't encounter many issues. Simply but, there's not a single business case nor reason for us to switch to .NET core. And personally, I feel it's a bit of a hype train that I don't want to prematurely jump on. We'll see how mainstream it gets and if it ever becomes important enough career-wise.
We're all well aware of what .NET core and does at this point. Perhaps you misread or misinterpreted OPs post; They have (an) enourmous software package(s), or at least an enormous code base, and there's not a single business case or advantage (other than a slight performance increase which you mentioned) for them to make the switch to .NET core. If it ain't broken, don't fix it. Calling .NET Core a 'bleeding edge' might be rough, but fact of the matter is that there's all kinds of things that are stable and working in .NET Standard, but are still immature or simply not present in .NET Core. Especially EF evangelists seem to have a bad time on porting.
I always feel these kind of comments (IE: "Lol, you still use Web Forms? Lololol, ASMX instead of WCF or an API?!") come from either young/unexperienced/junior devs, or people that are guilty of obsessive premature optimization and/or jumping every new, hip bandwagon. If it ain't broken, don't fix it.
There is always CTRL + K, I (Edit.QuickInfo) shortcut if don't like hovering.
Given he doesn‚Äôt specify what the long running call is (wait for DB, wait for cpu calc?) it‚Äôs probably better to just spawn it on a new thread and be done with it,
[This post on SO](https://stackoverflow.com/questions/23431595/task-yield-real-usages/23441833#23441833) recommends using await Dispatcher.Yield(DispatcherPriority.ApplicationIdle); instead of await Task.Yield();
If you really want to go down that road go ahead. You still have to hover/shortcut if you want to see the real return type because explicit type you defined might not be the same type as type that is returned. I'm just wondering if you really want to see explicit types for everything when they are used, then what do you use in following situation? ` return new FooBar { Name = GetName() };` Do you use this? ` return new FooBar { Name = (string)GetName() };` Or maybe? ` string name = GetName(); return new FooBar { Name = name };` 
Third one is the most readable and if it is not that obvious, what GetName does, I might go that way. Easier to debug, easier to read. 
Shouldn't be all that different from .Net Core 2. It's just a point release. Just read the changelog and you should be fine if you're comfortable with Core2
I had found this course: Build a Real-world App with [ASP.NET](https://ASP.NET) Core and Angular 2 (4+) It discusses cool things, like using pie charts. However, it has been outdated. So, I am stuck in the very first chapter. I have already posted a question about the issue that I am facing: [https://www.reddit.com/r/learnprogramming/comments/98ps45/problem\_with\_creating\_a\_new\_aspnet\_core\_2\_project/?utm\_content=full\_comments&amp;utm\_medium=message&amp;utm\_source=reddit&amp;utm\_name=frontpage](https://www.reddit.com/r/learnprogramming/comments/98ps45/problem_with_creating_a_new_aspnet_core_2_project/?utm_content=full_comments&amp;utm_medium=message&amp;utm_source=reddit&amp;utm_name=frontpage) I can't find a similar course with all the necessary updates anywhere else. So, I am really frustrated. 
I haven't heard of async functions being bad for certain background tasks. In what case is launching a new thread a better idea than using async await? 
Sell them, invest the money elsewhere
Sounds like fun when you have lot of properties to set :) I like to use `Name = GetName()` to keep code that actually gets value for that property close as possible to avoid possibility bugs.
Sell, with the money buy a house and rent it...
Yup, that's 100% the problem.
you could take a look at this one. https://www.youtube.com/playlist?list=PLjHEYjFMxRXJkFdq3BMxcLt_W1bJfy0So
Or people whom, in that, moment just didn't think it through, but otherwise if given a couple minutes before hitting send wouldn't have. :) &amp;#x200B;
Trade them 1:1 for scratch tickets.
You don't get all of them from methods usually. And this is a corner case. But when you read wall of vars in a code that contain some lengthy logic operation - you have to spend a lot more time to figure out what this code is supposed to do. I'm not 100% opposed to vars, but I like to keep the usage of them to a minimum. 
Mostly, I don't. I take the view that one should only catch exceptions locally if one has something specific to do with that one type of exception. For instance, ignoring a HTTP error because you expect to occur. Otherwise, I use global exception handling of some fashion to log. Usually Serilog. But at the top of the application, instead of in the body.
Ok yeah it still is serializing as `{"key0":"value0","key1":"value1",etc}`, I forgot I was manually editing the result client side to get what I want. I need it to serialize as `[{"key": "key0", "value":"value0"}, etc]` 
Wall of vars does sound nasty. I would have them refactor it to smaller logical parts with good method naming. I just don't think explicit typing is the way to go when trying make code more readable and maintainable. Our old code base also has some spaghetti code and it has nothing to do with var's just bad design, very big methods and code goes through too many layers. Good luck with your wall or vars :)
You're probably looking for whattomine.com ~$500 per day, apparently Though keep in mind that number trends down as time passes
how much you payin
You are not even documenting where should the email string in the response should be gotten from...
I reckon that's the filled in template (template in 'template' key, data for template in 'model' from the request).
A quick and dirty option to get this : &amp;#x200B; &amp;#x200B; namespace RedditExample.Controllers { public class GreetingController : ApiController { // POST api/greeting public IHttpActionResult Post(\[FromBody\]GreetingInput input) { var template = input.Template; var var1 = input.Model.Var1; var var2 = input.Model.Var2; &amp;#x200B; template = template.Replace("--var1--", var1); template = template.Replace("--var2--", var2); &amp;#x200B; return Ok(template); } public class GreetingInput { public string Template { get; set; } public Model Model { get; set; } } public class Model { public string Var1 { get; set; } public string Var2 { get; set; } } } }
Your timing is pretty good! Shawn Wildermuth JUST released an ASP.net core + MVC + web api + Angular 6 course last week! I took the one he made for Core 2 + Angular 4, and it was very well done! https://app.pluralsight.com/library/courses/aspnetcore-mvc-efcore-bootstrap-angular-web/table-of-contents
Removed: Rule 3, Rule 4, Rule 6.
Removed: Rule 4. Plenty of topics handling "drag and drop", though their implementations vary greatly depending on what framework/platform you're using (e.g., WinForms vs WPF vs ASP.NET, etc). Dive in and give something a shot. Feel free to ask questions if you run into specific issues about a particular implementation.
Yeah. Agreed. My flagship app has VB6 and Classic ASP in it still, too. C++ ATL, MFC interop. COM all over the place. About 20 years of history in this thing. Working on cleaning it up, but yeah, there's no too much business pressure to do so. It works.
VB6 or VB6 that has been ported to .NET (I like to call this VB++)? If VB6, eeeeeesh -- my heart hurts for you. I wish I could pressure the business into re-writing/sunsetting one of our VB++ desktop apps because of how much maintenance time we spend in it but I am not sure they are inclined to do it. The app isn't really doing a whole lot besides interfacing with COM components but it was written in such a way that previous maintainers decided to write 1000+ lines of code for something that could be accomplished with maybe 20 lines (i.e custom data-binding, custom ORM, custom controls that already exist in the toolbox by default, etc.). The codebase is largely a result of their ignorance of the .NET libraries, obviously.
Removed: Rule 1, Rule 4.
I'm not sure what you call "better", but from experience, unless you know exactly what you are doing (like managing your own thread pool), creating threads manually is often a mistake: * it is not scalable * it is not easily composable (`Task.Join` is complicated to get right) * you end up with more threads than your number of cores, which is can be bad for performance * you have threading issue (starvation, deadlock...) Better use `Task.Run()` and let the scheduler do its job. 95% of the time I will do a better job than you, for the remaining 5%, you can write your own scheduler and/or `SynchronizationContext`.
Indeed, it is true in you intend to use it in a loop, as the examples in the post you linked. In the case I described, the point was just to return early to the caller (since the method is `async void`), so that whatever time to run one iteration of `DoOneStep()`, it doesn't affect the main (UI) thread, assuming `DoOneStep()` use `Task.Run()` internally. I admit that's a lot of assumptions that I did not make clear in my answer. Thanks for pointing that out!
Is this benchmark against the compiled assembly referenced through nuget or has the library source code been compiled into the test project? I think assembly calls would be slower than a self-contained binary.
This is why I always follow Python Rule #2, even when not using Python: "Explicit is better than implicit." I'd rather be needlessly explicit, but be completely unambiguous, than assume something is implicitly understood and be wrong. The former makes my source take up a few extra bytes, the latter can really shaft you once someone else starts taking a look at your code.
Take a look at some of the [best C# tutorials](https://reactdom.com/csharp)
Real VB6. A huge part of our core business logic was acquired from some company back in 1999, in VB6.
I second this recommendation. This course took my understading of [ASP.NET](https://ASP.NET) Core to the appropriate level of making a production ready web application. It's been a great resource.
You can write your own appended that does this, or have it auto send to both locations. Another method is to do this in code, by setting the appender when the application starts up. Full disclosure that i have not set the appenders with out using a config file, but i think you can change it in code.
I considered send to both locations too, but my boss was not happy with that alternative, I'll search about change them in code, with that I can check the connection before and if it's not working, I'll select the another appender. &amp;#x200B; thanks.
"it was vbscript" 
Splunk ??, I've never heard about it, is it an open source tool, or you have to pay for it ? 
Haha Josh! Hope all‚Äôs good buddy üòä 
It's free for 500MB a day of uncompressed logs last I checked. There are a few other limitations for the free version though. We have a licenses for 1GB a day and only pay around $1.5K a year. So it's really cheap. It's much easier to search that a database as it auto indexes any key value pairs which is exactly what your logs should look like. I have all applications send it data via UDP, so it shouldn't slow the applications down. Below is an example appender that I use. I also use a Transaction Id set in the running thread to correlate events. So even if you only have an error, you can then filter on the transaction id to see all the logs that lead up to the error. &lt;appender name="SplunkAppender" type="log4net.Appender.UdpAppender"&gt; &lt;remoteAddress value="ServerNameHere" /&gt; &lt;remotePort value="521" /&gt; &lt;layout type="log4net.Layout.PatternLayout" value="%date%n%message %n Thread=%thread Level=%-5level Class=%logger Application=Example.com Environment=Production TransactionId=%X{TransactionId}" /&gt; &lt;/appender&gt;
I dunno... While I'm not defending WinForms or ASMX specifically, we have over 100,000 companies using our APIs through over 600 different integrations spanning well over a decade. Moving people off of those APIs would take years. Having a thin ASMX layer on top of our libraries doesn't really make it any better or worse than WCF. When it comes to communication ASMX is really forgiving of the requests which helps when the third-party developers hand-roll a crappy SOAP integration. WCF is much more strict and I don't have to go through seven layers of XML configuration hell. WinForms isn't exactly great, but we've used at least a semi-sane MVP pattern to help with testing. Given a fairly large website, the number of changes MVC has been through (both pre and post .NET Core), and the enormous amount of non-UI work (probably less than 10% UI at my company), it has never been a top priority given the cost. Now that ASP.NET Core seems to be fairly stable and a load of UI changes are on the roadmap we'll probably migrate in the next 12-18 months. Don't shit on something just because it's not running the latest and greatest (whatever that is this week). Most things have their use and their place. Except CORBA. Fuck CORBA.
In the click event handler you are creating a new instance of the DataTable, effectively replacing your datasource. Create your DataTable in a separate method, maybe in the Form Load event. Then only add new Rows. Once you get the hang of data binding using DataTables, replace it with a generic collection such as List&lt;T&gt; and use a class with ProductName and Quantity as properties. I'm typing from my phone so a code example will be rubbish, however there are plenty tutorials around.
The current philosophy of building web apps is that your application is a chain of middlewares Request+--&gt;---------------&gt;---------------&gt;---------------&gt;------------+ |Middleware | |Middleware | |Middleware | |Middleware | Response&lt;---------------&lt;---------------&lt;---------------&lt;--------------+ Authentication, logging, files, websockets, and event MVC are just middlewares that you can combine, in a chain any way you want. Any external lib usually is just an additional middleware. 
I can't vouch for it as I never signed up for it, but Udemy has a fairly popular course on learning C# specifically for making games in Unity at https://www.udemy.com/unitycourse. Right now it's $10 but don't let the sale fool you, udemy courses are always on sale. 
Does SourceLink still require .NET Core 2.1 with this update?
Great to this finally getting somewhere!
If you are using git, just pull the branch.
You also can't press F12 to see the definition of the function being called. And that's probably a lot more important than the type being returned.
It should be password locked
What is the difference between "migrated one project fully" and "another to ASP.NET Core on top the Full Framework"? Also you referenced "the latter" twice. Made me doubly confused about what you are talking about. Anyway I get that it wasn't a good experience. What types of issues did you run into? I've been using EFCore and haven't run into any issues, but my use case is obviously not as complicated as yours must be. I'm interested in areas that make EF Core a mistake in your case.
Many of the responses seem to be due to needing to work with "legacy" technologies like COM, WPF, SOAP, GUI libraries, etc. That seems to make sense. Would you use aspnetcore for a totally new project that did not depend on any older technologies (assuming you stuck with a .net framework)? 
the nuget package, htmlagilitypack, will read/write html dom elemets, uses xpath and 'might' help make more direct calls to output your html file rather than doing conversions. you may wind up with more code but less conversions. not really sure if that's the answer because i just started using it but it helps a bunch when doing my junk. &amp;#x200B; hth.
I probably won't explain it well because it's late, but in past .Net web frameworks an incoming request had a lifecycle that consisted of all these different steps, performed by different types, with all sorts of various ways to hook into different steps of the lifecycle. It was very disjointed. When OWIN (prior to ASP.Net Core, but very similar in this regard) was released, it introduced a single (well, not quite, but close enough) function definition that any code processing any part of an incoming request would implement. Here's the MSDN page on it: https://docs.microsoft.com/en-us/aspnet/core/fundamentals/middleware/?view=aspnetcore-2.1 /u/Alikont comment is also accurate.
Fixed my wording, thanks. ASP.NET Core can run on .NET Core or on .NET Framework. Migrating only to ASP.NET Core is a good step towards the full migration and provides some but not all benefits.
&gt; addData Here is a simplied sample using your naming convention (which I would personally not apply since it makes things difficult) private List&lt;Product&gt; Products { get; set; } private void CreateProductList() { Products = new List&lt;Product&gt;(); inventoryList.DataSource = Products; } public class Product { public string Name { get; set; } public decimal Quantity { get; set; } } private void addData_Click(object sender, EventArgs e) { if (string.IsNullOrEmpty(productName.Text) || string.IsNullOrEmpty(productQuantity.Text)) { MessageBox.Show("Product and Quantity required"); return; } var productNameText = productName.Text; var quantity = 0M; decimal.TryParse(productQuantity.Text, out quantity); var product = Products.FirstOrDefault(p =&gt; p.Name.ToLower() == productNameText.ToLower()); if (product == null) { product.Quantity = product.Quantity + quantity; } else { product = new Product { Name = productNameText, Quantity = quantity }; Products.Add(product); } } 
Unity has very good tutorials from beginner to advanced level. There are lots of them. The documentation is good enough to read and tech yourself. YouTube is another excellent way to learn unity3d. I'm wondering why people like you come to ask the same again and again. Are you lazy people? Free resources are great, even sometimes you learn more self teaching than looking for the ultimate course in some platform. I'm not blaming on you, just suggesting lazy way is not appropriate to develop games. Bear in mind Come again to show off your fantastic work when finished the official tutorials
Could you post a more complete code sample. I suspect it's more about how you've defined these variables then the actual 2 method calls you're making.
There is not much point if your executables are netframework. 
Yes he does. 
I've been needing this for so long, my life is finally complete.
hahahha this is amazing and terrible at the same time. Love this bit: &gt;Is a real array. No, this is not an array or a list with a hidden offset, this is using the underlying Array type and casting to the desired type. C# does not support non-zero-index arrays, but the CLI does, and Array.CreateInstance exposes that oversight feature. Therefore, this is a genuine array with non-zero indexing and will act as such (read: a little unpredictable)
Hello Thank you for your help. There is not really much more code. (Posting from mobile so please excuse any mistakes) Namespace windowsformapp Public partial class form1 : form String db_link = file.ReadAllText (@"textfilelocation"); Sqlconnection con = new Sqlconnection (db_link); I, basically, want it to take the connection string from an external txt file. 
I wonder how good it work with `ArraySegment&lt;T&gt;` or the new `Span&lt;T&gt;` type. \^\^
That's mostly because of Visual Basic, where arrays starting at 1 (because Excel rows also start at 1) were (are still?) very common. So they needed to support some offsetting (which is a terrible design decision in my opinion).
Oh that's very interesting. I wondered why it supported it. And yes, it's a horrible idea and please don't use this in a real project! 
&gt; were (are still?) Still. All the collections in the Excel object model are 1-based. Joel Spolsky was the Program Manager who introduced VBA to Excel when he worked at Microsoft, so I've always wondered whether we can blame him for this. ;-)
&gt;I noticed that there are some invalid XML characters in the database (0xB0 after temperatures for example). 0xB0 is '¬∞' in Windows-1252, so I would not be surprised at all to see it come after temperatures. If you think that it is invalid, then I recommend reading Joel Spolsky's primer on Unicode and character sets: https://www.joelonsoftware.com/2003/10/08/the-absolute-minimum-every-software-developer-absolutely-positively-must-know-about-unicode-and-character-sets-no-excuses/
Sorry, I realize that it is annoying to see posts like this from people who have no clue what's going on. I was not trying to take the lazy way, it's just that I have spent 3 months learning C# and I have spent the last 2 trying to apply what I have learned but to no avail. I have looked over the Unity tutorials thoroughly, but none of them seem to help me, the information just doesn't seem to stick. Maybe this just means I'm not cut out for what I'm trying to do, or maybe it just means I need to try a different way of learning. Thanks for your reply, I'll give the Unity tutorials a try again, cheers
Use the original sourcelink package by ctaggart. That one works with full framework too.
No I'm not going to try it. To paraphrase my good old math teachers: "I will let that demonstration as an exercise to the reader".
Yes. The data was stored by a separate application with invalid XML characters. I am trying to extract the XML and convert to HTML files.
I realize that it is a degree symbol, however XslCompiledTransform states that it is an invalid XML character. I am not surprised that it is there since it is a temperature field, I have looked at quite a few places to find lists of invalid xml characters and that character is not on it, nor is it in the range that is invalid so it may be a bug. It looks like I could/should be converting it to &amp;#xb0;.
Not to beat a dead horse, but we also do code reviews on github and use var everywhere. If I can't understand what a line is doing due to the use of var, I'm kicking the code back for not being understandable at first read. This is usually solved by having small, pure functions, making abstractions that make sense and use established design patterns, and having variable names that describe the object accurately. If a type name is the difference between understanding and not, the code needs to change. 
I often have a use for a 2D array that can be indexed for any distance in any direction. But I tend to cheat and just wrap four regular arrays. 
`XmlConvert.IsXmlChar('¬∫')` returns true. `XmlConvert.IsXmlChar((char)0xB0)` returns true. Are you sure that you're using the same encoding to go from bytes to text that was used to go the other way in the first place?
As far as I can tell, you don't. Microsoft gave up on CAS because even they couldn't use it to prevent malicious code from running. Which is a shame, as I had an idea about a game with user-uploaded assemblies. :-(
You can't use the values from other properties or fields when initializing a property or field **inline**. Basically, you can't do this: public class MyClass { public int Seed { get; } = 42; private Random RNG { get; } = new Random(Seed); //this throws the same error because it is using the Seed property to initialize this property public MyClass() { ... } } I suspect that the compiler doesn't allow the above because it does not (cannot?) guarantee that the `Seed` property is initialized before the `RNG` property. Your `filelocation` is another field/property, right? If so, that's why you are getting that error. In order to accomplish what you want, you have to initialize those properties in the constructor. Using my example, this is how you'd do that: public class MyClass { public int Seed { get; } = 42; private Random RNG { get; } public MyClass() { RNG = new Random(Seed); // does not throw error } }
Reading this a little bit more, there are three places where you go back and forth between a sequence of bytes and a sequence of characters: - `new System.IO.StreamReader(blob)` - `Encoding.Default.GetBytes(xmlText)` - `XmlReader.Create(xmlStream)` All three of these need to agree on what encoding is being used, but only in one of them do you actually tell it an encoding. The others do some magic to try to guess the encoding for you, typically falling back to UTF-8. `Encoding.Default` is probably not UTF-8, and so you'll probably get inconsistent results with things outside the ASCII range. I suspect that if you use a consistent encoding in all three of these places, then you'll find that perhaps there aren't actually any "invalid XML characters" after all, and that the "more direct way" was staring you in the face all along.
Google udl file. It's exactly what you want. Sorry about short answer. On phone.
Thanks for your answer but from what i can find is thst udl is not supportrd for sql connection.
You can do user-uploaded source. Compile it yourself but make sure to parse their source before compilation for things you don't want (like file IO).
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/dotnet] [Beginner question Connecting using ADO.net through coding statements or GUI Dialogbox?](https://www.reddit.com/r/dotnet/comments/9az919/beginner_question_connecting_using_adonet_through/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I can vouch for Udemy. They are very good at teaching and responding to questions/criticism. They even update old videos if they find that there is a better way to do things. It should be noted that they teach Unity and game design in their Unity course, not programming (except for the basics). If you are looking to improve your coding skills, go elsewhere.
IIRC is was about being compatible with other spreadsheet software. There was/is some weird stuff with dates too. https://www.joelonsoftware.com/2006/06/16/my-first-billg-review/ 
How is this any different in using a symbols server? (VSTS for .Net Standard projects for example)
Have you thought about using XDocument and a stream? A nicer modern (as far as XML being modern anyway...) API.
From my understanding, this can be used by anyone not having the resources to create a symbol server. You just ship it with your package.
CAS [is not fully deprecated, only CAS Policy](https://blogs.msdn.microsoft.com/shawnfa/2010/02/24/is-cas-dead-in-net-4/) I haven't done any AppDomain / CAS stuff in at least 5 years, and I do remember it being fairly painful to get right, but once you've got your sandbox with the right permissions and figure out how to make calls into and out of the other AppDomain, it works pretty well from what I remember. 
ok, I see, so the code also has to be publicly accessible probably.
Have you contacted the provider of the service?
Even if you scanned it, you can use reflection to create an instance of an object and then invoke it.
I‚Äôd guess you don‚Äôt always need the users company details when loading a user? Also if you start hanging other relationships off the company then loading it with the user can have performance implications like lazy loading. Look into futuring queries if you don‚Äôt want to select the user and company separately. 
You are goddamn right!
Roslyn doesn't support AppDomain but can't you run the resulting binary within an AppDomain?
Sure, you can use Roslyn to parse the source into a syntax tree that you can inspect. Roslyn also supports analyzers that run during compilation. However, detecting specific method like `File.Delete` is a futile undertaking. The number of potentially abusable types and methods in the framework is nearly endless. You would have to use a whitelist approach. [Space Engineers](https://github.com/KeenSoftwareHouse/SpaceEngineers/blob/a109106fc0ded66bdd5da70e099646203c56550f/Sources/VRage.Scripting/MyScriptCompiler.cs) does this. From what I've heard it's been a nerverending pain the ass for the devs, though.
Is using app.config a viable option for you? Basically it is a configuration file for an application (we.bconfig is similar, but for a web application). There are sections to put general settings and even a specialized section to put connection strings. System.Configuration.ConfigurationManager is a static class that can get you setting values out of application's associated config file (example **ConfigurationManager.ConnectionString["name-of-connection-string-in-config"].ConnectionString** can get you a named connection out of that config file and get the actual connection string that you can use to open a connection with) See MS's example about connection strings in configuration files: https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/connection-strings-and-configuration-files (note, there is nothing stopping you from putting a connection string in a generic application setting, that works too)
Is the field static? If so assign it in a static constructor in the class. Not static? Put the initialization in a regular constructor.
Hmm, what do you mean by "resulting binary"? I'm not generating a DLL from my script code or anything like that....
What are you converting the C# code to then? Are you just interpreting the AST that Roslyn produces?
I'm working on a project that relies heavily on sandboxing of user code. I started the same path as you, using AppDomains with limited privileges, but as other have pointed out it's very cumbersome to work with. Also, as I understood it, there's no corresponding feature in CoreCLR, which I want to target eventually. And lastly, it seems to me that Microsoft has given up on CAS - quote from [here](https://docs.microsoft.com/en-us/dotnet/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox): "Code Access Security in .NET Framework should not be used as a mechanism for enforcing security boundaries based on code origination or other identity aspects.". My new implementation is more or less the same sandboxing Google uses for Chrome, i.e. run the untrusted code in a separate process that has basically no access to the system. It communicates to the main process via a pipe, which in turn runs the operations that it deems safe (e.g. loading/saving things to disk, etc). I'm actually running Chrome's proof-of-concept sandbox (well technically, *Chromium*'s sandbox, which is the open source twin of Chrome) and just booting up a process running a stripped version of CoreCLR. I'm still a bit worried that there are open handles and resources that the sandboxed process has access to, so I've not included the dll's that contain System.File, PInvoke stuff, etc, and blacklisted a few namespaces where I can't strip out the dlls. This all serves to reduce the attack surface, and gives a few more "layers of defense". I'm not sure if I can recommend this approach to anyone, since it was a lot of work, and I haven't really tested it in practice yet. You might be better off using Lua or some other script language that is easier to sandbox than C#.
Maybe you can use reflection and sift through the methods? 
We need to do another release above v1.5.2 as one of my colleague told me directly that I need to fix the referencing issue of the latest release. It tries to create bunch of unused reference from (.NetStandard &gt;= 1.6.1) library.
There is just no way you can do what you're proposing reliably if an attacker is determined to circumvent your scanning process.
We will never post performance benchmark again as we have posted the EntityBased and RawSql statement benchmarks already. Will soon to update with cool features!
I forget exactly why this is, but if i remember correctly it's due to the class being inherited. I ran into this once and decided that i only needed one implementation of the one type and wacked the other. Most likely you can remove "[System.Xml.Serialization.XmlElementAttribute("IncludeCombination", typeof(BusinessSystemIdentityInfoSynchronizationCriterionTypeIncludeCombination))]". But it will come back if it gets regenerated and like I said, if you are using Include Combination, this will not work.
Relevant - from ProgrammerTIL: [[C#] TIL Arrays in C# aren't necessarily 0-indexed, and may start at any integer.](https://www.reddit.com/r/ProgrammerTIL/comments/4xqewv/c_til_arrays_in_c_arent_necessarily_0indexed_and/)
&gt; In the second case I do two roundtrips to the database, but I keep a more strict "single responsibility" concept for each service. Don't let platitudes like "single responsibility" get in the way of good engineering. You aren't creating a generic library, you are building a service layer for a specific purpose. So that method should return everything that is needed and nothing more. * Everything that's needed means don't make multiple round-trips to the database (unless it happens that's more efficient) * Nothing more means don't blindly return every field. Only return what the caller actually needs so you reduce network traffic and can more efficiently use covering indexes. 
I don't know how it works internally; I'm just calling functions like `CSharpScript.EvaluateAsync`.
Hmmm, cool thanks :) While I have you; what is a startup project, and how would I make sure one is bold?
but i don't wanna to use IE in my app to show the html page to the user üò¢
FooService manages the business logic, so he knows things like for example if the user's subscription is active or expired, knows how to validate inputs, etc.. FooRepository knows how to access the data layer and offers an abstraction over a generic orm. FooEfContext is there just to show where I plug my system to entity framework. So basically I have 2 layers, one for business and the other for data access. Do you think would be better to compress them into a single one?
A *bit* rubbish, sure, most applications that have to manage complex things such as threads and memory, all while themselves trying to maintain a solid running environment, are weird and frustrating at times. Worse than other development tools? Honestly I don't believe so. I've been developing for more years than I care to think about, in all sorts of languages and environments, but it sort of goes with the territory sadly. From what you've described and what Sasken mentioned, sounds like you have the wrong project(s) in your solution configured for startup. If that's not it, then the old support stand-by of "reboot your system" tends to work wonders. If that doesn't help, there are a number of VS reset tricks that you can, effectively, blow away temp garbage from your environment which helps with more stable behavior.
&gt; FooRepository knows how to access the data layer and offers an abstraction over a generic orm. That doesn't sound very compelling to me. Every layer knows how to access the next lower layer, so that's not really a justification for its existence. Abstracting over your ORM is usually a bad idea. You are basically throwing away all of the differential advantages of choosing a particular ORM. And in the unlikely event that you do change to a different ORM, you are still limited to only the features shared by both. *** But then again, EF is crap. So having a layer to add all of the stuff that EF fails to do correctly does make sense. 
Sounds like you have no clue what you are doing.
I see your logic, but when I think that way I can't avoid to ask me if then I still need the other services. For example, imagine I have the employee class that as details has: company, team, holidays, etc. Then I create a service for the employee class with methods like: - getEmployeeSummary - getEmployeeCompanyDetails - getEmployeeTeamDetails - getEmployeeHolidaysDetails At this point I wouldn't need a CompanyService, a TeamService or a HolydaysService since I will access everything from the employee service. I've never develop a system with microservices, but in this project I'm trying to prepare things to be ready to go that way. Wouldn't this coupling make things difficult when/if we we'll want to divide each service into separate instances or am I misunderstanding something?
I'm an avid Linux user...Not a great fan of Microsoft to be fair...but, Visual Studio, whilst it has some minor bugs, is a pleasure to use when compared with things like Eclipse, NetBeans etc... It's hugely complex (largely regarded as one of the most sophisticated programs ever written), and will have bugs (it's estimated to have 600 million lines of code!), but it's streets ahead of anything else imho.
 Validations are called by the services, but the service doesn't know it's implementation. We are putting our validator classes (each for each specific model) in our business layer but they don't really need to be there. They could sit in the same project as the models'classes so we could separate it further from the business layer. I'd just avoid to have a "validate" method in the models' classes. Automapper and EF don't like that.
That is, indeed the case. What's your point?
Solved! Thanks for helping :)
The wording in your post makes it seem like you are facing a bug in Visual Studio but clearly that is not the case. 
I mean, if you know what you're doing I'm sure that's abundantly clear. But as you so deftly deduced, the guy asking basic questions doesn't know all about the program..
Loved the second definition! And it is something I suspected since beginning. I'm far from implementing something of that sort, but I'll definitely keep the definition 2 in my mind to avoid falling in that error. It was very clear. Thank you :) 
&gt; &gt; &gt; I'd just avoid to have a "validate" method in the models' classes. Automapper and EF don't like that. I would caution against needlessly increasing your file count. Something people often don't understand is that having too many files involved in any particular operation can make that operation much harder to understand. Ideally I have just a Controller, a Service, a Model, and a [Table, View or Stored Proc] involved in a typical web request. You're adding a Validator, a Repository, and an EF Context. Probably a View-Model as well since you mentioned automapper. This is part of the reason why I really don't like EF. Your view-model and validator exist as separate classes only to make EF happy. Other ORMs wouldn't put those requirements on you. But I'm not here to say "throw away EF", I'm here to help you use it successfully. So yes, in this context the separate validators make sense.
We have the same kind of subdivision, but on more project. But anyway I'd say I can easily divide the application in the same 3 blocks as you do. I like the idea to group all that is independent in one project and reinforces what you suggested before to couple validations with the data layer.
&gt;if you own up your ignorance "Am I going crazy or..." "That (me sounding like I don't know what I'm doing) is indeed the case." "While I have you; what is a startup project, and how would I make sure one is bold?" My title "literally" ends in a question mark, which you omitted because it disproves your claim. A question mark denotes an inquiry, instead of a statement of fact. As I said, starting arguments where there don't need to be any.
Thank you very much for your advices, I'll really take them into consideration.. you've given me much to think about 
Yes! Thank you! I knew it was wrong. I can't trust the exam then. I'm worried about taking more practice tests for fear of being fed inaccuracies. But I've also looked up online that reading the text book isn't enough to take pass the actual mta exam. Not sure where to go from here.
You're welcome.
The startup project is the one that is run when you press the "run" button. You can right click the project's name and press "set as startup project" to make it the one to be run. You can also run other projects with right click on project name --&gt; "run project" (not exactly sure about the wording, but essentially the menu option says this). You seem to be a beginner, look up .NET/C# project structure (solutions, projects, namespaces, etc).
Awesome, will do! TYVM :)
Assuming you're running in .NET Framework on Windows, you could (1) use Roslyn as a compiler only (no REPL/eval) and generate an assembly module and (2) use AppDomains to load said assemblies and (3) figure out your remoting/interop story between the two. With that said, a better approach (but also much more complicated) would be to orchestrate your own processes/containers with appropriate ACLs and similarly figure out your remoting/interop story.
&gt; I saw a few of those bugs over on coreclr and wondered what he was doing to make them. Likewise!! Fuzzlyn is such a simple-idea (but not a simple implementation) and the project is really well done, it was great to delve into 'how it works' a bit more!
Dude, you should definitely create an external [domain-specific language](https://martinfowler.com/books/dsl.html) for this. 
I'm slowly learning F#, it's a nice language. &amp;#x200B; And I'd love ranges like that in C#, although there are other things I'd like more. It's worth nothing that while ranges are a lot more flexible than my horrible array, they still do not support values less than zero: &gt; System.Index will throw if constructed with a negative value. &amp;#x200B;
I don't know if a desktop app is 'quicker' to build and deploy. A web app would do the same hosted on one of the customer's machines and would need to be deployed and configured once. Even for 5 users I would go for a web app. 
Just keep it simple. 
This might not help much but I think this is a promising method to enable untrusted script execution in your programs: https://github.com/RyanLamansky/dotnet-webassembly The idea would be that you can define your entry point like: public abstract class Script { public abstract int Run(int value); } and then can run stuff like: using (var stream = new MemoryStream(wasmbytes)) { var compiled = Compile.FromBinary&lt;Script&gt;(stream)(); var result = compiled.Exports.Run(0); } In theory this would give you a complete sandbox to run scripts written in any language that can produce WASM binaries. You could leverage this in combination with Roslyn apis to build a compiler for C# that outputs WASM binaries that can be loaded in to this. Or you could use the one mono already has https://www.mono-project.com/news/2018/01/16/mono-static-webassembly-compilation/ Marshaling strings is going to be fun though no matter what way you do it. Alternatively you could in theory run the WASM binary of mono and load a .net environment up inside just like Blazor does. 
There are about a million things that could affect what we recommend, but for the sake of learning some useful tech that you'll utilize in the future, I'd go with: - .NET Core MVC/API (probably a mix of both) for the presentation layer (keep it cross-platform by going web-based rather than a desktop app) - Whatever JS framework you're comfortable with for two-way binding and such on the front end - Entity Framework Core pointing at a SQL database for the data layer
&gt; /uj its ok boy, you're on /r/csharp, not /r/pcj
maybe an mvc app or a razor pages app and host it via Azure for maximum laziness. https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-2.1&amp;tabs=visual-studio
WebApi is a part of MVC in ASP.NET Core.
If only 1 person is going to use it, I'd use Xamarin.Mac with [OpenXML SDK](https://github.com/OfficeDev/Open-XML-SDK) and [Microcharts](https://github.com/aloisdeniel/Microcharts) or any data visualization lib compatible with Xamarin.Mac. Xamarin has a lot of free and paid 
Yeah, just attach an onchanged event or something like it to your text box and in that event, send the value of the box to a service that submits the value to your db.
You can look on [Github](https://help.github.com/articles/finding-open-source-projects-on-github/) for Project you are interested in and which have the Label help wanted.
You can create a Interface and implement this interface as a start function for the sorting. Interface: public interface ISorting { void StartSort(var color, ref var i); EventHandler ReportProgress(EventArgs args); } Sort Class: public class GnomeSort : ISorting { void StartSort(var color, ref var i) { // start sorting logic } } With this structur you can easy implement new sorting algorithm and watch their progress with the Event.
But sorting algorithms often have many nested for loops, how can I update the form with the current array if I'm inside of 2 nested for loops? I want to visualize the sorting algorithm, not just go from unsorted to sorted in one frame
In the ViewModel namespace, it declares the MenuViewModel class, which implements the INotifyPropertyChanged interface. MenuViewModel has a mutable, public field of type DbManager, named DbManager. MenuViewModel also has a public event named PropertyChanged that meets the signature of PropertyChangedEventHandler. MenuViewModel's default constructor (constructor with no arguments) initializes DbManager to a new DbManager object, and initializes the MainLegalAreas property to the results of DbManager's GetMainLegalAreas method. The private field _subLegalAreas is initialized to an empty list of SubLegalArea objects. The provide field _paragraphs is initialized to an empty list of Paragraph objects. MainLegalAreas is declared as an auto-implemented property without a setter. It holds a reference to a List of MainLegalArea objects. Because it has no setter, it cannot be changed after the constructor has finished running. (Elements can added or removed from the list itself, but the property cannot be set to a different list.) The private field _subLegalAreas is declared as a reference to a List of SubLegalArea objects. The public field SubLegalAreas is declared as a reference to a List of SubLegalArea objects. It's *not* an auto-implemented property, so the contents of its getter and setter have to be spelled out in some detail. The getter returns the value of _subLegalAreas (this is an expression-bodied accessor). The setter set _subLegalAreas to the value assigned to the property, then calls OnPropertyChanged with the name of the property. OnPropertyChanged probably raises the PropertyChanged event, which notifies any other classes that subscribed to it.
Thank you so much sir, that was so helpful!
It really does look good and love some of the features, like caching and the speed. Would love to use this but there is no way I could ever get away recommending an open source project with no automated testing. Keep up the good work and hopefully will see more of this in the future.
Removed: Rule 4. If possible, please provide a [Minimal, Complete, and Verifiable example](https://stackoverflow.com/help/mcve) with which we can copy/paste and reproduce the issue you're having.
Okay I did some reading on delegates, events, etc., and I implemented a solution based on your pseudo code. I had to add threading, but it seems to be working now. Thanks a lot!
What result do you need from calling it via http versus calling in directly? If there is some logic you need from the first call, put that logic in a separate class, that way both web methods can make use of it.
&gt;That's mostly because of Visual Basic, where arrays starting at 1 (because Excel rows also start at 1) were (are still?) very common. So they needed to support some offsetting (which is a terrible design decision in my opinion). Not Quite. Visual Basic .NET had it for compatibility with "Classic" Visual Basic (VB1-6), which had it for compatibility with QuickBASIC, which had it to be compatibile with MSBASIC/GWBASIC. I'm not sure about before that. I think it may have come about because different BASIC implementations used different array bases, and having a way to set the array base could make it easier to bring over that sort of BASIC listing.
I agree with everything up to JS and two way binding. If you want to stay current and learn more about Microsoft's stack, I suggest learning how webpack and Babel work (you'd need this for es6 anyways) and go with TypeScript instead. It'll introduce type safety at transpile time, be more familiar with C# code, and give you experience in JS as TS is a superset of JS. Another good option is to just use Razor Pages from ASP.NET core. As for the two way binding point, don't think that two way binding is a requirement. React with Redux and Vue with Vuex utilize a one way binding, event based system that cuts down on mutation and has a single source of truth which can be super valuable. There's advantages and disadvantages to both so do your research and see what works for your project.
There may be no TDD, but we can always fall back on CDD (crash-driven development). üòãü§ì
Why the heck would you pay UNNECESSARY overhead in calling another method in the SAME class? By calling the other method as a HTTP request, you pay the price of ‚Äî * creating a network request &amp; serializing request payload to either JSON or URL encoded format. * network DNS resolution * waiting for HTTP response * parsing the response HTTP, and while your own code goes through the entire ASP.NET WebAPI HTTP processing middleware pipeline including decryption of your authentication cookie. * goes through your Dependency Injection for constructing dependencies in your WebAPI controller. * retrieve records from database to return as output from your Action method. * Serializing it to JSON, and write out to network socket by going back out of the middleware pipeline. Instead of having to go through all of that for no reason, why can‚Äôt you just simply call the other method from your own class in one go? You already have all the associated important CONTEXTUAL objects like currently logged-in User and parameters from the HTTP request. 
Thank you for your comments on here. The XML should be all in UTF-8 as stated in the first line of the xml file from the db. The Blog entry was a good read and it gave me a direction to look into. It seems that my XmlReader was switching my encoding to Latin1 when I went directly from the MemoryStream to the reader but not when I converted it from a stream to a string and back to a stream. In reality my function to clean up the XML was not doing anything, it was the conversion process that fixed the exception. I was able to force the character set every step of the way with the below code. The second to the last line where I added a streamreader is what fixed the initial bug I had by forcing the XmlReader to UTF-8. OracleBlob blob = oraReader.GetOracleBlob(0); MemoryStream xmlStream = new MemoryStream(blob.Value); XslCompiledTransform xslCompiledTransform = new XslCompiledTransform(); xslCompiledTransform.Load("test.xsl"); XmlWriterSettings xmlWriterSettings = new XmlWriterSettings(); xmlWriterSettings.Encoding = new UTF8Encoding(false); XmlWriter xmlWriter = XmlWriter.Create(fileFullPath, xmlWriterSettings); XmlReader xmlReader = XmlReader.Create(new StreamReader(xmlStream,Encoding.UTF8)); xslCompiledTransform.Transform(xmlReader, xmlWriter); This code is working without error with the exception that the x0b characters still do not show up properly, they now show up as a question mark inside of a black diamond. In my initial code the just showed up as a question mark. I believe that I have verified everything that could have an explicit encoding has one now so I am not sure why it is not displaying correctly.
Unit Tests and Integration Tests are present. It was written already by us and some of the architects in our company. Below are the links to test projects. RepoDb: [https://github.com/RepoDb/RepoDb/tree/master/RepoDb/RepoDb.Tests](https://github.com/RepoDb/RepoDb/tree/master/RepoDb/RepoDb.Tests) RepoDb.Core: [https://github.com/RepoDb/RepoDb/tree/master/RepoDb.Core/RepoDb.Tests](https://github.com/RepoDb/RepoDb/tree/master/RepoDb.Core/RepoDb.Tests) &amp;#x200B;
I always liked this one. I didn't invent it, but can't remember where I saw it first. public static IEnumerable&lt;T&gt; OrEmptyIfNull&lt;T&gt;(this IEnumerable&lt;T&gt; source) =&gt; source ?? Enumerable.Empty&lt;T&gt;(); Then you could do foreach(var item in items.OrEmptyIfNull()) or var prop1s = items.OrEmptyIfNull().Select(x =&gt; x.prop1); this way you don't have to do a null check on items.
I know, I found it yesterday - really cool stuff! I had been using repl.it but it is nowhere as useful for .net specific code 
And Xamarin Studio is just a rebranded MonoDevelop.
There is also https://dotnetfiddle.net/
We sometimes can't accept that new things are improving. Thanks for this as this will always make our library work smart in the future. Cheers and enjoy writing SQL in your C# client. :)
&gt; Having to design unit tests as part of my assignment for uni, not actually code &amp; implement, just a very basic design of unit test, filling out this [table](https://imgur.com/a/9DGi6jC). Thats retarded. That is not how unit testing should be done. And gives the student wrong idea.
https://dotnetfiddle.net/ too
Without seeing any code or context it's difficult, but it sounds to me like something is wrong with your architecture, and you need to look at abstracting some code that currently sits inside controller method 'A' into a common function or class (a business layer, if you like) that any controller methods that need that result can call into. It makes zero sense for a method within a controller to have to do a "round trip" back out and in via http in order to get some result from a method that is in the same controller. 
I never heard about such free services before. I think the only chance you have to make it as cheap as possible is to host it on your own hardware, on your own connection, (which again is not free, and highly unstable). I suggest that you look at azure or aws and look for the cheapest options in there. That said, nothing in this would is for free...
You should treat the method you're testing as a black box. You don't know that there's a variable called 'duplicates', so remove it from the parameters. You should list the sequence(s) used instead. I'd remove the True / False in 'expected data' because your method returns void. It should list the 'side effects' of your method instead. That means the count of ErrorMessages should be increased by whatever amount you expect and it should contain the expected ErrorMessages. If you want to be 100% precise, you should check if the ErrorMessages before the method call remained the same. Something I'd do though is change the method to accept a List (or IEnumerable) of Sequence (WordData) instead and return a list of ErrorMessage. That way your method doesn't have 'side effects' and makes testing easier.
With picking up MVVM right from the start of your programmer career you are in a great state and will save yourself a lot of pain later on. Go with WPF(Windows Presentation Foundation) as it‚Äôs just made for MVVM and gives you great control over everything with the xaml part. 
Now he knows why unit tests come in handy though!
Yeah, I did a research and WinForms is too obsolete, I don't need anything cross-platform so promising but not production ready Avalonia and Uno are not the best pick too. I am wondering more about part with .dbf and .accdb compatibility and using ORM as manipulating directly with SQL commands is not recommended approach. I tried to make EF6 Jet provider work, but I failed.
I've been playing around with this site for a little while. The thing I like the most is it will actually generate the Roslyn structure for you as well, which is pretty cool.
**Monetization SDK for UWP apps** Hey Guys, I'd like to introduce IP Ninja monetization SDK: In short, what we monetize is users' routing resources ‚Äì their IPs, and nothing more than that. Thus, our SDK allows you to make a lot of money of your software and yet it does not harm user experience at all (unlike serving ads). We pay 3 cent\\month per each user, that's mean **$3,000 USD \\ month** if you have 100k users (it's double than what we pay for Android users). For more details feel free to contact me: [idan@ipninja.io](mailto:idan@ipninja.io) Skype: idan\_281 Tel: +9720733850835 &amp;#x200B;
&gt;This code is working without error with the exception that the x0b characters still do not show up properly, they now show up as a question mark inside of a black diamond. In my initial code the just showed up as a question mark. I believe that I have verified everything that could have an explicit encoding has one now so I am not sure why it is not displaying correctly. My guess is that the source is actually not UTF-8 after all, despite the first line claiming otherwise (check the code that's producing it to see if it made a similar error). One property of UTF-8 is that any time you see a byte with the high bit set to 1, then one or more of its neighboring bytes must also have its high bit set to 1 (either the one directly before it or the one directly after it). So if you have something like `&lt;Temp Value='12¬∞'&gt;`, then you can quickly rule out UTF-8... well, as your original post alluded to, we've kinda already done so, since you saw 0xB0 that I'm guessing was not preceded by 0xC2. Short version, try consistently using `Encoding.Default` instead of UTF-8 and seeing if that makes everything look OK. If it does, then you might want to see if you can fix the producer so that it stops lying (preferably by [having it produce UTF-8](http://utf8everywhere.org) instead of having it update its XML processing instruction to indicate the correct encoding of the contents). Also, I can't help but mention that this trouble is the **exact** reason why people would tell you that it should be a CLOB. The primary difference between CLOB and BLOB is that you don't even have to think about encodings since the platform APIs will just use whatever the platform's native representation of "Unicode text" is (so it would be populated as a `string` and you'd consume it as a `string`).
Better yet, inject it.
Docker on Heroku
What‚Äôs wrong with Json.net? [Query JSON with dynamic](https://www.newtonsoft.com/json/help/html/QueryJsonDynamic.htm) 
The JSON I have, it has multiple properties I wanted to work with and I don't want to include another Nuget in my project. Xamarin Apps are already big.
I thought Xam apps already had it by default
I disagree in part because that guidance was deprecated in practice years ago. type safety is not the problem here. var still gives type safety. Do you think TypeScript is not strongly typed because it uses var? 
This is a really bad practice, but you only have to instance the controller class and call the action method
Set up an old laptop at home as your server, that's what I've done in the past
You're out of luck then, Newtonsoft.Json is the de facto standard for JSON manipulation in .net and there is no other decent way. Unless you want to delve into .NET DLR and Expression trees to parse and generate that JSON on your own.
yeah i think you should look for some solutions to do manual parsing if you don't want anymore dependencies.
To me, it looks like a dictionary or dictionaries var d = Newtonsoft.Json.JsonConvert.DeserializeObject&lt;Dictionary&lt;String, Dictionary&lt;string, string&gt;&gt;&gt;(json); or var serializer = new DataContractJsonSerializer(typeof(Dictionary&lt;String, Dictionary&lt;string, string&gt;&gt;), new DataContractJsonSerializerSettings() { UseSimpleDictionaryFormat = true }); var ms = new MemoryStream(Encoding.UTF8.GetBytes(json)); var d2 = serializer.ReadObject(ms);
the newtonsoft json dll is 649kb, and it's pretty much the standard so it's not a crazy package to include.
Based on the [official documentation](https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/stand-alone-json-serialization#collections-dictionaries-and-arrays), there doesn't seem to be a good way to do that. I mean, the first suggestion even states that it shouldn't be used in a production environment.
I'm very certain that I would know what this means if I knew what it meant. lol. Would you be able (or willing) to provide some kind of example? I haven't found any very clear information about OnChanged Events
Sounds like me 7 years ago. I had problems with it too, although I was using CRM 2011. The C# code was all plugins that were installed on the server with the help of some desktop GUI tool that MS provided. The JavaScript was added through the admin section and it was mainly for UI updates, although you could still use it for some CRUD operations together with the CRM web services they provided. I'm being kinda vague since I haven't touched it in 4 years, but I understand your situation and hopefully it might be a bit helpful to you. 
There's nothing particularly helpful in this thread, so let me take a shot. &amp;#x200B; The basic structure of a unit test should work like this: &lt;Some function&gt; with &lt;some parameters&gt; produces &lt;some result&gt;. We can work through a function we've written to figure out a known expected result so that when we make changes to it in the future, we can be confident it's working as it's supposed to. So for a very simple example, let's say we've coded the following function: &amp;#x200B; int AddTwoNumbers(int a, int b) { return a + b; } &amp;#x200B; And now we want to write a unit test to make sure this function is working as we expect. So back to our unit test formula, what we're saying here is AddTwoNumbers with the inputs a = 1, &amp; b = 2 should produce the result 3 - this is our known result. We could also write unit tests to check other use possible use cases like 1 &amp; -3 etc. Anywho, let's say we want to make a change to this function and it becomes this: &amp;#x200B; int AddTwoNumbers(int a, int b) { return b + a; } &amp;#x200B; Once we complete this change to the function, we rerun our unit tests and see that they still work without having to redo QA against our original test scenario. That's where the value of unit tests come in and why it's important for a professional programmer to understand this stuff. As for your specific example, you're including results in your parameters, so get rid of those. Aside from that it looks like you're pretty close. 
Why won't you pay after a year?
If you're ready to step up (and want a desktop app) check out [LINQPad](https://www.linqpad.net/)
I recommend doing the certificates. There are many crm admin related things that you will need to know even before developing such as how customizations work and permissions. 
First I am surprised a company would allow an intern muddle about in their CRM. Second make sure you are provided with the tools to work with crm. - You will need Visual Studio - you shoudl grab the crm developers toolkit Third you should follow the fleet management system Tutorial in the Microsoft docs. Unfortunately, dynamics is a pretty narrow field and not a lot of video tutorials exist. Fourth you should ask your company to provide you with training. Microsoft provides training and certifications for dynamics developers and if they really want you to be working on this stuff they should be willing to pay for it.
I'm trying, but I get the sense that they don't have a lot of customers that are using .NET so their support on stuff like this is usually pretty awful.
LINQPad is the penthouse suite a the top of those 'steps'. What an awesome tool.
Yea I swear by this tool now, and I've slowly gotten my whole team hooked on it. Love that you can even query dbs from it.
Use json.net , it is the standard today. any excuse not to will bit you in the ass or make you look like a pleb.
Generally you want to use custom workflow activities if you have to write code. Generally though writing code is the wrong answer to the problem with dynamics CRM. In a well structured project most of the code will be integration with webservices or small JavaScript customisations. It's very easy to to abuse CRM and do all sorts of things to make horrible and hard to maintain systems. Thankfully dynamics 365 removes a lot of that, however there are companies out there that still try to use for things it's not really designed for. 
The big thing you'll need right off the bat is [Visual Studio 2017](https://visualstudio.microsoft.com/downloads/). You can probably get away with using Community Edition but I don't recommend it since this is obviously a business case. [SSMS is a standalone application now](https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-2017). Easy to acquire. The latest Dynamics CRM SDK is no longer a "simple" stand-alone download. You'll need to setup your solution/project and [add the CRM SDK using NuGet](https://www.nuget.org/profiles/crmsdk). I heavily, *heavily*, recommend that you request something like a PluralSight license so you can work through some of the courses/tutorials on this subject. Dynamics CRM is hideously complex and you're not going to just be able to muddle through this.
Excuse the ignorance, may I ask what's the difference between a WPF app and a windows app? 
Take away the fact i'm an hour out of surgery (shoulder),you sait it perfectly. sounds daft, but you nailed it ;;;;;] more when less drugged :)
WPF is a UI framework for making desktop apps. Since you mentioned Forms, you're probably thinking of Windows Forms instead, which is a much older framework. They work very differently. WinForms is arguably a little easier to start with, whereas WPF offers more flexibility.
Thank you very much for the explanation, so basically WPF is a winform framework build from scratch and it's the most recent one, and Blend uses WPF in order to create desktop apps not Winform. Did I got the idea? 
This is so cool. I have learned a lot from this tool, specially when I am learning the IL. Our ORM library was built with the help of this cool tool. I vowed to Andrew!!!
WinForms/Windows Forms is an old UI framework. WPF is a newer UI framework. Blend is a tool for UI designers to build the non-code portions of a WPF-based UI.
I've been coding for &gt; 10 years and my Mother was a programmer. Here is how things have gone in my career alone: Design Patterns: Then: Reuse of code should be our number 1 concern. Now: Domain Driven Design and Microservices are the way to go. &amp;#x200B; Then: Use N-Tier to separate the DAL and BLL. Now: CQRS design is best in many situations for bottlenecks related to other designs. &amp;#x200B; Beginning: keep your resource usage to a minimum. A bit later: Don't spend time bothering with optimizations. Moore's Law will take care of it. Now: Here's 100 tools to optimize your application. &amp;#x200B; Then: Do everything on the server. Javascript can be turned off. Now: Do everything on the client. &amp;#x200B; Then: Don't spend time optimizing code. Moore's Law will take care of it. Microsoft: Then: 'Open source causes security issues'. Now: We want to be open source, &amp;#x200B; Then: We create the standards. Now: We will abide by the standards. &amp;#x200B; Then: Frameworks are too resource intensive. A bit later: dotnet framework is available. Now: Use Core because Frameworks are too heavy and ..., and.... &amp;#x200B; Then: Explicit variable declaration is the best way for readability in c#. A bit later: Introducing var for redundancy. Now: Don't use var all the time. &amp;#x200B; Then: Visual Basic is our flagship language for development. Now: We no longer will support [VB.net](https://VB.net). Then: We will release a new Windows version every 2 years to take advantage of hardware advances. Now: Windows 10 is the last edition. &amp;#x200B; Then: Relational databases are the only way to go to keep size down and performance up. Now: NoSQL is very useful in for those overworked databases. &amp;#x200B; Then: In-line SQL is terrible, hard to read and slow. Now: ORMs are too heavy in high usage environments. Use in-line SQL. &amp;#x200B; The point is, I was using many of these design patterns before they had a name. After someone gave them a name, then they tried to tell me how to use the pattern I came up with with rules and protocols that add little value. &amp;#x200B; If you're in this field long enough, everything you thought you knew will be overturned and quite possibly be reinvented with a cooler name. &amp;#x200B; We are artists and no matter how much they try to put you in the box, always remember there is no box. 
The URL for the arm binary is a little out of date (2.1 vs 2.0), make sure to check the [daily builds link](https://github.com/dotnet/core-setup#daily-builds).
updated
The licensed version is absolutely worth it for the additional convenience. I use it every day 
As do I. I hesitated for some time on purchasing it. Once I did and have been using it for over 2 years now, I look forward to being able to support the developer in buying the newest version (6 when it releases).
&gt;The big thing you'll need right off the bat is Visual Studio 2017. You can probably get away with using Community Edition but I don't recommend it since this is obviously a business case. To elaborate, Community is fair game for commercial use only if one or more of the following conditions is met: 1. Development is restricted to open-source projects released under OSI-approved open-source licenses. 1. VS is used for education in a formal online or classroom setting. 1. VS is used for developing VS plugins. 1. VS is used in academic research 1. The org isn't an Enterprise (250 PCs, or 250 employees, or $1M in annual revenue) If 1-4 aren't met but the org isn't an Enterprise then OP's org can have 5 concurrent users of Visual Studio Community inside their org. If OP's organization is an Enterprise then the org needs to buy a copy of VS. 
I don't think dotnet run will run a published site, its only supposed to work on source code. &amp;#x200B; I think you need to run the dotnet command with your applications dll as the argument. 
The controller is just an entry point into your application from the outside. If you're already inside the application, there's no need to make an HTTP Request because you're already inside the application. Generally, if there is logic that multiple things are dependent on you should have a separate method that can be used by both places. That can either live within the same class as a private method, or be an entirely separate class depending on what it is.
Everything this guy said is legit ^ Thanks for elaborating on that for OP. I didn't feel like dumping all the info into the thread about this but, you're totally right.
Haha, I'd just looked it up earlier today to prove the point that yes, we do indeed need to purchase a license for our new dev. No he can't use Community. Yes it's free but we don't comply with the license and it breaks our EA with Microsoft...
I feel your pain, brother.
Run away. You've been given a power drill and turned loose in a nuclear reactor. I spent about a decade in Dynamics and still made a complete backout and recovery plan for every single change. You can easily destroy things or even worse, change data that nobody notices.
You using jQuery or pure Javascript?
C# and MSSQL
I'll have to test. That section is a direct copy of the official doc and it may have worked way back when it was written.
We put together a list of .NET/C# algo trading services and data libraries, as well as a sample code snippet of how easily you can place a buy order of a share of Apple!
Right. I forgot! You have a form (a UI) where your text box is, right? If you want to save the data in that box you have a few choices. Let's say that you add a save button that, when clicked, grabs the data from that box and shoves it into your database. Drop your button on the form. Style it like you like. Then double click on the button. This will do two things: 1. A method will be generated in the class file of the form, something like `private void button_clicked(object sender, Eventargs e) {}`. 2. The above method is bound to the event handler on the button in your Form.form.cs like this `this.myButton.Click += EventHandler(this.button_clicked);` With these two pieces you can then get the data from your textbox. ``` private void button_clicked(object sender, Eventargs e) { bool success = MyRepositoryService.save(this.myTextbox.Text); // Where myTextbox is the name of your box. // Where the repository is a class that handles your business logic operations. if (success) { MessageBox.show("Data saved successfully"); } } ```
You can also use Blend for designing GUIs for Windows Universal applications (UWP). UWP is the latest standard for Windows applications and is the kind of apps you find on Windows Store. The output from Blend is a text-file format called Xaml, Many prefer to hand code Xaml in a text editor, instead of using a visual editor like Blend. Conceptually you can compare it to creating web-pages. Many prefer to hand code html in a text editor over using a visual designer like Dreamweaver. Xamarin Forms also use a variant of Xaml, but it is not compatible with Blend. Visual Studio also has a built in Xaml gui designer, which is simpler and more limited than Blend. So to sum it up, use of Blend is optional, and not used for Winforms or Web-pages.
Are you going to install it yourself on the customer's server or send out a package to customer which in turn installs it? If the former, have you tried using Publish from inside Visual Studio? Can configure several different setups there.
Removed: Rule 6, spam.
Reasons to develop and sell proprietary web applications: - Clients run the web app internally on their intranet. - Clients run a "white labeled" version of the web app. - Clients buy add-ons to web apps (e.g., commercial WordPress extensions). I've seen a lot of web apps bundled this way in the Linux world. As for IIS, all I can think of are add-ons for DotNetNuke (I'm not even sure that's still around), but I'm sure there are others.
RoslynPad is fantastic too. It's free, really flexible, and has intellisense.
If you are targeting Windows 10; its one of the UWP app models
How usable is Blazor currently? Definitely would love Blazor and Electron.
Thanks a lot. Pretty useful. For Electron.Net, can I control dom using C#?
I found this free C# tutorial, I've only just started taking a look at it, but I'd thought I'd share it, since it seems pretty complete, and the guy has some recommended xna/monogame tutorials.
I am planning on targeting all Windows OS from Vista onwards.
This is right I think. I manage [asp.net](https://asp.net) core apps on a farm of linux boxes in our colo at my job and my run script is just \`dotnet WebApplication.dll\`.
If you want to control dom you probably better off with Blazor that the other poster mentioned. Just know that Blazor requires modern browsers to use. 
Why html and css?
I prefer Styling and themeing with css than xaml.
I would suggest learning the right tool for the job. I wouldn‚Äôt use a screwdriver to hammer a nail. You may end up going down a road where you‚Äôre dealing with more complexity just for the sake of preferring css. Ultimately it may work out for you though. Good luck. 
Check out his books. C# Players Guide is a great one to get you started.
I think the best answer is to use inheritance for classes that **could** be swapped out. Maybe you decide to use selenium, I would make one. Another approach is a TDD approach. All classes that aren't POCOs should have an interface and that should always be referenced so you can 1. avoid actually implementing the class until you have to and 2. you can easily create mocks and stubs for those abstractions. Finally I'll mention that abstractions are very useful for dependency injection. There is a common belief that classes should never instantiate other (non-POCO) classes (aside from factories) and all instantiating should be done in the projects main method. I personally abide by this 90% of the time and it makes for clean architecture. All in all, try and use them, and keep reading about how to use them. They are tools and the more you use them, the more you will understand when/how to use them. Don't be afraid to make a mistake, just refactor.
I'm currently reading Rob Miles' c# yellow book, along with rb's course, so I probably wouldn't need it. But thanks for the suggestion anyway.
It should be noted that Robert Martin makes a point that inheritance is the ultimate concrete dependency. I personally haven't used inheritance since my first year programming. It just doesn't solve any of my problems. https://en.m.wikipedia.org/wiki/Composition_over_inheritance
Non-Mobile link: https://en.wikipedia.org/wiki/Composition_over_inheritance *** ^HelperBot ^v1.1 ^/r/HelperBot_ ^I ^am ^a ^bot. ^Please ^message ^/u/swim1929 ^with ^any ^feedback ^and/or ^hate. ^Counter: ^209266
Oh yeah man. Two kinds of people.
It should be noted that Robert Martin is full of hot air, that's its impossible to use ASP.NET or any .NET GUI framework without inheritance, and there's a huge difference between preferring composition to inheritance and not knowing how to use inheritance at all. P.S. The Open/Closed Principal is based on using inheritance instead of adding new functionality to classes that have already shipped. 
Openshift Online
Blazor runs C# in the browser that is its purpose. I am guessing you probably don't want Blazor if you don't want to use a browser. I should mention that all the other options(Chromely, Webview, Electron.Net) do is bundle a web browser in a desktop app. Some also allow you to directly communicate to the javascript/html from C#. 
None of this prevents it from being run on a single Web server within the company's intranet. It could just be a terminology thing but it sounds like every user has this web application running on their own PC.
&gt;Separating C++ header files to reduce compile times? I don't think that's really applicable here. Um, what? From wikipedia: &gt; The **interface-segregation principle** (**ISP**) states that no client should be forced to depend on methods it does not use. My point here was that should OP wish to implement an interface it would not need to define all the methods contained in the existing classes. Additionally, attempting to design an interface that does contain all the existing methods may result in bad design because it results in an interface that is to specific and not reusable. 
This is C#. The client code is NEVER dependent on methods it doesn't use. The very idea makes no sense. SOLID wasn't written for C# and its so-called principals do not necessarily apply. *** In C++, where that technique came from, the situation is very different. If you modify any method in the class's interface (i.e. its header file), then all code that uses that header have to be recompiled. Which in C++ takes a very long time. By breaking up the interface (again, header file) into smaller interfaces based on what each client needs, you can dramatically reduce the likelihood that the client will have to be recompiled due to a change in code it doesn't care about. 
Very
Still in early release, but one of the driving factors here was doing performance reviews and having to grab the queries EF and other ORM tools were generating tp track down performance issues so I thought fellow .NET folks might find it useful. More information on my twitter feed if you are interested - https://twitter.com/Philco78/status/1033462461557616642
While C++ may experience performance benefits from lighter interfaces, they also provides other design benefits applicable across many other object oriented languages, including C#. * Operations are grouped logically and cohesively * interfaces become easier to implement fully, and therefore * interfaces are less likely to break Liskov Substitution Principle by being only partially implemented * provides greater flexibility because parts of a larger interface can be combined in different ways
&gt; I think the best answer is to use inheritance for classes that could be swapped out. Maybe you decide to use selenium, I would make one. What do you mean by swapped out? I will be using selenium. In my plans so far I have the driver as a property of my tabManager?
&gt; Not sure what your experience level is here Noobie :) Well....I come from an MS-Access background...and I have been around along time...but c# and design pattern noob... I have read SOLID, but I need to read it again...off to read interface segregation again :) All the automater categories implement the same signatures (however there will be some extra signatures that are not in all of them) I need to reflect on all this so shall be back after I have done that :) Thank you for your tips I appreaciate it alot..
&gt;Nononono... There is no spoon. The box is real.
I would advise you to go for a XAML-based UI framework like WPF or UWP (WinForms is not based on XAML) because they provide advanced features: you have way more options in layout, animations, data binding, and writing user and custom controls, and most of these can be written in a declarative way. Plus, UWP is currently the only platform that Microsoft is actively working on. WPF and WinForms only get security updates if necessary (yes, they are currently ported to .NET Core 3, but as far as I understand, there will be no new features). So implementing fancy UIs as you described should be easiest in XAML. Take a look at the books of Mathew MacDonald, he is one of the best authors in the realm of Windows UI frameworks IMO.
OP could be selling a web application that other companies buy and host on their own intranet servers. OP would need to distribute a copy to each client.
Docker on windows is no-no until latest server editions :(
The article is right. Dotnet run application.dll is how you start a core app from compiled code.
&gt; Finally got my little side project into a state where it isn't embarrassing. I tried to load sample.. And got told it was an invalid plan!
Blazor is a SPA framework that does not require JavaScript. It supports (or will support) a variety of deployment scenarios since it's meant to be flexible: * Browser - client side rendering (Mono CLR will run in the browser via interpreter or full AOT runtime using WebAssembly) * Server side rendering (.NET Core CLR will run on the server) * Not sandboxed (.NET Core CLR will run normally on the Electron app - no WebAssembly) 
&gt; there are a lot of good reasons for having small, focused abstract interfaces. That's really all interface segregation is. I'm not sure why you think it relates to C++. Can you point me at a reference? Robert C. Martin talks about Interface Segregation and how it relates, specifically, to C# in his book [Agile Principles, Patterns, and Practices in C#](https://www.amazon.com/Agile-Principles-Patterns-Practices-PRACTS-ebook/dp/B0051TM4GI/ref=mt_kindle?_encoding=UTF8&amp;me=&amp;qid=1535611294) (Chapter 12)
LOL you dont know what you are talking about. I do MVVM with WinForm, I use devexpress controls.
Just came by to tell you that you can replace some of this code with better alternatives // StartsWith instead of manual Length and Substring check if (docText.StartsWith(@"{\rtf")) { df = System.Windows.Forms.DataFormats.Rtf; } else { df = System.Windows.Forms.DataFormats.Text; } // Using instead of manual .Close(); using (var memStream = new MemoryStream(Encoding.Default.GetBytes(docText))) { TextRange textRange = new TextRange(flowDocument.ContentEnd, flowDocument.ContentEnd); textRange.Load(memStream, df); } &amp;#x200B;
The title of that book alone tells you its consists mostly of regurgitated buzzwords and cargo cult programming. Agile Principles in C#? Agile is a philosophy in which you are willing to change your development practices based on the situation. To say you have specific "Agile Principles" is contrary to the point. And to go further and say principals of project management somehow apply to minutia of specific programming language? At the end of the day Robert C. Martin is a snake oil salesman. He calls everything a "principle" to make it sound better, tacks on "agile" because its popular, and then mixes in his largely discredited SOLID theories for good measure. 
any tips for staying awake during the microsoft fundamentals course? 
&gt; So to share code it must inherit from a base correct? Yes. (Well mostly yes. You could move the shared code into a helper class.) &gt; What I mean is, an abstract class is a decendent to a concrete class. I.e. Inheritance? Mostly right. Usually we say the abstract class is the parent and the concrete class is the decendent.
He's talking about "mock testing". Rather than testing against real things like the websites, he wants you to create a mock or fake version of anything that touches something outside of your application. Then test with that fake version instead of the real one. Since your Automaters are doing 95% of the work, making a fake Automater to test against is nonsensical. But alas there are a lot of people who don't understand this and try to use mock testing for everything. 
I got the C# Players Guide first edition and it was fantastic. I found it much better than other books I tried. I am now a professional C# developer - so thank you RB Whitaker.
Which is the best course / book to start with in C# ? How does MS fundamentals compare to RB's books / yellow pages? 
First of all you are overthinking. The truth is despite design patterns are a powerful tool, they are not efficient for rapid prototyping. You have to get your program to work ASAP. The reason to do this is to understand which implemented features work and which do not. After creating working program, only then you start thinking you to refactor it to make it easy to extend and modify in the feature. This is where design patterns kick in. &amp;#x200B; Regarding to your question Always prefer Inheritance over Interface. Always prefer Referencing over Inheritance. Interfaces are contracts that tells you what features are implemented in this class. Those features are usually something generic. For example IClonable is interface for object cloning and IDisposable is interface for object disposal when no longer needed. More often you will have to implement already existing .NET interfaces rather then inventing your own. With inheritance it is different. Inheritance enables you to save code. If you look at design patterns they all use inheritance. They do not implement any interface. &amp;#x200B; As I said inheritance allow to save code. However referencing is preferred to inheritance. Once I saw my friend's code where class Planet was inheriting class Point. Yes planet has a point in space where it is located, but it does not mean that the Plant is a point. If you use inheritance then find the design pattern you want to implement behind it. Otherwise use referencing. &amp;#x200B;
I know people that are in the same situation.
Browser is all good, but most of the major firms have restrictions on posting fragments of the code somewhere. I know it tells it doesn't store anything. But try to convince IT security departments ;) Hope it will get an offline version in the future. I like the concept, though tools like ApexSql Plan existed long ago.
Keep learning console and start learning and experimenting with WPF
Right on. I was going to throw it in an electron wrapper next week for shits and giggles anyways.
Well that's embarrassing. What browser are you running? I'll push up a new version with less shitty error handlers later today too
You can of course always look for advice regarding a particular problem in communities (like this one). Aside from that, for beginners the tutorials of Brackeys ([https://www.youtube.com/user/Brackeys](https://www.youtube.com/user/Brackeys)) and code monkey ([https://www.youtube.com/channel/UCFK6NCbuCIVzA6Yj1G\_ZqCg](https://www.youtube.com/channel/UCFK6NCbuCIVzA6Yj1G_ZqCg)) might be quite helpful. Good luck!
(Don't ask why Reddit wants to format it like that)
What‚Äôs the actual question? Are you wondering how you access data from the query string? If so, just make it an input parameter to your controller action and if you‚Äôre not specifying it in either the route or the body it will look for it in the query string for you. 
Yes, that's the question. So this: public IHttpActionResult GetMessageWithAttachments() should be like this: public IHttpActionResult GetMessageWithAttachments(string hereistheurl)?
Yeah, that works, thanks :) I thought it should be pretty simple, but didn't think it would be this simple :)
Ic! It is clear now. Thank you. You are most helpful. I really appreciate your brains! Hope to repay your efforts (maybe not directly to you) at some point..
https://roslynpad.net/ Website has link to GitHub source as well!
Yeah I love how quickly you can build APIs with it. On a API design note, keep in mind that as a general rule you want to be passing data in the query string that is optional. For this reason, the GiveMeTheAge() example isn't ideal because it looks like if the caller doesn't provide a query string then your API can't function. 
Especially the security departments that will tell you a self signed ssl cert isn't secure because their browser turns red
Check out appharbor it should do everything you're after though mysql might be restrictive.
A wild idea. What if you add code to your web application that checks for new updates using serial code of the client to your server. If there is any new update for that client it will launch a .exe and download update for that client using his serial code as identification. 
figured it out. I'm using azure's blog storage static site hosting. It was serving up a .sqlplan as an octet-stream which firefox was bringing in encoded which prevented it from parsing the xml. I didn't really want to investigate how to force a better content-type in azure this morning so I just renamed the file to .xml which gets the right content-type set and firefox is happy again. That explains why my local testing didn't catch that at least, but still simple enough I should have found that. whoops. While looking into this I also noticed that I foolishly had cloudflare caching the index file on the client and not just on their edge so you might need to refresh the page to get the change
When in doubt, start with the basics: * Always *favor* **composition** over inheritance. * Can the relationship between two types be defined as a "has-a" or "is-a" relation? If the former, use composition. If the latter, use inheritance. TabManagers sounds like they "have" automaters, so I think automaters should be part of the TabManager composition. I agree with using interfaces for your automators. Your TabManager should only be coupled with the `IAutomator` (or whatever) interface. You can always have one automator inherit from another and override its methods if you wish and the TabManager still won't need to change because it is coupled with the `IAutomator` interface. More modularity is **typically** a good thing.
Can you walk me through how I am to interpret this?
I have a check there that returns instantly a bad request if that age isn't provided.
I used wildcard in a recent project. I also needed the query parameter in an unmodified state and found the code in GetRawTarget() on the web. [HttpGet] [HttpPost] [Route("{*path}")] async public Task&lt;Stream&gt; Get(string path = "") { string effectivePath; //rawTarget includes the Route part of the path and the url query part //this way of getting the QS is the only one I found that might not reinterpret the original value from the http request var originalRequestUrl = GetRawTarget(); var pathIndex = originalRequestUrl.IndexOf(ControllerPathValue + path); effectivePath = originalRequestUrl.Substring(pathIndex + 7); if (effectivePath.StartsWith('_')) { effectivePath = effectivePath.TrimStart('_'); } Uri baseAddress = client.BaseAddress; var content = await ProcessRequest(new HttpMethod(Request.Method), baseAddress, effectivePath); return content; } protected string GetRawTarget() { var httpContext = Request.HttpContext; var requestFeature = httpContext.Features.Get&lt;IHttpRequestFeature&gt;(); var fullPath = requestFeature.RawTarget; return fullPath; } 
you bet, probably need to write a full blog post but I'll use your question as a jumping off. If you got time ask away and hopefully I can use your questions to help drive the gaps. I've been thinking about this in my head for years so I'm the worst to describe it for someone that is jumping in from scratch right now I fear. So I'm going to assume you are familiar with a typical Query Plan from SQL Server. Here's basically [the typical visualization](https://www.brentozar.com/pastetheplan/?id=BJvp2OBDX) of the queryplan that I'm using when you click Load Sample. One thing I've always struggled with using the regular visualization is that it isn't readily apparent what the high cost operators are going to be. You need to scan the whole tree looking at the percentages. Some tools like SentryOne Plan Explorer make it easier with little red highlights, but for anything but a trivial plan you'll be scrolling left, right, up and down all over the place trying to find it. And if you have two operators that are both high there's a good chance that getting them both even on the screen at the same time is going to be tricky. So what I'm trying to show is the subtree cost of each operator visually in the diagram. Same data as the regular view, but instead of a tree going to the right I have a circle that goes from the middle out. Higher the cost the bigger the chunk. So with the sample you'll see a huge red line on the outside going around 75% of the circle. Hovering (or clicking) on it shows you that's a Clustered Index Scan taking up about 75% of the operation time. What I'm also trying to do is highlight the the types of operators. Red generally means it is something that does a read off disk like an index scan. Blue is going to be a join. Green is an operator. So if you hover over a blue chunk it'll highlight the child operators. In the future I'd like to add which tables are being joined for that operation on the right hand side. 
Take a look at Microsoft's VSTS or Jetbrains TeamCity. You configure them to do what you are currently doing, but automated. For example you can have it watch your source control for check-ins which will trigger a build (continuous integration), run tests, and do any number of additional tasks, including finally moving the files somewhere. You can go as far as continuous deployment which can actually install the app so your QA team can get to testing soon after a check-in.
Thanks for the advice, it‚Äôs appreciated. Are those both free? When I‚Äôve been reading, I‚Äôve come across Jenkins a lot, is that similar to those? 
We have a PowerShell script that looks at the head of different branches and if a new commit is detected it will clone the repo and use msbuild to build/publish. The master branch goes to production and we have a couple other branches that will go to staging/QA sites. This is using git/github but I imagine you could set the same thing up for SVN.
They are both free but VSTS has a cost if you have more than 5 users. I've heard of jenkins but haven't used it. It is similar. It might actually be better so you should check it out too. I've used VSTS and TeamCity. They are about the same but VSTS was easier to use and set up.
C# in depth is a good idea but there is already fourth edition available - https://www.manning.com/books/c-sharp-in-depth-fourth-edition
Can you do this? public interface IAutomater string DisplayName {get;} void DoIt(); public class tabManager public List&lt;IAutomater&gt; Automaters {get} = new List&lt;IAutomater&gt;();
I only ask that when someone asks you for help, you give them real advice and not just say "learn SOLID". 
If you are going to say that, at least give them the standard. https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/general-naming-conventions
TeamCity used to have a limitation in free tier, like 20 build configs or something, but that was 5+ years ago. Is there something similar nowadays?
curious if you are just chirping security departments or there's an issue with the cert I'm using. I'm relying on Cloudflare's shared ssl cert here and I'm not 100% sure if the corporate world doesn't have protections in place against those certs or any of the CAs it might use
I couldn't speak to cloudflare, but in general, the protocol to generate an SSL cert is the same across the board. CAs pay money to browser companies to put the little green thing in a URL bar so the layman knows whether or not it's valid. CAs are necessary because if we didn't have them, anyone could issue a cert and say "Hey, I'm google you're perfectly safe" when they're malicious. So the CA essentially verifies you are who you say are, when they grant you a cert. Now, for internal or personal uses, a self signed cert is just as secure as one granted from godaddy, geotrust, etc. It just won't be validated in a browser as being from a trusted CA, so the browser will say it's not safe. From a technical stand point, it's just as safe. If you're looking for free certs from a trusted CA, you can use https://letsencrypt.org/. However, you have to renew those every three months, but there are things out there to automate that. 
You're right, fair enough.
You have to indent each line 4 spaces for monospace.
Yo, I might post more later, but itextsharp has a very restrictive license that you're probably not going to follow. I've had good personal success with pdfsharp.
Awesome, since i already wrote something in C# using pdfsharp where i merged File numbers with their corresponding PDF's that had an _1 next to it. so like So in a directory of PDF's that were named after their file#'s, it would find for example RN000577 and then find the exact number with its _1 suffix like RN000577_1 and combine them into one pdf. So far i have a code in VB.net that searches the PDF file for keywords and splits it into separate PDF's. 
what does NHibernate do that entityframework core does not? I have never seen any examples of it
https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/general-naming-conventions
I am pretty heavily involved with the build process at my work and I will second microsoft VSTS. Take a look at the [Feature comparison](https://visualstudio.microsoft.com/team-services/compare-features/) and [pricing](https://visualstudio.microsoft.com/team-services/pricing/) pages to get a sense of what is involved. Also, a subtle bit is that if you have Visual Studio pro or enterprise a license was included in the purchase so there is no additional cost needed to use VSTS. &amp;#x200B; Presuming you go with VSTS, what you are going to want to do is set up a machine dedicated to building your code. sounds like you currently compile locally and then copy things over. Having a dedicated build machine frees you up to do the next bit. Automatic daily builds. With VSTS you can set up a Build task which will perform all of the steps needed to build your application. In other words, get latest, and compile. Fairly simple, but in your case you will need to figure out some way to get the code out of SVN and onto the build server prior to performing a compile. You'll likely need to use the Command Line task and execute items on the [SVN command line](https://www.open.collab.net/scdocs/ddUsingSVN_command-line) to get your stuff. Once the stuff is there, there is a pretty straightforward "Build the Solution" task that you can use to run the compile. &amp;#x200B; This gets you to the point of having the thing you want to deploy to your QA server ready for copy, but you have a few options in terms of getting it there. The most straightforward way is to use a "Copy" task in your build process to just copy the files over as soon as they are ready. Your other option is to use the "Publish Artifact" task to copy the thing you want to copy into TFS so it can be used in a [Release Pipeline as part of Release Management.](https://docs.microsoft.com/en-us/vsts/pipelines/release/what-is-release-management?view=vsts) Release pipelines are neat because they allow you to deploy into multiple environments at the same time, but more importantly in your situation is they allow you to re-deploy previous builds with the click of a button. Is the server not quite working after your latest build was copied over? No problem, go over to your list of previous releases in VSTS, deploy the previous build, and QA is back to working again while you guys figure out what went wrong with the latest build. &amp;#x200B; I kinda threw a whole bunch of specific stuff at you that might not make sense given your general unfamiliarity so if you have some specific questions on parts of it just let me know. &amp;#x200B;
imo dont waste time looking for the greatest thing out there: 1. everyone will have different opinion on which one is best and will be biased to the one they learned from 2. pick this one, learn and build something. I skimmed through this and it gives you solid fundamentals Have fun 
Nothing really, but if OP is working in an environment where they are currently using NHibernate already it would make sense to learn it. If that isn't the case though I'd skip NHibernate entirely and go straight to Entity Framework. They're both ORMs, but NHibernate has effectively gone into maintenance mode/death spiral while EF has stuff actively being worked on it.
You'll just have to power through it, it can be boring at times, but it should give you a good understanding of c#.
TeamCity is still limitation free with up to 100 build configurations, max 3 build agents. Jenkins is open source so it's 100% free.
Its weird that I learned Java and C and C++ way before learning much C# Even though I program professionally in C# (.NET) all day but have no idea what to recommend to noobs.
Nice to see he's still writing tutorials. I was going to help him with editing and webdev a while back but forgot to follow up on it with life being busy. 
Well, this one isn't new, but I thought I'd share it, since it seems really good. He doesn't seem very active on his website, sadly. I wish he'd update the monogame course, because that's what I'd like to eventually learn.
How do the benchmarks compare?
I have his email address and contact info somewhere. Could send him a note.
I wrote a tool to display execution plans which orders operators by cost (as I also found navigating around a query plan diagram looking for high costs a time consuming experience). Check out the screenshots here: [https://minidba.com/Docs/sql-server-execution-plan-view](https://minidba.com/Docs/sql-server-execution-plan-view) &amp;#x200B; I like what you have done so far, great work!
Linkov SUBSTITUTION principle. Class can be substituted by the interface it implements. Base implementation has nothing to do with LSP, expected behaviour does. You know how interfaces behave. You can break that in classes that implement it. For example implement ICloneable Clone to return itself not object's clone. 
I'm actually making a post about using AngleSharp aswell. I can't deny that AngleSharp is amazing!
Seconded PDF Sharp is great.
EvoPdf has the ability to split. If you need to split on the content of the page they also gave a product that converts a pdf to text so you could parse out the page text perhaps.
I wouldn't be against working on something. I'm currently in the industry at the moment (though, I'm only a Jr. Software Dev). I'm still currently a student, myself. But would definitely be willing to see if I can give any input on group project. I've yet to work with a group also- despite being in the industry. I'm the only software dev on staff for now (and the foreseeable future) so a lot of decisions made for projects are made by me (with approval of my boss, who was the previous software dev. He has since moved from software dev to management). I think it would be great experience! TLDR: I would be glad to give some input and even work with you on something.
Well ATM it's me and just one other, looking at making a mock electricity meter-thing using an API that keeps track of current prices, PM me if you're interested.
Will do. If you don't find anyone here, r/ProgrammingBuddies is also probably a better sub to post in when looking.
I'm sticking with Nhibernate until EF/EF Core can work with interfaces
https://enterprisecraftsmanship.com/ The guy behind this blog is a decent educator, quite a few PluralSight courses. He looks to NHibernate on a regular basis and does dive into how best to apply it whilst maintaining the integrity of the domain.
I sent him an email yesterday about it, hopefully he'll respond.
WPF/UWP learning curve is a lot steeper than WinForms, because they have a lot more concepts and advanced features to learn than WinForms (which only requires basic C# knowledge). The C# veterans here will tell you WinForms is ancient and not recommended, but WPF/UWP have a lot of features that I found harder to grasp than WinForms. UWP is also very new (relatively) so the quality of tutorials/learning materials is not that great. 
Does it cost anything to use the product that converts a pdf to text? 
Yea, that's what I need :) Maybe with certificate instead of serial code.
Go for it, I for one would not mind reading it. Please do.
There is actually a great deal that NHibernate can do and EF Core currently can not. Read for example this blog for a comparison: [https://enterprisecraftsmanship.com/2018/06/13/ef-core-vs-nhibernate-ddd-perspective/](https://enterprisecraftsmanship.com/2018/06/13/ef-core-vs-nhibernate-ddd-perspective/) EF Core development is very active however so I guess the gap will be closed sooner or later. I would pick EF Core for a new project where I have control of the database design. I would pick NHibernate for a project with a legacy database or a project where the database design is not under your control because NHibernate simply supports more scenario's.
Another alternative that is free for one continuous build with one agent is ContinuaCI. Used it with SVN before and using it now with git.
Thanks!
It appears to be scheduled for release in 2019.
Removed: Rule 4. There are plenty of tutorials and help articles on how to access databases, read data from them into C#, which at that point you can assign it to your GUI elements. Pick one based on your requirements: database type you're using, type of C# application you're building, what framework you're using (WPF, Xamarin, ASP.NET, etc.), and so on. Dive in and give it a shot. If you run into specific issues in your attempt, feel free to post a question, but include all relevant information and the code you're using.
:) haha. That could take longer...
I don't know any, but you can surely write one ;D
Yes, sorry I am still trying to stick to and learn consistency. I come from 10 years usinig ms-access. Mostly I used hungarian notation there. It is a difficult habit to break. I also have the urge to prefix everything...its terrible...
Yes i can. Very clever! I am not sure I will run into this problem as yet, but there are spike pits everywhere, Thank you.
frmMain masterrace..!
You can't actually use `dynamic` in a Xamarin app. It will work in a simulator, but it requires code generation, which isn't allowed on iOS, and it will be stripped in an app store build and then the app won't work. Before I discovered this, I found things would behave shakily in the simulator. Since it's not actually supported on iOS, the Xamarin toolchain doesn't always do something sane with it. 
It would be great if we could switch to classic visualization. I get your reasoning but the traditional one helps understand the way the query works better. So right now if there is a problem we have to switch tools and this kind of defeats the purpose. You've eliminated scrolling but increased the number of tools.
I've tried but never was successful... 
[The official docs](https://github.com/dotnet/core/blob/master/samples/RaspberryPiInstructions.md) say to create a self contained application and to run it as an executable...what official doc were you looking at? Maybe there are multiple conflicting sources out there, but dotnet run {assembly}.dll is not a documented command, even if it works.
Main can be async in C#8
Cefsharp is a cef webview for wonforms/wpf. It's easy to communicate between the js and cs. If you do try it, try the v63 version. The 65 version is horribly unstable. Also, check out Google Omaha for updating your application. I know there's a lot of fascination with Squirrel, but squirrel has bunked multiple app updates for me (so far my app in testing, postman, and one other)
You might be confused or typed in the wrong thing. 
Take this in steps first develop a build script. Use something like [Cake](https://cakebuild.net), [Nuke](https://nuke.build/), or even powershell. You could also try to put it all in the csproj using msbuild but in my experience that is tricky. Once you have a build script and the script properly builds the software and deploys it you will want to move to a CI. Use the CI to automatically grab you code on certian triggers and run the build/deploy script. Teamcity, Jenkins, VSTS are some of them there are many. Just pick one and start using it. Once you have this all in place you forget about it and things get a lot easier.
&amp;#x200B; Let's take another example... Hmm this code is failing to run, it used to work...but it compiles so didn't catch the error during compile time. `var value1 = SqrRootPower();` [`//Math.Sqrt`](//Math.Sqrt)`(Math.Pow(100.10142, 2))` `var value2 = Math.Pow(Math.Sqrt(Math.Pow(100.10142, 2)) * 3.51, 2);` `value2 = Math.Sqrt(value2) / 3.51;` `if (!Program.IsApproximatelyEqual(value1 * 2.1, value2 * 2.1, .000000002))` `throw new Exception("This should be approximately equal");` &amp;#x200B; Ooopps someone refactored SqrRootPower() to return a float instead of a double (dumb for sure but...). Due to the var usage the compiler didn't catch the problem (and we couldn't see it in the code usage either), thus acting like weaker typing. **From Wikipedia:" Generally, a strongly typed language has stricter typing rules at compile time, which implies that errors and exceptions are more likely to happen during compilation. "** Since we used var the compiler didn't catch the error during compile time, so are we still as strongly typed as specifying the type (depends on your interpretation of strongly typed I guess)? &amp;#x200B; The code below would have failed to compile, catching the problem during compile time. &amp;#x200B; `double value1 = SqrRootPower();` [`//Math.Sqrt`](//Math.Sqrt)`(Math.Pow(100.10142, 2))` `double value2 = Math.Pow(Math.Sqrt(Math.Pow(100.10142, 2)) * 3.51, 2);` `value2 = Math.Sqrt(value2) / 3.51;` `if (!Program.IsApproximatelyEqual(value1 * 2.1, value2 * 2.1, .000000002))` `throw new Exception("This should be approximately equal");` &amp;#x200B; &amp;#x200B; &amp;#x200B;
I've been programming c# for quite some time - webdev and webforms. I had zero experience with Unity and needed to learn 3D dev for VR. I took one of those Udemy courses so I could learn Unity. It was frustrating as hell because they spent 20 minutes explaining simple shit like how an if-then statement works, and why you would need to use one. I don't remember exactly what class I took, but clearly it was the wrong for me. The course seemed to be geared for people with ZERO programming experience - I have years and years under my belt. AND to top it off, it just seemed shittily done. I was left with the impression that the whole "course" was just someone mediocre blathering about simple shit and ripping people off by charging money for it. Clearly, there were tutorials out there that were MUCH better and more or less free. The whole experience soured me on the idea of paying for tutorials. And honestly, the free series from Unity was MUCH better (but a tad outdated. Unity likes to update their shit every couple of months it seems.) Do me a favor and let me know what you go with. I'd probably still benefit from some Unity courses. c# for webdev I've got nailed - its the Unity framework, and particularly best practices and patterns that I need to learn better.
I found that in any real usage, async Main does weird things with exceptions since console apps don't have a synchronization context, so you still need boiler plate if you want to get it working correctly.
Learning C# is great: do not recommend NHibernate at all. Trying to move away from it at my company and it has taken years. Use Dapper.
C# in depth is my favorite by far. I've read it multiple times and I almost never do that. After that the books I like might be too specialized. I like the first half of WPF unleashed (up until the 3d rendering stuff which I dont see myself ever finding useful). I also really enjoyed "writing high performance c#" which I realize might sound strange if you are a c++ programmer but it's quite good, it covers the path from c# to assembly in a lot of cases and shows you a lot of ways to profile. As for NHibernate I'm afraid I don't know anything. I did enjoy Julie Lermans entity framework books though. I guess the only relation is that they are both ORMs
Stephen Cleary is awesome. +10000
I thought console apps used the default sync context? It's been a while so I could be wrong, but if my memory isn't failing me.... I'm almost sure I'm not wrong. 
Yes, but the default sync context spawns new threads after returning to the calling point. If your main process ends while the other threads are running, the app closes instead of waiting them. And exceptions get lost, I don't remember why.
ohhh I see. Yeah that'd make sense. But it still does have a sync context, It just breaks?
Seconding this. Just use the free ones on the Unity site. Generally if you have questions the forums there are (mostly) an alright place. Just don‚Äôt expect to learn good development practices from Unity that you can bring elsewhere. 
Ebook is already available.
This was perfectly timed. Thanks for posting.
It can already be async, I think from 7.3.
Take a look at [best C# tutorials](https://reactdom.com/csharp). 
IMO anything is doing ‚Äòservice work‚Äô, like talking to DBs or making HTTP requests needs to live behind an interface. I‚Äôd move that private method to an interface method, then you could use Dependency Injection to add an implementation of that new Interface into your class, this then makes it trivial to mock out using a library like Moq and you end up with a good separation of code that is testable and code that can‚Äôt easily be tested.
Yes definitely 7.1.
Very interesting. I'll have a look at it later and maybe play a bit with the code on GitHub.
Anytime! 
I'm probably not going to take Unity course soon but yeah I'll let you know when I do, thanks for the feedback
You can also use internal methods and still unittest them, either directly or via a "friend assembly".
&gt; One of our developer handled this scenario by having a testclass which inherits from the original class and made the private method protected virtual in the original class and overrides the protected virtual in the test class and will trigger the public method from the test class public method. This OO madness here for the sake of unit testing (which, with clean code, should be fairly straightforward) should be setting of alarm bells. You need to use interfaces, and dependency injection. Your tests and the mocking will be far easier as a result.
3D modelling is easy. Writing a 3D modelling app... well, thats hard as \*\*\*\*. You probably better comes out, if you write a very very simple engine, add make it works with "extension" or traditionally names "scripts" just like Blender does. &amp;#x200B; For simple and "lazy" solution, you can go with JS or LUA. If you want a more advanced solution (I would suggest this) you can use Roslyn and AppDomains to dynamically compile C# codes, so you can write custom scripts like: class ObjExportSettings() { //... } class ExportOBJ { [MenuItem("File/Export/OBJ")] public static void ExportOBJ() { //Opens the /Switches to the SaveFile screen; Algorithm oiented YourProgramName.OpenSaveFileDialog&lt;ObjExportSettings&gt;(Title="Export OBJ", Extension="OBJ", RenderSettings = RenderSettingsInspector); //Opens the /Switches to the SaveFile screen; Event oiented YourProgramName.OpenSaveFileDialog&lt;ObjExportSettings&gt;(Title="Export OBJ", Extension="OBJ", RenderSettings = RenderSettingsInspector, OnExportButton = WhateverMethodThatExportsTheFile) } // Continous render method, runs at each event that occurs in the UI Context area public void RenderSettingsInspector(UIContext uiContext, ObjExportSettings settings) { settings.includeUV = uiContext.Checkbox("Export UV", settings.includeUV); settings.mergeDuplicates = uiContext.Checkbox("Merge duplicates", settings.mergeDuplicates); //... } //Event driven solution, only runs once when you open the Export screen public void RenderSettingsInspector(UIContext uiContext) { //Add label ... Checkbox includeUV = new Checkbox(); //Casual C# checkbox control includeUV.name = "Include UV"; includeUV.OnChange += new WhateverEventListener((sender) =&gt; { this.includeUV = ((Checkbox)sender).Checked;}) //... } } &amp;#x200B;
No 
Removed: Rule 3, Rule 4.
Just when I'm working with it, perfect üëå
I personally don't like that OO approach, that overrides the protected members (which was private before). 
And the prize for being a total moron goes to myself. "C:\\Windows" is what I needed. Thank you helping the penny drop! :D
Yes the internal methods could be a good option. But interfaces with DI could be the solution
`SynchronizationContext.Current` is `null` in console apps. Some code depending on a sync context creates their own `SynchronizationContext` instance in that case, which will just run methods on random thread pool threads. Async xceptions are not stored in the synchronization context. They are stored in the `Task` object and rethrown when you await that task or access its result. 
The synchronization context doesn't really have anything to do with exceptions. You need to await/otherwise observe a task to catch its exceptions, having a synchronization context doesn't change anything about this.
Maybe I'm late to the game, but Multi-Caret Support blew my mind. 
The OO way: 1. Extract a type FetchDataFromStoredProcedureCommand with a \`public virtual SomeReturnData Execute(args...)\` method on it. 2. Pass that into your class via the constructor. 3. In your tests pass a Mock&lt;FetchDataFromStoredProcedureCommand&gt; and mock the Execute method. If you are using Moq (as opposed to FakeItEasy) you'll need a protected empty ctor on the Command class so it can create the instance. &amp;#x200B;
It does.
Any luck? 
Microsoft has been killing it lately. Develop a hugely popular free code editor, and then use the feedback and features generated by the open source community to improve your flagship, commercial IDE. Its a good strategy.
Loving all the improvements MS is making lately. VS, VS-Code, and even Windows 10 are great now. 
It's probably cleaner to separate out the database calls to a separate class and wrap that with an interface as a parameter to the class you're testing, because it sounds like you've probably got some separation-of-concerns issues, right now.
I'm scraping data from about 100-5000 webpages after another which are a few kb each. After all scraped pages I am usually at about 1.5-2GB memory without calling the garbage collector manually and at about 150MB with doing so. Yes I know that it's no good practice to call it manually but since it's a personal project I had no issues with that. However I'll take a look at Anglesharp, didn't hear about it yet
I'm one of those who open files in VSCode just to use it. Like, once you start using it you can't think of ever not using it again. It's *that* awesome.
I am not sure about pure UWP apps, but this is how to do it with the [Microsoft.Toolkit.Uwp.Notifications nuget package](https://www.nuget.org/packages/Microsoft.Toolkit.Uwp.Notifications/). I assume it should be similar. ToastContent toastContent = new ToastContent() { Audio = new ToastAudio { Silent = true }, Visual = new ToastVisual { BindingGeneric = new ToastBindingGeneric() { Children = { new AdaptiveText() { Text = "This is a silent toast" } } } } };
IMO, you have to pick one: * 17 year old OS * Modern Tools 
That shift+alt+plus is incredibly handy.
I actually had a 30 minute conversation with my coworker today about how great VS2017 is. I never thought a few years ago we'd be gushing about a MS product. 
Yeah, I agree with you.. Maybe I have not already accepted it yet... But thank you!
Steven is also author of THE book on .NET concurrency. https://www.amazon.com/Concurrency-Cookbook-Asynchronous-Multithreaded-Programming/dp/1449367569
"Go To Last Edited Location (Ctrl + Shift + Backspace)" I need this :D
Good job! You should consider getting a proper blog so this knowledge isn't lost to the annals of Reddit :)
Any reason Numbers.app (Apple spreadsheet app) and some automator scripting wouldn‚Äôt work?
Xamarin.Mac will be great for this, but you will need to use a Mac to develop it. You can get macOS images for VMware from certain parts of the internet. I find that VS for Mac can be pretty slow, but I saw someone else on here say the same, so I don't think it's my emulator. 
Yeah, you're definitely right. I just want an opportunity to write a desktop app haha
I have a MacBook pro so it shouldn't be a problem! Thanks for the response.
I'm sorry man I was just making a not so funny joke. I'm actually just working through this : https://www.amazon.co.uk/Pro-NET-Core-Andrew-Troelsen/dp/1484230175 Highly recommended,.I've actually been checking out your recommendation and I think I'm gonna go ahead and grab a copy. 
One of your section titles is "Implementation of a typo serializer" which is kind of ironic. Any benchmarks on this vs say, JSON serialization?
Him and Stephen Toub. Always my first recommendation for any sort of async, parallel, or concurrency information.
Good call! 
I love C# but this definitely sounds like something I would dust off python for.
This is gold
Thanks for being interested in my work! In fact, the next line reads "Funny, isn't it?" (-: Good point, I'll implement some tests to measure the performance and also to compare it to other solutions. When it comes to tests like this one, I always find it hard to come up with object graphs to use but anyways.
This project is simple enough practically any environment you pick will be fine for it. I think doing it in Swift vs. doing it in C# from an unfamiliar viewpoint will be roughly the same. The main problem you will have is if you don't have a Mac, but I'm assuming if you were considering Swift you have one of those. It sounds like you're pretty familiar with C#. That will make it a lot easier to go about getting things done if you pick that: you won't have to learn a new programming language, which is more daunting the first couple of times you do it. To me, the next biggest problem involves, "Where is this CSV file?" iOS devices have increasingly resisted attempts to treat them like file storage devices. If you can put the CSV file somewhere like Dropbox, you can use that API to get at it pretty easy. Or if you can host it on some public web server, that's fine too. What you won't be able to do is just plug the iPhone into a random computer and get the file that way. I used to warn people away from VS for Mac, but an update *this week* has removed practically everything I griped about. Short story: Intellisense hasn't worked for nearly 3 months. So give it a try!
C++ would be my only real guess. If there‚Äôs no dependency on the apps being desktops apps then I‚Äôd say go with a web app, if there‚Äôs no network then see about embedding a web server in a windows service and running it locally. Alternatively you might have some luck with a combination such as Python and Qt. But these are all guesses and the real answer is probably just that the OS is realistically too old for modern development environments. 
Boy the commenters on that post are super whiny. The users in this case are just as bad as the users they program for I bet.
My guess is that you won't be getting much from this without looking at the source code that's going through the directory AND the directory itself to see. I'm a beginner to C#, but that would be my guess.
I'll neer 2D tho, thanks for the idea!
I was planning to take free ones on Unity first nonetheless, was wondering which course to take afterwards
I always use autofixture for stuff like that, but I haven't ever tried to create a graph with circular references, so I'm not sure if its possible.
So, umm, just a sanity check, are you calling `permissions.Demand();` in this process? That said, I think there's also some questions I have about the overall 'script'. Is this a powershell thing? a `CSharpScripting` thing? or writing little console bits? 
That‚Äôs exactly it. I believe they‚Äôre working on an updated/new version of it. But he goes over just as many general programming concepts like abstract classes etc as he does unity specific things like meshes. 
Sure, sounds like a great idea. I woukd even consider trying to use Xamarin Forms which would make porting the application to Windows much easier. 
Oh dear god. Umm, calling `.Demand()` will help. But if this is IronPython running in C# (guessing from code provided and this reply), *this just got interesting*. Assuming my Friday night just got very cerebral, is this `permissions` instance getting passed into a sandbox and/or appdomain initialization?
Yes, the permissions object is being passed into an AppDomain being used as a sandbox. Didn't realize I had to demand the permissions myself; I thought they were automatically demanded when the secured code was called! Thanks! :)
C# and Winforms is much better than Node.
Go into the "break on exception" panel, turn on everything and see where it stops.
I'm betting a troll. 
Especially for the "text editing" part of the IDE. In my mind that part is relatively small in an IDE. I often use another text editor (vscode) besides my IDE (vstudio/jetbrain), manipulate text in the editor, analysis in IDE.
In my opinion: 1) consideration B is not good. Consider as well that adding values to an enum can be a breaking change because people often don't have a "default: throw" clause at the end. additionally, you would be re-implementing virtual dispatch, which the CLR will always do faster anyway. 2) Consideration 2 is ok, but avoid declaring your own delegates unless you \*really\* have to. I don't know why that is even a thing any more now that Action&lt;\*&gt; and Func&lt;\*&gt; exist. 3) Interfaces are usually the way to go when the method shape is the same, but the behavior and state surrounding the behavior can be different. Action and Func are great for "do a little stateless thing" (eg: a linq where clause), but often there are more complicated considerations. Maybe an "IPrintable" interface with a "void Print(int value)" would be more appropriate. Then the implementing class could do stuff like consider culture, maybe even deal with precision, etc, things that would be kludgy to stuff in an action or func.
&gt;You test private methods via the public method. I don't think this is always possible. Often times these private methods are just little utility things. Make them public static that accept an interface that represents the original "this". Then you can unit test them. Stupid crap like "does the path have a / at the end?" falls through the cracks without having tests for these "simple" methods.
go check out steven toub's activity on github for .net core. it's all over the place. high level, low level, you name it. dude knows everything about everything.
yea async void is evil. but with events, not much you can do without having something like a processing queue that the event feeds into, and have a whole other thing that processes those events... etc.
For bullet 2, it is useful when you want to use the visitor pattern and your func/action has multiple parameters, that way you can name them. For 3, in his case that may work nicely, but other scenarios where "I don't care how it happens, just that it does happen", interfaces may not be the best option. Obviously there is DI and IoC which can support those scenarios though, but it is good to have this in your pocket. The motivating factor is the same either way. It is a useful tool for maintaining the open-closed principle and observing separation of concerns. 
One thing I love using VS Code for is opening (but not developing) projects at work that require VS 2008. I get intellisense and all that jazz for quickly looking around the project without having to use that awful IDE. 
.NET has a set of predefined string formats possible ("N", "C", etc.), and it's not going to change anytime soon. In this case, you can create your [own format provider](http://www.csharp-examples.net/custom-iformatprovider/) and handle the specific cases you need inside the IFormatProvider implementation. 
Agreed, for this particular situation it is a little hard to say what is best because it is clearly contrived just to explain delegates. It is not the case that everything should be interfaces, it is not the case that everything should just be actions passed around. But i think it is probably safe to say that "enum dispatch" is a code smell.
Agreed for sure.
Curious about using Func&lt;T&gt; and Action&lt;T&gt; over a delegate, delegates have named arguments which is a big plus IMO, callers can't tell what args are with a func or action if there is more than one such as Func&lt;T1, T2, T3, T4&gt; 
Fair enough, that could be it. Still, in our world I wouldn't be surprised if it were true ;-)
Mmm. The only non-code file type I use it for is markdown. Other than that I use it for HTML, CSS, JSX, and even C# to an extent. It's a lightweight and snappy editor with lots of functionality. Given how easy it is to extend it there's also support for a lot of languages. For example, having IntelliSense for CSS is really cool. 
Currently building a tax preparation tool for crypto traders! [CryptoTrader.Tax](https://www.cryptotrader.tax)
Thank you very much! I will dig into Action and Func. Really appreciate the input.
Filtering by convention and configuration, and write everything in one expression: http://github.com/yugabe/MutatorFX. Also coming later this month: optimal DTO mapping with QueryMutator. üôÇ
you can earn alot of money with this, if its really that simple and you also provide support for other countrys
Action and func don‚Äôt let you name the method arguments
You pretty much summed it up in your assumptions. It's all about the [Open-Closed principle](https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle). tl;dr you should be able to extend the functionality of `PrintHelper` without actually modifying the source file. It should be open to _extension_ by adding new objects it can interact with, but _closed_ to modifying the original file.
Currently building an authenticator app which will sync to a local server (instead of online options) with the MIT license. 
If you need to keep supporting XP, then you need to keep using a toolset designed for it. If you really want to "modernize" beyond the supported toolset (Eg, WinForms and WPF), you are going to need to simply reanalyze how important Windows XP support is. The question is somewhat analogous to, in 2002, asking how to use .NET without dropping Windows 3.1 support. 
About to do some touch-up work on an animated wallpaper engine I've written for windows. Time to make it user friendly and I'll probably come across some things that deserve refactoring/optimizing along the way. 
You are right, Func, Action (and Predicate) are delegates provided by .net . But it's also right, that one cannot name the parameters (what is - in my opinion - but really a problem, because I think it's not usual to use them with that much parameters anyway)
Thanks a lot for your reply! You indeed made me reconsider some things. I will probably change the build to be a pay what you want item (and remove the demo item obviously) and lower the minimum amount of tip on the sourcecode item. Also thank you for pointing out that I don't really tell people about their right to redistribute the assemblies, I really just overlooked that. I am bad at that licensing and copyright stuff and I wish there would be a license text that just says "just don't be a jerk" or something. Indeed, my copyright notice has only about 25 lines or something and basically just says redistribute assemblies as you wish - don't redistribute source code - MIT disclaimer. I will implement some benchmarks soon and publish them.
I'm not sure of the answer to your problem but you can use FirePath to help debug your xpaths, if you're not already. https://addons.mozilla.org/en-GB/firefox/addon/firepath/
What's the meaning of DownstreamXXX and UpstreamXXX in ReRoutes?
Interesting article, as I have been confronted to the same problem for my game although we don't have the same requirement: I am using a data OP with my personal ECS framework so no need for circular references, my components are mostly struct and I can share them between entities but it might not be a bad idea to add this feature in some day. My main problem with existing serialization solution was that nothing could handle everything without some custom code and the types of graphic libraries we use are not always decorated for it - BinaryFormatter needs SerializableAttribute - DataContract, JSon, Xml need attributes and do not handle readonly properties - Protobuf needs attributes or .proto files - ect... (if you know of some magic solution I am all ears, currently the only limits of my solution are circular references, types need a default constructor and abstract &amp; interface types are not supported but I am working on this) Your solution seems to rely heavily on custom code from the user and do not seem to handle readonly fields/properties. This in my opinion make the usage of your api too complex. I used reflection to create custom generic delegates to serialize/deserialize complex types as they come through expression tree and ilcode generation to hide all that boilerplate and I believe you could win in simplicity doing the same.
Thank you a lot! I decided to go with a manageable amount of custom code to have a the amount of control over the serialization process I wanted. For read only fields you could probably implement a type serializer which does some sneaky reflection thingies to set those. I will certainly look into runtime il generation for reducing boilerplate, thanks a lot for the suggestion.
Done (-; [https://itch.io/t/288423/pay-what-you-want](https://itch.io/t/288423/pay-what-you-want)
Then make it public and move it to a utility helper class. You can either inject it or use a static class. The public method calling it should have tests to cover all the cases where it is used. After all, in this scenario you can't use the private method except through the public one. If it is a utility, then extract it. /u/dracanus is right, I think he/she are like me and prefer a classicist approach rather than the mockist style, but cant be sure.
Doesn't seem compatible with the latest Firefox unfortunately. &amp;#x200B; Thanks anyway :)
Enormous difference. What if you want to change the access modifier on a bunch of class members, but not all? Multi-line editing makes it much better. 
An designing a multiplayer party game in unity that gets its input entirely from a person's phone. The backend is in asp.net signalr and will soon be converted to asp.net core signalr. https://minigameparty.com/
&gt; writing high performance c# Do you mean "Writing High-Performance .NET Code" by Ben Watson? That's the only thing I've found with a similar name yet.
Sorry, I hadn't used it in a while and didn't realise they'd stopped updating it. Im sure there will be a similar tool around though.
Dunno yet. Gonna find any excuse to build more SignalR tech.
true. generally i find the lack of names to not be a huge issue though. if you're passing in 10 arguments, it may be a sign that that thing should be a class or some other logical grouping. i find it more annoying that i don't know what types a delegate accepts/returns just by looking at it. MyMagicDelegate formatFunction as a type gives me less information than Func&lt;int, string&gt; formatFunction. Have to look up the delegate definition. Just my personal preference. 
Not that related to c# but domain driven design is a pretty good book that every object oriented programmer should read ! Very good book, it changed the way i'm thinking !
I can't see any iframes in the page I've tested with. This seems to work okay driver.Navigate().GoToUrl("http://automationpractice.com/index.php?id_product=2&amp;controller=product"); SelectElement selectElement = new SelectElement(driver.FindElement(By.XPath("//select[@id='group_1']"))); selectElement.SelectByText("L");
This list of tutorials could help you in [Learning C#](https://reactdom.com/csharp)
Code behind is not a "bad thing", ReactiveUI is code behind binding for example.
I do. My boss and I had this chat a while ago and did quite lot of reading around approaches. Turns out I'm a classicist :D I'm also deeply against the current attitude of mocking in general. I've found most newer programmers no longer know what an interface is. They just see them as gateways to DI and mocking so I'm trying to approach code in a way that uses them properly when needed. I'm not entirely a fan of utility classes either but in the example above. If I had a piece of private code that, say, checked for a trailing / on a url. I might make an extension method or a general static one. A static method is a wonderful thing to unit test it you keep it pure functional. In this case an I put is sanitised and an output returned. Beautifully simple to test, no requirement for DI in this specific scenario. Like everything it is never a one fit all approach. Interfaces for mocking to me is making messy applications and becoming something of an anti pattern. Too many systems have interfaces that mirror a single concrete class and they only exist for DI and testing. 
WPF very complex? lol no.
Use MVVM, learn ReactiveUI and forget about that problems.
The general approach is to locate the mod directory via the "installed applications" part of the registry (or the documents directory, depending on the game), navigate to the mod folder, and swap directories by renaming the mod folders. However, being that this is a steam game, you may run into problems with syncing with the workshop.
Do named tuples work with Act/Func? If so that basically removes any reason I have against it. Personally I hate delegates
I appreciate that. I know the directories for both workshop mods as well as the local mods folder inside the game itself. So pathing isn't really the issue. However if I were to simply rename the mod folders like the workshop mod folder for instance to just mods. Steam would assume that the workshop mods folder was just poofed from existence, and create a new empty folder and proceed to redownload all my mods again. Rimworld likewise would assume the mod folder disappeared and recreate a new folder using a command like if (!directory.exists(@"rimworld/mods")) { Directory.CreateDirectory...... etc } Thing is I know the solution I described in the original post will work. It's just help with the coding that I need. Otherwise I could've posted in r/rimworld. Or maybe I should use a different language... Or perhaps there is an add-on for visual studio c# that supports copy paste style commands directly for directories,their names, and contents. Thank you for your time and consideration however!!! :)
The language won't matter too much, you're going to have to program your own detection and swapping process. However, IF you do it, you'll be praised quite a bit in that sub!
Anyone know of a Visual Studio theme that looks like the code examples? I love the font and colors
Sorry if Im misreading, but could you solve this with "Robocopy /mir"?
I think you're over complicating it mate. Just use PowerShell https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/copy-item?view=powershell-6
&gt; Is it possible without manually mapping out every single possible directory explicitly because if I do this they are bound to change and I will have to add to the programs code. Where are the mods installed. Are all the mods installed in a consistent 'mods' directory? If so you just need to recurse through all the subdirectories and duplicate each file out to another location. It's not very hard to do. This might help: [https://docs.microsoft.com/en-us/dotnet/standard/io/how-to-copy-directories][https://docs.microsoft.com/en-us/dotnet/standard/io/how-to-copy-directories]
 // } while (stream.DataAvailable); //byte[] amp = Encoding.UTF8.GetBytes("&amp;"); //if (client.Tdata.Length &gt; 0) //{ //Controller For API // if (client.Tdata.Span.StartsWith(Encoding.UTF8.GetBytes("GET"))) // { // Span&lt;byte&gt; sdata = client.Tdata.Span.Slice(4); // int delta = sdata.IndexOf(Encoding.UTF8.GetBytes(" ")); //sdata = sdata.Slice(0, delta); //API Build report template Columns //&lt;Parameter&gt; reportname: name of report to create or update //&lt;Parameter&gt; header: comma delimenated column names. //&lt;Parameter&gt; createnew: true/false to create or update the report //the below example will create a new Template Object with the format set to values passed to the header parameter //http://127.0.0.1/?reportname=DynamicReport&amp;header=field1,field2,field3,field4&amp;createnew=true // //the next example matches the existing report by name and updates the header to the new values passed // //http://127.0.0.1/?reportname=DynamicReport&amp;header=column1,column2,column3,column4&amp;createnew=false // if (sdata.StartsWith(Encoding.UTF8.GetBytes("/?reportname=")) &amp;&amp; sdata.IndexOf(Encoding.UTF8.GetBytes("&amp;header=")) &gt; 0 &amp;&amp; sdata.IndexOf(Encoding.UTF8.GetBytes("&amp;createnew=")) &gt; 0) // { // //string testing = Encoding.UTF8.GetString(sdata.ToArray()); // Span&lt;byte&gt; name = sdata.Slice(13); // name = name.Slice(0, name.IndexOf(amp)); // var header = sdata.Slice(13 + name.Length + 8); // header = header.Slice(0, header.IndexOf(amp)); // var screate = sdata.Slice(sdata.LastIndexOf(amp) + 11).SequenceEqual(Encoding.UTF8.GetBytes("true")) ? true : false; // TemplateInit(name, Encoding.UTF8.GetString(header.ToArray()).Split(','), screate, client.Client); // } // //API Add report data // //&lt;Parameter SET&gt; /?reportname=nameOfReport: name of report to add content to // //&lt;Parameter SET&gt; &amp;content=: comma delimenated column values // //example // //http://127.0.0.1/?reportname=DynamicReport&amp;content=1,2,3,4,a,b,c,d // if (sdata.StartsWith(Encoding.UTF8.GetBytes("/?reportname=")) &amp;&amp; sdata.IndexOf(Encoding.UTF8.GetBytes("&amp;content=")) &gt; 0) // { // Span&lt;byte&gt; name = sdata.Slice(13); // name = name.Slice(0, name.IndexOf(amp)); // var content = sdata.Slice(13 + name.Length + 9); // TemplateFill(name, Encoding.UTF8.GetString(content.ToArray()).Split(','), client.Client); // } // //API Query available reports // //&lt;Parameter&gt; "/?reports" : basic request to list available reports // //example // //http://127.0.0.1/?reports // if (sdata.StartsWith(Encoding.UTF8.GetBytes("/?reports"))) // { // var sbdata = "&lt;center&gt;&lt;p&gt;Available Reports&lt;/p&gt;&lt;table&gt;"; // foreach (var file in Directory.EnumerateFiles(Directory.GetCurrentDirectory() + "\\Worksheets\\", "*.xlsx")) // { // sbdata += "&lt;tr&gt;&lt;td&gt;" + Path.GetFileName(file) + "&lt;/td&gt;&lt;/tr&gt;"; // } // sbdata += "&lt;/table&gt;&lt;/center&gt;"; // client.Client.Send(Encoding.UTF8.GetBytes(sbdata)); // } // //API GET resulting report by name // //&lt;Parameter SET&gt; /?getreport=nameOfReport // //example // //http://127.0.0.1/?getreport=DynamicReport // if (sdata.StartsWith(Encoding.UTF8.GetBytes("/?getreport="))) // { // Span&lt;byte&gt; name = sdata.Slice(12); // BuildDataSet(name); // var len = new FileInfo(Directory.GetCurrentDirectory() + "\\Worksheets\\" + Encoding.UTF8.GetString(name.ToArray()) + ".xlsx").Length; // DeliverFile(client.Client, Encoding.UTF8.GetString(name.ToArray()) + ".xlsx", int.Parse(len.ToString())); // } // } //} //client.Client.Close(); // } // } while (true); //} //catch (Exception ex) //{ // Console.WriteLine(ex.Message); }*/ 
He may be but this is c # not powershell 
Most likely.
Writing code to sync directories is a lot more work than it might seem like up front. Frankly, I wouldn't recommend it to anyone when you can use robocopy to do all the heavy lifting for you. As another user mentioned, robocopy /mir will sync a source to a destination down to everything. It handles permissions, attributes, depth, you name it. It also has a rich and useful exit code numbering system to inform batch scripts or applications when something goes wrong or needs to be known. Really, you could solve this problem with a batch or powershell script. Even if this is part of a larger C# program, it would be much easier to go this route anyway and call it (or robocopy directly) using System.Diagnostics.Process. Then read the exit code to determine success / what went wrong. To manage all that syncing yourself will require re-doing what robocopy /mir already does: 1. build a list of files in both locations 2. create a list of src not in dest (or newer, or changed, etc), copy them 3. create a list of dest not in src, delete them (and maybe cleanup empty dirs) Easy to list, complicated to implement. C# can definitely handle it and for directory trees that are relatively small (hundreds not thousands of files) the built-in stuff works very well. Start with DirectoryInfo to find the search methods that will get you lists of files. That class also has a list of its sub directories you can use to recursively do all the same stuff all the way down the tree. For file copy/move/delete you can use the static methods hanging off System.IO.File or the instance methods on FileInfo. There's a good chance you'll find some existing code out there doing the same thing in C#. I think we've all attempted this at one point whether we'll admit it or not and probably even pushed it to github. If you get stuck, search around you'll probably find some code to get you unstuck. [Here is a SO link](https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/robocopy) to get you started. Just kidding. [Here you go](https://stackoverflow.com/questions/58744/copy-the-entire-contents-of-a-directory-in-c-sharp). Good luck!
Here is how we did it. You might have to compile via expression and create a request model as well. [http://codesdirectory.blogspot.com/2018/09/repodb-net-lightweight-orm-library.html](http://codesdirectory.blogspot.com/2018/09/repodb-net-lightweight-orm-library.html)
https://docs.microsoft.com/en-us/dotnet/standard/io/how-to-copy-directories
Why not just have another List&lt;PictureBox&gt; that contains only clicked stones? You can add the clicked stone to the clicked list in the Stone_Click handler and iterate that list in the Take_Click handler removing from the control collection, then clear the clicked list
Can you write in that link and then send to me ?
In your while loop you are adding all the stone to the stones list: Stones.Add(stone) In your take click event you have a for each loop that steps through all of the Stones list. Each step you are removing from that list. So when that for each loop has finished running it has removed everything. If your goal is to get rid of only the stone that you have clicked then get rid of that for each loop completely. You then need something to store which stone has been clicked on and only remove that. Can you tell me a bit more about any framework or namespace your using for this? Is this just a windows form project? 
Trying to build something that will automagically print all the certificates for a course I run. So far have gotten it to read all the student data from a text file and assign values to corresponding variables. Now I need to make it open and fill in values on a fillable pdf, and all progress has come to a screeching halt. Admittedly I only put maybe an hour of effort a week into figuring out this pdf thing. But the more boring admin stuff I can automate, the more time I could actually devote to teaching students. 
This hasn‚Äôt been mentioned, but I‚Äôve used it to much success with similar applications. This assumes that you want the directories to be EXACTLY the same at all times. Delete the local mods folder and recreate it as a symbolic link to the workshop mods folder. Then they will be the same folder at all times, and applications can‚Äôt tell the difference unless specifically written to look for this. At the command line: `mklink /D c:\fruit c:\apples\bananas\oranges` will create a symbolic link called fruit that points directly to the folder oranges. [More info](https://www.techrepublic.com/article/how-to-take-advantage-of-symbolic-links-in-window-10/)
This would just work with no maintenance. Compared to the other suggestions powershell,firing up robocopy from c# etc are all overkill. Good suggestion!
I use [https://regex101.com/](https://regex101.com/) every time I have to use regex.
Thanks! It‚Äôs a sweet trick I‚Äôve also used to physically relocate folders to other drives without having to deal with application reinstalling or limitations. For example iPhone backups are locked to C: (or used to be), so I symlink that folder for all users to another drive. iTunes has no clue. 
I have bch. of software systems, 1 year of experience in making mobile games as a game dev and 1 year of experience at being a support developer developing and supporting Webster ices, internal company website. 
Not a senior, just a guy who wishes to help
I use Regex Buddy. It's an app, but for security reasons, and offline work, it solves a lot of probs for me. I do have regex101 bm too :)
 @"\b.*?@.*?\b"
I like https://regexr.com/ more
what is the purpouse of the screen? can sounds be intertupted or have to play one after another in the order buttons were pressed?
&gt; have to play one after another in the order buttons were pressed? This is what I want to happen. 
This looks like something that might work while sticking to the original programming goal. I will try this the only question is will it keep the same names for each directory copied as the original (looking at the code I would assume yes just want to be sure :). )
Could you show me how you would code this? I'm a beginner so I really didn't get most of what you said, sorry. 
Thank you everyone for your big inputs!!! I will try the coding options first and if all else fails then I will resort to the powershell file link. ( As long as the source directories names don't change at all then this should work) I have worked on computers for years as a technician and didn't know you could do that :) I'm mainly a hardware win diagnostics type. I've learned alot from this post already! I'll be working on this today I'll keep you all informed. But I do want to stay true to writing my first program first. :) 
You should double check your switch statement. That's where your problem lies. 
debbugex.com doesnt have C# flavor but is close enough and the nest regex visualizer i've seen
I think Lynda was recently absorbed by LinkedIn and they offer a free one-month trial on all of their courses. I've been taking the C++ courses, but here is one for Game Design taught by Brenda Romero: https://www.linkedin.com/learning/game-design-foundations-1-ideas-core-loops-and-goals
At this point i would recommend you do some research for yourself, and come back with specific questions regarding the code. 
Be careful with your deletes. Remember, those folders are the exact same thing after that. If you delete from EITHER you are deleting from both. 
I see. Well I created the link and connected to steam for updates and it appears that steam found out about what I was doing with that link. Tried this first while I was letting visual studio update the link worked and everything was fine. When I connected back to steam however rimworld decided that it didn't like the /D link I made and deleted the link redownloaded the core mod and created the usual directory. I believe the copy paste all files and directories option is the only way to go. 
Something to remember about regex is that regex is a parsing language all in itself. There are lots of neat and ultra efficient tricks out there, but in our modern world of vast memory and extremely fast processors, a readable expression is better than an efficient and cryptic expression. Always follow the rule to get functionality complete before optimization (unless the solution is grossly bad). That being said, just learn as you go. If I've learned anything, and maybe this just goes for myself, cramming knowledge into my head leads to me forgetting most of it. Regular usage of a technology (or anything for that matter) is the most efficient way to learn something.
I've never seen that before. I don't exactly see what is special about this tool when I could just load another instance of Visual Studio or use C# Interactive. What is special about it that the IDE cannot do?
You did not test this. 
I did. Where are you seeing it fail? It's pretty straightforward.
Dot matches spaces... 
I recommend the tool Expresso, from Ultrapico. It's coded in c# and can help you to understand your expression with an handy analyzer. 
Not c# specific but [Regexr](http://regexr.com) is a fantastic resource
to have ui responsive, create a queue/list of sounds; the ui buttons will add sounds to the list and do nothing else; a separate thread would run in parallel and play whatever it finds in the list. maybe add a button to stop the playback - it would clear the list and abort the thread or somehow else signal it to stop the playback (if you need to abort currently playing sound, depends on its duration)
Yeah then I‚Äôd do a script that either robocopies the folder or a script that creates the symlink and run it when you go offline. Either approach would work. 
However, if you‚Äôre just itching for a programming project, you could write a service that watches the online folder and mirrors it to the offline folder as files change. 
‚ÄúClean Code‚Äù is always good reading regadless of language you use.
Also regexpal.org
I (twenty)second RegExr
yet another alternative would be http://regexstorm.net/
[Here}9https://docs.microsoft.com/en-us/dotnet/standard/parallel-programming/how-to-implement-a-producer-consumer-dataflow-pattern) are MS docs on the pattern. I have no idea why people can't just link resources.
[These](https://goalkicker.com/) are hit or miss, and not *real* books, but I've found them pretty useful.
I've used itextsharp in the past. My context was a multi page PDF document which held many invoices, so all the same document but different customers, invoice numbers, etc. Might not be the best for your context.
&gt;What is special about it that the IDE cannot do? I use LINQPad pretty much every day at work, usually with Visual Studio open on the other monitor. I primary use for it for the database-related functionality. You can add any SQL connection string and it will essentially create LINQ to Entities models for it, which you can then use to quickly write LINQ queries and dump the results into a nice, readable, and formatted data grid. You can also add LINQ to Entities or Entity Framework models from an existing assembly for use in LINQPad. This is really useful when you're doing something like creating some calculated properties on the models and want to see what looks like for a bunch of records at a time. Another nice feature is that you can also see the actual SQL that is generated and used for the LINQ that you executed. You can also write and execute normal SQL right from LINQPad, and usually faster than it would be to open the Server Explorer/SQL Object Browser window, find the server, populate the databases in that server, populate the tables in that server, etc. I also regularly use it for doing one-off scripting type of work, such as updating a set of records and stuff like that. &amp;nbsp; But if you're not doing much with with databases, I imagine that LINQPad will have limited advantages or benefits over the C# Interactive window does (other than just being lighter-weight). But if you're doing work with databases, then it's an amazing tool... I can almost always write a LINQ query faster than I can write a SQL query to do the same thing (probably simply because I do more work in C# so it just comes a lot more naturally to me).
Thanks very much, always looking for more efficient solutions.
Thanks very much, just tested this and it for the most part was fixed. When I ran the code it was answering one less vowel every time so I just added a +1 to my return count code xD
&gt; \b.*?@.*?\b I think the problem parent is pointing out is this expression stops matching at the '@' character. Try this input: &gt; foo@example.org Only 'foo@' matches and '@' is included in the capture. Then try this input: &gt; foo@example.org boo@example.org You'll get two matches: &gt; 'foo@' and 'example.org boo@' Not criticizing you or the pattern, just got curious myself and tried it. Agreed, btw, that the question isn't very clear. Maybe this is precisely all OP needs.
I just implemented this for the same reasons you stated. Take a look: https://github.com/qccoders/QCVOC (specifically [here](https://github.com/qccoders/QCVOC/tree/master/api/QCVOC.Api)) Key packages are Microsoft.AspNetCore.Authentication.JwtBearer and System.IdentityModel.Tokens.Jwt for the jwt middleware and creation/parsing of jwts, respectively. Take a look and feel free to ask questions. 
I would suggest identity server, free to use, makes jwt tokens etc
Regexcrossword.com
Thank you!
\&gt; I have no idea why people can't just link resources. I was mostly responding to that part. But, I have to admit... \&gt; I think pointing him to the docs is showing him where to fish. ... that I also agree to that part. My point was that just giving a link might not be enough. To stay in the same analogy it would be similar to just giving a man a fishing manual :smiley: To close that chapter, I think a good answer should contain both: a good general explanation and a few links to help point to the good direction. Point taken, I will make sure to add some links in my next answer. Have a nice day.
Maybe I'm just too familiar with using keywords but I really don't see why we want to chain these things together with continues like this. Also, `await` and `ContinueWith` actually behave differently, to the point where comparing them so simply for newbie may be detrimental to their understanding of async/await/tasks in C#: https://www.c-sharpcorner.com/UploadFile/pranayamr/difference-between-await-and-continuewith-keyword-in-C-Sharp/
This would make it O(m*n) rather than O(n). Slightly simpler, but worse time complexity. He could do a HashSet of vowels and do input.Where(i =&gt; vowels.Contains(i)).Count() and maintain the O(n) TC, but I wager that their a noobie and shouldn't be touching linq in the first place. (not sure if syntactically correct. On mobile) 
[https://regexone.com/](https://regexone.com/) The lessons are tied to exercises that unlocks only if you pass the current lesson.
Look like MathJax was meant for web browsers. They have documentation listed here https://www.mathjax.org/#docs
There's already [an extension for unwrapping Task&lt;Task&lt;T&gt;&gt;](https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.taskextensions.unwrap?redirectedfrom=MSDN&amp;view=netframework-4.7.2#System_Threading_Tasks_TaskExtensions_Unwrap_System_Threading_Tasks_Task_System_Threading_Tasks_Task__). I think I'd prefer using the in-the-box methods in this case vs. writing a whole new set of extensions. That said, I could get behind some updates to the async API, especially around `ConfigureAwait(false)`.
I'm glad that C# 8 will finally fix all this null craziness. Well almost all, there are some edge cases that it can't detect like plain array initialization. https://channel9.msdn.com/Blogs/Seth-Juarez/A-Preview-of-C-8-with-Mads-Torgersen https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/ 
Here's what the documentation has to say: https://docs.microsoft.com/en-us/dotnet/api/system.text.asciiencoding.getstring?view=netframework-4.7.2#System_Text_ASCIIEncoding_GetString_System_Byte___System_Int32_System_Int32_ See section "Remarks".
And how to can I create an if condittion in order to delete the stone if it's placed at a certain location in ***gameboard ?***
"a @ b" will give the match "a @" which I think does not fulfill OPs request.
[removed]
Here's a completely different approach, using word's content controls : https://stackoverflow.com/questions/36599855/how-to-insert-text-into-a-content-control-with-the-open-xml-sdk Content controls are in the Developer tab of the ribbon. This might be helpful if you take the time to look into this. At least I think this is what you're looking for. 
There are not "missing parts", it sounds more like "I like the Java API and I don't like `await`, this is how you can turn C# into Java". I don't understand why would anyone want to do this.
Thank you. &amp;#x200B; do you have any other alternative method() I can use? this one returns junk characters. in idea scenarios i need to obtain a text
var count = Regex.Matches(str, "[aeiou]", RegexOptions.IgnoreCase).Count; But this is just a joke. Please don't do this or people will hate you :D
Why, what does it do :D
Well, it gets the job done, but it's close to a 100 times slower compared to a proper solution.
Okay aha
Exactly the kind of feel I get from the article. Also, if you do need the map and it's various alternate versions, you can use the awesome Rx library.
Right mouse click project -&gt; *add existing file* *Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location); * returns the pathname where the currently executing assembly resides.
ForEach already exists in C#, but it is only available for lists (by design). Also, wouldn't you be able to achieve what Map does with Select? And maybe also what FlatMap does with SelectMany?
Getting FizzBuzz right takes quite a bit of thinking and, while a solution may be easy to memorise, the better ways usually indicate that person has actually gone through the whole thought process.
Although that article states: &gt; ContinueWith doesn't save any kind of state, the continuation operation is attached using ContinueWith run on the default thread scheduler in case a scheduler is not provided. &gt; &gt; await: when encountering this keyword the state is saved and once the task on which await is done completes its execution the flow picks up the saved state data and starts the execution statement after await. (Note: State is having detail about executioncontext/synchronizationcontext.). This is partially incorrect. ContinueWith does capture and restore the execution context, as does almost every call that executes work on some other thread. The synchronization context is not flowed (flowing the sync context has been recognized as a mistake by Microsoft, but they can't completely remove it due to compatibility). Async doesn't flow it either, really, but remembers it in the state that it uses when it resumes. The difference is a bit subtle.
..which can mean a 100 different things. I reckon OP wants either Encoding.Default or Encoding.UTF8.
I think you have misunderstood what ASCII is and what GetString actually does.
i wrote this little solution, i don't know if i misunderstand the parameters of the puzzle, or i am just stupid? [https://github.com/Drofzz/FizzBuzzGame/blob/master/Program.cs](https://github.com/Drofzz/FizzBuzzGame/blob/master/Program.cs)
I ended up using this since it seemed easier lighter weight than identity server 4, https://github.com/openiddict/openiddict-core and looked easy enough to ditch when microsoft added their own https://github.com/aspnet/Announcements/issues/307 as part of asp.net core 2.2
Removed: Rule 4. You'll have to make a legitimate attempt to solve the problem before asking for help.
Every time I try to do something extensive with tasks I end up spending more time worrying about details like whether I should use `ConfigureAwait()` or triple-checking that I've ensured there are no unobserved exceptions than I do on implementing actual logic. I like the idea of Tasks, but it feels like MS made fiddling with the low-level details part of the normal path.
A function called ForEach that does not iterate in any way is highly unintuitive. 
Not a learning suggestion, since my fav regex tool is already here (regexr.com), but just a tip. **Unit test your regex**. If you're not going to unit test anything else, at least unit test your regex. Regex are tricky, can fail in unexpected ways, and are many times buried in other logic/functionality that makes them time consuming to test in your app. Unit testing them let's you take them out on their own to make sure everything is hunky-dorey.
Figured it out, I have two Battle classes, one of them from a legacy combat system, and I put the abstract property in the wrong class! :P
When you say add it, do you mean including it with the solution? You should be able to just right click it in the solution explorer and click "Include in project." If it doesn't show up, then you may need to show hidden files first. The "right" way to get that path differs between the type of project you're working on as well as your target framework. If Core you should be able to get it from the environment variable, if standard I usually use CurrentDomain.BaseDirectory.
I love XAML. There is a Youtuber that has helped me out a lot with understanding XAMl. If you are interested, look for ‚ÄúAngelSix‚Äù on YouTube, and find his WPF playlist. From scratch, he developed a chat application running with WPF/C#, walking you through the whole process. I haven‚Äôt completed the tutorial, as I‚Äôm new to c#. I got to video #7 or so, and am currently using what I learned to develop. I do plan to continue when I am comfortable though. 
XAML sucks! Only noobs like it. Too bad, it won‚Äôt die anytime soon.
XAML kinda sucks but it‚Äôs lightyears ahead of doing layout with HTML and CSS. 
Xaml binding syntax makes me crazy! MS should replace XAML with simple XML syntax!!!
Thanks for recommending good youtube
Task&lt;T&gt; does not have any of these constructs. You are referring to the collection API but this post is a completely different topic: Async API. 
&gt; are not "missing parts", it sounds more like "I like the Java API and I don't like await, this is how you can turn C# into Java". I don't understand why would an Oh man, you are so wrong. I love `await`. I have have used it since its inception and also use it in Java, like every day.
&gt; ase vs. the extension you are referring to is `Unwrap`. However, `Unwrap` is NOT the same as `FlatMap`. `Unwrap` does not compose since it cannot receive any other function to be executed.
It's complicated at first, most people seem to find the learning curve steep. It is however, imo, super. I worked in winforms for years, the switch was hard for me as I could make winforms do anything, and it's hard to go back to neophyte again.
Thanks for letting us know. It's really good to get closure :) Nothing worse than "Ohh I fixed it". with zero details :)
WPF makes the easy things hard and the hard things easy. 
XAML the language is fine. XAML debugging tools are totally absent. In fact, most intellisense and discoverablity tools are also missing. Therefore XAML as an application developing tool is total crap. After many years of XAML, I never found a good way to debug what you code in XAML, so I never leveraged it. I used it as dumb HTML and did everything that dealt with memory, object instantiation and such, in C# because there were tools for debugging C#.
To keep in line with (IMO poor) LINQ naming, flatmap should be called SelectMany ;)
ASCII only covers 0-127 (from the days of Teletypes). Anything in the 128-255 range is either Extended ASCII, or one of the Code Pages from the DOS days. You probably want to use the UTF-8 encoder. Also - you should be aware that lower values in ASCII aren't printable, so trying to display them will not likely give you something reasonable. 
Yes, essentially, Select and SelectMany are Microsoft‚Äôs unfortunate names for what everyone else knows as map and flatmap. More generally, flatmap can be seen as a monadic construct but... I don‚Äôt find that very intuitive myself. 
Omg, for reports it's an amazing idea! Ty!
Amen to that :)
Not a problem. He is a hidden gem. He‚Äôs a successful business owner who is devoting a lot of time into teaching, for free. Seems like a great guy, too. He takes the time to respond to all comments. His accent is great, although sometimes hard to understand. He has one saying he uses, ‚ÄúI quite like that‚Äù. It took me ~3 listens to understand what he said. It gave me a laugh. Good luck.
The first image on your article irks me quite a lot as async does not guarantee parallel code execution and often times does not create new threads. The code won't lock your thread like just running running `.Result()`, but that's because the program may choose to do context switching instead for platform compatibility or for tasks it sees as simple. In some cases, the async keyword won't even run the code asynchronously if there is nothing asynchronous to call in the calling method.
Its too verbose, designer is abysmal. It can be only preferred by those who were scathed with early HTML and css. Things like CSS grid are super powerful and easy.
I love xaml. Much better than html in my opinion.
A tip to sanity-check something like this: in VS, either ctrl-left click on `Battle` in the class declaration `class GroundBattle : Battle` or put the cursor on it and hit F12. Then you can be sure you're looking at the same class the compiler is. 
Implement multiplication without the multiplication operator. Make a function that takes 2 integers and multiply one with the other one. Simple but if you want to make it right you have to get into the details of optimisation. I got enigmas : - You're a surgeon. You have to do surgery on three people but only have two pair of gloves. How you do it ? - (this one is a bit old) in the 80s/90s. You are out of a room that is closed by a door. In the room there is a light bulb. Outside are 3 switches. You have to find which switch activates the light bulb. You can enter only once. How you do it. Otherwise, you can check Euler project. A website that provides mathematical challenges. 
Like in the microsoft interop api? there is Outlook.TaskItem.EntryID
Super pedantic comment, but ForEach is available for any class that implements IEnumerable&lt;T&gt;, not just lists.
We can be C# together, OP. Let's hold hands.
You can, if you set everything up properly at the start, completely design a complex WPF UI without ever having to see XAML by using the design time data and the binding wizard. I personally really like XAML. It does take a bit of time to get into the mindset if you‚Äôve come from HTML/CSS. Also, MVVM can seem like it ties your hands at times. But once you realise you can basically use a service location pattern and just throw messages around it‚Äôs great. 
If you guys are using .netCore yes, that is doable
We've got a gem of a community member here, he actually answered his own question WITH DETAILS
Have you considered Newtonsoft's JSON.NET serializer? Ironically it's the best serializer I've found, which is hard to believe considering it's json-based. In performance, it is the fastest reflection-based serializer out there (it makes MessagePack and BinaryFormatter look like a snail in comparison), and the only things that beat it are serializers that require a bunch of boilerplate (such as protobuf), and even then it's not that much faster than JSON.NET's. I ended up going with JSON.NET for serializing super-large states (in excess of 1GB) due to how fast it is. Even Protobuf and Flatbuffers have issues at this size (protobuf is only meant for small objects and Flatbuffer's C# implementation requires the entire serialized state to be in memory prior to writing to a stream).
.net core should work look it up
Or just use vscode with dotnet core SDK.
In all the scenarios I've seen it used people have preferred the simplest solution which is easy to read, something where another developer 2 years down the line can look at and instantly understand the intent and how it works.
I couldn‚Äôt even count the amount of times I‚Äôve used F12 when going through someone else‚Äôs code. A total life saver. 
You could do something along the lines of a bowling card score calculator. You have a bowling card of 10 frames and what the person has thrown for each frame and you calculate the total score
You can check out Xamatin for Mac, alternatively Xamarin for IOS. You can also develop .Net Core applications on Mac in Visual Studio Code. . Net Core dont have GUI, so only suited for console and server applications.
Check what version of .net they use, it needs to support .net standard 2. Worst case, full VS community will run under emulation on the mac. Basically engage with your tutor, they will appreciate the effort ( unless they are one of a very small minority or bad lecturers, in which case come back here )
Don't count on being able to use .NET Core as others are suggesting unless specifically used by your instructor. Get a Windows license and either dual boot or emulate. 
I laughed more than I should, thank you.
Mono will also run under Mac. You should be able to use VS Mac and still do C# without even having to do .net core. It won't have WinForms though. Ask your professor if .net core is all right otherwise. Most curriculums I have seen are old anyways so this might not be an option even.
And !protected . &gt; ( Õ°¬∞ Õú ñ Õ°¬∞) 
A#1: No, C# is a language, you're a human being (if not an AI bot). It's impossible. A#2: No, you can't develop C#, AFAIK it's developed by people ant MicroSoft, so you probably need to be an employee at MS, but you can always provide them with suggestions, they listen to community. As you probably have noticed, honing English language skills before C# would be nice :D Yes, you can build your app on OSX for windows, it will have .NET Core runtime bundled with it, but if you wish to send him source code and then run it, he'll need .NET Core installed (which will take a minute or two if he doesn't have it installed on his machine). 
Sorry dude but that is horrendously engineered. Fizzbuzz can be elegantly solved in a one liner.
You can always explicitly state the name space for the class instead of adding a using statement at the top.
Are you sure? I am not referring to the foreach loop, but the ForEach extension method, which accepts a function as a parameter.
I only program in c# and I only use macs, so resoundingly - yes. You would do very well getting yourself Jetbrains Rider which has a free student license. Also, as said elsewhere here, the main implementation on Mac these days is .Net Core, however C# has been supported for a long time on mac via xamarin and mono. TL;DR - you have nothing to worry about
&gt;No, you can't develop C#, AFAIK it's developed by people ant MicroSoft, so you probably need to be an employee at MS False. It's an open source project on [GitHub](https://github.com/dotnet/roslyn) and they [take pull requests from outsiders](https://github.com/dotnet/roslyn/wiki/Contributing-Code).
And if you're getting taught winforms you need to make a complaint!
Dayumn, MS is really stepping up the game with open source
Or Mono. Or Docker containers. 
If it‚Äôs for a class, the prof is probably not using .NET Core, but rather the .NET Framework (v4.7). In that case you are better off with a Windows VM + Visual Studio. As thoroughly mentioned, if it‚Äôs .NET Core, go nuts.
Did you just wake up from a very long lasting coma or something?
.NET v4.7 != Mono and I would not use Mono on a Mac if it‚Äôs not .NET Core.
Real talk. Win forms was great when it came out, it now it is virtually deprecated. Arguably it‚Äôs good for newbies, but you will have a hard time finding it in the wild, aside from legacy apps at enterprise organizations 
If you're doing desktop UI, VS Community + Parallels is the route. If not, i'd suggest trying VS Code. I'll skip the VS Code/VS Mac/Rider pros/cons and just say... If the class isn't using .NET Core, that's most likely fine because you mentioned sending ***code*** to the teacher, not ***binaries.*** A bigger gotcha IMO would be the newer .csproj file format. You'll have to add `net461` as a target framework as well as hope the teacher has a newer version of VS which recognizes the new format. Assuming the teacher expects full "projects" not just source files of course. Here's a starter vid for VSCode: https://www.youtube.com/watch?v=71i5C0l4POw 
Or you can just a good laptop. 
The Mac still won‚Äôt have WinForms. The WinForms and WPF will remain Windows only when running on .Net Core
Nah, just 4 days, but I never knew that the language besides dotnet itself was open sourced too. There's so much going on dotnet world, I can barely keep track o.o
Bullshit. Win Forms is actually a great way to demo OOP + some UI concepts that are present in all UI frameworks like offloading work to a background thread and dispatching back to the UI thread. Win Forms is almost pure polymorphic OOP where you have a control tree and the controls override their methods like Paint. WPF (for example) is significantly more complex, has a markup language that is totally unrelated and hides any actual OOP that may or may not happen under the hood.
Can you compile with code yet?
That's cool if that works for you but there's more current stuff you can learn that through.
It has had .NET Core support for awhile.
Just it how?
https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp &gt; Released on 2/26/2016, 9:20:58 AM 
How do you mean
Into a .dll or .exe. Looks like you can based on the above.
I am not aware of any current stuff that 1. Produces GUI so people can be motivated to build their own programs like their own paint program for example. 2. Is easy and has enough know-how so they can Google their problems 3. Demonstrates that many OOP principles including composition, inheritance, polymorphism, sending events, subscribing and reacting to events, communicating between components, encapsulation. I taught Win Forms in my course and made sure to tell the people that they will not be finding a job with this but the course is supposed to teach C# - the language and general programming not a specific framework. It is totally different from teaching VB because VB will not make you a better C# programmer and Win Forms will in fact make you a better C# programmer compared to WPF (assuming just a month or two of using them)
I completely agree. I think async/await is super powerful but there are some many needless rabbit holes for someone who just wants to use async to fall in, it can make it very foreboding to approach using it. 
First VM suggestion I saw. Awesome solution to so many problems!
1. There are more ways to work with the front end in C#. In JS you manipulate the DOM, in C# the front end can be done many ways. 2. I learned JS quickly because I already knew C#. You should have no problems working in the other direction. C# lets you do A LOT more, so there is more to learn, but the core principles are pretty much the same, as is most of the syntax. 3. The more languages you learn, the more easily you learn languages. I know about 9 of them at this point and they're all starting to look the same. 4. It's WAY more versatile than JS... 5. no idea.. 6. C# can be used to program Android, Web Applications, Windows Apps, Console Applications, server-side programs, Unity 3D engine, and more... 7. God No. CSS is shit. Programming on desktop is SO MUCH EASIER. Got to go to work, or I'd finish this. But ya, go learn C#. It will make learning Java, C and C++ easier too, should you decide to go that route. Source: 35 years programming. Started on a Commodore 64 back in the 80's.
I think ctrl-click requires Productivity Power Tools? Or was that built into VS recently?
&gt; Is C# desktop applications are so different than pages' frontend? I don't understand the question &gt; Is C# relatively easy and learning it will be quick since I have a Javascript and a general programming background? It's easier than most other languages, although you will find some pretty big differences. c# is statically typed, so you have to say what type of variable you're dealing with, for example a string or a number and there are different kind of numbers. Flow control is pretty much the same. js functions are c# classes, roughly speaking. &gt; Is learning C# going to help me when it comes to web in general? If you're doing frontend, not much, maybe if you want to learn typescript. There are people pushing for frontend c#, but it will take at least a year to be more popular. If you're doing backend, yes, implementing server logic with a rich typed language will easily help you in bigger projects. &gt; Is C# as versatile as Javascript? yea, if you use the right libraries and use some tricks. &gt; How is WebAssembly doing? Are there uses for it? Can't say yet. &gt; Is there any other uses for C# when it comes to other platforms(Mobile, Desktop, Servers, Games...etc)? Mobile: Xamarin, Desktop: C#'s biggest strength Servers: ASP.NET Games: Unity and Godot Engine use C# &gt; Is C# GUI API or whatever it uses as frustrating as CSS(It was always the problem for me when it comes to frontend)? Not as much. You can create windows forms applications by dragging buttons around, it get's harder when you try to add buttons with code. &gt; Is there a future for C#? Is it going to die if happened and Windows died as well? C# is a really poweful language and the Microsoft team releases a lot of features. When MSFT changed their CEO in 2014, they became much more friendly to open source, for example with .NET Core you can run C# on Linux now. Now it's much easier to build servers with C#. MSFT doubled their market cap in the last 4 years, I think they will continue to grow and continue to improve C#. &gt; Is C# Ecosystem as big as Javascript/Node.js? Is there any NPM counterpart for .NET? Not as big, the NPM counterpart is Nuget. But you don't have to use as many packets as in javascript.
I've used JetBrains Rider on Mac before and it works great. 
If you target .Net Core you'll be fine.
1) C# desktop applications are different from JavaScript in the way that dividing code is not just "frontend and backend" (kinda meaningless outside of a server-client architecture), but there are different design patterns to how you group code that manipulates data, draws GUI, interfaces with devices, etc etc. 2) I would say if you grasp the stronger and static typing, yes. 3) Depends on how you use it - there is webassembly, asp.net, etc but they are not very wildly used. But if you use it, that depends only on you. 4) It's waaaay more versatile. 5) donno 6) With different frameworks (Unity, mono, .net core, .net standard) C# can be used on mobile, windows and linux desktop, and I think OSX. You can create server programs, client programs, games, standalone desktop apps (read not in server-client design), really whatever you can think of. It may be not the best tool for every job (nothing is), but it's capable of almost everything. 7) The ones I used are winforms (ancient but very straightforward and reliable) and WPF (modern but can be a bit tricky sometimes, uses a combo of C# and XAML so this might be the more sympathetic from a web background), both are infinitely less stressful to use than developing on the web. Sometimes it can be hard to find out how to do something, but once you do, it's usually easy to manipulate to your own liking and works very consistently. 8) Yes, there certainly is. 9) I think the closest thing is NuGet packages, and I can't answer your question about ecosystem size because I don't know mich about JavaScript's ecosystem.
Caveat with docker containers , in a Mac you can only run Linux containers . Full framework .net apps require either mono or windows containers.
C# is not a a place, it's a people
The same goes for Map/Select and FlatMap/SelectMany. Implementations with those names that are bound to constructs that are not sequences or lists and do not iterate at all are bound to cause confusion and misinterpretation. If anything, these implementations require a different naming convention to clarify their intent. 
.net 4.6.1 and mono 5.4 are both.net standard 2.0 compliant though. It will get you started.
We're using newtonsoft serializer at my job and although I concur that it is handy and reliable in most case (schema generation was horrible for complex object graph though), it still require attribute decoration for private members and it does not handle readonly properties. I want absolutely no boilerplate from the user (where would be the fun otherwise :p). I believe my solution is not too bad performance wise (at least the binary implementation, my text implementation which is some kind of pseudo json is not as important). I shall do some benchmark soon.
Or with Mono
Please don't call .Net Framework "full framework", especially considering .Net Core already has things that .Net Framework doesn't and is becoming fuller and fuller with every release.
I see people mentioning Parallels a bunch so thought I‚Äôd point out that VirtualBox is also an option. It‚Äôs free, not sure about Parallels.
It theory it should ‚Äújust work‚Äù but trust me man it definitely does not. Especially if OP is new to .NET, I wouldn‚Äôt have him using Mono and hoping it runs ok on the prof‚Äôs computer. Back in the day when I was taking into to OOP feat. Java, I was going strong in A territory. Submitted my final, feeling damn good about it. Ended up getting an F on it because it didn‚Äôt compile on prof‚Äôs computer. The lesson there is to test your code on another computer, especially if it‚Äôs a final... eh so maybe OP can just do that. 
For the private properties, a simple wrapper around the JSON.NET serializer/deserializer with serializer options is enough, but you're right about readonly properties which is surprising.
Yeah, if what the code is doing (or the error the compiler is giving) is impossible do this because what happened here (two classes with the same name) happens often and is responsible for most of the "impossible" behavior.
I agree with what you told him but i didnt know there were features only on core. Like what? 
So many errors in this article, I don't know where to start. First, at the beginning, it is shown that the way to start a task in C# is to do: Task.Factory.StartNew() That might have been true before `async`/`await` or the full TPL library was released (more than 5 years ago) but not the way to do it in 2018 (unless in very specific scenario such as using your own scheduler or synchronization context). If you had shown me that in an interview, it would already be a red flag. Of course, the correct way to do it is: Task.Run() See [https://blog.stephencleary.com/2013/08/startnew-is-dangerous.html](https://blog.stephencleary.com/2013/08/startnew-is-dangerous.html) for the rationale. Then pretending that `await` and `ContinueWith` are equivalent, just show that the author doesn't understand how either work. There are very different in their behavior and semantics. For starters, exceptions and task cancellation are handled very differently in both situations. Secondly, the state machine generated by the compiler doesn't use `ContinueWith` at all. So it's fallacious to pretend they are the same. Since the rest of the article use that false equivalence as a premise, we can eagerly reject it all. Last bit about task being non-composable, just because the author use a very obsolete way of creating its task and persists on using ContinueWith. But a little research literally one or two google queries) could have shown the author that `Task.Run` does "flatten" the task (by the way it is called *unwrapping*). Secondly, as other mentioned in their comment, you will never use a succession of `ContinueWith` in production code. With await you can very easily compose `async` methods together, in fact it was designed with that exact goal. My advice to the author: before pretending that they are "missing" parts in the API (there are some, but none that were described), do some research and learn how things work. A few pointers to go deeper into tasks: * Stephen Cleary blog as mentioned above: [https://blog.stephencleary.com](https://blog.stephencleary.com/2013/08/startnew-is-dangerous.html) * C# in Depth by Jon Skeet, chapter on asynchrony: [https://www.manning.com/books/c-sharp-in-depth-third-edition](https://www.manning.com/books/c-sharp-in-depth-third-edition) * Or maybe just the official documentation: [https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/)
One day my dream is to become a C#
Why is that? I've installed Mono and plan to start learning C# / .Net Core on my (Linux) workstation. I've been curious why WPF and WinForms are Windows-only; is there a technical reason they can't be brought into Mono? I don't really understand the difference between .Net Core / .Net Framework / Mono on a technical level (just from a project/license standpont).
Thank you all. I gathered enough info and I decided that I won't learn C#. Don't understand me wrong I lik**ed** and wanted to learn it long time ago but now that I have seen the state of desktop development, I will just stick to web development. Don't understand me wrong, C# is cool and it seems that it has many places in servers/UWP apps as well but to be fair, for servers there are already Node.js, and UWP apps don't seem that they have that much of demand nor love from users looking at internet comments. And for desktop, to be fully fair, it seems like it is really dying, first I don't see any interest at desktop for jobs in internet, second it seems like most of jobs are for web development, third there is a very strong competition out there, look at your desktop, do you see any applications from random companies? Not at all, there's Photoshop, Chrome, Firefox, Winrar, VSC, VLC...etc and it's very hard to earn a place in your computer just by some random company so yeah I really think desktop is dying and since it's dying(not to mention that I read that both winforms and WPF seem to be outdated and dying soon) I will just stick to web development. Sorry but my interest in C# is just suddenly is gone once I have heared about the state of desktop. Maybe I will learn it another time when I need to make apps for mobile or some games or maybe even UWP apps once they become popular. Thank you again for the help.
The only time you might want to use a `ForEach()` extension instead of the `foreach` statement is when each iteration returns a value and you want to "pipe" it to another method. In that case, there is already an extension method that applies to all `IEnumerable&lt;T&gt;`, it is called `Select()`. So there is no need for a `ForEach` method in the `Enumerable` static class.
.NET Client Framework too?
Not if you want to use the GUI libs. 
WPF is easier to learn, more powerful, and adheres more strongly to OOP concepts. No one should be learning Winforms, unless they're helping their employer update legacy software to WPF.
I disagree with your statement about OOP concepts but it is debatable. However I cannot understand how anyone can seriously claim this &gt; WPF is easier to learn
Multi-Caret is a complete swing and a miss. They barely changed it, and it's still light-years behind what you can do in VSCode's implementation. 
Rider still only does core on macos. Not sure about windows.
I agree with you. I'm a HS student (so, not a JS dev using only the latest SPA framework) and I found WinForms one of the easiest UI frameworks to "get started with", and even taught it to some of my friends. WPF and UWP have a steep learning curve, and even more so when you introduce the different ways "to do" MVVM, it's really easy to get stuck with rather simple concepts, especially in new frameworks like UWP, with poor quality tutorials. 
Span? .NET Core implements the latest .NET features now. They are added to .NET Standard vNext and then .NET Framework, Mono, and others follow. 
&gt; WPF is easier to learn LOL
It‚Äôs just a name , doesn‚Äôt imply that core is lacking anything. It was the name that the community choose for .NET Framework, I didn‚Äôt choose it and I agree that core had a lot of features and my goto. Making an issue over calling it full framework is being overly pedantic imo when no implication to .net core was intended. 
I don't see how async/await is related to parallelism. They are for asynchronous programming and they still work when you only have a single thread (like WebAssembly). 
Which would also be over-engineered...
Yea you can, no worries Microsoft is not Apple üòå
Not true, Rider supports Mono on macOS, which lets you build and debug full framework apps. 
That made me laugh haha ty :)
VS community edition running mono. You'll be fine.
Well, I wouldn't start a new project in winforms, it's definitely old and god knows how long will it be supported, the only usage is personal pet projects and working on already existing projects that would be too expensive to port (which is probably not the problem of a 15 year old for another few years). As far as I know since UWP failed to take off, WPF is ok and well.
That's what I was wondering as well. The whole blog reads like "I like C# async/await but I like Java's version better" (reads more like "I'm used to Java and don't want to re-learn for C# imo). Also the code you posted at the bottom is so much easier to read.
C# is soylent green!
I'm currently implementing a .net library for Ion which is a data serialization format (and superset of JSO N) https://github.com/dhhoang/IonDotnet . Ion is created by Amazon and we are aiming for this project to be used on several AWS products that support .Net. Looking for contributors ü§ó
.NET Core 2.0 implements .NET Standard 2.0 so it's safe (Same for mono 5.4)
\&gt;Can you be a C#? I don't think so. \&gt;Can you code in C# on OS X or MacOS? Of course lol.
[Pretty much everything that's being added to .Net Standard 2.1.](https://github.com/dotnet/standard/pulls?q=is%3Apr+is%3Aopen+label%3Anetstandard-api)
There's open source replacements.
Or just install Windows on the Mac and run VS. 
TBH being able to compile from my editor is the \#2 reason I use an IDE. \#1 is syntax highlighting and intellisense.
Yup . I do that for .NET Framework 4.7 apps. Just providing insight since an early post mentioned docker containers.
&gt; As with most things Microsoft, the naming schematic is confusing, underdocumented, and overloaded. I agree it's confusing. Why do you say it's underdocumented? If you think specific parts of the documentation can be improved, I'm sure it would be appreciated if you provided feedback about that. &gt; a name that Microsoft themselves have used repeatedly Thanks for those links, I have submitted PRs to correct the docs: [1](https://github.com/dotnet/docs/pull/7475), [2](https://github.com/NuGet/docs.microsoft.com-nuget/pull/1047). &gt; I think one can forgive people who call the ".NET Framework" the ".NET Full Framework" since MS Employees and documentation have repeatedly done so over several years. I can forgive people who use that name in casual conversation, like here. But I will still correct them, because I think if less people use it, it will lead to less overall confusion.
&gt; It‚Äôs just a name , doesn‚Äôt imply that core is lacking anything. "Ooui" or "Fody" are "just names" that don't imply anything. ".Net Core" and "full framework" do imply something about the size of that framework. With .Net Core 2.0 and .Net Core 3.0 on the horizon, both are confusing. The difference is, one is the official name, so nothing can be done about it. The other is an alternative name for something that already has a name, which is why I think people should stop using it. &gt; Making an issue over calling it full framework is being overly pedantic imo when no implication to .net core was intended. Even if you didn't intend it, I think there's a good chance people who are less knowledgeable about the differences between .Net Core and .Net Framework will read it that way.
Interesting read, I was thinking about getting to know Kubernetes a bit more for a while now. One thing that feels a bit omitted in the article is the comparison with Azure App Services, which I think are also a way to reduce the wastefulness of the resource utilization with the easy scaling possibilities.
Rule 3?
Xamarin, who makes Mono, tried for a while to bring WPF to other platforms, but eventually concluded that it was too complicated and not worth the effort. AFAIK, WinForms does mostly work through Mono on other platforms.
Everything should eventually support it. But right now, those APIs are on .Net Core only. Also keep in mind that .Net Standard 2.1 doesn't exist yet, those are just proposals.
I would say that C# is more versatile than JavaScript. It works almost everywhere. Game development, desktop apps, web apps, mobile apps, and there's even .NET for embedded systems. Personally I have experience with everything there aside from embedded systems. You may say that JS is also for game dev, and you may be thinking of UnityScript, which is deprecated in favour of C#. C# can be used in two of the big three game engines, Unity and CryEngine. C# is big in back end web. Not as big as PHP, but professionally, I think C# is pretty big there and as with the game engines, amazingly well supported. Obviously, it's also well supported on Windows for desktop apps, but Xamarin has done amazingly in extending that to other platforms, and is also why we have C# in Unity. Personally I find front end web a lot easier to design than WPF, UWP or any of the Xamarin GUI frameworks. CSS is pretty simple to get a nice result from, but you don't even have to do much CSS when you have Bootstrap. You can get a decent layout so fast that you can't really compare it with UWP, for example. 
&gt; Game development, desktop apps, web apps, mobile apps, and there's even .NET for embedded systems But isn't desktop development basically dead? What's the most popular jobs out there for C#?
companies(especially banks) still have apps that use winforms and maintain them or develop new ones
Not really. You can't replace everything with a web app - there are many apps that need to interface with the machine. I'd also say that game dev is desktop dev. In terms of job opportunities, web dev is probably better suited, but I wouldn't know.