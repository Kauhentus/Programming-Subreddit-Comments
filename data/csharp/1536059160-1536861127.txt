You have numerous options to do that, you could use mono, vs2017 for mac, rider from jetbrains, or even notepad just install dotnet core. 
Well then VS code does both very well 🙃
It didnt click with me you were showing 2.1. (yes, i know you tuped it :) ) 
If it's just console or web apps, then yes. If you get into desktop apps you'll need to run Windows on your Mac in some way. Only caveat left is if they're using features that may not work the same or don't yet exist (or never will exist) in .Net Core. Also, if you'll be using Visual Studio heavily and will be quizzed on it. VS exists for the Mac, but it's not quite the same. That said, **check with your instructor to make sure it's okay**. They'll need to have the .Net Core SDK installed, which likely isn't an issue for them, but it's still worth checking to make sure you're both on the same page. If they say no, get a cheap license for Windows (may be able to get it free through your school) and either dual boot it or virtualize it 
You can more or less keep up with visual studio for Mac so long as no WPF is involved at all. Mono is pretty much on par with net 471 iirc, save for a couple windows - only things like wpf
Cool! But, what do you do when you need to open this server? Do you install node together with your app? I know that I can pass data to static files to, but how much work do you need to install the app on the target machine? Do you have any public repo containing this practice? Thank you a lot!
Wpf and windows forms are supported on net core 2.1,though they are still windows exclusives. 
&gt; Is C# desktop applications are so different than pages' frontend? Yes it is kind of different, but not entirely different. If you compare SPAs (single page applications) with UWP many similarities can be made. &gt; Is C# relatively easy and learning it will be quick since I have a Javascript and a general programming background? It will be steeper in some ways and in some ways easier. C# is a language with very well defined rules and conventions so in that regard it is simpler once you understand the concepts. &gt; Is learning C# going to help me when it comes to web in general? Yes, I believe so. But since the only web framework is basically asp.net you will also perhaps miss some basic stuff that the framework handles for you. &gt; Is C# as versatile as Javascript? Yes and no. In some ways it is not as versitile but in others it is more versitile. The most obvious thing is the type system which will make a C# codebase almost always more structured and easier to grasp. &gt; How is WebAssembly doing? Are there uses for it? It's still very alpha, but it's coming along and the asp.net guys are really pushing the limits with the Blazor project. &gt; Is there any other uses for C# when it comes to other platforms(Mobile, Desktop, Servers, Games...etc)? Yes, ever heard of Unity 3d? Basically the biggest game engine there is. Also, you can run .net applications on basically any platform thanks to Mono and now the CLR for .net core. &gt; Is C# GUI API or whatever it uses as frustrating as CSS(It was always the problem for me when it comes to frontend)? I think CSS is much easier than XAML for example. But maybe it's because I have years of experience with CSS and not so much with XAML. But I can still figure stuff out but the community is much smaller and so are the resources for learning. &gt; Is there a future for C#? Is it going to die if happened and Windows died as well? Yes it is. It is one of the most popular programming languages and won't die anytime soon. It is also open source so even if the unlikely event Microsoft would shut it down it would still probably be continued. Do you really think Windows is going to die? It has been along for longer than you have and it still has about 90%+ of all the desktop installations worldwide. &gt; Is C# Ecosystem as big as Javascript/Node.js? Is there any NPM counterpart for .NET? I think there are more packages on NPM, but honestly there are probably a mainly a lot of shit packages that you will never use. Even if .NET has lesser packages on nuget, most of them are of high quality.
look at the call stack. If you can not find the window, then go to: debug -&gt; windows -&gt; call stack or press Ctrl-Alt-C
&gt; The synchronization context is not flowed... &gt; Async doesn't flow it either, really, but remembers it in the state that it uses when it resumes. The difference is a bit subtle. Would you mind explaining what this means?
This year my focus was on a C# library I named **SqlBinder**. I used it a lot in my current company. It's a free, open-source SQL templating library that helps you transform a given SQL template and a given set of conditions into any number of valid SQL statements. CodeProject: [https://www.codeproject.com/Articles/1246990/SqlBinder-Library](https://www.codeproject.com/Articles/1246990/SqlBinder-Library) GitHub: [https://github.com/bawkee/SqlBinder](https://github.com/bawkee/SqlBinder) It can be used alongside other tools such as Dapper, PetaPoco, EntityFramework etc.
&gt; For learning the code, just stick to console apps. Pretty sure you have not taught a programming course to average students. If your selection is top university students that might work but in a more average university or as in my case a non-university course if you stick to console apps only you will certainly lose a lot of them. Also how do you teach events in any meaningful way in a console app? 
Thanks for the detailed explanation on the difference between .NET Core and Framework. That helped me to make sense of it, much better than some blog articles I read.
Two different aspects here: • WPF has a much steeper curve than WinForms. OTOH, it makes larger apps much more manageable. • tooling for XAML is poor. Almost no refactoring, IntelliSense, suggestions. C# has way more editing aids.
&gt; VM I am in the same situation than the OP. I have a Windows 10 Virtual Machine on VMWare Fusion. 
&gt; When I ran the code it was answering one less vowel every time so I just added a +1 to my return count code xD Well, that was a mistake. The problem is that you don't run through the entire string; you stop one letter before the end.
I set one up on Azure. Took only a few minutes.
To sum up our opposing views here: - You're saying learning winforms is good because it teaches you a wider variety of things in an accessible way and has long term theoretical benefits - I'm saying I think it's preferable to focus learning on things which are still widely used because you still learn a lot and you also come our of it with a marketable skill I see your reasoning but I feel it's probably the difference between a student and a tutor's perspective.
To get students to do the projects they do in Win Forms in WPF I would need to double the time learning GUI. As it stands in my course we spent like 5-6 in class hours on GUI (unless you count learning delegates and events as GUI programming because I introduced this through Win Forms). I think switching to WPF would need minimum double that time. The projects for the end of the course were ranging from network chat (for the best students) to a hangman game (for those who didn't do well). Where I live WPF is not very marketable either. Most of the jobs are ASP.NET. I don't think WPF would make much difference in marketability. In addition the people who first learn something tend to stick to what they learn because in their perspective 3-4 months they spent learning it is a lifetime and they think taking a step back and learning something else is a big deal and they should stick with what they started. Of course when you get more experience you see it differently because you are doing it for years and a couple of months doesn't seem much. I explicitly tell them that Win Forms is not marketable and they must choose their own path and learn a framework on their own, most likely ASP.NET if they are looking for maximum employment opportunities. As I see them I liberate them from the GUI tool they used so they don't feel like they should protect their investment in it.
To add to what /u/initram said, you can also go back and reexecute the code inside the current method if you drag your cursor (the yellow line) to where you want. This doesn't work if you hit an exception, though.
Tools &gt; Options &gt; Debugging &gt; General I think you can try disabling `Enable property evaluation and other implicit function calls` and `Call string-conversion function on objects in variables windows` 
There's Visual studio 2017 for macOS.
Trying to mix open source UI libraries as a student in a college class can be a real pain in the ass and you will end up struggling more then the rest of the students. Of course it could be done but it will be more difficult because your code won't match what you learned in class.
If you don't want to learn to code, then it won't work, but that's really down to the students. I think events are something to be taught along with a UI framework.
You mean 7zip :P
Have you ever tried? Winforms is a mess. I don't know how anyone could possibly believe it was easier than WPF. 
Meaning Amazon is looking to make IonDotnet the officially-supported library for Ion-using AWS APIs? That sounds like a great opportunity for C#/OSS newcomers to get involved with a "real" project!
[removed]
And a rather pleasant experience, I might add.
Even .NET Core has a bunch of `PlatformNotSupportedException`s.
Yes this worked! thanks very much. Also while you're here do you mind explaining what the semi colon is for? I only know that you use it to finish some lines but not others. Is there an actual description for what it does?
Yea it did clear it up, thanks a lot!
Having the variable in the watch window automatically calls ToString to display the "value" column.
You can't separate multiple cases with commas like you suggested, but you can do something like this: case 'a': case 'e': case 'i': case 'o': case 'u': Console.WriteLine("this is just a test"); break; As long as there is no break statement, the other vowel cases will keep falling through until they hit the 'u' case, which will print the test line and break.
So is that as efficient as we can get it?
You can write all cases with the same handling after another switch(c) { case 'a': case 'b: //do stuff with both cases break; }
You could also use the C# 7.0 pattern matching and write `case char c when ARRAY_OF_CHARS.Contains(c): break;`
Definitely a matter of opinion. Here's a perspective from an ex C# spec developer: https://blogs.msdn.microsoft.com/ericlippert/2009/05/18/foreach-vs-foreach/ &gt; The first reason is that [the foreach enumerable] violates the functional programming principles that all the other sequence operators are based upon. Clearly the sole purpose of a call to this method is to cause side effects. The purpose of an expression is to compute a value, not to cause a side effect. The purpose of a statement is to cause a side effect.
Not exactly although that would be ideal. At the moment we have several teams at Amazon looking to support Ion format in the .NET-related products that they own and their members are helping with the library. Once it matured I don't see why other AWS Ion-using APIs wouldn't be able to take avantage of it.
Totally agree!
Yes, managed objects may be moved in memory, and thus references may change. However, the GC automatically updates all references to the new address, so normally this process is invisible. You run into this when writing `unsafe` code. To prevent unmanaged pointers from becoming invalid, managed objects can be "pinned" e.g. with the `fixed` statement, which tells the GC that the object should not be moved.
So liberal use of the fixed statement, when dealing with unsafe code, can potentially fragment your memory? 
So fixed temporarily prevents compacting, but once out of scope, compacting becomes a possibility again.
We have been making exciting progress on a yet-to-be-announced service: Review Spartan. Review Spartan helps software teams review and release code faster by reminding elected reviewers of the items that require their attention. Team members open pull requests that sit unreviewed (or reviewed then forgotten) for days at a time. This is not good because people and processes get blocked. People are dropping links in the team channel quickly so they can get back to other work. "Please review &lt;link&gt;!" You'll get to it... right? Review Spartan will send an actionable and informative message to your team's channel notifying everyone whose attention is necessary to move the review forward. &amp;#x200B; Currently we have integrated the following platforms: Code host: * Bitbucket Cloud Communication: * Slack In the future we plan on exposing metrics such as: * Top reviewer * Turnaround time (from opened to merged/declined) * Your suggestion here, maybe! Which you can use to fine-tune your review process inside and outside of Review Spartan! &amp;#x200B; The website is not live yet (web is hard for me, more practice needed!) but it be [https://reviewspartan.com](https://reviewspartan.com) one day soon(tm). Pricing is not decided yet. While I am open to suggestions I am actively working to find a price that I believe is fair. I am super excited about this product if you can't tell so please message me or respond here if you have suggestions, requests, questions, and/or if you're interested in propelling your team's code review process with Review Spartan!
This is all written on top of ASP.NET Core 2.1 so bleeding-edge stuff all the way! .NET Core has been mostly wonderful (a few hiccups here and there) and the team is lightning fast at responding to issues. I highly suggest giving it an honest try for greenfield projects.
The exception message says it already. Without elevation or admin rights you are not allowed to write to program files
I understand this point for Select and SelectMany (especially the latter), but what's wrong with Map and FlatMap? Those names are about as generic as possible.
According to post, it is already running as admin.
Duh. According to his detailed error message he gets Access denied. Check the first link. Imho the manifest isn't correct, or not in the output dir. 
Code?
Thank you, that was really helpful. 
A case statement is just a bunch of if statements in the back ground. The compiler is just saving the developer key strokes. See the I86 assembly: http://unixwiz.net/techtips/x86-jumps.html
\` public void Execute() { &amp;#x200B; &amp;#x200B; List&lt;Item&gt; lstTrans = Job.Items.Where(x =&gt; x.CID == 2).ToList(); var TransitionGroups = lstTrans.GroupBy(x =&gt; x.Number); foreach (var TransitionGroup in TransitionGroups) { var TransitionList = TransitionGroup.ToList(); //var TransitionList = TransitionGroup.Number.ToList(); Pick up here // TransitionList is now a list of transitions with the same part number foreach (var Trans1 in TransitionList) { [//MessageBox.Show](//MessageBox.Show)("You have " + TransitionList.Count() + " transitions. With Item Number: " + Trans1.Number.ToString()); // Get a list of transitions that does not include the current Trans1 var TransitionCompareList = TransitionList.Where(x =&gt; x.UniqueId != Trans1.UniqueId).ToList(); &amp;#x200B; &amp;#x200B; foreach (var Trans2 in TransitionCompareList) { [MessageBox.Show](https://MessageBox.Show)("Trans2 List: " + Trans2.Number.ToString() + "\\n" + "Dimensions: " + "\\n" \+ Trans2.Dimensions\[0\].Value.ToString() + "\\n" \+ Trans2.Dimensions\[1\].Value.ToString() + "\\n" \+ Trans2.Dimensions\[2\].Value.ToString() + "\\n" \+ Trans2.Dimensions\[3\].Value.ToString() + "\\n" + "\\n" + &amp;#x200B; &amp;#x200B; "Trans1 List: " + Trans1.Number.ToString() + "\\n" + &amp;#x200B; &amp;#x200B; " Dimensions: " + "\\n" \+ Trans1.Dimensions\[0\].Value.ToString() + "\\n" \+ Trans1.Dimensions\[1\].Value.ToString() + "\\n" \+ Trans1.Dimensions\[2\].Value.ToString() + "\\n" \+ Trans1.Dimensions\[3\].Value.ToString() ); } } } &amp;#x200B; \`
[Easier to just post the damn screen shot](https://imgur.com/a/ukuf14A)
&gt;or not in the output dir. like don't be an ass about it if you can spot the flaws in your own initial assumption. Dude chimed in with a reasonable caveat and you affirmed the possibility yet still manage to come across as rude.
There’s some good tutorials by Microsoft on how to get a Mac system up and running with code and compiling with dotnet core. You should be able to use the same code base on a windows setup.
pastebin.com == imgur for text
The Windows term is "protocol handler".
Thanks, I'm gonna do some search queries with that. 
[https://pastebin.com/jifcQ2rg](https://pastebin.com/jifcQ2rg) &amp;#x200B; Thanks never knew about that site. That look ok?
Yup, I always have a copy of the code I've been working with. Been doing it for 25 years now. You do need to make sure to scrub any corporate secrets. Also, don't go blabbing that you do this. Everyone does, but most companies have policies against it.
Not a snowballs chance. Even if I did add some relationships and tidy things up, the vendor would just as likely undo it during patch update. In a few years we're likely to move away from this product, but until then...I'm stuck with it.
Objects do get moved and the GC changes all the references to match.
Instead of using fallthrough, do the check in the switch expression. That is a lot more readable: switch (IsVowel(e)) { case true: break; case false: break; } Or if the result doesn't fit true/false, you can return an enum for the various cases: switch (IsNumberOrLetter(e)) { case TypeOfChar.LowerCaseLetter: break; case TypeOfChar.UpperCaseLetter: break; case TypeOfChar.Number: break; } &amp;#x200B;
I was just reserching this yesterday and now it given for me for free. Nice!
Add Authentication, and change the IP from loop back to your IP. &amp;#x200B; I program and developed this with the intent of local micro services so I can accomplish tasks faster, not so much deployment on customers. &amp;#x200B; I am not the best person to get practice pointers from, as I have a direct approach that doesn't rely on best practices or standards or frameworks. I tend to reinvent the wheel a lot, just so I can understand how the wheel works, and i am not content with just using something without understanding it the ideas that are implemented there in. &amp;#x200B;
Yep, I thought they were catching up to VSCode till I actually tried it. No undo select, no skip select, no perform command on selection while keeping selection, etc. Guess I'll keep copying the path to the clipboard and opening in Code when I need powerful multiline editing. That said, it's a lot better than VS's previous single-column implementation.
Upload them to git hub etc
I've added "gmdt.zip" to zipPath and i'm now getting "The file 'C:\\Program Files\\--Game\_Name--\\gmdt.zip' already exists." Ok i know, it tells me that the file already exists but i can't do anything since there's a problem with the extraction part of the program since it keeps getting me errors when it hits that part. Here's a update on the code for my program: [https://pearashi-servers.netlify.com/file-host/reddit-csharp-thingy.txt](https://pearashi-servers.netlify.com/file-host/reddit-csharp-thingy.txt)
i would still suggest my solution from your previous post
I’ve started keeping mine in tfs online. GitHub would be good as well!
Eh I'd opt for github over TFS Online. No reason to trust Microsoft with your source code.
Form.CheckForIllegalCrossThreadCalls = false; Try this in your form.
Can’t tell if bad troll, or really uninformed. 
LockWindowUpdate has always been my fave but have a look here: https://stackoverflow.com/questions/126876/how-do-i-disable-updating-a-form-in-windows-forms
River flow?
Gonna need some more info here bud.
TypeInitialization exceptions happen during the static class constructor. This includes static field initializers. Since the only static constructor activity occurring in this piece of code is the sqlConnection field, that must be where your problem lies. I'm not an expert in the myriad of ways that a connection string can be formatted but that doesn't look like a valid connection string to me and that's where I'd put my money as to the root cause of the exception. Try replacing the phrase "DataSource(LocalDB)\MSSQLDB" with "Server=(localdb)\\mssqllocaldb" and see if that helps.
I tried replacing it and while the data dump window popped up for a split second, It again threw this error An unhandled exception of type 'System.IndexOutOfRangeException' occurred in System.Data.dll , while highlighting this line of code, WriteLine("{0} | {1} | {2} | {3} | {4} | {5} ", dr["Id"].ToString().PadRight(10), dr["ItemName"].ToString().PadRight(10), dr["WhenBought"].ToString().PadRight(10), dr["Model"].ToString().PadRight(22), dr["Cost"].ToString().PadRight(22)); 
You've got 6 placeholders and only 5 data elements so that's at least one issue.
Hey thanks! It worked haha! That was a really silly error on my part! 
https://www.reddit.com/r/suicidebywords/
The window closes because the program has finished. Pause it with a “console.readline()”
Or don’t. You should be invoking methods on your if you’re doing things in a background thread.
That's what I'm starting to figure out. I'm having some issues with declaring the foreign key mappings manually, seems to work in all but one relationship. Going to discuss with someone else at work tomorrow and see if we can resolve it together.
* Add Console.ReadKey() as the last statement to wait for a keypress before terminating the program * Put a breakpoint on the last brace of the Main method * Run w/o debugging using Ctrl+F5 (it will auto-prompt you to press any key to close the window) * Run the executable from a command prompt outside of VS
Thanks so much! I had a question though, In my SQL database I have 5 different tables and i'd like to display the data of all 5 tables in the window, How can I go about doing that? Any tips or references?
Use a loop. Reddit isn't here to do your homework for you.
"Not" the same here. Remove all traces of where it came from. Put it on an encrypted external drive. Only look at it at home. Never tell anyone. (oops just did, sorry) The only job I haven't done this at was the last one - they had nothing I wanted to keep. Which tells you a lot. 
Your ShowTable method knows how to display the data from a single table named BEDROOM. How would you modify ShowTable to display data from any table? Likely your ShowTable method would have to accept a few parameters to tell it which SqlConnection to use, which table to query, etc. 
Are you single stepping by using F11?
Short answer: https://cpratt.co/async-tips-tricks/ Long answer: https://blogs.msdn.microsoft.com/pfxteam/2012/03/24/should-i-expose-asynchronous-wrappers-for-synchronous-methods/
Is there a good reference to see what gets evaluated in memory vs in the db?
Stephen Cleary has a lot of good resources out there and I would recommend his book on c# concurrency. 
Hey Googlebochs thanks for the response. Is EntryID a unique ID? If so then that is all I needed to know.
That’s not true async. It will block a thread while waiting. So I would call it multithreaded . Rather use a taskcompletionsource. This will only work if the underlying usb library has callbacks. If the underlying lib is not truely async you can’t really turn it into something async. Somewhere there will always be a wait which will block resources. 
The second link you’ve provided is amazingly useful for me. One question I’d wondered about for a while is how async methods actually work - sure, when we write async methods they often call other async methods, which call other async methods, but eventually we have to call a method which actually does the async work, and I’ve often wanted to ask how that works - but I haven’t really known how to word the question. The answer is right there in your second link: `TaskCompletionSource`. That’s something I need to go away and research some more. The link also directly answers OP’s question by straight away saying “don’t do it”, and then explaining with a great deal of clarity *why* it shouldn’t be done. A really great article which I’ve bookmarked for later reference. Thanks.
Beat me to it. His writings were a big help in me getting comfortable with async/await.
Have a look at some ‘switch’ statements.
I know how to use switch statements (probably should have mentioned that) but i was just wondering if there was a more effective way? Switch statements take a lot of space especially since im doing around 26 values
Something like this would work: Random rnd = new Random(); int choice = rnd.Next(1, 10); switch (choice) { case 1: Console.WriteLine($"You got {choice}"); break; case 2: Console.WriteLine($"You got {choice}"); break; case 3: Console.WriteLine($"You got {choice}"); break; case 4: Console.WriteLine($"You got {choice}"); break; default: Console.WriteLine($"You got {choice}"); break; } 
If you're doing something different for each of 26 values, you're going to need 26 differing pieces of code. The trick is eliminating duplication in that code by finding any commonality between the cases. For example, if each of the values has a different adjective in a printed message, all you really need are the adjectives: var adjectives = new[]{"cool", "crazy", "wild", ...}; ... Console.WriteLine($"You spun a {adjectives[choice]} number!"); Solutions to eliminating duplication is going to differ for each situation like this.
Google "Virtual audio device." 
One thing I do is to throw custom exceptions wherever I need (CustomerNotFoundException for example) and catch it via a middleware and create the response from there. Keeps the controllers clean and tidy and have exceptionhandling at one place. There might be better options, but it is working for me.
Is the result different all 26 times? Is it a random string generator you’re making? If so, the array solution the other guy suggested is the way you’d want to go.
They'll not that often compile to a jump table. For numbers that are decently connected (and enums), sure, but otherwise not. Switches are used a lot for strings in practice.
I remember seeing an open source world of Warcraft fishing bot that used sound as part of its process you could probably find quickly 
Nice, but these kinds of selective file transfers is exactly what PowerShell is for. 
I kind of stuck with what I knew, never had any experience with powershell. If it really is beneficial, I'll look into this as i'd like a 'watcher' on a folder and have this all automated. Currently its using WinForms and a GUI.
thanks for the help 
Take a look at [this StackOverflow post](https://serverfault.com/questions/194827/writing-a-powershell-script-to-copy-files-with-certain-extension-from-one-folder). It gives a most basic example as well as a recursive one should you also have to deal with sub folders. 
Does the C API expose async methods, or do you have access to its source code? Otherwise you may be out of luck for "true" async. I believe USB communication on Win32 works through file handles, so in theory all you need to do for async USB is call the right Windows API methods to obtain the handle and then construct a C#`FileStream` from it and use its usual async methods. But if all that is hidden behind the C API, there's not much you can do.
https://github.com/tanis2000/babbot/tree/master/source But I was not able to find the code that detects sound, or find anything about Fishing any where in the code or readme :-(
because Java
A good point! I will post it on SO if you donot mind?
Isn't this what was called pipelines? 
You should only catch exceptions you can handle. 
Hey man, I'm not exclusively looking for duplicates. I'm picking out duplicates of Items that share the same Item Number. Then comparing dimensions to make sure they are indeed duplicates. The item numbers are allowed to match only if the dimensions match. Otherwise it needs to be a notification for the user because if the Item numbers DO match but the dimensions don't, its not a true duplicate. Which is what led me down the nested loop path and using the .UniqueID path. 
I can't see the word stream poping out in the code except variable naming. This stuff should be called Async Enumerables not async streams. Even interface's name is IAsyncEnumerable. This is a cool feature though. 
https://github.com/UltimateFishbot/UltimateFishbot
One is to handle the exceptions one catch.
you\_were\_the\_chosen\_one.jpg
Because that’s what they’re described as in ReactiveX guides.
Async/Await is a C# language feature and implemented by the framework (mono, .net framework, .net core). It isn't a CLR instruction set. &amp;#x200B; the compiler converts your code into a statemachine as [https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation](https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-1-compilation)
Isn't that just the same as the following? Random rnd = new Random(); int choice = rnd.Next(1, 10); Console.WriteLine($"You got {choice}"); I mean, any path through the `switch` is going to execute the same code... Why complicate it?
if you are starting your app from VisualStudio then VS will need to run as administrator. Also ExtractToDirectory() does not overwrite existing files. If you want to overwrite you'll need to loop over the contents of the zip. string startPath = @"C:\Program Files\Test\test"; string zipPath = @"C:\Program Files\Test\gmdt.zip"; string extractPath = @"C:\Program Files\Test\"; Console.WriteLine("Extracting.."); if (!File.Exists(zipPath)) { ZipFile.CreateFromDirectory(startPath, zipPath); } foreach (var entry in ZipFile.OpenRead(zipPath).Entries) { entry.ExtractToFile(extractPath + entry.Name, true); }
What are the choices and where are they coming from? Are they funny quotes (strings)? Are they picked from an existing list? What are you trying to do with them? If you simply have a list of existing choices, you can simply generate a random number from 0 to the array length and then return the choice contained at that index in the array. If you're just printing funny quotes (or whatever), then you'd just need an array of strings and a print statement (since I'm pretty sure you can embed the random number generation in the print statement if you really wanted to).
I've learned csharp by messing around with it so my understanding of it may not be ethical but all my hundreds of apps and bots work just fine lol... here is how I async: 1. start with the class design public async Task&lt;bool&gt; SayHello (string name) { // here I'd call an async function/class or whatever await AnotherAsyncClass(DataTable dTable); &amp;#x200B; // here I'd call a none-async function/class or who cares await [Task.Run](https://Task.Run)(() =&gt; { new Utilities().SpeedyG(null, null); }); &amp;#x200B; return "hello csharp"; } 2. check out this link for a very good answer to the async thingy: [https://stackoverflow.com/questions/17119075/do-you-have-to-put-task-run-in-a-method-to-make-it-async](https://stackoverflow.com/questions/17119075/do-you-have-to-put-task-run-in-a-method-to-make-it-async)
What about sometimes 'Y'?! case "y": if (random.Next(100) &gt; 50) count++; break;
This is definitely the kind of help I appreciate as a learner. Most of the time if I have to come ask a question it means I couldn't figure out the correct terms to look for to find the answer on Google. Sometimes I find the answer and just don't get it, but then the question would be a lot more specific.
I have searched and searched. I created the data model from another application where I had EF generate the model for me. its a simple little table with about 8 columns. anything cab be null except for the ID of course. I specified in my model the data annotation [Key] on ID. just banging my head. He refuses to allow me to do a Code-First migration. does not trust it.. (seriously....) Oh, and I refust to prefix all of my properties with the table name.
I love code first migrations but it took a while to find the right workflow. Can you put the code on GitHub and I'll see if I can have a look?
I will need to break it apart, its 8 different projects, 1 of them is a Common project that contains all of my Models and interfaces. the code is really disorganized as I have been taking over this mess and making it cleaner. it'll be a a bit (if I do not figure out the issue first)... I will also need to scrub some stuff from web.config where I have our cloud APIkey stored...
No worries. I think if you just push your data and common projects I can just review the DBContext and model setup.
powershell also has its own IDE, at least in windows 10 fyi Windows Powershell ISE 
Since this is probably a commercial project i'd suggest using BitBucket rather than Github (unless you have a paid account) since the code will be public if you use a free account - With a free BitBucket account you can create private repositories and not expose your code to the world
Not at all.
Never heard this referred to as pipelines before, but now that [pipelines are also a thing](https://blogs.msdn.microsoft.com/dotnet/2018/07/09/system-io-pipelines-high-performance-io-in-net/) that would seem to confuse matters even more.
Here is an example of what i mean...if you need some example code of building an assembly with Roslyn rather than using CSharpScript.Evaluate to do the same thing PM me and i'll knock up and example. [https://www.dropbox.com/s/z5an83xelkqsjqh/ConsoleApp1.rar?dl=0](https://www.dropbox.com/s/z5an83xelkqsjqh/ConsoleApp1.rar?dl=0)
Oh so it's another async stream thingy? This is getting complicated.
Newtonsoft.Json - i'm still amazed that MS haven't assimilated this library somehow it's everywhere
Apologies for the deleted comments - had an idea - posted it too fast, tried it - broke it. Idea was basically only including Microsoft.CSharp as a reference when you compile , but some base stuff still appears to be available that i wasn't expecting - I'm confused at the moment and not sure if it's a Visual Studio thing - if you delete EVERY reference from a Console app you can still use System.IO.File and it will build - I was expecting that was in System.dll
Makes a lot of sense to me. Small change -&gt; Add optional parameters to methods or create new methods. Big change -&gt; New API version
 If your choices actually do something different (like if you get a 1, you win a car, if you get a two, you lose $500, etc), you could do a super simple object model for your choices, and then just spin and return off of that. If you want to add more options, just create a new class, it will automatically handle all of the ranges and results for you. &amp;#x200B; I tried to keep it as simple as possible: [https://gist.github.com/Dispersia/4090d8ba51112272088aed9b28da4f16](https://gist.github.com/Dispersia/4090d8ba51112272088aed9b28da4f16) If all you're doing is printing a message, this is obviously over kill, and there is more you could do (automatic detection of options based on IWheelOptions), but that's a bit more advanced.
&gt; There are only two hard things in Computer Science: ~~cache invalidation~~ asynchronous programming and naming things. This is both.
You can use GDAL or Proj4 to transform coordinates between coordinate systems. I think GDAL uses Proj4 under the hood. Both have .Net bindings. However, IIRC, each UTM zone has bounds on which latitude/longitude ranges it can contain and they cannot overlap. In other words, you cannot convert just any longitude/latitude pair into a particular UTM zone.
Looks interesting. I haven't read the whole post yet so I have probably done something silly ;) I downloaded the sample and when I run "docker-compose up" it asks me for a project. (Docker is fairly new to me and I'm only running the "Docker Quickstart Terminal") Attaching to dotnet_watch_docker_example dotnet_watch_docker_example | watch : Could not find a MSBuild project file in '/app'. Specify which project to use with the --project option. dotnet_watch_docker_example exited with code 1
I'm truly shocked you aren't charging people £3,000 to read this article then vanishing keith, after all this is what you do to "clients" you agree to do work for, isn't it? 
 Are you on windows? If so, you may need to share the drive. The volumes: is what allows it to point from the inner docker container directory to outside, so it can see your files. If on windows, right click your Docker &gt; Settings &gt; Shared Drives, and choose whatever drive you're running in. Otherwise, windows security doesn't allow docker to see outside. &amp;#x200B; If above doesn't work, are you using docker, or docker toolbox?
You can add a constructor to your page model, and inject the UserManager there.
I dont like @inject in views, just use your controller/pageModel for that
Probably you should not use Manager classes either in the view. Managers provide a model. The model should be complete once rendering starts. It is sometimes preferable though to inject certain configs this way into the page's view.
`mscorlib` cannot be excluded from compilation, it contains required types like `Attribute`, `Boolean`, `Int32`, `Type`, etc. -- but you can replace it! I've done this in the past to use the C# compiler to output optimized instructions that can then be transposed to other languages/runtimes. (Example: using C# to generate JavaScript code.) Replacing it with your own mscorlib implementation isn't hard. I think there are ~12 or so types that MUST be implemented and you can provide whatever other types you desire. For example, you could implement your own library and ask extension/plugin authors to build against that (via NuGet or whatever). But in order to run that compiled code, you'll need to patch the assembly (or dump and patch the IL) or take on the work of ensuring type forwarding at runtime to the appropriate runtime types (.NET framework or .NET core mscorlib types).
Cool, thanks! :)
I'm not aware of any good lists.. EF will log a warning, or you can configure it to throw an exception, when performing in-memory evaluation: https://docs.microsoft.com/en-us/ef/core/querying/client-eval
Why would you call out to Javascript to do math? What are you doing that it doesn't make sense to use built arithmetic or System.Math?
Recently I have preferred using VSCode to edit PowerShell scripts.
I need MathJax to convert LaTeX math into MathML and SVG.
All it is doing is doing is picking a character for me to play at random. There are 28 characters therefore I have 28 values. I have already created this and have done so using the switch statement. 
&gt; How does everyone separate and organize their work? I create folders within the solution and then organize files/classes within the folders. &gt; Do they make separate files for each class, and then reference them from the Main.cs file? Usually but depends on the size of the class. E.g., if I have a bunch of small data model classes I might put them all into a single file named Model.cs. &gt; Can I have the same namespace in each file, or should it be different? You can and should, usually. Namespaces are just like folders - they're merely a convenience to help organize classes. Think of them as name extenders - You can have two classes named Dog but as long as they're in different namespaces you're good because the actual full name of each class is something like Namespace1.Dog and Namespace2.Dog. &gt; How would I reference a file that is in a subfolder in the entire package? You don't reference files, you reference classes &amp; structs. If they're in the same namespace, you just reference the class name. Doesn't matter where the physical file is located as long as it's part of the project file. If they're in a different namespace, you need to reference that namespace by adding a "using namespace" statement at the top of the file.
can directory.build.props do other properties, like version?
Yes. In VS 2017 Enterprise edition, you can use intelli trace to do time travel debugging .. [https://docs.microsoft.com/en-us/visualstudio/debugger/intellitrace?view=vs-2017](https://docs.microsoft.com/en-us/visualstudio/debugger/intellitrace?view=vs-2017)
UPDATE: I have already completed the program using switches, however I'm still open to new and faster methods. Thanks to all who commented for the help!
Code sample, which could be on the github, but you want to have some sample code that you're specifically saying to look at. Preferably in several languages. (C#, SQL, Javascript, and HTML are all good.) 
I guess the question is, does it have to be in JavaScript? Have you looked for libraries that could convert LaTeX-&gt;MathML and/or LaTeX-&gt;SVG that are native in C#? Because this sounds like the XY problem.
If I showed you our databases you would do 1 of 2 things. Laugh, or die of laughing. depends if you have asthma. ... some tables have 400 columns and are named "Options1, options2, options3, options4.... you get it. ZERO relational. I told them, PLEASE let me design this stuff, lets stop doing things "The way its been done" and start doing it right!!!
You may want to check out and study the project structure [https://aspnetboilerplate.com/](https://aspnetboilerplate.com/). It's pretty great to use if you plan on building a massive enterprise level web application. But even if you're not building something so large, it would be useful to understand it in terms of how to architect even smaller systems.
recursion. public class TypeWheel { Random rnd = new Random(); IEnumerable&lt;int&gt; RoV = Enumerable.Range(0,28); public int SpinTypeWheel() { if(7 == rnd.Next(RoV.Count + 1)) { //code } SpinTypeWheel(); } } 
You can also make it default using Visual Studio itself as described [here](https://developercommunity.visualstudio.com/content/problem/28056/vs-2017-still-uses-packagesconfig.html). Basically, go to `Tools -&gt; Options -&gt; NuGet` and you'll see the relevant settings to turn it on by default. I prefer to have the default as 'PackageReference' but I also enabled the option to ask which format to use. 
Keep in mind that, as far as I know, it only works with the new SDK .csproj format (the default project format for .NET Standard and Core projects).
Oh man, I don't know why I didn't think to look for this. Having it ask what format to use for the first package is extra useful, thanks a lot!
What type of c# projects have you been building? You need to know what you want to accomplish. There is so much you can do with c#
That’s a really great idea, will keep tabs on this when I feel like pulling out of the crypto game.
I built a replacement for Requestbin. Really loved that service but it had issues with abuse and is no longer supported. You can stand up your own instance but I though I could take a stab at it the way I would want to build it. https://tracehook.app will assign you a unique url to post to and inspect the contents of the post. Also supports Get/put/patch/delete. I’m not sure how many others will find it useful but I need it pretty often since I work with a lot of Rest based webhooks. Would love some feedback!
Performance. Right now using IEnumerable with async is incredibly expensive in terms of the number of objects that are generated. And you can't inline functions across `await` calls. With the IAsyncEnumerable you have two loops. The inner loop that looks like a normal IEnumerable with all the performance that entails. Only when you actually run out of data do you move to the outer loop and make an `await` call.
I'm still watching the video but I don't want to wait 55 min to comment. NN without back propagation is something that you invented or you discovered It somewhere (papers, project, whatever) ? 
Why can we roll 0s?
Because of the while condition, you roll till you get the sum ==2 so when it rolls 0 and 2 the sum between those is 2 so it exits. Try to change the condition to make it work.
Oops, simple mistake haha. I've fixed it
ahhh okay that makes sense, thank you very much XD
Think about it ....
I'm doing something similar, probably in the wrong way but whatever. - Using Nil.Js to run the javascript - Binding one by one all missing object and functions
I personally tend to use while (true) {.. } and break to break out when the condition is met. I guess its a matter of style &amp;#x200B; while (true) { dice1 = [rng.Next](https://rng.next/)(0, 7); dice2 = [rng.Next](https://rng.next/)(0, 7); Console.WriteLine($"You rolled: {dice1} and {dice2}!"); if (dice1==1) if (dice2==1) break; } &amp;#x200B; imho this is clearer to read once you get more complex exit conditions.
https://pastebin.com/jARfTCw5
I could use [WPF-Math](https://github.com/ForNeVeR/wpf-math) to convert LaTeX math into SVG but I could not find any library for MathML.
wow this is fantastic thank you so much! 
https://archive.codeplex.com/?p=latex2mathml ?
Surely if you can't roll 0 then it should work?
Ye I fixed it already
half of your usings are not called for
I know this is a little off topic but please name your variables better. For example "noa" should be "numberOfAttempts" this will make everything more readable one your code base grows! Including for people reading it.
They are standard. They are just there when I load up a new project :)
Okay thanks for the tip :D
Streams has become the preferred term for these frameworks. Akka streams Java Streams, etc. You'll be delighted to know the .Net "replacement" for the io.stream is [System.IO.Pipelines](https://www.nuget.org/packages/System.IO.Pipelines/) so we're ok now :)
Can you please add this comment direct in the artricle on InfoQ. Thank you!
Its not even binding once actually which is weird. On the first data row, it throws an error: &amp;#x200B; &gt; at System.Collections.ArrayList.get\_Item(Int32 index) &gt; &gt; at System.Web.UI.WebControls.GridViewRowCollection.get\_Item(Int32 index) &gt; &gt; at SDWise.Management.Events.Default.ItemsGrid\_RowDataBound(Object sender, GridViewRowEventArgs e) in C:\\Users\\lcyduh\\Documents\\Visual Studio 2017\\Projects\\lcyduh\\Management\\Events\\Default.aspx.cs:line 42 &gt; &gt; at System.Web.UI.WebControls.GridView.OnRowDataBound(GridViewRowEventArgs e) &gt; &gt; at System.Web.UI.WebControls.GridView.CreateRow(Int32 rowIndex, Int32 dataSourceIndex, DataControlRowType rowType, DataControlRowState rowState, Boolean dataBind, Object dataItem, DataControlField\[\] fields, TableRowCollection rows, PagedDataSource pagedDataSource) &gt; &gt; at System.Web.UI.WebControls.GridView.CreateChildControls(IEnumerable dataSource, Boolean dataBinding) &gt; &gt; at System.Web.UI.WebControls.CompositeDataBoundControl.PerformDataBinding(IEnumerable data) &gt; &gt; at System.Web.UI.WebControls.GridView.PerformDataBinding(IEnumerable data) &gt; &gt; at System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewSelectCallback(IEnumerable data) &gt; &gt; at [System.Web.UI.DataSourceView.Select](https://System.Web.UI.DataSourceView.Select)(DataSourceSelectArguments arguments, DataSourceViewSelectCallback callback) &gt; &gt; at System.Web.UI.WebControls.DataBoundControl.PerformSelect() &gt; &gt; at System.Web.UI.WebControls.BaseDataBoundControl.DataBind() &gt; &gt; at System.Web.UI.WebControls.GridView.DataBind() &gt; &gt; at SDWise.Management.Events.Default.LoadEvents(Int32 pageNumber) in C:\\Users\\lcyduh\\Documents\\Visual Studio 2017\\Projects\\lcyduh\\Management\\Events\\Default.aspx.cs:line 35 &gt; &gt; at SDWise.Management.Events.Default.Page\_Load(Object sender, EventArgs e) in C:\\Users\\lcyduh\\Documents\\Visual Studio 2017\\Projects\\lcyduh\\Management\\Events\\Default.aspx.cs:line 21 Here's the RowDataBound event: protected void ItemsGrid_RowDataBound(object sender, GridViewRowEventArgs e) { if (e.Row.RowType == DataControlRowType.DataRow) { var btn = ItemsGrid.Rows[e.Row.RowIndex].Cells[1].Controls[0] as LinkButton; btn.OnClientClick = "return confirm('Are you sure you want to delete this event?');"; } }
Yes, agree. Absolute will work for a client library in c#. Also will be good to add it in the clients from different languages if possible. But on the API level the only way I know is adding this data to documentation and/or release notes
Maybe that btn declaration isn't pulling back data. Calling Cells[1] or Controls[0] could be OutOfRange should those collections be empty. I'd start there based on the stacktrace.
Question is why is it empty... Given the grid markup, those columns should absolutely exist AND have controls in them...
Using docker toolbox (Oracle VM VirtualBox) on Window (not pro). My project files are on d. Colleague suggested using a command for sharing/mounting the drive because its toolbox: npm install docker-share --global docker-share mount --transient D:/ --name d It starts and I can attach. I set a breakpoint and it showed as "unverified breakpoint". I've got some actual work to do so can't check more for the moment :D 
True but the alternative, maintaining an ever-increasing API, sounds worse. Without refactoring new feature requests and bug fixing will take longer. Probably something you should discuss before the project starts.
I see that your project is called "Inventory", which is the same name as one of the tables you're referencing, and therefore the underlying class created by the Entity Framework. This is very likely causing a naming collision. When your XAML and C# files are auto-generated, they use the name of the Project as the default namespace. If you look at your MainWindow.xaml, you probably see something like `&lt;Window x:Class=Inventory.MainWindow`. I would suggest going into your MainWindow.xaml.cs file, right-clicking the namespace "Inventory", selecting the Rename option, and calling the namespace something else. This should clear up your issue.
Ohh duhh im a dumb dumb. Thank you. Also need ids in the inventory table to have my associations. Just realized. 
Currently building a dentist clinical manager for my wife. The main idea is the optmize the jobs of the secretary so, this is some main requirements i'm working on: * Patient schedule and doctor agenda. * A patient confirmation message (SMS and Whatsapp), the system sends a message to patient 1 day before the scheduled attendance day to warn that it's close to the day that is scheduled to patient come to the clinic. * A cloud based treatments records, so the patient owns his medical records and can share it with others doctors. * Financial manager, payroll manager, graphs, etc. &amp;#x200B;
Could be the data being pulled in? Truthfully, it's hard to say because the code looks good, but that seems to be the sticking point for me. Try setting items to a static list before calling DataBind and see what happens. That will at least eliminate data as the cause.
If you comment out the code in RowDataBound, does it display the expected number of rows?
Having behavior in attribute is rare, but as long as the intent is clear, and the behavior simple I’d say it’s better than externalizing the behavior just for the sake of keeping the attribute “pure”. For instance the Authorize attribute in asp.net also contains logic.
Sure. 
I just tested it out with two cases that have been teasing me, and it seems to work. Thank you so much for this kindness. I'm still going to have understand how it even happens, but northing and easting coordinates seem to align with what we're expecting.
Log calls, most likely.
Having the logic in the attribute means it cannot have any dependencies. While that might be desirable in itself, should the need arise later it will require a bigger rewrite and thus potential lead to a hacky solution being chosen. I'd use a strategy pattern and let the attribute be (one of) the descriminator.
I can't find the post you're referring to, sorry. I know this isn't exactly what you're asking about, but you should be logging as much as you reasonably can. Logging at levels like debug and trace vs info can be very important to suppress log spam during production operation. Use a logging framework that can accept an Exception as an argument to its error logging method and always pass a caught exception to that method when you call it. Pretty much everything in the [Environment](https://docs.microsoft.com/en-us/dotnet/api/system.environment?redirectedfrom=MSDN&amp;view=netframework-4.7.2) class could be of some import to your diagnostics. The [AssemblyName](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assemblyname.version?view=netframework-4.7.2) class will get you a version number, provided one is present in the DLL/EXE that you are reflecting a class from.
I noticed that some limited powershell can be used (in your copyright example), so I thought I would try auto-generated version numbers. Looks like that's a bad idea, I tried setting version to &lt;Version&gt;1.0.0.$([System.DateTime]::Now.TimeOfDay.TotalSeconds.ToString().Split('.')[0])&lt;/Version&gt; I assumed that these would be evaluated only at build time, but setting that made nuget do a restore every second, so I guess it evaluates constantly?
It might be doing a restore because your version is literally evaluating to a different value each time a "request" is made to read the version. My guess (and it is truly a guess) is that the restore you are seeing is only executed if any of the package values have changed. For my copyright example, that value is only going to change once a year. Your example, however, is changing every time... well, every time *time itself* changes.
hmm.. looks like there is no nuget restore loop if I do TotalMinutes instead? Maybe seconds is an issue because it takes more than 1s to complete nuget restore for the whole solution...
&gt; Bloated log files are not fun. Preach it, brother.
Thanks this is good to know.
And if you have multiple breaks within a larger while loop, I as the developer have no way to know which one at a glance actually caused it to skip out. That is a very bad pattern that I see often, you should only break out of a while loop if you TRULY need to. Otherwise, all code should flow, that's breaking the consistency of your code.
Thanks. I agree that splitting just for purity sake isn't valuable in and of itself. Having a couple examples makes it easier to justify keeping the logic all in the attribute.
&gt;Having the logic in the attribute means it cannot have any dependencies. It cannot have dependencies passed in via constructor injection, but it can receive them via method injection (which I'm using) or property injection. That may be an indicator to split the behavior portion, but for now I think I'm going to keep everything in the attribute. &gt;I'd use a strategy pattern and let the attribute be (one of) the descriminator. I didn't put a complete example up, but the filter attribute is actually abstract with specific filters inheriting from it and implementing that filter method. It's not exactly an implementation of the strategy pattern, but it gets at the heart of it; applying a different implementation for a defined problem. The consuming class doesn't care which filter is returned, just that a filter is returned.
You know you can search and query your logs?
Thanks! So, my app operates essentially on a timer control that ticks on an interval every 5 minutes, runs code that checks for x, does nothing for 5, repeat. I’m guessing I would have to have another timer that runs this function more consistently to determine whether or not the event is occurring? Or, can I just slap this into the code (outside the other timer)? Sorry, kind of a n00b at this point.
I found the documentation for how property functions work: https://docs.microsoft.com/en-us/visualstudio/msbuild/property-functions?view=vs-2015 I ended up just using minutes instead, it doesn't seem to have any problems - restore only occurs once. I ended up going with this: &lt;Version&gt;4.10.$([System.DateTime]::Now.ToString("MMdd.hhmm"))&lt;/Version&gt; I had been hoping to replicate the old auto version behaviour (build number is # seconds past midnight/2) but I guess it isn't feasible.
Ideally, the majority of what you need should be the most recent entry in the log and not much else. 
That's ok. Slap in that code and have it dispose the timer and exit the process. If you have a main that is running a loop, or waiting on something, you can put code in there, perhaps use an autoresetevent or sonething similar. I've a broken arm, so typing is a bit hard at the mo :)
I respectfully disagree. You can set a breakpoint at each break, to establish which one is exiting the loop. Good luck figuring out which condition caused the exit on something like &amp;#x200B; while (a &amp;&amp; someInternalFunction(abc) &amp;&amp; someExternalApiCall &amp;&amp; someOtherFucntionWithOutBy1Error &amp;&amp; etcFunction) { // stuff } &amp;#x200B; I wont use the argument that break exists to be used, since c# also supports goto \^\^ Id be interested to see what modern CS academics have to say on the matter
If you havent already realised, using System.Linq; enables magic c# superpowers :) if i remove it, its never long before it comes back again... Such elegant and beautiful collection handling... not a big fan of the inline syntax though apart from in extremely simple one liners. Gives us massive props over java and delphi peeps!
Well there isn't much to understand (unless you want to design your own GIS). GDAL can transform coordinates between coordinate systems. The properties of each coordinate system can be described in WKT (well known text). The code instantiates three coordinate systems: the global where coordinates are expressed as longitude / latitude (WGS84) and UTM 32 &amp; 33, which are map projections. The first call converts a pair of lon/lat to UTM 33 and the second converts the northing/easting pair you got earlier, to UTM 32.
Yes. 
Yup. I try to get in touch with people (all the way to “please call me right before you need to do something like this the next time”) when a log hints at a puzzling, obscure bug, that might ultimately be a clue towards a bigger issue. Threading is certainly one of those tricky causes.
You're throwing away so much analytical potential :/ My mantra is record everything and build analytics and metrics on how the application is used, and issues users seems to regularly run into.
You could configure a scheduled task in windows that runs it on an interval instead of the app having the timer in it.
Yeah this is one of those cases where you have to have two different behaviors based on the user, such a pain to have to consider (although I respect why it needs to be done).
GDPR enshrined the right to *ask* to be forgotten. There are valid reasons you can use to refuse a request. 
In our REST API's we have what we call IO Auditing. The request IN and the response OUT get audited. If an exception occurs the AuditId is part of the log message. This way we have a the complete ability to re-create the scenario.
Can you try to use the vsdbg attacher instead of debugging straight through omnisharp? That would narrow it down a lot.
Hmm... I don't do a lot with docker toolbox, but it doesn't seem to be an issue with that. I don't honestly know how that would be possible. Does changing a file cause it to rebuild? If you detach and then reattach when it's done does it work? That should only happen when the build fragments are different - but they shouldn't be. the source is still being pointed to and you can still connect correctly. &amp;#x200B; And of course, whenever you can get back to it :)
Depends how you do it. A raw file with everything, combined with a tool to turn it into human-readable format with most of the cruft excised, can be a powerful combination. 
As others have said, log everything. Initially at least. And use the appropriate log level; don't put everything into just "log", use error, fatal, info etc. When you're working on a new piece of software, knowing at exactly what point and state the error occurred, is key. With a decent architecture (e.g. CQRS, mediator), this becomes a doddle to implement via decorators.
Exactly. Something like Kibana makes searching for specific errors and even using graphs to see trends of certain errors rather trivial.
PII data
I like the Directory.Build.props tip. Thanks.
We used to removed the 'yield' syntax at certain parts. We are all using the values returned by the ArrayExtensions. Though outside the library, it might be useful. Thank you for this!
Please be reminded that we only allowed 'yield' at IL level conversion, and still calling the 'ToList' before returning the objects into the calling library. &amp;#x200B; This is to avoid managing certain object inside RepoDb (i.e: DataReader, etc etc). This has been my case on my performance optimizations, which I then realized (late in the game) to not to go into this direction - and have reverted my changes.
How about GDPR also allowing the data to be anonymized? That way you can keep audit data but it's on Mr Guid rather than Mr Smith.
Yeah, that's an interesting thought. Would that be the right way to handle this from a best practices standpoint though? Or does it matter?
Great! I'll give it a go and keep you posted :). Oh, and sorry about your arm. Heal up!
Thanks for the answer. Another thought I had was why you are going the "detour". I thought when you are able to use foreach on the Array class it has IEnumerable implemented. But it seems like, that it just offers the GetEnumerator method, without implementing the interface.
That was pretty cheeky to claim the fatest .Net ORM title when you weren't even doing something as obvious as caching reflection calls.
It was personally my fault on the first thread and we explained everything in the blog post. The team has managed to identify the performance flaws and have managed to optimized the library more further. We know that even right now (v 1.5.3), in the "individual-fetch" we are the fastest, we still need to optimize the "set-fetch" as we are a bit slow on that area. Some experts express their expressions to me and we are planning to implement their recommendation out of it. We know and we validated it, it will help our library's performance more further.
Thanks, it's surprisingly annoying :)
Changing a file cause a rebuild. I think its just something with my setup, I might not be in a debug build. "dotnet_watch_docker_example | Hosting environment: Production"
It works, might just have been picking wrong process :D Many thanks!
Nice! Glad it works :) had me worried haha.
It depends on the complexity of the app, how often it will be modified/updated, how quickly it needs to be deployed, etc. If it's a strategic app that will be used long-term and will need to be maintained by others (possibly in the future), you might be better in writing it in C# from the get-go since you'll have a much better chance of finding qualified C# devs than VB.NET. But that has to be weighed against the time it'll take you to get up to speed on C# and the associated cost. Do you know Java? If so, C# should come pretty easily (they're similar enough to be really confusing when switching between the two). If not, it might take a little longer. One other thing I'd mention - I don't know how big your company is but if this is an app for centralized reporting, you might consider making it an internal web application instead of a desktop app. That way there's only one location for updating the app, retrieving and reporting the data, etc.
Yes and no. I'm going to start with the no. In a business case, get a proper ticketing system that supports form creation. This will save you a lot of headaches, be the fastest to get up and running, will likely be more bug free and secure. It will also keep track of tickets, which will help with keeping track of outstanding issues and assigning tasks to team members. What you outlined is a basic problem that every single helpdesk faces, and it looks like you aren't doing anything crazy. As such, there are tons of solutions, both paid and free, that you can use with minimal effort setting up. On the yes side, if you didn't want to use an existing solution, c# is perfect for this. It can do everything outlined with ease. 
C# and [VB.Net](https://VB.Net) can do essentially all of the same things. C# is more popular and most developers prefer the syntax. They both use the same ecosystem, it's still .net, you can still use the same libraries, you can still use Visual Studio. &amp;#x200B; If this is a 'formal project' and you're expecting this tool to require maintenance and features and there is talk of hiring developers who will own the UGAT team....then it might make sense to invest the time in learning C# and considering a bunch of best practice type things, worrying about how you'll get the app on the desktop/deployment/updates/etc... &amp;#x200B; If this is a 'I had a cool idea' and you are doing it 'sort of on the side' or it's something you've been tasked with but it's intended to be something that gets built and works for a while....then I'd personally stick with what you know. Do it however you will be comfortable. &amp;#x200B; There are plenty of people who will tell you 'Oh man - you should ditch VB and do it in C# and don't bother with a desktop app, make it a web app. And use Angular! Just use WebAPI for the backend, and get node, and maybe use bootstrap or something, after all it should be responsive so people can pull it up on their cellphone too. Obviously, I mean .net core, so you can host it on Linux. Maybe read up on Docker containers! You could host the endpoints in the cloud! Use Azure Durable Functions!' but unless you are being given a lot of resources, I'd aim for the working prototype. Do that in whatever you know. 
Man that last paragraph sounds so familiar.
Perhaps you should first try to understand gradient descent since you clearly don't.
I am aware of gradient descent and finding local minimums and maximums. That does not mean i think it is necessary for me to implement that directly in the code. For me success is finding what strategy wins the highest percentage of the time.
If you write a custom ActionFilterAttribute in ASP.NET (or Core), you do write the logic inside the attribute. Any kind of framework functionality depends on inversion of control, both dependent and functional. If you provide a pattern, constraints and the usage is clear, it is perfectly fine. If you use DI, I recommend using a pattern like Middleware objects do with Invoke(...) that resolve the method parameters via IoC. 
What diagramming software did you use? I'd recommend a web app. Easier deployment, better compatibility across multiple devices. Language choice, These projects start small and in 3 years you'll be up to 100k lines and a team. I wouldn't use vb.net. It will get harder and harder to get help or examples. They are mostly in C# (msdn shows both, other sites like github won't) Another poster suggested an off the shelf solution. This is also good advice. Finally, consider an email but also log it to a database and let the tech's mark as fixed, append notes etc. If they have issue tracking software, itt may have an api already.
You should just buy a third party ticketing app. It will be way more cost/time effective and more robust. 
Agree but also. Why a app? They're a nightmare to maintain. A simple web form would be easiest to maintain and you can upgrade as you go.. but as the post above mentioned, just buy one or use a free online one. Way cheaper for your company than you building and supporting one. 
Upvoted especially for that last bit. Making this an internal web application seems to make much more sense.
Rule 4? The biggest issue I see is whether you can find a player that accepts a Stream as input. Is the player your code or a 3rd party player that takes a file as input?
Anonymization is surprisingly complicated. According to HIPAA even the patient ID used by the hospital counts as PII. If you look at the tags in DICOM data there are hundreds and hundreds that qualify. People spend years just working on DICOM anonymizers. In our DB we store patient information by GUID. All logging in the software is done by GUID. We provide a special tool whereby necessary auditing of actions on patient data will get those logs and replace the GUID with the patient ID, but it has to be used with special authorization.
Some thoughts, in some cases echo'ing others: * VB.NET and C# are fairly transferable. There are differences, but my understanding is that it's primarily syntax. And in .NET syntax isn't really the tricky bit -- it's the vast number of classes and libraries available to you in the environment that takes time to become familiar with. If you like VB.NET it's fine to use, though what people have said about it being easier to find a C# expert to take over than a VB.NET expert has been generally true in my experience. * The main UI tools available hare are Windows Forms and WPF (and UWP, but I don't know much about it, though my understanding is that it's closer to WPF). This assumes you don't go the web route as others have mentioned. WinForms is quicker to get a handle on and quicker to develop, but is less flexible and often leads to some pretty poor designs, though it doesn't have to. WPF generally uses the MVVM pattern which, while nice, is also fairly complex, takes time to learn well, and makes some common things surprisingly difficult to do easily (I'm looking at you, dialog windows). If this is a one-off prototype with no maintenance plan, WinForms will get you there quicker, but quicker development usually ends up sacrificing maintainability in my experience. If you go WPF and don't know it or MVVM, your learning curve will be steeper. * Making it web-based certainly will make it more centralized, and you don't have to worry about deployments to customer machines. But it's also a rabbit hole in terms of technologies, especially if you're unfamiliar with it. /u/VisaEchoed gave a great example in [his comment](https://www.reddit.com/r/csharp/comments/9dmzop/is_c_right_for_what_im_trying_to_accomplish_am_i/e5ipxgs/). I'm a believer in desktop applications when appropriate. This might be a case where it's not, but if you do go the web route make sure you go a route that's appropriate for you. If you don't need super-scalability, don't rush right for the current favorites in terms of libraries and technologies. For example, if your user base is, like, 10 people, maybe you don't need Azure and Microservices. Maybe a simple WebAPI (C#) REST API and Web Forms will be what you need. To your original question: can C# do this stuff? Absolutely. Is it the "best" tool, especially compared to VB? Eh. I hate VB's syntax (my first languages were VB 5 and VB 6), so I reached for C# when it hit public beta and never looked back. So for me it's my go-to. But it didn't have to be. I'd say take a look at your requirements first, and choose the best tool from there. C# is very definitely an option, and not a bad one. A desktop app might not be a bad route for a first step (maybe you write a REST API and then consume it in a desktop app, then later convert it to a web app), or maybe that's not the way to go at all. But start from your needs, and figure out what works for you from there. 
sorry for the confusion, i just added one more photo which shows my program result. my program won't stop after any inputs under 20 and for the average it just divides them by 20 !
As someone who knew Visual Basic first and then C#, I have to say that there's quite a bit of learning in C#. You can get the program written somehow, yeah, sure, but when we are talking doing the things right it is not a year or two before you can think about it. Make sure you have a full-time job paying for your learning too.
I would like to add that switching from Visual Basic to C# is really easy, there's almost no reason not to.
You're creating the array of the same size every time, no matter how many numbers the user provides. In an array, the default values are set to whatever the default for their type is; 0 in the case of ints. When you loop, you're looping through the entire array even if the user didn't provide numbers there. The result is that if the user provides 5 numbers, you'll get the average of those 5 numbers plus the 15 0's that make up the rest of the array. To fix this, you need to limit your for loop to only loop as many times as the user provided numbers.
100%. In fact do not make it a desktop app. You will have to deal with updating clients and a slew of other issues you won't have if it's just a web app.
I'm only a basic user, I don't know how to use linq at all :D
Removed: Rule 4. You'll have to dive in and give it a shot. Let us know what methods you find researching and which did or did not work. Off the top of my head, NAudio might do it. I think it can playback wav data from streams: https://github.com/naudio/NAudio
Could make a desktop app and use an internal server to deploy it as a published app. Would give central location and still allow the app to be developed as a windows app and not a web app. 
Unsure if the provided diagram is just an example or the actual flow you intend to use. The below is in case of latter ignore if former. You have a few points in your logic flow where you are giving your user the chance to lie or give wrong answers. All information is bad until proven otherwise even when it is your colleagues giving it to you. Especially true in a HelpDesk environment. Do not ask for the user pull the information from Windows authentication. Same could be used for the location though unsure would even use that as a datapoint unless you have to due to physical limitations (multiple buildings with independent staff for example). Users may experience a problem at Location A because of something at B and it can lead to issues locating the problem and using metrics on solved issues. Would also not ask hardware or software. You are again giving a chance for wrong information to be given. Your helpdesk should have a individual that plays gate keeper and assigns tickets and tags them appropriately after verifying the user submitted enough information for a viable ticket. Users are dumb and at the point of ticket entry are usually in some sort of blind rage. You will get far more garbage in than good data. Asking them to get all these nuanced answers correctly in a field they aren’t employed in while in this mental state is not going to work well. 
&gt;There are plenty of people who will tell you 'Oh man - you should ditch VB and do it in C# and don't bother with a desktop app, make it a web app. And use Angular! Just use WebAPI for the backend, and get node, and maybe use bootstrap or something, after all it should be responsive so people can pull it up on their cellphone too. Obviously, I mean .net core, so you can host it on Linux. Maybe read up on Docker containers! You could host the endpoints in the cloud! Use Azure Durable Functions!' but unless you are being given a lot of resources, I'd aim for the working prototype. Do that in whatever you know. Thanks, now I'm having an existential crisis.
I feel the same way. I think it just goes with the territory. The truth is, no matter what you select, in a few years, people will still be saying, 'Why didn't you use X'. 
That's how I would handle this
As someone who's written and done the help desk side. Unless there's a dire requirement that cant be met by buying something. Buy it. There are also a few open source help desk apps where you could customize parts if needed. I myself prefer c#, also as others have said dont ask the user anything. other then the problem they are having. Everything else just query the system for. Fyi for my sites we name the machines in a way to identify their location using it. Get in touch with your actual desktop people and see how things are really done. Dont reinvent the wheel. 
Agreed - I started with VB.net but switched to c# due to mostly is popularity, and was able to learn it pretty quickly. You'll also quickly realize why it is more popular, I felt it was easier to use and write.
Feel free to check out the project [https://github.com/bharney/StarterPack](https://github.com/bharney/StarterPack) I've been working on which has similar goals. It uses .Net Core Identity with EF Core migrations to create the user tables. And has a React front end. However, it isn't completed, and all of the pieces for OIDC and authentication features for Third Parties (Facebook, Google, Github, Twitter) is not there yet.
My guess is that an app can automatically figure out all the details about the machine that is being reported. Other than that.... not much advantage
I think this is precisely what one of the test engineers is doing at my office. Will write back in a few hours after I ask him.
In my last position we had applications that needed to be accessed by the entirety of the user base (like our ERP) but didn't want the hassle of installing a client on each machine. The way we handled it was that we had two terminal servers that both had the client installed on it. The users would run the software through what is called a "Published App". Basically Windows OS is creating a remote desktop session ON that server but only draws the process that published app is executed in as well as any processes it spawns. To the user it appears as if they are running the application on their own computer when in reality is it ran on the server. It gives a nice middle ground between client held applications and web applications. You can do it with any windows application to my knowledge. When it comes time to upgrade, modify, or maintain you have the one or two places instead of the 100+ client machines.
Can’t agree more. Jira, OnTime, Zen Desk, many other pre built products out there that will support what you need. Sometimes the right tool for the job is external. 
I would just create a Google form. You can split it into different pages/sections and jump to various ones based on the answers selected. And collect the results in a Google sheet. And use Google Apps Scripts to fire off emails or hit other apis that can be used to store them in another data store or kick off other workflows.
when an update needs to happen, those users effectively have to be kicked off of the program, right? so if a user is entering data in between upgrades they'd lose it?
I came here to suggest everything in that last paragraph. Dodged a bullet there. Thanks! :) (Joking.)
The question is, why are you not just adding this onclientclick event in the ASPX?
Forget a desktop app. make it as an asp.net website.
Definitely. Talkin about C# and web apps, asp.net is just great. It’s powerful and easy to pick up. If you are somewhat experienced in MVC you cane make it comfortable to maintain aswell.
Why are y'all helping with homework? This is debugging homework, no? Learning to debug is one of, if not the most, important skill.
You don't always want all exceptions exposed on an API. What /u/Sutso mentioned with using exception handling middleware is the best way to go, as you can sanitize the exceptions and log the exception before throwing it.
AFAIK neither winforms nor WPF are supported on core. If it's a desktop app...
There are literally hundreds of people who have built such an app. https://en.m.wikipedia.org/wiki/Comparison_of_issue-tracking_systems What you described is almost like building your own bicycle or scooter so you can drive yourself to work. Could be a great way to learn, but it will take months, will always miss features, and never been quite finished. Your users will keep asking for new features, over and over, until you realize that you're on your path to re-build JIRA,
Dumps4free is the leading and valid Programming in C# Exam exam dumps provider. If you are aiming to take Programming in C# Exam certification exam, then you should purchase Dumps4free Programming in C# Exam questions and [70-483 Exam Dumps](https://dumps4free.com/70-483-exam-questions-pdf-vce.html) test engine. These 70-483 Exam Braindumps are valid and of excellent quality. I have also tried them for my 70-483 Free Exam Question Answers and fortunately passed at first trial. In addition to providing valid 70-483 Free Braindumps Dumps4free is also offering 100% Passing Assurance for customer satisfaction.I would must recommend this site to all certification candidates. &amp;#x200B;
Try Task.Delay()
Because I’m using a CommandField
Ever heard of manners? Or didn’t you have a mother growing up?
Yes. Turns out this is where the problem was. I was making a mistake in getting the row. Than line declaring `btn` just needs to use the row index specified in the GridRowEventArgs param rather than all that other crap I’m doing there. 
&gt;level 1prajaybasu1 point · 1 hour agoTry Task.Delay( Thanks, let's give it a try !
You're right, not until 3.0 (targeted, but who knows when). You can use Blazor or Razor Pages and host locally on IIS. I just like the performance of .Net Core over .Net Framework 
Even though you use click once, updating multiple clients is still more time consuming than updating a single web app. 
`void Main()` `{` `var d = new DebounceDispatcher&lt;string&gt;(500);` &amp;#x200B; `Task.WaitAll(` `d.Debounce("2", () =&gt; Console.WriteLine("Banane")),` `d.Debounce("1", () =&gt; Console.WriteLine("Pyjama")),` `d.Debounce("2", () =&gt; Console.WriteLine("Fraise")),` `Task.Delay(TimeSpan.FromMilliseconds(300)).ContinueWith((_) =&gt; d.Debounce("1", () =&gt; Console.WriteLine("Dentifrice"))),` `Task.Delay(TimeSpan.FromMilliseconds(400)).ContinueWith((_) =&gt; d.Debounce("1", () =&gt; Console.WriteLine("Lunette"))),` `Task.Delay(TimeSpan.FromMilliseconds(520)).ContinueWith((_) =&gt; d.Debounce("1", () =&gt; Console.WriteLine("Poire"))),` `Task.Delay(TimeSpan.FromMilliseconds(600)).ContinueWith((_) =&gt; d.Debounce("2", () =&gt; Console.WriteLine("Caramel"))),` `Task.Delay(TimeSpan.FromMilliseconds(1000)).ContinueWith((_) =&gt; d.Debounce("2", () =&gt; Console.WriteLine("Figue"))),` `Task.Delay(TimeSpan.FromMilliseconds(1400)).ContinueWith((_) =&gt; d.Debounce("2", () =&gt; Console.WriteLine("Figue2")))` `);` `}` &amp;#x200B; `public class DebounceDispatcher&lt;Key&gt;` `{` `private readonly double _i;` &amp;#x200B; `private readonly uint _limit = 1000;` &amp;#x200B; `private readonly SemaphoreSlim _oneAtATime = new SemaphoreSlim(initialCount: 1, maxCount: 1);` &amp;#x200B; `private Dictionary&lt;Key, CountedRessource&gt; _d;` &amp;#x200B; `public DebounceDispatcher(double interval)` `{` `_i = interval;` `_d = new Dictionary&lt;Key, CountedRessource&gt;();` `}` &amp;#x200B; `public async Task Debounce(Key k, Action a)` `{` `await _oneAtATime.WaitAsync();` `CountedRessource c;` `try` `{` `if (_d.ContainsKey(k))` `{` `var count = _d[k].count;` `if (_limit &gt; count)` `{` `_d[k].cts.Cancel();` &amp;#x200B; `}` `else` `{` `count = 0;` `}` `_d[k] = c = new CountedRessource { count = count + 1, cts = new CancellationTokenSource() };` `}` `else` `{` `c = new CountedRessource { count = 1, cts = new CancellationTokenSource() };` `_d.Add(k, c);` `}` `}` `finally` `{` `_oneAtATime.Release();` `}` &amp;#x200B; `try` `{` `await Task.Delay(TimeSpan.FromMilliseconds(_i), c.cts.Token);` &amp;#x200B; `a.Invoke();` &amp;#x200B; `_d.Remove(k);` `}` `catch (OperationCanceledException)` `{` `//Nothing to do` `}` `}` &amp;#x200B; `private class CountedRessource` `{` `public uint count;` `public CancellationTokenSource cts;` `}` `}`
Some cultures (most notably Japan) use the fiber in the banana plant to make fabric and sometimes even paper. *** ^^^I'm&amp;#32;a&amp;#32;Bot&amp;#32;*bleep*&amp;#32;*bloop*&amp;#32;|&amp;#32;[&amp;#32;**Unsubscribe**](https://np.reddit.com/message/compose?to=BananaFactBot&amp;subject=I%20hate%20potassium&amp;message=If%20you%20would%20like%20to%20unsubscribe%20from%20banana%20facts%2C%20send%20this%20private%20message%20with%20the%20subject%20%27I%20hate%20potassium%27.%20)&amp;#32;|&amp;#32;[**🍌**](https://np.reddit.com/r/BananaFactBot/comments/8acmq6/banana/?st=jfof9k8d&amp;sh=acd80944)
Is your app running as a service? If not, it would probably be a good idea, unless you need a UI.
It looks like a good application for sharepoint.
Not if you know your configuration management
I've done this using IIS Express. Use Process.Start to fire up iisexpress.exe with the correct arguments for your project. I don't recall what they are off the top of my head. If it needs to be IIS, I've only interacted with it in PowerShell. But it's definitely possible. Start-IISSite is the cmdlet. Just make sure you're starting it from an elevated process (run as admin).
Been a developer for 20+ years. I mainly did windows apps (C#, WinForms then WPF), never again. Now everything’s been converted to a web app but some small one-off tools are Web Apps on our intranet. Easier to manage, update, write, test. There aren’t many reasons to write a windows app unless you need a specific windows api (direct access to printing, IO system, etc.). How is a web app counterproductive?
Except JIRA pricing ramps up really quick if the company grows and by that time you are stuck with it. That and it's clunky and slow ;-) . But yes in principal there are loads of products out there that do this job.
ah ok yeah, that makes sense. thanks for explaining it to me!
I appreciate the point of view here but a lot of this requires some additional situational awareness I think - Websites being easier to update - yes of course. Easier to write? I'm not so sure. If the development staff aren't really hardcore software developers with CS degrees it can be tough to wrap your head around some of the modern web concepts like client side rendering and js bundling (putting aside the confusing dumpster fire that is modern js framework fragmentation). Conversely, in WebForms (or other "old" server-side rendering techniques) it is still a little hard to wrap your head around the timing issues of server-side rendering versus client side DOM manipulations (e.g. jquery usage) WinForms (or WPF now I suppose) applications get a bad rap because they're not currently en vogue but if you've got a tool that 1) doesn't need to scale to 1000's of users, 2) will only be used by internal company staff, 3) needs to be developed quickly and 4) by people who aren't programming experts, then a desktop app is the way to go. Source: Been developing in MS stack for 20+ years
There are a number of resources on Microsoft's website: [example](https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-2.1) Searching for "Asp.net api tutorial" returns a lot of helpful results. However, I'm wondering why you're applying for a job with no knowledge or experience in the field you'd be working in (assuming they haven't given you a completely random and unrelated challenge). I don't think I'd want to hire a programmer who immediately asked for help online without searching online first. If you got the job, you couldn't ask Reddit for help with every task you're given.
Can you give some more detail? Do you have the source code for the MVC app? Is it not deployed anywhere? We had this exact scenario with an app before we had any environments to deploy to. We ran the app in one VS instance and our tests in another. 
&gt; I would value an employer that values you over your certificates. This. And from my experience, it's only junior positions that really care about degrees so the hard part is just getting that first job. 
This is pretty simple honestly. If you can't handle this on your own, you shouldn't get the job.
Read up about events. They're provided to avoid you having to keep checking something over and over, and are a much more efficient and easy to manage way of doing what you want. [Here's a doc](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/events/) to get you started. 
You can't. It's blocking and thus by definition it isn't async.
You're going to struggle with this task if you have no experience in c# or .NET realm. A short list of your tasks: * Learn how to use WebAPI (fortunately there are loads of working examples - in fact the wizard in Visual Studio (not sure about .NET core) will spin up a working site for you * Either create a database in SQL Server (or any other relational database) and import the records in * An alternative to the above is to use a NoSQL database like MongoDB and import the JSON records in - then write some c# code to query the collection (this may be your best) The list goes on - but that is the high-level stuff you're going to need to tackle if the technology choice is firm.
I'm still basically on the MS stack myself (MS SQL/IIS/ASP.NET MVC). I wouldn't touch WebForms with a 10 foot pole. It was a way to transition desktop developers to the Web 16 years ago. I haven't done WebForms in 6+ years. MVC is easier to read and maintain, has a much more logical model, infinitely more testable. When I switched to MVC, it was one of the aha moments like when I switched to Form-Behind on WebForms or Access -&gt; SQL Server. You don't realize how much better it is until you get comfortable with it. If you try to learn everything about web development overnight (WebPack, Node, VUE/React/Angular, etc..), you're going to have a rough time. Take baby steps, learn HTML/CSS then jQuery and Typescript. Start with a small app. Typescript is a great way to learn Javascript for C# programmers new to it, it hides a lot of the bad parts of it and makes it more like an OO language. You don't have to learn bundling until later, bundling simply gives you a performance boost. ASP MVC makes bundling really simple anyhow. You don't need npm either, nuget is fine for web packages. Personally I graduated with an Accounting degree. Don't use a lack of a CS degree as an excuse. We're not writing new operating systems, CRUD apps can be written by the unwashed masses. You just have to set aside time to learn it. I've written WinForm apps used by thousands of users and ones used by less than 5. Web Apps can be developed in the same amount of time or less than WinForms. When I'm done with a small tool, I'll simply add an menu option or link to our Intranet and either email or present to staff how to use it. No install process and updating the web app can be as easy as right-click publish or a commit if you use a TFS deployment. We host all of our servers on Windows Azure. We have one for staff (~20), another for the general public (12-20k monthly visitors) and a 3rd for clients (~3000 active). We originally had WinForms for internal and Web apps for clients/general public but at a certain point we realized it'd be a lot easier to manage each on a similar platform so now we run all 3 servers on a single Azure service for $75/month. WinForms is getting like VB or Cobol or FoxPro imo. Sure you can do stuff with all of them today but there's a better way to do it.
Stupid comment, I'm asking for help not criticism. If you don't have anything to offer then don't comment. 
Yeah, each new approach goes through the cycle of, useful, over used, dogmatic, sceptical, right sized usage (or abandonment). DI can be powerful but it's also a code smell and even an anti-pattern in some cases. Like anything in development, people look for a set of fixed rules to follow, so it becomes all or nothing. Your case seems to be an over eager pre-optimisation, rather than a DI specific issue. The second case works fine. The abstraction got too abstract because the author over thought the consequences of their design. This ties into testing, I wrote [a long blog post about this](https://dotnetarchipelago.blogspot.com/2018/08/tdd-ioc-and-30-other-related-terms.html) recently. It doesn't cover your case, but a paragraph on oop design with relation to di could be worth adding. I'm injured at the moment so I might do it slowly later :) 
If you need help on a "challenge" for a potential job, you shouldn't get the job. Sorry. That's just how it is. I sit in interviews all the time and if I knew a candidate had asked for help on an assignment like this I had posed to them, I would immediately decline to recommend them for hire. This is not any different from a college kid asking reddit for help on their homework. The assignment is supposed to be used by a potential employer to evaluate *your* skills, not the collective skills of /r/csharp.
So I'd like some context before I give a more detailed reply. Do you have a decent understanding of SOLID design principles, and have you read about/ done Domain Driven Design?
Thank you so much, this is what I needed to know.
Do you really want to start a job you're not qualified for, only to get fired later?
&gt;Cancellation token Guess I have some reading to do! Thanks!
I added the code to my program main function and it appears to be handling it. Getting ready to deploy to a broader pilot, but this seems to do the trick. Thanks!
Yes, and yes. Generally speaking, I love what IoC does for me, especially when it comes to testing. My relationship with CQRS predates my acquaintance with the codebase in question.
Yeah bro that’s the aim here 👍🏿
Awesome, thanks! I utilize events in my form for timer ticks, button clicks, etc. Being a n00b, it didn’t occur to me that I could subscribe to events outside of the form, such as Win32 events. Looking forward to reading up on this stuff. Thanks again!
Okay, you are right, just looked it up on the source. Then u really don't know, why they are doing the mentioned "detour".
* One *type declaration* per file^1 -- classes, structs, interfaces and enums go in their own .cs file. * Think of namespaces like the file system. A namespace is like a directory that may contain files. A type declaration in a .cs file would be considered a file inside a directory. Files in the same directory can't share the same name, right? The same is true for types. For example, you can't have two types that both evaluate to the full declaration of `System.Reflection.Assembly`. Using the file system analogy, you couldn't have two files with the exact same filepath like "C:/System/Reflection/Assembly.txt". * Child namespaces can "see" types in its namespace *and* parent namespaces but cannot "see" types in their own children *without* using statements or explicit type declarations. For example, types declared in the `MyCompany.MyProduct.Domain` namespace can see types in their namespace as well as types declared in the `MyCompany.MyProduct` and `MyCompany` namespaces. * Generally (and by default), one namespace is shared for the entire *folder* of types declared in the .cs file. * When you create a class with the typical "Class" template, its namespace is automatically generated by concatenating the default namespace *of the project* with the folder structure. Look at a project's properties to see its default namespace. The default value of a project's default namespace will be the name of the project. For example, if I created a "MyCompany.MyProduct.Domain" project, its default namespace will be `MyCompany.MyProduct.Domain`. If I created a "Models" folder and created a "FooBar.cs" file in it that declares the `FooBar` class, the class will have a namespace of `MyCompany.MyProduct.Domain.Models`. 1: This is a *general* rule that you should follow 99% of the time. Furthermore, it only really applies to types declared with the **public or internal** access modifiers. For example, you could have a nested **private** class within a `internal class FooBar` type declaration. You wouldn't create a separate .cs file for nested types. Of course, you literally *can't* nest a private class in another class without being in the same file, without using `partial` declarations anyway. One example of having many publically accessible types declared in a single file is when there is a tool that generated the types, though they are usually generated in a single file with some suffix to the filename that hints at it being generated (i.e "FooBar.g.cs") -- generated types are often generated using the `partial` keyword so you can add more members to a type in a separate file. &amp;nbsp; Hope this helps.
You will get a reputation in the industry that you won’t be able to easily shake. Do not do this. 
Why not just allow them to keep adding numbers until they press the enter key? You can check if the content is an empty string and then average however many they entered so far. 
CQRS is a bigger issue in general. It's *extremely* powerful, but also extremely verbose to enable that power. More and more nowadays I try and steer people away from it until it's absolutely necessary. I am going to put this as a one liner for now but I can talk more to this if you want: *what you are concerned about isn't the generic portion of the interface*. Thats not to say that IMapper&lt;To, From&gt; isn't valuable, just that it isn't a use case you need to address right now. Your talk about the strict folder structure also speaks to a second smell that I recognize often: You might have all your "handlers" in one project. The idea of having handlers is that you want to break off handlers and other things into smaller projects/ domains. This allows you to not only fall into microservices easier, but it allows you to describe a bounded context easier. If you are mashing a couple thousand commands together into one project you are losing a lot of scope of what you are trying to accomplish in any one area. Lots of small focused projects is better. I can expand on this further if you want. Slight curiosity as I'm thinking about it, are you using "go to implementation" at all? I use that all the time and that generally is smart enough.
The thing is, we are learning about arrays, so I have to use an array. Thanks for your help tho. 
You're doing a good job dude if you can't handle a simple RESTful web API without begging reddit for help.
You are right. I did most of it , but got stuck. 
Based on the nature of the question do you really think their IT department has that kind of rigid automated desktop deployment process in place? Yes, you can make this suck less, but the overhead involved is far and beyond that involved in maintaining a single server for a webapp. 
You realize that you’re coming off as the “old guy” who doesn’t “get” all this newfangled web stuff? If anything there are TONS more resources and training materials available and being created every day for developing modern web apps than there are for developing WPF apps. Even if it’s not specific to the MS stack it doesn’t need to be - developing a modern SPA is the same regardless of what the backend is or whether you’re using IIS or Nginx or Apache or Node or... you get the point. If he’s learning anyway there’s also the added value of learning a skill that’ll be more valuable in the future vs one that is becoming more rare with every passing day. 
Not a problem 
&gt; CQRS is a bigger issue in general. It's extremely powerful, but also extremely verbose to enable that power. More and more nowadays I try and steer people away from it until it's absolutely necessary. I can see why. Another dimension that seems worth considering -- as with any convention -- is team composition and turnover. Have you come up with any clear rules of thumb for "absolutely necessary?" &gt; If you are mashing a couple thousand commands together into one project you are losing a lot of scope of what you are trying to accomplish in any one area. Lots of small focused projects is better. I can expand on this further if you want. I appreciate this perspective, and can see how it would be better. I'm not exactly sure what you mean by "losing a lot of scope," though. Would you kindly say a little more? (It sounds related to the familiar idea that project organization can provides useful information.) &gt; Slight curiosity as I'm thinking about it, are you using "go to implementation" at all? I use that all the time and that generally is smart enough. I am, and it's not. Fwiw I typically run with ReSharper disabled these days, because performance. Thanks for the curiosity, in any case.
My "absolutely necessary" is basically if the thing I'm doing commands around is any form of a black box. YMMV but that's my general answer. I think too many people seem to put command handlers/ query handlers in to do logic on POCOs instead of exposing methods on the object to do what you wanted to do in the first place. You basically hide behavior about a domain model in a bunch of handlers, which makes it almost impossible to grok what is happening to an object and makes it a really easy to accidentally not apply rules on an object as you get more of them. The only other time I see command handlers being an "easier" answer is when you are dealing with two disparate domains, at which point the handler is the integration point that handles the domain edge interactions. When I say "losing scope" I mean that you have an absolutely massive forest that doesnt describe what problem you are solving at the moment. Its kind of like Clean Code. You want your context and the level at which you are interacting to be clear. Sometimes that means that your project will get to a point that you need to break it down into a few more projects, and then maybe have a common project that handles some of your generics and cross cutting concerns. This usually happens pretty quickly after you are no longer in the "glorified plumbing" phase of development for a project. I generally run with resharper disabled too, but I'm on VS Enterprise 2017. Microsoft's tiering on VS functionality might be a part of the problem for me here.
Thanks!!
Thanks for letting us know :) 
I think most desktops apps are built in WPF/UWP these days though.
You can literally do Click Once with just a file share or NAS if you don’t have a server. That’s the advantage! 
And with a web app you don’t have to install anything on client machines at all. I really can’t believe that it’s 2018 and we’re still arguing over whether someone should teach themselves how to write a web app or a desktop app. 
People are complicating this way to much. In Visual Studio you can set the “Publish” and “Update” locations of the desktop app you are building. This can be a website or just a file share location. When you click “publish” VS builds the app then moves the setup files to the specified location. Now when the use opens the app it automatically updates. The app won’t update until the user restarts the app.
What’s wrong with installing something on a users machine? .NET Click Once installs are super light, don’t need admin rights, and require 0 work to update on the IT side (aside from publishing the setup files to the update location). A company can utilize this method with literally no server or web service if needed. I’ve built apps for small environments to work on a simple NAS. No hosting fees, web or server maintenance needed which helped the company who couldn’t afford a managed service provider or have the technical experience to handle something like that themselves.
Got it working. For some reason my edmx had a defined query...
So true. CQRS is just a pattern, It is useful in cases where you write to one location, but read from another (write db, read db fed cache for example). It's not aligned with pubsub/ES type solutions, but you see the same sort of separation. It's great client side. It avoids a lot of problems with a view persisting data but also having to be reactive to data changes. I.e. don't update the view when it gets the persisted ok confirmation, only update it when you receive the new "queried" notification. 
What about the users who aren’t running Windows? Bet they have web browsers…
Totally dependent upon the business environment. If you have a multi OS environment then yes web apps are the way to go, but many businesses operate strictly in Windows. 
IoC is usually appropriate and beneficial. Not true as often for complicated DI containers. I right everything with DI in mind but haven’t used a managed container in awhile because the runtime magic really breaks the ability to reason about the code. 
Cool, but I was talking about the database in general. I've been working on a tool that analyzes table structure, helping you figure out what's wrong and, more importantly, where the easy fixes are. https://github.com/Grauenwolf/Tortuga-Drydock
This is very similar to the style I want to move to. I assume commands and queries are 1:1 with their handlers. Thus just find all uses of that query or command and you can find the handle. The power here is mainly 2 things: 1. If you are using mediators then the code looks the same for all these calls and you can do common stuff for all calls. 2. Decorators. This will allow you to add cross cutting concerns like error handling, caching, etc across all handlers in the context of 1 class. If you want to add another, it takes 1 line of code to add it to all instances in the IOC setup. This also follows SOLID in a great way and will make unit tests way easier to write. This is more CQS than CQRS. they are slightly different.
You are writing the handlers. Inside the handlers you can inject specific "domain handlers" that force the right rules if you want to. Part of this use case though is that these are usually 1:1 with the UI. Each have their own context and each can apply the correct rules for it. For example, if you have a Save Draft, you can ignore a bunch of rules compared to Finalize. You could make if else to handle thus, but it could grow and you break SOLID as it no longer has only 1 reason to change. 
Find a new job dude.
&gt; the runtime magic really breaks the ability to reason about the code. This really gets at what I feel so conflicted about, here. I think we as developers all have a threshold for tolerating magic.
Its more along the lines of the fact that composing handlers is usually tricky to get right and still very confusing. If you have logic on a domain model, it becomes an intrinsic property of everything that interfaces with it. If you make it part of a handler, you either have to make sure your DI is always set up correctly and grok how to map new handlers in DI, or you have to set up some extra conventions that might not always be apparent. It also makes it easier to make your objects HATEOAS-friendly. I don't agree with the use case on draft vs finalize. I'd be storing and maintaining both in separate areas personally; I find that the rules you want to be applying to both are usually different enough that you want to treat them as similar but separate (implementing a common interface/ abstract class for shared items, but different code for representing the different actions and context you are working in).
I definitely find DI overused in ASP.NET Core. It doesn’t feel like idiomatic C#, and there’s too much opaque magic going on.
The point is that if something is truly shared, then all handlers should inject that shared logic and run it. However, if your handler needs to pick and choose, it is different business-wise from everything else and is on it's own anyway. thus if a new rule is decided and it affects it then then the BAs have to specify that for shared and 1 off compoments.
&gt; Trying to avoid using NuGet because it is more of a hack than a solution and has edge cases that are troubling. Is it? You could place the assets in a .NET library and publish that as a NuGet project.
Arrays are fixed size. So it's Length will always be 19. So it will always print out 19 numbers. I would set them all to 999 when you create the array and in your bottom loop break if the number is 999.
If it does I'll take it as a point of honor to keeping fixing the tool until it works for you. 
90% of my development time is now spent on the mac. I only use windows for a few things. With VS Code (or VS for Mac) and sql server in docker I only need windows to run back end windows only systems or to perform final testing. If you just want to use a mac and still run windows grab a vm - i use parallels. Haven’t owned a windows pc in 12 years. 
NuGet is the answer, it's not a hack. If you're more NPM inclined make that your package mechanism. Software delivery boils down to runtimes or libraries. Runtimes are hosted in some process (IIS, Service, Console). Libraries are packaged by some producing entity then consumed at design-time. NuGet is the answer I've relied on for this outside of newer Angular 6 constructs allowing component sharing.
Do you know if is there a way to attach from Visual Studio instead of VSCode rather than go through all the stuff here for VS? ( https://github.com/Microsoft/MIEngine/wiki/Offroad-Debugging-of-.NET-Core-on-Linux---OSX-from-Visual-Studio )
oh, that's way simpler lol
I want to create a program that automates writing and sending a single phrase repeatedly for use in chat rooms. I have the taking and storing a phrase part down, I just need a way to automate sending it.
Here you go: https://stackoverflow.com/questions/3047375/simulating-key-press-c-sharp
OK while this might be the cleaner way to go about it, it's funny to me how quickly people jump to a API/web based solution vs doing anything with the host os these days. 
You want us to help you build a spam bot?
He already investigated SendKeys(). That article is 8 years old ;)
&gt;I generally run with resharper disabled too, but I'm on VS Enterprise 2017. Microsoft's tiering on VS functionality might be a part of the problem for me here. I'm almost 100% positive that "Go To Implementation" is a ReSharper addition and not a feature in vanilla Enterprise.
I don't think you know what an api is. As someone else said Microsoft Office programs provide an api.
[Here](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.sendkeys?redirectedfrom=MSDN&amp;view=netframework-4.7.2) is SendKeys in .NET 4.7.2, no deprecation notice or anything. If it works for your use case, I don't see what is wrong with it. You could DllImport [SendInput](https://docs.microsoft.com/en-us/windows/desktop/api/winuser/nf-winuser-sendinput) and call that if you wanted to go lower-level, which as a beginner you probably would not.
https://github.com/amazing-andrew/AutoHotkey.Interop
Could you elaborate on DI being a code smell? What are examples?
Heh. While I kind of agree in this case it’s interesting to me that that’s exactly what you do with Protractor or any of the similar tools for testing frontends. “Find box x, enter some text, find button y, click it. Wait for next page, blah blah blah.”
Try using the [InputSimulator](https://github.com/michaelnoonan/inputsimulator) package. It's an easy-to-use wrapper around SendInput. You can install it via NuGet: ``` Install-Package InputSimulator ``` And then use it to send key input like so: ```csharp var sim = new InputSimulator(); sim.Keyboard.KeyPress(VirtualKeyCode.RETURN); ```
Yes, because a testing tool is simulating user input, so it has to interact with the page the way a user would, rather than achieving the same goal a user would. Front end testing tools are horrible to work with and brittle, but the journey is important, rather than the destination. 
Ever heard of Selenium? It's a program I use at work for automating web browsers. May be too advanced but I think it's fairly straight forward to use. Worth looking up at least.
An API is not restricted to the web. You can have C++ APIs, .Net APIs, etc.
attemptCount 
Please read the other comments, I have already solved the issue. Thanks anyway though :)
Use Windows User32 API Sendinput. I used this method for a bot a I created in C#. You can map all of the flags for to an enum for readability. https://stackoverflow.com/questions/3644881/simulating-keyboard-with-sendinput-api-in-directinput-applications
I F12 till I get to an interface, then Ctrl K Ctrl R to Find All References. Then F12, etc. I have encountered incorrectly implemented DI that made jumping through code incredibly difficult. It also can create incomplete stack traces in error reports or make Step Into not an option.
This is the way to go, it works great
Well put. Also I think *codebae* needs to be on /r/programmerhumor..!
Thanks for this, though I don't think it'll work. I tried installing it using the NuGet Package Manager and it doesn't seem like a valid package name, and installing it using the dotnet command dotnet add package InputSimulatorPlus --version 1.0.7 gives me warnings that it used an earlier version of the .NET Framework to load it, and that it might not be compatible. Anything I do still says that the keywords InputSimulator and VirtalKeyCode do not exist in the current context.
Looks like it..
...Skip Steps 3-6. And perhaps tell VS to clean your solution and re-restore your nuget packages.
Superfluous input - Rider is awesome! 
&gt; Imagine a class (ServiceV1) which takes an IEmailService as a dependency. A method on ServiceV1 calls SendMail(...) on the IEmaliService. At this point the author is trying to test it, and ends up configuring a mock of IEmailService and checking SendMail is called. If the SendMail method signature changes, the ServiceV1 test will now fail, probably even fail to compile. Do I even need to point out that changing the signature of a method in an interface you've already programmed against is a code smell?
What are you targeting? The NuGet package targets the very old .NET Framework 2.0, so it should work on any of the more recent versions of the .NET Framework. There's no .NET Standard build though, so it won't work on .NET Core. You could probably grab the code from GitHub and get it to build on .NET Core without too much hassle. Or target one of the full frameworks if your app just needs to run on Windows.
Linky?
I'm glad that I was early enough into my project that it wasn't of any hassle to update at all.
It sounds like they're trying to display math formulas not just calculate them.
You are two days behind the times and at least one edit to the original post. There's not even many comments, here.
at least you don't have to browse the depths of MSDN or uservoice to find other people with the same issue 
If the code is dominated by it's plumbing and architecture instead of by what it is trying to accomplish then it is difficult for even experienced devs to figure out what the code is trying to accomplish. Thats the point of DI and IoC, is to strip out all that plumbing and standup code so the code is strictly what it is trying to accomplish without the fluff of creating loggers or database connections, etc. and just leave the code that actually does something. So if anything these should make the code more readable and less difficult to navigate. If the other way around then they've not served their purpose. Yes any large codebase will take time to grasp, but if you take the attitude that you don't care if your architecture has obfuscated the code's actual purpose then you're writing unreadable code. Small or large code base, the architecture shouldn't get in the way of readability. "Figuring out how it works flows naturally from that." - That's the problem. This can't happen naturally if the code is overly complicated by architectural plumbing.
new Filestream() with a relative path (like just the filename) will use the current directory of the running process. You'll want to either 1) set the current directory of the process 2) use a fully qualified path a la "/home/myname/myfile.txt"
I think this is just an example of a poorly written post or maybe just the author not understanding why steps 3-6 were needed. VS 15.8.2 didn't include the proper final build of the runtime so if you happened to do an upgrade of a 2.0 project to 2.1.3 with that version of VS you'd need to follow those steps
`const short daysInAYear=365;` Dates are complicated; have you thought about leap years?
Do capitalized letters matter?
C#'s identifiers (i.e. variable, method, type, etc. names) are case-sensitive. Yes, capitalized letters matter.
Lol I don't know why I laughed so hard at this.
I not sure if I understood, but if you want to define a year is 365 days without reading input from the user just create a simple int variable and read from it in your formula: int daysFrom1Year = 365; //use daysFrom1Year in your formula or just: short daysFrom1Year = 365; to save 16 bits.. 
There are not 365 days in a year, though. 365.25 is closer, but still not entirely accurate. Lesson learned: Working with dates is hard. Use a proper calendar implementation and understand it, if you care about accuracy. Things get very, very complicated if you go back before the Gregorian Calendar was introduced in 1582 or even before BC or things like that. i.e. You can't just plug DateTime.Now - Dec. 25th 0000 and claim Jesus was born on a Tuesday.
As mentioned by others, dates are special and can be hard. Probably not the best thing to start out with. If you just want to start out with learning language features like variables and loops, you might want to check out a whole tutorial, like this. [https://docs.microsoft.com/en-us/dotnet/csharp/quick-starts/index](https://docs.microsoft.com/en-us/dotnet/csharp/quick-starts/index)
yes.
What do you need this for? Just curious, I’ve never really come across a use case for something like this. 
I do not know how you come up with that comment without (maybe) reading and observing the reality or the things I have written at the blog. Caching is the earliest solution in RepoDb, we just further improved it and explained in our blog. And as of writing this now, v1.6.0 is soon far fetched than you favourite ORM (both speed and memory utilisations). And again, all your negative comments help us improve a lot. I hope you comment more soon!
Well, one use case is logging a specific set of reference assemblies and their versions to a log file. Want a custom "About" window? Well, the `AssemblyInfo` class will have information you'll need like copyright/trademark, company, description, versions, etc. If you create custom assembly attributes, you can inherit from `AssemblyInfo` and add the appropriate properties to the subclass, ensuring all 'assembly-related info' is still in one place. There are more usages, but its value will be derived from how you use it. Most of the class is effectively a shortcut to get common assembly attributes.
It's....okay, but I'm not sure I see the advantages of it? Essentially you've wrapped methods that already exist on the `Assembly` type with some that have a bit of a nicer name. You could more or less do this entirely via extension methods for much the same result.
Honestly, if C# had extension properties, I probably would have went the extension class route. Personally, I find the class I posted to be a neater and more explicit way to expose values in the attributes that are commonly used on assemblies.
System.IO.DirectoryNotFoundException: 'Could not find a part of the path 'C:\\Program Files\\(MyGame)'.' &amp;#x200B; I don't understand anything at this point. Even Google doesn't know the answer.
I'm not sure what you mean by 'workplace programming'. Securing an API is a pretty basic part of actually building an API. I would recommend you find yourself a good tutorial that builds a full web API from A to Z, so you can follow along. 
More simple (only with text) and always on the wallpaper. If for you it's like Microsoft OneNote, so yeah. Like Microsoft OneNote. Do you know if I can build this in C#?
I like it!! This will be extremely useful for logging purposes on a system i don't have IIS logs for because of IT politics :)
[https://dotnetfiddle.net/ir5Ymg](https://dotnetfiddle.net/ir5Ymg) &amp;#x200B; using System; public class Program { public static void Main() { int iYear = 1996; var days = (new DateTime(iYear, 12, 31) - new DateTime(iYear, 1, 1)).TotalDays; Console.WriteLine("Its "+days); } }
You can, and I did... with this class.
It's hard to know exactly what level of experience you have. But computerphile has a lot of good content on common "basic hacks". I suggest most people watch them (even non-programmers). They are a bit "dumbed down", but they provide some valuable insights. Here is one on [SQL injection](https://youtu.be/_jKylhJtPmI), and the channel has a lot of videos on the topic, as well as some other really interesting content. A favourite of mine is ["time zones"](https://youtu.be/-5wpm-gesOY). It's not hacking related, but really interesting, because it says something about "how and why bugs occur". Tom Scott (the presenter) also has a lot of interesting content on his own channel, and he seems like a genuinely nice guy!
Have a look also at [ZetExcel.com](https://ZetExcel.com), its really helpful!
Well, C# has extension methods like this: public static string ToUpperString(this object obj) { return obj.ToString().ToUpper(); } //Usage: var myObject = new MyObject(); var result = myObject.ToUpperString(); We just "added" the `ToUpperString` method to *all* objects without changing the object type (i.e an extension method). However, we don't have a way to add properties to types without changing the code of the type. If we had extension properties, we could. I don't know what the most elegant syntax for an extension property would be, but maybe something like this: public static string AssemblyPath { get (this Assembly assembly) { string codeBase = assembly.CodeBase; UriBuilder uri = new UriBuilder(codeBase); return Uri.UnescapeDataString(uri.Path); } } //Usage var assembly = typeof(Program).Assembly; string assemblyPath = assembly.AssemblyPath; We could then add extension properties to types instead of just extension methods. 
Nice! Have you considered creating a NuGet package and publishing it?
Probably will along with a few other useful types I have in my pocket :-D
&gt; Honestly, if C# had extension properties There’s proposals, and even video demos, so they might happen in 8.0.
Properties are already functions under the hood anyway
You can set up a template file for the assembly file with a unique string in there that is to be replaced with the contents of the text file. The set up a pre-build event which will invoke a script to replace the string in the template file and write the results to the assembly file name which will be used in compilation. 
I agree with the others - this isn't really a C# issue at all. &amp;#x200B; If the text is going to be mostly static - you can look at [https://docs.microsoft.com/en-us/sysinternals/downloads/bginfo](https://docs.microsoft.com/en-us/sysinternals/downloads/bginfo) as an example. This gathers some information about the machine and adds it to the background image. So you'd really just be editing the image that is currently the background and adding text. Possibly have to do something special if there is no background or a solid color or whatever. &amp;#x200B; If you want it to be more dynamic....it gets tricky. You could use something like this [https://www.softpedia.com/get/Desktop-Enhancements/Other-Desktop-Enhancements/WallpaperWebPage.shtml](https://www.softpedia.com/get/Desktop-Enhancements/Other-Desktop-Enhancements/WallpaperWebPage.shtml) \- and then see if you can use C# to edit the HTML of the webpage it's displaying. I thought windows could have a webpage as the background by default, but I don't see anyone talking about it. &amp;#x200B; If you really wanted to do it yourself, my best guess would be to look into Win32API. Most of the time with C# you'd use WinForms or WPF or UWP and not have to worry about the lower level details....but you should be able to find the handle to the desktop and possibly call DrawText() to put the text you want up. If you want it to be like giant textbox behind the icons....I \_think\_ you can do that too, but all I've ever done was draw stuff, read pixels and send keystrokes/mouse clicks. &amp;#x200B; Hopefully someone has a more helpful answer. 
I agree with 99% of this. Especially the stuff about C/Rs. I've run into people who get devastated by a bad C/R and it's one of those things where you just have to take reasonable criticism and be ready to stand up for anything you really know is important. But I'll throw in that TDD can be *exceptionally* hard to do in a true form. Both personally and in my colleagues I see that TDD tends to lead to less concise code than scenarios where the code is written and the tests are written to assert that the design intent is correct. The Names of the tests look similar. The structure of the tests often look similar. But the code itself at times winds up looking like something that's already been through a few rushed patches. I'll also nit-pick on the point of 'bad code can't be tested'. Wrong code can't be tested. But there are plenty of scenarios where either good code needs to be hilariously tested (lol, mock webservices.) *Right* code can be tested. That being said... OP, ***DO*** write unit tests that validate the intended functionality of your application. It may be frustrating at first to find that you have to rewrite parts of your code to make the testing process something that isn't terrible, BUT you will learn from that process how to write more testable (and more maintainable) code from day one.
Looks nice. Have you considered caching the reflected assembly data? This is helpful enough that if you package it up someone will be tempted to enrich log data with some of this info. Seems like a good time to memory trade-off to only reflect once. 
You mean how to generate an .exe from a c# project? A quick google search gave me this [Stack Overflow](https://stackoverflow.com/questions/2962816/compile-to-stand-alone-exe-for-c-sharp-app-in-visual-studio-2010) link. Just google “C# to exe” and it will give you more solutions
Not exactly, in order for my application to run the computer needs to have atleast .net 4 I want to be able to package .net 4 with my exe or an alternative so i wont have to install .net 4
I’m on mobile and won’t be able to type long but what you are referring to is called a “self-contained” application. That might help you get better search results while googling. 
Thanks trying to learn you rock
There is AssemblyInformationalVersionAttribute that you can use in you AssemblyInfo.cs file https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assemblyinformationalversionattribute?redirectedfrom=MSDN&amp;view=netframework-4.7.2
Package the framework and do a silent install of it when the app launches. 
plus [DateTime.MinValue](https://docs.microsoft.com/en-us/dotnet/api/system.datetime.minvalue?view=netframework-4.7.2) is Jan. 1, year 0001. 
Jumping into any big project is tough wether for work or open source. I'd begin by looking at open issues that are relatively new and simple. Often they'll be marked as "Good first issue", these will help you get aquatinted with the project through documentation or simple logic errors. Another way is to simply use the product enough to start to grasp it's possible innerworkings and frustrations. Lastly, if you're eager to start and can't figure out where to begin, try messaging the project manager through twitter or something. Most people don't get paid for open source, so they're doing it to learn or give back to the community so they should be willing to offer some suggestions.
I like it. AssemblyInfo needs more attention. There is some potential there.
Check out ilmerge. Sould let you bundle things up. You may be able to bundle up framework dlls, not sure. Been a while since I used it. Also, mono used to have a 'mkbundle' that could generate a single exe (compiled C++). I used it on Linux to make an app that would run without the framework installed on a second system. I don't know if it would work on windows. Could also switch to .net core and get it for 'free'. Disadvantage of all of these is you lock to a framework, so wouldn't get any bug fixes or security updates to the framework without a recompile.
You can already do it in F# (: Unfortunately, they aren't visible to C# code AFAIK (you can create C#-compatible extension methods too)
If you use net core you can do a self contained deployment which will allow you to do what your looking for. Beyond that the only way to do what your saying is with an installer. 
&gt;.NET Core supports self contained deployment but not .NET Framework, unfortunately. This is incorrect. He's asking about OneClick deployment. It's literally just a checkbox in the project properties to include dependencies. Go to the Project Properties window. Click the Publish tab. Click the Prerequisites... button. You can configure it from there.
The class is a wrapper around the reflection.
This has nothing to do with upgrading from net core 2.0 to 2.1. The issue your seeing is caused by you upgrading your Visual Studio 2017 to version 15.8.2. Version 15.8.2 of Visual studio contained a servicing version of .Net Core which broken a bunch of stuff. You can fix it in one step install visual studio 15.8.3 https://docs.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes#15.8.3
They are methods plus some metadata. 
Last update date, issues, pull requests and branches to get an idea of whether it's active or dead. Then I go looking for tests to get an idea of how it's used, what it's public interfaces look like. Then clone it, build it and start digging around in visual studio. Does it have sample apps? Try and use it from my own app. Eventually I might read the docs.
Sorry, I didn't mean to suggest it didn't go well with ES. I was not clear, my bad:) If you have an ES application, it will almost certainly apply CQRS. However, You can use CQRS without using ES. CQRS is JUST a pattern. When people talk about CQRS the discussion often moves to related patterns (i.e ES), and then guidance on how to apply this set of patterns. The net effect is than many people are directly or indirectly taught that CQRS = CQRS + ES + guidance. Just for fun, CQRS is itself often confused with CQS, so we end up in the horrifying situation that CQS = CQRS = CQRS + ES + guidance :) 
Have you tried specifying the absolute path? Does the same issue occur?
A .NET 3.5 app will run on Windows 7 out of the box, but not on Windows 8 or newer. You need to add the optional .NET 3.5 install on those. Thus, you probably shouldn’t bother and instead go with .NET 4.x.
How would I embed the song into the exe for sharing purposes?
Not sure if it's possible to stick in a resource? https://stackoverflow.com/questions/90697/how-to-create-and-use-resources-in-net
How do I set it to include on compile? I'm a beginner c# user and im just starting forms - came from console
Ah, alright. One second, let me boot into my computer. (On my phone atm)
If you right click on the file and properties -&gt; There should be an option to copy to output. I think that should be it.
You can do this with almost any programming language (including C#). But to do this you have to learn the Win32 API. Win32 is basically the lowest level libraries for writing Windows OS programs. C# WinForms uses the Win32 API underneath (to make it easier / nicer to use). A fair warning though, the Win32 API can be confusing &amp; hard to learn, especially if you come from / you're already used to higher level APIs like C# / .NET Framework.
Sorry but could you explain that a little bit more?
So basically, you add the file in your solution by right clicking the project -&gt; Add -&gt; Add Files. If you then Copy that file to output, the file would be added to your bin folder (where it compiles from) and therefore you should be able to reference it without the absolute path. I don't know if this is 100% correct since I am also new to .NET but that is my understanding.
This only puts the file in the compile directory. You want to include the file as a resource, assuming you want to be able to share the exe without adding a bunch of other files. To add resource: Project Properties &gt; Resources &gt; dropdown for "Add Resource", select "Add existing file" Then you can play it using a stream from the resource: Stream wavStream= Properties.Resources.[name of your resource here]; SoundPlayer player = new SoundPlayer(wavStream); player.Play();
Removed: Rule 3, spam.
It might work but it ain't legal. :)
PowerBI premium on-premises is dirt cheap anyway.
I put it in one yesterday. You can find `AssemblyInfo` [here](https://github.com/Bryan-Bennett/Boondoggle/blob/master/Boondoggle.System.Reflection/AssemblyInfo.cs).
Always say how :) Share the discovery!
Read the other comments, someone pointed out the stupid mistake I made aha. It was such a minor thing that only I was mess up XD, pretty much I was generating 0's so it would trigger when it got 0 and 2 because 0 +2=2 (instead of 1+1)
I just used the full directory instead of the name itself. I did this by clicking on the top bar in file explorer then added: \(name of .wav) to the end of the directory it gave.
Yep. Embedded resource is the way to go.
I bet twenty bucks this is a homework question and another ten that the person who wrote the question will want the writeline in the finally block because they themselves don't understand the disposable pattern
Do you have file extensions shown? I notice that your exe does not have the .exe extension in explorer, but yet all the others are shown. BelieveMe.wav isnt .wav.wav is it?
well you lost the bet. not a homework q
As a test I tried naming it .wav too so it was named .wav.wav
[All you need to know is here](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/using-statement)
I saw that link as well, but how would the code differ in my case where I’m not defining a new type with “using”?
If you aren't creating an object that needs to be disposed, you don't need to use the `use` statement.
The using statement generates a try finally block for you. Why do you want to change it?
I was getting an error "type used in a using statement must be implicitly convertible to 'System.IDisposable" with using.
I would say try not to overwhelm yourself with looking too far down the line. You'll get lost in the weeds of trying to organize it perfectly (in anticipation that it will be a massive project) rather than just building the app's functionality. \- start small, like a basic 2 project solution, one project for the UI layer, one project for the data access layer, for example. Then refactor outward AS COMPLEXITY GROWS (it may not if it's just a CRUD app). \- You can group things either based on similar type, or similar function, or a mix of both, but try to be consistent with what is already there. \- Separate files for each class is good, and yes, you can and should reuse namespaces. Looking at examples like apexdodge noted is a good idea too. There's [a handful more tips here](https://purple.pizza/how-to-organize-your-projects/) you might find useful on the topic of organization.
Ah I see. Yeah using has to be used with an IDisposable because it calls the Dispose method. You need to either add the IDisposable interface to the class your using or not use using basically.
What did you cover? Did it just do the OO features of C# like inheritance or did you cover Composition and SOLID (for example)?
Well I cover inheritance, polimorfism, child classes, all the definitions on the methods and classes like protected, private, sealed, public, abstract, even casting in classes, I pretty much know the whole package
Did you cover [SOLID](https://en.wikipedia.org/wiki/SOLID) and [composition](https://scottlilly.com/c-design-patterns-composition-over-inheritance/)? The links are just to give you an idea of what they are, I didn't read dozens to find the best :)
What a coincidence, I'm too in your shoes, just finished a lecture 5 min ago and started looking for something to spark an idea.
There are a lot of sites with practice problems you can use to improve your skills. Two of my favorites are Hackerrank and Codewars. Codewars is my favorite overall, as it increases your challenge the more you use a code, giving you harder and harder tasks. Upon completion, you are then shown what other coders on the site did, which is great at teaching you efficiency and best practices. It's helped me go from writing 10-15 lines of code for some problems, down to writing one. You'd be amazed how many issues can legit be solved with one line of code on the standard libraries.
I will check them out thank you
He said "self contained deployment", not "self contained executable". There's a difference.
Then there's no way to convert it because it doesn't make sense. 
.NET Framework allows for neither. You cannot assume the right Framework version to be instilled (7 lacks 4.0, and 8-10 lack 3.5), so you need to put up system requirements or a setup. That’s not self-contained deployment.
Answering a homework question is pointless. It doesn’t actually help the person asking (they haven’t learnt anything). It doesn’t help anyone else (they don’t have the original, honest task at hand). It’s just deception.
What’s GenerateItemsWrapper? Clearly, it’s not IDisposable, raising the question why you need a finally block. What are you trying do?
&gt; A given .Net executable will only require one framework. If any of its dependencies aren’t compatible with the executable’s target framework version, it fails to build. Thus a deployment package with an included install-this-version-if-it’s-missing step is a self-contained deployment. You *cannot* deploy .NET Framework. You can only wrap a setup that either downloads from the web or contains the bits. Either way, you need admin privileges, may need to install further Windows Update patches, and may need to reboot the system. &gt; A self-contained executable, of course, would require Roslyn and a lot of bloat for it to “bake” all of the dependencies into the executable. Yes, this is how much modern stuff works. ASP.NET typically bundles Roslyn now.
It's probably helpful to put the play and stop in a try catch and display the error. The fact that there was no try/catch is what it means when it says an \*unhandled\* exception occurred. 
If someone came on here and and said they need help with their homework, show what they've tried so far and where they are stuck is one thing. Questions like this basically are just asking the internet to do it for them.
Great. Tell us what the method is, why you’re trying to `using` it, and why you now want to use a finally block. Ask about what you’re trying to accomplish and why, not how to solve a problem that you haven’t described.
You can also have a look at [GOF patterns](https://www.dofactory.com/net/design-patterns). Not specifically OO, but foundational.
That’s because most of the volunteers aren’t problem solving robots. They want to help someone understand programming. When you come here with a zero effort “do my homework” question, it shows that you don’t care about learning. You just want someone to do your work. I That said, the problem isn’t that it’s a homework question, but rather that there’s no effort put in to it to solve it. If you at least try to solve it and get stuck, you’ll get a lot more sympathy and help.
You can kind of have extension properties with reflection, extension methods on interfaces, and ConditionalWeakTable. I did something like that some time ago.
I had a similar requirement recently, and modified and used [this](https://www.codeproject.com/Articles/31105/A-ComboBox-with-a-CheckedListBox-as-a-Dropdown). Could be worth checking out, pretty easy to tweak. 
It's like asking someone someone else to clean your bathroom becasue you don't feel like doing it yourself.
Personally I would force reference equality for reference types rather than using the default comparer (which will use the available `IEquatable&lt;T&gt;`/`Object.Equals` implementation). Otherwise you can run into issues where the instance is replaced but no change notification is raised and two-way bindings aren't updated etc.
So you would suggest something like this then? protected virtual bool SetValue&lt;TField&gt;(ref TField field, TField value, [CallerMemberName] string propertyName = null) { if (Object.ReferenceEquals(field, value)) { return false; } if (!EqualityComparer&lt;TField&gt;.Default.Equals(field, value)) { field = value; InvokePropertyChanged(propertyName); return true; } return false; }
C and C# (pronounced "C sharp") are definitely totally separate languages. You're currently in a C# subreddit. Your books are about a different language. This is probably causing you a lot of confusion if you haven't figured that out yet.
&gt; or just: short daysFrom1Year = 365; to save 16 bits.. You're probably wouldn't save anything. Yes, it's true, `short`s are smaller, but that doesn't mean you get to do anything with the savings. I don't know the inner workings, but it seems like a reasonable bet that stack frames must be word-aligned, meaning a single `short` local isn't to cause any reduction in consumed memory.
Sorry, but by the looks of it, you don't seem to undestand the basic concept of using, so your question is invalid. I assume you want to do the final WriteLine in a finally block, which is also not what finally blocks are for. Please at least try to rephrase the question so that we can answer it.
[Wizards and Warriors](https://ericlippert.com/2015/04/27/wizards-and-warriors-part-one/) Just so that you remember that not everything is a nail, even though you have a hammer. Not all problems can be solved with OOP concepts, and some are better off that way. You should always think whether composition isn't a better solution than inheritance, because most of the time, it is. Inheritance is *really* rarely justified in real world applications. Frameworks are another beast though. 
I’m betting 20 bucks it’s a x-y problem.
I think they are suggesting using Object.ReferenceEquals.
In defence: heavily relying on a DI container on itself seems fine to me, preferably based on conventions. When actual design is applied this could bring you true loose coupling and fantastic testability. But... I've actually inherited a +-75.000 line codebase full of those exact same patterns. Most teammates find this application hard to maintain. IMHO this usage of generics is counter intuitive: genetics where introduced to facilitate _code reuse_ (without sacrificing type-safety or performance) based on _commonalities_ between types. But here it's actually used to _differentiate_ behavior, based on potentially unrelated types. The use of genetic types has a somewhat viral effect: all dependent components have to specify the actual type (at least twice with constructor injection) or be generic itself. I found that: 1) the majority of generic types on my project had no type-parameter based _state_ and could therefore actually be non-generic with one or some generic _methods_. But because of the aforementioned viral effect most classes are generic because of generic dependencies. The lack of actual generic state can be disclosed near the bottom of your dependencygraph. 2) some uses of generics could have been avoided if the Visitor pattern was applied. 3) some IFoo&lt;T&gt; 's and their implementing classes reeked of Feature Envy and should have members of T Are your classes truly oo-styled classes or are they mostly functions disguised as single method classes? Of the latter is the case, than that could amplify the problem. 
No.
Idk what's supposed to happen if you use Reference equals on two structs
I was thinking of something along those lines: var equal = typeof(T).IsValueType ? EqualityComparer&lt;T&gt;.Default.Equals(a, b) : ReferenceEquals(a, b); There are situations where this isn't ideal either, but it's probably impossible to find a perfect default.
You don't need those index numbers. These numbers are basically just a way to represent the individual players and enemies, but so are the variables they are stored in. You would be creating handles to references to objects. So I'd suggest concatenating the players and enemies into one container. Then you create one empty container. And then you pick a random entry from the first and move it to the second, repeat until the first container is empty and you end up with a container with all players and enemies shuffled. 
Agreed on gang of four. Design Patterns (https://en.m.wikipedia.org/wiki/Design_Patterns) is a dry read, but excellent material. As for exercises, pick any project that sounds fun, and try it. Console apps are fine. Do a dice roller, or a blackjack game, a four function calculator, or whatever sounds like an interesting thing, and do your best with the OO design. Write down anything you can't figure out or that seems hard, and ask your next instructor about it to see if there's any advice on context you can get.
Write a Checkers game you can play in the console (including printing out the board).
 finally { if (disposableObject != null) disposableObject.Dispose(); }
Looks that way. Also using `out` isn't a very good practice, either.
It doesn't sound like what you want differs from what you have done before. If you can retrieve the current version number that is available, wether via a text file or say a php file that reads from a database, then you can use that to show a "New version is available" prompt/notification if it is newer than the version that is running.
For us, The greatest thing about our competitors dropping support for Windows 7 was that we got their customers. 
I guess your customers like paying taxes three times then... RIP 2020
Thanks, this looks great.
No. More users == good.
I'm not entirely sure I get the question, but from what I understand you are manually adding a validation error not bound to any specific input/property of the model (you specify an empty string as the name argument), and you ask why you don't see it in your summary if you configure it to only show errors bound to a model property?
false Strings did not match
If you do “All” it will display errors bound and not bound to a property of the model. If you do model only it will only show model errors. Since you added the error with an empty string for the property it will only show when all is specified.
Yeah, you are right. I am sorry, I didn't knew this is how it worked, understood it now. It would be great if you could correct me, if I go wrong. &amp;#x200B; I want to be able to achieve form submit through ajax, so I intend to return Json which would contain the details, login successful or not(bool), type of login(bool), error Message and targetURL. And then show errors or not depending on the login successful bool variable. (Is this the right way?) Here is where I am stuck. How do I show the error message when I am returning JSON? (I do not have access to ModelState now :|) How to clear validation messages on the form when a user clicks on one of the fields? (using form.resetValidation())? Also, if I am generating a dynamic partial view? Will I have to remove the existing validation and then add again as shown in the docs? Currently, I have all the scripts in the layout page, should I have a separate Partial view containing the validation scripts and add it to all the partial views which will be dynamically loaded? TIA
Hmm, this looks very interesting. The github API seems a perfect fit for projects that are on github, but i could use a pages repo for any project. Seems like a perfectly legit use of it, and there's no way i'd touch the stated limits. Thanks.
The simplest thing to to would be writing a switch statement with different cases like `case "Move": Move(); break;` You could also create a 'Dictionary&lt;string,Action&gt;` and run it like this: `methodDic[input]();` If you have a lot of functions and don't want to write mapping code you could use reflection to look for methods with a given name an call it. TD;DR: Because of your question my guess is thar you are pretty new to programming. Use a switch-case statement ;-)
I've been watching the subs related to my target audience, and i've noticed a non-zero amount of people saying they're still on Vista. And this app is very small and lightweight, so i'm not worried about performance in any environment. I'd rather make it more accessible for now.
I’ve been programming for over a year it’s just wanted to see if there was a version i could do that was as compact and simple as possible and only thing i could think of was if statements when I posted this as my memory is shit. But thanks I will try use the switch statements and try look into dictionary as I could never get dictionaries to work for me before.
Out of interest, why is out considered bad practice? I don't use it often but I've definitely used it a few times in production.
&gt; non-zero amount of people saying they're still on Vista Are they all on pirated copies or something?
It makes your code harder to debug and to read. Functions should not have side effects.
I would assume it's people just still using the OS that their system was sold with. I mean, if you're gonna pirate a windows OS, why would you choose Vista when it costs nothing to get something better?
I've done something of this nature before. Create an enum with your method names. Create a dictionary with the key as the enum, and the value as the call back. When you receive a string to designated a function, use Enum.TryParse and then call your method from the dictionary. I use a very similar system in a server application I'm developing at work.
Composition over inheritance is an OOP principle. &amp;#x200B; I do agree w/ you that not everything should be solved by OOP, but your argument was not one of them.
I like codewars. But the site is slow. I end up clicking the button twice :D
Yeah I can agree with that, but it's helped me tremendously since I started coding
Yes, I know, and I don't think I mentioned it wasn't. It seems I just wanted to make two points at the same time and didn't go into details, but tbh I hate typing on my phone, so I cut some corners. 
You're going to get a lot of suggestions to go to "problem-solving" sites and do certain challenges, but writing classes and using inheritance is not the same thing as practicing and understanding OOP. &amp;#x200B; A few other people have suggested reading up on the SOLID principles and and the GOF design patterns. On top of that, I would recommend that you learn an understand about [Imperative Programming](https://en.wikipedia.org/wiki/Imperative_programming), of which OO is a type. Learn about common anti-patterns, such as "Helper" classes, and the concept of passing an "object" into other classes and functions to change that object's state (in OO, the state of an object should be changed by external calls to its own behavior, not external behavior making changes to its data fields). &amp;#x200B; I also recommend learning the difference between architecture patterns and programming paradigms (OO is the latter). For example, some people will tell you that SOA or Micro Services can't be written in OO, that they're mutually exclusive. That's not the case. Architecture patterns normally denote the methods in which larger applications and frameworks communicate with one another, store data, things of that nature. How you implement those architectures is still up to the developers. Declarative and Imperative paradigms are both valid in those situations. &amp;#x200B; I recommend reading up on [Domain-Driven Design](https://en.wikipedia.org/wiki/Domain-driven_design). Learn about some of the design patterns it introduces, and what are some of the more common anti-patterns in using them. A common one that I see, for example, is using domain services as a store for business logic that should be in domain entities, or giving repositories magical knowledge on the internal workings of domain entities when it should be used as a simple "list" of aggregate roots. &amp;#x200B; Learn things like DRY, what it is and what it isn't (hint, repeating code is fine, repeating business responsibilities isn't). Know how to use Dependency Injection without a Dependency Injection Container. Learn how a DIC can be used improperly as a service-locator anti-pattern. &amp;#x200B; I'm throwing a lot of things out there because, as it turns out, most of the C#, Java, and other OO-language developers you'll meet think that they understand OOP. Spaghetti code is a symptom of either not understanding OO, or not refactoring after release. It's very often the former, despite what most programmers might want to believe. &amp;#x200B; The final thing I'll throw into this tirade is that those puzzle-solving sites are great tools for you to learn a language. You should learn many languages, many design patterns, many architecture patterns, and many programming paradigms. Strive to truly understand what each has to offer, because they really all have their place in the world. But those puzzles might help you practice a language, or your logic and problem-solving skills, but OO (and other paradigms) really need more of a purpose to really be practiced well. Architecture for the sake of architecture is a waste of time. Learn when it's valuable and when you're just tripping over yourself. At the end of the day, these concepts and philosophies are meant to help keep a decent speed of development and allow the institutions that use them to grow.
Okay so my knowledge here is incredibly limited but I did what you said and the music started playing when the button was checked, however I want the button to change depending on what state it is in (playing or stopped) here is my code: public partial class Form1 : Form { private SoundPlayer \_soundPlayer; &amp;#x200B; public Form1() { InitializeComponent(); } &amp;#x200B; private void checkBox1\_CheckedChanged(object sender, EventArgs e) { Stream wavStream = Properties.Resources.BelieveMe\_wav; SoundPlayer player = new SoundPlayer(wavStream); [player.Play](https://player.Play)(); &amp;#x200B; &amp;#x200B; if(checkBox1.Checked) { checkBox1.Text = "Stop"; \_soundPlayer.Play(); } &amp;#x200B; else { checkBox1.Text = "Play"; \_soundPlayer.Stop(); } &amp;#x200B; When I press the button music plays and the button changes from play to stop but I get an error as i click the button. What have I done wrong?
Trying and failing at creating a Book Review website in [ASP.Net](https://ASP.Net) Core 2.1. It's just not clicking at the moment. Also planning out a Discord game bot, based around mediveal or fantasy kingdoms. Gotta admit, a lot more planning is required before I start development.
i would avoid any questions that are very specific on frameworks, its just not going to tell you much about the company. instead try and get a feel of how they make decisions like that - whether they stick with what they know or routinely explore new frameworks etc. a better question is whether they plan on bringing anything new in, moving to a different framework - if they answer yes it means they have already had technical discussions about this so probe deeper and try and get a sense of why they made that decision. they will like you for it. * What projects do they have on the go? and in the pipeline in the future * are they hiring to replace or to expand (this one should be important for you) * what is the structure of their development team? * how many developers * developer location (onshore/offshore/some members remote) * who do the developers report to but most importantly play it by ear and if they get passionate about part of the interview then ask questions then - not only will they enjoy the interview more you can learn more about your future colleagues. 
Check out [ClickOnce](https://docs.microsoft.com/en-us/visualstudio/deployment/clickonce-security-and-deployment?view=vs-2017). It will let you update and manage versions via client side, so you don't have server-side logic beyond hosting a manifest file. 
Mate, the previous cryptoware attack was so successful because a shitton of companies was still using Windows XP and you are wondering why people are using Vista? I regularly get complains from a user who wants to use our payment site using IE 7 (YES, SEVEN!!!!). I don't even know what kind of content they can see with that...
MVC is a given when it comes to C# and pretty much most high level languages. One thing that comes to mind is to ask if you’ll need to focus on, be familiar with, or become more familiar with the RESTful architecture. It’s a big deal these days. Even for an entry level C# coder.
Ask if they have some sort of mentoring or code review process to improve junior(?) developer skills, and if they have any online learning subscriptions (pluralsight, udemy).
typeof(MyClass).GetMethod(Input, Instance) Or something like that. Look up reflection.
On the assumption that your app is free and open source, your best bet is probably is probably github, possibly in conjunction with something like chocolatey. If that's not the case you're going to have to either pay for hosting or target the store. 
Idk what your issue is, the rest-api documentation is perfectly fine. You could upload a Thumbnail like this (untested) string apiURL = "https://www.googleapis.com/upload/youtube/v3/thumbnails/set"; HttpClient hc = new HttpClient(); HttpRequestMessage hrm = new HttpRequestMessage(HttpMethod.Post, ); hrm.Headers.Authorization = new AuthenticationHeaderValue("TheScheme", "MyToken"); using (var thumb = File.OpenRead(@"C:\My\Thumb.png")) using (var sc = new StreamContent(thumb)) { sc.Headers.ContentType = new MediaTypeHeaderValue("image/png"); using(var response = await hc.PostAsync(apiURL + "?videoId=0123456789", sc)) { // Do something with response } } &amp;#x200B;
I prefer to ask questions to get a feel for the company culture. Ask the interview what keeps them showong up to work there every day. Definitely ask about how they work with junior devs to help them get better. Ask if they promote from within or hire externally, although in the tech world the best way to get significant raises is to move to a new job. 
Same. It’s something I’d love to hear asked by a candidate. Even if the position isn’t for a client-server, or web related, project. I’d perk my ears and they’d score some points simply for bringing it up.
I could be wrong about this, but I seem to remember reading somewhere that the request object doesn't get passed between the Middleware filters or handlers, but instead an immutable copy is passed through each layer when next is called. When needing to pass information between the filters or handlers, I've resorted to using AsyncLocal objects that get passed through the thread's execution context. 
Ask what disassembly tools they like to use. What source control methodology they like to use (svn? git? tfs?). What automated source code analysis they might use, to check for CVEs, eg: SonarQube. If they adhere to any OWASP methodologies.
I have an old vista machine, unlike my newer Win 7 machines, I never saw an option to upgrade for free.
Wouldn't that assume your customers have git installed on their machines? Alternatively, the /Properties/AssemblyInfo.cs file contains the project's version info, e.g.: `[assembly: AssemblyVersion("1.0.0.0")]` If you just fetch that file off GitHub, you don't need to hassle with maintaining GitHub tags, separate json files, etc.
when are you doing this when its requested by the front-end? why not just convert the whole thing to a JSON object and let the frontend deal with it?
I'd write it like this (and maybe make an extension method out of it): T GetProperty&lt;T&gt;(TypeOfResult result, string propertyName) { switch (T) { case string: // ... break; case DateTime: // ... break; case int: // ... break; } } Or string ParsePropertyAsString(TypeOfResult result, string propertyName) { ... } string ParsePropertyAsDateTime(TypeOfResult result, string propertyName) { ... }
Since it is a WPF application, you can make it a click once application that automatically checks for updates based on the configuration. No extra work to check for updates required. https://docs.microsoft.com/en-us/visualstudio/deployment/how-to-check-for-application-updates-programmatically-using-the-clickonce-deployment-api?view=vs-2015 
To be honest I hadn't even thought of that as an option, but it's a good one. One argument I can think of for having it be on the backend side would be the security of it being a model/entity? I may be way off with that though.
Don't use datatables. Have a look at List&lt;T&gt; and a binding source. Load your objects and set the BindingSource Datasource to your List/IEnumerable&lt;T&gt;. You can then safely use the BindingManage from the BindingSource to access the object. Typing from my phone so example code is tricky, but some googling can help you find an example.
Wow, some shady person down voted you. Click once is what i would suggest as it's built in and is exactly what I use too.
You did this guys homework for him
Well, besides the fact that this logic always calls "Play", you are recreating a new SoundPlayer object every time you click the button. You should be referencing an existing object instead if you want to call "Stop." I'll leave that to you to figure out, because I don't want to write your program.
Okay thank you but there if still the error that occurs when I click the button. Any ideas?
Ok, so still not sure how to do that. MyClass does not populate. &amp;#x200B; I have below: &amp;#x200B; &amp;#x200B; public class InventoryItem { public String Serial\_Number { get; set; } public String Eq\_Type { get; set; } public String Status { get; set; } public String Make { get; set; } public String Model { get; set; } public String Machine\_Name { get; set; } public String Conway\_Tag { get; set; } public String Notes { get; set; } } &amp;#x200B; &amp;#x200B; private void MenuItem\_Click(object sender, RoutedEventArgs e) { List&lt;InventoryItem&gt; myClass = dg\_inventory.SelectedItem as List&lt;InventoryItem&gt;; } &amp;#x200B;
You mean IntelliJ IDEA, right? Although I don’t know. Rider is awesome but I haven’t used this particular feature. 
Hosting the manifest would still be the issue. The app can't directly call any service that's under my control.
My previous job had a monolithic database with over 600 tables. The naming convention for these tables were something like "eight characters max and prefixed with the letters CD". Don't ask me why because the original creator had bounced 15 years prior lol. I think I laughed because I can *emphasize* with your pain lol.
The updated code can be anywhere such as S3 or a local directory. You just need to have the ability to write to it.
This should help : https://docs.microsoft.com/en-us/dotnet/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls In your click event, the selected item is of type InventoryItem. List&lt;InventoryItem&gt; represents all those items. 
Hang on.. was this at a company in Maryland by chance? 
Nope.
 result.Properties.FirstOrDefault("lastLogonTimestamp")?.Select(timestamp =&gt; DateTime.FromFileTimeUtc(Long.Parse(timestamp.First().ToString()))) &amp;#x200B; Maybe something like this using Linq?
Having the ability to write to a location that i can read with C# is the problem. Using S3 wouldn't really be any different than using my VPS, except that i wouldn't have to worry about security issues such as MITM. Definitely a benefit, but still not a perfect match for what i'm looking for.
That's a really wrong assumption. Supporting Vista means a lot more than just not using technologies it can't support. It means actually testing and supporting your product on that platform. That means having a Vista install of whatever release you're planning on supporting and spending the same kind of effort testing on that platform (and 7,and 8) as you do 10. Probably network isolated for Vista. That means being prepared to work out what patch levels you'll support and being willing to at least investigate faults on anything above that. If you're not willing to do that, don't pretend you are. It does neither you, nor your users any good. Target what you're willing and able to support. 
I miss this bad boy. https://winworldpc.com/product/microsoft-visual-bas/10-for-dos
Ha! That makes me feel like a kid 
Are you looking for something like this? https://github.com/migueldeicaza/gui.cs
I like this one, myself: https://github.com/arthurvaverko/ConsoleMenu
Ugh, One of my first prods was a dos windows api. Create windows, drop shadows, support for common usage patterns like menus and mouse support! Borland C iirc. Def C,just can't remember how I built it :) Sorry nostalgia, I bought a copy of ABC recently because I remembered I used to code C and loved that book :)
I remember using ANSI libraries to simulate overlapping windows in BBS door games. Those were the days. 
I really don’t think there’s enough people making apps like this that you’ll find something with a large user base and regular updates. As far as long term stability, forking an open source project is about as much of a guarantee you’re gonna get. 
If you want to try something new you could create a custom attribute, decorate the methods you want to call, enumerate all methods with that attribute at runtime, and build a lookup dictionary. IMO that would be a pretty elegant solution but not that simple for beginners. I recommend implementing it the simple way and try "fancy" stuff later ;-)
Sure just create an xml reader in c# You can use an xml document and load a file location to the xml documet and from there you can handle each tag and name element from there var xdoc = XDocument.Load("C:/Users/wamma/Documents/testcase.xml"); var testCases = from tc in xdoc.Descendants("testcase") select new CommonLib.TestCase { date = (string)tc.Element("date"), name = (string)tc.Element("name"), sub= (string)tc.Element("subject") }; If youd like to see a fully working example have a look at this peace of code here https://github.com/xXxTheDarkprogramerxXx/PS3Tools/blob/master/PS4%20PS2%20Classis%20GUI/PS4%20PS2%20Classics%20Gui%20(WPF)/MainWindow.xaml.cs#L638 And here is the xml file being prased https://github.com/xXxTheDarkprogramerxXx/PS3Tools/blob/master/PS4%20PS2%20Classis%20GUI/PS4%20PS2%20Classics%20Gui%20(WPF)/Resources/PS2Classics.gp4 
I’d have to disagree. Everyone that does back end work makes things that run from a console sometimes. It’s just we all make our own libraries lol 
Why not use DateTime? ? 
Thanks 🙏 
&gt;https://www.infoq.com/news/2017/05/async-streams Done! &amp; Thank you!
You can't switch on a type, it's not currently possible.
It's Miguel de Icaza, the guy behind GNOME and Mono/Xamarin, I think he'd warrant more eyes than many on his code. :P
That’s good info thanks
Setting values on Request Headers inside of aspnet code Luke Begin_Request makes values available in other handlers and for output in IIS logs. It's weird that they would lockdown the OWIN middleware. 
thank you for the source, this is wpf, forgot to mention, will that change anything? &amp;#x200B; So this is my linq query in a combobox drop down event: Populates the datagrid with query which is a list. So I am confused if I want to populate a List&lt;t&gt; with the linq query, when I try I get yelled at because a is anonymous. &amp;#x200B; &amp;#x200B; var search\_catergory = cbx\_cateogories.SelectedItem.ToString(); var context = new EquipmentEntities(); var query = (from a in context.Equipments where a.Eq\_Type.Equals(search\_catergory) select new { a.Serial\_Number, a.Make, a.Model, a.Deployed\_To, a.Machine\_Name, a.Conway\_Tag, a.Status, a.Notes }).ToList(); dg\_inventory.ItemsSource = query &amp;#x200B; &amp;#x200B; &amp;#x200B;
[CursesSharp](https://github.com/sushihangover/CursesSharp)
If querying those XML files is your only purpose, there is no need to load them into a database. You can simply load the XML files into memory (in your C# app) and query a list of objects.
&gt; This is my first programming job and i want to come out as enthusiastic and motivated and eager to learn becase im scared my skills arent enough. Those should really be the only traits they're looking for in a junior beyond basic programming knowledge. Frameworks and libraries come and go like the wind, you'll learn lots of them over your career. It's generally not important to ask about them. Instead, ask about their process, culture, release schedule, and deployment lifecycle, other languages, maybe what they use for data storage. If they ask a question you don't have the answer to, that's the time to show your eagerness to learn and be excited. As a junior, it's easy to spin "I don't know" into "I haven't heard of that, but it sounds neat and I'll definitely check it out when I get home."
I would to add to what people wrote above some special questions about the project you are gonna work with, are you going to start up a new project or going to maintain an existing project, if it's existing project 1-what architecture they used to build it, DDD, CQSP, ETC. 2-Is the people who started the projects still working on it? 3-is it well documented, commented, or you will spend hours reading the code trying to figure out the purpose of it !! ,,,, I guess you can follow those questions with some other meaningful depending on your interviewer answers. Good luck. 
Yes, IntelliJ IDEA (I have updated the description, thanks for pointing it out). I am transitioning from IDEA to Rider for a new project and I hoped it supports this feature, since it is very similar to the IDEA.
Yeah, ?? and ?. are not quite enough to deal with null references in all scenarios. I wrote a monad Maybe type that i'm using to deal with that https://github.com/mariusmg/Microruntime/blob/master/MicroRuntime/Maybe.cs Maybe&lt;MyClass&gt; result = .... if(result.HasValue) { } 
Never saw that intellij would do this so I can't fully answer you. Usually one needs to have the variable selected to extract it. One thing that might help is by pressing ctrl + w the selection expands to include one additional expression which you can then extract quickly (aka select module like usual,press ctrl + w to include.hot and press ctrl alt + v to extract) 
Seems like a quite convoluted solution to an everyday problem. I work in data integration and often deal with APIs where the return varies in its contents throughout the course of a day, hour or even minute. Oftentimes it’s easiest just to plug in fake data to keep from throwing an exception, or just us the ? modified to allow your data model to include nullable fields. This does look nice and robust but time consuming to implement.
I feel like I'm missing something. Can you explain the purpose of a nullable-like wrapper around reference types, when you can also do MyClass result = ... if(result != null) ...
System.Nullable was created for database interop, IIRC, and is already part of the .NET platform (and has been for ages). If nothing else, it lets you draw a clean distinction between when a value is empty and when it contains whatever sentinel value you might have used, instead.
That implementation of Maybe&lt;T&gt; won't help that sort of null checks though. Also an instance of Maybe&lt;T&gt; can be null still...
 ok i did this: (My data grid is already objects) Modify\_Form.cbx\_status.Text = (string)type.GetProperty("Status").GetValue(dg\_inventory.SelectedItem,null); Modify\_Form.txt\_make.Text = (string)type.GetProperty("Make").GetValue(dg\_inventory.SelectedItem, null); Modify\_Form.txt\_model.Text = (string)type.GetProperty("Model").GetValue(dg\_inventory.SelectedItem, null); thanks for your help, this is my first EF design. One frickin line took me all day haha &amp;#x200B; &amp;#x200B;
If Maybe&lt;T&gt; is a reference type itself then yes. Mu thought would be to make it a value type like here: https://github.com/la-yumba/functional-csharp-code/blob/master/LaYumba.Functional/Option.cs%20https://github.com/la-yumba/functional-csharp-code/blob/master/LaYumba.Functional/Option.cs
No worries, glad you have it sorted.
Making your nulls a different type saves you from `NullReferenceExceptions`, simply because you can't *accidentally* pass a `null` to something expecting a `T` if all you have is a `Maybe&lt;T&gt;`. That is, if you *have* a `Maybe&lt;T&gt;` and *need* a T, you can't make the mistake of passing the value you have in place of the value you need without ever checking it. C# 8 will have something similar baked into its non-nullable references feature.
Not really. None of the System.Data classes actually understand System.Nullable. Though it would be really nice if they did.
First off, if I missed a rule that stated posts such as this are not allowed then please forgive me. &amp;#x200B; A bit of background on this project. It started as a personal project to help me with jumping around between various systems and constantly making changes to UI designs (be it layout, color, rewrites, etc). Eventually I sat down and learned some WPF and while it isn't the most pretty code I thought it was worth sharing. &amp;#x200B; I made it open source so feel free to fork it!
My guess is because Microsoft isn't that big of a fan of Open-Source in general. But I could also be very wrong (since they have VS Code which is open-source)
I'm looking at you, DBNull.Value.
I know how you feel. Maybe use structs instead? 
It should definitely be a struct. Otherwise you have to null check your maybe.
MonoDevelop was originally a port of SharpDevelop to the Mono Platform, thus the name. It was not called 'Visual Studio for Linux' originally because Visual Studio is a Microsoft trademark, and at the time neither MonoDevelop nor Mono had any Microsoft ownership. Now, Microsoft owns Xamarin who owns the Mono Project, so the Macintosh release of MonoDevelop is effectively "Visual Studio for Mac". The Windows release is Xamarin Studio. The Linux release has probably remained "MonoDevelop" because there hasn't been a need to change it.
Maybe you're thinking of all the weird operator overloads that was added to facilitate the SqlBool (which was added before Nullable to support sql nullables). https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/true-operator
Why do we have 3 names for the same product, tho?
&gt; Microsoft isn't that big of a fan of Open-Source in general https://github.com/dotnet/csharplang https://github.com/dotnet/roslyn https://github.com/dotnet/core https://github.com/aspnet/Home
 finally { disposableObject?.Dispose(); }
I find that 80% of the article is unnecessary complicated and confusing, specially if you are just a beginner. The last part actually explains what you need to know.
Well, I lied! Naturally, testing in my local lab did not produce any issues with logging off/restarting. But, I've verified this issue still persists. Where should I be putting this in my form?
Yes, you can when you give it the variable, just not on a type itself. I think I read that they are looking in to it; it'll be useful in a few circumstances.
https://github.com/phonicUK/clrcli As you see there are lots of projects for doing this :)
Disregard. Found (this thread)\[[https://stackoverflow.com/questions/2498432/c-sharp-windows-application-prevents-windows-from-shutting-down-logging-off](https://stackoverflow.com/questions/2498432/c-sharp-windows-application-prevents-windows-from-shutting-down-logging-off)\] which helped. Thanks again!
Wut? &gt; reference types that maybe are null and needs to be checked, So you are going to check if they are null anyway. And with your `Maybe&lt;T&gt;` you spread even more garbae in the memory. So to sum up: You unnecessarily wrap your references into an unnecessary class that spreads unnecessary garbage into the memory, making the GC spend time on unnecessary work. &amp;#x200B; **JUST** So you don't have to write `if (variable == null) return;` &amp;#x200B; And now, let's get some downvote: You are a horrible game developer. Making all these unnecessary BS just to make your code "fancy" (not), resulting in an unoptimized game. Also IMO your "solution" makes the code even more "unreadable". An `if (variable == null) return;` is simple, short and straightforward. While your solution will end up with a lot of if (myStupidWrapper.HasValue) { //... } I guess these kind of bullshittery leads to games like AC: Unity, PlebG, GTA IV, Skyrim, Borderlands 1, Saints Row, RE: Operation Raccoon city and so on... Cuz devs stick to these...... uhmm... what do we call these? When someone sticks to a really stupid and totally useless-in-context idea? &amp;#x200B; Also: Just to push you into an IRL recursion: How do you check for the nullability of your Maybe&lt;T&gt;? Maybe&lt;Maybe&lt;T&gt;&gt;? And how do you check for the nullability of that? Maybe&lt;Maybe&lt;Maybe&lt;T&gt;&gt;&gt;? JUST.... Because you are a hipster, that doesn't like a good working solution `if (variable == null) return;` at the beginning of the method / block.
So if you're not looking to add the controls onto the form, like myself even though the instructor insisted that we use the tools via the gui, and instead would like to spawn the Open/Save file dialogs in the code for easier usability: A sample of how to use the OpenFileDialog. There is a link below with the full code to understanding how to use open and save with a rtf tool in Visual Studio 2017. OpenFileDialog OFDopen = new OpenFileDialog(); // Later use private void openToolStripMenuItem_Click(object sender, EventArgs e) { OFDopen.Filter = "All Files(*.*)|*.*|Rich Text Files(*.rtf)|*.rtf|Text Files(*.txt)|*.txt"; // What we see, just for looks OFDopen.FilterIndex = 2; // If the filename variable is blank then default is .rtf OFDopen.FileName = ""; if (OFDopen.ShowDialog() == DialogResult.OK) { // Grab information from the window the user just finished with currentFileName = OFDopen.FileName; // Check to make sure the file picked is plaintext if (currentFileName.EndsWith(".txt") || currentFileName.EndsWith(".rtf")) { // Load the proper information if (currentFileName.EndsWith(".txt")) { rtbMain.LoadFile(currentFileName, RichTextBoxStreamType.PlainText); } else { rtbMain.LoadFile(currentFileName, RichTextBoxStreamType.RichText); } } else { MessageBox.Show("Error: This application can only open rich text and plain text files.", "Error With Selected File", MessageBoxButtons.OK, MessageBoxIcon.Error); } } } [Full Visual Studio 2017 Example code](https://pastebin.com/9VZKHj6e) Feel free to ask questions. &amp;#x200B;
&gt;But I could also be very wrong I wasn't claiming to be right ;) But aye-- thanks for the resources! &amp;#x200B;
Look closely at the loop that prints out the numbers. Figure out how many times it runs, and why. 
You are being far too dismissive of this idea. For one thing, the C# devs are looking at this same issue that Maybe&lt;T&gt; solves, and we'll have a much better solution in C# 8. https://msdn.microsoft.com/en-us/magazine/mt829270.aspx For now, Maybe&lt;T&gt; is a good way to mark your intentions. You don't need to check if the maybe is null, because getting the null reference exception there is the "correct" behavior if the maybe is null, I would argue. It means you aren't using the class correctly. You can also design the maybe class to implicitly convert null into an "empty" maybe. Your personal attacks are also not appreciated, particularly when you clearly haven't really dug into this issue.
Kinda went off on a strawman there, but if we stop here it gets at the crux of disagreement: &amp;#x200B; \&gt; So you are going to check if they are null anyway &amp;#x200B; No, that's the whole point. You're not going to check every possible reference type for null. In this model you never check for null, you check for "missing data", and only in the cases where the data can actually be missing.
thanks
I would agree if I wasn't currently in a Junior position without any certs or degrees.
&gt;you check for "missing data" So you are checking for null... Got it... there is no "missing data" in C# (null in JS) there is null and not null (or value types).
&gt; His Maybe doesn't work unless the entire codebase follows a convention -- parameters or returns that *can be null* should use Maybe. For parameters or returns that *should not be null*, do **not** use Maybe So, all of these because you can't properly document the code? You know, you can have the `&lt;summary&gt;` header in C#, where you can write: **DO NOT PASS NULL!** OR... You can follow the standard signature, and the IntelliSense can warn you that the method would throw ArgumentNullException. &amp;#x200B; The C#8's non-nullable types are compiler-time stuff. His Maybe&lt;T&gt; is just a stupid way to say "DO NOT PASS NULL HERE" where logically you would write this to the DOCS, instead of bringing in tons of useless overhead to your code, and making it ugly and unreadable as hell.
I'm always going to choose to make my code describe my intentions rather than making comments to describe my intentions. If you use type of Maybe class consistently, you are much less likely to accidently create a null problem, which is the whole point. Yes, the c#8 feature is better, but doing this now prepares you to make that transition as well as having the current benefits. 
Uhhm, like every experienced programmer, I would write in the docs: **This value is never null** And write in the development docs: **This value must not be null** &amp;#x200B; So, if anyone ever writes a code, that allows that field to be null, is a **BUG** and must be fixed. There is no use of Maybe&lt;T&gt; here, as it can't do anything to prevent the null value, except throw an exception in the constructor, but then again: You can do that in the Property's setter or the User's constructor too.
Personally (and you won't like this answer): This is good way to write a bad codebase. You put tons of overhead, which makes the code slower, which makes the user experience worse... Just: Because you are lazy as hell, and you make your codebase a clusterfuck to indicate your own lack of skills to design your algorithms. Also, when C#8 comes out, you have to delete all your Maybe&lt;T&gt; usage (and in an industrical application, this can mean 1000+ references), also your collegaues will be really mad at you for spreading the codebase with such a stupid "notation", and if I were your boss, I would highly question your skills in programming.
You have my permission.
Stop giving them ideas, man! They are already terrible with the naming!
Always with the personal attacks. More than anything we're discussing here, that's the real issue. I can't help you with that though. I'll give you one thing. If I was to profile my application and notice that my Maybe code was truly taking up an appreciable amount of time, perhaps in a critical loop, I would definitely consider taking it out there. I would be very surprised if such a situation were to come up, to be honest. As doe the issue of migrating to c#8 down the line, I'll absolutely contend that using a Maybe class better prepares you, because you've already marked the places where you will ultimately use a Maybe class. When the time comes, you could probably right a fancy regular expression to convert your maybes into nullable reference types and get a lot of the work taken care of right there. Finally, I think it's important to address the contexts these design paradigms might be used in. I mostly write enterprise software that can get pretty complex, but rarely gets performance critical. It seems you mostly do game development. I would imagine that the times you might want to use a Maybe as I do might be more rare in game dev, and performance is probably more important accross the board. I have attempted to understand your position. I ask you to try to understand mine (and, as it seems, the opinions of many others in the community). 
When I was a beginner I really liked articles like this that showed the whole process on how and why we use something. To just tell me to put a `?` tells me nothing about why certain types require one and others don't. Especially when the syntax may not apply to other languages, it's nice to know how C# does it, even internally. It's just different styles of learning, some people want to whole picture, not just the solution.
I think I chenge the numbers. Length. But what should I type instead? 
Are you legitimately interested in understanding the disagreement?
u/anamorphism has the most succinct approach. You're going to need to get at least a copy of the dictionary's keys. You could do something like foreach (var k in dict.Keys.ToList()) { dict[k] *= otherInt; } which would avoid creating a duplicate of the whole dictionary, but is probably not significantly better performing in most situations.
Removed: Rule 4.
Thanks
You haven't made a monad. You wrote your own `Nullable&lt;T&gt;`. The deal with monads is that once you're in one you're stuck but you're afforded guarantees about interacting with it. For Maybe (and it's big brother Either), that guarantee is when you interact with it through map, apply and flatmap your operation will always act like it succeed even if it actually failed at an earlier step. In functional languages there are typically ways of escaping a monad but they're usually unsafe. For example, haskell provides `fromJust` which if you have a Just, returns whatever value it held but if you have a Nothing then it errors out exploding in your face. 
I've seen some suggestions here that involve taking and copying the whole dictionary. Well that's quite wasteful of resources. Why don't you just iterate over the dictionary using foreach(keyvaluepair&lt;key type, value type&gt; kp in dictionary) { Kp.value *= x; } This doesn't guarantee an ordered iteration but it'll iterate through it all in one go. Sorry for any typos and mistakes I might have made, wrote this from mobile.
Do *not* create and throw NullReferenceExceptions. Use something contextually appropriate, like ArgumentNullException or InvalidOperationException, and give it an informative message. Or derive your own type and use that.
One word: serialization.
According to the Haskell fanboys, Nullable&lt;T&gt; is a monad. Then again, they think everything is a monad so I try not to listen to them.
What would serialization do for this problem? Genuinely asking.
Serialization is the cause of most nulls in a typical application. And the standard serialization libraries aren't going to support this scheme.
KeyValuePair is a struct, tho, so it won't update the entry in the dictionary itself.
I suppose. But manually implementing that interface tends to be rather tedious and quite error prone.
It doesn't work. KeyValuePair&lt;K,V&gt;.Value is read-only.
There are good reasons to copy rather than update. 
I would remove the ToList(), since that causes a second iteration of the dictionary keys.
&gt; we at my workplace never had any problems with nulls. I highly doubt this.
Without the ToList() to create a reified copy of the KeyCollection, it creates &gt; System.InvalidOperationException: Collection was modified; enumeration operation may not execute. I tried this out in SharpLab.io before settling on this solution. I couldn't find a way to do this in the time I was willing to spend on it that doesn't create a copy of *something*.
You are just making a public instance variable. In order to access it, you need to make it a property. public int x { get; set; } 
Hug, just like that and my x will be known by my child classes? Also, I could do the integer protected right, so that only child classes of Person could access x
Yes. This way is the more typical way to do it, but I think the other guy actually more directly answered your question. I get a bit confused with inheritance sometimes too. It's not used as often as you might think. 
Why doesn't tje compiler know what to do with that statement? 
&gt; You are just making a public instance variable. In order to access it, you need to make it a property. Can't a child class access a public instance variable on its parent class?
Were you able to get SignalR working in Unity due to the .NET 4.x compatibility? I previously looked into using SignalR but the legacy .NET support but had a tremendous amount of trouble.
It’s a statement - a line that says to do something. Statements can’t go directly into classes. They have to go inside something like a method, or a constructor.
&gt; So you are going to check if they are null anyway Only if I wrapped them inside a `Maybe&lt;T&gt;`. I wouldn't be wrapping *every* variable of reference type inside a `Maybe&lt;T&gt;`. &gt; You unnecessarily wrap your references into an unnecessary class Nope, I would use a `struct`. &gt; So you don't have to write if (variable == null) return; That's an over simplification of null handling. Lifted types support composability which abstracts away the `if` checks. The conditional it not removed, it's just put somewhere else where I don't have to look at it. &gt; You are a horrible game developer I don't develop games. &gt; While your solution will end up with a lot of `if (myStupidWrapper.HasValue)` That's your assumptions about my code. &gt; How do you check for the nullability of your Maybe&lt;T&gt; I don't, it's still a struct type. &gt; Because you are a hipster ... &gt; &gt; reference types that maybe are null and needs to be checked, &gt; BTW this sentence doesn't makes any sense I wish for a type system where nullability is explicit in the types and not via the documentation. Such that it's obvious when I really should be null checking and when I not need to.
Yup, along with every one else since it's public. I think the parent you replied to just got a little mixed up with syntax vs practices. Typically we wrap fields with properties for all kinds of advantages and conveniences, but it's not required.
Okay look, i'm not "in this business". I said from the start that it's a hobby. I'm not stealing your customers, and i have no financial motivation with this project. I don't even care if no one uses it. In fact, i'm not even going to use it myself. This is actually to solve a really simple problem that i see people complaining about, but it doesn't affect me. I just had an idea on how to fix it, so i'm doing it, and i'll offer it to them out of the goodness of my heart. And the update notification is just a courtesy to any potential users, on the off chance that i do update it after the initial release. But the fact that i'm doing it, in no way implies that i agree to adhere to any sort of developers code (yes, pun intended). You can do it your way, and i'll do it mine. Remember when Ballmer chanted "developers!, developers!, developers!"? Well like it or not, he was talking about me too. And i don't remember him handing out badges to certain developers to police other developers. So just relax and accept that if it works on whatever version of Vista i have, i'm going to say it works on Vista. And if you have a problem, well you're free to report an issue, or do whatever you want to it, but don't act like i'm damaging all of software engineering by making a shaky compatibility claim, for an OS that saw its last major update nearly a decade ago.
Pass a stream as an argument. If you pack it with your parameters for individual functions then you can unpack them on the other side. It's not nearly as efficient as traditional parameters, but sacrifices are made when you want to do dynamic method calls.
Why do you want to work eith anyone who "refuse" to document their code? I always fill my code with explanations, so my successor wont run into the same situation as me, where I had to dig deep in a 10+ year old legacy code, which holds many failed attempt to refactor, eventually making it the most horrible spaghetti code I've ever seen. I could pray for the flying spaghetti monster god for any kind of documentation.
&gt; Unfortunately there is no way around this unless your dictionary value was a reference type There is, but it's weird. Create an interface with get/set methods on it. Implement the interface in a struct. Create a dictionary with whatever key and the interface type, not the struct type, as the value. Dump a bunch of your structs in there. You can then do dictionary[key].SetValue(x) (for example) and bypass the copy semantics you'd incur if the dictionary value type was the struct. You'll be operating on the same instance stored by the dictionary, not a copy. I can't imagine a scenario in which you'd choose to do that over anything else, though.
Because? What is so special in testing and debugging your code?
How many times did you want the output loop to run? Are you holding that number anywhere?
I see your point, dont get me wrong. But I dont understand the approach. You must write a horribly complex and long blocks to lose track of each variable's purpose, while nearly every coding tutorial suggest not to write mile length blocks. From my point of view, the whole concept of Maybe&lt;T&gt; is just a solution for improper code design and/or documentation. If a var is ensured to not be null, I just add a comment there and every programmer will know. Messing around with new types, especially generics can mske your code really ugly.
Some things I noticed (in no particular order): - You do not use MVVM but instead use EventHandlers. You might want to look into Commands (MainWindow.xaml) - `&lt;GroupBox.Header&gt;RGB (Byte)&lt;/GroupBox.Header` can be just `Header="RGB (Byte)"` in the parent tag (MainWindow.xaml) - You define 4 row definitions with `Height=".25*"` in height. Just use `Height="*"` which does exactly the same (MainWindow.xaml)
because people on reddit (who only downvote but don't post) are ... special ... they don't like your answer, but don't know any better and are afraid to give ANY useful critisism. &amp;#x200B; &gt;\[...\] Hey, this doen't make any sense - how about more like ... &gt; &gt;\[...\] That's a possible solution, i used to do .... &gt; &gt;\[...\] Why do you think this is correct? \[Maybe it was a solution to a very specific problem, that got carrie over to simpler problems\] &amp;#x200B;
Nor is it always an advantage or convenience. Actually, I don't see how it's ever a convenience.
Why is this silly? Depending on how often this transformation is being run and then how often the dictionary would be queried after the transformation, this could be cheaper by my reckoning.
Except when you got a list/array of many shorts (or bytes), in which case they do take less space on the stack/heap &amp;#x200B; var ints = new int[1_000_000]; var mem2 = GC.GetTotalMemory(true); var shorts = new short[1_000_000]; var mem3 = GC.GetTotalMemory(true); var bytes = new byte[1_000_000]; var mem4 = GC.GetTotalMemory(true); Console.WriteLine("Ints are: {0}", mem2-mem1); Console.WriteLine("Shorts are: {0}", mem3-mem2); Console.WriteLine("Bytes are: {0}", mem4-mem3); &amp;#x200B;
You're missing the point. It's not about stealing my customers, it's about how you treat **your** customers, and they are **your** customers, whether they're paying you or not. When you claim your product works on Vista you are telling your customers that your product **works on Vista**. If you're not actually willing to commit to that, then **DON'T MAKE THAT CLAIM**. It's not about any sort of developer's code, it's about treating people who are willing to try your product like their time is valuable and they matter. It's about not being an arsehole. The fact that Vista is an ancient OS is irrelevant because no one is forcing you to claim that your product works on Vista.
It's worth pointing out that this approach creates a brand new dictionary. That means that if you have any other variables still pointing at your old dictionary, they won't see this change. That might be fine for your project, or it might not. But from what I gather about your level of experience, the important thing is to understand the implications of this, and the difference between this solution and that presented by /u/Canthros, because although they both multiply the values by another number, they do not produce the same end result in terms of side-effects.
Yea, but If I rename the Member, it doesn't get executed from new Application.run(new MainForm()). If I rename the class, everything gets underlined red with 'blah blah does not exist' errors.
You can't async a constructor. Relevant stackoverflow https://stackoverflow.com/questions/8145479/can-constructors-be-async
I agree. It is really useful in this case to understand the different approaches and the advantages of the final solution.
Nor should you as you aren't supposed to do work in a constructor. 😀
This, or use EventToCommand !
better would be, how often do you release
OK thanks, this worked well and I think it's exactly what I am looking for here. 
I do not know, I haven't used MonoDevelop in years. So I don't know what kind of state it currently is in. I do know that MonoDevelop is open source, and anyone can create their own version of it, and Visual Studio for Mac is not.
I'm ashamed that I nearly down voted you. 
I guess this is something that I have just taken for granted over the years.
as long as user enters a number,so between 1 to 20.
Cant you do - kvp is a KeyValuePair&lt;string, int&gt; in the case, and should preserve the dictionary entries without ever CARING what the keys are. ```Dictionary&lt;string, int&gt; dict = ... initialize dictionary here..; int multiplier = 2; foreach (var kvp in dict) { kvp.Value *= multiplier; }```
You don't see how wrapping a field as a property is a convenience?
You can't have an async constructor and neither can a constructor return a value
All fair points. Thanks for the feedback. I'll make relevant changes as soon as I can. :)
I might have stated the question wrong so I'll try rephrase it. I'm not sure how I'm supposed to replace the Database class (TodoContext) in the tutorial I linked above. Instead of using a local databse and store the items there I want to store and retrieve the items from an XML document. 
I recently upgraded some apis from 2.0 to 2.1. The upgrade cut average response times and average CPU usage in half between upgrading and switching to DB Context Pooling from regular Db Contexts. Dramatic performance improvement in my option. 
oh ok, Do you have any other suggestion of documentation/tutorial for my case?
If I were you I would still complete that tutorial so you get the hang of .NET Core. Then you can read about things like [file providers](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/file-providers?view=aspnetcore-2.1) to tweak your application so that it behaves how you want.
Probably. But one has to have hope.
I appreciate the response, how exactly would I place this? Would I replace the entire block I mentioned, or would I put it in front/behind?
Over on /r/dotnet a few days there was a guy who started insulting someone who suggested the OP there use a XDocument. I don't get that sub sometimes, it's pretty toxic.
Here's a sneak peek of /r/dotnet using the [top posts](https://np.reddit.com/r/dotnet/top/?sort=top&amp;t=year) of the year! \#1: [How .Net was Started](https://i.redd.it/7agry8pn1avz.jpg) | [42 comments](https://np.reddit.com/r/dotnet/comments/7a0we2/how_net_was_started/) \#2: [Explaining LINQ to a 5 year old](https://twitter.com/bewidec/status/935573858136051713) | [38 comments](https://np.reddit.com/r/dotnet/comments/7ge3sx/explaining_linq_to_a_5_year_old/) \#3: [First official preview of Blazor released (client-side .NET web apps on WebAssembly)](https://blogs.msdn.microsoft.com/webdev/2018/03/22/get-started-building-net-web-apps-in-the-browser-with-blazor/) | [51 comments](https://np.reddit.com/r/dotnet/comments/86ecng/first_official_preview_of_blazor_released/) ---- ^^I'm ^^a ^^bot, ^^beep ^^boop ^^| ^^Downvote ^^to ^^remove ^^| [^^Contact ^^me](https://www.reddit.com/message/compose/?to=sneakpeekbot) ^^| [^^Info](https://np.reddit.com/r/sneakpeekbot/) ^^| [^^Opt-out](https://np.reddit.com/r/sneakpeekbot/comments/8wfgsm/blacklist/)
Potentially, I'll try it in a bit and see how it works. Thanks for the response.
Please say what you mean by entire block? do you mean: ```csharp static void main() { //... Spelos' example here. } ```
You would replace your block with @spelos block. If you see, he uses a _for loop_ to _wrap_ your code.
C# has the ability to take XML and translate it directly into an object model. If you have the latest version of Visual Studio and take your XML, copy it to your clipboard, go into Visual Studio, hit Edit on the menu bar, go to copy special, and then select "Paste as XML", or something to that effect, it'll create a set of classes based exactly off the XML. If you don't have the latest version, you can use this site: https://xmltocsharp.azurewebsites.net/ to do the same thing. With that, you can then create an XmlSerializer object, as: `var serializer = new Serializer(typeof(YourType));` You can then call `var data = serializer.Deserialize(yourStream);`. This gives you a object which contains all your data from the file. It's up to you at that point to parse and manipulate the data as you see necessary. You can also save objects of `YourType` to streams in reverse. `serializer.Serialize(stream, data)` and then save the stream to a file (I'd recommend using a FileStream in this case, obviously). Wham, bam, thank you ma'am, you have your serializing and deserializing done in 5 minutes. Now, if you need to use `TodoContext`, which to mean sounds like you're using Entity Framework, things get a bit trickier here. If `TodoClass` inherits `DbContext`, I'm not quite sure what to say without seeing your base class. If you don't inherit that base class, then you can override what ever methods you have for data retrieval and manipulation to interact with your data object.
Is there any particular reason someone would use XDocument over just serializing/deserializing against an object model? It seems to me that the serializing way of doing things is over all far cleaner and less error prone. I've never attempting to use XDocument before though.
out variables can and should be wrapped into a result object, the only exception should be the TryGet pattern which returns boolean, so you can use it in condition checks but still outputs an object (and only one, instead of the original return value) to use inside a condition block. 
Depends how much parsing you want to do, and how big the file is. It's much faster to do an xpath find instead of parsing the entire element to new classes, even if it's easier to work with.
I mean, you're not wrong, but I was specifically \*not\* talking about that scenario, which is why I said "meaning a single `short` local".
Thanks for this answer! I will look into the details later tonight or tomorrow! About the TodoContext, I don't really need to use this, its just the way they do it in the tutorial and I can't seem to figure another way. I just need to read the XML file, parse through it and send it to the application: the XML contains ID, Author, Title, Description. So If I want to get all the books with a specific title the api should send back all the books with that title. So basically its just a Rest API that does Read operations through the XML file, nothing else.
Here have an upvote
I get it now, thank you very much for the help. Thank You u/spelos also for the help
The first large .Net project I worked on (briefly), they used structs for every type because they wouldn't need null checks.
Databases support nullable columns on types which can make it hard to tell if an int was set to 0 or if it is null in the db. 
Does the just in time compiler just in time compile your just in time compiler 😎
Client/Server architecture behind a webserver should do the trick. Don’t expose your secret sauce. Use authentication to hide your resources, etc. 
The generic constraint is an and. The object you're passing to it must be an IFoo AND an IBar. You'd have to somehow make it both.
so, you want the constraint to be that TFooBar is derived from *either* IFoo or IBar, but not necessarily both? If that’s so, you’re basically out of luck: you’ll need separate functions for each type (i. e. IFoo and IBar). You may be able to delegate the implementation of each to a method that takes an object, though, as long as neither interface has members that you care about. If you wanna get fancy, you could build a discriminated union of IFoo and IBar, but you would probably still need to do some casting.
[Yo Dawg](https://imgflip.com/s/meme/Yo-Dawg-Heard-You.jpg)
Great article! 
See Schlectums' comment, but to add to that, it sounds like what you're actually wanting to implement is interface IFoo { } interface IBar { } void Foo&lt;TFoo&gt;(TFoo foo) where TFoo: IFoo { /*Do something!*/} void Bar&lt;TBar&gt;(TBar bar) where TBar: IBar { /*Do something!*/ } or more likely interface IFoo { } : IFooBar interface IBar { } : IFooBar interface IFooBar { /* common aspects of IFoo and IBar relevant to FooBar method */ } void FooBar&lt;TFooBar&gt;(TFooBar fooBar) where TFooBar : IFooBar { /*Do something!*/ }
You probably need to use reflection. class Program { public interface IFoo {} public interface IBar {} public class FooBar : IFoo, IBar {} public static int M&lt;T&gt;(T x) where T : IFoo, IBar { return x.GetHashCode(); } public static void Main() { object x = new FooBar(); Console.WriteLine(typeof(Program).GetMethod("M").MakeGenericMethod(x.GetType()).Invoke(null, new [] {x})); Console.ReadKey(); } }
No. Look, you can force it, but think about why you want it. Chances are both IFoo and IBar have a common method ThingIWantToShare. Move that to IFooBar, remove from the other two and have them implement IFoobar. Set the constraint to IFoobar. If that doesn't work, you probably have a class with lots of "is IFoo then" type statements. Don't do that.
This. (not this. , that would just be confusing)
Why wouldn't public static void Main() { FooBar x = new FooBar(); Console.WriteLine(M(x)); Console.ReadKey(); } work? I don't see a reason to use reflection.
 Install-Package Microsoft.CodeAnalysis.CSharp.Scripting then: object result = await CSharpScript.EvaluateAsync("1 + 2"); Boom done. 
Why do you not want the program to leak in the first place?
It's a program for a game. If it gets leaked, it will probably be patched
FooBar is just there to give me something to fulfill the constraint and demonstrate things working. Based on the question and the code sample I was replying to, he may not have an directly available type that meets the constraint. If he *does*, this is all a real silly question.
Hmm. In my case, there's something *kind of* like this: ```` interface IRunnable { } interface IOutputs : IRunnable { } interface IInput : IRunnable { } class Instructions { internal IList&lt;IRunnable&gt; Runnables; public void Add(params IRunnable[] runnables) { foreach (IRunnable runnable in runnables) { Runnables.Add(runnable); } } public void Pipe&lt;TFrom, TTo&gt;(TFrom from, TTo to) where TFrom : IOutputs, IRunnable where TTo : IInput, IRunnable { // Do some stuff to set up a pipeline, then... Runnables.Add(from, to); } } ```` So I'm adding a bunch of extension methods to add some fluency, and this is the problem: ```` public static class InstructionsExtensions { public static TSelf AndPipeTo&lt;TSelf, TTo&gt;( this TSelf self, TTo to) where TSelf : Instructions where TTo : IInput, IRunnable { int count = self.Runnables.Count; var from = self.Runnables[count - 1] as IOutputs ?? throw new InvalidArgException("No! Nuh-uh. Nope."); self.Pipe(from, to); } } ```` I'm not convinced I should entirely should implement this, since it allows user failure. The only reason is for the nicety of it, and that it should be The only reason is for the nicety &amp; it should be obvious what's allowed &amp; what's not. I *think* something like this could work, but I don't know if I really should be doing this. ```` public static class InstructionsExtensions { public static TSelf AndPipeTo&lt;TSelf, TTo&gt;( this TSelf self, TTo to) where TSelf : Instructions where TTo : IInput, IRunnable { int count = self.Runnables.Count; dynamic from = self.Runnables[count - 1]; if (from is IOutputs) { if (from is IRunnable) self.Pipe(from, to); } else { throw new InvalidArgException("No! Nuh-uh. Nope."); } } } ```` 
Ah, so a hack then :) Cool, good luck.
Why to reinvent the wheal ? There is the JIT Compiler for dotnet : [RyuJIT](https://github.com/dotnet/coreclr/tree/master/src/jit) . Why not to build based on it or even extend it even further
The problem with that is structs have to have a default value. Which is not always applicable. Sometimes you want to be able to have a null. It all depends on the what you're doing.
The numbers have already been entered at the point when you are doing this loop. And, you've remembered how many numbers have been entered.
I am relying on a class with an underlying collection (let's say `Instructions`, containing `IList&lt;IRunnable&gt;`). I know there are two interfaces, `IInput` and `IOutputs`, that are of type `IRunnable`. &amp;nbsp; There's already a method like this: ```` public void Pipe&lt;TFrom, TTo&gt;(TFrom from, TTo to) where TFrom : IOutputs, IRunnable where TTo : IInput, IRunnable { // Add(param IRunnable[] runnables) Runnables.Add(from, to); } ```` &amp;nbsp; I want to add an extension method like this: ```` public static AndPipeTo&lt;TSelf, TTo&gt;(this TSelf self, TTo to) where TSelf : Instructions where TTo : IInput, IRunnable { // var from = the last IRunnable from Instructions that's of type IOutputs. // Call Instructions.Pipe(from, to) } ````
The answer to this question is always fun and/or learning. Not everything has to have practical applications.
I'm curious now: If before usage I'm ensuring an object is of the types a generic parameter is constrained by (say, `if ((myObj is IFoo) &amp;&amp; (myObj is IBar)) { /** myObj has to be IFoo &amp; IBar */ }`), why doesn't the compiler infer the type? The guys developing C# are leagues smarter than I am, so I'm assuming this isn't desirable.
They were using struct inappropriately, the only reason was "to avoid null checks". Exceptions would have been far better than the strange bugs it caused. I got removed from the project for writing a function to replace 20 lines of boilerplate code that got copied into every database access method.
It's not entirely clear what you're looking for in the extension method (and reddit doesn't support multi-``` for code blocks), but you can use the LINQ method OfType to separate IInput from IOutput, maybe: Pipe( Instructions.OfType&lt;IInput&gt;(), Instructions.OfType&lt;IOutput&gt;().Last())
"can't" but it will fool inexperienced people
Good call, at least it makes it harder.
Well, there's a class that represents a series of instructions. All instructions have a `Run` method, which is part of a single interface (call it `IRunnable`). &amp;nbsp; We have interfaces representing a single instruction, instructions that contain their own instructions, instructions that take input, instructions that take output, instructions that take both, and that's built on top of. At some point, they are added to a wrapped protected collection as type `IRunnable`. &amp;nbsp; Roughly what I want is a friendly extension method that, for an instruction of instructions, gets the last outputting instruction &amp; adds after it an instruction that takes input.
This. We even mentioned in the conclusion why this project will help us with the integration of RyuJIT. 
The request headers collection changes persist when the context is passed to further middlewares though (or if I make it go to a controller, then there as well)
&gt; internal IList&lt;IRunnable&gt; Runnables; If the collection is internal to the class, there isn't much that extension methods are going to be able to do to interact with it anyway. Is there a reason this needs to be an extension method and not a method on the class? 
[This is what I see](https://imgur.com/UNEBvL5)
&gt; If the collection is internal to the class, there isn't much that extension methods are going to be able to do to interact with it anyway. The collection itself is wrapped. &gt; Is there a reason this needs to be an extension method and not a method on the class? I'm adding extension methods to expose a fluent interface.
Wowza. We [aren't seeing the same thing](https://imgur.com/bGSckD3).
You know. I've been struggling with Inheritance for a while. And your code cleared it up-- despite you having a question on it. Thank you.
Well you welcome, also, I already fix the problem, somebody hear give me the answer, you gotta put the variables inside the child constructor. 
What's a wheal?
I'm sure Mono's compilers existed a decade before RyuJIT
You could also use a private constructor and force object creation through a static method which does the necessary async initialization. 
If you have an IEnumerable and you need to evaluate its contents at a certain point, yeah call ToList. I see nothing wrong with that, that's what it's for
Thanks for everyone's help, this issue has been solved.
It's stacked ternaries, but it should probably be replaced with a switch.
Thanks, that does make sense I quite like it for this kind of simple construct where we're only setting one variable based on one condition, but I think I'd avoid it purely based on the fact the next person to look at it is likely to react in the same "huh?" way I did
Particularly in this case, I think a switch on the enum value is probably more straightforward, and not much more verbose, if it's wrapped up in a small method that returns the value.
Also, I should add, if the only purpose of IEnumerable is for the method GetEnumerator(), which returns a object that implements IEnumerator, what's the purpose of IEnumerable? Is the only purpose of IEnumerable to handle some behind the scenes magic that allows for the syntax of a 'foreach'?
 &gt;My understanding of C# says that we have to return a new instance of a concrete class (not interface) somehow with GetEnumerator. That is correct, an instance of some class will be returned. This class must implement IEnumerator. What concrete class is being returned? There are ways to figure out if you really want to know, but ultimately, does it matter? All you really need to know about the class is already defined in the interface IEnumerator. 
What exactly `GetEnumerator` returns is an implementation detail of the `IEnumerable` type. Every collection has its own enumerator implementation that knows how to get the next item out of that kind of collection, but the details shouldn't matter since they all adhere to the `IEnumerator` interface. If you're really curious you can look at the reference source, e.g. the enumerator implementations of [`List&lt;T&gt;`](https://referencesource.microsoft.com/#mscorlib/system/collections/generic/list.cs,9c3d580a8b7a8fe8) and [`LinkedList&lt;T&gt;`](https://referencesource.microsoft.com/#System/compmod/system/collections/generic/linkedlist.cs,df5a6c7b6b60da4f).
I understand your point just fine, you've said pretty much the same exact thing three times now... "support vista like i would, because reasons". Well regardless of why you feel so strongly about it, it's just not gonna happen. I've already stated the extent i'm willing to go for vista at this phase, and anything more will only come if a problem is discovered. I'm not saying that because "buyer beware", i'm saying it because i've encountered no problems at all in my test environment. Yes, i've seen all the memes about that, but i do feel pretty confident that there will be no issues as long as vista users have the right framework installed. Sure maybe someone that's running the original vista release with no updates might have a problem, but that's a corner case that they've put themselves into, and i see no reason to worry about it right now. It's just not worth my time to account for that sort of possibility. So now that i've also said the same thing three times, hopefully you can just accept that i'm going to do this my way, or we can agree to disagree, because this is going nowhere.
What code have you written? What have you tried? What solution type are you targeting? Why are you doing this? There is so much more you could say.
For science, ofc
No, you're missing the point. If you want to make your app so it *can* run on Vista, that's fine. If you want to tell your users it *will* run on Vista then you'd better make sure it actually does, at least at a baseline patch level. If you don't do that, your customers are going to complain about and to you constantly and it's going to drive you nuts and ruin your reputation. On the other hand if your app happens to work on Vista, but you don't claim it does your customers can use it but not bitch when it fails. 
Removed: Rule 5.
Most collections have their own implementation of IEnumerator or IEnumerator&lt;T&gt; that is specialized to the collection involved. You can poke around in https://referencesource.microsoft.com/ if you just want to see some of the ways that's handled.
Removed: Rule 4. You can use the [`OpenFileDialog` API](https://docs.microsoft.com/en-us/dotnet/framework/winforms/controls/how-to-open-files-using-the-openfiledialog-component) to use the same file-open dialog used by Windows. There are various ways to encrypt/decrypt files. You'll have to research and pick one based on your own requirements.
Removed: Rule 4. myTextBox.Text = File.ReadAllText("myFile.txt");
Read this article and see if it helps. https://programmingwithmosh.com/csharp/ienumerable-and-ienumerator/
While it is important to understand ho IEnumerable and IEnumerator works, there is also a trick there you do not have to impement IEnumerator for your IEnumerable. (You can just write a function in GetEnumerator() using yield keyword.)[http://jonskeet.uk/csharp/csharp2/iterators.html]
You shouldn't be touching it. It's someone elses IP.
They could've used Dictionary map with keys as Enums and values as the string messages.
I know it's someone else's IP, but the creator lets people translate his program for use overseas. 
there’s a HUGE difference between providing i18n files and modifying someone else’s IP
Yeah, information about Mini is sparse. This is probably interesting: [https://www.mono-project.com/docs/advanced/runtime/docs/mini-porting/](https://www.mono-project.com/docs/advanced/runtime/docs/mini-porting/) &amp;#x200B; Regarding the repository situation: Reasons are mostly historical, but imho there is no right answer to this. Single repos are easier to work with, while multiple repos allow better separation. From a mono perspective we have everything related to BCL in \`mcs/class\`. However we are gradually moving to \`corefx\`, which is imported as a submodule (\`external/corefx\`) and slowly getting rid of stuff in \`mcs/class\`. We also have our own C# compiler \`mcs\`, which has been already replaced by \`roslyn\` as our default compiler. So we are slowly moving to the same model: You choose your runtime (\`corert\`, \`coreclr\` or \`mono\`) which depends on \`roslyn\` (C# compiler) and \`corefx\` (base class library).
U can use iTextSharp. Download it from the nuget. In [this thread](https://stackoverflow.com/questions/6029142/merging-multiple-pdfs-using-itextsharp-in-c-net) there is a discussion.
any advice how to go for this?
[removed]
\~Update\~ I found some person who also translated the Pmx Editor, but they included a folder file to a tutorial of sorts where they had built their own program to decompile Pmx into .il files, the issue i ran into is that the generated a1.il file is basically empty where as his file has all of the strings inside but mine is devoid of anything. Even his readme file is a confusing mess to me. But theres a few bat files as well as the tool he built for extracting, even the visual studio project file is included. &amp;#x200B; If anyone wants to have a look at it heres a link [\-here-](http://www.mediafire.com/file/71thcu38vohlczu/PmxEditor_0220c--.7z)
So, to add to what others have already stated, adding \`.ToList()\` (or \`.ToArray()\` if you're not going to be adding / removing from the enumerable), another thing I would recommend is maybe trying to determine the boundaries to lazy-loading in your application. Essentially, try to determine as close as possible to your data layer when you need to load your relationships so that you don't actually have \`.ToList()\` calls everywhere, just in a few key spots. &amp;#x200B; Using a repository pattern, I try to finish loading all of my entities before returning from the repository, based on which repo method was called and its parameters. If this is not feasible, you may have to enumerate your relationships in numerous places, or maybe even considering splitting your data layers into smaller \`DbContext\` objects to something more specific to a bounded context.
I mean i wanna save them for as long as the application is running and globally in application, like their email, name etc etc. I can't use windows authentication for this case. sorry.
To add further to this. You are using DI, which is good. By using DI, you don't need to make global static singletons and other abominations. Why not make sure the same instance is always injected? https://simpleinjector.readthedocs.io/en/latest/lifetimes.html#singleton It's called a "singleton" but it really isn't the same as a global static one.
I'm not really familiar with Simple Injector, but you likely have a 'bootstrapper' or something similar. You would need to retrieve the credentials first, at least before you call container.Verify() if your other services / viewmodels are dependent on your 'user' singleton. After you have your credentials and created your 'user' object, you need to register it with the container.
I just plan to have an access to the user object for displaying purposes, so this is ok? thanks! :)
Yeah it is, except I personally don't like storing passwords in my application. Maybe you could use [SecureString](https://docs.microsoft.com/en-us/dotnet/api/system.security.securestring?view=netframework-4.7.2) or Window's Credential Manager instead?
Did you tried with a [BackgroundWorker](https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.backgroundworker)?
 public async Task&lt;Boolean&gt; ShowImage(int dir = 1) { PictureTimer.Stop(); if (await CheckIfDeleted(dir) == false) { MessageBox.Show(new Form { TopMost = true }, "All pictures removed from " + SavedFolder); return false; } ResizeMaxHeight = Screen.FromControl(this).Bounds.Height; // pictureBox.Height; ResizeMaxWidth = Screen.FromControl(this).Bounds.Width; //pictureBox.Width; ResizeImageBWComplete = false; BackgroundWorker ResizeImageBackgroundWorker = new BackgroundWorker(); ResizeImageBackgroundWorker.DoWork += new DoWorkEventHandler(ResizeImageBW); ResizeImageBackgroundWorker.RunWorkerCompleted += new RunWorkerCompletedEventHandler(ResizeImageBWEnd); ResizeImageBackgroundWorker.RunWorkerAsync(); while (ResizeImageBWComplete == false) { await Task.Delay(25); } /*await Task.Run(() =&gt; { var imageToResize = Image.FromFile(imageFiles[imageFilesIdx]); DisplayPicInfoHeight = imageToResize.Height; DisplayPicInfoWidth = imageToResize.Width; image = ResizeImage(imageToResize, ResizeMaxWidth, ResizeMaxHeight); imageToResize.Dispose(); });*/ pictureBox.Image = destImage; pictureBox.Refresh(); GC.Collect(); imageFilesDelete = imageFilesIdx; PictureTimer.Start(); return true; } And the resize code: public void ResizeImageBW(object sender, DoWorkEventArgs e) { var imageToResize = Image.FromFile(imageFiles[imageFilesIdx]); DisplayPicInfoHeight = imageToResize.Height; DisplayPicInfoWidth = imageToResize.Width; ResizeImage(imageToResize, ResizeMaxWidth, ResizeMaxHeight); imageToResize.Dispose(); } Bitmap destImage = null; public void ResizeImage(Image image, int ResizeMaxWidth, int ResizeMaxHeight) { var OldPriority = Thread.CurrentThread.Priority; Thread.CurrentThread.Priority = ThreadPriority.Lowest; float width = image.Width; float height = image.Height; float aspect = width / height; if (width &gt; ResizeMaxWidth) { width = ResizeMaxWidth; height = ResizeMaxWidth / aspect; } if (height &gt; ResizeMaxHeight) { aspect = width / height; height = ResizeMaxHeight; width = height * aspect; } int w = (int)width; int h = (int)height; var destRect = new Rectangle(0, 0, w, h); destImage = new Bitmap(w, h); destImage.SetResolution(image.HorizontalResolution, image.VerticalResolution); using (var graphics = Graphics.FromImage(destImage)) { graphics.CompositingMode = CompositingMode.SourceCopy; graphics.CompositingQuality = CompositingQuality.HighQuality; graphics.InterpolationMode = InterpolationMode.HighQualityBicubic; graphics.SmoothingMode = SmoothingMode.HighQuality; graphics.PixelOffsetMode = PixelOffsetMode.HighQuality; using (var wrapMode = new ImageAttributes()) { wrapMode.SetWrapMode(WrapMode.TileFlipXY); graphics.DrawImage(image, destRect, 0, 0, image.Width, image.Height, GraphicsUnit.Pixel, wrapMode); } } Thread.CurrentThread.Priority = OldPriority; ResizeImageBWComplete = true; return; }
How do you call Show method from ui and when? 
These eventhandlers are mapped to buttons and a timer: public MainForm() { PictureTimer.Interval = PictureTimerValue; PictureTimer.Interval = PictureTimerValue; ... } private async void btnPrevious_Click(object sender, EventArgs e) { await ShowNextImage(-1); } private async void btnNext_Click(object sender, EventArgs e) { await ShowNextImage(1); } private async void PictureTimerTick(object sender, EventArgs e) { await ShowNextImage(1); }
Here is the github: https://github.com/JamesG269/SlideShowCS If I didn't screw it up, I am not intimately familiar with using repositories.
Migradoc is pretty good. I’ve used it over itextsharp in the past because iirc it’s licence is more permissive.
Thanks for the advice! ill look into these ones you listed but ill mostly try to implement storing user info in an object. I will not include the password in those ;)
You're trying to update UI element from another thread. Try to wait for image result and for event like that: var image = await GetNextImage(1); pictureBox.Image = image; &amp;#x200B;
https://stackoverflow.com/a/21895963/3144729
Also, on the topic of advice: in English you don’t give someone “an advice.” Advice is like water, you can say “the water” but not “a water.” 
Are you saying pictureBox.Image = image is in a different thread? I thought it was the same one. Any way, I don't think that would be the problem, I tried commenting pictureBox.image = image out of the code and the UI freeze is still there.
Yes. Every GUI object is sitting into the GUI thread context. As a result thread dedicated for running your task is trying to access GUI thread and as a result blocks it. 
I don't understand. You are saying ShowImage is not in the GUI thread? Why would that be, I didn't use Task.Run or any threading methods on it. I only run ResizeImageBW in another thread with the backgroundworker class.
You can try to discard SynchronizationContext in the event handler: await ShowNextImage(1).ConfigureAwait(false); &gt; When you &gt; &gt;await &gt; &gt;an asynchronous operation, the context of the calling code is passed along by default. This can have a not insignificant performance impact. If you don't need to restore that context later, then it's just wasted resources. &amp;#x200B;
Didn't MS bought Xamarin ? Why they keep working on Mono then? we have .net core, aot ? we have corert, jit compiler in c#? we have ryujit
Changed all the awaits to await..ConfigureAwait(false) - no noticeable difference unfortunately.
So, to answer my own question, you have never shipped a professional MMORPG (or any game for that matter), have almost zero experience in programming or game development, and you are making TUTORIALS, which are meant to TUTOR other people on how to do so. Is that about right or am I missing something?
I think you're looking at it through the lens of "what's good for OP" - whereas I'm looking at it through a Lumbergh-style lens of "what's good for the company". A lot of my job is involves making sure we keep the software systems maintainable after employees have stayed for a couple years, learned a new technology and moved on. The risk here is that you may end up with a mission critical system that nobody has the ability to support (without additional training). If that means I come across like this: [https://imgflip.com/i/2hrds0](https://imgflip.com/i/2hrds0) , I'm totally okay with that. Another example....I do work on the side, and if a client says "We want it in WebForms", I will tell them about the risks and technical limitations. I ask them consider MVC....but if they're not a tech-focused company and their staff has no interest in learning the MVC stack, it may actually be the right choice for them in terms of owning the product once I'm gone. &amp;#x200B;
I completely respect and value that opinion. Truth be told I do the exact same thing at work - sure React is the latest fun thing, but no one else knows it so no, you can’t write your new app in that. From a business perspective it’s something you have to weigh the pros and cons of, including the fact that you might lose people because they’re bored and not advancing. OP was asking which he should learn and didn’t mention anything about the employer, so from that perspective absolutely he should go with C# and something that isn’t webforms - anything else would be losing more than half the value of learning a new skill set if you ask me. So yeah, I stand behind my original answer to OP, though if I were his boss and no one else knew anything but VB and WebForms I’d probably (begrudgingly) have to smack him back down and make him stick with that. Love the pic. I’m a backend guy and that’s actually how I feel any time I walk into the middle of a frontend conversation. 
Use pdfsharp. The license is way more permissive. 
Then ask him for the source code.
It depends - different collections (List, Dictionary, etc.) usually have some specific implemented Enumerator. For example, in .NET Core - the generic \`List\` class implements it's own version of an Enumerator. [See this link to the source code](https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/Collections/Generic/List.cs). &amp;#x200B; Way at the bottom - you'll see an \`Enumerator\` class that is the specific \`List\` implementation. Within the List's code, you'll see, for example, \`GetEnumerator()\` which returns an instance of the \`Enumerator\` defined at the bottom of the file. Since .Net core open source - you can just browse through all the source code and look at it youself! Hope that helps.
I order a water when I eat out. Just sayin’...
I've been working on a kind of power tool for system administration (with a focus on Win10 and SCCM). Any common task an SA performs is automated in the tool. It takes a list of workstations and runs the functions multithreaded so working with large lists is still fast. Every machine gets represented as an icon, you can click through the individual output for each machine or get a full report. Right-clicking on the icon also gives other functions to run on only that machine specifically.
Sorry yeah, forget about the \`\`await\`\`! See here: [https://dotnetfiddle.net/gxD5gJ](https://dotnetfiddle.net/gxD5gJ) &amp;#x200B; &amp;#x200B;
I had the same issue, and used the IOptions pattern, but I don't have any example code to show you. I had an n-tier layer architecture, and I needed to bind my connection strings in the a deeper layer than the controller. So I read a SO post about IOptions, and that did the trick. If I can get to my code later today, I'll post up what I did and maybe that will help.
But I tried the backgroundworker class to execute the image resizer as suggested by alexgenus in his reply, shouldn't that be similar?
I'll check it out, thanks. I did see an article about using IOptions but I need some settings in a view model and just seemed tedious to have an options interface in my controller and somehow have to pass the setting I want down to the view model.
You could read the XML file as a string (`File.ReadAllText(path)`), send it to the client, and then parse it on the client-side. For parsing, you could use XML stuff like your example- but I would be more inclined to write a class that mirrors the structure of your data and then deserializing the string to an object of that type.
Good idea that last part! The code I provided is from the API so its parsing an XML file, (checks if there is any title as the user stated) and if there is, it should resend the movies and its corresponding elements, it does that but im responding with a String instead of a better formatted response. Problem is now how do I respond with an XML formatted response
It was tedious, but it was the only way to get it done.
Looks like it works, for some reason in my ConfigureServices class the AppSettings is empty but when I use the IOptions&lt;AppSettings&gt; in the constructor of my controller I can see my setting. &amp;#x200B; Thank you very much. I'm still disappointed that I have to pass this object down to anything that needs a setting but oh well, maybe I'll figure out a better way in the future. For now it works and I can proceed with this project I'm already late on. thanks again.
IOptions worked on any c-tor to which I binded it. You shouldn't have to pass it down through the layers if that's what you mean.
Maybelline/Opción types forces you to check if a values exists.
In this context `await` literally means 'sit here and wait until this operation is finished'.
&gt; I'd avoid it purely based on the fact the next person to look at it is likely to react in the same "huh?" way I did Yes, you don't want them to have to go ask reddit on to be sure what the syntax is ;) 
On the plus side, at least they'd find this question and not have to repost :p
Have you every used WPF? Allow me to introduce to you the very first object you'll encounter. public static System.Windows.Application Current { get; }
If it is truly meant to be universally accessible, and is thread-safe (or better yet, immutable), then yes you can put it in a static variable. You see examples of this throughout the .NET framework. If it isn't thread-safe, then it is common to make it a property on your `Application` object. Just make sure you never read from the application object outside of the UI thread. *** If you only need it in certain places, you are better off injecting it into the view-models or services that actually need it. That way it will be easier to understand how you code it put together. 
Yeah after your comment I got it squared away, I'll join the python sub but id still like to follow this to learn as Well. Im trying to find something that will explain or enlighten me about syntax formation but its with python so ill check over there. I'm just a bit confused as to how people sit down and organize code. Where do you pick up on that, sorry if these are dumb questions I'm just learning as i go.
That should do it.
I don't know if you are aware, but this isn't technically correct. The scope of a method is paused in place on a long running \`await\` and polled till ready and a thread (not necessarily the original thread) will carry the scope of the method. If it is a UI thread scope, then yes it could be thread blocking UI. However, it's often the case that it is ran in the background and that thread would be the one paused not Main / or UI thread. The TaskScheduler helps determine if things are going to run synchronously or asynchronously on a different thread (inlining tasks). This includes identifying the current Thread in use. If you set the TaskCreationOption.[RunContinuationsAsynchronously](https://referencesource.microsoft.com/mscorlib/R/8a4ba0b9ea2b26f8.html) or set it to LongRunning task, you help decouple the two threads more predictably.
Some notes, use await Task.Delay(value); not Thread sleep. You are async, stay async without mixing in Threading. For TRUE LongRunning tasks, use TaskCreationOptions.LongRunning. Just be sure to understand your side-effects first! I am not convinced you need this however. Main is not asynchronous until C#7.2 (which you set in the project build options). ``` public async Task Main(string[] args) { await Task.Run(() =&gt; { /* Async code */ }); } ```
That method isn't async so it will be run on the UI thread. In an async method any code that isn't awaited will be run on the previous context. What you need to do is Task.Run the method and call a callback when it's done. Don't await it that will block. 
The DateTime struct has [Parse](https://docs.microsoft.com/en-us/dotnet/api/system.datetime.parse?view=netframework-4.7.2) and [TryParse](https://docs.microsoft.com/en-us/dotnet/api/system.datetime.tryparse?view=netframework-4.7.2) methods which will do what you want. As to intercepting them - you **can't** use inheritance, but you can create your own DateTimeALike struct that uses the built-in DateTime to do it's work and manipulate the results as you see fit. 
C# curses via exceptions.
Because? For starters, because it’s easy to get wrong and hard to get right. And because I see production Microsoft code throw NullReferenceExceptions. And virtually everyone agrees languages need to get smarter about it. Which we’re seeing with the nullable prototype. Tearing isn’t going to save you from strange edge cases. Debugging *definitely* won’t.
[.NET Reflector](https://www.red-gate.com/products/dotnet-development/reflector/index) [Telerik JustDecompile](https://www.telerik.com/products/decompiler.aspx) &amp;#x200B; Provided that PMX Editor isn't obfuscated, either of the above tools is what you are looking for.
You better check the “type converters” feature. 
You could probably use EF Core's [value conversions](https://docs.microsoft.com/en-us/ef/core/modeling/value-conversions). There is a built in one called DateTimeToStringConverter.
await does not mean block this thread, it means that the current execution on this thread can return to the last stack that is not awaited, such as a UI thread can being accepting events again, making the UI responsive. &amp;#x200B; await/async has absolutely nothing to do with performance, in fact, it will always be slower. Tasks have overhead.
 You're using more advanced features with only creating a few small test apps?... that's actually pretty impressive.
Everyone is a beginner at some point. It's ok. Personally I think the best way to learn is by doing and making mistakes yourself. 
Please never do this. A switch is so much easier to read and maintain. 
ToList is exactly what you should do. You can still return it as an IEnumerable. 
I wasn’t particularly planning to - just checking I was understanding the syntax being used
&gt; or `.ToArray()` if you're not going to be adding / removing from the enumerable ToArray generally does more allocations than ToList and is slower, so unless you need an array on the output I would suggest using ToList anyway. Plus, it implements IReadonlyList if you need an "immutable" contract for your API.
Cool
Assuming you're talking about a curses-style TUI with buttons, browsable menus, etc. I think you vastly overstate their popularity lol Or are you looking more for shellscript-style UIs where you have command line parameters, then the script dumps its output to the console (possibly with prompts for additional input, but nothing fancy)?
It should be shot, burned and the ashes buried under state lines.
Funnily enough, I just had to deal with this issue the past week. The problem is that GDI+, the graphics backend, uses process-wide locks for some operations (like DrawImage). Since the UI uses GDI+ too, that means the UI will freeze while it tries to acquire that lock. This has nothing to do with async/await/threading. As far as I know, the only way to work around it is to do the operation in another process. https://stackoverflow.com/questions/3719748/parallelizing-gdi-image-resizing-net
No it doesn’t. It means resume GUI thread work until the task is finished, since Task.Run was used. 
Async void is fine, and await doesn’t block the UI thread in itself. It just returns to the UI thread after execution. 
In full framework making your property a Datetime works. Does it not in core? Also sqlite stores everything as strings.
&gt; Don’t await it that will block. No it won’t! Awaiting Task.Run will not block, but will return on the UI thread once the code is done. In the meantime, the UI thread will also run. 
Finally someone who doesn’t misunderstand what await does, at least. 
Good on ya for tackling something challenging. One thing when transitioning to C# or any OOP language in general is to graduate from a scripting mindset. Scripting = "do this; do that; do next;" etc, one after another. In an OOP language, you want to think in terms of components talking to each other, rather than just "do this; do that;". Think of the UI thread as a butler going around telling all the other workers what to do. If the butler gets busy mopping the floors himself, then you have workers sitting idle (smoke break!) and a helpless aristocrate (the user) sitting around waiting for the butler to report back (i.e. the UI thread is blocked doing work, the UI appears frozen, and the user can't click anything). If you want to do long-running work in the background, then you should *send a message* to another component with all the information it needs to get the job done. In this case, that would be a "ResizeImageWorkItem" class of some sort. The background worker component (literally BackgroundWorker is what people are suggesting in this thread) picks up the message/work item, does the work, and reports back when it's finished. In the case of the BackgroundWorker class, it also reports progress and a bunch of other things. In the butler example, it would be like the butler writing down "grill cheese sandwich, ketchup, and cabernet sauvignon " on a note and handing it to the kitchen. The chef makes the meal, notifies the butler that it's done, and the butler delivers it. In more general OOP terms, this is called a Producer/Consumer pattern. You're using Windows Forms, which is why everyone is suggesting the BackgroundWorker class. Windows Forms was made before `async/await`, and BackgroundWorker is patterned around the older style of event-based asynchronous programming. For async/await, I personally prefer `BlockingCollection&lt;T&gt;`. However, it has less plumbing for things like updating Windows Forms progress bars.
I am not really a fan of using the IOptions interface. I think it exists so you can change your appsettings.json files without doing an app reload, but that's not really a use case of mine. I wrote this extension method that lets me bind a class to a section in my appsettings.json file and avoids IOptions. ``` public static void AddConfigurationSection&lt;T&gt;(this IServiceCollection serviceCollection, IConfiguration configuration, string section, ServiceLifetime lifetime = ServiceLifetime.Singleton) where T : new() { serviceCollection.Add(new ServiceDescriptor(typeof(T), provider =&gt; { var instance = new T(); var configSection = configuration.GetSection(section); configSection.Bind(instance); return instance; }, lifetime)); } ``` Usage: ``` const string SqlConnectionMonitorConnectionString = "SqlConnectionMonitor"; private static void AddServices(IServiceCollection services, IConfiguration configuration) { services.AddConfigurationSection&lt;SqlConnectionMonitorConfiguration&gt;(configuration, SqlConnectionMonitorConfigurationSectionKey); } ``` 
The [Chain of Responsibility](https://www.dofactory.com/net/chain-of-responsibility-design-pattern) will probably be your friend.
Yeah I just downloaded a program called Razor Enhanced, it cuts into the game Ultima Online allowing you to write programs in python. So my trouble is i have all these old "scripts" in what i imagine is a different language , that I need to convert to python. Its a fun environment for me, just having a hurdle of understanding how to format the language starting off because the old way of If "target1" hp&lt;100 Bandage "target1" Pause 2500 End To python, so im learning the syntax for target1 and bandage is BandageHeal. Small changes but the formatting for it. Just confuses me a bit. 
I wouldn't be surprised if it didn't come until Build 2019. Perhaps we will be surprised though at https://www.dotnetconf.net/
&gt; await doesn’t block the UI thread in itself. It just returns to the UI thread after execution Maybe we misunderstand each other. In the code OP posted: private async void btnNext_Click(object sender, EventArgs e) { await ShowNextImage(1); } The UI thread will not proceed past `ShowNextImage(1)` until it completes. It is not free at that point to go do other work.
Sharing about the new improvement we have done on our INDIVIDUAL-fetches and SET-fetches. I have managed to recode our underlying stream of conversion from IL to pre-compiled functions with the most optimal way (we think we can do). Our library is not just at the top of the performers, it also managed to become the least memory-usage ORM in the list of FransBouma's bencher. &amp;#x200B; Good news as well, RepoDb was integrated on that bencher. And this is a big leap for this library, IMHO. &amp;#x200B; FransBouma's result execution is here. Notice the RepoDb. [https://github.com/FransBouma/RawDataAccessBencher/pull/42](https://github.com/FransBouma/RawDataAccessBencher/pull/42)
Create a class and populate it from the document then serialise it and return that string. 
You could do exactly the same using the XmlSerializer class. 
I'll admit I do not use it as often so I wouldn't know its ease of use.
RepoDb is now a part of **FransBouma's** Bencher. We now have managed to improve both the **INDIVIDUAL** and **SET** fetches along the way. We have improve our ways on the underlying stream of conversion by scrapping the IL approach and implementing the pre-compiled lambda functions. And, we tried to do our best to have it used the most optimal way on reading the data from DbDataReader object (with a minimum checking requirement on the NULL-checking). Result below is the actual result-execution of **Frans** from their environment. Thread can be found here [here](https://github.com/FransBouma/RawDataAccessBencher/pull/42). I only copied top 7 results, if you did not found the ORM you liked, then they might positioned a bit lower. **Set Fetches** Results per framework. Values are given as: 'mean (standard deviation)' ============================================================================== Non-change tracking fetches, set fetches (20 runs), no caching ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader : 136,36ms (1,53ms) Enum: 1,35ms (0,16ms) Tortuga Chain, Compiled v1.2.6553.39558 : 148,58ms (2,45ms) Enum: 1,27ms (0,10ms) LINQ to DB v2.2.0.0 (v2.2.0) (compiled) : 151,30ms (5,05ms) Enum: 1,37ms (0,18ms) LINQ to DB v2.2.0.0 (v2.2.0) (normal) : 152,09ms (1,60ms) Enum: 1,35ms (0,04ms) RepoDb (RawSql) v1.6.4.0 : 152,22ms (1,52ms) Enum: 1,26ms (0,07ms) Handcoded materializer using DbDataReader (GetValues(array), boxing) : 155,18ms (2,07ms) Enum: 1,39ms (0,11ms) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 160,68ms (2,39ms) Enum: 1,31ms (0,03ms) Memory usage, per iteration ------------------------------------------------------------------------------ RepoDb (Poco) v1.6.4.0 : 15.166 KB (15.530.344 bytes) Handcoded materializer using DbDataReader : 15.168 KB (15.532.416 bytes) RepoDb (RawSql) v1.6.4.0 : 15.170 KB (15.534.480 bytes) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 15.172 KB (15.536.432 bytes) PetaPoco Fast v4.0.3 : 15.204 KB (15.568.984 bytes) LINQ to DB v2.2.0.0 (v2.2.0) (normal) : 15.979 KB (16.363.144 bytes) LINQ to DB v2.2.0.0 (v2.2.0) (compiled) : 15.981 KB (16.364.664 bytes) Non-change tracking individual fetches (100 elements, 20 runs), no caching ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader (GetValues(array), boxing) : 0,20ms (0,01ms) per individual fetch Handcoded materializer using DbDataReader : 0,20ms (0,01ms) per individual fetch RepoDb (RawSql) v1.6.4.0 : 0,22ms (0,01ms) per individual fetch Dapper v1.50.5.0 : 0,23ms (0,04ms) per individual fetch ServiceStack OrmLite v5.0.0.0 (v5.1.0.0) : 0,23ms (0,01ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 0,24ms (0,01ms) per individual fetch RepoDb (Poco) v1.6.4.0 : 0,25ms (0,03ms) per individual fetch Memory usage, per individual element ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader : 08 KB (8.192 bytes) Handcoded materializer using DbDataReader (GetValues(array), boxing) : 16 KB (16.384 bytes) RepoDb (RawSql) v1.6.4.0 : 16 KB (16.384 bytes) Dapper v1.50.5.0 : 16 KB (16.384 bytes) ServiceStack OrmLite v5.0.0.0 (v5.1.0.0) : 16 KB (16.384 bytes) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 16 KB (16.384 bytes) RepoDb (Poco) v1.6.4.0 : 24 KB (24.576 bytes)
 RepoDb is now a part of **FransBouma's** Bencher. We now have managed to improve both the **INDIVIDUAL** and **SET**fetches along the way. We have improve our ways on the underlying stream of conversion by scrapping the IL approach and implementing the pre-compiled lambda functions. And, we tried to do our best to have it used the most optimal way on reading the data from DbDataReader object (with a minimum checking requirement on the NULL-checking). And also, additional technique that is fully explained by me [here](http://codesdirectory.blogspot.com/2018/09/repodb-net-lightweight-orm-library.html). Result below is the actual result-execution of **Frans** from their environment. The actual thread can be found on or PR request, it should be [here](https://github.com/FransBouma/RawDataAccessBencher/pull/42). I only copied top 8 results. If however you did not found the ORM you liked, then they might be positioned a bit lower. **Set Fetches** Results per framework. Values are given as: 'mean (standard deviation)' ============================================================================== Non-change tracking fetches, set fetches (20 runs), no caching ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader : 136,36ms (1,53ms) Enum: 1,35ms (0,16ms) Tortuga Chain, Compiled v1.2.6553.39558 : 148,58ms (2,45ms) Enum: 1,27ms (0,10ms) LINQ to DB v2.2.0.0 (v2.2.0) (compiled) : 151,30ms (5,05ms) Enum: 1,37ms (0,18ms) LINQ to DB v2.2.0.0 (v2.2.0) (normal) : 152,09ms (1,60ms) Enum: 1,35ms (0,04ms) RepoDb (RawSql) v1.6.4.0 : 152,22ms (1,52ms) Enum: 1,26ms (0,07ms) Handcoded materializer using DbDataReader (GetValues(array), boxing) : 155,18ms (2,07ms) Enum: 1,39ms (0,11ms) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 160,68ms (2,39ms) Enum: 1,31ms (0,03ms) PetaPoco Fast v4.0.3 : 163,43ms (5,14ms) Enum: 1,40ms (0,37ms) Memory usage, per iteration ------------------------------------------------------------------------------ RepoDb (Poco) v1.6.4.0 : 15.166 KB (15.530.344 bytes) Handcoded materializer using DbDataReader : 15.168 KB (15.532.416 bytes) RepoDb (RawSql) v1.6.4.0 : 15.170 KB (15.534.480 bytes) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 15.172 KB (15.536.432 bytes) PetaPoco Fast v4.0.3 : 15.204 KB (15.568.984 bytes) LINQ to DB v2.2.0.0 (v2.2.0) (normal) : 15.979 KB (16.363.144 bytes) LINQ to DB v2.2.0.0 (v2.2.0) (compiled) : 15.981 KB (16.364.664 bytes) Tortuga Chain, Compiled v1.2.6553.39558 : 16.169 KB (16.557.840 bytes) Non-change tracking individual fetches (100 elements, 20 runs), no caching ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader (GetValues(array), boxing) : 0,20ms (0,01ms) per individual fetch Handcoded materializer using DbDataReader : 0,20ms (0,01ms) per individual fetch RepoDb (RawSql) v1.6.4.0 : 0,22ms (0,01ms) per individual fetch Dapper v1.50.5.0 : 0,23ms (0,04ms) per individual fetch ServiceStack OrmLite v5.0.0.0 (v5.1.0.0) : 0,23ms (0,01ms) per individual fetch LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 0,24ms (0,01ms) per individual fetch RepoDb (Poco) v1.6.4.0 : 0,25ms (0,03ms) per individual fetch Tortuga Chain, Compiled v1.2.6553.39558 : 0,27ms (0,01ms) per individual fetch Memory usage, per individual element ------------------------------------------------------------------------------ Handcoded materializer using DbDataReader : 08 KB (8.192 bytes) Handcoded materializer using DbDataReader (GetValues(array), boxing) : 16 KB (16.384 bytes) RepoDb (RawSql) v1.6.4.0 : 16 KB (16.384 bytes) Dapper v1.50.5.0 : 16 KB (16.384 bytes) ServiceStack OrmLite v5.0.0.0 (v5.1.0.0) : 16 KB (16.384 bytes) LLBLGen Pro v5.5.0.0 (v5.5.18.0822), Poco with Raw SQL : 16 KB (16.384 bytes) RepoDb (Poco) v1.6.4.0 : 24 KB (24.576 bytes) Tortuga Chain, Compiled v1.2.6553.39558 : 30 KB (31.472 bytes)
In that case, no not that I've found for C#. I've just started developing something like that to pair with my [CLI parsing library](https://github.com/nemec/clipr) that would include things like prompts, console coloring, a progress ticker, printing tables of data, etc. - but not TUI concepts like navigating through menus with arrow keys or clickable buttons. I'm still designing the feature set though.
Well it's [1st January 2080](https://github.com/dotnet/csharplang/milestone/8) so only 62 years to wait now...
I really honestly haven't given this a thought.
Yes i plan to store their user/pass in the database.
I am under the impression that there is a lot of work to do on the non-nullable reference types front and I don't think they will release without this.
If it's this problem then just using image resizer that doesn't use GDI+ should help right? Example https://sixlabors.com/projects/imagesharp/
Sorry. There's not much detail I can go into about making it so I can open a txt file with my program by double clicking said text file with it set as the default program to open with
You would write a bunch of code and then it would work. Didn't you ask this exact question yesterday? Nobody is going to do your work for you.
&gt;Telerik JustDecompile I'm pretty sure it is, i have used JustDecompile and none of the internals show up at all. 
If you know how to launch notepad, you can pass the filename as a command-line argument. &gt; Notepad.exe "c:\temp\myfile.txt" 
Yeah but that got removed because of lack of detail.
I don't think you entirely get it. That won't work with my program because there's no code to make it know how to handle when a text file is opened in my program. That is the point of this post.
Yeah, if that works for your use case it would be another option. [This article](https://photosauce.net/blog/post/5-reasons-you-should-stop-using-systemdrawing-from-aspnet) suggests [SkiaSharp](https://github.com/mono/SkiaSharp) and [MagicScaler](https://github.com/saucecontrol/PhotoSauce) as well.
It sounds like you want your program to be the default editor for .txt files??? Edit the registry - the key is **Computer\HKEY_CLASSES_ROOT\.txt** 
no, lol sorry for confusion. I want it so if my program is set as default, when I open a text file it actually loads it into a textbox. Because right now I can use my exe to open a txt file but it does not load it in the text box ofc
There are two steps here. 1. Get your program to run when the user double-clicks on a .txt file 2. Have your program read it and load the contents into a textbox. Which are you having problems with? 
Step 2. Sorry for all the confusion, as I said in the last reply. I am not good at wording things out :v
First reply by the moderator in your other thread will do it. https://www.reddit.com/r/csharp/comments/9f3m8d/how_would_i_make_it_so_if_i_open_a_text_file_with/?st=jlzqogq9&amp;sh=13007773 The trick is that you will receive the name of the file via the args on the main method. https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/main-and-command-args/ 
Oh, Thanks! I will try this right now
If you configure Windows to associate/open ".txt" files with your program, then it should be fed in as a command line argument to it. Console and WinForms: https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/main-and-command-args/command-line-arguments WPF: https://docs.microsoft.com/en-us/dotnet/api/system.windows.application.startup?view=netframework-4.7.2
Then again, when using the program i found that someone made to decompile PMX Editor, any version under 0222 there are items that aren't hidden pictured here [https://imgur.com/sx4VyVb](https://imgur.com/sx4VyVb) Where as any version past 0222 you get this when trying to look at the internals of the program. [https://imgur.com/ry95Pt6](https://imgur.com/ry95Pt6) &amp;#x200B; Somehow the files don't show up, the resources don't appear when dumping the file and it wont find the strings. 
Thank you! I just need to find out how to pass through an argument properly in my windows form app. Maybe I am missing something in the first link?
He speaks a different language for starters, and even then theres no way to contact the creator since their blog has no comment section nor do they have a public form of contact. 
Np, sorry I misunderstood your question originally. Glad to hear that it sounds like you've got it more or less going now.
Removed: Rule 4. You already got the double-click opening working. For saving, when you open/save-as the file, store the file path somewhere. Then you can implement a "Save" function that automatically writes to that file path.
Still sooner than it'll take me to get around to updating the sidebar for the new reddit UI, or overhauling/replacing the sticky.
I feel like this is going to be such a game changer.
Because it is null? I'm not seeing anywhere where you assign it a value. Also, `int[] ennemyPattern;` is completely separate from `public int[] EnnemyPattern { get; set; }`. Setting one won't change the other. 
No, just ignorant. An easily curable disease. 
I *think* I understand what you're asking and if so, you've misunderstood how auto-implemented properties work. In your sample code block, you've created two independent, totally unrelated variables, "ennemyPattern" and "EnnemyPattern". A hidden backing field is automatically created by the compiler for "EnnemyPattern". That is the field that's set and returned by the auto-implemented property and you cannot access it directly from your code. If you truly want "EnnemyPattern" to set and return the contents of the private "ennemyPattern" variable, you'll need to do something like this: public int[] EnnemyPattern { get { return ennemyPattern; } set { ennemyPattern = value; } } Alternatively, if you just want to expose the EnnemyPattern getter (i.e. not allow it to be set by external code), then just make the setter private, reference that variable in your code, and delete the ennemyPattern variable: public int[] EnnemyPattern { get; private set; } On an unrelated minor note, I think you're looking for "Enemy" not "Ennemy".
You're totally right! Thank you so much for the explanation, and for pointing out the typo ;)
For sure, I wrote it late at night and wasn't entirely thinking through it. I had to do that on my system because of our protocol using a ushort and I register it with my call back dictionary with the enum for syntax sugar.
A true test to your loyalty.
This. Very very pared down version of Startup in 2.1 public class Startup { public Startup(IConfiguration configuration) { Configuration = configuration; } public IConfiguration Configuration { get; } public void ConfigureServices(IServiceCollection services) { services.AddSingleton&lt;ISomeService&gt;(sp =&gt; new SomeServiceImplementation(Configuration.GetValue&lt;string&gt;("SomeStringSetting"), Configuration.GetValue&lt;bool&gt;("SomeBoolSetting"))); services.AddMvc(); } public void Configure(IApplicationBuilder app, IHostingEnvironment env) { if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); app.UseDatabaseErrorPage(); } else { app.UseExceptionHandler("/Home/Error"); } app.UseStaticFiles(); app.UseMvc(routes =&gt; { routes.MapRoute( name: "default", template: "{controller=Home}/{action=Index}/{id?}"); }); } }
Super cool stuff actually. So basically any object will act like the primitive types (int, bool, structs) that can't be set to null by default, you have to use the ? syntax (like how *int i = null* does not work, but *int? i = null* works). *string s = null* will no longer work, you will have to explicitly say "this string can be null" with *string? s = null*. Coupled with this is a ton of logic that detects if you've tested if something is null before using it. Essentially, it does away with any fear of NullreferenceException, as it'll error out if you haven't tested that anything that can be nullable isn't null.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/unity3d] [IronPython Help](https://www.reddit.com/r/Unity3D/comments/9fff93/ironpython_help/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Wouldn't this break existing code
You don't "write" datawarehouses - you design and build them, and you don't use C#, you use a database. You can do the ETL in C# although I'd really recommend against it, stick with SQL or something like SSIS. Try using Google, it's too big a topic to get a meaningful answer on here 
Certainly. Sadly not entirely for free on existing codebases.
Yes, async is perfectly fine for this. Sorry, I haven't gone through the thread and seen what everyone has said, but async is made specifically to make it easier to do processing long tasks while allowing calling threads to continue execution. This is perfect for UI work.
Just spent a few hours making a bare bones version in WPF, it still has the UI lag on resizing the window while down scaling huge images. :(
Only use await when you want to wait for something before continuing. You want to launch the task then when it's done have it notify the ui thread. Do this using synchronization context as u/brasz suggested. If you have multiple async things to do, keep references to the task returned by Task.Run and do not await them until all your independent tasks are launched. Then if inside one of the tasks, a task needs data returned in another task before it can continue, you can then choose to await on the task reference you kept. 
You can use my LinqToAnything library to intercept calls to IQueryables and cache certain queries. Don't know if that would help here, message me if you like.
I recently worked on a very similar piece of code. There are a number of places where this can fall down, not only in the code but also what you have setup in the windows form for your binding source etc. Do you know how to use break points / step through and quick watches in visual studio? They are incredibly helpful in a scenario like this where there are a number of points that could not be working. Quick watches allow you to see what is being passed to each of your objects and variable s as you step through. Google how to use them and when you use it on project you’ll be able to see exactly what’s not working. For my case when I had this issue I hadn’t setup something correctly on the binding source in the form, was nothing to do with the code. But you’ll only be able to tell with the quick watches / stepping through.
Beside speed, I meant readability, which is greatly reduced with generic wrappers.
You need to question your programming skills if a wrapper like Maybe makes things less clear to you
:) Saw that too, quite fed up with ETA questions
C# is excellent for Windows desktop development but you should possibly consider making this web based (still C# using ASP). With a desktop application you either need to install in multiple locations or else the users can only use it from one PC. If you had multiple installs that means multiple PCs to update when you make changes. A web application could be hosted in one place in the local network and then all your users would be able to reach the latest version via their browser. One install location, one database location, as many users (browsers) as necessary.
Hey. I am learning c# an currently working on a 'data warehouse' as exercise. I am using a sqlite db and writing an app to interact with the DB. The only comment I have is that the queries run very slow (hundreds of Ms for a one line insert) but it's still the same option I found(again - learning here). 
It is a bit outdated, but you can start by having a look at Petzold's book. https://docs.microsoft.com/en-us/xamarin/xamarin-forms/creating-mobile-apps-xamarin-forms/ To get good at it, you also need to really understand Android, iOS and their APIs. Just like knowing .NET doesn't shield you from OS APIs if you really want to take advantage of everything that users expect from an app. 
Get a subscription to Xamarin University, or start with the free self-guided courses. It's really worth it.
You can check Joe Rock playlist on youtube, i found it very interesting and easy to follow https://www.youtube.com/watch?v=6Jx7ZNZL9dk&amp;list=PLCuRg51-gw5VqYchUekCqxUS9hEZkDf6l
`Progress&lt;T&gt;`
I’m in an app development class using Xamarin Forms to build Android Apps, and I’ve noticed that there’s not a lot of valuable documentation for Xamarin out there. That PDF that’s mentioned above is my textbook, and I haven’t found it particularly helpful, but I also haven’t sat down and read the thing line for line. YouTube and google can help you find info if you know the right way to look for it. A lot is pretty outdated too, and the solutions they provide use depreciated methods. Knowing MVC will be helpful because Xamarin mostly uses Model View ViewModel (MVVM) structure, that’ll be one of the first things you’ll want to look at. The more you mess around with the form controls the easier it gets. I had a breakthrough on Tuesday, but before that I found it pretty overwhelming. Hope that helped haha. Good luck with it! 
use some nuget package to be sure.
Sounds like you're looking for a loop. Loop runs through and if someVar is set to true, it loads an image. When you click the arrow button it sets someVar to true. 
I said "readability", not "clear-ness". Same goes with LINQ queries for me. I understand them, I can use them, but I fucking hate it when I check the parameters, and the suggestions brings up a mile long description, where the param list looks like `IEnumerable&lt;DbModel&gt; Method (&lt;Expression&lt;Func&lt;R, P1...&gt;&gt; param1, Expression&lt;Func&lt;R, P1...&gt; param2, ...)` I CAN understand it, I CAN use it. But let's be honest, it is ugly as hell.
&gt;Try using single quotes if possible in your context I tried using single quotes in the json: &gt;"expression":'\bU\.?K\.?' but I get a "Bad JSON escape sequence" exception unless I leave it as "\\\\."
What's the desired actual value? "\."? You could get that with ":\\\." regex101.com might help, you can see what gets matched.
I'd like to be able to match &gt;U.K. &gt;UK using regex101, the expression "\bU\\.?K\\.?" works fine in matching the two examples above. so confusing with all these escape characters 
Yeah but with this videos you can see How the Network will work.. IT's A TITLE... you can use this videos to get experience and try your own thing... If you do an MMORPG or an RPG or anything else is up to you
I’m trying for a few hours now to find some good YouTube playlist for learning xamarin. Thank you very much!!
Deserialize it without worrying about regex escaping, then Regex.Escape maybe. It's early and I haven't had my coffee, so I may be misunderstanding the problem. 
You're hardcoded your second image on your click event: Properties.Resources.Steins_gate_2 So, whenever you click that button, you will display that same image. But you've already found that out. What you need to do is work with an array (or list) of images and a counter. Initialise your list with the images you have, then, when the button's clicked, you increase the current index of your collection and display the image at the current index.
Honestly, these sound like CS degree questions or even Business Intelligence questions. A Data warehouse, is literally a database, Tableau does not use c# but you can feed it information from c#.
Right, so, for someone like me without a CS degree, it sounds like it would look like: SQL -&gt; C#. -&gt; Tableau Database-&gt; ? -&gt; UI What role would C# play in this process, if any? 
Let's say you have a class named Person: public class Person { public string Name; } And then you declare an instance: Person steven = new Person(); The class name would be Person and the instance name would be steven. So you would access the static property through the class name which would be Person.[static member]. 
Make a branch to test this. Then run: git clean -fdx This will remove everything not checked into source control. Compiled files and dependencies. Then try to recompile. If it works on the first try, you're good.
As long as you include sqlite.dll in your project files you should be good.
Arrays are collections of objects. They can be of any type: int, string, DateTime, your own classes, you name it. Let's take an array of strings, for example: &gt;string [] arrayExample = new string [] {"Element 1", "Element 2", "Element 3"}; Now, arrays are 0-index based. So, if you were to access the first element, you'd start off at 0, like this: &gt; arrayExample[0] This would return the string "Element 1", since that's what is at position 0 of the array. Now, imagine that instead of using a hard-coded number, you'd use a variable that you can assign whatever value you want. &gt;int arrayIndex=0; &gt;Console.WriteLine(arrayExample[arrayIndex]) -- this would return "Element 1", just as before, since a is 0; &gt;arrayIndex=2; -- we assign another value to the variable &gt;Console.WriteLine(arrayExample[arrayIndex]) -- this will return "Element 3", since that's what is at the position we've assigned to the variable. Hope this gets you started.
.replace(@"//", "@/"); while reading it in should work. 
Once you get used to arrays, learn about Lists. Collectively, these are called collections and they are a crucial building block when you need to have your application work with dynamic data that changes all the time, rather than writing all the data by hand inside your code.
" when the button's clicked, you increase the current index of your collection and display the image at the current index. " So I am currently testing out arrays using your example but i'm confused as to how I increase the index per click. In theory it is supposed to change index ( \[0\] - \[1\] - \[2\] etc) which in turn changes the image right? What would the code actually be to increase this index per click and execute the code to change image?
Let's think about an example you know - `Console.WriteLine()`. This is a static method. I know it's a static method, because to call it, I write the class name first - `Console.` - then I write the name of the method - `WriteLine()` If WriteLine was not static, I would need to make a `Console` object before I could use it: Console myConsole = new Console(); myConsole.WriteLine(); This seems rather a lot of fuss, considering that `myConsole` would be exactly the same console as `yourConsole`. Luckily, it's not needed - the fact that `WriteLine` is static means we don't have to go to the trouble of using the "new" keyword to make an object first! Regarding a few other things you said: &gt; 1) There is only ever one copy of the static class member that ever exists, like a master copy no matter how many classes are generated. Correction: no matter how many ~~classes~~ objects are generated. A class is when you writer the code. An object is when you use the "new" keyword to make an instance of the class. This is called "instantiating". &gt; 2) ... (as opposed to the instance name, which I am not 100% sure I know what that actually is.... :( ) The instance name is the name of the variable where you hold the instance. The instance is the thing you make with the "new" keyword. In my example, above, of how we would have to use `WriteLine` if it was not static, `myConsole` is the instance name. &gt; From that, I assume then something like, all cars have an engine Probably not, because all cars don't have the *same* engine. Each car's engine has a different size, different amount of power, different current power setting. When a particular engine has power applied, it causes a particular car to accelerate. So we would probably need to keep track of each engine separately, hence it would not be static. The console is static because, as far as my program is concerned when it runs on my computer, there is only one console, full stop.
Cool, anything interesting going into 2019?
I am sure there will be but I dont have many details. Here is a new feature coming to 2017 soon instead! https://blogs.msdn.microsoft.com/visualstudio/2018/09/11/visual-studio-2017-version-15-9-preview-2/
Friends don’t let friends use Xamarin. Source: every one in the Xamarin forums
If you really want to simplify static members, you can see them as global entities, whether that be methods, variables, properties, etc, that have been _organizationally_ placed within an enclosing class. It’s just a way to organize methods that might be related to a specific entity / class, but that _don’t_ need to care about the current state of an instance. Note that in C#, all methods, properties, members, etc must be declared inside of a class - that is, there is no concept of a “truly” global variable like there is in other languages. However, you could whip up a class called “GlobalVariables,” add a bunch of static members, and would have something roughly equivalent to global variables in other languages, the only difference being that you have to access the members via the class’s name, similar to an additional namespace. var globalVal = GlobalVariables.MyValue; I’m not saying a class like the above is a good idea, just explaining what’s going on. I would think of static members as application-global objects that are organizationally located within the body of an existing class. Note that you can also mark a class as “static” in C#. So “public static class MyClass” All this does is tell the compiler that you know that every single member inside of that class will be static, and the compiler will prevent you from adding non-static members. This is useful on its own, but is also a requirement C# uses for classes that happen to contain custom extension methods for other classes.
As with most new concepts and technologies, I recommend finding a good course on something like Lynda/Udemy, to get you up to date on the fundamentals. This will give you a much better foundation to further develop your knowledge, skills and experience through practical work, with way less problems and headaches. This course on Udemy seems to be highly recommended: [https://www.udemy.com/xamarin-forms-course/](https://www.udemy.com/xamarin-forms-course/) You can watch the first hour for free on YouTube: https://www.youtube.com/watch?v=93ZU6j59wL4 I'm not sure if the above course covers this, but if it doesn't, then I recommend looking into these concepts when you've got the fundamentals down: Converters, Renderers and Behaviors. In case you need more on MVVM in Xamarin.Forms, then this 30 minute video explains it very well: https://www.youtube.com/watch?v=GZDQptTQZsk
#### [Xamarin Forms Tutorial: Build Native Mobile Apps with C#](https://www.youtube.com/watch?v=93ZU6j59wL4) ##### 371,219 views &amp;nbsp;👍3,763 👎82 *** Description: 🔥Get the COMPLETE course (70% OFF - LIMITED TIME): http://bit.ly/2ITWcyLWant to learn Xamarin Forms from scratch in a fun, step-by-step and pragmatic ... *Programming with Mosh, Published on Dec 21, 2016* *** ^(Beep Boop. I'm a bot! This content was auto-generated to provide Youtube details. Respond 'delete' to delete this.) ^(|) [^(Opt Out)](http://np.reddit.com/r/YTubeInfoBot/wiki/index) ^(|) [^(More Info)](http://np.reddit.com/r/YTubeInfoBot/)
You can prepare yourself for life in Xamarin by making a little script that closes Visual Studio on you, about 5-10 times per day. This will simulate the joy of the PC randomly losing its connection to the Mac, Visual Studio hanging during debug, VS all of a sudden deciding it's not going to deploy any longer, the simulator window spinning, etc.
There's no real-world equivalent to this scenario. So I'll use actual computer memory layouts to explain. You're aware that memory is laid out in a contiguous array of cells in the most simplified model of computer memory. Everything that the computer executes has to be loaded into memory. Therefore, each element gets its own memory cell. So lets declare a class called File which exposes methods to perform I/O operations on a file (Read, Write, Delete). The exact implementation does not matter. Since the File instance cannot exist without a corresponding file on the disk, it also has a static Create method. So the declaration is as below. static class File { public File(string path) {} public string Read() {} public void Write(string contents) {} public void Delete() {} public void Close() {} public static Create(string path) {} } This class is consumed with the following API. var f = File.Create("foo.txt"); f.Write("bar bat"); f.Close(); When the application starts, it loads the File class into memory. Let's say it loads it at location 100. Each method, including the constructor gets loaded into sequentially incrementing memory cells. So the Create method is at cell 6. [ 100 ] [ 101 ] [ 102 ] [ 103 ] [ 104 ] [ 105 ] [ 106 ] ^ | ^ | ^ | ^ | ^ | ^ | ^ Class | Ctor | Read | Write | Delete| Close| Create When this class is instantiated, it duplicates the instance methods and places them into a new memory location. This location is referenced through the variable f shown in the example above. [ 120 ] [ 121 ] [ 122 ] [ 123 ] ^ | ^ | ^ | ^ Read | Write | Delete| Close When you invoke a method on this instance, the runtime locates the starting position of the instance, then jumps to the correct method from that point onwards and invokes it. So the Write method is invoked by jumping to location 121 in memory and executing the code out there. The Close method is invoked from location 123. This occurs for every instance that your application creates at runtime. var g = new File("bar.bat"); g.Write("lorem ipsum"); g.Close(); -- [ 154 ] [ 155 ] [ 156 ] [ 157 ] ^ | ^ | ^ | ^ Read | Write | Delete| Close The Write method is now invoked at location 156 in this example, followed by an invocation to the Close method at location 157. Notice how the Create method is not copied over to the memory table for either instance. That's because it is declared as a static method. Whenever you invoke it, the runtime always looks for it at location 106 in memory, and nowhere else. That's the difference between instance and static methods.
Are you using System.Windows.Media.Imaging instead of System.Drawing? For example, [this](https://docs.microsoft.com/en-us/dotnet/framework/wpf/graphics-multimedia/how-to-apply-a-transform-to-a-bitmapimage) with a ScaleTransform.
Cars aren't actually a great example for this, but we'll roll with it. Assume all cars in your example are created post 1996, and therefore all use OBD2 for their computer system. Your car class in your example would look something like this: public class Car { public Engine Engine {get; set;} public ExhaustSystem Exhaust {get; set;} } While each car as an engine and exhaust system, each would be unique to the car. You'd instantiate the car like this: var ford = new Car(); ford.Engine = new Engine("351W"); ford.Exhaust = new ExhaustSystem("FlowMaster"); But the computer system is going to be common across all of these cars. You COULD define this as a class specific (non-static) property, but that just adds to your class. You can instead add the property as a static member of the class: public class Car { public static string ComputerType = "OBD2"; public Engine Engine {get; set;} public ExhaustSystem Exhaust {get; set;} } Now, you can access the generic property common to all cars by doing the following: var computerType = Car.ComputerType; Not that my instance name, ford, lets me access properties of ford (engine, exhaust). If I want to access the static computer type, I access it through the generic class name (car). Hope that helps.
I've almost read C# in a Nutshell - yeah it's a reference but I decided to go through it to get a better whole understanding of C# and .Net. All in all it's a great book - you can't go wrong with it. Pro C# 7 is much larger by comparison and I've only checked out bits of it. It also appears to be of high quality, however its size is due to several additional topics being included - ADO.NET, EF6, WCF, WPF, ASP.NET. Also it includes some lower level stuff (CIL) which I don't think is in the other one. However in some areas it lacks detail. While purely for C# I would get the Albahari book, with Pro you get more bang for your buck. If you are already quite experienced as you say maybe you should check out other books since those are more suited for people getting to know C#/.NET. Maybe something along the lines of C# In Depth or CLR via C#?
It's hard to find help when you're doing something that is not supported (using Python to script in Unity). If this was just in C# you'd be able to see your error much easier with the debugger. I've had to work on a professional project that had an embedded interpreter (Scheme embedded in a Java web server) and it was a nightmare to debug it. Is there a compelling reason to use Python? 
The internet. I have dozens of books that I don't read that I've bought for reference. At the end of the day, the information is distilled from what's available online. Plus, MSDN is almost always up to date, so that's going to be a reference you can always use
I’m testing out a concept for a game jam where you use reddit comments to control a character. And using PRAW in python seemed to be way easier to use and get the result i wanted quickly than using other languages api’s for reddit. I eventually just decided to write to a file in python then read it in c# for unity to read strings and convert to a function using a switch statement. 
Well, that's not really correct. Methods exists in only one location in memory, regardless of them being static or not. Instance fields exist in each object sure but not methods - that would be insane for memory usage.
I'm currently doing this having worked with mvc.net for 6 years. Best I've found is http://university.xamarin.com Use a Microsoft account to log in, any old hotmail address works fine. Click on Account at the top and then follow the certification tutorials for Xamarin Forms. Once you've completed these, do some research on mvvm and transition anything you've done to that pattern. Then start looking at tutorials for more native features, such as cloud messaging/background notifications using Firebase, making use of the Dependency Service to allow your Xamarin Forms app to use native app services.
You're correct. But the indirection from the instance method back into the original method is not really important to this explanation. You're absolutely right about putting instance methods in static classes. I made a typo there.
I know that Microsoft is investing a lot in UWP, but I'm starting to think that universal apps won't diffuse as people and companies prefer traditional apps and/or web apps (by the way I've great expectations from Blazor). 
Static members can be thought of like global variables. They're basically the antithesis of object oriented programming. They can be accessed from anywhere without making a new instance of the class, so they can be used as a sort of "escape hatch" if doing things the "pure" OOP way becomes too much hassle. They're particularly useful if you want to implement the Singleton pattern.
That I can't help you with. My personal opinion is that UWP is so far from being production ready that its not even worth considering. Data grids are just now in beta. No word on when we'll get tab controls. This is really basic shit that I use every day.
You will also be able to wrap WinForms in the Windows 10 alternative to ClickOnce for non-store deployments.
Can't you just implement a service that uses `FileSystemWatcher` at app startup? You could use [IHostedService](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/host/hosted-services?view=aspnetcore-2.1) for it if you are using ASP .NET Core 2.1.
Sorry, .net core dummy. Been living in node too long...
Maybe they are preparing UWP for Polaris, in this case universal apps will get their chance. 
1. Yes 2. Yes 3. Yes You seem to have a reasonable grasp of it. Generally a static member is used. These sound similar, but are actually fairly different in intent. - Where you only ever need one copy of an object (in which case it's more efficient than every instance having a copy). If you get this wrong, you've just wasted a little memory - Or where you need there to only be one copy of an object (in which case it's often vital, eg a file lock, or at least a problem, eg database connections/open sockets because you might run out)
? = Restful API maybe?
I just bought **Pro C# 7: With .NET and .NET Core** a couple weeks ago actually! I just really want to get more consistent with learning and practicing concepts as an aspiring developer and I felt like investing money in a book would almost force me to try and be more consistent and motivated. I've been self-studying C# off and on for probably the past year or so. &amp;#x200B; I'm really liking the book! If you're completely new to some of the basic level programming concepts then some stuff will probably go over your head. It's probably not for absolute beginners, but the way concepts are explained and broken down are somehow starting to click for me a bit. Sorry for rambling, I just felt that my answer needed some background to better convey my thoughts. 
I'm working in enteprise. I've yet to find a company willing to invest time &amp; money to do UWP either for client-facing or internal apps.
As the author of a winforms app I say run. The developer ecosphere outside of Microsoft is nonexistent. They’ll keep dumping money into it and it’ll be fine, but you’ll be the next fortran developer. There’s just too much around web and running web as a native app these days. I’m moving to web and web as native, but sticking with native on mobile. I prefer native, but windows really sucks.
Best C# reference? Unironically MSDN MSDN always got hate, I didnt like it when I was new, but after the years MSDN usually has the best documentation esp for API things. Some of the code is old though (no `var`, explicitly doing `.Dispose()` instead of `using` etc)
maybe you need public properties in your class, not fields? (just guessing)
Hmm, I haven't had to do this in the past, but I'll still try it!
but it’s weird it freezes, it should not in either case; and make sure you are in debug mode, not release
Infinite loop. You can't catch that. You could step through the code and see what repeats all the time. But usually infinite loops are easily detectable when reading the code once again with that in mind
hmm I see, but I still want to go through all the nodes, but get specific children to the nodes if that makes sense? /path/to/node could be "author"? &amp;#x200B;
Nope, it's vanilla -- I tried it in a new project and it worked. So I'm trying to narrow things down, but heck.
debug mode, yep
Probably not the serialize function itself, show some more code.
I resolved it -- but it doesn't make much sense. I converted my class to just a System.Object, THEN serialized. But.... doesn't Newtonsoft natively convert it to object, \*anyway\*? I'm still so confused.
Yes.
You'll be able to more advanced queries for say, &lt;author&gt; elements that match user input, and then access the child nodes within the nodes returned. Read the [documentation](https://docs.microsoft.com/en-us/dotnet/standard/data/xml/select-nodes-using-xpath-navigation).
Thanks a lot for your reply! Well, "experienced" is quite relative. I think it would be better to explain my background. I did my study in electronic circuit design with a strong focus on microchip programming (in C). My first contact with object oriented programming was at my first job, where I worked most of my time during three years on a project coded in Visual Basic Script (Yuk!). During these years, I also created a couple of c# WPF application (where my best friend Google really did save my ass). Those two things gave me enough experience to get a better job. Now, since the project I'm currently working on is in C#, I would take this opportunity to "start" from scratch, just to ensure that I have the basis right. With what you said, Pro C# 7 seems to a bit more of a jack of all trade with it's coverage of additional topics. I think I prefer a deeper coverage of the language which C# 7.0 seems to provide based on what you said and the comparison of the table of contents of both books. Thanks a lot!
I'm at a loss here. I *thought* it loaded it smoothly, but now it's not even though the I made minor changes, that now I can't recall. sigh.
Silverlight 2.0
The internet already helped me a lot! It's how I switched from electronic design and microchip programming to software development. But this time, I want to get a better overall knowledge of C#, and I think I'll achieve it more efficiently with a good book. Also, I do a lot of commuting each day so it would be a great way to reuse that time.
Thanks for the feedback! I am already quite familiar with the basic programming concepts (I started programming 7 years ago) and I'm currently working on a project in C#. I just want to deepen what I already know. In my case, I think I'll go with C# 7.0 in a nutshell since it seem to cover more deeply the language in itself. Good luck in your learning!
If that's multi threaded I'd expect it to be a bug, clearly. it **could** explain why it acts differently on stepping
Nutshell is the best book, but you are so right. MSDN is actually amazing. 