All of this! I'd also suggest "The Pragmatic Programmer", which has a lot of what became common sense to me later in my career. Rob Conery's Imposter's Handbook series is also a brief overview of some of the more Computer Science-y aspects of the jobs presented in a less initimidating manner.
Well, if you're going to attack me, I'd at least prefer you attack me for what I actually said.
Customer usually has no idea are you using WCF, RESTful, JSONRPC or bell and string. They want functional stuff and how you do it shouldn't matter if it isn't changing bottom line or functionality. It should matter to you - is it easier to do, test and deploy...
I think the votes on the various opinions expressed in this thread say all that needs to be said, and continuing this thread of yours of "good tool A must be in opposition to good tool B" would be a waste of life.
That's not the thread. The original claim was that one must purchase VS licenses or suffer decreased productivity. I never once said people are not allowed to like tools other than VS Code. I simply wanted to know why he insisted on full VS so strongly if money is a concern in this scenario. If you like VS, knock yourself out.
Yo man thanks üôè
Yeah I have *The Imposter's Handbook* but haven't sat down to really digest it yet. It looks good. Those are all good things to know about.
[The day will come.](https://www.reddit.com/r/ProgrammerHumor/comments/3e6lg6/the_evolution_of_software_architecture/ctcbsr8/)
Switch statements execute very fast. Read the IL to get a sense of why. Maybe time spent figuring out how to make your switch statement readable and maintainable is better than time spent figuring out what you might replace it with?
Just a little observation, why have 2 identical for right after each other. It's much more efficient to have the console.writeline inside the first for just after assignment.
Consulting costumers do know what they use.
Look better then, like modern Java. Kotlin is a fad on the JVM, in 5 years from now it will be an Android only language, if in the meantime Google hasn't decided to push Fuchsia with Dart. Even Swing is more mature regarding cross platform support than any .NET Core alternative, including Xamarin. Oracle Studio is what you want.
Above all else, do not call yourself a newbie. From hens forth, you call yourself a programmer. Newbies are gamers, you my friend, are a developer.
Embrace perseverance. Someone here mentioned "happy code" and they are right. Look for the fun in digging in, in this way you can expand your "happy code" surface. &amp;#x200B; Also, trust your gut. Very unscientific, but it works. If code feels "too hard" or "too complex", you may actually be right. Plunge ahead anyway, because until you know a better way, you still want to get it done. But be keeping your eyes open and look for clues as to the "better way". &amp;#x200B; One of the trickiest parts of engineering something new is knowing the terms and having enough understanding to even know \*how\* to search for help. When you are on your own, a bit of brute force plunging ahead is sometimes the main tool at your disposal to get there. Enjoy!!
Really? I read most of his books and I've never seen him advice for something like this.
I think that the most clean way to avoid using switch cases is to use a dictionary. The key of the dictionary would be the value you're checking, and the value the function or action to call . Then you can replace that hideous bunch of code with : mydict[valueToCheck].?evoke();
Dunno if i'd have the capacity to commit to anything like that, but the most helpful thing for me was just getting my hands dirty. I suggest starting a personal project with goals written down, so that you're forced to learn how to achieve them, or even better, get involved in an open source project. Next, stay subbed to this subreddit and read as much of the topics as you can. You absorb a lot by just being part of a community. I joined a c# discord server. It can be really nice. Last, I loved this course. Cannot recommend enough. You may not absorb all of it the first time through, so get to work after. Then watch it again. You'll pick up even more. https://www.pluralsight.com/courses/csharp-fundamentals-csharp5
Check out FolderBrowserDialog, very easy to use: using (var folderBrowser = new FolderBrowserDialog()) { folderBrowser.ShowDialog(); } https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.folderbrowserdialog?view=netframework-4.8
This will OBVIOUSLY be way easier if he uses rabbitmq or amazon SQS.
Oh sick, thanks!
Important things about C# 1. Don‚Äôt worry about using too many variables (fields) the compiler optimizes allocation 2. Use Lists over arrays unless in very specific cases 3. Foreach statements are very useful for iterating over Collections (lists, arrays, etc) Ask questions on google to improve your code
Build something as you learn instead of trying to memorize every little thing. You will memorize stuff as you use it to build stuff. It can be an idea that you already have or a clone of an existing service. It doesn't have to be perfect, you just need to become good at getting answers trough google of things that you dont really even know the questions to. And to not give up when something seems too complex at first. It almost never is complex, but you can only tell until after you learned it. Make sure that you are building a full stack thing, since the demand in c# is mostly of back end, and full stack developers. This the best way to wrap your head around many concepts.
Can confirm pluralsight is great. You get in what you get out. Can I get that discord? I have been a c# dev for a little over a year. As for OP, more power to you if you find a mentor but most people will be too busy. Focus on learning the all the concepts of OOP. Learn to read other peoples code and figure out what it‚Äôs doing. It helps immensely
Removed: Rule 1.
Removed: Rule 4.
Removed: Rule 3.
Removed: Rule 3, Rule 4.
Removed: Rule 4.
I know it is open source, but if there is an existing tool out there I would rather not invent the wheel.
https://www.hanselman.com/blog/MakingATinyNETCore30EntirelySelfcontainedSingleExecutable.aspx V https://www.talkingdotnet.com/create-trimmed-self-contained-executable-in-net-core-3-0 V http://dotnetdetail.net/how-to-create-net-core-3-trimmed-self-contained-single-executable-app/ Interesting blog post life cycle where with each reblog post loses merit while doubling on ad/tracker count. It's okay to enrich your blog with content created by others but it's a good etiquette to provide links to source material.
&gt; Oracle Studio is what you want. Hahaha. Now I know you're taking the mick. Oracle Studio is just another case of a product they bought and completely ignored. Oracle is doing more or less what Microsoft did in the 90s. They acquire technologies, sell licenses for them, but generally don't care about them. If Java didn't already have the following it has, it would've gone the way of IE long ago. Just look at the "success" that is OpenOffice.
Agreed, but unless you have access to the original assemblies / JARs that define the objects being stored you're still going to have a lot of work to do. It looks like only the development tools (most likely just SDK) really exist. My guess is that you're going to have to do one of two things (maybe both): Use the SDK to look at the database and see if it alone can be used to query data out into something else that you can use as an intermediate step to bring into a different DB Reverse engineer the assemblies/jars used to replicate the type(s) stored in the database so you can query them out. I think either one is going to require using the SDK to connect to the database. The first relies on there maybe being a built-in way for the SDK to materialize the data/results, and the second assumes you have access to the type(s) in the database so you can either reference it, or re-create them so you can query the data out. Sucks either way, but a quick glance at what's out there doesn't show any kind of generic query tool for it. As you stated since it's an OODB it's tied pretty closely to the objects stored in it.
Well, I said "Factory Method pattern" which is like saying "take this specific road". Should I have given a link to the Wikipedia article? https://en.m.wikipedia.org/wiki/Factory_method_pattern Do people here see "Factory" and automatically downvote?
Sorry but Winforms not looks better at all.
Running npm start with a watch server is a no-no from my experience
I edited it!
Sorry, but you don't get to argue against matters of opinion.
Thank you very much! I'm preparing for the 70-483 certification but I also need to get involved in a concrete project. I am currently working as a junior software developer, but they won't give me more space to develop. So I feel I need to work harder and gain more confidence.
Good job dave man
See my edit for some arguments against arrays.
Try not to get too intimidated. This field changes so fast that the veterans have constantly shifting strengths and weaknesses. As do the new blood. It levels the field in many ways. Where experience is more valuable is designing software architecture and managing workflows agile and with source controls. So, in closing, when it comes to the task of writing the code, your value is your adaptibility. When it comes to making good design decisions, experience is more important.
&gt; the opposite of helpful. What does that mean? Anyway, it was a supplemental piece of information, which should be clear since I didn‚Äôt answer his question. Others already did.
Just some extra information.
Yes I know. But I don‚Äôt agree. Arrays have a worse API is doesn‚Äôt fit as well with the rest of the language.
Try fiddler https://www.telerik.com/fiddler
I've done this by creating a \`HttpRequestMessage\` and doing a \`Debug.WriteLine\`. Example between lines 106 and 211 here: [https://github.com/RobJohnston/QuadrigaCX.Api/blob/master/src/QuadrigaCX.Api/QuadrigaClient.cs](https://github.com/RobJohnston/QuadrigaCX.Api/blob/master/src/QuadrigaCX.Api/QuadrigaClient.cs).
It's not directly C# related sure. But rule 4? I don't get that
You're entitled to your opinion. But I will say it's one I've never heard before.
Hey guys check out this genius over here
&gt;method dispatching Isn't this a strategy pattern? It doesn't sound so bad, maybe overkill if the switches are simple enough.
I know you only asked about out going requests but even so isn't packet capture the right way to do this? There you can see exactly what is being included in your requests, what isn't, and exactly what's coming back. Your on a Mac so there's an install for that. Where a proxy might come in handy is when you have to talk to a secure server then intercepting things is near useless. Otherwise it seems to me like everything else is a crutch that won't give you all the info you might eventually need. But I might be wrong never having the need to look elsewhere.
Just do the following 1. Find c# open source projects and contribute to them 2. Create c#/.net blog and a post a topic every week 3. Find a local meetup and present at it. If your area doesn't have any consider creating a presentation on youtube. Take a look at the freecodecamp for ideas. If you do the following for 1 year it will definitely boost your career.
&gt; 70-483 I found this video very helpful to go along with the book: https://www.youtube.com/watch?v=RhLLxew4-TY
I do apologize - There used to be an excellent video on YouTube that covered 70-483 very well and was a wonderful companion to the book for understanding everything. Seems the account has been terminated, but the old video location was here: https://www.youtube.com/watch?v=eIpl1PyyQ5k I did save my notes I took when watching the video of things he targeted specifically. If you want it message me and I'll send them to you. Notes are still somewhat useful I think.
Fiddler is great! I know PostMan has a good use base also.
 [https://discord.gg/aJwTAgS](https://discord.gg/aJwTAgS)
You act like #1 is an easy task. Finding a project you're competent enough to just jump into and start submitting pull requests for bugs and features isn't something a junior is going to likely be capable of.
Oh please no all the csharp discord I've been in are all really toxic Maybe that's changed as of late but let anybody discourage you if you hop onto one of them.
Not op but do you have any recommendations on what to blog about? Do you just talk about what you've been working on in the week?
It's also nerve wrecking imo
By learning more about the principles and best practices of software development and focus less on the actual language specific details. The solid principles is the first thing that'll greatly improve the quality of your code. Dry and kiss principles are very easy to adhere to and improve code quality drastically. Any principles that's widely considered a current best principle, I say currently as the field is an adaptive one constantly. Remember software development has been around since the 60/70s and true craftsmanship hasn't been able to fully develop.
How do we do task #1? how to contribute and submit pull requests n all?
Hey, I would be willing to give you some mentorship. PM me.
You can find thousands of C# getting started videos on Youtube - they should explain what you need to get going and how to get started.
Thank you
True, I've seen a lot of that too. Nah this sub is a pretty good community as compared to other choices.
.net framework is not open source. The source is online, most of it is on dotnetreference, but it is not open source. You can not contribute, or modify, to the original framework.
Sorry. That's what I meant. It is "source available"...?
&gt;z960849 heh, I was actually going to post this ... and I then I scrolled a bit just to make sure it wasn't going to be a duplicate. My recommendation is this. Mainly for the reason that you will be looking at other peoples code. If you work for any company with 2 or more developers, at some point you are going to have to reference another persons code, perhaps modify it or send a ticket to modify. In order to describe the issue you have to understand what that person did. &amp;#x200B; A normal company will have a lead developer that has written a coding standards doc, or specified some sort of standards doc that is to be followed when writing functions/classes etc. &amp;#x200B; So if you have never had to follow a standard, then it's always a good way to get used to it, in a project where one is required to be followed to a T.
Wireshark. There‚Äôs really no need to try anything else.
Lookup Jeff fritz he works for Microsoft and streams on twitch. One of the best teachers
Start with a Console app.
Actually it's not that bad really. A Junior developer is someone who has taken course work at some level, understands the fundamental basics of a language and during which process has made their own application. Simple most likely, but it is an app that follows a development cycle (hopefully). So when you look for something, you go into an open source project dump list like ... * What do I enjoy? * What makes me enjoy programming? * Do I think that the courses I took to learn C# have helped me on a basic level to understand how to solve a problem with this project that fulfills the previous two options? In a lot of cases, they won't. Most C# courses are fundamentals at best. They are the language itself. They do not cover things like UWP/WPF/MVVM/WebAPI with .NET etc. They are a basic C# understanding with base concepts. So when you see a project that may be in a different area, go look up a tutorial on how that works. Then go back to the project when you have an understanding of that concept. &amp;#x200B; Numerous times I have seen people take on projects (including myself) with the intentions of doing amazing things, but the concepts were beyond my capability at the time and on top of that ... I just didn't really 'like' the topic. &amp;#x200B; I'll give an example. One time I was working on the Unity Harry Potter open source game. I thought that I could do great things... terrible things... but great things. (See what I did?) But yes, it was a bit much for me at the time. I didn't know much about Unity, so I pretty much did a couple of things that I found while running through the environment, fixed some stairs, and tried to adjust some of the menu stuff. Then I stopped. &amp;#x200B; I took the time to go and try to learn more about Menu stuff, 3d modelling and placement in a 3d environment like Colliders and all that. In the end, the project really isn't for me. I enjoy the Harry Potter movies, but I am not a huge fan. so the detail they are aiming for is not in my ballpark :)
Have you tried adding 'Convrrt Zero Datetime = true' to your connection string? Link: https://stackoverflow.com/questions/5754822/unable-to-convert-mysql-date-time-value-to-system-datetime
Use VSCode and .net core, start with a class library and a test project that calls it. Start with "Hello World", then something like lottery numbers, then ask for user input and save it to a file, then read the file and write the content to console. Write "silly" programs that each let you try out one new thing. There are countless "Learn csharp courses, videos on the internet. Microsofts own content is a good way to start.
This is gona help :) thank you
Thank you
Thank you I will be watching him
I've done that for about a year, going off on and on a project, and just not getting it. (In my case, alcohol was destroying my brain; I finally quit drinking, and my ability to process information is returning)... I'm finally returning to something and enjoying it again.
I did actually. And it returns the object now. Only my created value is just....gone
You should use either visual studio community edition or Ryder (by jetbrains). They are both good, I recommend just picking one and committing. &amp;#x200B; Once you pick one and make a new project / solution, you will find that it creates a bunch of files - the important one (for now) is called Program.cs &amp;#x200B; Code you write inside of the \`Main(string\[\] args) { }\` will be executed. From there, I recommend starting on a tutorial, for example, making a basic calculator - that's actually a really good way to orient yourself to what all is happening. &amp;#x200B; If you have an idea of what kind of program you'd like to make, that will help you figure out a starting point
https://share.icloud.com/photos/0eW0Bqp-agPd_EehjScjHpvhQ#Caldwell,_ID
Should I use Vscode or visual studio.
Should I use Vscode or visual studio.
Removed: Rule 4.
I really dont know what that means
they are both good programs, I use visual studio and haven't messed around on VScode very much, so I wouldn't be able to help out with that program, but I know that it is supposed to be "Visual Studio Lite" so maybe that would be better for beginners. I'm not very sure. Good luck!
But do you have anything to say to my points? Like... the API? The way it fits into the language?
When you google on my country about this not really good advices come sorry though.
There's information in the sidebar. You can also check out /r/learnprogramming. You can also read over Microsoft's "Get Started with C#" page: https://docs.microsoft.com/en-us/dotnet/csharp/getting-started/
Thank you so much I am sorry about what I did. (Just started using reddit)
Eh, of course the last thing I'm stuck on is actually getting the stream to work. I figured out how to add media options, but I don't believe the stream is actually running... *sigh*. &gt; media.AddOption("--sout - keep--sout\"#transcode{vcodec=h264,vb=0,scale=0,acodec=mp3,ab=128,channels=2,samplerate=44100}:rtp{sdp=rtsp://localhost:8554}\"");
Awesome, congrats on quitting! Talk about good motivation not to go back :) Personally, I've seen my ability to solve chemistry/physics problems dissapear about 5 years after taking those classes in college, so I want to keep programming because I don't want to lose the ability to think generally about solving problems.
Np. I'd recommend joining the Discord if you get a chance. A lot of people on there who are willing to answer questions or give you pointers. Anyway good luck and most importantly have fun!
https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/reference-types
I've been a dev for 12 years and a c# dev for 5 of those. The biggest thing for me was reading "Clean Code" and "The art of unit testing". These made a huge different to how I think about code and how I approach problems. I can't recommend these books enough.
Did you mean to use TIME instead of DATETIME for your created column? The TIME type won't return a valid DATETIME, only a timestamp iirc.
Also, if you do wish to use TIME type, you can change your csharp class to accept a timestamp for that property then do the conversion to datetime
i still dont get it though.. from what im doing it seems im passing it as a value type, not reference. even so, i dont get how 3 SerialPorts can be open on the same COM port
I used TIMESTAMP in the SQL first. And tried to fix this error by using TIME instead but got the same result
I would love more information on what your talking about
Variables are [passed by value](https://devblogs.microsoft.com/csharpfaq/how-are-parameters-passed-in-c-are-they-passed-by-reference-or-by-value/) in C#, this is true. In your example, the `SerialPort` object is a reference type. The reference type is what is passed by value to the called function, so you really are not passing "a second copy". You can pass the value of this reference around anywhere you like and you'll still only have one instance open for that that port number. Be sure to close and dispose of objects that implement `IDisposable` so you don't leave resources hanging around waiting to be garbage collected with open connections.
just to clarify... what would happen if i closed or disposed `sport`? would it also close `serialPort` ? im guessing it wont, but like i said.. still a bit rusty with programming
Right. I was too lazy to type all that out üòÜ. But that knowledge becomes important when contrasting the behavior of i++ and ++i.
Check out how this person defines the options, it looks different than your code: https://mfkl.github.io/hls/2018/10/10/How-to-record-HLS-stream-with-LibVLCSharp-and-.NET-Core.html media.AddOption(":sout=#file{dst=" + destination + "}"); media.AddOption(":sout-keep");
What does the value in this column represent? Also, if you could, show your c sharp objects.
Just start writing. Find a small project, start submitting pull requests.
Lots of wisdom in this post.
But it's for sending requests, not capturing requests. A good program but not what OP asked for. Also, Insomnia is postman but better because it's got a dark theme :)
You only have one actual instance of the object, with several references to it. If you close the port using any of the reference objects, the port is closed. When you dispose the object, you're marking it for garbage collection. Any continued usage of the object by any of the references becomes problematic because you've told .NET you don't want the object any more. Really, what's the purpose of having so many references to an object that has one job? Create your task, start the task, and inside that task you can allocate and use the I/O resource you need to manage your serial connection. You have to be careful with thread safety and inter-process communication. One way is to have your task raise events when it needs to notify another thread of an action, or listen for events when another thread needs to give information to your task. There are many others.
i see, makes more sense now, i didnt know referencing and value types affected this... probably cus ive never heard of them :/ also, i wanted to spread out the functions for reading, sending and "doing altering stuff" in different classes instead of having 1 class do it all.
https://share.icloud.com/photos/0OXn9VO1uRMd468XjZzldtwqA#Caldwell,_ID This is all the snippets pertaining to the Keeps(posts)
Like I thought originally, you have mismatched data types. Csharp DATETIME doesn't accept a timestamp directly. Your MySQL table is using timestamps. A timestamp is how many seconds have elapsed since the Unix epoch for MySQL. You can change your csharp class to use TimeSpan for those fields and it should work. To convert to DATETIME in csharp you would define a new date set to the Unix epoch, then addSeconds(someTimespan)
Fiddler is much more straightforward than Wireshark for HTTP (HTTPS especially). On the other hand, MS Message Analyzer supports loopback interface out of the box unlike Wireshark.
Thanks! And definitely, the brain is most certainly a muscle: use it or lose it!
 var port = new SerialPort(); // this is CREATING DoSomethingWithSerialPort(port); // this is not Clue is in the `new` keyword. A serialport is not being created if it's not next to new.
Is it spelt correctly? It's not spelt 'Armour' in the database or anything?
It is spelt Armor in both the Db and file
Check this out. class Program { public static void Main() { var port = new SerialPort(); var port2 = DoSomethingWithSerialPort(port); var eq = ReferenceEquals(port, port2); Console.WriteLine(eq); } private static SerialPort DoSomethingWithSerialPort(SerialPort port) { return port; } } &amp;#x200B; ReferenceEquals checks if two variables point to the same memory. So in this case I pass in SerialPort, and the function returns the port Then I check if that's the same port that I passed in, which is true. A SerialPort is only created by the `new` keyword. Passing it to functions does nothing.
i had to untangle the command string with all those arguments - https://pastebin.com/w3pz8xPs I didn't see any obvious reason for failure, the process gets started, but exits with ExitCode = 1. I assume the command works in the command prompt of your computer?
My experience with SQLite and C# is limited to one project, but based on that experience, I would take the SQLite exception as gospel, and look for problems with the configuration of the framework glue that connects to it.
VNC is my go to for this sort of work. You run a VNC server on all the machines you need to access, then you can view them remotely. There are great libs for viewers and even for viewing remote systems in a browser. I'm partial to Apache Guacamole (http://guacamole.apache.org/) for the viewing portion and there are tons of different VNC server options
Best recommendation is too blog about about issue that you come across at work. Also just create a sample application of some bleeding edge technology that came out. Examples of this is micro frontends, JAM Stack, or Blazor.
Take a look at this site [https://www.firsttimersonly.com/](https://www.firsttimersonly.com/) &amp;#x200B; And also check out this thread for ideas [https://www.reddit.com/r/csharp/comments/88gzt8/looking\_for\_open\_source\_c\_project\_to\_contribute\_to/](https://www.reddit.com/r/csharp/comments/88gzt8/looking_for_open_source_c_project_to_contribute_to/)
Easiest thing is to just add stylecop to your project [https://blog.submain.com/stylecop-detailed-guide/](https://blog.submain.com/stylecop-detailed-guide/)
Your best bet is youtube and multiple blogs. There are tons of videos that explain machine learning, you don't need to watch one on ML.NET specifically (its better if you don't ML.NET is still very new). It's more important that you understand the underlying concepts and algorithms used to achieve a learning feedback loop.
I've done multiple things that work. Fiddler as mentioned is pretty easy. Wireshark is much more complex but also great at what it does (which is analyze network traffic) If you're just trying to see why your post request doesn't work sometimes I'll just throw it into postman and submit it that way.
Yeah well now it just doesn‚Äôt care about those values. No matter what I try to parse them to they just don‚Äôt exist. This has me so fucking pissed I‚Äôm sick to my stomach. Nothing fucking works and no matter how much I ask, how much I google, how much I read it‚Äôs not gonna work. Because it‚Äôs me
Did you update anything? The error you commented tells you that your application has a reference to a different version of that DLL.
If anyone wants to help you, they probably should know where you're starting. What resources _have_ you looked at regarding this?
Blows my mind that this doesn't exist in visual studio. They should have built this in 10-15 years ago.
Hmm, I double clicked something "I think it was the sln file" now it seems to work.
 [https://exercism.io](https://exercism.io/) is a site where you solve exercises and you get feedback by a mentor that automatically gets assigned. The site is very well made. Don't know though how advanced the exercises get, I only just started doing it myself.
Thanks a lot. I do have the dlls, I have already looked into them, but I wanted to know if there is a generic way. But yes I guess I need to take the hard way :). Thanks again.
I second this. The Apache page for this is involved. Thankfully there are a few decently packaged all-in-one docker images out, packaged by others that work nicely. Supports some nice H264 compression and login structure, all thru html5 which means plugin less, thru a web browser.
This guy understands it.
Welcome to programming. Let it lie overnight. It'll be there tomorrow, you'll figure it out and then laugh.
Holy crap Wireshark is a great tool, but is overkill and not the right tool for this scenario. Fiddler is designed for HTTP traffic analysis.
If I were you I would start with the course by Andrew Ng, it will give you a very solid foundational understanding of how ML works, and from there branch out to whatever you're interested in and the C# libraries. A lot of people complain that the course uses MATLAB / Octave, but the programming language doesn't matter in this case, the syntax is simple. If you don't take time to learn the foundation, you won't ever *really* know what's going on. This is a huge topic though, be prepared for endless learning. &amp;#x200B; Class: [https://www.coursera.org/learn/machine-learning](https://www.coursera.org/learn/machine-learning)
That might be a good answer, were it not for the fact that there are plenty of other posts in the thread being equally 'vague' (although I would call them concise). You only need a couple of words to invoke a known design methodology, or allow someone to look it up and study it if they dont. Its hardly a different road, its a different mode of transport that moves you along one.
Not that Rider needs even more promotion, but thankfully, support for this is built in to JetBrains IDEs
Don't use Xamarin to make apps. My company has made both Xamarin and native apps and Xamarin is just a buggy mess.
Are the 10 objects all of the same type, just different instances? It sounds like you want to implement a method on your object called something like IncrementAll() that internally increments each field / property, then just put your 10 objects into a collection and loop over them: foreach (var obj in myObjects) { obj.IncrementAll(); } if that doesn't work, perhaps explain a little more about what you're actually trying to do.
If you want help with a specific task, you're going to have to be more specific about what your goal is and show what you've tried. (not very helpful, I know). Until then, the best you're going to get is some general advice which may or may not apply to whatever your goal actually is. Suggestion: An array. Or a list. Or some kind of collection. If as you say you have "10 objects", then you might have one list... with 10 items in it. Then to modify those items, you simply iterate (in a loop) over the array or list or whatever collection you're using, and modify the properties of the current item. Example public class MyUser { public int Id { get; set; } public string Username { get; set; } } // code which uses the class List&lt;MyUser&gt; users = new List&lt;MyUser&gt; { new MyUser { Id = 1, Username = "John" }, new MyUser { Id = 2, Username = "Jane" } } for(var user in users) { user.Username = $"Changed Name {user.Id}"; } This is a silly nonsense example, but in the loop it is setting one property for both users. I would not create a variable for user number 1 and a variable for user number 2... etc. through user number 10... and modify them one at a time. And don't fret too much if you don't understand every concept in the whole language. You're trying and still learning. You're already ahead in the game. It takes time. Keep going.
This is pretty much what I'm looking for, but I don't completely understand this: &gt; $"Changed Name {user.Id}"
also I don't completely understand this, that i think about it: &gt; for(var user in users)
Well I guess everyone would have a different experience with it. We're more familiar with C# and would like to try out Xamarin at least, before learning anything else for development
This is accessing each object *user* in the list of objects *users*. Lists is the first of many data structures youll learn.
I actually dread the day when I get into a company that says: "You must not use Allman style bracket indentation. Each time it is discovered, you will be docked one day of holiday pay."
Oh, thanks for clarifying. Still a bit unsure on what *user* specifically is, but it doesn't matter that much.
Didn't postman add dark theme?
I'm definitely interested. Do you plan on doing a tutorial of some sort?
&gt; It would use an ORM, instead of not not using an ORM. Pretty big architectural change. But that would only impact the data access. So why would the system design have to change? &gt; How do you consider this decoupled when changing domain objects require a database migration? Why would that be the case? Unless you deliberately choose to architect it that way? You can (and should if your system isn't trivial) have separate domain and persistence models. The data access is decoupled, even though it uses an ORM.
Tutorial for what? And by tutorial do you mean commenting code or a video? Either way I‚Äôm always down for helping people out, I know how greedy people can get with code and technology, my dream is to demolish that barrier.
You're unable to use concrete example because you're just parroting stuff you've heard other devs say.
Each time it steps through the list, it puts the current value into *user* so you can do things with it. In this case you would call your ++ function.
It is called string interpolation. The `$` tells the compiler to interpret things in braces. Basically the equivalent of `‚ÄúChanged Name ‚Äú + user.Id`
I know what the `$` does...just what would the output be here? Would it be `Changed Name ID` ?
Where and how is *user* defined ? What if I wanted to use *person* or another word ?
 for(var user in users) So, the **var** says we're going to define a var. *user* is going to be its name, any name is acceptable. The **in** says that the variable is going to come out of a datastructure (in particular an IEnumerable) and the *users* is the data structure that its going to come out of.
Oh, okay, so just a normal for loop.
I‚Äôm not convinced you do if you are asking what the output would be... Whatever user.Id.ToString() evaluates to would be in place of {user.Id}
Yep. I just didnt know your ability level, so I didnt want to assume. Sorry if it felt like I was talking down to you.
I'm just asking to be sure. I said in my post that everything has to be explained to me like a 5yo. It wasn't a joke, I don't make those in help posts. If you don't like that I'm unintelligent (which I also said in my post) then save yourself the trouble and don't reply... I appreciate that you did, but honestly you should do what's more beneficial for you.
Oh, no I didn't take it that way. I ask a lot of unnecessary questions because I need to be sure I'm actually getting the point. (I don't learn as easily or in the same way most people do) It makes a lot of people mad, but I said "I'm not too smart and need everything explained to me like a 5yo" in my post.
The art and science of moving goal posts on Reddit. And me thinking that the point was that apparently they didn't provide anything. Guess what, it is the only Java IDE that provides top level capabilities for mixed language debugging Java/C++ and allows for easy introspection of generated JIT code. So many dollars for InteliJ and they don't care about providing features for Java devs doing high performance work on the JVM.
I wasn‚Äôt trying to be insulting, it just seemed contradictory to me. Sorry about that. I actually do want to help increase understanding hence why I‚Äôm giving responses. Good luck in you learning!
I already did that though
Here's a concrete example: 500 tables across 4 MSSQL instances totaling 20TB of data. An MVC monolith nearing 300k lines of code, not counting html and javascript. A distributed system processing over 1 billion records per day, originally designed for under 1 million. Originally using nHibernate, but slowly and painfully migrated (in part) to vanilla SQL, stored procedures and Dapper as appropriate over the last two years to mitigate hotspots, lock contention, inefficient result sets and to enable bulk operations. I could sit here for the next hour and lay out a concrete example of any one of the dozen or so architectural changes that we've had to make to mitigate issues that can be traced directly back to the decision to use an ORM, but I won't because you're clearly the type of person that can't entertain the idea that someone with a differing opinion actually has differing experiences and damn good reasons to hold it. Also, reread my comments. I never said that ORMs should be strictly avoided. I provided the rationale behind why some people like to avoid them.
I'm learning just like you are, but I think the words we should be looking at here are "inheritance" and "counters". Like each class is inheriting a counter from the one above it. Every class that inherits from the class above it would have the counter increased by manipulating that one counter.
I wasn't implying that you were trying to be insulting...I'm bad at communicating.
&gt; Here's a concrete example And then you go on to not give a concrete example but just list a bunch of random stats. Show me a diagram of a system and tell me why you think changing the data access method would necessitate a change to the design. I'm happy to change my mind in the face of evidence, but so far you've been unable to provide any. Show me something concrete if you can.
Oh, I just learn from googling everything and hoping I understand what I find. Though, I don't understand what you're saying here. Like...do you mean classes inside of classes ? And like, changing one value for everything ? I actually want them to have different values but be able to change them all at the same time. Like... every object has a set amount they increase by, and they all increase at the same time. Like A increases by 2 and B increases by 4 each time. Not, A and B increase by 3. Though, this would be very usefull for me to know too... &amp;#x200B; I honestly have no idea what you're trying to say...
Fucking underscores for class fields. Use this. instead. Like God intended
Well its just my opinion that you should learn this in a coherent, structured way. If that is a free 4 hour Youtube video, or 1 guy making 12 twenty minute videos, etc, it doesn't really matter. But it shouldn't be bits and pieces from different people for this particular topic. You are trying to learn how to structure your code here so that it's easier to work with. The way you learn that also should be structured. Yes for inheritance you need all your classes to have at least one value in common that they can inherit from that class. This can be the one value of the counter. Its like you have mammals, then you have the equine class, then under that you have horses, donkeys, mules, etc. All horses, donkeys, mules have tails, the same basic shape, etc. That shape cannot be inherited from the mammals class. But it can be inherited from the equine class. So put the counter in the equine class. That is a variable that is common to all your horses, donkeys, and mules. Then you increase it for the equine class and it automatically increases across the board for all horses, all donkeys and all mules. Does this help? I barely know this stuff, this was literally the point I got to before going back to do more exercises etc.
That sense, yeah. But how would that be implemented ? Like... usually I just make a vague class and make a bunch of objects out of it. nothing really links them other than what data I want them to store and a concept in my head to organize them by.
I‚Äôm pretty sure the majority of people disagree with you. Even most Microsoft devs. Your opinion is valid, but don‚Äôt be such a dick about it.
You have mammals, equines and horses, donkeys and mules. You want to increase the counter by 2 for all creatures of the equine class. But you want to increase donkeys by a factor of 2.0x, horses by 1.0x, mules by 0.5x. So those are modifiers that you can put into each of those classes one time. You are still increasing across the board by 2 for all of the equine class. They are inheriting that 2 from the equine class. But they modify it based on the modifiers you coded into each of the horse, donkey and mule class.
So blasphemous
Okay, so you can have multiple classes within each other ? I didn't know this, but I haven't needed to use it yet. I would have assumed you could. What I'm trying to do is have a value varying per object, not per class. Each individual increases by a different amount.
I love parsers. Always interested in seeing a new one.
Best is to watch this video, seems ok based on what I watched, he shows you how to do it: https://www.youtube.com/watch?v=EiBCF7rYRtI
Even visual studio disregard 'this.'
No. Lex and Yacc solved that problem decades ago. Reinventing that wheel is just masterbation.
editorconfig
Get off of my post if you don‚Äôt understand why reinventing things is good. Some of us enjoy having fun and improving things.
Know why it is not default right?
You can shorten this: int Avowel = word.IndexOf('a'); int Evowel = word.IndexOf('e'); int Ivowel = word.IndexOf('i'); int Ovowel = word.IndexOf('o'); int Uvowel = word.IndexOf('u'); int[] vowelPlaceArray = {Avowel, Evowel, Ivowel, Ovowel, Uvowel}; To: var vowelPlaceArray = new ['a', 'e', 'i', 'o', 'u'] .Select(v =&gt; word.IndexOf(v)).ToArray();
Thank you for the recommendation, I will update it to reflect this.
Style is irrelevant as long as it's uniform and relatively easy to understand.
You seem to be irrationally bothered by this. Considering the majority of people would follow other practise there's really no reason. Are you OK?
No I'm not ok
It's OK, have a moment to your self, it's only an underscore
Underscores are pretty normal albeit with camel casing
What?
They have identical IL other than the seconds has to assign to two different variables. I imagine if you didn't use the first variable the compiler would even remove the assignment completely.
I don‚Äôt know what he wanted a tutorial on. Tokenizing is a broad subject because it has many applications ranging from building programming languages, translators, console systems, etc.
Underscores are perfectly fine, a common idiom, and \`this\` just litters your code with unnecessary garbage.
Imagine choosing THIS hill to die on.
Get a cup of tea. Take a moment for yourself. Only focus on your breathing and relativate all issues. It‚Äôs only an underscore. It‚Äôs someone else‚Äôs code and you may not ever have to look at it
&gt; The art and science of moving goal posts on Reddit. Perhaps you ought to try and follow the conversation instead. My point is, and always was that Oracle doesn't *support* their stuff. They purchase technologies, and then they let them die. Java is basically driven by the community. Any and all packages and tools developed around the language are community provided, and Oracle doesn't have a finger in it. Using IDEs as an example, Oracle Developer Studio's latest release was 22 months ago, VisualStudio's latest stable release was 50 days ago, VSCode's latest stable release was 31 days ago. Oracle purchases technologies, and then provide the bare minimum to keep said technologies going. Sure, .NET Core isn't a super mature platform, but it's feeling the love of both Microsoft and the community. Java is doing well, and that's purely thanks to the community. And that's very noticeable when you work frequently on both platforms. That is and always was my entire point.
So where are the community contributions to language and JVM improvements? Please list the community JEPs, because beyond Shenodah there is hardly anything else. Where are the community contributions for Java AOT compilers to native code? Which community members have contributed JIT compilers written in Java? I look forward to community contributions for OpenJDK pull requests.
... and no mention of 404?
&gt; Scenario: If request resource is not found, Returns HTTP ‚Äì 200 OK with NULL data. wtf
What happens if you start javaw with these parameters directly from command line, not programmatically?
Yeah I was referring to the last bit. The bit about people being greedy etc
I feel the API makes more sense when you work heavily with them. I don't see any problem with the way it fits into the language. It's fully interfaced and works very similar to other collections.
I didn't even bother reading it, but yeah... that is **completely** wrong. There is no way to distinguish a found resource that actually is `null`, and a not found resource.
Yes they have.
This is garbage, the author isn't aware of \`404\`.
&gt; So where are the community contributions to language and JVM improvements? &gt; Please list the community JEPs, because beyond Shenodah there is hardly anything else. &gt; Where are the community contributions for Java AOT compilers to native code? &gt; Which community members have contributed JIT compilers written in Java? &gt; I look forward to community contributions for OpenJDK pull requests. &gt; and then provide the bare minimum to keep said technologies going If the JCP didn't exist we wouldn't see any of this. Oracle needs Java to keep up in order to keep their market dominance going, but they'd be content with doing absolutely nothing if they could get away with it. Exactly like Microsoft did in the 90s and early 2000s. The difference today being that Microsoft has a tonne of projects going, both investing into their own ecosystem, and into their developers, while Oracle sits on their little copyrights like some tired old dragon.
https://github.com/MoonwaveInteractive/TokenMarcherAlgorithm
https://github.com/MoonwaveInteractive/TokenMarcherAlgorithm
Clearly.
A lot of people I know are greedy with their algorithms and code. Instead of sharing or helping, they will tell you to go learn it yourself or ‚Äúsorry, internal project‚Äù.
I am still trying to solve this üòÖ
then get some fucking help lol
On the other hand there is an incredible amount of open source code out there. Software development is quite unique in the amount of knowledge sharing there is, whether it's open source software/libraries, tutorials or conference talks on YouTube.
Is the path to your DB file correct? I think sqlite might create an empty DB file if you misspell the path and name.
Yes, and those open source projects are created by people who don‚Äôt say ‚Äúgo learn it yourself‚Äù. ‚ò∫Ô∏è
I think that you have a database on SQL Server and you're using Azure Data Studio to manage it, right? You can't use Windows Authentication so you have to use this connection string: `Server=127.0.0.1;Database=db;User Id=username;` `Password=passwd;`
Yes that‚Äôs exactly what I‚Äôm doing. How would I go about using this connection string
I disagree. Adding "this" makes it obvious you're using an instance field/property/method. It's one less lookup I have to do when reading code and understanding what the hell it's doing. The rationale is equivalent to using the '_' prefix for fields and with intellisense it's really not that difficult to use all the time. Note: I don't really care too much about it and in most places I've worked they didn't use it and it was ok for me.
Hi and welcome, could you please provide the actual code and not a screenshot. This is the best way to get the desired response to your questions
I have updated the post with the code thank you.
Set fightyes to false before the loop? &amp;#x200B; (There are a number of issues with your code that will give you problems in the future. It might be better that you first get a somewhat working solution and then refactor/fix the issues.)
setting it to false did not help, the problem lies with the conditions set to start the loop, if the user answers yes then the other possible answers are still not checked so it triggers the loop I just can't find I way to set the other conditions to pass the check when one of them passes
as for the other problems, this is my start to C# I'm learning as I go that way I learn what went wrong and how to fix it, as of right now the program runs, once I feel like I know enough I'm going to teach my self how to go threw and fix problems, condense it where I can. if that makes sense.
I don't use _ or this, except for having to use this in the constructors if the parameters and field names are the same. I just try to keep my methods short enough that they're easily readable.
Wow very impressive! Thanks for sharing.
To format code properly on Reddit: - Have an empty line between code and text. - Indent every line by one tab or four spaces.
Okay, I'm sorry I haven't had enough coffee apparently so I can't keep up with the code. You might start with some renaming to help yourself: \- the variable "Fight" should be called something like "answer" \- variables "fightyes" and "fightno" should be just one boolean variable called "fight" \- make a function that takes the "answer" string and returns a boolean from it, so you don't need to do the string comparisons all over the place.
sorry about that
That course is a gem!
That makes a lot of sense I guess I got use to the Varabals, this all started from just learning what a string was my example was fight and I just kept expanding and as I wanted to add things I added things in and learned more. looks like my next lesson is making a Function :)
I don't understand how creating a diagram for you is going to settle this. Can you not imagine how the changes I described would affect the architecture of the system? Your argument isn't making any sense, and, like /u/filter--, I'm starting to wonder if you're an idiot or just trolling. Either way I'm bored with this.
Are you sure you didn't mean "_hill"?
We've all been there at one point. Keep going and just trying out stuff and learning. Just take a step back now and then, read lots code that others have written, go through examples on the net, and so on.
Just taking a quick look at it, the reason why it always will pass in line 58 is how the Conditional Logical Or works. It will stop evaluating if the left side evaluates to true. Think of it this way, let's say the user input "yes". The first check is to see if input != "Yes". They are not equal so it evaluates to true and fightyes is set to false. The way it is written any value will be evaluated at true because if its "yes" then it won't equal "Yes" if it's "Yes" then it won't equal "yes" if it's "no" or "No" it won't equal "Yes" if it's "qwerty" it won't equal "Yes" so it will always evaluate to true. So the fix is your logic. &amp;#x200B; Here are some other suggestions. Validate input and ask for the user to input a valid response and repeat until they. If you want to keep that string then either use ToLower to not have to worry about case or convert it to a boolean or a custom enum.
how? what does it do?
It will say 'name can be simplified'
My point is that the API is quite old fashioned and unlike more modern generic collections. Obviously it helps a bit with the Enumerable extensions. Then there is the whole business with covariance, which needs to be dynamically checked. Obviously, since List uses an array underneath, it has the same problem. If you were designing the language today I bet you wouldn‚Äôt put them (arrays) in. A language like Swift, for example, does fine without them (their ‚ÄúArray‚Äù is a C# List).
I use this._field. Fight me.
On line 60, you set fightyes to false. Then on line 79, you check to see if fightyes is not equal to true. &amp;#x200B; because fightyes is not equal to true, you will go into the while loop &amp;#x200B; consider this solution Console.Write("Do you want to fight him?"); // read in the user's input string Fight = Console.ReadLine(); &amp;#x200B; &amp;#x200B; &amp;#x200B; // use and operator here. if the input is not equal to "Yes" and it's not equal to "yes" and it's not // equal to "No" and it's not equal to "no", we know their input is bad... Loop over bad input until the user // enters yes or no. while (Fight != "Yes" &amp;&amp; Fight != "yes" &amp;&amp; Fight != "no" &amp;&amp; Fight != "No") { Console.Write("Lets not try to over complecate this your mind is to small\\n Yes or no:"); &amp;#x200B; Fight = Console.ReadLine(); } &amp;#x200B; bool doFight; // if the user answers yes, set doFight to true, because the user want's to fight if (Fight.ToLower() == "yes") { doFight = true; } // the only other possible option is that the user entered no. So we can use and else here instad of an // else if else { doFight = false; } &amp;#x200B; // from now on, we use the doFight variable to check if the user wants to fight. Once this value // is set, you do not need to keep checking the Fight variable if (doFight) &amp;#x200B; { &amp;#x200B; var Hp = 90; &amp;#x200B; Console.WriteLine("You fight him, Swing after swing you two whale on each other until one comes out victorious"); &amp;#x200B; Console.Write("....."); &amp;#x200B; Console.Write("moments later you step out of the bar with a few bruses and scrapes"); &amp;#x200B; Console.Write("Hp: = " + Hp); &amp;#x200B; Console.Write("Wiping the blood from your lip you get on your bike and head out"); &amp;#x200B; } // again, we can use an else here instead of an else if because if they don't want to fight // there is only one other possibility, and that is to not fight else &amp;#x200B; { &amp;#x200B; Console.Write("You Runaway Like a little Baby"); Console.Write("Running out of the bar you quickly jump on your bike to get the fuck out of there"); &amp;#x200B; }
I figure it out!!! as sugestied by ZxDoctor I converted it to a bool The code is now: // this string sets the stage for the fight and stores the user's answer to be used elsewhere. // the bool values here are used in the while loop to repeat the question if it is answered wrong &amp;#x200B; string Answer = Console.ReadLine(); bool fight = false; bool AnswerYes = false; &amp;#x200B; if (Answer == "Yes" || Answer == "yes" || Answer == "no" || Answer == "No") { AnswerYes = true; fight = true; } &amp;#x200B; if (AnswerYes = false) { fight = false; } &amp;#x200B; //these if statements give the user options to chose yes or no each with different text all tying in to the main story again. if (Answer == "Yes" || Answer == "yes") { Hp = 90; Typewriter("You fight him, Swing after swing you two whale on each other until one comes out victorious"); Typewriter("....."); Typewriter("moments later you step out of the bar with a few bruses and scrapes"); Typewriter("Hp: = " + Hp); } else if (Answer == "no" || Answer == "No") { Typewriter("You Runaway Like a little Baby"); } //This while loop will loop the question until the right answer is used. &amp;#x200B; while (fight != true) { &amp;#x200B; &amp;#x200B; Typewriter("Lets not try to over complecate this your mind is to small\\n Yes or no:"); Answer = Console.ReadLine(); if (Answer == "Yes" || Answer == "yes" || Answer == "no" || Answer == "No") { AnswerYes = true; fight = true; }
EF Core is the same regardless of whether you're on Mac, Linux, or Windows.
Right. But is there a course where I can see someone working on a mac?
It won't in a constructor where the private member and the passed object name are the same, which is kind of the point here.
&gt; the reason why it always will pass in line 58 is how the Conditional Logical Or works. Yes. &gt; It will stop evaluating if the left side evaluates to true. No, that‚Äôs not the reason. That‚Äôs just an optimization. Using the ‚Äúcomplete evaluation‚Äù version (single | character) will have the same problem.
Your question confuses me. The code is the same regardless of the platform. What exactly are you experiencing issues with?
Just people using SQL Server Management Studio which isn‚Äôt available for Mac. I have to use Azure Data Studio instead.
Oh, for working with the database itself, without EntityFramework? There are other database providers available too, I use Pomelo for MySQL a lot (I wouldn't recommend the official MySQL implementation, in my experience it's way too buggy). With MySQL rather than MSSQL you're able to use [MySQL Workbench](https://dev.mysql.com/downloads/workbench/) which is identical on all platforms.
Ah ok. And Entity Framework will work in the same way with all database providers? (Sorry I‚Äôm a bit of a noob with this)
&gt; No, that‚Äôs not the reason. That‚Äôs just an optimization. Using the ‚Äúcomplete evaluation‚Äù version (single | character) will have the same problem. That is incorrect. The term is behavior is called "short-circuiting" and is unique to the || conceptional operator. It is stated clearly in the [documentation](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators) and shown in the example. From the [Logical OR operator |](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-or-operator-) &gt;The | operator evaluates both operands even if the left-hand operand evaluates to true, so that the result must be true regardless of the value of the right-hand operand. &gt; &gt; The [conditional logical OR operator ||](https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-or-operator-) also computes the logical OR of its operands, but doesn't evaluate the right-hand operand if the left-hand operand evaluates to true. However, I think you were misunderstood what I meant when I said "how the Conditional Logical Or works" and looking back it's not clear and briefly stated in " So the fix is your logic". What I meant was that the way he wrote it will never fail and always evaluate to tree regardless of input.
Aye. It's essentially a layer of abstraction between the database and your application. You generally don't have to care about the inner workings of the database, but you'll still be able to work with it.
Removed: Rule 4.
Ah ok perfect. Thanks a lot man. You cleared a lot up for me.
I‚Äôve used the a network profiler tool built in to VS for a UWP app: https://devblogs.microsoft.com/visualstudio/introducing-visual-studios-network-tool/
Interesting. Thanks for sharing.
Removed: Rule 4.
I agree, I prefer using `this` _by omission_ because of this and because it's part of the language specification. As common as the underscore idiom is, it's not something that you can assume has any particular meaning if it's not agreed upon beforehand. The meaning of `this` is universally enforced by the language itself.
you're right about that. I'm not sure if I'm doing it all right though. The only way I was able to get it working is if I was doing HTTP, and that was SLLLOOOOWWWW. So, I'm going to have to play around with it to get the latency down as far as possible.
&gt; If you mean that the | operator will act the same as the || operator, then that is incorrect. It acts the same logically, when ignoring potential side effects of the expressions. Specifically, it acts the same in OP‚Äôs code. &gt; However, I think you misunderstood what I meant when I said No, I was just commenting on the specific point where you seem to imply that the ‚Äústops evaluating‚Äù behavior is part of the reason the logic is broken, which it isn‚Äôt.
You might need to add the "screen-fps" option, for example ` media.AddOption("screen-fps=30")`
Unfortunately, I've never been able to use that tool as it doesn't work with legacy http code. I wish there was something just like that but could capture all http traffic from the process you are debugging. They must have fucked up the early http libraries if something like that isn't possible.
Couple suggestions: Return an IEnumerable&lt;string&gt; and yield the tokens individually. Let's the caller decide if he wants the overhead of a list or just one at a time. Have tried keeping the start and end index of a token and extracting it via substring rather than appending chars w/ string builder? Might be a little faster. Or, if you can put a reasonable upper limit on token length, put the chars in a fixed size array of chars and create final token string from it. Could even do a hybrid where you switch to string builder if token becomes longer than the array of chars
Run it like this then: var spares = new SparesClass(); var result = spares.ReplaceLRU(m_iClassGobInt);
Try Fiddler or Charles. Both used widely by professionals. I personally use Fiddler.
I don't know if they edited the article but there's a note at the very bottom. Though it doesn't make sense to put 404 as a "oh yeah, almost forgot" sidenote.
Then it seems you misunderstood me, though no fault of your own as I was unclear. I wanted to let him know about that behavior when using or operators since he said he was new to the language and was chaining a rather long logic (and faulty for his purposes) statement. And although logically they are the same, it's important to know the difference as you can do clever things using short circuiting or the lack thereof with method calls and I believe avoid a unnecessary calculation when used correctly.
Why wouldn't you just use F#? AFAIK that integrates seamlessly into C#
That's like sweeping the trash under the carpet. If you cant see it, it's not a problem.
Right, ok :)
The article that I wrote discusses how functional programming enriches object-oriented programming in C#. Adding functional programming capabilities to an object-oriented language such as C# leads to a lot of benefits in object-oriented design. You can read the article to find out how. Thus, C# is a great programming language!
So, I was able to get it down to about a 1-2ms delay. That's exciting? However, I began to consider the implications of using this... How slow is this going to be cross country? Probably incredibly slow. So, maybe VLC isn't the best route. I know that's me flip-flopping, but without testing, how can you really be sure? So, I'm looking into implementing the [RemoteViewing](https://github.com/qmfrederik/remoteviewing/) API into my project. It utilizes WinForms for the viewer... but I know there are ways to implement WinForm objects into WPF. The one thing that is difficult to do now, is securing the TCP connection required for the VNC listener. I don't believe there are any built-in encryption models.
Some suggestions to extract even more perf: * Take a `ReadOnlySpan` instead of a `string` to make it more generalized. * Rewrite this as an `IEnumerator`-pattern `ref struct`. * Return either a `ReadOnlySpan` or a `Range` from the enumerator. A `Range` because it will allow tokenizing `ReadOnlyMemory` too. Do this without allocating or copying any string data.
I‚Äôm definitely going to take a look into this, thank you!
Sorry but that doesn't really answer my question. I read the article - it implements FP idioms in C# which of course makes sense and I did some light functional programming with C# myself. But my question was if that makes sense in the light of the fact that there is a language like F# that integrates seamlessly and has the FP "built in" and will thus allow for cleaner code. I meant it kinda in the "right tool for the job" direction.
Thanks. Very usefull.
i trained some models in ML.net wizard then predicted sample prices of not existing product with data generated by myself, and was using Custom Vision API to detect cats. Later, with models trained in Custom Vision I connected my IP camera to application found on GitHub to find cats live. I have source codes of my tries.
I didn't see this mentioned, but I have found great value in it: https://exercism.io Given the price, I have gotten great feedback when learning something new.
Okay, what education around machine learning do you have though?
Nice try but I agree with the SV-97. Being able to implement functional constructs in C# does not mean it‚Äôs a great language. The fact that you need to implement them yourself indicates the opposite. F# is superior. Also if you‚Äôre using functional constructs in your Object Oriented language you maybe not be using Object-Oriented design at all but what is called Domain Driven Design
Courser from Microsoft on their blog, and self-education with reading documentations of some libraries.
btnRun_Click isn't attached to your button
butwhy.gif
Literally everyone usually starts with this one and it's considered the best - https://www.coursera.org/learn/machine-learning I would start there, then try translating those learnings to ML.net
subscribed thank.you
This sounds like more of a design problem. you have two DLLs with the same name. Apparently, you don't want to build one of them at all, so why do you have that project?
Thank you so much! I don't know what I'd do without this community!
The best way to debug these problems is by setting "break points". Put one in each function and remove it once you are confident it is being hit.
No, I don't want the .dll to be built to the output folder because the unity project already has the .dll.
Where is the DLL coming from? Shouldn't the project references be managing this?
I'm not sure what you mean? If you build a library that has a dependency, it will output the library's .dll as well as any dependencies it references.
Right, but for some reason, you have the unity projects dll dependency is resolving as something different than your library projects dependency. I think you should try to make those depend on the same thing so that msbuild doesn't try to output 2 files.
I don't think we're speaking about the same thing at all :) anyways, I found the correct property to give my reference in my csproj. Thanks anyways!
I agree just note that Fiddler only captures requests going across your network card. If you‚Äôre making a local network call it won‚Äôt see it.
Thanks for the suggestion! I will start doing that.
The only time you need `this.` is for when it could create ambiguity between local and private members. This is usually in constructors take a reference like `Stream stream` and store `this.stream = stream`. I personally dislike underscores for private members for the aesthetics. Camel casing should be enough to let you know it‚Äôs not publicly exposed.
I could argue the contrary: ‚ÄúCamel-cased private members are perfectly fine, a common idiom, and underscores just litter your code with unnecessary garbage.‚Äù You only need `this` in the handful of cases where local vars have the same name as private members (usually in constructors).
First and foremost, C# functinal features are rudimentary comparing to F#. Furthermore, F# provides almost all object-oriented features of C#. F# has a more flexible syntax than C#. F# provides shorter and more elegant solutions. F# can be accessed from C#. Thus, by combining C# and F#, we can have more elegant and cleaner solutions to different kind of problems. However, there are some cases where F# might not be the best choice: - There are a lot of libraries that aren't going to be comfortable from F# ( Interop). - F# libraries don't ship as part of .NET. Does this answer your question?
The basics haven't changed. If it was a good book in 2013, it is still a good book today.
Thus, bots cannot scan our API correclt, great!
P.S. If we were talking about WebForms, right into the dumpster. ASP.NET... ehhh. ASP.NET Core has changed a bit, but the fundamental concepts are still there. Hard to make a call without seeing the text.
`Note: In some scenario, requested URI is not matching with any API URI., then by default Web API/IIS returns HTTP ‚Äì 404 - with message ‚ÄúHTTP resource was found that matches the request URI‚Äù`
Not really, it seems like you think I meant using only F# - i meant using them in parallel. F# to use functional idioms where they're elegant and C# for the solutions that don't lend themselves well to FP
Is domain Driven Design "using whatever seems to fit the bill best"?
Ah, ok. Yes of course, you can use them in parallel. F# for solving problems by using functional programming and C# for the situations that are not possible or very difficult to solve in F#.
ML.NET isn't a mature ML platform yet and is missing native support for a lot of ML applications. In my opinion, you'll have a much higher difficulty getting started because the ML community is heavily organized around Python. Not only will you be missing out on better frameworks, books, documentation, and how-to blog articles, but also things like Jupyter notebooks. While others have recommended Andrew Ng's Machine Learning course, I would recommend his [Deep Learning](https://www.coursera.org/specializations/deep-learning) specialization instead. There is a mix of programming a variety of neural networks from scratch in Python as well as using Tensorflow. It is a much longer effort than the ML course, but concepts like linear regression and support vector machines (only covered in the ML course) have limited applications. Coursera recently released new Tensorflow-based courses, but I haven't tried them.
You have every right to argue the contrary, but I'd still tell you that you were wasting my fucking time.
Seamless in a sense. You have to create an F# project and then consume that DLL in your C# project. It's not like you can just place them side by side or encapsulate them. At that point if you just need a simple functional programming paradigm, it is much more simple to have C# allow a language feature to enable the paradigm instead of consuming specialized function calls from a separate DLL. At least IMO
I added a new section to the article where I talk about F#: https://www.codeproject.com/Articles/5162828/Functional-Programming-in-Object-Oriented-Programm#fp17
I added a new section to the article where I talk about F# and about using F# and C# in parallel: https://www.codeproject.com/Articles/5162828/Functional-Programming-in-Object-Oriented-Programm#fp17
I've always wondered what VS Blend is for.
'cause it appears that the author doesnt mean to replace OOP by FP, but to enrich OOP with some nice concepts and ideas from FP. There is a big difference between the approaches.
Use it for the language fundamentals. It‚Äôs great.
Webforms a good to learn on. The front end is easy to set up and they can concentrate on the back end coding. Those skill are immediately transferrable to any other dot net platform where you only then need to learn the front end.
Nice üëç
So I‚Äôm wasting your time but you haven‚Äôt wasted anyone‚Äôs by stating your opinion? Certain level of hubris on that one...
I wouldn't recommend investing in it. But if you have access to it for free / throwaway money, there are still useful things in it.
The problem with WebForms is that it is a dead end. You'll never see it in NET Core/5 because MS literally can't figure out how to unwind the poorly designed libraries. (WebForms even references WinForms assemblies.) So spending more than a trivial time learning the WebForms page life cycle, which isn't easy, is like learning to work a manual choke on a car from the 1950s.
I mean you can't really not have them. You wouldn't be able to have lists. An array is just a continuous region of memory. They could hide them if they wanted to. But why hide something that has performance benifits and other use cases. I still use arrays whenever I need a fixed size collection.
I love the term hubris. But what I'm saying is, whilst you have a contrary, it doesn't make much sense - if your team has a guideline that "\_" is a member in class, then there you go.. you don't litter your code with \`this\` everywhere. If your local vars have the same name, then.. well, you avoid that by precluding the prefix.... I don't see what's not to like?
C# is a great language
why not
There are far better ways to achieve that... But if you want to follow this approach, go ahead. It's just not restful anymore.
I‚Äôve known for a few years but never found any good tutorials on how to actually create your own controls
No, I can't imagine how changing from raw SQL to an ORM or back would impact the design of a well-designed system. It changes how the data access is implemented, but it doesn't dictate where in the system that data access happens.
&gt;There are far better ways to achieve that e.g? except rate limiting
Ive always been a fan of Code Complete.
&gt; I mean you can‚Äôt really not have them. You wouldn‚Äôt be able to have lists. Well, a language like Swift manages without them. Of course they need *some* kind of primitive concept of contiguous memory storage, but it can be more primitive and not really user accessible. Swift uses tail-allocation, which means that when it allocates a List object (called Array in Swift, but works like .NET List&lt;T&gt;), it allocated additional memory at the end for element storage. That way they save an indirection. So it‚Äôs certainly possible to not have primitive arrays that visible. As for performance, optimizations can erase almost all performance benefits between List and array, if not all, and for even more performance, something like Span can be used. &gt; I still use arrays whenever I need a fixed size collection. I used to, but I don‚Äôt so much anymore because I don‚Äôt like how they don‚Äôt feel like the rest of the generic collections. I sometimes use `new List&lt;T&gt;(capacity)` instead.
But, you still need to learn how to drive, and all the aspects of driving that you learn can be learned on a 1950's car and even be better to learn on, because of the lack of technological abstraction such as blindspot detection. You don't need to be an expert in Forms, or even carry on beyond an intro book. But as a basis for learning for a new programmer its the best start. If you just straight into asp you not only have c# to learn but Razor, bootstrap, html, css, controllers, etc. With forms you just learn C# and a simple front end.
Is this method for the click of the input box or the OK button? If you would want a different message to be displayed when clicking Cancel you would need to do that in click method for the Cancel button.
It should be something like `InputBoxResult result = Interaction.InputBox(...); ` and checking the result with `if(result.OK) {...} `
Having InputBoxResult result = Interaction.InputBox(...); just gives me errors.
Without knowing what the static method `InputBox` in the `Interaction` class actually returns, no one will be able to give a solid answer. The concept of an "input box" is a left-over from Visual Basic. C# doesn't have anything native that's built in. I assume this `Interaction` class is an attempt to create a similar function in C#, so if it does not return a proper state for knowing whether `OK` or `Cancel` was clicked, you may have to modify that class yourself. I wouldn't be able to say for sure unless I saw the contents of that class. If you look at the `System.Windows.Forms.MessageBox` class and the `Show` method, you'll see it returns a `DialogResult` object, which does identify which button was pressed. Your `InputBox` method should return something similar, then offer a string property containing the text that was entered in the `TextBox`.
Hmmm, I am rather confused. When I click my input box it opens the messagebox as seen above. So from here, I want it to where when I click OK within the messagebox it will display a new message box saying "You hit ok" but if you hit Cancel instead of ok it would say "You hit cancel".
did you replace the dots though
As a free option, maybe. Don't drop any money on it. Invest in newer texts.
I'd go console instead, fuck forms
From my experience it's got it's place for drafts in UX Design you'll need to do a shit ton of refactoring on for final production stuff. That and xaml animations/transforms.
If you're spending money on a textbook, spend it on a pluralsite membership instead
As a sanity check, you can run this query SELECT name FROM sqlite_master WHERE type ='table'
I'm working through 3rd edition right now, chapter 8 using VS 2017. It starts with WPF programs then switches to WinForms in chapter 3. Then back to WPH at chapter 10. If using a version of VS that doesn't use WPF, it has an appendix for doing all the exercises in WinForms. I just really enjoy the style of the book. All other tutorial books feel like a standard reference in comparison with simplistic examples and mini-programs that just accent the current feature of discussion. HF really does build on the previous chapters, to the point where you will be constantly re-using the classes you made before, editing them, and improving them for increasingly complex programs. I only made the mistake of skipping an exercise once. The concept seemed obvious so why build the program? Because then next chapter has me reuse the code in the next program. This gives the book an organic feel that I didn't get with any of the other C# instruction books. Also, the fact that most of the programs have a game element makes them fun and interesting to someone like me. Where most of the instruction books focus on programs that service business needs. Sorry, making a rolodex program isn't fun for me. On the other hand, making a Go Fish game is much more enjoyable. There is a lot of programming happening in this book too. It feels like they add one program to each chapter, but really, each exercise just gets longer each time. My retention is very good. It is easy to visualize what is going on. The, Here's a program, we'll explain how it works later, Concept is also refreshing. Some people like theory before practice. But if someone gives me a theory, I have no experience to apply it or visualize the application. So I can nod my head and all, but I don't really understand. So when HF makes me type out the program first ,then explains it later, now I have a frame of reference to understand the theory. So. HF if you prefer theory after some hands on time. HF if you find the tone and "handwritten note" explanations helpful. HF if you like LOTS of exercises that increase in scope and depth as you progress. HF if you like an instruction book that incorporates, but is not strictly focused on games. With 4th edition coming out, I'd only get HF 3ED on sale. I had been using the 3rd edition pdf, but went to B&amp;N in frustration and paid full price for the book because paging back and forth with a pdf is a major pain and I didn't have time to wait for Amazon to ship the sale priced book. There are the occasional landmines. But when I hit them, I go to the csharp discord and ask for help there. So far, everyone has been very helpful and friendly.
Interesting points here. I always remove this these days and make it an FxCop rule to enforce that upon myself. However, I still use underscores for fields for readability. It's going out of style, but my justification is that it creates a different convention to local variables and public properties so it's easily distinguishable. I guess it's mostly habit though.
Why use old literature, when the whole internet is at your fingers?
That's the other main justification. It's just makes that bit clearer.
FxCop wants you to remove this these days. Microsoft is not behind it.
When you learn from the internet, you typically end up only learning the things that you think you need to know. When you get a book with a ton of information there is a high chance that if you read through it you will learn things you would have never thought of. At least that's how it has worked for me.
I got that for free with Visual‚Äôs dev essentials
Console is totally worse. Pointless tool to learn on. You don't have any real interface, and just a crappy line output. At least with forms you can make an actual program and use OOP, DB's etc.
üëç
Thanks for sharing. Sorry half the comments here are complaints.
Or just continue being useless. Stick with what you know.
üëç
Watch this. I can control your behavior. By simply posting this comment I can make you do exactly what I want. Now dance for me.
üíÉ
Dance, puppet! ü§£ü§£ü§£
A lot has changed in the last 6 years. I'd argue that it wouldn't be worth using the book even if it's free. You'll have to unlearn so many things and you'll be missing out on a lot of improvements. You'll be handicapping yourself when there are far better options out there.
&gt; If you just straight into asp you not only have c# to learn but Razor, bootstrap, html, css, controllers, etc. With forms you just learn C# and a simple front end. Yeah, but that‚Äôs a blessing and a curse. Web Forms is bad in part *because* it teaches the web incompletely. Love it or hate it, if you don‚Äôt understand the basics of HTML and CSS, your website will be horrible. If you really want something dead simple to start with, maybe WinForms is a better choice.
This right here. When I was half-learning WPF, I had no idea there was animation. I didn‚Äôt need it, I mean, I was JUST starting and was worried about function. That WPF 4.0 Unleashed book did something we don‚Äôt seem to do on the Internet: Organized the shit into meaningful realms. Hell, when I started programming 30 years ago, I had a book with chapters of explanation that were organized, with the only difference of the full library/API published in the book. Now, language source code, library/API are available BUT YOU STILL HAVE TO KNOW WHAT YOU ARE LOOKING FOR! Lol
Here's a counter example, just as concrete and so unquestionably proves you wrong: 500 tables across 4 MSSQL instances totaling 20TB of data. An MVC monolith nearing 300k lines of code, not counting html and javascript. A distributed system processing over 1 billion records per day, originally designed for under 1 million. Originally using nHibernate, but designed well so that mitigating bottlenecks was as easy as writing a new implementation of an interface that used Dapper instead. This change did not necessitate any changes to the design of the system, only the implementation detail of the data access was changed. The system design diagram remains unchanged. In fact, using only that artifact it's actually impossible to tell if the system uses an ORM or not because it's not a concern if the system design.
There is nothing about console applications precluding you from using OOP or databases, and I dare say that using those things with no/limited UI is a fantastic way to learn them without distraction and without getting bad habits like mixing your UI library with your application code. The simple truth of it is that a well written console application can *become* an ASP.NET, WinForms, or WPF application with little effort outside of constructing the UI. By contrast, a newbie working with a UI platform will likely create an application that cannot be easily separated from its UI platform, but it will run so they will feel accomplished. Better to learn on the former, then experiment with attaching a UI to some of your existing code. Great way to develop, IMO.
Yes, it's mostly habit and preference. I got it from the default StyleCop ruleset back in the days and reading about using '\_' was a c++ thing that got carried on by the first c# developers and should be throw away. Now microsoft uses '\_' in their code which doesn't match their original guideline so.... everyone sees it as the standard. But really, in most codebases where it's not used, and it's most of them to be fair, I really miss the insight it gives when analyzing code. In your case, imagine what you'd miss if class fields were not prefixed with underscore and then think about what you're missing by not having the same for instance methods and properties. :)
&gt; By contrast, a newbie working with a UI platform will likely create an application that cannot be easily separated from that platform, but it will run so they will feel accomplished. Thats true, but writing the code, and simple classes with their methods can be easily cut and pasted into your application. If that is what you want. Forms just provides a simple way of creating applications that help you learn about C# and gives the student something to feel good about at the same time. It also provides directly transferable C# skills to Xamarin, ASP.net etc. All studnet have to do is master the interface.
Console apps are great to learn on, so few moving parts. Plus the more core stuff I do the more I find myself never leaving the terminal so writing my own cli helpers is critical. For web forms or mvc you're automatically adding html, css and js overhead to any learning experience.
Highly recommend
How does it compare to treehouse‚Äôs C# course and is it suitable for absolute beginners?
I used it to learn. Well worth the money.
I don't know treehouse... But pluralsite has courses for all skill levels
So you recommend webform apps for learning but not console. Do you live in the upside down?
Then you start using F# and everyone says, 'why don't you just use Haskell'
Ah no. I read it wrong. I was talking about WinForms. Not web forms my entire post thread is based on a mistake on my part. But WinForms is better than console.
Underscores is just to tell u that the variable is class' member and not local. Using it is much shorter than this. IMO.
That‚Äôs a great point; although I am a fan of the Internet as a reference source, a book really does have benefits. One of my favourite technical books of all time is / was Professional SQL Server 7.0 Programming (and its successors) by Rob Vieira (Wrox). It‚Äôs a massive tome, but if I had not read it, there would be so many things that I would not have known about SQL and database design. I am by no means an expert, but it served me well. Without that book I would have implemented many ‚Äòhowlers‚Äô. I have also written a technical book (that was ‚Äòmainstream‚Äô published), and a lot of the reviews make comments along the lines of, ‚ÄúIf I had not read this book, I would never have known that it was possible to X, or that I should also consider Y instead of Z‚Äù. Another benefit of a book is that you can read it when not sitting in front of a computer; it‚Äôs easy to get distracted by trying things out immediately and missing some important points in the text. I always try to (and advocate) reading technical books ‚Äòlike a novel‚Äô (i.e. from start to finish), which should be enjoyable with a well-written book. I am constantly disappointed in the lack of effort made (by publishers) in tailoring technical books for ereading; it‚Äôs usually impractical in my experience but, I suspect, there will always be an issue with being unable to quickly bookmark and flip back and forth between pages, at least, until we have Minority-Report style holographic screens that we can virtually browse. By the time that technology is practical, we probably won‚Äôt need technical books anyway; we‚Äôll just have the knowledge implanted (or we won‚Äôt need it, because AI machines will do the work for us; or they will have wiped us out :)
Well, depends on the webforms. If u r in maintenance stage with no plans or time to update the code, then you probably want to keep the webforms books for reference.
True, but I try not to scare the newbies.
Oh, ya. Good point lol
Oh, Win Forms. Yea that's still 100% valid. Faster for making apps than any web technology and preferred over WPF by a surprisingly large number of people.
Why?
I find books to be more accurate and much deeper than online resources. To fill the page counts, they are almost forced to go into detail.
Because there are better options today that cover C# 7.x and .NET Core technologies.
What has actually changed with C# itself? I don't recall anything being removed from idiomatic C# since generic collection classes. Everything else has been additive.
Does a novice book really need to cover ref returns? And if so, what are you going to cut?
[send localhost through fiddler](https://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/MonitorLocalTraffic) [.net config proxy through fiddler](https://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/ConfigureDotNETApp) ( I put this in my web config commented out till I need it - must have fiddler running so don't check it in)
Things like tuples, out variables, and local functions are useful even for novices. There are many features in recent iterations of the language that more-or-less render past patterns obsolete. Do you know anyone who wants my Pro .NET 4 book?
You forgot to answer the question, what are you going to cut?
Why background worker, if you don't mind me asking? BackgroundWorker is a pretty outdated way of running background tasks. It's still in the framework for backwards compatibility with legacy applications, but most code you'll see these days will use TPL instead. If you need to convince a professor to let you use TPL instead, Stephen Clearyhas a pretty in-depth comparison of the two: https://blog.stephencleary.com/2013/05/taskrun-vs-backgroundworker-round-1.html
Why do I need to cut anything?
Because you have a limited page count. Even if it's an eBook, every page needs to be written, edited for grammar, edited for technical issues, typeset, etc. You can't cram more information in without taking something else out.
So the entire tokenizer algorithm is just one 24-line file. It is a very simple piece of code. Very weird.
... What are you _talking_ about? A book can be arbitrarily long. I don't know where you're headed with this. My recommendation is simply to buy a book that has the most modern take possible. I don't want the section on properties to skip over and/or leave out information such as auto-properties and auto property initialization to some future book. That is the perfect time to be learning it: when learning about properties.
Have you tried using emulators from Android studio instead? Had better luck with them oddly enough than VS. Dont have any advice for Ryzen 3 but the x86 ones are the images you want. What issues are you running into?
Are you using .net core or are you trying to build 4.x? 4.x won‚Äôt run on Linux. For core, just make sure you have the sdk installed and run dotnet build in the project folder.
I already responded to your other post, it's broken because of Windows 1903. It works if you enable Hyper-V and the Windows Hypervisor Platform, but only in 1809 or the Insider preview. There isn't a fix and there isn't one coming until the next update.
I used to work in the publishing industry. So believe me when I tell you that there are budgets that determine the permitted page counts.
Well, I have fantastic news. Someone already did the work: https://www.apress.com/us/book/9781484230176
Hmmm.. highly disagree.
I strongly disagree, since there are resources in the internet that provide structured courses on c# and programming as a whole. The skill of research is one of the uttermost importance in the world of software engineering and I see that it is lacking in young engineers exactly because they've never had to research, just learn what was provided to them. (I'm a senior software engineer and team leader - interview junior devs practically on a daily basis)
Company: McKesson Job Title: Senior Cloud Architect. Job posting: [https://www.linkedin.com/jobs/view/1338924306/?lipi=urn%3Ali%3Apage%3Ad\_flagship3\_feed%3Bq6YHhJSQT3e2pUQuXUfcxQ%3D%3D&amp;](https://www.linkedin.com/jobs/view/1338924306/?lipi=urn%3Ali%3Apage%3Ad_flagship3_feed%3Bq6YHhJSQT3e2pUQuXUfcxQ%3D%3D&amp;)
I am studying for the MCSD certification. The study material I am using teaches BackgroundWorker and later moves onto TPL.
Is this an official study guide from Microsoft? I took the exam a few years back and it didn't mention anything about background workers. It's all about async/await now.
Because it‚Äôs not ‚Äúor use *this*‚Äù, you don‚Äôt need the underscore or `this`. The cleanest code is not using either. The only case you absolutely need `this` are the rare disambiguous cases.
No, it's the MCSD certification toolkit by Covaci, O'Brien et al. Do you mind me asking how did you prepare for the certification (which books, guide) ?
.NET Framework is Windows only and has some Windows specific dependencies (like GDI+ or DirectX). For cross-platform you are either looking at .NET Core (which is relatively new) or Mono (which mimics/reimplements most of .NET Framework API). &amp;#x200B; Eventually, all will "merge" into a single framework named ".NET", which first version will be ".NET 5", ETA released in late 2020.
Check out this by Microsoft [Get started with C# and Visual Studio Code](https://docs.microsoft.com/en-us/dotnet/core/tutorials/with-visual-studio-code)
That book and headfirst are for completely different audiences
+1, most practical advice for solving problems.
I took the practice exam a couple times to figure out what skills I fell short on and then got books that covered those specific topics. They usually keep their exams pretty up to date with the latest technologies, so you just want to make sure you're learning modern practices. The practice exam was pretty close to the real exam.
Different styles, maybe, but not different audiences. The book covers the basics (in addition to a bunch of other stuff). Those chapters are for people learning the language.
You don‚Äôt need to create the file before declaring the streamwriter, streamwriter will create the file. I suspect this is the issue. Also as best practice, use ‚Äúusing‚Äù statements to handle the streamwriter. That way you don‚Äôt have to worry about closing and disposing the file. using (Streamwriter sw = new Streamwriter(filepath)) { // Do stuff to file } // after using block closes, file is automatically released
Its more a philosophical argument. You learn about a toolbox. When new tools get added, you can choose to learn about them, alter what you do and how you do it, or keep using your old tools in your original ways. But a new apprentice comes along and wants to skill themselves up with the toolbox. The last thing you would do is give them an old toolbox (up to a point) just because that is what you learned with, because some of the new tools are inherently more suitable at doing certain things than the old tools.
The thing is, very few of the tools are no longer suitable. This isn't like C++ where wide parts of the language are no longer used in modern code.
I'll disagree with those sayings its fine. Yeah much of it might still be quite good but nothing is more frustrating learning than doing everything right , spending hours figuring out whats wrong only to find out there was a change and you were looking at an old way that has been deprecated.
&gt;I'd be more than happy to know what process is supposedly using this file. [Yours](https://docs.microsoft.com/en-us/dotnet/api/system.io.file.create?view=netframework-4.8#System_IO_File_Create_System_String_).
Any good recommendations? I'm not completely newbie, but it would be nice to have something to read on a bus. I got Head First at first, someone recommended it here, but then I read more about people's feedback on it and got it de-recommended.
If you already have a book, you're fine to continue learning on it. It's probably adequate. If you want to invest in a good book, this is _my_ preference: https://www.apress.com/us/book/9781484230176
I don't think this is fair. There are a lot of consise courses on internet, like entire OSSU etc. I mean same thing can be said about books, they prioritize what author thinks is important and one book will never be enough.
I use JetBrains Rider for C# on Linux. It is proprietary unfortunately (free for students), but probably the most powerful cross-platform .NET IDE.
Interesting article, am happy to see to my hopes/wishes for .NET being a realized in the foreseeable future. My guess is this will also obsolete the need for targeting .NET Standard and all this clunky framework targeting mess that exists currently.
You need a gateway (for example Twilio) or setup a gateway yourself with a phone connected to your pc. .net is just a programming language and there is no default framework feature to make phone calls
This is neat. Thanks for posting it.
I would say you're thinking about this a bit old school. a graphical UI is nice, but the year is 2019 and as such what people actually use are web applications. why install an application on your computer when you can access it anywhere in the world via a web browser? on top of that, if you got a working web application you can probably reuse the backend endpoints (console application!) for something like a mobile application. also keep in mind that seeing as we're in 2019 Docker is a huge thing, so you're stuffing your Docker images with C# console applications as well. building standalone desktop applications is not really the way to go anymore, like it or not.
Wow.. that's sad... Hopefully they fix till winter when I'll get mine
That‚Äôs the thing you learn when you have to.
CreateFile returns a stream. You can then use the stream as a parameter when creating the stream writer. Alternatively, stream writer can accept the file name and create the stream internally to save you some lines of code. You used both ways, so the stream created by CreateFile was still open by the time you tried to create the stream writer, holding the file. I hope you see another important takeaway: You should always close your streams. Best way is not to explicitly use close(), but to put them in a using block. This way they will be closed even in case of exceptions thrown.
Doesn't run on the CLR afaik so naah
But it still wont be able to run .Net framework on linux
Actually I totally agree with you. But as a learner forms is a no fuss way of learning the C# language itself. Then you are able to use it in any framework you like. You may never use forms again. But you have a good basis for writing back end code wherever you use it.
Of course the actual Microsoft .NET Framework itself is Windows only, it would need to run under a different runtime, such as .NET Core or Mono until the release of .NET 5 next year. I took OP's question to mean they were searching for a full .NET IDE with debugger, etc, not just a basic text editor like Visual Studio Code without any extended features.
I second the approach of using an api gateway such as Twilio. However if you're feeling adventurous/brave/foolhardy, andif you have a phone line, you could get hold of a USB modem and there will be ways buried in the system hardware abstractions in the .NET Framework to allow you to send it AT commands to dial a number. What you do once it's connected will be up to you...
I dont disagree with you, I have the book myself and I still think its great. But rather than recommend it nowadays I would want to dig through current resources first. The OP never identified their existing coding skill level, so its hard to say if its a good idea to recommend and older book. If anything the Head First series is much more about a style of teaching than the thing it teaches about. I like it, but some people loath the approach with a passion and get little from it.
If you write a console app, you have to learn 1) how to output stuff, 2) how to get input from the keyboard. That's it. There's a lot more to get wrong in Forms - as a beginner, you have to rely on a relatively complex template, and when things don't work, it's a lot harder to know where the problem is.
It does yeah public class SparesClass : ISpares, Spares
I've tried that. Same result
It‚Äôs kind of sad that Windows still can‚Äôt provide this information as part of the error.
Ok, well you're using the library wrong then but I don't know the library so I can't assist.
Yeeeeeeeeeeessssssssssssss!!!!!!!!
I have to disagree on the "cleanest code is not using either". In a team, where there is an agreement that members are prefixed with `_`, then looking at any method you instantly know which are member variables, and which are not. Yes, `this` achieves the same thing, but the code looks *much* cleaner with `_`. I wonder if we may have to disagree on this one? :)
Thanks for a good but sad answer ! Here i thought the amd would be a good programming choice ... üßô‚Äç‚ôÇÔ∏è
&gt; I'd love to hear your thoughts and critique. It causes massive amounts of garbage. Every time you want to validate something you create a new validator, you configure it again, and wrap a closure again.
On the contrary, [.NET Standard](https://docs.microsoft.com/en-us/dotnet/standard/net-standard) was created to alleviate the mess, and some other stuff might become obsolete. As I see it, you should always target .NET standard, if possible, to allow for maximum portability and compatibility. Only if something you need isn't included in any suitable .NET Standard version, then you have to target specific implementations (.NET Framework, .NET Core, Mono, etc)
Actually you don't need to create a new instance for each validation the validator can be class level, or even a 'public static', its just that I was trying to create self-contained examples. You point is taken though, the examples may come across as confusing or even be copy-pasted and used as is. I'll update. Regarding FluentValidator, not aware of it, I'll check
Check out [FileSystemEventArgs.FullPath Property](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesystemeventargs.fullpath?view=netframework-4.8)
If I am a complete beginner, should I still skip background workers and other outdated stuff? I know the basics of programming, but am a beginner to C#
True, my reasoning was that with a new .NET Core that encompasses all the functionality of .NET Framework, which will inevitably result in its demise, the need for .NET Standard is drastically diminished. Mono still is a bit of wildcard in all this, and would be the only continued need for .NET Standard, we will have to see how it survives against .NET 5. It is difficult to predict with Xamarin, or if it to will migrate to the new .NET Core/5. My feeling is that eventually Mono will begin to become obsolete, especially with the close ties between Microsoft and Xamarin. Once Microsoft has their own .NET implementation that is complete (i.e. match/exceed .NET Framework) and cross-platform, they are going to have a much larger backing than Mono. I doubt the shift will be immediate, but my spidey-sense tells me that .NET Standard is merely a stepping stone to ease the transition between .NET Core and .NET Framework, and less about Mono. .NET Core was never needed if all you wanted to do was create a cross-platform target, yet all their support is behind it. This is all conjecture on my part, obviously, but seems like a probable outcome, though I do believe it will be a slow shift over years, not sudden and immediate. I am sure that Microsoft would love to have the market cornered on their .NET technology across all platforms.
I believe Microsoft said a fix is in the insiders preview so it is coming. It is annoying though that the fix isn't widely available yet
&gt; Actually you don't need to create a new instance for each validation the validator can be class level, or even a 'public static', its just that I was trying to create self-contained examples. Sure, but you still need to configure it again and again with the `AddFailureCondition` call, and every time wrap a closure. That alone creates garbage. And avoiding that is what would make storing the validator worth it. I doubt the constructor itself weights anything.
Any Reason, why you don't validate using javascript on the client side?
You already, use the event, you just need to get the filepath from the FileSystemEvenArgs ;) FileSystemEventArgs has an FullPath property :) [https://docs.microsoft.com/en-us/dotnet/api/system.io.filesystemeventargs?view=netframework-4.8](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesystemeventargs?view=netframework-4.8)
Well not really, that would require a lot of interrogation. Windows does indeed know what holds a file handle but a simple error handler in a file open routine can‚Äôt be expected to fetch that information.
No, but an optional parameter asking Windows to fetch it would be very useful, especially in GUI situations. Getting such a non-actionable error as an end user isn‚Äôt great.
You didn‚Äôt read what I said. You‚Äôre not asking Windows to open a file. You‚Äôre asking that library to use a method to open a file and return a handle. It‚Äôs a lightweight object that doesn‚Äôt have the tools at its disposal to fetch that information.
&gt;You‚Äôre not asking Windows to open a file. You‚Äôre asking that library to use a method to open a file and return a handle. In other words: asking Windows to open a file. &gt;It‚Äôs a lightweight object that doesn‚Äôt have the tools at its disposal to fetch that information. That doesn't matter. `OpenFile` could have an `ExtendedErrorReporting` flag, or there could be a separate `GetExtendedFileOpenErrorInfo` method. I don't know or care if such an API already exists, because even the people at Microsoft who write File Explorer or Excel don't use it.
Ahhh, right, I think I see what you mean. Not really an expert but from what I can see from a bit of Googling is that you're saying `AddFailureCondition` grabs memory that's going to remain held until whatever object was captured in the closure is freed elsewhere in the program. &amp;#x200B; Ok, yeah, this is probably a bit of a problem, thanks for pointing it out, really appreciate it. Let me see if I can figure out how to fix this.
A few points from a quick code review: - IncorrectDataException: I think something like "FailedValidationException" would sound better. You're not using the term "Incorrect" anywhere else, and the "Data" is an implementation detail as well. - IncorrectDataException: You're not implementing the serialization constructor that exceptions should have. - IncorrectDataException, line 24: Why is `Errors` mutable? - IncorrectDataException, line 26: Why are you overriding `Message`? Now it's not possible to retrieve the message itself. - IncorrectDataException, line 28: When you make `Errors` immutable, then you could store the string instead of calculating it on every invocation. - IncorrectDataException, line 28: `string` is an immutable class in C#. Whenever you concatenate strings you create a new one. What you do here is **very** imperformant. Instead use a `StringBuilder`. - IncorrectDataException, line 30: `Errors` can never be `null`. The check is useless. - IncorrectDataException, line 32: Why special and different behavior when `Errors` is empty? How can that even be the case, if the type is explicitly about validation errors? - IncorrectDataException, line 37: I absolutely don't see the purpose of the `ForEvery` extension method. A simple for loop will be much easier to grasp and won't require an anonymous method. - IncorrectDataException: IMO it makes sense to pass the errors to the constructor and have it completely immutable. Validate the presence of at least one error there. - ListExtensions, line 11: You want to check if at least one element matches the condition, for that it would be enough to use `Any()` instead of `Count()`. You're always iterating the entire list, even when you know the result already. Using `Count()` would only make sense if you assume that `condition` has side-effects, which would really bad in itself. - Error, line 5: Why is this mutable? Should the message of an error change once it's created? Same for all other types. - DataValidator, line 48: **Do not force tasks to run synchronously!** You risk creating deadlocks this way. Either go completely async, or provide a sync &amp; async version. General side-notes: - You have a lot of undocumented code (XMLDoc). - Make types `sealed` when there's no purpose in deriving from it (e.g. the `IncorrectDataException` class). - You have four namespaces for 6 types. That seems excessive. - Why do you target .NET Core? .NET Standard should work as well. - **You do not have a license.** This means your code is proprietary and can't be used by anyone.
&gt; Not really an expert but from what I can see from a bit of Googling is that you're saying AddFailureCondition grabs memory that's going to remain held until whatever object was captured in the closure is freed elsewhere in the program. Look at this example: https://sharplab.io/#v2:D4AQTAjAsAUCDMACciDCsDetE+UkALIgLIAUAlNrljLnYgG4CGATogM4AubAvIgEQAJAKYAbUQHt+Abir1EAEQkBlTgFcAZhtIVEPAHzIIATlJcW5crNq4AvnMQOEyIktWbtICGEQBjJuIARky+ANaUNjgYiPYwtkA== A class is generated by the compiler and a new instance will be created whenever `M()` is called, which will store the reference to `str`. &gt; Ok, yeah, this is probably a bit of a problem, thanks for pointing it out, really appreciate it. Let me see if I can figure out how to fix this. Instead of having a `Func&lt;bool&gt;` have a `Func&lt;T, bool&gt;` and don't wrap any closures.
Interesting thought
I use nox as emulator for android development. It way faster than slow as fuck standart android sdk emu. And its no need shintel haxm.
Hm alright , i will look into that thanks ! üßô‚Äç‚ôÇÔ∏è
&gt; You don‚Äôt need to create the file before declaring the streamwriter, Or rather: You *must not* create the file, throw away the object as garbage and then open the file for writing right after, using a StreamWriter.
Just a side note, if you use SQL Queries in Code, try doing them parameterized, to avoid SQL Injections. &amp;#x200B; [https://stackoverflow.com/questions/7505808/why-do-we-always-prefer-using-parameters-in-sql-statements](https://stackoverflow.com/questions/7505808/why-do-we-always-prefer-using-parameters-in-sql-statements)
You could use [FileSystemWatcher](https://docs.microsoft.com/en-us/dotnet/api/system.io.filesystemwatcher?view=netframework-4.8). With that you know exactly what happens in a given directory.
This is not the answer you are looking for, but fuck the emulator. If you have an old phone laying around, use that for testing. Then get [scrcpy](https://github.com/Genymobile/scrcpy/releases) 1.9 added a cool feature: &gt; It is possible to turn the device screen off while mirroring on start with a command-line option: &gt; scrcpy --turn-screen-off
Postman
Since you are on linux and .net 4 you might try Mono https://www.mono-project.com/
Try to add validate attributes to " public string Name { get; set; } ". For example `[Required(ErrorMessage ="Name ...")]` `[StringLength(255, MinimumLength=1, ErrorMessage = "Name length...")]`
He **is** using the `FileSystemWatcher` already.
C# In Depth ADP.NET Core in Action Both are relatively new. If you want to deep dive into C#, C# In Depth is great.
use window for c# not linux
Windows sucks balls. Been on Linux for 10 years
I'd be interested in seeing benchmarking comparisons for the different methods of pipelining you propose. Should be pretty trivial to do using Benchmarking.NET and would be a good addition to your articles. Also, real-world pipelines also often involve asynchronous processing in the steps - I'd say one of your requirements shouldn't just be that the pipeline can handle lambda steps, but it can handle synchronous and non-synchronous steps.
Something to try tomorow. Thank you
Removed: Rule 4.
Thanks alot , i will check that out ! Any speciall settings needed ? ü§î
Wow! Looks like there is quite a bit I need to correct. Really, thanks for taking the time to look review my code and all the feedback. Some of that stuff I'll need to read up on, but a I'll definitely work on fixing all of it. &amp;#x200B; If it is not too much of hassle for you, can I reach out to you, maybe for another last look once I've tidied the library up?
Thanks!
Totally agree on the benchmarking. I'll finish the series with a full-out comparison. The asynchronous processing probably makes sense for async I/O calls... I'll think about it a bit and try to add it as well. Thanks for the feedback!
nah, i don't use anything special other then this: scrcpy -s &lt;device serial number&gt; --turn-screen-off
You could set up a build pipeline on azure devops that uses a windows build agent then download the resulting artifact.
Easy there buddy, you're not on r/trashtalk. You prefer Linux, good for you, no need to act like a spoiled brat.
No worries! I also had to solve the same problems you talk about (pipelines faulting on exceptions etc), and did that the following way: https://gist.github.com/jonorogers/dae68c7984aeb7a895395d9c4f90c7fb
Sry m8. Didn't mean to come across like that. Srslyvhave u read T&amp;C's?
Thanks for suggesting that. Definitely something to consider
A FC Barcelona themed Discord bot for a relatively big Discord server about the same thing. It has live match scores, scheduled matches, live LaLiga table, top scorers, stat charts and should have more stuff later.
It does and they do. Recent builds (don't know how recent, I'm thinking since 1903) will show you which process is using a file. I was pleasantly surprised when I tried deleting a csv that I had open in Excel and windows told me why it couldn't be deleted.
F#. That is all.
Nice!
Refer to this [ASP.NET SQL CONNECTION](https://www.c-sharpcorner.com/article/establishing-database-connection-between-mssql-and-asp-net2/) Its really easy for beginners explaining how to establish the connection.
It's crazy that someone who doesn't know a thing about programming in c# is trying to code it in Linux , it's been only possible after introduction of .net core you can officially program in c# using Linux, C# is made for Microsoft platform.
Thanks a lot !
This question pops up in every single thread about FP in C# and the same answers happen every time so here's a list: * Sometimes you're maintaining a large legacy project and it's safer to modernize the C# than try introducing new libraries as dependencies. * Sometimes the scope of the things that F# would do better are so small they don't warrant the additional complexity of a new project. * It's easier to learn new ways to use C# than to learn and apply a new language to your work. The costs of "I'll try F# this time!" and failing are pretty high. * Sometimes management doesn't buy in. Whether you think those managers are bad doesn't change whether they are the manager of the person you're berating. * 101 other answers that involve contexts that aren't the one I'm in thus I don't understand it well enough to explain, something that tends to escape the people who create the next bullet. * F# devs, in this context, come off as at best dogmatic and at worst jerks. We all know F# is made for FP and thus better at it. We also know OO can be enhanced by some of FP's ideas. Most people are content to live with that compromise if 90%+ of their work is best served by C#. * That this "simple question" always results in several long reply chains suggests it's asked in bad faith. It's an invitation to a never-ending thread of citations vs. a person who has no intentions of ever changing their own mind. I'd rather finish a C# project than occupy the time discussing how much faster I'd be finishing if it were F#.
The readme doesn't give any hint about what this "capsulation" actually is, but as far as I can tell from the source it's just an incredibly obtuse and inefficient way of adding a prefix and suffix to a byte array? I don't get what this has to do with preventing sniffing, it's *not even* obfuscation.
Truth
You don't even need to benchmark in some cases. Back in the early days of TPL, before Dataflow was a thing, I created a pipeline with long-running tasks. Each task was a step in the process much like you have here. With 6 steps, my processing time went from (6 x n) to (n + 5), when using an 8 core machine. So for 1,000 items, instead of taking 6000 units of time, it was only \~1005. The overall speed was limited by the slowest step. That was a 6 fold increase by using a pipeline, and I could still process my steps in order and my items in order which is something that most discussions about parallelism fail to address.
Isn't it stuck at 4.2 something? With SDK emulator you can test on various Android versions.
Sorry, didn't mean no harm and didn't want to trigger you. I don't use F# myself, the same way I don't use C#. I don't like either of them very much.
Monodevelop works perfectly on almost every single distro for editing, debugging and building .net solutions.
&gt; As it is, C# doesn‚Äôt provide an easy way to create immutable types Well it does, you just ensure it's immutable. This library seems to hide a whole bunch of functionality within a black-box, instead of well - making your classes immutable. Additionally, of all the class types that I see that need to be immutable, records really aren't. Honestly, I have no idea what problem this is trying to solve.
Nice. I also want to test the various pipeline implementations against each other. I suspect TPL Dataflow will be faster than BlockingCollection. And probably System.Threading.Channels will be faster than both.
Without either, the camel casing of a variable means one of two things: it‚Äôs a local or a private member. Clean code means your functions should be small and able to be read in their entirety without scrolling. So you should be able to tell quite quickly what‚Äôs local or not. If anything, needing to use underscores is possibly a code smell because you *need* something to indicate private vs. local scope. When your functions (and their args) are short, you will rarely ever run into a problem. A lot of it comes down to naming things better and making your functions more concise. If you have 50+ line functions then maybe that‚Äôs the true problem instead of ‚ÄúI can‚Äôt figure out what is what because lack of underscores.‚Äù And `this` should be used **only** when absolutely necessary for the compiler.
The point is you don‚Äôt need either! Write short and concise functions (extract reusable code, refactor into composition) and you easily can tell what‚Äôs private vs. local by looking.
If I don't want anyone to sniff my packages, then I'd use SSH. "Randomly" re-ordering byte sections does not increase security.
I would suggest C# In A Nutshell. I consider it the definitive reference for people who already know a bit of programming. https://www.amazon.com/C-7-0-Nutshell-Definitive-Reference/dp/1491987650
&gt; Well it does, you just ensure it's immutable. But no easy way to create record types. :-)
There's this thing coming, apparently - [https://blog.cdemi.io/whats-coming-in-c-8-0-records/](https://blog.cdemi.io/whats-coming-in-c-8-0-records/) . I'm guessing JSON/XML parsers will have to update themselves to handle them (given they only have a get property) , but maybe I'm being thick (entirely probable), I'm still trying to understand what these "record" types are trying to solve. Is there some problem with mutable records? Is there a need to copy/copy/copy if we modify them in any way? What design pattern are we violating? &amp;#x200B; Not wanting to start a flame-war, it's just not readily apparent to me :)
This is the reason I'm currently in a pickle. We're using an external API, and it does this. Doesn't return 404 for not found, returns 200 with empty response... Basically created a response handler that throws its own HttpException with a 404 status code, so all the legacy logic can still apply. Pain in the butt tho
When your event fires, it passes information to your event handler about the file that was created. You‚Äôre already displaying ‚Äúe.Name‚Äù inside of your handler; why don‚Äôt you look to see what other information is available on ‚Äúe,‚Äù and see if the file path is a part of that information? Then when your handler is called, you would capture the path to the file there and use that path as an argument to any File API you need to call.
Ah, that tells me another bullet belongs: * This type of question, asked in bad faith from no position of actual interest, is strongly correlated with the type of person who says "Sorry I triggered you."
Also, ‚ÄúConvertToString‚Äù? Using what encoding?
Yeah, if you could kindly go fuck yourself, that'd be great
&gt; Is there some problem with mutable records? In general: Yes, but it depends on who you ask. Opinions differ. If your class is mutable, it means that the object can be modified from various places across your code base. And what **can** be done, **will** usually be done. This increases the complexity of your code, if you want to be on the safe side. You have a mutable `string` property? Better check for `null` each time you access, because theoretically it could be set to `null` *somewhere where you have the reference*. Except if you add custom setter to prevent this, of course. With immutable objects you can be sure: Once you got it, it won't change anymore. That means validation occurs once upon creation, and you can be sure that the state won't change. **Nowhere** in your code you can change this object, it's not possible to suddenly have unexpected values. It decreases the cognitive overhead massively and improves understandability of the data flow.
Ah, see that's the kind of answer I was looking for (as opposed to just random downvotes). And it makes complete sense. It reminds me of RAII in C++, if you've got a fully constructed object, you're good to go. If you don't, you don't. So this ostensibly says, if you complete construction, all validation has been completed. &amp;#x200B; I guess also it prevents you having to validate every set property also, as the ctor will do that for you and you only need to validate once.
&gt; if you complete construction, all validation has been completed. Depending on how you structure your code it also means whenever you have an object **it is valid**. You can never have an object with invalid state. Just have to prevent construction without successful validation. If you have the need to incrementally build an object you can use a mutable version or the builder pattern.
 T1 = T2; But it doesn't has to be a subtype. This also checks for implicit casts.
You may need some sort of ticket system. You start a request and return a some randomly generated ID (a "ticket id"). Run the request in a background task (make sure it is associated with the ticket). Person who made the request can run a ***different*** API method to check the status of the ticket. If it isn't done, return that information. If it is done, then return the actual results. Once data for the ticket is fully resolved that ticket has been claimed and shouldn't be used again (future requests would return "ticket does not exist" or something)
I am not sure why I didn't think to update my binding statement on my InsertSurvey function. I updated that and the helper fields on the view and this worked. Thank you so much
T1 is assignableFrom T2 means t1 = t2 is valid
Also notable: immutable types are inherently safer for some kinds of parallel/multi-threaded processing. Immutable types can't be changed by any thread. So if you have a type that represents a phone's last 10 GPS readings, and you need to do something that'll take a few seconds with it, you're free to do that calculation if your type is immutable. However, if you have a mutable type, you might have to make sure you use synchronization constructs to ensure it doesn't change while you're doing your calculation. So if you have a certain type of program architecture, you'll want to commit to immutable data types up-front. C# has zero syntax sugar for this, the language seems more built for easing you into mutable types.
For c# on linux you'll need to use .net core .net core out of the box is good for Console and web applications. You will need an additional library in order to create GUI applications in .net core
It's in the name. If you have a variable of type `T1`, can you assign it a value of type `T2`? `object foo = "123"` is valid, `string foo = new object()` is not.
Namespaces are just a way of organising code. There's nothing stopping you from putting everything in one namespace. It allows you to group similar classes and limit what's available in intellisense.
Y'all got it right. It's an embedded, object-oriented, database management system. The application defines the structure of the database (classes, indexes, etc), by decorating C# class definitions with certain attributes that Perst discovers through reflection to build the database dictionary. It'd be pretty difficult to reverse engineer. Have you tried to contact the application's author? If they used Perst under the GPL license, then they are required to also release their source code if they 'distributed' the application (which is a reasonable assumption if you've got it and you're not the author of it). If they purchased a commercial license from us, then there's no such obligation, but they might be willing to help. &amp;#x200B; Contact us ([inf](mailto:info@mcobject.com)o at mcobject dot com) if you think we can be of assistance.
Maybe look at something like teamcity to do your builds. I believe it's free for the first 100 build configurations.
Sorry. I'm not asking about what is the purpose of having namespaces, but about what is desirable in its implementation.
Nope. I literally stuck a post-it note on my monitor a few years ago with `parent.IsAssignableTo(child)` until it got stuck in my head.
... or what 'TDetails' means in the example of `Person&lt;TDetails&gt;`. It's not used in the code, it's just passed along.
You already have the class (you have to decorate it) so what's the benefit of this? If anything, I'd expect it to generate *behavior* on an immutable class. Like: // you write this public partial class Person { protected Person() {} public string Name {get; private set;} public int Id {get; private set;} } // generated public partial class Person { public Person(string name, int id) { this.Name = name; this.Id = id; } // other behavior }
I did not check out his tool, but when he announces it as a "record type generator", then yeah, I'd expect to have the default record functionality implemented as well (tostring, gethashcode, equality, with-methods).
If you don't need or care to learn anything new that's happened with the language in the last 6 years then read it. Now when you look for a job, you can say "My knowledge of C# is current up to 6 years ago!" and they'll probably hire you on the spot!
What do you need from XCB?
I‚Äôd say your plan is very solid, I‚Äôm in a similar boat to you that I‚Äôd love to do games development but it‚Äôs very unlikely given how that part of software development is.
[https://youtu.be/njiypgvl\_Bg](https://youtu.be/njiypgvl_Bg)
The book is about fundamentals and C# fundamentals haven‚Äôt changed at all you arrogant prick
That isn't true at all. Vscode is great but is missing a lot of features that make managing large projects much easier.
You don't have the full class, only the readonly properties. From the link: - Constructor that has a parameter for every record entry, and assigns those parameters to corresponding auto-properties. - With mutators which take single record entry parameter and return new record instance with all values of record entries taken from current instance, except the parameter one which is changed. - Update method which essentially wraps constructor. - Builder nested class which has read-write properties same as record type and a ToImmutable method which returns a new record instance with builder‚Äôs properties copied. - ToBuilder method which creates a builder with record‚Äôs properties copied. Deconstruct method which enables deconstruction of record into a list of variables like tuples do since C# 7.0 (ValueTuple). - Validate partial method called from constructor after all properties are assigned. You may (but don‚Äôt have to) implement it - this would be the place to check for null arguments or similar.
Also, you can just make read-only structs?
Come on, it is only an example of how you can use a generic type as a property and it is added to the ctor automatically.
I‚Äôve been in a desktop engineering role for the last decade or so and am currently doing almost exactly everything you are doing in the hope of moving into some kind of development role. I‚Äôm really loving c# and everything it‚Äôs used in. (Pretty much everything you listed). I totally agree with the game development part being fun but highly unlikely to pan out professionally. Web based .net technologies seem to be very popular and I think thats where I want to go as well. So, What I‚Äôve been doing is learning and practicing like crazy with the goal of doing and learning enough so that I can add enough programming related items in to my resume to eventually get a job doing it. I‚Äôm also trying to be careful to not get stuck in perpetual ‚Äúlearning mode‚Äù where I‚Äôm doing nothing but reading and watching tutorials. The key is have a goal, try to create something and research what you need to get it done.
Wow, get a sense of humor man.
Why do you want read only structs for everything?
Unless you're comparing multiple times it's quicker just to compare every byte.
Reading the file is the expansive part. And calculating the checksum is an extra cost. You're better off just checking every byte or a group of bytes.
Plenty of people use rider for c# but in my relatively worthless opinion, visual studio is far and away the best c# experience.
You can just run the docker executable with the right parameters. Same as any other application.
I'm not sure what you mean. using System.IO; Is the equivalent of import System.IO.*; // if Java had System.IO namespace, naturally. And you can alias a single class (or namespace), so using Regex = System.Text.RegularExpressions.Regex; Is equivalent to import System.Text.RegularExpressions.Regex;
I don't? Where did I mention using them for everything?
Wanted to make a linux wm with c#
NAudio is your best bet. Look it up, you'll probably fairly easy guides on how to play mp3s.
.NET, C# and Visual Studio are all Microsoft creations, what do you think?
I looked it up and am just more confused now.
Reading file isn't that expensive, neither is checksum calculation. Comparison is most expensive (I could be wrong thought, it's just how it sounds logically).
What platform?
I feel like the main problem is where you say the game uses .NET 4 for its mods/add-ons. Right now there are 3 somewhat compatible but not 100% compatible .NET platforms. The parts they agree on are called ".NET Standard", and you can compile DLLs to that to make something cross-platform. But if something wants a platform-specific DLL there might be issues, not sure. Here's the three platforms: * **.NET Framework** is Windows-only and the oldest implementation of a .NET platform. You can't compile a DLL to target it on anything but Windows. * **Mono** is a non-Microsoft and cross-platform implementation that is the next-oldest. It works on Linux, Mac, and Windows, and has toolchains for each. * **.NET Core** is the "Extinguish" phase of Microsoft's relationship with Mono. It is cross-platform and has toolchains on Linux, Mac, and Windows. Since you're trying to use `dotnet` to build, you're using .NET Core. "a load of errors about there not being a project" isn't enough for us to diagnose from afar. If you could post the actual errors, that'd probably give some insight into what's happening. But if you know you're using projects that were meant to target .NET 4.x, that is probably the problem: since that's not .NET Core the the .NET Core tools won't build it.
Just remember you can only go up the hierarchy.
I think that intellij created a great IDE. Visual Studio? when I used it back in the day like 7 years ago, it was crap. What is your experience?
database integration is better in vs
you are saying that read only structs can be used instead records. Records are inmutable classes, not structs.
Such as? It has every feature I use and some that vs doesn't. I'll need more info because for my workflow vs code is actually easier. Only one project it sucks but thats because there's some kind of bug where it won't let me debug one of my projects at all. On all platforms
I don't know if you are kidding (or trolling?) but since Visual Studio 2010 we have several new releases, including VS 2015, 2017 and 2019. Don't you think that Intellisense changed since VS 2010?
windows
something like this (pseudocode)? button.Enabled = table.Rows.Any() or button.Enabled = table.Rows.Length &gt; 0
So how would this look if it is an href with button class?
Well, it sounds like you should probably understand how to make one natively (C/C++) in order to know all the pieces to make one in C#.
Agreed. if (dictionary.TryGetValue(key, out var action)) action?.Invoke();
\_ = dataRows == 0 ? button1.Enabled = true : button1.Enabled = false; &amp;#x200B; The initial \_ is a throw-away operator, meaning you don't care about the return value so no need to assign it to anything.
I can't tell off the top of my head, what does your C# code look like at the moment? Like do you have something you tried and didn't work? (What you said is html and not C#? I guess your html element is referenced in your C# code somehow)
To me gamedevelopment was a great way to learn about best practices: Project Structure, File IO, Performant Arithmetics, Vectorization, Cross Device Development (Android is a big thing here), Marshalling (Unity got me into NDK development), Web APIs depending on how far you want to go. It just offers a huge spectrum of aspects, each being a key part of it. Learning how to structure your Project, split it's controllers (World, UI and Backend) into interacting parts and while still keeping track of all of it is an important skill in software development. No matter where you end up, sooner or later you will work on a big chunk of code and need to be able to maintain it yourself, maybe even documenting it. That's just the way I'd do it. Games are (mostly) fun no matter what. You might get more invested feedback as they're simply more entertaining than the average web app. For my part I'd strongly advise you to keep Gamedev as a hobby.
https://github.com/grantwatsondoc/tester And the particular view is Index.cshtml
I guess my question would be how would this look set up with an href with a btn class?
That's what I hope to do. I have some time at work each day where I will learn programming, and I will do games dev at home
Sorry ,I have to give up, I don't see any C# there. (I'm past my bedtime so it could be just that)
State agency. What's really disgusting is they will outsource a project for 10-100 million, but we never see any budget for our dev maintenance team and we are expected to keep it running. The quality of vendors has always been abysmal (cheapest bid). Due to funding sources, we can't use any of that money to build our own in-house team.
Okay you win, that was pretty funny. Can't say I was expecting it.
Wow, you're not kidding! I was thinking there would be something a little fresher than [https://www.pluralsight.com/courses/audio-programming-naudio](https://www.pluralsight.com/courses/audio-programming-naudio) which is where I learned it. Depending on your comfort with C#, these snippets [https://github.com/naudio/NAudio/blob/master/Docs/PlayAudioFromUrl.md](https://github.com/naudio/NAudio/blob/master/Docs/PlayAudioFromUrl.md) [https://github.com/naudio/NAudio/blob/master/Docs/PlayAudioFileConsoleApp.md](https://github.com/naudio/NAudio/blob/master/Docs/PlayAudioFileConsoleApp.md) seem like a decent start if you want to just open / play a file, other than that you can pull down the source code and poke around the demos ([https://github.com/naudio/NAudio/tree/master/NAudioDemo](https://github.com/naudio/NAudio/tree/master/NAudioDemo)).
State agency will not pay for VMs, we already asked for that so we didn't have to completely re-setup every time a person leaves and a new person comes in. The code is at the point where you can't fix anything without breaking something else - so we are at that point of starting over. It no longer meets business needs.
&gt; Records, at least in F#, are inmutable classes, not structs. Unless you mark them as [&lt;Struct&gt;], in which case they *are* structs.
It's government. Ops is under different management and we can't force anyone out. They don't really work with us.
You couldn't do it with an anchor tag since anchors don't have a "disabled" attribute. If it was a button element, you could do this: &amp;#x200B; &lt;button type="button" @(dataRows == 0 ? "disabled" : "")&gt;Test&lt;/button&gt;
Also the legacy apps are Java 1.7 - and we are not allowed to convert to 1.8 yet because of how the code was rewritten almost every module would need conversion. I'm probably just going to relocate to an office that is using C#.
I've actually written a lexer/parser to convert some REALLY legacy stuff over (not even Java, but a cobalt-based thing) in order to save about 500k on licensing fees; no one was interested and they told me to stop. I swear government managers are the most risk-averse bunch I have ever seen.
Try using a try/catch to wrap the calls to create an associate the user objects. Basically: * Wrap the procedure in a try/catch * Before the try, declare a null User1 variable * Set it when you create the User1 in the try * In the catch, call the delete method to delete User1 and any other cleanup you may need to do
How would comparison be expensive? Disk operations are way more time and resource consuming. And for the check sum you would have to read the entire file where as byte by byte you have to read up to the first difference. If you've got two 4gb files and the first difference is a couple kB in the difference would be massive.
Well most of the ctrl + . functions for starters. Templates. All the different editors. Most exstentions. In fact likely a big chunk of the features are missing.
Actually, this works if using Bootstrap: &amp;#x200B; &lt;a href="#" class="btn @(dataRows == 0 ? "disabled" : "")"&gt;Link&lt;/a&gt;
Just from the top of my head: &lt;a class="btn @(dataRows.Count() ? "enabled_button" : "disabled_button") " href="yourControllerPath" /&gt;
Removed: Rule 1. Try /r/learncsharp, /r/ProgrammingBuddies, /r/learnprogramming, /r/forhire.
this will work, but doesn't seem like the most efficient way to do it. in regular asp mvc we can get the usermanager dbcontext from owin and structure the code in a transactional manner. but i don't know how to achieve that in dotnet core
Removed: Rule 5.
Rider for me. More performant than Visual Studio and better code analysis / refactoring.
Removed: Rule 5.
1) don't downvote me if you disagree 2) you still haven't explained what TDetails means. I looked at the 'Person' example. I see a generated class which is a generic type but the generic argument isn't used **and** it's the generated class of the *non* generic Person class. Why? It all doesn't make much sense, sorry. (And yeah I do know a bit about code generators and records, but whatever)
What is dataRows in reference too, is that the ID of the &lt;tr/&gt;'s?
It's based on the code you provided. _=dataRows==0....
Check the wiki on their GitHub page (just Google NAudio GitHub).
The wiki provides some code snippets and tutorials too.
So now we know how Transolt "secures" their data.
I guess I am getting confused as to how to implement something like this
You are right. Let me explain. I'm not asking because I can't find how to do this in C# like in other languages. Well, I use this language everyday (although I'm not an expert by any means). The thing is: I never thought about _why_ is like that. Recently, I started to bolt a module system into my own language, and I'm comparing different namespace systems to figure out what features can be appropriated for it. However, the C# namespaces are odd compared with other languages, and I never thought about it. I find it very interesting. Odd or not, AIUI, `using` does not control which libraries are attached to a program. That seems logical, given it is not its purpose. It is used to manipulate the 'relative current namespace' instead. So, `using` a namespace means that every class directly accessible under it is connected to that relative namespace. And AIUI, this is intended as the 'usual' way to manipulate the 'relative namespace'. On the other hand, using a particular class without tying everything is done through an alias. So yes, it is possible, but it is done in such a way it seems a secondary feature. As in your example, you have to tell it which alias you want even when you want the same name. Then, you have `using` with statics. And finally, you have the `::` operator thing. I would bet many C# programmers never had to use it, but it is necessary to solve some ambiguity problems derived of other decisions. I find this last bit a little bit dirty, and I wonder if it was added as an afterthought... but ok, it fits a purpose I can understand. What I find in other languages is different, because they favour choosing explicitly what you can bring to that 'relative namespace'. You still can use alias to avoid name collisions, of course. In both languages, I believe you can achieve basically the same. But I also believe it must be a reason for C#'s designers choosing one over the other. In short, my questions are: what do you think can be that reason? And, what pros and cons do you find, hate and love using that system? What do you miss, and what do you think is a deal breaker?
The easiest solution is to call ToEnumerable before the select. Until it is iterated an IQueryable is building an expression to be turned into a query. When iterated the query is executed and the results are returned one by one. ToList ToArray and doing a foreach would also trigger it. I believe you can't call select with a parameterized constructor until after execution.
&gt; ctrl + . functions for starters Literally works the same, there's tons of templates and code snippets. I'm still unsure what your missing
In .NET Core you can write middleware to override the built in methods for UserManager. This can work fine if it's a global rule for your application. However if what's described in your original post is one of many pathways to create a user, it may not work out for ya. Here's a good doc on how to create a custom user store which sounds more like what you're after: [https://docs.microsoft.com/en-us/aspnet/identity/overview/extensibility/overview-of-custom-storage-providers-for-aspnet-identity](https://docs.microsoft.com/en-us/aspnet/identity/overview/extensibility/overview-of-custom-storage-providers-for-aspnet-identity)
That's what I meant.. i can't code c# without visual studio lol
The count of rows.
Yeah adding that is the first commit in all my c# projects.
\&gt; it doesn't test what people actually do in their job every day so it's just screening for people who like logic games not people who can write software. FizzBuzz tells you whether they know how to write a loop and write two if statements. Plenty of candidates don't.
I use both vscode and visual studio, I've tried Rider and find it is not nearly as good as visual studio + extensions. If you are already really comfortable in the intellij eco system it might be worth it to stick with intellij.
I don't think this is actually a big deal. At work we have permissions on git so we can't edit other teams project without being given permission. And there are mission critical projects that can only be edited by specific people. We use nuget to import everything. So even if you can't work on it can still be used by you.
Sorry about that was about to head to bed, ili will post exactly in a few hours and yea I csn use .Net core. Thank you
I saw your link to your git repo in another comment, and it looks like you already have your button wrapped in an If-statement but the syntax is wrong. On line 19 in index.cshtml you have @if (Count = 0) A single equal sign is an assignment, not a comparison. It should be @if (Count == 0) But I don't see Count defined anywhere so I'm guessing you're getting an exception here. If you want to check the count of the List passed from the controller it should be @if(Model.Count == 0)
Interesting! Thank you
Gui is not an issue as we can not create guis in the game due to its design so there is no need for anything extra.
That I don't want an IDE written in Java for doing .NET development. I can be assured that everything that Microsoft wants to allow me to do in .NET is supported in Visual Studio, JetBrains products will always play catch-up and only implement what they deem relevant to them. Plus with my Java developer hat on, Eclipse and Netbeans have always been better experience than InteliJ with its continuous indexing, heavy CPU usage with continuous fan working and ten finger shortcuts, and for simple stuff like Javadoc tooltips one needs to deep dive into settings to enable them.
Come on, vs17 can't even autosave files. You have to ctrl + shift + s it like a monkey.
 - You write a POCO and create it with all properties. You add a second location to create it. You add a property and set it only at one creation point. Now you have a bug. - You reuse a POCO because only a few properties change on every use. You add a property and forget that it needs to be reset on reuse. You have a bug. - You modify a POCO in a multithreaded or async environment. Now you have a race condition leading to diverse mysterious hard to debug bugs. - Two objects share a reference to another object. One modifies the object, while the other should still have the old version. You have a bug. - You have code in front of you with an object that is used in several deeply nested method calls. You think that the value of one property wasn‚Äôt changed and that nobody will alter the functions in the future to alter the fields. You have a bug. I see those types of bugs regularly. Mutability is hard to do right, but most of the time you don‚Äôt need it at all. Using immutability guarantees you that you avoid those types of bugs completely, so you can concentrate on places where you need mutability to get it right there and keep it on a minimum where it is still easy to follow and understandable.
Yes, look at the exam details and study what it has listed. That will be exactly what's covered on the test. Also, if you don't have a MCSA certification I'm pretty sure you'll need to take that before you can take the MCSD exams. The MTA exams are optional for the MCSA, but if you're completely new to object oriented programming those might actually be a good place to start.
Not sure I'm understanding the question correctly, but it depends on what exactly it is you want to store. I'm guessing what you want to do is to have a config stored client side, most likely a bunch of defaults, which is in some fashion passed on to the client side (Depending on how your frontend is built). Then store that, including any preferences to user might make through the frontend, in any form of frontend storage (cookies, localstorage, indexeddb, etc). Are you talking about actual [Environment Variables?](https://en.wikipedia.org/wiki/Environment_variable). For obvious security reasons you cannot touch these from javascript.
For what it's worth, I agree with /u/Thornsten. If I changed from ORM to Dapper/SQL I'd have to change two projects: 1. The query implementation project. This is mainly "automatically" generated queries using IQueryable + Automapper Queryable extensions, pushing joins and similar down to the database from the ORM. It also has a tiny bit of SQL. Readonly. 2. The repository implementation project. This is the true persistence layer, and takes domain objects and saves them. Deals with the hassle of swapping between things objects can represent and databases can't. Nothing else should be affected. Why would domain, application, web and other related services care about your persistence implementation? You aren't exposing things like IQueryable to the frontend are you?
Verify permissions: does the identity running your app have browse permission on that directory? Do a console dump of the actual identity running the app?
You're going to have to be slightly more specific on what exactly you think they should be telling you how to do certain things. The Demo's have everything you need to get audio to play back from multiple codecs. Sure some of them are 4 years and 2 years old. But the implementation hasn't changed. It is still the same library. Just simple fixes over the last year really. Nothing has drastically changed how you use it. &amp;#x200B; What exactly are you trying to do, and maybe that will help some of us know how to reply to it.
I downloaded the library but I don't know how to install or use it.
You can just use NuGet on visual studio to add it to your project, it's really simple. Goto tools-&gt;NuGet package manager-&gt;manage NuGet for solution. Go on browse and search for Naudio and add it to your project.
Did you look at the demo on the github page? &amp;#x200B; The following is the button callback that is called when you click "Play" on the normal demo (not wpf) private void BeginPlayback(string filename) { Debug.Assert(wavePlayer == null); wavePlayer = CreateWavePlayer(); audioFileReader = new AudioFileReader(filename); audioFileReader.Volume = volumeSlider1.Volume; wavePlayer.Init(audioFileReader); wavePlayer.PlaybackStopped += OnPlaybackStopped; wavePlayer.Play(); EnableButtons(true); timer1.Enabled = true; // timer for updating current time label } So from that, you can basically glean out the following: &amp;#x200B; Instantiate a player: `CreateWavePlayer();` Initialize FileReader: `audiofFileReader = new AudioFileReader(filename);` Set volume: `audioFileReader.Volume = volumeSlider1.Volume; // This is a slider on the form's value` Initialize the Wave Player: `wavePlayer.Init(audioFileReader);` create event callback function: `wavePlayer.PlaybackStopped += OnPlaybackStopped;` Play the file: `wavePlayer.Play();` &amp;#x200B; etc.
&gt; What I find in other languages is different, because they favour choosing explicitly what you can bring to that 'relative namespace'. You still can use alias to avoid name collisions, of course. At the time of C# 1.0, the import/CLASSPATH situation in Java was a fucking nightmare. I suspect that's a large part of why they didn't go that direction. Java's philosophy around that time was very much "if you can't do it the way we think is proper, you shouldn't be able to do anything at all". C# was much more "easy things should be easy". I don't find any inherent deficiencies in the C# way of doing this. Knowing C# behaves this way, SDKs are generally written in such a way to avoid over-reuse of very generic class names for public classes. The compiler/IDE points out immediately if you have a name resolution conflict, and VS lets you click a single button to fix it with an alias or full-name. It tends to keep DLL version conflict problems out of the C# code itself (instead pushing it to config files or the build process). It works well, is easy to understand, and namespace naming conflicts can easily be avoided with simple coding style practices. It does not encourage overly long or overly short class names. &gt; Then, you have using with statics. All languages try to avoid adding new keywords as they evolve, because adding a new keyword can irrevocably break old code. Re-using a conceptually similar keyword in an unambiguous context is therefore quite common.
Oh, thank you ! Now how would I go about actually using it ?
Oh, thanks. Does it work with mp3 and wav ?
if you just need to install it use the nuget package. the demo project has been what has helped me the most in figuring out how to use naudio. if you have something specific your trying to accomplish i might be able to point you in the rightish direction. it sounds like I'm just a tad further along in figuring naudio out then you.
thanks, someone else just told me what to do xP
Totally depends on what you're trying to do.
I also put them in my appsettings.json, and if you need the variable on the front-end you could just add it to your view model.
Apparently you are yet to discover save on build option.
Yep! You're looking at a good game plan. I'd suggest to also make your learning projects very very small. Don't design an NFL or MBA database with all teams, etc large amount of data. Maybe start with a light employee database with tables and pages for like Their Names, their positions, and where they work at (city).
If I'm being completely honest I haven't used an IDE better than VS ever... So yeah, I'd pick it over intellij. Not saying it's bad or anything, but I think VS is just that good
Be aware of burnout. I did comp sci, programming internship, and modded games during free time at home. all at the same time. I'm kind of burnt out of hobbyist programming.
I always found the filesystemwatcher to be flakey I would have instances where it would fire multiple events in quick succession and it‚Äôs because things were happening at the base level before the full system was aware of the changes It may simply be that the file hasn‚Äôt fully finished being moved to the new location or the permissions haven‚Äôt been applied properly yet but it may just be a case of doing a File.Exists before reading it You may find that the same event fires moments later and the file is ready to be used It has been a while since I used it but I ran into all sorts of events being raised too early or in multiple quick succession.
I don't know, I actually work (worked until a month ago) in the medicine field, our products could kill patients. Nobody had access to master branch because merging was automated but everyone could make a merge request. At the end of the day, the software had to pass a lot of regulatory and compliance tests to be released so issues were caught anyway. There were no restrictions based on seniority level though.
I would agree that swapping out the ORM _on an N-Tier application_ would not change the architecture. The entire point of this hilariously drawn out thread is that there exist application architectures that: 1. Are not N-Tier 2. Would be greatly affected by changes in the data access methodology It isn't necessary to present concrete examples when discussing abstract concepts, and even if it were, the assertion that "absolutely no application architecture ever would need to change as a result of a change in the data access methodology" is objectively more radical and harder to prove than my stance, which is simply that the decision to use an ORM or not is a _design_ decision rather than an _implementation detail_. That may not be the case for trivial N-Tier applications, but it absolutely is the case in other scenarios.
I disagree on these. Learning modern LINQ and updates in .NET 4.0 and 4.5 for easier manipulation of common things like System.File.IO instead of using streams for manipulating files, you can do easy shit like "File.WriteAllLines(filename);" instead of all that using() and streaming shit
\&gt; That may not be the case for trivial N-Tier applications, but it absolutely is the case in other scenarios. &amp;#x200B; Show us just one, please?
&gt; (WebForms even references WinForms assemblies.) yikes
I don't use a mnemonic, just kind of remember it as being from "simple -&gt; more complex", where "simple" would be on the left side (i.e. base class, interface, etc), and "more complex" on the right side would be a derived type.
Depends how you are actually calculating the checksum - there are methods with fixed buffers that are way efficient than byte-by-byte comparisons.
Try watching a folder on your C: drive instead of on a user's desktop. Sometimes the routing to user folders doesn't resolve properly.
I don‚Äôt get the sense that you‚Äôre putting a lot of effort into research, which won‚Äôt get you far as a programmer. The project page says: &gt; Read audio from many standard file formats WAV AIFF MP3 (using ACM, DMO or MFT) G.711 mu-law and a-law ADPCM, G.722, Speex (using NSpeex) WMA, AAC, MP4 and more others with Media Foundation
I think you can use c#'s Process class. You can run the python.exe, pass the py file as arguments (and other arguments as well if needed by the py file), make the py file prints the result to console (using print() functon) instead of just returning value from function, then your c# app should be able to read the python's console output.
what does rider not have that visual studio does have?
do c# developers always formulate their feedback as a question? even you did it. I get as answer "what do you think?" which I answer honestly, get 3 down votes. I'm new to C#, why do people ask me what I think when I ask them for their advice?
I highly appreciate your feedback. Can you somehow quantify your opinion? what makes visual studio so great? I guess you use it together with resharper? program under windows as well?
Isn't the name of the method obvious? typeof(IEnumerable).IsAssignableFrom(typeof(Array)) == true "Enumerable is assignable from array" typeof(Array).IsAssignableFrom(typeof(IEnumerable)) == false "Array is not assignable from Enumerable" That is how I remember it
If you want something a little more robust, check out [gRPC](https://grpc.io/docs/tutorials/basic/python/). Once it's set up, you can call code running on a different machine in a variety of languages from C# and get results as native objects. If this is a small one-off script, you can probably work something out piping python process output to your C# program.
reading the discussion here I thought it seems like pretty obvious, and should be pretty obvious to everyone else. But if I look at google trends I see a kinda surprising result: [https://trends.google.com/trends/explore?date=all&amp;q=visual%20studio%20resharper,jetbrains%20rider](https://trends.google.com/trends/explore?date=all&amp;q=visual%20studio%20resharper,jetbrains%20rider)
Yeah, this is probably your best bet. You'll have to convert the output to a POCO yourself, but that shouldn't be too much of a problem.
Another option that I've been using recently is \[pythonnet\]([https://github.com/pythonnet/pythonnet](https://github.com/pythonnet/pythonnet)). All you need to do is reference the Python.Runtime.dll in your project and you'll be able to make calls directly to python.
You could always do this instead: using (var fileStream = new FileStream(Path.Combine(filePath, fileName), FileMode.Open, FileAccess.Read, FileShare.ReadWrite)) using (var streamReader = new StreamReader(fileStream, Encoding.UTF8)) { // Do something with the streamReader } That will make it so that you open it, and it doesn't lock the file, so in-case said file is being written to very frequently (like &lt; 1 times per second) you shouldn't really have issues with inability to read the file at least.
I was just asking since I already had their attention and it was a simple question. And a lot of what I read beforehand said it only support wav or supported both wav and mp3. And I don't plan to get far, I just do it for fun. I'm just some random idiot with a learning disability trying to kill some time.
Whats the output of the python script?, is it JSON?
I went down this route. After fighting with NAudio I wound up just going ahead and using a Sox wrapper. I got results within 5 minutes. I how "use something else" responses aren't great. But Sox is really fantastic.
I've used NAudio quite a few times on my projects. Mostly for MIDI creation or audio conversion. I found it very easy to use. I strongly recommend looking at the demo code in its repo and wiki page to learn specifics. Feel free to check out some of my projects on GitHub if you're interested. In my opinion there's very little NAudio code required because the library does so much behind the scenes for you. Creating WAV File: [https://github.com/PikminGuts92/BFForever/blob/master/BFForever/Audio/Celt.cs#L227](https://github.com/PikminGuts92/BFForever/blob/master/BFForever/Audio/Celt.cs#L227) Creating MIDI File: [https://github.com/PikminGuts92/Sharktooth/blob/master/Sharktooth/Mub/MubExport.cs#L22](https://github.com/PikminGuts92/Sharktooth/blob/master/Sharktooth/Mub/MubExport.cs#L22)
Try putting a call to `Thread.Sleep()` before you open the file. Start with a full second, my gut tells me about 250ms is probably the smallest interval that could work. `FileSystemWatcher` is flakey as heck. It's abstracting a much more complicated API underneath. It's not unlikely it's telling you the file is created before the file is *finished* being created. If the sleep works, the real solution would be to kick off a task that does something with the file in response to the created event. Starting a timer could work, or starting a task as a continuation of `Task.Delay()` could work too. But what someone else said about "beware multiple events for the same file" is also true, so ultimately the "easiest" solution might involve the blasted Rx Extensions so you can delay the event *and* throttle it.
And apparently there are so many circular references between `System.Web.dll` and the other assemblies that they literally can't compile the code any more without older versions to use as place-holders. When ASP.NET Core was announced, there were stories going around about interns who tried and failed to sort out the mess. I shudder to think how they managed to get themselves into that mess. They must have had custom build scripts because VS doesn't support circular reverences like that.
&gt; why install an application on your computer when you can access it anywhere in the world via a web browser on any OS on any hardware? 1. Because they tend to work better. 2. Because they are cheaper to make. It's no accident that so many people fell in love with "apps" on the iPhone. We never liked web-based UIs, it was just a lot safer than installing random crap off the internet.
&gt; I dont wanna see C# 2.0 tier ADO.NET code in my codebase from teh 2000s, please. I do. But then again I care about high performance scenarios where the ORM of the day just can't hack it.
Ehh I don't know how to make an objective judgement. I have a friend who left C# for Java and he raved that IntelliJ was better. I've used R# in VS and felt like the handful of features I really liked weren't worth the hundreds of other things cluttering my interface I didn't. There are keyboard shortcuts, sure, but at some point it gets as complex as Emacs without the flexibility. My new favorite code smell is code littered with `// ReSharper Disable once SomeTypoError`. I tried Rider once. It's like Visual Studio with Resharper. Except when I trialed it for my team, there was a bug that made Xamarin Forms projects fail to build. We're a Xamarin Forms team. JetBrains graciously let me restart the trial with an older version, but that version of Rider was incompatible with our version of Xamarin Forms. JetBrains didn't see this as a major deal, so my trial expired before they fixed it. So in the end when I had to talk to my manager about, "Do we buy Rider licenses?" I had to point out the product failed to build any project I threw at it. YMMV, but I have a bad opinion of JetBrains now. Try both. VS has a free Community edition. JetBrains lets you evaluate Rider for a while and, if you're lucky, it works. Buy the one you like when you're done evaluating. In the end in both I feel you end up with the equivalent of Word, where you use 10% of the features daily and you'll never even learn what the other 90% do.
"Is assignable from" just feels like the wrong level of abstraction; I can never remember which one is the superclass...
Mmm maybe you could (if you want to complicate things) create a COM server with Python using win32com, and then use it from C#.
As others have said, FileSystemWatcher is a little wonky. It seems like the perfect solution for monitoring a directory, but it's a little difficult to implement. I wrote a Windows service that ingests texts files from various sources, parses them, and sends them to different destinations (medication packaging robots) based on some business logic. I found it way easier just to scan my directories every X seconds and have robust error handling/recovery.
Guys return 404 Status or 200 Status with NULL value it always based on scenarios . if API Inquery is based on Primary Key like ID or Code I prefers to return 404 status with No Record or Resource Found but if you are parameter query search like more than one search criteria prefer to return HTTP200 with NULL value. I really appreciate all you guys for your comments and suggestions and as per your comments I have updated articles and include 404 Status scenario. Sorry for all confusions
KISS. Who would want to complicate things? lol
Think about what the method is asking in english: Is the type T1 assignable from type T2? Doesn't help too much, right? Let's reword the question: Can I assign an instance of type T2 as an instance of type T1? Little better. What might help is seeing an extension method written to make the `IsAssignableFrom` method more clear: public static bool CanBeCastTo&lt;TTo&gt;(this Type from) { return typeof(TTo).IsAssignableFrom(from); } Please don't implement that extension method lol. It is just there to help mentally map the types for the assignable method.
I guess I'm amazed if people can fake their way through the rest of an interview without giving up the game somehow if they can't write a loop.
What all do I need to be `using` for this to work ?
A tale as old as programming. You could wind the clock back decades to arguments about using inline assembler and read much the same stuff. Its in the psychology of programmers.
Check out the IronPython library. With IronPython you can run python code from within your .NET application using the Python DSR. &amp;#x200B; Here is a Github gist showing how to call and use output from a python script in an .NET app: [https://gist.github.com/0x49D1/23196eb99b4c1f089b2033b6191e84e8#file-sample-cs](https://gist.github.com/0x49D1/23196eb99b4c1f089b2033b6191e84e8#file-sample-cs)
Maintainability for others.
You need to get the window/form‚Äôs device context handle (hDC) to create a device OpenGL can draw into. Google ‚Äúwpf hDC window‚Äù. Here‚Äôs a simple example showing how to setup the hDC so OpenGL can use it: https://www.cs.rit.edu/~ncs/Courses/570/UserGuide/OpenGLonWin-11.html
https://www.codeproject.com/Articles/265903/Using-OpenGL-in-a-WPF-Application
according to his 2nd and 3rd sentence, IronPython doesn't run the python script &gt; I've used ironpython but I'm running up against many issues to execute this method because ironpython does not have this library built-in. I've tried installing the spaCy library with the ironpython console window but no luck (many errors).
Okay I will look at the topics listed on the Microsoft site. The book I am using was published in 2013, so some things might be outdated now. Yeah, I am first planning to get an MCSA (by passing "Programming in C#" and "Developing ASP.NET MVC Web Applications") before I apply for a developer job. Later I plan to complete my MCSD by passing "Developing Microsoft Azure and Web Services". I have learnt basics of OOP in C++. Really appreciate your suggestions! Thanks!
Ahhhh there's the problem: Government managers. As long as you're working with or for the government, consider any form of advancement a success. Government management gets there not by knowing what they're doing, but by who they know (and being able to speak key phrases). They are not interested in rocking the boat. Bunch of cowardly fucks that have created the mess many of the government agencies face today. So, you're going about it the wrong way. You developed something first that can actually save $500k a year on licensing. For government, they need to see the whole picture and the details. So, this is where that matrix is critical. From here on I'll make the assumption you are working with the government (either directly or contractor, though if you're a contractor, fuck it, you're not going to influence them anyway). With the cost-matrix, you will need to add in to it risk-analysis. Show what the risks are, the costs associated with those risks, etc. This means the risks and costs of doing nothing, half-assing it, and then moving forward with a plan. Then you need to have a one-page summary highlighting the pertinent facts, the risks, and your proposed solution (I know, this is analyst work). Once you have a strong argument for moving forward, then if you've already talked about this with your manager and found them reluctant, at the next town hall approach the next higher-up in the chain and mention it. Keep leap frogging until you can catch someone's attention. If you're an employee, submit an employee suggestion so you can get official recognition and get paid (like $2 because they're assholes). Also, find out who the analysts are that review things like this (such as manual/guidance analysts). Network with them and talk with them. Government doesn't move unless there is a dire need. In the government agencies I've seen, you truly rise to the level of your incompetence, then sit there like a Vogon making poetry and everyone's life miserable. I've watched an agency pay out $18 million because they didn't want to spend a couple thousand (or even hundred) to pay for a little bit of training. And that was just one instance. Right now, the federal government is filled with late-stage baby boomers who don't want to do shit because they, along with congress, have created so much red tape to do anything, that modernizing the government in some of the big agencies, is a joke. So, do the matrix, add in risk-analysis, write a 1-2 page summary with your proposed solution. Then push that to the HQ analysts who may push that to the Execs. Dealing with local management isn't going to change anything. Then apply to get into better positions of power to be able to influence and make appropriate decisions. Don't be afraid to move up and out. Some of those upper-level managers will sit there long past their sell-by date.
I mean if all you need to do is play an audio file as a starting point, the demo should already have that covered. Or if you still need more examples on a simple playback with NAudio, [feel free to look at my own project](https://github.com/ddasutein/SampleMusicPlayer/blob/master/SampleMusicPlayer/MainWindow.cs). I haven't updated the project since it was something i put together for fun, but the code should all be there on how to play something using NAudio.
I have some defaults on the client side , things like apiURL etc. when I'm on my local PC the apiURL = localhost:2000, while on production it's apiURL = 153.110.0.9:6000 . is there an easy way to switch these values without manually changing them myself when I'm about to deploy
JSON to standard out. Bam, mapping done.
Are keyboard hex codes universal? I was under the impression that they varied by platform, which would necessitate some mapping.
If I am not wrong, Is spaCY the library for NLP ? Because I am going to attend a pyCon next month and the creator of spaCY is gonna be the Keynote speaker there ! :)
No really sure exactly what your problem is, I don't personally understand what is meant by the hex values "not making sense" or what you mean by "brute force". I am going to assume that you are unfamiliar with hexadecimal notation? A number, whether it be decimal or hexadecimal is not different. It is merely a different way for a *human being* to perceive the same value, the computer/compiler does not care and makes no distinction. You can mix/match them as you see fit, or what makes the most sense to convey the information you are presenting.
Perhaps you are looking for SharpGL: [https://www.codeproject.com/Articles/3144/SharpGL-a-C-OpenGL-class-library](https://www.codeproject.com/Articles/3144/SharpGL-a-C-OpenGL-class-library)
If this is a console application, you can check the Modifiers setting so ... do { var inputKey = Console.ReadKey(true); if( (inputKey.Modifiers &amp; ConsoleModifiers.Control) != 0 ) { // Control is pressed } } while (input.Key != ConsoleKey.Escape); This is how you would capture a Control key pressed. So if you press Control that part is triggered. &amp;#x200B; Modifiers is a boolean so you can do checks against it and other key combinations if you want. Check: [https://docs.microsoft.com/en-us/dotnet/api/system.console.readkey?view=netframework-4.8#System\_Console\_ReadKey](https://docs.microsoft.com/en-us/dotnet/api/system.console.readkey?view=netframework-4.8#System_Console_ReadKey)
`using() { ... }` Is just an auto-disposing section. So as soon as it is done doing things in the code, the objects are `obj.Dispose()` automatically as long as it implements `IDisposable`
it keeps saying "xxx does not exist in the current context" and I have no idea what this means because I'm a noob
I am assuming you copy / pasted that function I wrote above ... it is not a complete thing, it is taken from the Demo project. It probably has a private/public object for `wavePlayer = CreateWavePlayer();` I looked at the Demo, and they have the following declared at the top: private IWavePlayer waveOut; private string fileName; private AudioFileReader audioFileReader; private Action&lt;float&gt; setVolumeDelegate; Link: [https://github.com/naudio/NAudio/blob/master/NAudioDemo/AudioPlaybackDemo/AudioPlaybackPanel.cs](https://github.com/naudio/NAudio/blob/master/NAudioDemo/AudioPlaybackDemo/AudioPlaybackPanel.cs)
Hell yeah thanks my dude
I highly appreciate your comment how long ago was that? that you evaluated rider?
Oh :/ That fixed it, but now I'm getting namespace errors :(
It's called a Resource Dictionary. You can add strings and images and all kinds of stuff to it :)
I am assuming you are using Visual Studio. In this case, click in the text that has the Red Squiggly and press Alt + Enter to get popup. It will tell you what it can do to fix the error. Most likely (and I miss-understood your using argument prior), you have to tell the class you are doing this in, to use something specific.
There is an environment variable that you can check against to set specific things, that may help: if (env.IsDevelopment()) { app.UseDeveloperExceptionPage(); } Link: [https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-2.2](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/environments?view=aspnetcore-2.2)
Oh, that's really useful ! I just started using visual studio so that I could use winforms, so I don't know much about it. But now it's gone back to giving the same errors as before :(
yes I know I can do this in c#, but I need something like this on my client side also
Well, publishing would make this work for release I believe: #if DEBUG // Change apiUrl to Developer IP #else // Change apiUrl to Live IP #endif Perhaps?
This is the point where you put your project on a github and then people can help you further. It's really hard to troubleshoot code you cannot see because we have no idea what you have typed where. :)
Oh .w. If you want it, Ill just copy-paste it using System; using System.Collections.Generic; using System.ComponentModel; using System.Data; using System.Drawing; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Windows.Forms; using System.Media; using NAudio; using NAudio.Wave; using System.Diagnostics; namespace _3 { public partial class Form1 : Form { private IWavePlayer waveOut; private string fileName; private AudioFileReader audioFileReader; private Action&lt;float&gt; setVolumeDelegate; public Form1() { InitializeComponent(); } private void playButton(object sender, EventArgs e) { BeginPlayback("button.mp3"); } private void BeginPlayback(string filename) { Debug.Assert(wavePlayer == null); wavePlayer = CreateWavePlayer(); audioFileReader = new AudioFileReader(filename); audioFileReader.Volume = volumeSlider1.Volume; wavePlayer.Init(audioFileReader); wavePlayer.PlaybackStopped += OnPlaybackStopped; wavePlayer.Play(); EnableButtons(true); timer1.Enabled = true; } } }
And if you want the errors too ? The name 'wavePlayer' does not exist in the current context The name 'wavePlayer' does not exist in the current context The name 'CreateWavePlayer' does not exist in the current context The name 'volumeSlider1' does not exist in the current context The name 'wavePlayer' does not exist in the current context The name 'wavePlayer' does not exist in the current context The name 'OnPlaybackStopped' does not exist in the current context The name 'wavePlayer' does not exist in the current context The name 'EnableButtons' does not exist in the current context The name 'timer1' does not exist in the current context The field 'Form1.setVolumeDelegate' is never used The field 'Form1.waveOut' is never used The field 'Form1.fileName' is never used
Ahh I was looking at a different Demo. There is a simple playback demo in their github that I used for the original. I happened to pull out of a different playback so ... anyway: [https://github.com/naudio/NAudio/blob/master/NAudioDemo/SimplePlaybackDemo/SimplePlaybackPanel.cs](https://github.com/naudio/NAudio/blob/master/NAudioDemo/SimplePlaybackDemo/SimplePlaybackPanel.cs) This is the file that has the 'basics' You can see they define the wavePlayer as `private IWavePlayer wavePlayer;` The CreateWavePlayer() function is here: [https://github.com/naudio/NAudio/blob/master/NAudioDemo/SimplePlaybackDemo/SimplePlaybackPanel.cs#L87](https://github.com/naudio/NAudio/blob/master/NAudioDemo/SimplePlaybackDemo/SimplePlaybackPanel.cs#L87) Honestly, you are going to want to just check out that demo. download it separately, load and run it. See how it works. Follow through the code. It's the best way to learn really. Audio Playback with NAudio as a beginner is probably not the best way to play back files. &amp;#x200B; I mean, MediaPlayer class should do what you want, without having a funky thing. Depends on what your end goal is. And it comes included without having to load a dependency. &amp;#x200B; Basically i'll just write something really simple for you cause that seems to be what we're aiming at: public class AudioPlayerWrapper { private MediaPlayer wmp = new System.Windows.Media.MediaPlayer(); public AudioPlayerWrapper() { wmp = new MediaPlayer(); wmp.MediaOpened += Wmp_mediaOpened; } private void Wmp_mediaOpened(object sender, EventArgs e) { wmp.Play(); } public Load(string fileLocation) { wmp.Open(new Uri(fileLocation)); } } It's a class that will handle media player. So you can create one instance of it and just call "someVariable.Load("Some Path to a File");" to play the audio file.
[removed]
If your plan is to move into development in the upcoming years then you should definitely know .net and .net core. However, you should have a strong understanding in SQL too. Can‚Äôt have a dynamic website without a backend. That will separate you from the others that only learn front end.
The only thing that I've read is that he is complaining that this spaCy library is not build-in. IronPython works with every pure python library. It only can't run Python libraries written in C. I have to admin that I somehow missed that he tried IronPython. As the OP didn't provide a code sniplet it is more likely he didn't set the path(s) to his libraries via the engine.SetSearchPaths() method.. &amp;#x200B; I've used IronPython in a monitor like application and at first you're hitting a few walls, but it took us less than 5 minute googling to find answers for each error. If the OP didn't set SetSearchPaths, than the spaCy library cannot be found and a lot of the errors are a result of that..
Thank you for your answer. Let me ask for more details. &amp;#x200B; &gt;At the time of C# 1.0, the import/CLASSPATH situation in Java was a fucking nightmare. &amp;#x200B; I'm not aware of the differences between what C# does and import+CLASSPATH in Java (I have programmed in the latter just a little bit, so I know much less of it than of C#). Would you mind to expand that, and its potential impact in the design of namespaces? &amp;#x200B; &gt;I don't find any inherent deficiencies in the C# way of doing this. Knowing C# behaves this way, SDKs are generally written in such a way to avoid over-reuse of very generic class names for public classes. &amp;#x200B; I see now how, in C#, reusing the same name twice is highly discouraged in order to avoid conflicts. So, if you include two different namespaces, and you reused a name, a conflict of that kind should be more prone, forcing you to solve it (maybe choosing a better name). It is like this?: namespace Foo { public class A {} public class B {} } namespace Bar { public class A {} public class C {} } namespace Main { using Foo; using Bar; public class Program { public static void Main() { var b = new B(); var c = new C(); } } } In this code, the class A exists in both namespaces, and both of them are 'tied' in the main program. At the beginning, no conflict is raised. But if you try to instantiate A (`var a = new A();`), the compiler complains about the ambiguity of that. On the other hand, the same cannot be said of the immediate subnamespaces. Why do you think is like that? &amp;#x200B; &gt;It tends to keep DLL version conflict problems out of the C# code itself (instead pushing it to config files or the build process). &amp;#x200B; Sorry, but version conflicts? I thought this only affected to the bad reuse of names in different namespaces, instead of to different versions of the same class. &amp;#x200B; &gt;It does not encourage **overly long** or overly short class names. &amp;#x200B; How is that? I mean, compared with other programming languages. I see how overly short class names would easily lead to a name collision, but then you arguably need longer descriptive names as a result. &amp;#x200B; &gt;All languages try to avoid adding new keywords as they evolve. \[...\] Re-using a conceptually similar keyword in an unambiguous context is therefore quite common. &amp;#x200B; Ok, I just mentioned for the sake of completion, but... well, yes, that decision is not odd to me. However, now you mention it, I'm thinking about how static classes work. I'm digging through the specification of C# 1.0 and 2.0. It seems that static classes were added in 2.0, where you need to provide the name of the static class all the time to access to the function (which seems contrary to the philosophy of adding every class to the relative namespace, and it is probably driven by the way in which classes in general are looked up). Finally, `using static` was added in C# 6. I won't overthink this last thing, because seems another afterthought. I just find it interesting.
I recently wrote an article about the same topic: [https://use-the-index-luke.com/blog/2019-04/include-columns-in-btree-indexes](https://use-the-index-luke.com/blog/2019-04/include-columns-in-btree-indexes)
&gt; I'm not aware of the differences between what C# does and import+CLASSPATH in Java (I have programmed in the latter just a little bit, so I know much less of it than of C#). In .NET, all of the dependencies are dumped into one directory. With JDK, dependencies can be nested in JAR files in multiple directories specified by the CLASSPATH. &gt; Sorry, but version conflicts? I thought this only affected to the bad reuse of names in different namespaces, instead of to different versions of the same class. e.g. You are referencing two 3rd-party libraries, and each of them references a different version of Newtonsoft.Json. &gt; How is that? I mean, compared with other programming languages. I see how overly short class names would easily lead to a name collision, but then you arguably need longer descriptive names as a result. Mostly referring to languages without namespaces, where overly long names are used to avoid conflicts. C# strikes a balance. &gt; I see now how, in C#, reusing the same name twice is highly discouraged in order to avoid conflicts. In practice, it's not a big deal. Using overly-generic names only becomes a hassle in very commonly used namespaces. In less-used namespaces, people just disambig with Foo.SomeClass and Bar.SomeClass. &gt; On the other hand, the same cannot be said of the immediate subnamespaces. I'm still not sure what you mean by immediate subnamespaces.
&gt; In this code, the class A exists in both namespaces, and both of them are 'tied' in the main program. At the beginning, no conflict is raised. But if you try to instantiate A (var a = new A();), the compiler complains about the ambiguity of that. &gt; On the other hand, the same cannot be said of the immediate subnamespaces. Why do you think is like that? I have honestly no idea what you're trying to ask.
It stands for "non". It's a query that returns no data.
Oh, well. Fair enough. The explanation threw me off by saying "ExecuteNonQuery executes a Query"...... &amp;#x200B; Thank you!
&gt; e.g. You are referencing two 3rd-party libraries, and each of them references a different version of Newtonsoft.Json. I guess you are talking about `extern alias`. I have never used it, so I was not grasping what did you mean. &gt; Mostly referring to languages without namespaces, where overly long names are used to avoid conflicts. C# strikes a balance. Ok, I get it now. &gt; In practice, it's not a big deal. Using overly-generic names only becomes a hassle in very commonly used namespaces. Yes, but besides, it seems the designers of C# considered it very seriously. &gt; I'm still not sure what you mean by immediate subnamespaces. Let's say I have `using Foo`. - Foo.Bar is an immediate subnamespace of Foo. - Foo.Bar.FooBar is not an immediate subnamespace of Foo, but it is of Foo.Bar. Neither of these is tied to the current relative namespace with that keyword. However, any Foo.Class is tied. Why such difference between a class directly located under a namespace, and a immediate subnamespace?
Sorry, I didn't explain it very well. The first part was to ensure I was grasping the point of the previous answer. That name clash would encourage you to choose a not-so-generic name, even if you are not using both 'A' classes at the same time. In other languages, you could have first started with something like 'import Foo.A', but in C# you would only think about trying with `using A = Foo.A` after the name clash, and by then you will consider choosing a better name. The second part is because `using Foo` will 'import' every class directly located under Foo, but no namespace. My question is: why?
Or you can use literally Resources file. File - New - Resources.
I found it lacking when working with Winforms. While it now has a designer it is far from working perfectly. Other than that for my workload it is great
Sorry for being a bit unspecific. So what you mean is basically to download the python library in the python environment, and then via the engine.SetSearchPaths() method set the path to that library? Correct me if I'm wrong.
I'll check that out too, thanks. It's just a little script, so the simpler the better.
I've used both IntelliJ and Visual Studio as well as Rider. For the longest time I preferred Visual Studio with ReSharper hooked in but Resharper grew to make it quite a slow experience, this became frustrating for me when I had multiple solutions open. Then Rider came along and it felt super lightweight but still had all the features I was using. Honestly, with Rider, there is next to no point in using IntelliJ for .NET development (even though IntelliJ is a good tool). Once VS2019 came out, I reconfigured my setup to abandon ReSharper and use extensions to replace it and it's the best setup I've had so far.
Nope, just a string.
That's right! I'm just trying to add in some spaCy functionalities into my C# code. Such a great library, and a pity there's no an official C# port!
&gt; In other languages, you could have first started with something like 'import Foo.A', but in C# you would only think about trying with using A = Foo.A after the name clash, and by then you will consider choosing a better name. Just because you have a clash doesn't mean it's a bad name. And you can just use the fully-qualified type name: `Foo.A`. &gt; The second part is because using Foo will 'import' every class directly located under Foo, but no namespace. My question is: why? Because that would bloat your current scope immensely for nearly no purpose. The result would be that every single type will be placed in sub-namespaces, whether it makes sense or not, just to avoid having it added overly eager. You should also be aware that "Namespaces" are no construct in itself. It's just a way to abbreviate the fully-qualified type name.
You need to set the paths to all your library locations. This includes the regular Python libraries and custom libraries that you might have in your project. engine.SetSearchPaths(new List&lt;string&gt;(new \[\] { @"c:\\python27", @"c:\\python27\\dll", @"c:\\python27\\libs", "@c:\\path\\to\\app\\lib\\dir" }); The Python libraries comes with the Python runtime, so you'll already have those on your computer, but you have to point the engine to these locations. IronPython is a moron, you have to tell it everything very specific. Only than it does what you want it do do.. However, why are you not using a natural language processing library that is written for C# like coreNLP or SharpNLP? What can spaCy do what the .NET implementations cannot?
I was all ready to be disappointed at yet another article copying and pasting the description of one of the solid principles and not saying anything worthwhile. It was actually quite good and I particularly like the end about thinking about the public API of your interfaces when designing them.
Yep currently use this way and outputting json to stdout. Easy and nice
&gt; Just because you have a clash doesn't mean it's a bad name. And you can just use the fully-qualified type name: Foo.A. As I said, that is my understanding of what the other user explained. If that were no the case, my original question stands: &gt; Because that would bloat your current scope immensely for nearly no purpose. I disagree, because I'm not asking why they are not included recursively. If a namespace is directly located under another, one would presume it is relevant for its context. But I also disagree because, as I said, the 'default' is including every class directly under the namespace, used or not. I can understand it if you argue that including everything by default would bloat the scope for nearly no purpose. However, the opposite is not how it works. It actually will bring 100 classes directly located under a ns into the scope for using 1 or 2, but it will refuse to add 5 namespaces also directly contained in it.
It would help if you posted the snippet you are trying to change, with the original binding and what you're trying to change it to.
And numeric conversions (which are sometimes considered different from implication casts) and interfaces.
I agree, it was a very good read around LSP. Especially nice as he went into the what and why of the problems and approaches to fix them / alternatives, instead of LSP is shit because your duck may need batteries.
Well VS is a default option. And now, especially with VS 2019, you will most likely be happy with it. It is clean, fast and have a lot of useful features and integrations with Microsoft's other products. It is their product after all. So if you are on Windows - VS is a no-brainer. I would advice against using Resharper. While it has some good features - performance degradation is not worth it. They are working on implementing an out-of-process solution, but until then use FxCop or any other analyzer that can do 90% of what Resharper can with like 5-10% of performance hit at most. And for beginner - built-in analyzers will be enough. If you are on Linux/Mac... well you have 2 options: VS Code - good for JS and light [ASP.NET](https://ASP.NET) Core development. Feels too JS/console friendly to me. If you don't mind doing 80% of operations with console commands - try it out. Rider - VS wannabe from creators of Resharper. It will never match Vs, but if you want something more feature-rich than VS code - this is your only option.
Cross-post: https://www.reddit.com/r/dotnet/comments/cgqsco/where_should_i_put_my_viewmodel_logic_and_how/
OP this is your answer.
In this context, a non-query is something like an insert or an update.
Yeah very convenient. Instead of ctrl+atl+s'ing it i need to smash build button.
I'm pretty sure you have to use the new keyword in this case, but if there's a better way I'd like to know as well. Seeing that new keyword makes my code smell funny
So you spend hours coding without ever testing if the code compiles?
Why do you need that when you have static code analysis? Obviously it compiles if it doesn't have any red squiggly lines. We are talking about c#, not python or js.
Well, you could have `A` be made generic `A&lt;T&gt;` where `T` constrained against `A&lt;T&gt;`: class A&lt;T&gt; where T : A&lt;T&gt; { public string Name { get; private set; } public T WithName(string name) { var res = (T)Activator.CreateInstance(this.GetType(), this); res.Name = name; return res; } public A(A&lt;T&gt; other) { Name = other.Name; } public A() { } } class B : A&lt;B&gt; { public int Age { get; private set; } public B WithAge(int age) { var res = (B)Activator.CreateInstance(this.GetType(), this); res.Age = age; return res; } public B(B other) : base(other) { Age = other.Age; } public B() { } } But that makes it difficult to work with the base `A&lt;T&gt;` type in code that doesn't know about `B`. It would require additional refactoring, perhaps adding an interface or further base class `A`, that lets you access members more generally: (And you can do a little bit of refactoring to generalize your repeated cloning code.) class A { public string Name { get; private set; } public A WithName(string name) { var res = Clone(); res.Name = name; return res; } protected A Clone() { return (A)Activator.CreateInstance(this.GetType(), this); } protected A(A other) { Name = other.Name; } protected A() { } } class A&lt;T&gt; : A where T : A&lt;T&gt; { public new T WithName(string name) { return (T)base.WithName(name); } protected new T Clone() { return (T)Activator.CreateInstance(this.GetType(), this); } public A(A&lt;T&gt; other) : base(other) { } public A() { } } class B : A&lt;B&gt; { public int Age { get; private set; } public B WithAge(int age) { var res = Clone(); res.Age = age; return res; } public B(B other) : base(other) { Age = other.Age; } public B() { } } This way if you have a specific subclass, you inherit from `A&lt;T&gt;`. The methods that don't know/care about the subclasses, can just upcast it to `A` and access/change the `Name` property there. Eric Lippert has a writeup on this pattern and the pros/cons/mindwarp on it: https://blogs.msdn.microsoft.com/ericlippert/2011/02/03/curiouser-and-curiouser/
Yeah I got it now! It returns an int32 instead of the actual data, telling me how many updates happened.
Just a thought but have you tried seeing if generic extension methods will work?
&amp;#x200B; Now the error is *invalid array structure*. My assumption is that at the line `if (!(XMath.IsInfinity(my_struct.Values[i].X)))` GPU is trying to access the reference of `my_struct.Values` on CPU so an error occurs...?
&gt;Where? ViewModels seems like a good place to put ViewModel logic. &gt;How? Just create new files in the ViewModel directory. \----- On a serious note, MVVM is not really about where the logic goes. The business logic goes in the model, and the user interaction logic goes in the view. The ViewModel essentially creates the model objects to which the view will be bound. For example a ViewModel class has a flag that says IsCategoryActive, the view being bound to that makes the Market Category or whatever viewable based on that flag. The ViewModel doesn't really perform any logic, it's more or less a pass through between view and model, pure and simple decoupling. Any logic will be pretty simple in the ViewModels. To really answer your question - look into "Data Binding in WPF", I haven't done much with WPF so I really only know the concepts in play, and that WPF makes pretty simple to implement (and that it really is a pleasing and clean architecture design pattern).
What about extension methods (though it would mean your properties need a public (or at least internal) setter): `public interface ICloneable&lt;T&gt;` `{` `void CopyTo(T target);` `}` `public class A : ICloneable&lt;A&gt;` `{` `public String Name { get; set; }` `public void CopyTo(A target)` `{` `target.Name = this.Name;` `}` `}` `public static class AExtensions` `{` `public static T WithName&lt;T&gt;(this T source, String name) where T : A, new()` `{` `var copy = new T();` `source.CopyTo(copy);` `copy.Name = name;` `return copy;` `}` `}` `public class B : A, ICloneable&lt;B&gt;` `{` `public int Age { get; set; }` `public void CopyTo(B target)` `{` `base.CopyTo(target);` `target.Age = this.Age;` `}` `}` `public static class BExtensions` `{` `public static T WithAge&lt;T&gt;(this T source, int age) where T : B, new()` `{` `var copy = new T();` `source.CopyTo(copy);` `copy.Age = age;` `return copy;` `}` `}`
&gt; Seeing that new keyword makes my code smell funny If `new` is a code-smell for you, `Activator.CreateInstance` should be nauseating :)
Oh how I long for generics with parameterized constructors. Though I hear that they would just use `Activator.CreateInstance` under the covers.
So you never use **dynamic**, uncoditional type casts, reflection, dynamic assembly loading, and all algorithms are guarateed to work the very first time.... Never met a 10x dev before, uau.
In my little project I need to compare the performance of different NLP tools, and most of them are written in python, so that's why I need to make use of them. Btw, I'm having a very hard time trying to install spaCy in Python 2.7 for 64 bits. Errors and errors with each in-built dependency. Same when I try from the ironpython folder path. Looks like it'll be nearly impossible to install spaCy for python 2.7....is there any c# library for 3.xx python versions?
&gt; "and the user interaction logic goes in the view" I don't think that's right. It's true if the logic could be written in XAML, but otherwiese code behind in views is very very much frown upon . I think it's the main reason why viewmodels exists, so you can move your code behind from views to viewmodels and thus your designers doesn't need to learn C# at all ("in theory"). You've even tried to explain something like this with your IsCategoryActive, but it's not always just simple bool property. When you need some interaction logic , it should be in viewmodels not views.
One LSP violation that I can think of is Array implementing IList and hence implementing the Add() method, while no element can be added to an array. Microsoft did their best with .NET 4.5 and hide Add via explicit interface implementation.
This might be splitting hairs, but the returned `int` tells you how many rows were affected by the SQL you just executed, not necessarily how many updates happened. If you executed SQL containing multiple update statements against a single record, it would only return a value of `1`. I'd assume that any other records updated as a result of one or more triggers would add to the total rows affected though I don't know this for certain.
Of course they are not, your examples are extreme. I'm web developer. How much reflection and type casts do you think should I use? As little as possible, obviously. Algorithms? Yeah, sometimes. But, when talking about losing progress, I was referring to my personal experience. Sure, it happened once or twice, when I was writing code that didn't need immediate verification, but it was enough for me. These small things can really ruin your experience.
Thanks, I wasn't entirely sure (Y)
Why even have this discussion? I‚Äôm not trying to be snarky, even if it cones off that way. If you‚Äôve used InteliJ for years and you like it, and it supports C# development then by all means continue to use it. These are seriously personal choices and someone may use and IDE for very different reasons than anyone else. While each has similar features and standouts it ultimately comes down to personal preferences. I use VSCode for stand alone projects, until i need code analysis and coverage tools, there are alternatives but i find VS tools the easiest to deal with. Larger projects are Solely the territory of VS.
You can look at this [Demo Application](https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon) for [AdaptiveClient](https://github.com/leaderanalytics/AdaptiveClient). This is a fully functional n-tier application that shows how to put business logic in a reusable service layer. The demo shows a WPF app and a web app using the same service layer. The app also shows how you can easily access your service layer "in process" (like on a corporate LAN) or over a web API.
You could probably just use unix pipelining since C#'s main accepts a string as input.
There are really two choices, and you pick one based on whether you're using an MVVM framework. **If you are using a framework,**, you organize your Views and ViewModels according to the convention it uses to automatically locate them. You also probably need to follow a naming convention. **If you are not using a framework,** pick a structure that makes sense to you and follow it with no exceptions. If someone else has to read your code, they'll figure it out pretty quick if you are consistent. Generally even if you don't use a framework, you end up following conventions as if you did. If your app is complex, you either use a framework or end up writing some kind of View/ViewModel locator/factory yourself.
I took a chance to update the article with a .NET Framework LSP violation with Array implementing ICollection&lt;T&gt;.Add() and Remove() methods.
Use the code block format.
Unless I'm missing something, the IDE shouldn't limit your choice of framework. Are you running into a particular problem?
You can use Community for commercial teams with less than 5 members. I would think that you could just download the newest SDK's and still use Express though.