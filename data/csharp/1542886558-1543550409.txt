A friend indicated that it doesn't matter if I even double or triple the column size because varchar just limits to the length of the data anyway... Or something along those lines anyway.
I appreciate the input but its all academic anyway since I have no power to update the database. I can only make the recommendation.
Wow, that's just so pathetic. Instead of going forward, we like returned back to 90s just to make a chat app trading performance and maintainability with easing developing with like 25%. What's worse is that you perfectly described Electron. We can copy what you said and apply it to Electron and 98% will apply it to it as well. 
Maybe use something like `System.Text.Encoding.ASCII.GetByteCount(s)` then?
&gt; My boss is telling me we need to increase the size of the column. If that is an option, then it's the easiest. But your previous statement made it sound like that is not an option: &gt; The client manages the data and the table that it goes into. Just change it to `nvarchar(max)`, and you can store arbitrary lengths (at a performance cost, that likely does not matter for your use-case). Notice the `n` in front of `varchar(max)`, which allows to store unicode data.
That's exactly what I think, I always bet on new technologies (well, not the newest technologies but new after all) and WPF represents the present and future of desktop applications, especially because they offer a well structure way of building application (using MVVM, Bindings, Converters, etc.)
I’ve been experimenting with it and have been pleased so far, especially with the performance (only tested on Mac). 
&gt; defiant characterized by defiance; boldly resistant or challenging ^I ^think ^you ^meant ^'definitely'
Avalonia is more like WPF rather than Xamarin Forms
Nope! Web apps look like web apps, because they are the future, dammit!
&gt; If that is an option, then it's the easiest. But your previous statement made it sound like that is not an option: I'm recommending it because as far as I can see, its the only option that eliminates the possibility of data loss... Until the data is still longer than the column anyway. &gt; Just change it to nvarchar(max), and you can store arbitrary lengths (at a performance cost, that likely does not matter for your use-case). Notice the n in front of varchar(max), which allows to store unicode data. Also part of my recommendation. Thanks a bunch for your input :)
I find Java streams too verbose and bureaucratic. I don't use it on a regular basis when I write Java code, altough LINQ feels natural in any .NET code that contains an IEnumerable (which is any non-hello world app). It's not nearly as handy as LINQ. That's kind of understandable because the goal of Java streams isn't the same as LINQ's. 
To add *AngularBeginner*'s answer. If I remember correctly if you use `(max)` performance cost comes only when string gets over 8000 bytes and data is stored outside of the row. You can't use indexes for `(max)` sized string columns. If you want to use index for string column it needs to be maximum of 900 bytes of size, **varchar(900)** or **nvarchar(450)**
If I'd built this myself, I'd have mapped the value to a C# `string` type which EF maps to `nvarchar(max)` so yeah, definitely what I would use. As I said though, I don't have any control of the database since it exists internally in the client's LAN... Recommendations made though so we'll see what they do.
Linux, the youngest of the desktop platforms, has been around for what? 30 years almost? And we still don't have a cross-platform way to build desktop programs, so I'm not holding my breath for that...
Its just included with the basic controls. Probably just called Chart or something.
https://github.com/migueldeicaza/gui.cs
If the REST api has a swagger documentation, my advice would be to just use a client generator like [NSwag](https://github.com/RSuter/NSwag) and not worry about implementing your own client at all.
The DirectX mode of their controls are **hugely** faster than the legacy GDI mode. Here's some blog posts on what they did. (Not affiliated w/ DevEx, just a long time happy customer) https://community.devexpress.com/blogs/ctodx/archive/2017/11/02/major-speed-enhancements-in-winforms-grid-coming-soon-in-v17-2.aspx https://community.devexpress.com/blogs/news/archive/2018/03/13/DirectX-Rendering-WinForms-Controls-Update-v172.aspx https://community.devexpress.com/blogs/oliver/archive/2018/04/17/winforms-xtracharts-performance-improvements-v18-1.aspx And while I was looking for that, here's their release notes from their 2018 feature releases. (The point being the huge amount of engineering they are still putting into the WinForm side of their products) https://www.devexpress.com/subscriptions/new-2018-1.xml#winforms https://www.devexpress.com/subscriptions/new-2018-2.xml#winforms
you mean something like bing maps? https://blogs.bing.com/Developers-Blog/2014-04/Visualize-Large-Complex-Data-with-Local-Tile-Layers-in-Bing-Maps-Windows-Store-Apps-(C-)
What you need is perhaps a custom "[Desk band](https://msdn.microsoft.com/en-us/library/windows/desktop/cc144099%28v=vs.85%29.aspx?f=255&amp;MSPPError=-2147217396#desk_bands)". This library looks promising: https://github.com/dwmkerr/sharpshell My Google-fu is strong today.
Xamarin.Forms can target macos and some linux distros, but linux is preview.
MAybe use a custom attribute? &amp;#x200B; `[APIEndPoint("api/Classrooms")]` `public class ClassRoom` `{` `...` `}` &amp;#x200B; &amp;#x200B; `var endpoint = typeof(ClassRoom).GetAttribute&lt;APIEndPoint&gt;().EndPoint;` &amp;#x200B; `(from memory, might be getcustomattribute, and you need to reference i think Linq to get this extension method)` &amp;#x200B; `then` &amp;#x200B; `public class APIEndPointAttribute : Attribute` `{` `public string EndPoint {get; private set; }` `public APIEndPointAttribute(string in_endpoint)` `{` `this.EndPoint = in_endpoint;` `}` `}`
&gt; It's a web app. It looks like a web app. You know that "web app" can be styled to look like anything right? 
All of these arguments being made for electron apply to Java, which has existed for decades, and doesn’t have nearly the footprint that Electron does. It’s just that JavaScript is the garbage fotm.
Binary clock in an icon :-)
https://docs.microsoft.com/en-us/windows/desktop/shell/application-desktop-toolbars I'm thinking this might be able to do it.
What's with the giant mugshot? Anyways, have you tried MonoDevelop?
That is exactly my point. It doesn't look native nor non-native, it looks whatever you want it to look.
IMO the best you can achieve is to get the Dock position and height of the Taskbar and put a TopMost window there. &amp;#x200B; Otherwise there might be a very very slight chance that you can hook into the structure of the TaskBar window (I just theoretically call it Window) and position your own Win Form to the desired place. Similar of how [THIS](https://www.codeproject.com/Articles/856020/%2FArticles%2F856020%2FDraw-Behind-Desktop-Icons-in-Windows-plus) tutorial places a WinForm under the desktop icons but above the wallpaper. If you are lucky, the Taskbar will even re-position it's child considering your form's dimensions.
i can only support this. i have a network monitor that uses this, its great
Trust me, you didn't wanted to apply for that job anyway. Just think about it, if you would have such a lame-ass boss that ask such a bullshit questions that EVERYONE just google, what retarded tasks would he/she gives to you.
&gt; lame ass-boss *** ^(Bleep-bloop, I'm a bot. This comment was inspired by )^[xkcd#37](https://xkcd.com/37)
You need a foreign key on Season pointing to the series ID. Replace the aired season number on episode with a foreign key to the season ID. You also could do away with the season table all together and just use the combination of series ID, season # and episode # as the key for episode.
&gt; Now my question is, How do I add relationship between the tables. I've created them. How have you created them? Have you created them in SQL, as database tables? Or have you created class in C#? Also, is the ultimate aim to have tables in a database and also to have C# classes that match these tables? Or do you only need one of these at the moment? (For a "real" system you'd need both, and you'd use something like Entity Framework to map one to the other, but you say you're a new programmer so maybe you're not ready for that yet?)
No, you wrote it looks like a web app not that looks non-native. Some GUI frameworks have their own rendering like QT. Are apps that use QT web apps?
I don’t write much JavaScript because it is an incredibly dull language that solves dull problems. At least for me, anyway, I think writing frontends is very boring. Yes I know you can write backend code in JavaScript. At any rate, thanks for the needless insult.
For quick projects: yes. It can be slow, it can be obsolate... But it doesn't has so many fuckery that WPF has. You don't need XAML just for a simple form with a simple image box on it. Making a barebone form is much faster, and more intuitive. Perfect for debugging that needs visual stuffs.
Only cross platform apps I've seen made with Java that has decent UI is JetBrains stuff. Other stuff I've seen looks horrible.
&gt; There's a reason for that, and it's not because everyone but you is stupid. That's not an insult, it means that everyone **except** you is stupid, so where is the insult? 
Idk, Oracle puts out cross platform apps (like sql developer for instance) that look decent and work decent. They’re not super fast or anything, but they work well enough. I guess it’s not super prevalent outside of a few instances, but it’s a neglected option. I think if you want decent and performant multiplatform apps you probably gotta go C++ and Qt, and most people these days don’t want to write C++
\&gt; I wouldn't couple the information where you are getting your model from with your model, because this information is only relevant for your client but nowhere else. &amp;#x200B; Great point. Another reason the solution introduces code smell. The objects are used across multiple solutions and it's not justified to add a property just for the client to use. attributes seem perfect for the job. &amp;#x200B; I don't follow your solution completely. It seems like in your example the user of the client has to generate it for a specific api endpoint. What if the user needs another api endpoint let's call it 'Shops' ? will he generate another client with the attribute: \[ApiEndpoint("api/shops")\] I'm unfamiliar with attributes so maybe I'm missing something or wasn't clear enough in my question. &amp;#x200B;
Thanks for the suggestion. Attributes look way better than using a property. Never used custom attributes before.
Are you high? Every function call allocates memory, even if you don't actually do anything in the method. If you create an infinitely deep recursion call you'll run out of memory, in any language on the planet, native or otherwise. 
That other guy said electron apps look native. That's not right. They don't look native out of the box, you have to stylize with CSS to mimic native look and feel. Same for javax.Swing apps, for example: You can stylize its paint events to render a native-like interface, but they don't look native per see. So no, an electron app doesn't look native unless you force it to. WinForms, on the other hand, looks native on Windows. 
I don't like JavaScript, non static typed languages are horrible for big projects. TypeScript makes it bearable. JavaScript package management is horrible, mostly because JavaScript projects have so many depencies. Also many times when I tried to build old project it won't build because even some libraries that suppose that semantic versioning breaks.
&gt;It's because it works. It works on everything, because both JS is everywhere on billions of devices. Or maybe because browsers don't fucking understand anything but JS? JS is a terrible language and I say it as a JS developer, it's full of inconsistencies, and dynamic typing makes it even more unreliable for huge projects(but since people are forced to learn it to make a frontend, they have to) Also, please please shut your mouth if you have no idea of what are you talking about. Java is not as memory hungry as Chrome, I know that this subreddit is C# subreddit, and as much I really hate Java for its verbosity and inferior-ity compared to better alternatives like C#, Java CAN'T be compared to Electron at all especially when it comes to performance, open something like Android Studio then open Atom, the difference is just so huge that it makes you look an idiot when you compare something like Java to a mess like Electron. Javascript IS not a pretty good language. Who fucking cares about first class functions? Who fucking cares about "reasonable syntax"? It makes you seem like you just learned it at 10 days and you now use some buzzwords that don't matter at all especially stuff like closures. And the ecosystem is not really something to be proud of, there are literally hundred of useless NPM packages that only have one line in their whole code, yet they get 6 million downloads(is-16, is-array, is-number...) that it looks so pathetic. For reasonable syntax? Who cares with this? Most of programming languages have "reasonable syntax", again it makes you look like a noob for caring with this thing instead of caring with more important stuff like performance and maintainability and consistency, closures? seriously? freaking closures? lol. First class functions? Tell me you're kidding, please tell me that. The only thing that you got right is "a great async model" but even then I doubt you even know what do you mean by that. I highly doubt you learned the language in more than 10 days ago. The excuses you got are pretty idiotic.
True Electron shares same native look problem with many other GUI toolkits. Maybe if there was standard for OS supplied CSS styles for HTML based apps, it would fix lot of these problems.
Because MVVM is so much cleaner? Honestly, maybe I simply don't know how to properly write super clear non-spaghetti code, but to me WPF/MVVM gets just (if not more) ugly than Winforms beyond anything simplistic that you see in online tutorials and demos. OMG you have code behind and event handlers in Winforms? Yikes, you have all this code in event handlers, isn't that so ugly and should be somewhere else? Nothing in development can't be solved by a few more layers of abstraction! In WPF, I still have some code in my code behind because some things just don't play nice with commands or biding, and sometimes you can't EventToCommand hack it. You convince yourself that it's cool though, because it's view logic, so it can live there. Then I have logic in my XAML that does sh*t when things happen based on styles and triggers. Then I have code in my VM, sometimes it's in commands, sometimes it's in commands that have been mapped from events, sometimes it's in properties invoked when the setters are called, etc. So, is WPF with MVVM so much better and cleaner? I might be a grumpy ol' man at this point, but to me it's a bunch of churn, the same sh*t that plagues our industry, constantly reinvesting the wheels in name of something "so much better, but with these 1000 caveats if you do anything beyond a simple implementation".
It hasn't been clear how to develop anything UI related since the introduction of Silverlight. And I'm not talking just desktop either. The entire industry is schizo, with endless solutions to the same exact problem. No matter what you do, you'll be sorry in 5 years.
Have you tried working on (and deploying) your own projects or contributing to open source projects?
Tried my own projects but companies don’t seem interested in those. I got hung up on when I said none of my programming experience was professional once. This was a recruiter. I’ve tried looking for open source projects but all Google gives me is people asking about open source projects.
Did you try to look at github? 
Yeah all I get are language repos. I clearly don’t know the right words. 
I don't see how it has better performance. Also, it's too verbose for its job. Linq is much better.
Did you try the link the other person sent you 6 days ago? When asking about open source? Github even has instructions on how to start contributing to open source projects.
i had to take a shitty job in support for less than half of minimum wage and work my way up from there.
I’d even take that. However I’ve not seen anything like it.
I care about first class functions, because they're a language feature I use all the time, in C# and in JavaScript. Closures are also really useful and something a lot of languages do poorly. They're advanced language features that actually make a difference. And a strong package ecosystem is also a good thing, one a lot of languages do poorly. The syntax of JS could be better, which is why I said it was reasonable. Beyond that, aside from a few weird coercions which are far from unique to JavaScript the language is fairly consistent. Strong typing can be added trivially to the language using typescript as a super set if that's what your want. And jesus christ are you really calling Eclipse highly performant? That's what Android studio is. It's eclipse, which is a bloated pig. I'm not a huge fan of atom either, so what? 
The client can't be simply separated by type it has many 'unique' methods that don't fit the standard add/update/get like : `public List&lt;Student&gt; SearchCustomers(string areaWkt, DateTime? minAge, DateTime? maxAge);` There is also login and account management in the client. &amp;#x200B; To clarify further...I need is to take about 30 methods(out of \~70) and reduce them to three. But Your suggestion with the builder pattern gave me an idea. I could use reflection to build the Dictionary&lt;Type, string&gt; by using the inheritance tree of the objects. The downside is, I still have to alter the objects by inheriting from the same 'empty interface' (dedicated just for the clients usage). I'm also basing this approach under the assumption a class name to end point translation is uniform uniform(Student-&gt;"api/student/") which might not be the case and could lead to problems in the future... &amp;#x200B; I think using Custom attributes is the the best option at the moment.
Avalonia is basically WPF for .NET Core, with some of WPF's styling and databinding annoyances addressed.
How about you do. A regular recursive traversal won't fill up 4 GB of RAM in a second, it has to be bugged, which OP admits. Bugged recursion will fuck up pretty much anything. 
Lie. They ask for 5 years experience with 2 year old technologies they developed in-house for entry level positions, just play the same game they are.
Yeah I agree WPF code gets messy most often than not. It's a really cool piece of tech if done right, the problem is the "done right" part. The nice thing in WinForms is that it doesn't try to be complex, so even bad code is simple code. Like "I know it's going to be bad so at least be simple". 
&gt; a dirty asshole of a language I've never seen this term being used to describe a programming language. PHP is really... unique.
What you describe perfectly fits the first solution I proposed. When you need custom methods you simply implement them in your XyzClient. You only need to think about what should be done in the BaseClient and what should be done in the XyzClient implementation. Things like the standard `T Get(int id)`, `IList&lt;T&gt; GetAll()`, `T Create(T x)`, etc. should be in the BaseClient. Then you implement, for example, a `StudentClient : BaseClient&lt;Student&gt;` class in which you can add custom functionality like `IList&lt;Student&gt; GetAllWithMinAge(int age)`. (Simply store the endpoint in a protected variable in your BaseClient constructor, and append the path in your functions)
That's why I made it clear that it wasn't an exact match, but may point in the right direction. 
Get on LinkedIn and whatever other job posting resources you can find and start blasting out applications. 10 a day at least. While you're doing this, look closely at the job requirements and make slight changes to your resume to fit what they're asking for. Try to ensure the language on your resume matches what they're asking for in the posting. If they want "C#, SQL Server, and HTML" don't just have ASP.net on your resume...break it out so all the requirements are listed individually ("C#, SQL Server, and HTML using ASP.NET"). Also, have someone review your resume so you can be sure you're not missing anything "obvious". Good luck!
https://up-for-grabs.net You can filter by .net or c#
&gt; Every function call allocates memory, even if you don't actually do anything in the method. What, where did you get your information? Function call doesn't allocate anything in Java or C# nor in most of the languages. Call might (not always) reserve space from stack, but that's it. Because there are so many JavaScript engines, maybe there are engines that allocate when you call a function. But that sounds pretty odd to me if some of them did.
Take your upvote, dammit.
That's one word for shitty, yes. It's objectively the worst language I've ever used. The fucky truth tables, the silent errors, the "return a thing or false if error" craziness of the built-in API, the fact that you have to have the shitty autoloader system to make up for the fact you can't have a real 'project' of files, the inconsistent APIs, no generics meaning you're forced to write collection/iterator objects if you want type safety for a group of objects, the fact that `call_user_func` etc. exist at all....it's just got so much 'bad' baked into the core of the language, that even using it in a clean way still feels dirty.
Gtk3 bindings right here: https://github.com/GtkSharp/GtkSharp They work pretty well right now, and use glade (so you can dump the stetic stuff). Works very well in .Net Core/Standard as well.
How does this feature work?
How is your attitude and communication skills? Are there are any bootcamps in your area that provide job after completion? 
Have you done any of the Microsoft certification tests? Ultimately, the content on the exam is not always up to date and often not always super relevant on the day-to-day but the certifications themselves are valuable to companies which are Microsoft partners trying to obtain gold/silver status in the Microsoft partnership program — giving them access to more benefits etc. Once you get the certs, you can find some smaller Microsoft partnered consulting companies in your area and try to get a job there. They are usually hiring because the work is very fast paced and turn over is high. People tend to get a few years under their belt and then move on to a less demanding gigs. The jobs are usually are not easy because you are expected to have all the answerers for clients with usually very ambiguous requirements in fairy chaotic environments with a lot of pressure to deliver on time and on budget. The upside is that in these environments you tend to learn a lot very quickly and stay on top of things. 
How do I get people to look past the fact that I have no experience though? That's the first thing they look at with me, I've always assumed that's my problem not my resume. 
They're fine. Nothing with C#. There's one with Python though, but sadly I can't afford a bootcamp considering that most of those are very very expensive. 
Try unit testing your monolithic WinForms app, then tell me it is "cleaner" than a proper SOC pattern. Sure, it may be a little faster to MVP, but the maintenance costs are insane due to the lack of testability. 
Admittedly I never learned to unit test UI logic, in my mind I don't even understand how and what it would accomplish to unit test my ViewModels. So I can't argue this point.
Maybe you live in the wrong area for C#? 
&gt;I've done exactly this for an API that I developed. I made the mistake of having a endpoint property. Use an attribute instead. I won't be doing that. Although I still don't see the difference between a property and an attribute (If the property is encapsulated and read-only)... &amp;#x200B;
Yeah but there are thresholds. 3+ years of professional .Net experience can get you in the door at almost any place in Indy if you actually know what you are talking about. Have you looked for internships to gain that experience or contract work? Just because C# is in demand in your area does not mean they are looking for newbies unfortunately. 
If nothing is working, find someone you know (preferably not immediate family), maybe a small business owner, who needs some techie thing done, eg: track the items they are selling. Be up front about why you are offering to do it (because you need to show experience in your resume). Do the project in the evenings over a month while you're still looking for jobs and let them even pay you with a pizza if they're not sold on it. Put some effort into scoping it to something deliverable. However, it doesn't really matter if they don't even end up using it as long as they are willing to put in a good word for you and you gained experience in the process. On your resume you have a one month internship where you developed an Inventory Control System for a customer. You put bullet points for that job which allow you to sell yourself during the interview, so that during the interview you can tell them that you gathered requirements, designed the system, developed it independently, tested it, delivered it, maybe even maintained it. Maybe you were agile about it and got frequent feedback. You learned about technology [x]. You faced the hurdles [y] which you solved by doing [z]. You improved the efficiency or whatever of the customer and everyone was happy with it because [I've run out of letters, I should have started with w]. Add the number of the person you did it for as a reference. I've known that to work. also as u/crazyeyes420 mentioned get someone to give you feedback on your interview skills. That'll probably help way sooner. Good luck!
Is ClickOnce completely out of the picture already? We still use it internally and it seems to handle installation and updates really well. I believe you can also specify prerequisits such as .NET framework version etc.
Most of what I see isn’t asking for many years experience. There are a few but it’s generally between 3-5 years. I don’t apply to anything that is more than three. I never see any jobs anywhere that want 1 or less.
Since you have no workplace experience, treat your projects as your experience. I'm not saying to lie and tell them that you did them at a job but if you've done any impressive personal projects you should focus on those. Incorporate any concepts that you'll likely be using be using on the job into your projects and reference those during your interview. You do have experience, it's just not working on a professional level. The way you phrase things will effect the way that your interviewer will look at this too. Try to keep the focus on everything that you have done instead of everything that you haven't. 
You should potentially look for Junior or Entry level .Net positions. Within a short time if you are good you will get promoted in no time. 
So you want to make a generic repository, just backed by your api instead of a relational db. All the usual advice about generic repositories applies.
What database engine? Because usually the length is characters, not bytes.
Also; https://www.firsttimersonly.com/ https://www.codetriage.com/
&gt;$"{provider.ToString()}{StringConstant.Connection}" I don't think this has much to do with reflection, the string is almost certainly the main cost. Even if you *have* to allocate a new string, using string formatting like this instead of concatenation is wasteful.
I'm actually using the Merge function now and it's been working nicely. I have a question about the dataview though. When I need to update the grid, I fill the datatable again, reloading everything, hence the problem with the selection. Would I still have this problem if I use a dataview? 
I use squirrel to deploy a 4.7.1 app so you can be sure your problem is not that your app targets 4.6.1... As described somewhere in the documentation the lib/net45 folder has nothing to do with the app .net version. When I implemented squirrel I had to read and re-read the documentation several times to get it right. I do not use the GitHub update method, but I checked in my code if it was available and it is. Make sure you use the static method to create the updatemanager: UpdateManager.GitHubUpdateManager. Once you get it running it really is a quite good solution. I have it deployed to over 40 PC's now without issues. Some suggestions: \- Use SquirrelAwareApp.HandleEvents to handle installation events in your app. It makes the integration tighter and you have more control this way. See overhere: [https://github.com/Squirrel/Squirrel.Windows/blob/master/docs/using/custom-squirrel-events.md](https://github.com/Squirrel/Squirrel.Windows/blob/master/docs/using/custom-squirrel-events.md) \- Check your nupkg to see if you created the package right and all your assets are in there. A nupkg is basically a zip file so you should be able to view the contents if you rename the nupkg. &amp;#x200B; &amp;#x200B;
Finding the coolest funnest open source projects for yourself that is useful and start hacking code, and give references to the repos in ur resume. Perhaps aspnetboilerplate is a good one?
&gt;Make sure you use the static method to create the updatemanager: UpdateManager.GitHubUpdateManager. &amp;#x200B; That was it, thank you so much! &amp;#x200B;
Age should not matter but it.... Surprise! It o does. E.g. if you are 50 yo and have no professional programming experience, you'll have very hard time. If you are 50 yo and have experience, you'll have a harder time then 20-30 yo. I am learning, as I get older, that Programming is a sport. Companies prefer young people with more stamina and better memory to abuse with 60-80 hr/wk schedules. That said, you should make sure you don't have any red flags in the resume. E.g. a hole of 5 years without work. Lawsuits with previous companies. Also being self thought is a disadvantage cos you can pick up a lot of bad habits and professional programming is all about good patterns and consistency. Final advice. Look into sites like leetcode and hackerrank.
That looks amazing! Nice find :)
MonoDevelop is an IDE, but it's not a GUI library.
Go to your pal who is doing business. - Hey Mohammad, what accounting software do you use? - Uhm... Excel?.. - For selling kebabs?! Hey, I'm developer, I will make you just that software you need! You like it - you pay for it! Deal? - Uhm... Dunno... - Hey, let's count your time and expenses and you cut me 30% of economy plus you give me recommendations. Deal? - Bro, you got a deal! *** Congratulations, you now have professional experience.
I'm 37, nearing 38. Nothing that I am aware of as far as red flags, I worked 17 years for the same place before deciding to try going professional as a programmer. I always thought of that as a bonus, but maybe it's a drawback as that's the only thing I have on my resume. The more and more I hear I feel like I may as well just go back to soul sucking meaningless jobs. 
Don't give e up. You got a lot of good advice and work to do. Also if you worked a long time in a field, try to sell your expertise in that field. Is there any automation or improvements that you would I introduce in your prev job? Start doing it.
You either need to increase the column size or validate the data so they can't enter over a certain amount.
You have to build your own path, contributing to open source projects is one of the most valuable things you can do, a Github account is the best resume ever, look for open issues with the label *help wanted* or *good first issue* and you will be collaborating with projects of any size in no time. Also, remember this: **your network is your net worth**, go to conferences, talks, hackathons, meet other developers, you never know who will be helpful in the future. If you have some friends who are developers like you start a new project with them, learn how to work in a team, solve a problem that you hate and show your app to other people; build a website and talk about you and your work in there, people will be interested and can contact you; keep your Linkedin account up to date, a lot of recruiters are looking for developers of any levels every day; participate in communities like StackOverflow and MSDN forum, helping others is a great way of growing as a professional; create a Youtube channel and upload videos about common problems with some tool/framework, do live codings, teach other people, all this make you more valuable in the market. There is a lot to do but working hard every day you can achieve whatever you want, sometimes is a matter of looking. Good luck on your journey!
You want something entry level. When they ask for 3-5 years experience they are looking for 3-5 *professional* experience. Time spent learning on your own won't count for much, there are so many other "things" that make up professional programming that you won't learn working on your own. Stuff like working with stakeholders and project managers, deployment to servers, etc. 
I may be wrong (I'm still fairly new to openxml!), but at this part; `cell.Descendants&lt;Text&gt;().FirstOrDefault().Text = dt.Rows[i].ToString();` you are converting a actual row to a string, which is why you may be getting "System.Data.DataRow". Would it work if it was something like; `dr.Rows[rownumber][rowcolumnnumber].tostring();` so `dr.Rows[0][1].ToString();` &amp;#x200B;
Keep in mind that the subject of the projects you advertise on your resume is important: a project that advertises how great you are at natural language processing might demonstrate your potential but if your prospective company is looking for an embedded systems engineer for their missile guidance system, you'll come off as irrelevant. A common fallacy applicants tend to assume is that companies will hire with the mindset "He's good in subject X but maybe he'll find a way to transfer it to our industry, subject Y". This in mind, you should ask about what the day-to-day responsibilities are for the positions your companies are trying to fill. Then, qualify yourself (but don't bullshit either if your experience is not at all related). Their disinterest in your personal projects tells me that your projects, however impressive, does not provide enough insight for them to estimate your contribution. 
Ngl, I used a recruiter agency. My programming experience was literally just 2 java courses in uni but I had a math degree and interviewed with them and after they paid for me to follow classes. Additionally, they paid for me to take the msft C# certification. Honestly after I got the certification I started to slowly get messaged on LinkedIn by receuiters. Downside is that the pay in year one is shit, a lot of money goes to they agency who rent me out to other companies. However with experience and certs in hand, I'm very confident I can negotiate a really good salary at the end of this. So my tip is basically, consider getting the microsoft certification. People on here will be like "well I have 20 years of experience and never needed it" but truth be told these people have no clue how hard it is for millenials getting our first job and in the end getting thing that look good to HR and recruiters (certs) are more important than good pull requests and will net you more interviews -&gt; more chances doing well at those -&gt; more chances of getting a job. Spending time getting a github portfolio is only a good way to spend your time after you have some experience, where you're looking to branch out into more interesting jobs (as opposed to just any job you can get).
No job that I've ever seen is "0-3 years experience." So I apply to the closest that look like maybe they'd take a chance on a new guy. If there are such jobs I'd love to know where to find them. They all want between 1-3. What you suggest is that they won't even look at me if all they're looking for is 1. It's a catch 22. You gain experience by having experience. 
I don’t fully understand what you’re doing. Are you making a desktop WPF Application that somehow has access to your database? Or are you making an Webapplication with something like asp.net? 
if employers arnt willing to look at your GitHub/bitbucket account, then you wont learn too much when your there, so maybe no great lose. &amp;#x200B; Keep at it, while your waiting keep expanding your skills, try Xamarin, react , azure devops, often a breath of skills will help you hit the sweet spot employer are looking for. &amp;#x200B; also (in case you havent) try [indeed.com](https://indeed.com) , they tend to have move varied jobs. &amp;#x200B; don't worry too much about recruiter they tend to be your best friend or your worst enemy and nothing in-between. &amp;#x200B; Lastly , where are you based?
Sorry, it's a desktop app on my laptop that simply executes SQL commands to my database, which is on a server.
If `System.Timer.Timer.SynchronizingObject` is not set to an `ISynchronizeInvoke` (which is only supported in WinForms by default), each time the `Elapsed` event occurs it is executed on a random thread from the thread pool. A synchronization type that works well with `async` is `SemaphoreSlim`. Just be sure to release the semaphore in a `try finally` block. Alternatively, instead of opening and writing to the file from multiple threads, you could use a thread safe queue (e.g. `BlockingCollection`) which all threads insert their messages into, and start a single thread which writes messages from the queue to the file.
There are some nugets for handle the windows 7 taskbar aoi, for example, you can add buttons to the preview window in the taskbar. 
&gt;reserved Take back everythnig I've ever said about recruiters, I'm a dev and this is pure gold. If I were you I'd follow that word for word 
South Carolina, from my understanding there's not much of a tech market here. 
The idea of the app is to serve as kind of an interface to interact with my database with (as an admin). So that I can insert a new entry, alter existing records, show me what it contains, etc. I want to lock it down so that if someone gained access to my laptop, they couldn't just open the app and start hacking at the database, hence to login system. 
Thanks, I'll take a look at it.
To add to this if you want to be more normalized you can create a Network table (HBO, Showtime, etc) and then add a foreign key relationship to the Series table as well. 
Nice, thx ;D &amp;#x200B;
Well, its a step closer! Looks like it's not iterating through the loops quite right. I can't share my own code unfortunately as I'm not on my pc, but it looks like your not too far off it being ok.
While WinForms isn't dying, I believe new developers' time is better spent learning WPF. Curious if you agree. 
Doesn’t every database today have some kind of management application in which you can actually do all that? If you actually want to program it yourself, I don’t know enough about WPF to tell you how to handle that. On the other hand, an ASP.NET application could also do the trick and offer you build Authorization and Authentication mechanisms. This could be considered, cause when you’re talking about database access it sounds like you’ll always have a network connection and not actual need for a desktop application. 
Yes, I know. That was why I asked if there was a way to hide the credentials in C#; with PHP you could just lock it down and everything is server side anyway so there's no way, but I can't do the same for C# naturally. Any ideas?
Why not just require the user to enter the credentials for the database? Any password validated by the application itself is ultimately just cosmetic. The only reasonably secure alternative would be to encrypt the database credentials with a key generated from the password the user enters in the app. But that poses a number of issues to consider such as brute forcing and revocation.
It might to be useful if you save it for the future generations on files.fm, I think.
For sure! I could also learn ASP.NET for this, as it seems it's not possible to do what I want securely judging by other comments. Could you like me some basic guides to ASP.NET? I know C# fairly well, syntaxwise, I just haven't used it a while :P
I’m guessing that if you want to do it with a desktop app maybe Java is more of use for that requirement? Regarding asp.net core, the Microsoft Docs guide you really good for a beginning. (They Plan supporting WPF/Desktop application as if version 3.0). In my opinion the first question is: do you want/need a multi platform Web application that can be independent of IIS or do You want to go with an ASP.NET application that runs on IIS? If you choose the first, look at ASP.NET MVC Core 2.1 https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.1 If you choose the latter then ASP.NET 5 MVC https://www.asp.net/mvc
Yeah it's fairly hard. 
You specifically targetted "pros", which probably isn't me. For myself, this one would take awhile because I'd need a high level understanding, and this seems decently complex. I'd say something like this is in the upper tier in terms of difficulty to understand. Assuming "understand" refers to a level which you could contribute. 
Thank you! Honestly, it doesn't matter what the implementation is as long as it's C#. I'm trying to get better at each of the labguages I know and complete a few projects with them so I have something to show for it. Prior to building the website the database is for (~6 months ago) I was pretty decent with C# &amp; Java but i've kinda forgotten them. I even built a startup manager with C# (the github for it is still up) but that was built with Winforms. 
Pick what looks like a small bug, try to fix it. You will gain an understanding of that part of the project. Repeat. There is no "normal" or "standard" with open source; you can't really generalize like this.
No problem at all. I like your attitude about it and that’s how a programmer should think. I’ve seen enough who don’t get that at all, unfortunately. And Winforms is still as good as WPF. WPF was supposed to make Winforms obsolete, but it never happened and they “live” side by side as far as I know. Keep it up and have fun with tour project 
I like to start small. For example, I find a bug that seems fairly easy to fix, locate the relevant code (very easy if the bug is an exception) and look only at that part. Occasionally, the fix won't be obvious, so I keep investigating until I figure out something that looks like a good fix. With this approach, you don't need to understand the overall structure of the code, you learn it piece by piece.
Oh I have ;) Outrageous in what way? I know its massive, is that what you mean? 
A ASP.NET webapplication is technically C#, but no, you cant hide credentials in a desktop application.
I'm more trying to get a feel for whether or not a "high level" documentation for an open source project is common. I did find [Roslyn](https://github.com/dotnet/roslyn/wiki/Roslyn%20Overview) since my OP, and that has exactly that. 
Thanks!
Good documentation is not common outside of larger projects.
You've piqued *my* curiosity. What are your personal projects?
First time I've seen the size of a git repo turned into an innuendo.
Because it's not information about an object (a property), it's metadata about the class (a class attribute). It also costs memory allocation for every object. 8mnnot saying it won't work, of course! You COULD return it from a function, that would work too. It's just not the convention.
Lie and lie some more make a app in Xamrin put it on the App Store and boom there is your professional work. 
Well, that's a valuable skill to have among introverts ;). Don't give up. I found myself looking for a job not too long ago as a seasoned developer and I kept failing. I was down for the count and all of the sudden I got 2 company on a bidding war to hire me. I heard this story from sever at other people. Just stick to it. Software development is also like playing music. You have to practice every day.
Yes, you can use jump instead, but you still need to know where you're going to jump back to, you can, in some circumstances avoid a whole stack frame, but you have to store that somewhere, even in C#. And a stack overflow exception is an out of memory exception, I'd honestly forgotten just how low it is, bevause I've never actually triggered one, but it's still caused by memory allocation. And as to who codes C#, how about the fact that C# doesn't actually do tail call optimisation anyway. 
Yea..that's definitely a valid concern. But the client users are developing a user interface and the triggers for the methods are manual... The user has to click something after filling a form. I'm not too worried about reflection performance in this case.
Nice to be helping such a polite person :-)
Sounds good. Good luck.
Do you have a bachelor's in software? At my employer you can't even get an interview without it, and we're constantly searching for software developers.
https://developer.android.com/training/auto/
Contributing to open source projects is bullshit advice for people with no experience. It is super hard to contribute to any meaningful open source projects because the bar there is very high, usually higher than the bar at work. You also need to find your way in other people's code which is one of the hardest skills to acquire. People who have it have jobs.
Often times adding good documentation to an open source project is just as valuable as fixing a small bug.
It is quite likely that you run into age bias at this age. Although it is entirely possible to break through this barrier it will be much harder than it is for candidates in their mid 20s. To be fair I am not sure how it is done. We once hired 40+ year old ex fighter jet pilot for a business analyst/QA role with no prior experience because he seemed to be one that could learn and in general a nice guy. Turned out we were right but I can't recall him doing anything special. We wouldn't have hired him for a programmer though because he simply didn't have the skills although he did some programming. Maybe one way is to try to make your way to a less demanding position like QA/Automation QA and them move to programming. It is hard to say though since you have not linked any of your projects so we can't judge your skills.
Just shooting out here to say: I relate, I would really like to contribute to some emulators but I don't think I'm at that stage yet :)
This project is professional level. With 20 years experience, I would likely not be able to make meaningful fixes for minimum 3 months (480 hours), actual complex feature enhancements... probably like 9 months (1440 hours), and really no full project wide understanding until at least a year (2080). Timelines above are estimates. Could be faster. One thing though: I haven’t dived deep in a decade, so I’d have to relearn things I have forgotten, and try to figure out what has changed in 10-20 since I learned this. You may want to start with a smaller project, however if you do this one, you’ll have to stick with this for 2-3 on a part-time (20 hour a week basis), IMHO.
The guy says he's 37. He probably hit an age bias. It will be great if you can give any advice on how to work around that.
Active Desktop was fucking awesome, but it was still just Internet Explorer under the hood. We have better options than IE these days.
When I can't wrap my head around a codebase I'll create a new project and build a simplified version of it. In my limited experience it doesnt take too long before you gain a rudimentary understanding of what the authors were going for. 
I can tell you why this became a "norm": because web-based stuff is trending and with electron you can easily go from web-app to desktop-app or from desktop-app to web-app. And you develope one app for...how many devices? Well, let me count.iOS-Devices, Android-Devices, x86-Computer with Linux, BSD, Windows or OSX, ARM-Devices like the Raspberry Pi, maybe even consoles? Basicly any device that has a browser and supports the stuff needed for your web-app. And even if you don't make a web-app out of your electron-app, you got a program for at least Linux, Windows and OSX, which is pretty nice. Why is web-based stuff trending when clearly devs would prefer otherwise? Well, that's because our target-audience for programs are not devs. Its normal people. Normal people nowadays don't want to download every program anymore. And they also want the same application for all their devices. That's why Google-Docs is a thing. It lacks features compared to MS Office, but...i can edit my files on a tablet, on my linux pc, on my windows pc or even on my smart-phone. If i would use desktop-apps, i at least would need to use 2 programs, which aren't even 100% compatible, if not more. and electron is nice to have as the users who want a desktop-app get one. and you maybe could include more features that wouldn't be possible in the web-app. Oh, and should we talk about the lack of other Xplatform stuff? if you want to give a good experience to all your users, you still don't have that many options. so, as long as you don't give me or everyone else a way to create modern, 100% Xplatform compatible code and software, which also makes it easy to convert it to a web-app, this trend will go on. If you hate it, start working on another solution 
If you're not getting to the interview/techscreen stage, it seems likely there's something lacking in your resume or cover letters. While this *could* be directly related to your qualifications, it could also be that you're not presenting yourself the right way. (Since you haven't indicated what experience you *do* have, it's a bit hard for me to guess which it is.) I'd suggest that, in addition to everything else, you should get help reviewing your resume and other aspects of your applications. 
&gt;Contributing to open source projects is bullshit advice for people with no experience. It is super hard to contribute to any meaningful open source projects because the bar there is very high, usually higher than the bar at work. The premise of OP's post is that they're capable, but have trouble proving this when applying. *If* this is truly the case, then contributing to open source projects would be great precisely *because* the bar is higher.
The stack is memory, it's a special kind of memory, but it's memory. I argued that functions allocate memory which they absolutely do. More importantly though, I'll bet this recursive function didn't accept no parameters and return nothing, I'll bet it made a heap allocation. I also argued that a fucked up recursive algorithm will kill any language and it will. You want to shit on JavaScript, but you're full of shit. 
I would be the first to admit that I don't have a clue to properly sell my skills. I've built faux websites both front end and back end, and some desktop apps, none of them has been for anyone. More than a few probably aren't worth putting on Github and were written long before I knew of such a thing. My problem is, what keywords do I use, how do I avoid repeating myself, because I felt I only had like two ways of describing the fact that I have a pretty solid understanding of C# when it comes to application writing for example. I focused mainly on WPF and .Net Core, with brief exposure to winforms. I've also developed a pretty strong understanding of how to put together Angular applications as well, as that seemed a popular choice for .Net front end. Would being bilingual French help my cause at all? I learned it on my own for no other reason than I thought it'd be fun, and useful. 
man, I don't know why this isn't upvoted more. have an upvote!
Emergency room, the most important kind 
Many open source projects could use a contributor to help on documentation. 
&gt; someone with some more experienced eyes on what I wrote to just double check that this will work when the database gets created. Point it to an SQLlite file or test database, only one wat to find out ;) public class Locale { public string Name { get; set; } public ICollection&lt;Realm&gt; Realms { get; set; } } public class Realm { public string Name { get; set; } public Locale Locale { get; set; } } Then (keep your model building in your context itself unless it's getting too big) OnModelCreating(ModelBuilder modelBuilder){ modelBuilder.Entity&lt;Realm&gt;().Property&lt;int&gt;("Id"); modelBuilder.Entity&lt;Locale&gt;().Property&lt;int&gt;("Id"); } Unless your own logic needs to reference realms and Locales by Id it's better to instead use whats called a "shadow property" that entity framework manages behind the scenes. These shadow Properties also handle foreign keys for you so there's no need to explicitly define those either. As each Entity has an Id Property(that's hidden) it's smart enough to define your foreign keys itself. look into ef core conventions, only move to attributes or the fluent interface when necessary(my preference is fluent 100% of the time) This should be a goal for any of your entities, notice how neither class has any indication it's a database table? To further clean things up, unless you need to access realms from a locale you could remove the Realms Property (everything behind the scenes will be the same).
Both of those Fluent API blocks look perfectly valid. Perhaps you are already aware of this, but both of those are superfluous. EF Core will set up your one-to-many relations automatically. As long as you include either `Realm\` or `Locale` in the model (via Fluent Api, or defining a Set in your DbContext (eg `DbSet&lt;Realm&gt;`), EF core will follow the relations and build automatically build the relationships. Their are only a few exceptions where you need to use the Fluent API (eg many-to-many relations). Adding static `BuildModel` in the class increases your class coupling because now all your classes are dependent on ` ModelBuilder` . I agree its nice to see the fluent API right with the model, but as I mentioned above, you rarely actually need to use the Fluent API since almost everything is handled automatically. 
&gt; can't do UI without reactive javascript libs anymore. &amp;#x200B; Because they have no choice. Trust me, if people had a native way to build cross platform UI's that seamlessly work across Win/OSX/Linux, they would go for it. The reality is that such a platform is extremely difficult to develop, and even if you can (like Qt has done), its still an immense amount of work to try and skin the app to your desired look and feel across all platforms. Not to mention the infinite amount of OS versions and configurations you need to deal with. With JS/CSS your basically guaranteed your app will look pixel perfect on all platforms and will run as long as Electron/Chrome, etc. can run. &amp;#x200B; I honestly think HTML/CSS isn't going anywhere and is the future of apps. We just need webassembly to take off so we can actually build cross platform UI in compiled languages like c# and one day hopefully ditch JS altogether. &amp;#x200B; &amp;#x200B; &amp;#x200B; &amp;#x200B;
You are right . I should write a file with the neural network serialized
Rule 5 reported
Really, you've argued I don't know anything about C# and called me a troll and you're reporting me for saying you're full of shit? Really? 
Yes and Rule 5 reported again
I haven't read much, maybe one or two project overviews but I recommend [The Architecture of Open Source Applications](http://aosabook.org/en/index.html) _In these two books, the authors of four dozen open source applications explain how their software is structured, and why. What are each program's major components? How do they interact? And what did their builders learn during their development? In answering these questions, the contributors to these books provide unique insights into how they think._ It is of course a big effort to write an overview this concisely but I think that if a OSS-project would have such a guide, that outlines the problem to solve and how they have done it so far it would greatly increase the contributor rate.
Ok thanks! Will do this and post the result once done.
I mentor in one of these bootcamps. It's as true it can be. &amp;#x200B; We have a pre-test of basic programming knowledge. Then it's 3 weeks of work, then we judge you the first time to continue on. 3 more weeks of internship (now paid), again judge to continue on. 50% pass the first part by just attending. 90% pass the second part. &amp;#x200B; Our bootcamp is self-selecting. It's nothing like I've heard from you guys. Completely free (there is even a stipend for the best people), and then a junior position. We really need programmers here (near-shore consulting for nordic countries).
&gt; people's code which is one of the hardest skills to acquire. People who have it have jobs. Maybe he has the skills and the experience but could not convince HR people of that, hence could never gain the *professional* experience? Contributing to open source projects can also mean starting with documentation, fixing bugs or writing tutorials, doesn't need to be the really heavy parts.
Well I guess you can do it with pre-tests. I've seen it done this way. Quality people in quality people out. I live in Bulgaria and we have one academy like this which takes the best students but it is hard to get in.
It is not clear what you are trying to accomplish here.. &amp;#x200B; " Given a list of each Class Alpha, Beta and Delta. Match by the Id's " An object A of Alpha can very well have the same Id as an object B of Beta. Does A then match B? This is not very clear as well..
To contribute to an open source project, you start with open source projects that you *use*, find out where the code resides and how you contribute, and go from there. Many will be in languages you don't want to work with. Keep looking. But an open source project isn't the easiest thing to get started with before you get an entry level job. You should make one project of your own - something large enough that you could conceivably give it away and people might want to contribute to it as an open source project. Think "a tool to catalog all my MP3 files" or "an email client with built in encryption from an existing encryption library" or something of that scale. Just re-writing "hello world" won't do, make something too large to be an obvious demo, or your own really terrific web site that generates revenue from ads because people really want to see it. Then don't present it as "here is an application I wrote as a demo," present it as "here is a really great open source app I wrote," or "Look, my little personal web site generates $3,000 of revenue every year from ads alone." When they ask "how much of your programming experience is professional", don't answer the question, say something like "I think this open source app I wrote is professional," or "I think my web site that makes money is professional, as do its regular users". If you know this is the sticking point, have an answer or two ready, don't let them trip you up about it because you're ready for it. It may take you a good long time to find a recruiter willing to help. If you're talking to a recruiter who isn't at a company (I don't mean a recruiting company, I mean not working at the employer) you need to be a little more honest with them, tell them you're looking for an entry level job and to get into the industry, and you think you can do well in an interview but you need their help to get in the door. Tell them you would welcome their input on your resume (I used to have a different version for every recruiter because they would want it customized) and that if they want to do a practice interview you would value that both because you could get feedback and they could see that you're someone they want to introduce to their clients. I was trying to get into a new industry, and I couldn't get anyone to take me seriously. I finally found one guy who would listen to me. He had me in to meet me, shake his hand, and talk to me for a while, and he believed in what he saw. He got me my first good real job, and he has mostly done my placements for the last 20 years. 
Ah sorry, they're results from seperate database views. For example one is contact info, one is career info, both have PersonId 
First of all I didn't write anything bad about JavaScript when answering to you, it was another user. And you where clearly hostile towards me by calling me names, so you clearly broke Rule 5 for this subreddit.
You look for an entry level job - they are by definition designed for people with little to no experience. If you have anything at all on your resume - even a Wal-Mart cashier job - if you have described it well and shown you can identify the relevant business skills ("Gained excellent customer-facing experience. Helped direct customers to appropriate resources when they needed help.") then you are one step above the competition, some of whom have a resume that is a blank page with their name and phone number at the top. (Your resume should also list your personal projects and volunteer experience. Whenever you're working with a third party group, even if it's a charity or an open source group, list it like a job and list them as the employer. Even if it's an open source group for a project you started, list them as the employer. You don't have to mention it's unpaid unless they ask, then just say "this is charitable work I did \[for open source\]." Express it as that your time is valuable so you were donating it, so this is something you did deliberately to better mankind, not just to gain resume fodder.) 
I was thinking, does Serie table need a column named seasonList? A list of all seasons?
You have no faith in us! It's at least 2.7%
What name did I call you? 
https://en.wikipedia.org/wiki/Name_calling
Again, what name. Be specific.
&gt; I'm 37, nearing 38. Nothing that I am aware of as far as red flags It may not seem fair, but that's certainly a red flag. Late 30's and no professional experience. You're trying to switch into an industry that's difficult and takes years to build skill in. If I don't pick up quickly that you're passionate about it, then you look just like every other joe schmoe that didn't care much for their day job and heard programming was easy pickins with high pay.
Sheesh it doesn't have to be a name. You don't seem to know what name calling means, if you just read that wiki. Quote from there *Name calling is abusive or insulting language directed at a person or group*. Goodbye and have a nice life.
 using System; public class Program { public static void Main() { Console.Write("Enter your social security number: "); string socialSecurityNumber = Console.ReadLine(); int genderDigit; if (int.TryParse(socialSecurityNumber[socialSecurityNumber.Length - 2].ToString(), out genderDigit)) //You can add extra validation here for length etc. { if (genderDigit % 2 == 0) { Console.WriteLine("You are a woman"); } else { Console.WriteLine("You are a man"); } } else { Console.WriteLine("Invalid social security number"); } } } There is probably a more elegant solution, but this will solve your problem.
I am not really familiar with that type of code since i am very new to c# and just started my course a month ago, we've only done simple conversions of a string variable to int/double through: int a = int.Parse(Console.ReadLine()); or¨ int b=int.Parse(a); 
Not quite, as I'm using Xamrin Forms.
Well to tell you the truth, asyc and await is a thing we did not used frequently, we oftenly use Task instead. But it does not mean that we do not know how to use and impelement it. This is the thing that we are comfortable with (and it is already discussed internally). But since we are opening the library to the open public, then we will follow the community’s suggestion. In this case, we will follow you.
Are you **sure** you mean to **remove** the value? As a result you have a new string without the substring. Or do you mean you want to **parse** the value? The result would be the value "you care about". Besides: This looks like JSON. Why don't you just use the appropiate tool for the job, aka a JSON deserializer? Regex is the completely wrong tool for this.
&gt; Well to tell you the truth, asyc and await is a thing we did not used frequently, we oftenly use Task instead You're not using Tasks properly either...
The codes were not written if it is not suit to certain scenarios of course. And if you have a better idea, then better do a much better library. Problem is, you are passing through a hell of nice coding, memory efficient, faster library right now :). And of course, everything is not perfect and can be modified based on suggestion. Btw, once we have a Task on hand, it is our responsibility to manage it. And that scenario might not be suit to yours.
http://blog.stephencleary.com/2013/08/startnew-is-dangerous.html
To get started... int number = int.Parse(Console.ReadLine()); int withoutLastDigit = number / 10;
To get started... int number = int.Parse(Console.ReadLine()); int withoutLastDigit = number / 10;
[This answer](http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags) is technically for HTML but equally applies to JSON.
I'd try using a modulo operator, you seem to be familiar with that already :) var lastTwoDigits = personalNumber % 100; var secondToLastDigit = lastTwoDigits - lastTwoDigits % 10;
Console.ReadLine() returns a string, and strings are arrays natively. You can get the second to the last digit with `var a = Console.ReadLine();` `string c = a[a-3];` Then you can parse and do your math from there.
&gt; The full response from the request looks like this: &gt; &gt; {"d":"1|&lt;url to the document&gt;"} This is **different** from the data you posted in your question: &gt; "{\"d\":\"1" You should either provide **real** data, or example data that **matches the structure of the real data**. This would have been relevant for a Regex-based solution too. &gt; Now I read it back, the naming of json isn't accurate, it should be countResponse or something... Absolutely no idea what you mean with that. Nowhere did you mentioned a "`countResponse`" before.
Don’t know what AutoMapper is, but as I understand your question, you could take the first Alpha, then loop through all Betas and select one with a matching Id, then loop through the Deltas and select one with a matching Id. Then create a new Merged instance, then remove the selected items from their lists then start all over again.
You might be wondering why this library moves well and fast. Some features like multimap were removed and why we introduced Provider. First code written in Async was through async and was changed to Task before even 1.0 of RepoDb, it is because of some sort of usability internally. That time the library was buggy and does not have enough coverage of unit tests. We never use async on our code levels, and tasks is our way of doing it in our company. Though I am about to read what you just shared, but we sure task is good in parallelism. It is a matter of management and and of course preference. We are there and we know that Async should be async/await at all, but we rewriten it and might reimplementing it because of some sort of feedbacks. This is the truth and if this is wrong removing it, then that is fine! We can always correct it. I have a discussion with this one on one of the architect on our department. You might wonder as well why we are campaigning our Connection extensions over repository (where RepoDb stands for Repository+DB), it is because the power of library is in that object. One more thing, you have seen async issues in recursive query topic, where it is a far different topic. I would certainly expect other people would see some sort if features like interfaced based repository (to make DI compatible). And again, they were also supported before and were just removed as the library evolves. IMHO, this library is doing well for us and has a lot of things for improvement.
Additionally to my other response, for small JSON structures it's often not worth it to create a class, and LINQ-to-JSON can be used instead. var json = @"{""d"":""1|&lt;url to the document&gt;""}"; var result = JsonConvert.DeserializeObject&lt;JObject&gt;(json) .Property("d") .Value .Value&lt;string&gt;() .Split('|') .First();
And I can see it right now, even we used ‘async’ in our Async methods, you guys still would not use it as you fell comfortable already with the existing one. We are hopeful not to reinventing the wheel, but we are improving the wheel here. You might be missing the potential of this, even though we think we have proven it already with the result of respective bencher of FransBouma. But you know, people like lies and there is nothing we can do about it. For us, we willjust continue to listen and adopt to the changes based on the community needs. And again, I personally respect your opinion about async and we might implementing it again.
&gt; And again, I personally respect your opinion about async and we might implementing it again. Just lastly pointing out that my suggestion is not about async &amp; await, but about asynchronous operations in general. The same applies for using Tasks, which you do not use properly either.
Keep challenging us always! We like it and you are one of the biggest contributor here! :)
It might be better to realize this mapping inside database, using views (virtual tables basically). You can access views in the same way as if it was table.
Your question is really unclear, but why don't you just use linq joins? ``` contacts .Join(jobs, c =&gt; c.PersonID, j =&gt; j.PersonID, (c, j) =&gt; new { Contact = c, Job = j } ) .Join(addresses, x =&gt; x.Contact.PersonID, a.PersonID, (x, a) =&gt; new Merged { a = Contact, b = Job, d = a } ); ```
 var rawPersNumber = Console.ReadLine(); if ( "13579".Contains(rawPersNumber.Trim().Last())) Console.WriteLine("Hej pojke"); else Console.WriteLine("Hej vacker"); This assumes there is no garbage in input. For this particular case you really don't need to calculate but most people would..
No need to use a database for this, seems like this can all be done using a simple *session*. Simply generate a random, unique ID (a Guid) upon entry of your web form, store it in Session, and use that unique ID to store and retrieve the concerning file. 
It's not exactly productive to you if we just do your homework, the point of schoolwork is for you to learn. If you show us what you have tried so far and how you have tried to work through the problems you are having I'm sure people will be happy to try and help you. 
It's exactly 2.71828182845%
Are you looking for Tuples? It would help to have a definition of types Alpha, Beta, Delta
That's my point. Android Studio might be bloated but it's understandable since it's a huge IDE with additional stuff for Android developers, but look at Atom. It's not even bloated, it's not even an IDE, it's a text editor that you need 5 or 6 extensions to complete it to be ready yet it's slow as hell. That's the difference between stuff like Electron and the likes of Java/C#
Nah i think its about 2.14159273
Atom sucks, so what? VSCode is pretty awesome. Not every product on every platform is good. Eclipse is a bloated pig, super extensible, but a bloated pig. It also needs a dozen or so extensions just to be complete too. 
We agreed on one thing. VSCode is pretty awesome and if I didn't read about it before, then I wouldn't know it's Electron too. But one good apple in a hundred bad apples is not enough. Android Studio is a complete IDE and a huge platform to develop. Atom is just nothing compared to it, yet Atom can almost consume resources as if it's Eclipse. That's my point. 
Shouldn't it be `a.Length - 2`? Assuming an 11-character SSN like in the US: SSN: 123-45-6789 Length: 11 "Gender" character: 8 Character|Index --:|:-: 1|0 2|1 3|2 -|3 4|4 5|5 -|6 6|7 7|8 8|9 9|10 string c1 = a[a.Length - 3].ToString(); //11 - 3 = 8, which means c1 = "7" string c2 = a[a.Length - 2].ToString(); //11 - 2 = 9, which means c2 = "8" Am I misunderstanding something?
[removed]
"/s"
Thanks for this, this is along the lines of what I was thinking .. however the only caveat is that if the user closes their browser TAB or something crashes, then all is lost. I'm not familiar enough with [ASP.NET](https://ASP.NET) to be sure that the session will be kept alive on the server.
You could look at the override snippets C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC#\Snippets\1033\Refactoring\PropertyOverrideStub.snippet
Just FYI, you can inline `out` variables: if (Int32.TryParse(input, out int num)) { //use num }
Why this was downvoted? This is a very good solution.
VSCode shows that Electron apps can be good. This shows the problem isn't the platform, bevause the platform is capable of being good. It shows the problem isn't the language, because the language is capable of being good. It's not by any means the only good Electron app either. Sql Operations Studio is also great. Insomnia is awesome. Postman is great, though not as great as insomnia. Even slack is a pretty solid app. There are [tonnes](https://electronjs.org/apps) of Electron apps, and I'm sure a lot of them are great, though I've only used a few. The problem is that most people use Spotify which has a development process that could fuck up any language on the planet, and atom, which for some reason just sucks really bad. 
/me laughs in `{"d": "1|*&lt;url to the document&gt;*"}`
Maybe end with "I've tried nothing and I'm out of ideas!".
If you want to do this in code, this is the right answer. You could also consider constructing a view in the database to join these tables together to construct your Merged class. &amp;#x200B; I would also consider renaming your Merged class to Person, since the foreign key in all of these tables is PersonID.
Possibly for doing his homework for him when he showed no effort? Not really sure...
Nope. The problem is in Electron, there have been concepts like it in past and had the same problems appearently so they have been abandoned, but Electron although had the same downsides, is still used for unknown reasons. Postman is not great at all, whenever I try to write a route or something to test, it takes like 5 seconds just to allow me to write it and clicking on the button makes the program crush most of the time. Slack is a pretty horrible app(and by the confirming of many others in internet too, heck sometimes I wonder who uses that shit) There are no "tons of good Electron apps" the only good one is VSCode, the others are shit unless you can afford a very good computer just to run multiple Chromes in your computer.
Lol, even better
I'd avoid the file system, as it tends to make config, deployment, and other things a pain. You could put it in the db in a couple different ways. Option 1: put the raw bytes of the file into the db as a blob. You can essentially use the file as you're doing now, it's just the retrieval mechanism that would change a bit. Option 2: just parse the file and store the actual data in a database table. This would make things far easier to change.
Thanks, will definitely revisit this. Direct to point suggestion. Added it as a user story in our repository already.
Only with c# 7.
That isn't a good excuse to downvote a comment with a good solution. There could be someone else who wants to do the same thing but doesn't know exactly how.
Pm me and I can help you figure out where you are going wrong.
Your IDE is telling you why it's not working.
I hope you are kidding 
See all the red squiggles? these are places where your code won't compile because there are mistakes. If you look in the window in the bottom it shows you what the error is and if you google those errors you will find people with similar problems who have gotten answers 
I hope this is a sarcastic post, otherwise you are going to have troubles finishing anything in C# on your own... Anyways, you issues are: 1) SqlDataAdapter sda definition is missing a "new" after the = 2) Your SELECT query is also wrong: "select countE". That E should not be there. 3) Your "else' statement is placed in the wrong place, and the content to be performed if the if statement is true, is placed outside the {} You better read, study and investigate better before passing to code.
1. You probably want to mark navigational properties as virtual and use ICollection. 2. I always put Fluent API configurations in separate project (along with database context etc) called AppName.Data. I have a folder called EntityTypeConfigurations and each entity (defined in AppName.Core project) configuration will inherit from IEntityTypeConfiguration&lt;EntityType&gt;. I then add these configurations from overriden OnModelCreating method.
You could have a file of username, guid. Guid for the folder name and then it's pretty static.
Reported for violation of rule 4. You clearly did not show any effort.
1. Get your users in their own Active Directory group. [1] 2. In the database, grant that group the necessary permissions (db_datareader, etc) 3. In your connection string, use Trusted_Connection=True; This results in their domain credentials being passed securely to the database, where their group membership is evaluated. If they're in your app's group, they get the rights of that group. Benefits are that it all "just works", and you're not managing individual permissions at the database level, but at the AD server level, which is what it's for. [1] Often you'll have two groups - one for regular users and one for "admin" users that have elevated privileges 
ASP.NET Applications run on IIS as a Webserver and solely on IIS. You deploy it there. There are different ways to accomplish this and configure the IIS. ASP.NET Core applications come with their own WebServer integrated (kestrel is default, but I believe there’s also another one). That application can be run stand alone and just listens in the configured Ports or it can be set up behind another Webserver that then acts as an Reverse proxy. This means, you can run it on a windows server behind an IIS, or on a Linux behind a Apache or Tomcat WebServer. There are modules that handle this communication. In general an ASP.NET Application is the Server side part of the Web application that handles your requests and serves you the html views and delivers the Ressources you request to view in the browser. Does this clarify it a bit?
[removed]
Yes you do. Depending on your setup, it’s a normal website that is to be reached over a normal call to localhost and it serves you normal html
Or: `Console.WriteLine(((pn/10)%2 == 0) ? "Girly" : "Boyo")`
Just use a converter. Any online will work, I posted from mobile, don’t want to do all the work for you
Roger that, thank you :)
I wasn’t asking for a “conversion”. VB.net is t exactly a difficult language. I was merely point out: what is VB.Net doing in a C# subreddit? One of us is in the wrong place....
I'd wonder if a regex is the wrong tool. I mean yes, it is JSON, but what about all the overhead from the deserialization? If he needs a specific bit of text only, I'd be inclined to think a regex might be appropriate. If you model his response you get: public class RootObject { public string d { get; set; } } That just seems wasteful to serialize and deserialize. I can see the value in being consistent if he's already serializing and deserializing other requests.
Yeah, I didn't consider output as long as there was a way to get the number. You're very right about not always being able to control how the output is parsed. And yep, more complicated is more fun indeed, as long as it doesn't make it to prod :p Been doing some regex golfing myself as well to get better at it, it's insane how fast you learn by pushing your limits. Thanks for the explanation!
I have been creating some internal CRUD apps for the company that I am working on. Also a small PWA app hosted in Azure. My two cents: It allows a *very streamlined* development experience and it proved to be very productive! I loved it. If they keep it light and do not bloat it with features to try to compete with libraries like Angular and React, it can be the base for a fantastic framework.
Removed: Rule 4.
You should have reported under Rule 2 for being susceptible to SQL injection.
Removed: Not enough Silverlight usage.
When starting out, you can just add brief descriptions of the sort of projects you've done for yourself. When applying for my first job, I just had a section towards the bottom of my resume called 'selected projects' with a short list, in the format &gt;**Project One** &gt;A one sentence description that highlights the technology/skills involved. &gt;**Project Two** &gt;Another short description of about this length. You don't need to link or show the code for these projects, just be able to discuss them in an intelligent way if they come up in an interview. (i.e. don't try to bullshit them!) They're a way of laying out your experience in a concrete way. When applying for my first job I used a few of the more interesting projects I'd done for various hobbies. (I was in my mid-30s, with no formal or professional CS experience --though I did have an advanced degree in the hard sciences, which clearly helped.) &gt;how do I avoid repeating myself Just don't repeat yourself within a given section. If you're skilled in C# then: - Say this in your cover letter, and in the summary at the top of the resume - List it in the languages you know - Mention a specific project you worked on where you used C# - Include any educational experience related to the language The resume doesn't have to be super long, it just needs to clearly emphasize why you're qualified for the job. Your goal is for someone reading it to quickly see the claims you're making. (It's also especially important that you don't use any self-deprecating language.) [Here's an *ok* article about creating a tech resume](https://medium.freecodecamp.org/how-to-write-a-great-resume-for-software-engineers-75d514dd8322). If you haven't already, I'd suggest looking at *lots* of example resumes online. While many of the sites you'll find are essentially marketing bs for recruiting/hiring companies, you'll still quickly pick up on what the 'standard' resume might look like. &gt;what keywords do I use One thing you need to do 100% of the time is make sure any keyword listed as requirement in a job posting should be present in your cover letter. (And yes, that means you probably need to customize your cover letter per application -- it can be short, but it needs to be targeted towards the company.)
I don't know much about JSON, are different outputs like this really a thing?
But the output only differs by implementation I guess?
Sure. But JSON is also designed to be human readable and human writable.
Sorry, just a bad joke.
Removed: Rule 4. That's a lot of code to sift through. You'll have to better describe beyond "can't get it to work". What are you trying to do? How does it "not work"? Is there an error thrown? Is it possible to narrow down the portion of the code that's causing the problem and only post those relevant parts?
Yep, you're right. Thanks for correcting me!
that only adds a space, doesnt complete anything, but i disabled something relating to this.
For WPF you're stuck with IE without resorting to 3rd party controls, but you can get IE11 functionality with a registry key. When we get embedded UWP controls in WPF we'll have that option for Edge.
I haven't used it yet, but maybe give the new WebView a shot: https://blogs.windows.com/msedgedev/2018/05/09/modern-webview-winforms-wpf-apps/
Hmm yeah. Could've sworn this used to work. Never mind..!
It would be easier to get the character you want and then parse it. So int.Parse (str[str.length-2])
there are mentions of this function on google, maybe disabled somewhere. all the results leads me to stuff that i already have enabled tho :/
Okay, I'll check it later. Thanks !
I will take a look and see if I can find what I'm searching for, thanks u !
You can check out [api2pdf .NET's client library here](https://github.com/Api2Pdf/api2pdf.dotnet). What you would be looking to do is take all of your data sources, graphs, etc, and generate HTML. You can then send that HTML to api2pdf with that .NET client library to generate the PDF.
found it but i have no clue how this thing works. i'll look into this when i have time
The app doesn't but if you want to download subtitles, you can use [YoutubeExplode](https://github.com/Tyrrrz/YoutubeExplode) either as a library or use the DemoWpf project to download them.
Looks like you might be able to use Edge if you're targeting Win10: https://stackoverflow.com/questions/790542/replacing-net-webbrowser-control-with-a-better-browser-like-chrome/50285650#50285650 Chromium has several options available: http://cefsharp.github.io/ https://www.essentialobjects.com/Products/WebBrowser/Default.aspx https://www.teamdev.com/dotnetbrowser
Unsure if this is exactly what you need. But I remember this blog post on rust and c# interop. Perhaps a starting point... https://blog.getseq.net/rust-at-datalust-how-we-integrate-rust-with-csharp/
&gt;You might have overlooked the Recursive Query feature Whom are you talking to? &gt;One cool feature in RepoDb is the RecursiveQuery. All it is doing is to query the related child data entities. With this feature, you can also traverse back the parent. You should consider renaming this to 'nested' instead of recursive. In SQL Server at least, nested and recursive have different meanings, and you mean the former. &gt; This is very fast Is it? Are you doing a join?
Looks like an interesting article! Thanks for sharing. Although, it only deals with the C# -&gt; Rust side of things, not the other way around (at least, that was my initial impression after skimming through it). There's no shortage of articles on C# FFI, fortunately, that is, calling native code from C#, but the other way round is much more arcane, but it's indeed a nice starting point anyway. This isn't just Rust I'm looking for, either, C or C++ examples would also be handy.
&gt; You might be wondering why this library moves well and fast. Nobody is wondering that. If anything, this thread is giving people pause that the library is moving _too fast_ and should more effort into quality (or research) first. &gt; We are there and we know that Async should be async/await at all That's really not the point here. Database queries are largely I/O-bound, not CPU-bound. You're addressing the wrong bottleneck. Regardless of the specifics of `Task.Factory.StartNew`, what you're doing is pushing multiple tasks into a thread pool which then, in turn, all try to access the same I/O resource. In other words, in an effort to make your code more concurrent, you've actually made it slower, because the bottleneck with a database query is almost entirely _not_ the CPU of the querying process, but rather the i/O of the receiving database machine, and having the CPU wait for the disk multiple times at once won't make the disk any faster. OTOH, addressing the disk more smartly _might_, and certainly _will_ relieve the CPU a little.
Thanks for this. Just recently, the implementation has been reverted to leverage awaitable task.
@chucker23n - news, was not a part of this? rcsharp: "is for technical discussion of the C# programming language, as well as associated tools, libraries, news, announcements, events, and software engineering practices." Was not it for announcement or sharing tech discussions? If then, i will not post any updates from this library then. Feature is 'recursive' not 'nested' as it is doing recursive traversion of the relationships. We are not using join, instead we used direct SELECT query and followed by IN operation to query the child.
Nice article. I have a few criticisms/feedback, hope they help: * You're using xUnit but writing in an NUnit style. xUnit tests shouldn't have setup or teardown methods. There's a good explanation why here: https://xunit.github.io/docs/why-did-we-build-xunit-1.0 * Don't be afraid to write convenience methods like `SetupTodoWith(_testTodotitle)` * You use too much whitespace. `TodoControllerTest`'s constructor has a newline after every line. This makes it much more awkward to read and does not aid readability at all. There's a good section on using whitespace to aid readability in the book Clean Code, might help * Your test names are odd. For example, `Index_ReturnsViewResult_WithAListOfTodos_WhenSucceeded`- "returns view result" is not really necessary, and having a "when" at the end is confusing- to understand the test you expect to have the context prepended to the name, not following it. Also, the when isn't useful- when what succeeds? The HTTP request? The DB? It's unnecessary. I'd recommend following the given-when-then format, something like: `WhenIndexCalled_ReturnsListOfTodos`. You don't need to specify that it's a successful test case because the reader can assume that. Then you can specify which tests fail with a given- for example, a test of a failing case could be `GivenDatabaseOffline_WhenIndexCalled_ReturnsError`. * Your dispose appears to have a bug. It returns if `todoContext` doesn't return a `todo`, causing it not to clean up `todoContext`. * You don't appear to have any failing test cases. A fundamental part of testing is testing the behaviour of the software when there are problems. It'd be worthwhile demonstrating this. * The article doesn't explain TDD well. You do specify that in reality you'd have done each test separately, which is fair enough, but it'd be clearer to actually demonstrate it one test at a time with red-green-refactor. Also, there isn't any refactor step which would be useful to demonstrate. You do mention that the tests won't work at first, but you could emphasise it more- it's a _good_ thing that the tests are red first, that's a desirable thing. We want to know for sure that our tests do fail when they should. * Your article gives the impression that you write a test that is perfect first time and then write the code that makes it pass. [The rules of TDD](http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd) specify that you should only write as much of a test as is required for it to fail- this makes us take small steps in our code. Lastly, you might benefit from watching some of Sandro Munasco's TDD videos that cover a lot of this in a really practical manner: https://www.youtube.com/watch?v=XHnuMjah6ps Disclaimer: I've probably made a few mistakes above, apologies in advance. I hope it's helpful.
I'm in a bar, so my answer is going to be less thorough than I'd like, but this is an area I've been playing around with here and there in a sure project so I hope I can provide since helpful info anyway. Caveat: my experience is with pre-core CLR, but it looks like the core concepts still apply. 1. The expectation is that you have a thin, managed class that gets loaded into each AppDomain you create that acts as a proxy for the managed host. This is the "domain manager" you set on one of the native host APIs. You can call directly into the proxy (via a native side COM interface), or you can create function pointers to delegates using the Marshal managed class and call those directly from native. I prefer the latter personally. 2. Can't help here. I haven't used this particular API. 3. I pass a struct full of native function pointers that allow managed to call into native. I'm also using C++/CLI as my managed code, so this is just one of several approaches. 4. I think you're generally expected to go through the managed host proxy I mentioned previously. I don't know what you mean by query, but you can hold references to pinned objects though gcroot or GCHandle, and you can call into managed code from the native host API (ExecuteInDefaultDomain or some such). 5. I haven't used this specifically, but I assume it's similar to using the auto generated native thunks to call into manage in C++/CLI. I used this book to fill in some of the gaps and I'd recommend it as a useful reference. It's written for the non-core APIs, but understanding the processes and motivations will still help in understanding the newer revision. https://www.amazon.com/gp/aw/d/0735619883/ref=cm_cr_arp_mb_bdcrb_top?ie=UTF8
There is no "best" way from my point of view. It almost always depends on the problem. But for your simple case I would, for example, put the logic for comunicating with the API into a service, then have a business object call that service and do whatever it needs with the data. Let's say you want to use the reddit api to show statistics about comments for a given post. I would have a controller that calls GetCommentStatistics() from RedditBusiness class that in turn calls the GetComments() from RedditService. After RedditService.GetComments() returns the comments, GetCommentStatistics() will process them and calculate the statistics and return the result. I'm not sure if this is clear enough :S
Thanks a lot! This is very insightful, and definitely enough to at least give me some confidence that I'm not missing something obvious. Unfortunately, I don't think I can use COM in my project, since I want it to be ultimately cross-platform (hence the use of Core), so I think I'll go with delegates as well. You mentioned you use function pointers to delegates in managed code, and call those from native. How do you determine the signature for such a function pointer in your use case? I highly suspect it is more or less the same with the API I'm trying to use, so that would be helpful as well. At any rate, thank you very much! You've helped me out much more than you probably realize :)
I'm a fan of leaving the actual raw REST calls in a Repository and having a Service class call it and do the business logic with the data returned in those classes. If the REST interface changes or you have to move to a different data source, you only have to change the Repository. This also makes unit testing easier since you can inject the Repository into the Service when testing and you don't have to futz with mocking `HttpClient`.
I’m kinda confused by the question, so if this doesn’t answer your question I do apologize. You could have 1 “variable” contain multiple by using structs. Or even arrays and lists, or something similar to that.
I caution against storing files in a database as a blob. I suggest testing it yourself first with a few example files. I've attempted to store images in a database before and it was not a snappy experience as you'd expect. Backups are also enormous. File systems are designed for files. Databases are designed for data. I suggest doing what other applications have done: store the file on the file system, store metadata about that file in the database. 
I really can't understand why somebody would use CLI to manage projects when you could use a perfectly good IDE and save yourself half the time.
There is no code to show. It's as simple as: `long Count = 10;` `long Multiplication = Convert.ToInt32(CountS[1]);` `Console.WriteLine(Multiplication.ToString());` Which yields a "49" in the console.
Use int.parse instead of Convert.Toint32 Convert is giving you the ascii code of the char.
It's often helpful to post something that will compile, makes it very easy for others to play with. Even just a full method definition without the class and namespace stuff will do.
It's returning the ASCII code for '1'. Convert your character to a string before trying to parse an int
You're mixing the concept of String and int in the wrong ways. If you were to take the String "1" and consider it from an integer perspective, it would be a 49 based on the ASCII table. So it was correct even if it isn't what you wanted. What you should probably use is Int32.Parse() or Int32.TryParse() because both of those are expecting to return a numeric interpretation of a String rather than the numeric value that's under the ASCII representation of a String. 
Technically yes, what you have there is called a 'Tuple'. When you declare it as you did above you can use the following: rotation.Item1 //this is 0 rotation.Item2 //this is 500 rotation.Item3 //this is 0 &amp;#x200B; There is no overload on the GameObject.Transform.Rotate() method to take a tuple, so you'd need to do it like this: rb.Transform.Rotate(rotation.Item1, rotation.Item2, rotation.Item3); &amp;#x200B; Doing named variables in tuples is a C#7 feature, which IIRC was just added to Unity, or maybe it's still coming, they move quite slowly in updating their framework support. But if that's added/when its added you can do this: public Vector3 rotation = (x: 0, y: 500, z: 0); rb.Transform.Rotate(rotation.x, rotation.y, rotation.z); But in all honesty its probably just easier to use a Vector3, or just declare your X, Y, and Z variables separately. 
You're using ToInt32 on a Char, not on a String. It converts the Char value to int32, which in this case is 49. If you set it to do `ToInt32(CountS[1])` instead the output should be 48 because 0 is equivalent to 48 in ASCII. That is, you're converting not what the character represents (that is, a 1 or a 0) but rather its value.
&gt; Convert.ToInt32(CountS[0]) You're converting a `char` to an `Int32`, not a `string` to an `Int32` as you are expecting. The rules are different. Look up the [character 1 in ASCII](https://theasciicode.com.ar/) and see why the result is 49. Try `long Multiplication = Convert.ToInt32(CountS.Substring(0, 1));` instead.
If you have control over the API you're consuming, AutoRest and Swagger. Otherwise, I would create a reusable proxies library to make the calls and parse the responses. Then just consume it from your business logic. 
Abandon the winforms ship while you still can.
Why do you say that?
Just a note. You can also use anonymous objects. aka var rotation = new { X = 0. Y = 500, Z = 0 }. This works great if you an immutable and local only variable works for you.
yeah no kidding, there's still plenty of people that use it
What about Jetbrains’ Rider? I only used in on Windows myself, but I really like it.
The editor you recommended in the article (VSCode) is also a lot more than just a mere editor. It lies somewhere in between a text editor and a full fledged IDE - it even has IntelliSense! For me, it hits the sweet spot between complexity and functionality. It provides just enough of the features I need, and then gets out of the way.
VS Code?
Here's an example: https://stackoverflow.com/questions/7880850/how-do-i-make-an-event-in-the-usercontrol-and-have-it-handled-in-the-main-form 
I would recommend reviewing an actual example such as https://github.com/gothinkster/aspnetcore-realworld-example-app - I have some other links to example projects if this interests you.
Also check out https://github.com/navhaxs/media-control-deskband
That doesn't mean you should. It only gets security updates for the most part. It's legacy tech. WPF and UWP are most ideal for modern apps. It's like saying you're going to build a new website on webforms. You can, but you shouldn't.
I do agree, I'm just suggesting a possible reason for why he may have gotten downvoted by others.... 
Don't limit yourself with the tech. They all have their purposes and you should use them accordingly.
A function pointer has the same signature as the managed function that's being called, in my case. I have a native typedef the describes a function. A managed plugin is expected to implement a function matching that signature. To make it easier and help prevent signature mismatches I do a couple extra things. First, I have a managed interface with a function matching the expected definition. Then, my managed side domain manager searches for an instantiates classes that implement the interface. Then it creates a delegate from the interface function and finally gets a function pointer to invoke the delegate. This requires defining the delegate as well, which means I'm defining the same function signature in 3 places. That's annoying, but it's all in my code and not something plugins have to worry about. And the delegate can't get out of sync since it will cause a compile error when trying to assign it. Also, I settled on passing a 'context struct' and an 'api struct' to everything that crosses the language barrier which means I make changes to those structs and it doesn't change the function signatures so I don't have to go update a bunch of stuff every time the plugin api and there's not much risk of things getting out of sync. You're still going to lose some amount type safety when you cross the language boundary, but realistically there's not much you can do to avoid it. The code below is very specific to my particular use case, but it might be useful anyway. //Native struct SensorPluginFunctions { using InitializeFn = b32 (PluginContext* context, SensorPluginAPI::Initialize api); InitializeFn* initialize; }; struct SensorPluginAPI { struct Initialize { using AddSensorsFn = void(PluginContext*, Slice&lt;Sensor&gt;); AddSensorsFn* AddSensors; }; }; //Managed public interface class ISensorInitialize { b32 Initialize (PluginContext* context, SensorPluginAPI::Initialize api); }; public value struct SensorPlugin_CLR { #define Attributes UnmanagedFunctionPointer(CallingConvention::Cdecl) [Attributes] delegate b32 InitializeDelegate (PluginContext* context, SensorPluginAPI::Initialize api); #undef Attributes InitializeDelegate^ initializeDelegate; }; auto iInitialize = dynamic_cast&lt;ISensorInitialize^&gt;(sensorPluginCLR.pluginInstance); if (iInitialize) { sensorPluginCLR.initializeDelegate = gcnew SensorPlugin_CLR::InitializeDelegate(iInitialize, &amp;ISensorInitialize::Initialize); sensorPlugin-&gt;functions.initialize = (SensorPluginFunctions::InitializeFn*) (void*) Marshal::GetFunctionPointerForDelegate(sensorPluginCLR.initializeDelegate); }
I enjoyed using EF to create me a baseline controller.. then think of commonalities between each controller.. build a new class that interits the base level controller class and add stuff into there. For example Claims parsing to figure out which user is doing the access etc. 
1. Cross platform. I can use the same commands at home on my Mac, at work on my Windows machine or in deployment environments running Linux. 2. Can be automated. I can use the same commands in Docker files, in CI build steps etc. 3. It *is* faster. Admittedly, these points aren't all directly relevant for the task of creating new projects, but once you're familiar with and used to using the CLI, it becomes a no-brainer to use it for everything it can do.
C# is more OO, that isn't even up for debate. At all &amp;#x200B; Lambda expressions are great &amp;#x200B; You don't choose C# for a functional language. If you do, don't use C#. Use F# or Haskell, or OCaml &amp;#x200B; .NET Core is primarily about cross platform, not the Framework being bloated
1) It is OO with some functional syntax cherry pick, as a modern OO language should be. 2) I see lambdas as syntax sugar in C#. 3) C# is not becoming bloated, rather it is becoming a language that lets you get the job done without fighting you. 4) Only MS can answer this. But in a world of cloud and microservices .Net framework makes little sense, hence .Net Core. However, this trend aside, there are still great in-house stuff done on .Net framework, not everyone is going to the cloud, nor will they ever. I believe .Net Core is here just because MS focuses on Azure.
1. More FP 2. They are awesome, just look at how reactive makes it easy to compose code 3. C# now allows you to write a lot of functionality in a away which is readable, but might not be the fastest. So the language itself might be now a bit more bloated, but it allows the programmer to express code in a much more concise way. 4. The .NET Framework is bloated, but it has nothing to do with C# being bloated. The .NET framework is just a collection of libs and a lot of those libs should be 3rd party components. Stuff like wpf, windows.forms should be third party.
The question was if it's moving more in direction A or B, not if it's currently A or B. 
Another alternative to CoreCLR is AOT-Compilation with [CoreRT](https://github.com/dotnet/corert) / .NET Native. Then you can call methods natively: https://medium.com/@chyyran/calling-c-natively-from-rust-1f92c506289d
You can't truly consider something more FP, when it is so inherently OO. It may adopt some FP concepts, but it hasn't got any more FP.
I totally agree with you
About AOT - Corert has its way to Net Core, already works, but still early beta (possibly shipped with net core 3). You can build now native executable for at least Windows and Linux 
I'm sorry I am new to Microsoft visual studio
&gt;Assuming a successful conversion, does the use of the "as" operator in the above code snippet * EVER * result in the creation of a copy of CurrentItem such that SelectedItem actually points to a different (rather the same exact) instance of CurrentItem just with the same data No, generally the only cases where a cast would result in a copy are: - The source and/or target type is a value type. But those don't support the `as` operator anyway - The source type has a manually implemented conversion operator which creates a copy. Again, doesn't affect the `as` operator, and of course you can't add new operators to `System.Object` anyway 
1) Less again (that's not bad) - Span etc. embraces imperative/mutating code (for performance which is a good reason) 2.) Well this is like asking if numbers are a good math-construct - you need first class functions if you want to do FP in a sane way but would you consider that being a construct? 3.) I don't consider Javascript a good functional language and I would hate C# going the "anything" route - bloated? No choice is good 4.) as others wrote: .NET core is about performance and cross platform - more like a "reboot" - it will get just as "bloated" (complete) as the full framework with time (indeed next version will add WinForms and WPF so there isn't much missing at all) 
If you'd only answered that from the beginning. 
Is a paid software and is not even close to Visual Studio. I'm not saying people should use the CLI over any other thing, but I tried to keep it simple so anyone could follow the tutorial.
Except, that MS just enables devs to use it with .net core, nothing changes in winforms itself. If you try to run a winforms app on linux or mac it still wont work.
Yeah, VS Code I great, and with the C# extension you can even restore/build the project and run tests without using the command line, is just amazing.
That is what I use in the tutorial, but is not even close to an IDE.
Maybe the client (or just boss) needs a solution for a Linux environment. There's a lot of use cases.
Take a look at HttpClientFactory. One of its uses (I think it is called typed client) allows you to easily create REST client
Yes it is unfortunately, but I still love it.
&gt; WinForms is being added to .Net Core. That’s certainly not a security update. It's literally to get people to Core so they can kill off Framework - not because they like it that it should be used.
Yup that could also work in this case sure. One less stuff to worry about 
Winforms are not really going anywhere. Still used extensively in many enterprise apps. I work extensively in winforms for creating homegrown database apps that will not see the light of day outside of my domain. I personally do not see the need to upgrade to WPF just to make a pretty UI and with slightly better features.
Repository is an awful name for this, I initially thought you meant you keep your HTTP code in your DB repository. Repository is such a shit and overloaded word now...
Tried with Windows Community Toolkit but when I use the WebView I only have a grey form and nothing loads. I'm going to try with the chromium implementation. Thanks !
Yea .net core is compatible with Linux. It doesn't matter if you write it in a Linux environment or a Windows environment though. I'm not a fan of vs code when it comes to actual development.
Please stop using WinForms.
https://docs.microsoft.com/en-us/cpp/c-language/escape-sequences
You're replacing the `"` character - `.Replace("\"...`. You want `.Replace("\\", string.Empty)` instead.
`"\""` is a double-quote character. It looks like you need `"\\"`, instead.
That really boils down to how your wrote your code, though.
\ is used to demarcate [control character that can’t be typed](https://en.m.wikipedia.org/wiki/Control_character), eg: \n is interpreted as the single character ASCII 13, and \r is ASCII 10. You want this: Console.Readline.Replace(“\\”, “”);
Same with WPF.
The split method returns a string array. That’s also what the error says: you want to assign the result of the split method (a string[]) to a variable of type string, which cannot be done without casting.
The error is telling you that the return value of Split is a string array, not a string. If you change the type of element to string\[\] it should work fine :)
If you take a duck and call it a bird, it's still a duck.
You do not have to use WPF with MVVM, you can use it exactly as you would with WinForms. This apparently is the number one misconception about WPF I keep hearing. So why use not move over to WPF? One way or the other, XAML was picked as the successor. Just start with WPF writing it as if it was a Winforms app, and then slowly try experimenting with bindings, styles, templates etc.
Change them all to VARCHAR(8000) and you won't lose out on any performance and you can store a lot of data. If you need more you can extend to VARCHAR(MAX) and sacrifice a bit of performance for more data storage. 
You're missing the story. C# has been picking up low level features from structured programming languages lately. * ref locals * ref returns * in parameters (a.k.a. read readonly ref) * stack allocated types (no, not structs) * span *** Before that we got LINQ. While implemented using FP concepts, it's really a set-based language feature (think SQL, XQuery). *** And I almost forgot async/await, which was inspired by multi-threaded scripting languages which user "green threads". (Inspired, not copied. C# works very differently. ) *** C# is also very declarative. Much of a modern application's design can be implemented using Attributes rather than imperative code. 
Learning WPF today would be a huge waste of time.
I've found that Empty Projects for each, WinForms are more responsive.
So uh... How do I wire up a button then? On WinForms, I subscribe to the Clicked Event, but in WPF I can't find it.
https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.button?view=netframework-4.7.2#examples First example has that exact case. You add a click handler, and in your XAML you set the Click event to it. Done, identical to Winforms: https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.click?view=netframework-4.7.2 And on the same page are all the available events for a WPF button: https://docs.microsoft.com/en-us/dotnet/api/system.windows.controls.button?view=netframework-4.7.2#events
I'll answer the bit about the documentation. Let's say you have a variable with a type that is some sort of reference type - in c#, that would be a class. So `string myString = ... ` is a variable that is a reference type because string is a class. In this case, the variable really only ever stores a memory address. The actual string object is somewhere else in memory, found by going to that memory address. If you were to perform a type comparison using 'myString', then you're only changing how that reference (memory address) is represented. So, for instance, lets say you convert the string type to an object type and back: object someObj = myString; // an implicit conversion string myString2 = (string) someObj; // an explicit conversion * the original object is not modified. * all three variables refer to the same object (the memory address that someObj and myString2 refer to is the same as myString). The above is true for all reference conversions. Now, things can get a little weird if you have a class that has its own implicit conversion operator. That operator is just a function, and it is free to do whatever it wants, including allocating a new object as the return value. All bets are off if one is being used because it can return a new object, and modify the original object (though, doing so is usually unwise).
That was awful
WPF is complete garbage. Who wants to write all that markup language?
Don't use XAML then, you can even do that in code like WinForms. Or use the designer like Winforms.
More importantly - it's still *the same* duck. If you call a duck a bird, it's not a different duck, or even a different bird. It's *identity* is the same.
Please don't get PETA involved.
Just like Sliverlight and XBAP were the future right? XAML will be dead in short order once MS comes to the realization that the industry doesn't want or need another markup language to design user interfaces. I have never seen XAML listed on any front end developer/architect's resume. WPF/XAML is simply too much bloat for writing a Windows desktop app. Do most people really need to be able to swap out the front-end of their desktop applications with a new layout that their "designers" have been working on? Do companies really even have "designers" working on the XAML while programmers code the business logic? Do you really need your app running in "tablet mode"? This was Microsoft's wet dream, but in reality, it just doesn't work that way. WPF can be great for things like complex 3D modelling, so if you need something like that, then by all means, go ahead. Progressive web apps are the future.
Compared to WinForms? Lol.
You are contradicting yourself in the same post, first you said: &gt; XAML will be dead in short order But then you say the shortsighted quote: &gt; Progressive web apps are the future. Which is the same reason why some carnation of XAML will stick around, because it is so familiar to HTML. And while more and more things will go to the web, not everything will. Desktop apps will still play a role in the future, despite what web devs want to believe. Both have their strengths, but both also have weaknesses. And I am not just talking about 3D heavy desktop applications. &gt; I have never seen XAML listed on any front end developer/architect's resume. Because WPF/Desktop UI programmers are rare to begin with, with there being more work in web development these days. But saying they don't exist because you've never met one, does not mean they do not exist. Funny though, I fit your description, I do advanced WPF applications that cannot go into a web environment while also doing back end work and architectural design of the systems behind it.
Uh...What are you talking about? For someone coming from frontend background, XAML is a piece of cake and much better/comfrontable to write. It feels as if you're home, although I have to admit that it's kind of outdated compared to HTML/CSS though but still, nice. 
No birds were harmed in the making of this comment.
I concur, an Repository for me only concerns itself with storing and retrieving data from a data store (database). It should have nothing to do with HTTP calls or anything of that ilk 
Nice, I will save this.
I was thinking of something along the same lines, thanks for the suggestion. 
You can store multiple parameters in one local variable. A Vector3 is an object, not a variable, and it is not a static object; That saying, you need to create a new instance of it like so: public Vector3 rotation = new Vector3(x, y, z); There are also other ways that you could store multiple entries on one variable. For example an array: int[] Numbers = {0, 1, 2, 3}; //[] lets us know that this is an array Console.WriteLine(Numbers[0]); //Output: 0 Console.WriteLine(Numbers[1]); //Output: 1 A list: List&lt;int&gt; Numbers = new List&lt;int&gt;() { 0, 1, 2 ,3 }; // Creates a new list Console.WriteLine(myList.ElementAt(0).ToString()); //Output = 0 Console.WriteLine(myList.ElementAt(1).ToString()); //Output = 1 ( You need to include System.Linq to use '.ElementAt()'. ) There is also the dictionary, which I don't recommend using unless you really need a huge amount of data stored under the same name. As the name suggests.. it's a dictionary. A dictionary uses a Tuple of a TKey and TValue. The TKey basically functions as an index, something you can use to get the corresponding element. Dictionary&lt;int, int&gt; Numbers = new Dictionary&lt;int, int&gt; ( {0, 0}, {1, 1}, {2, 2}, {3, 3}, ); Console.WriteLine(Numbers.Keys.ElementAt(0)); //Output = 0 Console.WriteLine(Numbers.Keys.ElementAt(1)); //Output = 1 There are a few other ways to store more than one value in one variable or object but these are the basic 3. 
Hmm, I don’t understand what an application desktop toolbar is... do you know any examples of such applications?
I don't even use the word repository now because its so overloaded and basically meaningless and then you get into the whole repo pattern/ef/uow thing and it just devolves into arguments and conflicting articles online. 
Why not CreateGraphics? Just curious 
[Link](http://www.abstractpath.com/2007/dont-use-creategraphics/) Basically you're bypassing the normal way of painting, leading to potential problems.
It blows my mind that these people are judging WPF and have *no idea* how it use it.
A lot of people just heard "WPF is hard", I think. But... I mean, it has a lot of capabilities, but you don't have to know async/await to start with c#.
Absolutely, I love whenever those episodes come up in my queue. I know it's going to be a well thought out burst of wisdom, and then I'm on to the next show.
Your question is not nearly providing enough information to give any advice.
Removed: Rule 4. Check out "webdrivers", like Selenium.
1. A bit more functional. Many of the new features are neither functional nor OO, really. 2. Come again? Lambda expressions are expressions. Do you mean 'delegates', which can (and often are) expressed as lambda expressions? 3. I think the language is getting a bit overcomplicated in places, but I'd be hard-pressed to point out a recent change that is *bad*, in itself. I like functional programming a lot, FWIW, but I have very little use for weak or dynamic typing. 4. Yes and no. I don't get the impression that it's about fixing or abandoning the Framework's old and mistaken API choices, so I don't think it's actually *about* that. At the same time, I wouldn't hold my breath on some of those old APIs getting ported, especially if they're officially deprecated or obsolete.
This discussion is really awesome. Where do I learn any of this. Haha. New programmer, and I'm almost done with Bob Tabor's introduction to c#. Loving every minute of what I'm learning, just wanting to build a good foundation.
In a sense, it is a DB repository if your definition of "DB" is loose enough. A repository is responsible for abstracting away the actual access details, and a REST API is a data store. I'm not going to stop using a word because some people use it wrong. That's just silly. It has a long-established meaning and is a recognized pattern across many languages. I call it a repository because that's what it is.
thank you!
Use --save-exact (-E) and a package-lock.json (commit this!) and it's even sweeter.
Hey, I know you
I'm confused what autorest does. Does it generates code that calls your API?
will add all
Sounds like c# isn't the language for you
What's the benefit over dapper?
lolwut,nour
Try using the tabcontrol object and then have each form nested in it's own tab.
thanks, @antiduh and to everyone who replied
One of my favorites is Coding Blocks .NET. 
Hey, glad to hear it! ;)
Wyam?
I really enjoy complete dev podcast , its focussed around .net stuff
First of all try formatting the code you post. Read reddit's commenting help by clicking the quick link at the bottom right corner of any comment text box or read the full version here: https://www.reddit.com/wiki/commenting Or use a website like pastebin to share the code! In any case I see 2 problem! `this.SpeedUp() = this.Speed++;` and `public SlowDown(int Speed)`. The first one is not the way you define a method and the second one is the correct way except that you forgot to indicate the "return type". private void SpeedUp() { Speed++; } public void SlowDown(int Speed) { ....}
It looks like you copy pasted your code without formatting it. To make it easier to read the code as intended use 4 spaces before every line, or use something like pastebin or a Fiddle to easily run the code. Suggestions: * Remove unnecessary dependencies * [Naming Conventions](https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/naming-guidelines) * Constructor is missing a bracket * Functions can't be assigned a state - rewrite speedup(){ speed++; } * slowdown passes in a speed without regard for current speed, and reduces the passed variable, instead of the car's speed. - speeddown() { if(speed &gt; 0){ speed--;} } * The program should worry about user messages, not the cars. - Use a ToString() to simplify showing it else where. [How to Override the ToString method](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/how-to-override-the-tostring-method) * Program only uses your int speeds to instantiate your Cars, just place these variables in the called new car method.
Library as a whole? Both has its own benefits from each other. Will just share RepoDb benefits. You can do the following: - 2nd layer cache (MemoryCache) - extensible - Tracing - extensible - Inline operations - BulkInsert, Merge operation - Entity and RawSql based operations - Dynamic-Based, Object-Based, and Expression-Based Expression Tree - Built-in Repositories - Statement Builders - extensible - Much faster - More efficient in memory Note: We removed the support for RecursiveQuery in new build. But we soon introduce QueryMultiple. I cannot think of the other benefits for now
When I go to your blog, the top is saying HTTPException which is not related to what your blogging about. For better expose, I would do to keep the readers attention. &amp;#x200B; I see that you talking about EF 4.0, what about EF Core since everything is slowly going to the core side of .net.
That would work but it is kind of overkill since you know that ssn.Legnth - 2 will give you the number you need from the string. 
Ah thanks!
It feels like a more ergonomic java, and will probably stay that way despite the addition of new FP features. Java-style OOP is just too deeply ingrained in the dna of the language and the community for it to change at this point. 
I actually find this very convincing
Me too. I caught myself actually nodding my head more than once. I'm adding the language to VS right now.. I'm feeling kind of excited!
What is wyam? Any docs?
idiotic waste of time arguments, nothing is gained just time water arguments, how many serious applications is written in functional languages ?
Seems you intend a design discussion. We can share our opinion. Repository is used to abstract (or encapsulate) a layer between the data layer and business logic layers. Usable if you intend in the future to enable a testable components, perhaps injectable or mockable repository objects. By design, when it comes to HTTP calls, there should be **NO** repository at all (although it depends by design). To be specific, UI -&gt; Controllers -&gt; Managers/Services -&gt; Repository -&gt; Database. In your case, we recommend you to place it somewhere in the Services (in our case it is a Service). That's our naming convention. We often called it as ``StudentApiService`` or ``StudentHttpService`` for the ``Student`` model. This object should somehow be injected in the ``Manager`` or ``Controller`` if you intend to skip the managers. Oftenly, the ``HttpClient`` is widely used. Just implement an interface with various dynamic shared methods and implement it on your ``Service`` class. Example: public interface ApiService { TResult Get&lt;TResult&gt;(string baseUri, string path); void Post&lt;TEntity&gt;(string baseUri, string path, TEntity param); TResult Post&lt;TEntity, TResult&gt;(string baseUri, string path, TEntity param); ... any other shared methods } public class BaseApiService : ApiService { ... implementation and use HttpClient } public class StudentApiService : BaseApiService, IStudentApiService { ... we somehow created a custom interface of each object for it to be able to be DI compatible } Document from MS for Repository: https://docs.microsoft.com/en-us/aspnet/mvc/overview/older-versions/getting-started-with-ef-5-using-mvc-4/implementing-the-repository-and-unit-of-work-patterns-in-an-asp-net-mvc-application
Wyam is a static site generator (think Jekyll, Hugo, etc.) It can build blogs, docs (including API docs), or anything else. The somewhat unique bit is that it’s very flexible and lets you write a code-based configuration specific to your site if you need to. https://wyam.io
why do you say that? I've play a little bit with c#, looks like a better java. I'm trying to stay out of web. After 10 years is makes me sick.
Someone will probably laugh at how easy this is. But it's getting worse and worse to understand the more I stare and try to figure it out or google alot of stuff. Thanks.
One of the greats of C# is the ability to refactor (auto find and replace references, `nameof`, etc) - something done on a daily basis in enterprise development. Wonder if F# (as it's just another .NET language) also affords this simplicity?
Seconded. &amp;#x200B; C# is at least improving with Nullable reference types coming soon, i was hoping for Record types to make it into 8 primarily because C# makes mutable types a breeze but as the article points out there's little to help immutable objects.
Meh. to me, it looks like he didn't really think a lot of this stuff through. Records, for example: F# records are nice for really *obvious* stuff, but not having a constructor also means that you cannot easily enforce invariants. Let's say you want a ``Person``type with a name that cannot be null or empty and an age that can't be lower than 0. Just try to replicate class Person { public int Age {get;} public string Name {get;} public Person(int age, string name) { this.Age = age &gt;= 0 ? age : throw new AOORE(...); this.Name = !string.IsNullEmptyOrWhiteSpace(name) ? name : throw new ANE(...); } } with F# records. If I have to chose between terseness and parameter checking, I'll happily deal with a little bit of verbosity. F# For Fun And Profit deals with this problem in chapters 2 and 3. I don't find their solution particularly convincing compared to a plain old class with, you know, a plain old constructor. The same applies to Discriminated Unions, by the way. Making invalid state unrepresentable in idiomatic F# is actually pretty hard. And then follows flood of very weak arguments. &gt; In the clever books they say that exceptions are for the exceptional, unpredictable situations, when something has gone wrong so badly that trying to continue our work doesn’t make sense at all. Good examples are OutOfMemoryException, StackOverflowException, AccessViolationException and so on. But getting out of bounds in array is unpredictable? Really? I mean the indexer gets Int32 as input, which has 2^32 possible values. Does he really want every array access to return ``Option&lt;T&gt;``? Does he have any idea about how dramatic the performance impact would be? How does he think array access is handled in F#? &gt; [...] Same thing goes for validation. User provided wrong data? What a surprise. Parameter checking isn't for done in order to validate user input. The usual parameter value is at least half a dozen stack frames removed from any direct user input. Exceptions are used to enforce the contract of a type or function: A person must have a non-empty name, a timeout can't be negative and stuff like that. If something like this happens, this means that either input validation was sloppy or that your model is incorrect. Either way, your program isn't in an anticipated state - which is, by definition, an exceptional and unpredictable situation. &gt; The reason for this dramatic abusing of exceptions is simple: the type system isn’t powerful enough to represent a scenario like “If everything’s fine then give me a result, otherwise return an error”. Duh. public static bool Json.TryParse&lt;T&gt;(string value, out &lt;T&gt; result, out JsonError parserError) The thing is, outside of input validation, you seldom want that. If your client gets invalid json, it is extremely unlikely that he can deal with that here and there. Just look at the endless repetition of ``if err != nil { return nil, err }`` in go: Almost everywhere, you want the error to bubble up. You have a handler pretty much on top of the stack that tells the user that something what wrong, and that's it. 
Well microsoft has been adding many features from F# to C# so I guess we might see the things in the article being implemented in C# at one point 
Null handling, Immutable data types and avoiding exception handling are my biggest annoyances in C# (which i otherwise love) and seeing these examples always makes F# seem like a much happier place... Been tossing up moving to F#, on one hand i chose C# because we need to hire people in a rural area but on the other hand I'm rapidly progressing towards a state where my code's getting more and more functional anyway so what's the point? 
For your first example the common answer i see makes reference to "primitive obsession" and to make Age and Name their own types, that way you don't need any validation for a name or age anywhere else in your code and can expect any Age or Name to be valid. &amp;#x200B; &amp;#x200B;
I need something that will calculate the grade point average after entering the 2 midterms and the final based on the percentages that they're worth. If that makes sense.
Sorry cause I'm still trying to understand too. I need something that will calculate the grade point average after entering the 2 midterms and the final based on the percentages that they're worth. If that makes sense.
Seems like a straight console app. Create project, added class as described, override ToString() and other methods, create calculate method. Calculate should calculate final grade as determined by 3 grade variables (mt1:30% + mt2:30% + fnl:40%). So you need to calculate midterm1's points based on the 30% allotted for that grade (mt1 of 50/100 would be 50% of 30 or 15). Repeat with other variables and output the result. Make sure to use doubles for percentages, so the precision isn't lost, and round the final result to 2 decimal places. I'm not sure how the grades get populated, so that can be done however you wish (user input, hard coding, etc).
Okay. So it's only a math problem then, you've got no problems with creating the class and methods?
I did methods last week so I think I understand that part
"something"? As task states, you need to add a method that will do the calculation, not just "something". Again, you need to explain what you have done so far and what exactly a problem is. Show code you wrote.
I THINK this is what I got earlier. But it doesnt work lol i know it's not right. I'm not at my computer so i cant confirm if this is the right file i had to find it in my onedrive that backs up my computer to my phone. If not I can post later. https://drive.google.com/file/d/0B9f5UxiK5Rlxc2VQMW9Dcm1VVnVocVlXajFfbncxV1hsQTdF/view?usp=drivesdk
I THINK this is what I got earlier. But it doesnt work lol i know it's not right. I'm not at my computer so i cant confirm if this is the right file i had to find it in my onedrive that backs up my computer to my phone. If not I can post later. https://drive.google.com/file/d/0B9f5UxiK5Rlxc2VQMW9Dcm1VVnVocVlXajFfbncxV1hsQTdF/view?usp=drivesdk
An application. Sorry dont know the terms so well. This is my 5th week.
I am an OO guy too, been trying to find something use full from the fp, but just keep getting disappointed. the more I watch fp vidoes, the more useless it seems.
I'm on my phone, so I can't run the project but can you post up your calculate method? I'd like to see what's being done exactly.
I dont have the calculation method. It's the calculation that I dont understand how to get.
This is a really good point, you can have inheritance to help you out. e. g: public class Name : NonEmptyString { } If you really care about performance, you might be able to flag your entire code with attributes, so that the developer sees when a function needs things to be checked beforehand. 
The only thing I can make out of this is something like Console.WriteLine("Enter student name"); Console.Read(); Console.WriteLine("\nEnter grade"); Etc... I dont know how to figure the percentages. This is like basic stuff but idk how tf to figure this one out. So far I've been ok at getting what needs to be done and my teacher gives me bs responses that dont help.
I do the same in C#, and it's actually pretty easy because I can enforce stuff in the constructor. In F#, enforcing these invariants stays a problem which invariably leads you away from Records and Discriminated Unions and towards classes and structs. 
Okay, so that's probably the biggest issue then. I don't want to do your homework, but let me see if I can help. 1. Divide points / totalPoints to get percentage (50/100 = 0.5). 2. Multiple answer of step 1 by total percentage of grade (mt1:30% -- 0.3 * 100 = 30 then 30 * 0.5 = 15). 3. Repeat with each grade and add together. 4. Round and output value. Hope that helps.
Yeah, for the most part. 30% / 100 = 0.3 (percentage to decimal) 0.3 * 100 = 30 (total amount of points based on total average grade) grade / totalPoints = percentageInDecimal 30 * percentageInDecimal = pointsToAddForAverage 
Hell yeah! I used to use Wyam for a bit for a site, but since i was on Mac, it was always annoying to switch to a Windows VM. Now I use GoHugo, but I'll be sure to try out the .net core version of Wyam soon.
F# isn't a good fit for most games. Idiomatic F# generates gc pressure like crazy. The preferred data type is an immutable linked list, and every tuple is a heap allocated object, for crying out loud. &gt; (x: ^a when ^a: (static member (*): ^a -&gt; ^a -&gt; ^a)) = x * x ^a means that the *compiler* replaces the type instead of the runtime. Inline functions are basically a macros with enormous restrictions. &gt; when ^a: (static member (*): ^a -&gt; ^a -&gt; ^a) This is a constraint for parameter x: x can have any type ^a as long as ^a has an operator * with signature ``public static ^a operator*(^a value1, ^a value2);``. This means that you can call the function with ints, doubles, floats and so forth, which would otherwise be impossible in the .net type system. &gt; Is it easy to create an F# lib and stick it into a C# project? I'd be curious to hear from anyone who's tried this. Calling c# from f# is extremely easy, calling f# from c# is *rather* easy, but I still would advise you to keep the interface .net framework guidelines compliant and use the f# stuff internally. 
Thanks for the info! GC: Yeah, sadly, that's what I expected. Generics: Ah, OK. That makes sense. Although it's a shame the syntax is that verbose. C++ templates, for a simple case like that, are much more concise. F# Libs: Cool. I'll have to read up on the guidelines for that.
The same way you can write fast code in OCaml, you can write fast code in F#, but it will be C# with F# syntax. &gt; Generics: Ah, OK. That makes sense. Although it's a shame the syntax is that verbose. C++ templates, for a simple case like that, are much more concise. If anything, F# requires way to little in terms of verbosity. This is something. ``(x: \^a when \^a: (static member (*): \^a -&gt; \^a -&gt; \^a))`` is something the repl or intellisense shows you. You can define the function as ``let inline mult x y = x * y``, type inference takes care of the rest. Btw, the .net framework design guidelines are really good, and everybody should have read them at least once. https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/ 
&gt; I'm not going to stop using a word because some people use it wrong. That's just silly. It has a long-established meaning and is a recognized pattern across many languages. I call it a repository because that's what it is. Good luck with that then
I guess I'm comparing what I know with Golang and C#. They are both wildly different animals and typically I find that anything I want to do or work on as a fast prototype is a lot easier to do in Go
https://softwareengineering.stackexchange.com/questions/19842/what-are-some-well-known-applications-written-in-f ISTR that the back-end of jet.com is/was written mainly in F#, too.
The tooling for F# is not as mature. F# does not have a `nameof` operator, but work on one is underway. Taking a functional approach to building a system tends to involve a lot of functional composition, however. 
I think they're telling you we can read the question and we understand it, but are asking what about this don't you understand? If you're legitimately trying and are stuck and can explain what you've done and where you're stuck I'm sure you'll get help, but without any clarification regarding what you don't understand, what you do understand, and where you're currently stuck it just seems like you're enjoying your holiday weekend and hoping someone will take care of this for you. If you're only this far a long and stuck I suggest going over your previous lessons again or trying to follow a YouTube series or another method of learning the basics because this is not a hard task. I have suggested SoloLearn (mobile app for learning multiple coding languages) to friends and they seemed to like it and make progress learning. I know sometimes I take in information better from different sources, perhaps it may help to use one of these methods rather than the method you're teacher is using. The answer to every part of this question can be found using google if you ask the right questions. Good luck.
Yeah I sure do love working 16 hours a day in the military and currently using my free time figuring out my homework. I love the vacations I get on Holiday weekends.. I dont even know the word vacation, that is not even in my dictionary. This is what I've come up with. I dont understand how to come up with the equation to get the average. That's literally the only thing I need help with. I've googled how to find the average of a grade with C# and 100 different keywords.. nothing comes up. This is what I've typed up in an app I have. I know the math at the bottom isnt correct I'm just trying to piece it together and find the right equation. using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace SoloLearn { class Program { static void Main(string[] args) { int midterm1; int midterm2; int final1; // MIDTERM 1 Console.WriteLine("Hello, this application will calculate a GPA for your student."); Console.WriteLine("\nPlease enter the MIDTERM 1 grade: "); midterm1 = Convert.ToInt32 (Console.ReadLine()); // MIDTERM 2 Console.WriteLine("\nPlease enter the MIDTERM 2 grade: "); midterm2 = Convert.ToInt32 (Console.ReadLine()); // FINAL 1 Console.WriteLine("\nPlease enter the FINAL 1 grade: "); final1 = Convert.ToInt32 (Console.ReadLine()); // RESULTS Console.WriteLine("\nYour students GPA is: " + midterm1 * midterm2 * final1); Console.ReadKey(); } } } 
Mutability isn't a huge deal, it's just not the default, so you need to notate variables, fields, etc that will be mutable. It's sort of like if everything in C# were const or readonly unless otherwise noted. F# also lets you shadow declarations, which can eliminate the need for mutable locals (but can become confusing if abused).
&gt; Mutability isn't a huge deal, it's just not the default, so you need to notate variables, fields, etc that will be mutable. Cool, that sounds reasonable.
&gt;I guess the main reason why there are no "well-known" applications written in F#, is because it takes years, even decades to become "well-known" and F# simply isn't that old yet. 8 years after this comment, F# is 13 years old. There might be another reason why there are no "well-known" applications written in C#.
Search for TPT (table per type) and TPH (table per hierarchy). Entity Framework supports this kind of architecture.
If I understand you correctly, it sounds like you never specify the types of the inputs to functions. If so, yeah that kinda sucks.
Functional programming does come across as just a trendy fad at the moment. I want to see a mini enterprise level application written in both C# and in F#, using functional constructs and patterns rather than repeating normal OO patterns. That'll probably have me fully convinced (after using C# for 15 years).
I do understand where you're coming from, but without knowing it seemed like you were just posting a screenshot of your homework and asking for the answer. I do apologize for that. What you want to do here is find the "weighted average" of your 3 inputs.. A quick google search with the correct terminology reveals: [https://sciencing.com/calculate-grades-weighted-percentages-7648649.html](https://sciencing.com/calculate-grades-weighted-percentages-7648649.html) That page explains the math in good detail and hopefully gets you on the right track, if not reply and let me know where you're lost and I'll see if I can help.
Records are coming to C# 8, so the verbosity argument will soon be invalid.
Right now there is ONLY a proposal.
&gt; an age that can't be lower than 0 Use `uint32` in F# or `uint` in C# instead of `int`. No need to check in either language.
Better title and a more useful rewrite would be, "How I figured out my problem domain fits the FP paradigm better than the OO paradigm." Some things are just incompatible with FP paradigms. Like writing a suite of custom WinForms controls (that was my job for 6 years.) I've seen how to get F# interacting with a WinForms program and it's just... wrong. It's better to write logic in an F# DLL you consume via C#. But in this case there's *so much* stateful UI interaction the "glue code" overwhelms the benefits. Or right now, I'm working on a REST API in ASP .NET MVC Core that does minimal processing. The framework can't really work with immutable types without tweaking, and my processing is so minimal I can't see value in a logic layer. It's all basic CRUD. I've worked on other projects where *maybe* it was worth it, but articles like this don't help me very well. This is a superficial tour of some F# features without a lot of discussion of the use cases they make more elegant. (Record types excluded; it's criminal they're taking so long to get to C#.) But it's also not fair. When you're a grizzled C# veteran, you are used to the things the article points out as warts. For example: everywhere I've worked had infrastructure to handle the "discriminated unions" case. I do like DUs, but one feature isn't going to make me pitch a language change to my team. The later points have me scratching my chin, but they lack the "because of this, you can..." sections. I do agree that functional frameworks are easier to mock and test, but that alone isn't telling me when my logic is also a lot better to implement. And the wrapup article on file structure horrifies me. I've worked on projects with lines of code in the millions. I can't imagine, "You can put all the domain types in one file!" would be true there. And I certainly don't want to imagine how hard it'd be to add a new file if compilation order matters. We'd need a tool to do a dependency map to tell us the right order, just like we need tools in C# to help us find circular dependencies. I don't think it's a bad article, but what I find in these F# testimonials in general is I'd get more out of seeing a GitHub repo of an entire app than I do from a feature tour followed by "QED"! If I'm going to sell a language change to my team, I need to show them how F# solves very complex problems *in a domain*.
&gt; at one point Right about the time all the 20-somethings entering the industry are retiring after a long career no doubt. I understand that introducing large new features and doing it properly takes time, but new features for C# keep getting pushed back for several major versions - something akin to records was supposed to be in C#6 before being pushed back to C#7 and then to C#8 - and with the large gap between major versions in favour of more frequent point-releases means that whatever cool feature from F# that will be coming to C# will be coming Soon™. C#8's release date has been TBD for like 2 years at this point. Meanwhile F# has those features _now_.
&gt; Records are coming to C# 8 [They are not.](https://blogs.msdn.microsoft.com/dotnet/2018/11/12/building-c-8-0/) There are various proposals, and none made it into 8.0’s feature set.
&gt; C#8’s release date has been TBD for like 2 years at this point. I don’t know why you would think so. C# 7 was released alongside VS 2017 early last year. It’s no surprise that 8 will be released alongside VS 2019 next year. Oh, and it won’t have records. But people can’t agree on the proposals anyway.
Is the time given in this format as well?
* Nullable reference types and pattern matching will almost certainly be in C# 8.0. * Records are also being worked on, though I think they probably won't be included in C# 8.0.
the text is just like this
hours mins secs
The magic 8-ball says: Outlook not so good.
I stand corrected. Thanks for that.
Then, split the task. First, you need to convert the times in c# DateTime format. Split the string on "," first, then parse each entry. I am 90% sure straight DateTime.Parse() will not work there and you'll need to replace "h" and ' with empty string and then replace spaces with :. Alternatively you can use the DateTime constructor taking hh, mm, ss as arguments. Then its just timeA - timeB I am writing an example code with comments, but this should be suficient to understand the basic idea 
&gt; every tuple is a heap allocated object F# 4.1 added `struct` tuples, though only because of C#.
&gt; C++ templates, for a simple case like that, are much more concise. They are concise, but the cost of that is that it's unclear what are the static requirements of a template. And they're adding a more verbose version with C++20 concepts.
could you do it for me? im a beginner and this is my high school homework that im having trouble with
we are assigned to do it in the windows forms app, how does this change it?
A 'trendy fad' that predates procedural programming. The bigger concern is that functional programming has been at the level of 'trendy fad' for decades. LISP programmers used to be the standard pie-in-the-sky stereotype. These days, if it's anything, it's probably Haskell programmers. (Or Rust, but that's a different set of ideals.) It's important to remember that F# isn't *just* a functional language. It's a functional-first language with significant OO components, much as C# is an OO-first language. You've got access to the entire .NET platform, and you *can* write procedural programs in F#. I'm just a hobbyist in F#, so I don't have anything to show, but ISTR that jet.com built their back end in F#. Whether that's still true or not, I don't know. You may also find [Mark Seeman's blog](http://blog.ploeh.dk/) of interest, but I don't know *exactly* what all he's writing about.
TypeScript had the same effect on me. So many times I can write something concise and pretty in TS, then I'll go back to C# and be like... ugh... verbosity. C# tries to keep up, but it's falling behind. Still better than most, though. 
Create som textboxes where you can input time A and B. Create a button that reads these boxes and parses them to a DateTime format and do the calculation.
Not at all. The "timeStartEnd" variable should then accept the input from the form (place it with the mouse) and the WriteLine should be replaced with setting the text to a label, which you should place on the form. And the code itself goes into OnClick event for a button (just doubleclick on it once its placed on the form). Experiment a bit. Just try to find what "lego parts" you have to your disposal and what primitive parts the whole task can be separated to. See the code in one of mine responses abow. The main idea is to "know your framework" - MSDN have a great documenation on it, with some good examples also: [https://docs.microsoft.com/de-de/dotnet/api/system.datetimeoffset?redirectedfrom=MSDN&amp;view=netframework-4.7.2](https://docs.microsoft.com/de-de/dotnet/api/system.datetimeoffset?redirectedfrom=MSDN&amp;view=netframework-4.7.2) Once you know that the standard library have this feature you can always interpolate it to some other things and hope it also have a feature to read the date from a string. In fact it does, but expects a more convinient format. So you can read the datetimeoffset (or datetime as well) from the string like "12:10:00", but the input is given in this non-usual format. So the first thig you should do is to transform it to your liking. This can be done with .Replace(). So it is kinda working backwards - you know you can handle times with datetime offset, but it needs other string, so you know you can reformat the string. But the times are written together, so at first you need to split it. It is ok if you do not know what methods the different data types have. Nobody does. There is the documentation on msdn for this and IDE helps a lot. VisualStudio for example gives you all possible methods on the "ctrl+space" &amp;#x200B;
Also, beware if the time string is produced by the user input, it might and will fail with some Exceptions. The lazy and not so really right way to handle it, is to wrap the whole possible problematic code in the "try{ %hier goes the code% } catch{}" block
You can specify the type but you don't _always have_ to. If the compiler is going to infer the correct type of the parameters then you can omit explicitly stating them. If the compiler is going to get them wrong then you can add the the signature to help the compiler. From what I've seen it's common to omit them wherever you can. This makes it easier to refactor code without having to go and change types in multiple places, similar to `var` in C#. Some editors, like Visual Studio Code, will automatically show function types in the editor so you don't have to guess what the compiler thinks they are. 
Jet.com?
&gt; Is there a way to make things mutable in F#? If so, how complicated is that, and does doing it have ripple effects that make other operations more complicated? It's very simple to add mutability to anything, you just add a keyword `mutable` in declaration. ```fsharp type Employee = { Id: Guid mutable Name: string } ``` &gt; For example, if I have a mesh with 50,000 verts and the user moves a selection of 10 verts, I update those 10 positions in-place. Replacing the original mesh with a new one would be crazy. Actually functional data structures are specifically designed to prevent this thing. If your data is immutable (and in most cases it is), you can safely share it among everything. That's the reason why linked list is a most popular collection in functional world instead of a mutable array. However all the familiar collections still can be used: `Dictionary&lt;&gt;`, `Array`, `IEnumerable` and so on. **But F# is not a pure functional language**, you can use all that OOP stuff from C#, everything except for `protected` and `goto` (both restricted by design). And you can use just regular mutable types with multiple constructors and so on. &gt; Is this duck-typing? If so, then fuck yeah! That's the #1 thing I miss in C# generics, compared to C++ templates. Yes, it is. As for a syntax - although it is ugly, you can hide in in active patterns, which in turn can be easily combined. For instance, you define a func with constraint `.Length` member, then another with `.SubString()` and then just combine them using `&amp;` sign. &gt; How is F# &lt;-&gt; C# interop? Mostly smooth and easy. F# does a great job on this matter. The only tricky point is fsharp-specific types like Discriminated unions, `FSharpFunc` and so on, but you can always write "C# API" for your F# code, which usually isn't hard at all. &gt; Ugh! That's the #1 thing I like about C# over C++. Dealing with order of declaration/definition is a PITA in C++. And not having to deal with that in C# is a massive gain, IMO. You're right in a short term, but in a long term having strict order does help you to keep your architecture clean, you can't **accidentally** create cyclic dependencies, but you can create them on purpose when you really need it. People also complain here that tuples in F# are reference types, as well as `Option&lt;'T&gt;`, but they actually added `struct` tuples and Option, so that's not a problem anymore. &gt; I have no intuition of what the chain of three ^a -&gt; is. Or, most of it really. Is there a lot of this? Or do you get used to it fairly quick? It's okay, you just have to read a little bit about functional paradigm and syntax. It's confusing in the beginning when you got used to C# and C++ syntax only, but trust me - 2 evenings max and you'll be able to understand most of code and you'll definitely get all the important points. As for gaming - I would say that if C# fits for creating a particular game, then F# fits even better. Because it can do all the C# can do (including using all the .net libraries), but much more, and your code looks cleaner and nicer. https://fsharpforfunandprofit.com/learning-fsharp/ is a **very** good place to start. Well written, all the articles composed in right order so you don't feel confused because of not knowing something important.
Well I’ll just say I’ve never heard of a company doing interviews inside the company for a project, personally that sounds super gross to me. Like they don’t even trust the people they hire. But, in any case, I think doing these kinda problems will definitely help in some ways. Maybe think a little quicker sure, but will mostly help expose you to different ways of thinking like you outlined above. I also used to do lots of Code Katas, generally once a morning, but have let it slip for a long while. This gave me motivation to pick it up again!
Your still try to solve things with familiar way, that's why everything seems inconvenient to you. What you do in order to ensure that age is positive and name is non empty is create a separate type for that which holds validation inside: ```fsharp type Name = private Name of string with member this.Value = let (Name str) = this; str static member Create str = match str with | "" | null -&gt; Error "empty name is not allowed" | str -&gt; Name str |&gt; Ok ``` and that's it. &gt; The same applies to Discriminated Unions, by the way. Making invalid state unrepresentable in idiomatic F# is actually pretty hard. It's not hard, it's strict. You still have to implement **exactly** the same logic, only now your code explicitly tells you what's going on. In C# it's totally unclear, since your method signature shows you only a happy path, all the possible errors are hidden underneath. They show themselves in runtime, while in F# they are revealed in compile time. Which means, you don't need unit test for that anymore. So to be clear, you still would have to write same amount of code (or maybe even more) but part of it would be in unit tests, another part in error handling. &gt; Does he really want every array access to return Option&lt;T&gt;? Does he have any idea about how dramatic the performance impact would be? How does he think array access is handled in F#? No, I don not. You still can iterate through any collection including arrays and direct indexation: ``` for i in 0..arr.Length - 1 do printfn "%A" arr.[i] ``` &gt; Exceptions are used to enforce the contract of a type or function: A person must have a non-empty name, a timeout can't be negative and stuff like that. If something like this happens, this means that either input validation was sloppy or that your model is incorrect. Either way, your program isn't in an anticipated state - which is, by definition, an exceptional and unpredictable situation. In F# you don't have to use exceptions in order to achieve that goal, it's easier to use Discriminated unions for that. It's just in C# you don't really have a better choice, since C# doesn't have DU types. If you deal with exceptions, you don't see the rules in method signature, you just see what's gonna happen if everything's okay. But with DU you actually see that: ``` type UserValidationError = | EmptyName | NonPositiveAge | UserAlreadyExists let createUser userDto : Result&lt;UserId, UserValidationError&gt; = ... ``` And you don't need to catch anything, and your program won't accidentally collapse. It's like an early return instead of throwing and catching exception.
Thank you for sharing!
[Code wars](https://www.codewars.com/) I'm also annoyed by any company that uses whiteboard tests. I'd have a pop at them for it (and obvs not get the role).
Ahh, now that you said it i see that the for was completely unneeded ^^
&gt; This bug should be fixed if you upgrade to 4.7.2 I'm retargeting an app from 4.7.1 to 4.7.2 right now and still experiencing issues with this. Getting different behavior locally, on the build server, and in production. System.* references have been an absolute nightmare ever since starting to reference NuGet packages that only targeted netstandard - I still have to target full framework for executable projects - even though full framework implements netstandard.
Something else entirely
The IndexOutOfRangeException example is really absurd.
Please don't do that.
I agree; as I said, it's the worst case. If it's the ability to throw exceptions in constructors that's keeping people in C#, might as well show how it'd be done in F#; however, it's literally never been a problem for me with Records in F#.
The records for C# 6 were terrible. I assume you are talking about what was then called primary constructors. I can't remember why but I remember that I was giving negative feedback wherever possible. Glad it didn't make it into the language and got pushed back. The current records proposal is much more sane.
I think the recent blogpost by Mads said that they are targeting a release together with .NET Core 3.0
Enough. Also that's not an argument anyway.
And then there is all the ugly JS behind TypeScript so I want to avoid it as much as possible.
Hint: Write a routine that converts `3 25 45` into `12345`. Verify it also can convert `10 12 23` to `36743`. Then write a routine that converts `24398` into `6 46 38`.
EF Core only supports TPH tough, not TPT or TPC.
This was *extremely* helpful. Thank you, and everyone in this community, for taking the time to explain the concepts. I feel like the tone would have been much different if I posted the same stackoverflow 
I'm interested in F#, and this article is an interesting read. I don't agree with a lot of the points made, but I'm glad this exists and I hope you keep writing!
Mind trying to rephrase the question? I'm quite confused about what you're even asking. &gt; I thought this maybe can, but it will add +1 at every boolean bar. Is this all in a loop? Or are you doing blockedbar++ multiple times? 
You've commented-out your if statement.
&gt; I would like to try F# out. But I'd be more likely to try it out if I could use it for a small part of a real project. Is it easy to create an F# lib and stick it into a C# project? I'd be curious to hear from anyone who's tried this. yeah it's super easy, basically just add an F# project to your solution and reference it. You can even pass actions and stuff back and forth. Here's a project where I'm using C# wpf for the ui and F# for the backend of Game of Life. https://github.com/brwhale/Game-of-Life-F-C-interop- Check out: https://github.com/brwhale/Game-of-Life-F-C-interop-/blob/master/LifeUI/MainWindow.xaml.cs I just using FunctionLib; using Microsoft.FSharp.Collections; and now I have my F# lib (FunctionLib) and the F# list types available. To actually look at the function lib: https://github.com/brwhale/Game-of-Life-F-C-interop-/blob/master/FunctionLib/Life.fs It has a module called Life and various functions in that module. The C# code can call any of these functions just like regular static C# functions. It's really fun actually. The only part that's a bit annoying, is that types in F# are all or mostly inferred, so if you change a function a bit, it might suddenly want an Array instead of FSharpList or something, so you have to go back and change types in the C# code to match.
A lot of the FP stuff I've looked into is actually pretty awesome. Tasks in .NET follow a fairly functional design, and my understanding is they come from the FP world via the future monad. I definitely favor design with monads. Nullable&lt;T&gt; and Lazy&lt;T&gt; are basically monads. Immutability is actually very useful, provided that the end object can be built either by construction or through a builder of some sort. At the end of the day, design by contract is what we're after. I think the useful thing about FP is static checking for contract violations and strict enforcement. 
What's the problem with migrations? If you really don't want to use them, you can run them and then script your database from tools like SQL Management Studio :) It doesn't really matter if you construct db manually or through migrations - application is expecting that database has a particular structure, so you can't decouple it completely. Take a look here [https://justpaste.it/1z3so](https://justpaste.it/1z3so) \- scripted some IS4 db that was created with migrations.
Thank so much.
I don't understand the dislike of whiteboard tests for interviews. I personally love them both as an interviewee and interviewer. Usually I look for intelligence and not just for someone who can build a rest API or whatever the job description says to do. Intelligent people can learn skills outside the job description and also I know I can assign them things that they are not familiar with and they will figure it out. From my experience any one who's complained about whiteboard interviews also complain about working on things outside the scope of the individuals knowledge. 
No problem buddy. Good luck.
Nullable reference types? Aren't they already nullable?
Just FYI, Reddit doesn't do the triple-tick thing or syntax highlighting, so your snippets are all messed up. The way to post a code block is to indent each line by an extra 4 spaces. 
Yes, but what the feature does is it turns e.g. `string` into non-nullable and if you want to make it nullable, you write `string?`. So the new syntax (for reference types) is for nullable, hence the name.
Removed: Rule 4.
Lots! F# is used extensively for production backend services in many companies, is used in financial engines, plain old boring LOB apps, internal tools, etc. As a general purpose language, it has general purpose utility.
1. Remove all but whitespaces and numbers (with Regex or Linq) 2. Split into Hours, Minutes, Seconds 3. Create two TimeSpans and calculate their difference (in minutes in this example). `string start = new string(@"3h 25' 45''".Where(s =&gt; char.IsDigit(s) || char.IsWhiteSpace(s) ).ToArray());` `string end = new string(@"10h 12' 23''".Where(s =&gt; char.IsDigit(s) || char.IsWhiteSpace(s) ).ToArray());` `var startParts = start.Split(' ');` `var endParts = end.Split(' ');` `string result = $"Result is: {((new TimeSpan(int.Parse(endParts[0]), int.Parse(endParts[1]), int.Parse(endParts[2]))) - new TimeSpan(int.Parse(startParts[0]), int.Parse(startParts[1]), int.Parse(startParts[2]))).TotalMinutes} minutes.";`
&gt; fsharp type Name = private Name of string with member this.Value = let (Name str) = this; str static member Create str = match str with | "" | null -&gt; Error "empty name is not allowed" | str -&gt; Name str |&gt; Ok and that's it. Just that simple, eh?
I hate them because I can't cut and paste. When I write code it's a mix of ideas that I move around until they make sense. On a whiteboard you're constrained to linear thought. You can rub stuff out, but then you lose the implementation of the mote. My fingers qwerty the solution my brain is solving. Question: After the interview, how frequently do you or your team write code on a whiteboard? I'm totally with you on testing intelligence and adaptability, but for me at least, this isn't the way to do it. My domain is all about flexibility and agility (as opposed to agile if that makes sense :) ) Honestly, interviewing is hard, and if it gives you good results, don't change anything. My process is no better, it's fast, nurturing and punishing in equal measure. I wouldn't recommend anyone else try it. You find your own path when interviewing people and use what works for you :)
Functional isn't new and it's resurgence of interest has been around long enough to be a fad. Many of those features are being added to C# and Java. These are here to stay
It matters if you can’t stand Windows though. I love seeing the push towards making Linux a first class dev ecosystem, not that it isn’t already huge but the closer it gets to being a 100% replacement the better
&gt;weak typing a la Javascript ? NOOOOOOOOOOOOOOO
I'm really wondering... Ever thought about following those things called links? :D
Was thinking about making a thread about something similar. At the moment I'm using IdentityServer4 and ASP.Net Identity Core. What I am struggling to understand is where exactly does the user management happen (changing personal data, password, administrative actions such as giving permission to users) - on the Identity Server or elsewhere? Where should I direct people to if they want to create a new ASP Identity user? Should I have two projects (something like IdentityServer4 and IdentityManagement each under different sub-domain) or just one that has both IdentityServer4 and full user management system with ASPIdentity (both in one proect)? I have really no idea what the best approach is. At the moment my project (that glues together ID4 + ASP Identity) has route called /Account/Connect that contains both Login and Register, but I have no idea how good this approach is. 
This is not entirely accurate. The "Building C# 8.0" blog post is more of the list of things that are almost definitely in C# 8.0. The language design team has not completely written off records in C# 8.0. Neal Gafter [thinks it's unlikely](https://github.com/dotnet/csharplang/issues/1985#issuecomment-435962652), but states he thinks he's a minority in that opinion. There's lots of proposals that are still [marked as 8.0 candidates](https://github.com/dotnet/csharplang/milestone/8) but aren't mentioned in that article.
[chucker23n is being slightly misleading.](https://www.reddit.com/r/csharp/comments/a06rxp/f_spoiled_me_or_why_i_dont_enjoy_c_anymore/eah1hwv/?context=1) Records aren't mentioned in that blog post, but the language design team has not completely given up on getting them into C# 8.0. (Don't hold your breath though.)
VS Code is certainly great but you only can use all its potential with extensions, is not designed to work efficiently with any specific language, that's the reason it lacks so many features.
Not sure why you don't want to use migrations. Just generate the SQL instead of running the update directly on the database.
crazy how many C# crazy people there are lol
 string cust_name, teleph_num, cust_address; char item_code, answer, choice; double delivery_fee, subtotal1, subtotal2,item_price, total_price, GCT, meal_GCT, item_total; int quantity, meal, juice_type, pastry_type, cookies,muffin,pizza; choice = '0'; cust_name = ""; answer = '0'; juice_type = '0'; pastry_type = '0'; quantity = '0'; delivery_fee = '0'; GCT = 0.165; item_total = '0'; item_price = '0'; item_code = '0'; meal = 1000; juice_type = '0'; cookies= 50; muffin = 90; pizza = 200; Console.WriteLine ("Enter customer name"); cust_name = Console.ReadLine(); while (cust_name != "XXX") { Console.WriteLine ("Enter customers address"); cust_address= Convert.ToString(Console.ReadLine()); Console.WriteLine ("Enter customers telephone number"); teleph_num=Convert.ToString(Console.ReadLine()); Console.WriteLine ("Enter 'M' for meal 'J' for juice 'P' for pastry"); answer = Convert.ToChar(Console.ReadLine()); if (answer == 'M') { Console.WriteLine("Enter number of meals"); quantity=Convert.ToInt32(Console.ReadLine()); Console.WriteLine("Do you want delivery? Y for yes N for No"); choice = Convert.ToChar(Console.ReadLine()); if (choice=='Y') { delivery_fee = 500; subtotal1 = meal * quantity; item_total = (subtotal1 + GCT); } else if (choice=='N') { delivery_fee = 500; } subtotal1 = meal * quantity; meal_GCT = subtotal1 * GCT; item_total = subtotal1 + GCT; } else if (answer == 'J') { Console.WriteLine("Enter Juice size"); juice_type = Convert.ToChar(Console.ReadLine()); subtotal2 = juice_type * quantity; } if (juice_type == 'M') { item_price = 150; } else { if (juice_type== 'L') item_price = 200; } if (answer=='P') { Console.WriteLine("Enter Pastry type"); pastry_type = Convert.ToChar(Console.ReadLine()); if (item_code=='C') { Console.Write("Enter the amount of cookies"); item_price=50*quantity; } else { if (item_code == 'M') item_price = 90 * quantity; else if (item_code == 'P') { } } } Console.Write("Enter XXX to end "); cust_name = Console.ReadLine(); } } } } &amp;#x200B;
That's true. In my mind I kind of confound the official Microsoft extensions with the product as a whole but out of the box it is little more than a basic code editor
&gt; From my experience any one who's complained about whiteboard interviews also complain about working on things outside the scope of the individuals knowledge. This might be a stretch and may not be true for everyone. Not thinking algorithmically should or would not stop anyone from learning a new technology, such as React or Vue or a design pattern such as redux or pub sub etc. I believe you would struggle to understand the internals of such projects but would not face any problem using said technologies on a daily basis.
It depends on the load balancing strategy on the server. Some might do round robin, stick the session to the same server, etc. You have no control over this and shouldn't expect to.
&gt; Immutability by default I don't like that. &gt; type inference var s = "test"; &gt; In C# there are useless `public` and `{ get; set; }` in every line. `public` is not useless. If you have public by default, then you need a keyword to make it private. It arguably makes sense to have private by default for security and CRC design purposes. `{ get; set; }` is NOT the shortest thing you can use here. The whole point of properties is to have access control - you're not doing any access control here. Just do: public string name; &gt; all the fields are repeated twice ... In F# on the other hand ... initialization looks like this: So you've shortened the amount of code required to define the employee class, but you've increased the amount of code required to USE the employee class. That's... not a good tradeoff. &gt; And if we miss a field the code won’t compile. &gt; the compiler forces me to fully initialize an object upon declaration. So it's impossible to have fields that aren't initialized in the constructor parameters? That's not a good thing. What if one value is calculated from the others, or generated randomly, or optional? &gt; Structural Equality Yes I agree, but you can just override `==`. What if you only want to check a subset of the values? Then you'd need to define your own `==` operator. But I do still wish implicit full-comparisons were a thing. &gt; But getting out of bounds in array is unpredictable? Really? Yes, your code should handle that case. What do you want to happen if you try to get the `length+1` element of an array? Should it return null or the default value? Should it clamp and return the last value? Should it loop back to the beginning? You need to handle it and tell it what to do. If you are complaining about `IndexOutOfRangeException` then I don't really want to read the rest of your article.
`HttpClientFactory` should manage the lifetimes of the `HttpClient`s for you. Use whatever existing DI library you are using now and register the `HttpClientFactory` as a singleton. It will handle the rest.
No, writing "string?" would do what "string" currently does, and writing "string" will disallow nulls.
How do you allow and disallow nulls at the same time?
Load balancing is handled on the service you’re calling, how you write your code isn’t going to affect its load balancing at all.
Sweet, thanks for the example!
I don’t think the 8.0 candidate milestone was ever a good reflection on what’s likely to make it into 8.0; just what’s hypothetically possible. If you follow the discussions in the competing proposals for records, it’s hard to get the impression that they’re approaching consensus. Records also weren’t among other features that have been in public communication in the past but seemingly dropped for 8.0, such as Extension Everything. So yes, technically, there’s a slim chance yet. But my bet is the feature is too broad and too controversial yet to make it.
Very nice, looking forward to use this specially for creating documentations. Great job!
DNS caching is a different beast, I agree. That’s really a different question though than what op was asking about.
There is no such thing as `string?` currently.
\_getCatgories is a observableCollection. var Result = \_getCatgories.GroupBy(p =&gt; p.Code).Select(group =&gt; group.OrderByDescending(d =&gt; d.Name));
So, what is the current data structure and what is it that you want the end result to be?
This.
The currentstructure is: Collection = {item(code, name. propertyName), item(code, name. propertyName), item(code, name. propertyName), item(code, name. propertyName) } I want the collection to contain something like Collection = {Code1 = {item item item}, Code2 = {Item, item, item,}} The items should be ordered by name property for example. I'm going to use this collection in a treeview.
&gt; You can store multiple parameters in one local variable. I mean, that sentence doesn’t even make sense, strictly speaking. Parameters are what a method declares as its input. A variable contains a value which is either a struct (value type) or a reference to an object. 
Which, btw, HttpClient does cache DNS. 
Automapper is just for transforming one or more data class instance(s) to another data class instance (representation). Here you need to query your db for sure. &amp;#x200B; You could use EF as well. For example given personId integer and DbContext \_context: Contact c = \_context.Contact.FirstOrDefault(x =&gt; x.PersonID == personId); if (c != null) { Address a = \_context.Address.FirstOrDefault(x =&gt; x.PersonID == personId); if (a != null) { Job j = \_context.Job.FirstOrDefault(x =&gt; x.PersonID == personId); if (j != null) { // You have all the non-null instances from the 3 tables. Merge them: Merged m = new Merged() { a = c, // Contact b = j, // Job d = a // Address } } else { // No such Job found. Handle this case. } } else { // No such Address found. Handle this case. } } else { // No such Contact found. Handle this case. } &amp;#x200B;
&gt;This mainly prevents a reverse DOS Not quite. It's mainly to correct the biggest problem with using HttpClient in a singleton manner - DNS caching. Once the client looks up that DNS, it's cached for the life of that client object. The new connection factory will manage that. See [here](https://www.stevejgordon.co.uk/introduction-to-httpclientfactory-aspnetcore)
I've done this putting the modal in a partial view and loading/destroying as needed. Seems to work pretty well. 
Strange to say, my whole experience of working with C# so far has been on Linux, and I've never even installed [VS.NET](https://VS.net) before. I'm using Rider and working on a game project base on Godot engine. It's mostly been a smooth experience but it's entirely possible I would have more trouble if I was working on something like [ASP.NET](https://ASP.NET) or WPF instead.
To be honest, I haven't done my frontend stuff in MVC for a while, been using VueJS, so I don't remember it all offhand. But the standard documentation for partial views is easy to find, and the CSS for a modal can be found with a quick Google search. That should be a good starting point. Good luck!
&gt;&gt; Immutability by default &gt; &gt; I don't like that. I'm curious, why? immutability makes code easier to maintain. So forcing people to think about when they want mutation generally leads to cleaner code. 
&gt; But I notice the bullet point says "by default". Is there a way to make things mutable in F#? yes you use ```mutable``` let mutable a = 5 a &lt;- 10 
That’s definitely a good idea and even without benchmark it should be intuitively obvious that avoiding to allocate memory/space for a potentially large collection is a plus. However, it would be interesting to see how much better. BenchmarkDotNet here I come.
5 weeks with no familiarity creating classes? 
Values sorry
How so? I see objects defined via classes as whole objects. I don't want to have to clone it whenever I make changes. If I pass a reference to X, I expect to be able to change it, and have those changes be reflected at all references. With the example of employees, if I get an employee object and change the name I want that to be reflected everywhere. Someone else in this thread says that F# creates a lot of junk for the GC, which would make sense. If you want to share plain old data without a risk of overwriting something else, use a `struct`.
This is how I would do. 
And the fix is described [here](https://github.com/dotnet/corefx/issues/11224#issuecomment-415845645) for .NET Core 2.1+ and .NET 2.0+ 
Things you haven't understood: 1) What is a class? 2) What is a field? 3) What is a method? 4) What are property constructors? 5) How to override the ToString method? 6) How to calculate the weighted average grade? Google those, then you'll find your answers. But honestly, don't blindly put your homework on reddit for others to solve. You'll learn nothing and it will get incredibly hard later if you don't even try to understand this simple stuff... 
If you're going to work on non-core asp.net, winforms, wpf or nearly anything that uses something in the system (services, sockets, even some filesystem parts) then either nope, either you're gonna have bad time.
&gt; If I pass a reference to X, I expect to be able to change it, and have those changes be reflected at all references. But that's not always a good thing, for example take linq and imagine if some of the methods randomly mutated your data, it would make linq kinda useless. There are parts of your code that need mutation and parts that don't and by separating the two where you can, you can create some very clean code. If you expect any method that takes X to be able to mutate X then you need to look at what the function does before you call it. That being said, it's not that you don't need mutation it's that you often don't and actively thinking about it can really help at an architecture level. F# Does have mutation and it's very useful but it's not needed 100% of the time. Ideally you will end up with some layer(s) of your application that are almost completely pure and sit between your exposed UI/API and the database. This is because it's easy to compose code with no mutation and code with mutation is pretty much not composable. Lastly I'd like to point out that languages like F# and OCaml are used by trading firms like Jane st and they swear by it, so clearly it's not that big an issue compared to the advantages the language provides. It's also a huge reason why linq and reactive-extensions are so successful because there was a ton of thought put into making these libraries function a certain way.
I've never used Linq before and never heard of Jane st, so perhaps I don't understand the benefits for that use case. I mostly use C# for game dev.
why do u hate windows? D:
fair enough. Obviously we need mutation, at some point we need to change data or our program will do nothing. However we can identify certain places where we don't need mutation and separate our logic a little. If you take a look at how Linq/IEnumerables are work this is a good example of using pure functions in a way that creates a very nice API. 
So long as you stick to ,NET Core, yes. &gt; now am going for a company that uses c# and .net , It is unlikely that they stick to ,NET Core.
There is a version of Visual studio for Mac but that doesn't help OP.
Because they don't know much about it, much the same reason I linux. Also I tend to find linux users are the vegans of the IT world.
Yes, I develop using [monodevelop](https://www.monodevelop.com/) and I must say it's really good. 
I second this. If the company doesn't run it on Linux, you shouldn't either. A mid to large size company will have standard environments they use so they can easily have folks maintain, patch, etc your PC. They may have a standard deployment strategy (we do) that doesn't involve containers. Find out about their environment. If they're a windows shop and you hate windows, that may not be the company for you. That said, there are companies that use .NET core on Linux, use containers, and have a totally different way of doing things than a windows shop would, so if that's their deal, go for it :)
&gt; that may not be the company for you. That's another major point - they probably won't hire you if you don't run their platform, but if they did, you'd hate it. You'd feel isolated, nobody would want to try and help you if you had any problems because "ah, Linux? No idea, mate, sorry", and you'd likely be sidelined by the rest of the team.
You will need to use Mono instead. Otherwise you will need .NET Core, but I don't think it's code compatible with .NET full and Mono.
Nullable ref types are an opt-in feature so you have to explicitly declare "this program does not allow reference types to be null without the nullable (`?`) character". Once you do that, you won't be able to do this: string input = null; //compiler error Instead, you'll have to do this: string? input = null; This also makes optional parameters more obvious: public void DoStuff(string? myOptionalStringParameter) { //omitted } C# would have been better off had they started with this feature but, since they didn't, they have to implement it as a language feature you have to opt-in to take advantage of. Basically, reference types should have been non-nullable like structs from the get-go and nullibility would be allowed by using `?`.
You do have to pay attention to client configuration when working with load balancers. HTTP Keep-Alive/Connection Pooling can dramatically affect how load balancers perform. Connections start to look like long-running TCP sessions so you might alter your balancing strategy accordingly. (IE: leastconn rather than roundrobin) I recently ran into an issue where I was trying to use DNS to swing from one cluster to another. But because the application was using long-running HTTP connections, it never looked for a change in DNS. To avoid this behavior I added this: `//Limit the connection to a maximum length of 1 minute.` `ServicePointManager.FindServicePoint(new Uri(baseUri)).ConnectionLeaseTimeout = (int)TimeSpan.FromMinutes(1).TotalMilliseconds;` `//Limit the DNS Refresh timeout to 1 minute (to ensure that .NET has a recent value)` `ServicePointManager.DnsRefreshTimeout = (int)TimeSpan.FromMinutes(1).TotalMilliseconds;` Anyways... if you control the client and the load balancer, it behooves you to pay attention to both sides...
Entry level, for sure. If they studied C++ or Java in college, they can learn C# easily enough 
It works with .NET Core and a text editor like VS Code, but honestly you should just use Windows. I have yet to discover a company that doesn't write .NET Framework software in C# on Windows - and that's because the companies are always invested in a Windows ecosystem. For any professional C# gig, it usually helps to know a lot about Windows, too.
It's not the classes... It's the math equation.... 
So then if you wanted to create a field for storing a Person or string reference, you would need to instance a new object? Does `string name;` also fail? Is the minimum code to write a non-nullable string like this then: `string name = "";` This is an interesting feature, but I probably won't be using it myself.
Cause they're super edgy /s
Plus the majority of companies hiring for. NET is probably due to the majority of developers being more comfortable with Windows and possibly targeting their apps to it or Windows devices. 
Lol I wasn't asking for my homework to be done. I was just looking for how to make the math equation. I know classes, methods, etc. All good I figured it out anyways 
But you can’t really flow back and forth from Visual Studio. It’s a Swiss Army knife of software development. 
Because they needed a job? And the company needed an employee? Sometimes the technology doesn’t matter, you can learn on the job. 
You never closed your parentheses!! 
Yeah, unless the company has a culture where many employees use Linux, IT aren't going to support it. There may even be compliance or data protection reasons to have certain software installed which is Windows only. Your best bet would be to get used to windows and suppliment your workflow with WSL (windows subsystem for Linux). This is what I do and, as someone who doesn't have much time to fiddle around keeping a Linux box happy anymore, I find it preferable to using Linux itself.
I'm not actively developing in C#(I primarily do Apex and Node right now for work), but my two cents: My advice, use whatever they give you for work. I was issued a ZBook, and then a Macbook Pro. I ultimately don't care too much as it's a work machine. They are paying me to be a developer, and I'll develop on whatever I'm given whether I like it or not. I usually only gripe if what I'm given doesn't have sufficient resources to do my job. (I had one company issue me a machine with a Haswell Pentium in it. Was fine at certain times, and others it really struggled.. They didn't have a BOYD policy, so finally I just got myself a MBP to work on. Then they finally decided to let me use a MBP one of their execs decided not to use any more...) I don't really use my work machine for anything beyond what I was given it for. I take it home in case I need it, but I don't really use it as a personal machine on my off time. I have a 2015 Macbook Pro 13", a Thinkpad x220 running Debian, and a Desktop running Windows at home, and I use one of those when I'm working on one of my own projects. (MacOS or Linux typically I use for coding, Windows 'usually' for gaming or digital painting/illustration). &amp;#x200B; tl/dr: Use whatever they give you at work so long as it's powerful enough to do your job on it, because they are paying you to work for them. Own your own computer, and configure it with whatever setup you want to do your own stuff on.
This has absolutely nothing to do with the actual question. If you are hitting a remote API there is absolutely no way you can control anything related to load balancing by controlling how you dispose of anything. Even if you completely restart your app every request there is no way to ensure that it’s not getting sent to the same single box just because it was sent from the same IP - that’s a common load balancing strategy. 
Can you show us the code?
I agree, but that is not at all what the OP asked. He was asking how HttpClient behaves when hitting a load balanced service and there is absolutely no way to know...
Yeah, as long as they don't use things like WinForms or WPF. THese are not avaiable vor Linux now. And Mono also does not have EVERYTHING but MOST stuff is on linux. But that wouldn't be such a big problem i think. BTW the best IDE for Linux when it comes to C# is Rider, it costs money, but it's almost exactly like VS. 
&gt; MyEnum derives, like every enum from System.Enum. No it doesn't; that's a lie for your convenience. Your enum really derives from an integer type. Usually `System.Int32`, but you can make it larger or smaller when necessary. Which means `MyEnum` and `YourEnum` are not necessarily the same size, so they can't go in the same strongly typed list. They can go in an `object` list because they are boxed and the pointers to the boxed values are always the same size. *** Actually what I just said is also a lie. Perhaps it would be better to say "Your enum really 'contains' an integer type". 
How many customers? If you have fewer than ten, and expect to keep it that way, I would strongly consider using conditional compilation and partial classes.
Another option is to not use EF. Choose an ORM (or no ORM) and work with dynamic data types such as `DataTable/DataRow`, `dynamic`, or just a collection of dictionaries. When I wrote my ORM, Tortuga Chain, I made sure to explicitly support this scenario.
With Collections like IEnumerable and IReadOnlyCollection there is no possibility that MyEnum and YourEnum end up in the same collection when casted from a List&lt;MyEnum&gt; , thats why they allow for covariance. for example the following is valid: List&lt;testDerivedClass&gt; d = new List&lt;testDerivedClass&gt;(); IReadOnlyList&lt;BaseClass&gt; c = d; &amp;#x200B;
Yes, would need to see the code to find out what's going wrong. You don't need to provide server names or file paths or any identifying information. Just the code for writing to the file.
Like he told you, enums derive from value types. Enums are structs. Try changing your classes to structs and see how it's not possible. Just like this doesn't work: var s2 = new List&lt;byte&gt;(); IReadOnlyList&lt;int&gt; s1 = s2; &amp;#x200B;
 Create a small web installer that downloads and starts the usual installer 
now It makes sense, thanks for explaining :-) (same goes to the other posters) 
Realistically, either way will work. All you're doing is spitting the HTML out onto the page. I would put the modal content in a new partial view, and render that partial on your page's view. This way you can easily re-use that modal elsewhere if needed. 
Is this for work? Why not use power bi or ssrs that does all this already. 
C# is mainly used for ASP.NET, which is a back-end technology. You CAN use it (razor) for the front-end, but you will be limited on what you can do at a certain point. That's where these Javascript frameworks/libraries come in that you mentioned. You can use ASP.NET to build your API, which basically just handles your database and serving data, then use a Javascript framework such as Angular or React. Angular uses something called Typescript, which is basically a mix of C# and Javascript (in my opinion) and compiles (tranpiles, really) into Javascript, but handles so much of the ugliness that you get with trying to handle vanilla Javascript. If you have any questions about that, let me know, but the point is that there's always a place for C#, although it should just be one tool in your box of many other tools
You're welcome.
A math subreddits might help
I made a few changes to what I thought would fix the issue and I have attached the errors that I am not sure how to work around: &amp;#x200B; [Image 1](https://imgur.com/SUF5oo2) [Image 2](https://imgur.com/0GmvmB5) [Image 3](https://imgur.com/DXVHkff)
This can be done by HTML and jQuery only.
Go search some job websites (dice.com, monster.com, stackoverflow.com) and see for yourself the actual market for skills x location x company size.
&gt; MyEnum derives, like every enum from System.Enum. &gt; &gt; &gt; &gt; No it doesn't; that's a lie for your convenience. Yes it does. Every enum still derives from the abstract class `System.Enum`. However, that one derives from the type `System.ValueType` - which causes it to become a value type (like a struct) Also when you do something like `public enum YourEnum : long`, is won't actually derive your enum from long. It will change the governing type to long
Well, for starters, the winapi on which they depend are not implemented on Linux and mac. Of course there is wine, but I don't think that's what you meant.
Only? Oh right better delete my vanilla or framework Javascript for modals that I've been using fine if jQuery is the only way to do it.
There is way more to that. What you are missing, for the most part, is the fact that those DLLs and Files are bound to the “environment” (OS, target framework) they are developed for. Let us, for example, assume that you move some WinForma and GDI DLLs from Windows to macOS. Where would you put them? Let’s assume that you find a place where macOS loads libraries. How can macOS load DLLs? It’s library formats are .SO and .DYNLIB, it doesn’t understand DLLs. Let’s assume that you find a way to load those DLLs in memory when an application requires them. Well, those DLLs are built upon Windows code, so when they try to call any function specific to Windows (i.e. all the time) they would crash horribly. When it comes to code, the “target environment” is very important. Frameworks with a runtime (.NET, Java, Python, Ruby, JavaScript, ecc..) abstract a portion of this by offering a set of functions that are (usually) the lowest common denominator between al the platforms, meaning if Windows, Linux and macOS have feature “X”, a framework can expose it safely (kinda), while if only Windows implements feature Y, the framework has to either “create” that feature itself for macOS and Linux (which is either hard or nearly impossible), or skip it altogether.
&gt; MyEnum derives, like every enum from System.Enum. &gt; &gt; No it doesn't; that's a lie for your convenience. Incorrect. All enums derive from `System.Enum`. What an `enum` really is under the hood is a value type (a struct, but not really) with a bunch of public static fields, which are constants of the enum's type.
So they are wrappers for Win32 which doesn't exist on Linux or Mac, how do you suggest they would work?
Removed: Rule 4. Can you provide code of how you're retrieving, downloading, and reading the file?
I didn't read it in detail but you need to learn about types. Making everything a string isn't going to work if you need to do calculations. Numbers need to be stored in numeric types.
By asking experienced devs for help, you risk your code LOOKING like it was written by experienced devs. How you wrote it is not like real world code, but a beginner course doesn't expect real world code. Is this a 101 class? Also why is the picture sideways? My neck hurts lol
Hi, you will definitely have a job there is a significant C# jobs. 2018 survey has shown that C# is 5th most popular needed language in job market BUT also i would like to point out that C#/.Net jobs are mainly connected with enterprise environment, like banking, insurance, outsourcing,betting, etc . You will hardly find cool startup which is using C#, or cool tech giants like Uber,Airbnb, Salesforce,Palantir, VMWare,RedHat etc. Amongst big4 only Microsoft is using C# which is quite expected. I just want to say that C# jobs as a rule connected with boring enterprise environments. Only exception is Unity3D if you want to jump into gaming development that it will be nice option. Also there is hope that via .Net Core Microsoft might improve aformentioned cons, startups and other cool tech companies might start to use C# and .Net . 
Not necessarily only jQuery... I meant You can look for options like jQuery UI other than razor views or partial views... JavaScript modal window is also an option... Should be supported by the browser though...
Sure, and I agree with you that records in C# 8.0 is pretty unlikely, but there's a difference between "They are not" and "They probably aren't".
We do have fewer than ten and it's likely going to stay that way. My boss came up with the idea of using partial classes in the base project and referencing it as a source-only package, and we'd put all of the configs in their own classes rather than in `OnModelCreating` The customer-specific projects would inherit from that but could override the configuration classes if necessary. We can't use scaffolding because there's no way to scaffold the configurations into separate config classes (unless we manually copy/paste them), but I _think_ this method would work.
Let me get this straight out of the way: It's not that I haven't been exposed to the gospel. I know it pretty well since I'm following F# since 2008, and I've actually used it in commercial development, mostly because C# lacked language support for asynchronous programming back then. I'm just not that impressed. It has certain strengths in certain niches, but it isn't that great as a general purpose language. What you are proposing isn't "strict" (seriously, what's that supposed to mean), it's a hack that is in no way idiomatic F#. I dare you to try finding documentation for access modifiers or member definitions for union cases. You won't even find that mentioned in the official language specification. On top of that, it doesn't even work the way you seem to think it does: Microsoft (R) F# Interactive version 10.2.3 for F# 4.5 Copyright (c) Microsoft Corporation. All Rights Reserved. For help type #help;; type Name = private Name of string with member this.Value = let (Name str) = this in str static member Create str = match str with | "" | null -&gt; Error "empty name is not allowed" | str -&gt; Name str |&gt; Ok let login () = printfn "please enter a name " printfn " " printfn "have no fear, you can't cause any harm, " printfn "since I have taken precautions that prevent " printfn "invalid state from being represented! " let input = System.Console.ReadLine() match Name input with | Name "" -&gt; printfn "invalid name detected. Purging all human life!" | Name name -&gt; printfn "Oh hello Dr. %s!" name ;; Go on, try entering an empty name... 
https://www.c-sharpcorner.com/UploadFile/092589/implementing-modal-pop-up-in-mvc-application/
We're heavily invested in EF, unfortunately switching to something else isn't an option at this point. I also don't like the idea of using dynamics (or equivalents), I prefer to avoid them as much as possible.
I know you already got some explanations, but the gist of it is the following: Covariance only works for reference types. MyEnum is a value type, while System.Enum is a reference type. When you cast MyEnum back to an Enum, it boxes it, making the covariance impossible.
Windows is hard.^(seriously you thought systemd was bad wait until you try to figure out shit like how to stop adobe flash updater getting restarted by an IE plugin even though you don't use IE or pick a million other problems that are basically solved by googling meaningless error numbers and trying random commands until something fixes it and trying to figure out *why* that fixed it leads down a rabbit hole of mediocre documentation that is unintelligible to anyone who isn't a COM land wizard.)
Yes, fair enough. I've edited my post. My main concern was that people don't get their hopes up.
I'd just like to add that I've had success with my C# career as a higher-level systems engineer (as opposed to lower-level, i.e. embedded/micro); which is exactly the sort of work I enjoy. It's not all enterprise or banking haha :)
Make sure you are using a FilteredPointsList such as: private FilteredPointList _DataPoints; then you can set the max points shown: _DataPoints.SetBounds(double.MinValue, double.MaxValue, 10,000); Be sure to call this if the zoom changes. Also given the datapoints you have, you could probably just differentiat by color and hide the symbol: LineItem.Symbol.IsVisible=false; Sorry so late in responding. 
Can't say I've tried it myself. But given everything else you've told me so far, I think it's your best bet.
I had the same misunderstanding recently. You can't inherit an enum like this. You can get a decent workaround by mapping one enum to another, which may or may not help you. public enum Foo { Blue = 0, Green } public enum Bar { Blue = Foo.Blue, Green = Foo.Green } var myEnum = (Bar) someMethodThatReturnsFoo(); &amp;#x200B;
P.S. Good luck. I know how crazy those projects can get when there's truly no good solution.
Not for OP, but others who are thinking about getting into this kind of mess I highly recommend: * Use database schema to separate customer-specific tables from shared tables. * Put customer-specific columns in their own one-to-one table. For example, the `BigCo.Employee`, which has columns such as `EmployeePainNumber`, would share a PK with `HR.Employee`. 
And then require the Linux kernel to implement the NT API, kernel space, user space, runtimes, Win32 PE EXE loader, memory manager, in order to then run those Win32 DLLs?
Null reference exception means that one of your objects isn't getting instantiated. Figure out which one it is and start there. [Otherwise, maybe look at this](https://www.c-sharpcorner.com/blogs/viewdata-vs-viewbag-vs-tempdata-in-mvc1)
No it is not a reference type. [System.Runtime.InteropServices.ComVisible(true)] [Serializable] public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable https://docs.microsoft.com/en-us/dotnet/api/system.enum?view=netframework-4.7.2
&gt; class That makes it a reference type. Whenever you use System.Enum instead of the actual enum type as a parameter type, you're boxing the value.
The type system gives you the illusion that it derives from `System.Enum` just as it gives you the illusion that an Int32 dervies from `ValueType` and `Object`. (ref https://docs.microsoft.com/en-us/dotnet/api/system.int32?redirectedfrom=MSDN&amp;view=netframework-4.7.2) But it is just an illusion. Once you start looking into things like variance or generic type constraints it becomes clear the real story is far more complicated.
Can you use an SSDT project for schema comparison, storing each unique schema either in a new project or just a new folder, for each client? With that your can then regenerate the EF entities based on whichever schema you've targeted, based on the client's specific changes. Maybe that's a bit of a hassle, tho, I'm not sure of a better way to go about it, so I'd be curious to see what you end up doing.
It literally says `ValueType` in the inheritance chain. Really though, it's neither a value nor a reference type. `System.Enum` is a special case that breaks all kinds of rules. When you look at the IL you'll find that * All types are marked as `.class` * Normal structs are marked as `.class value` * All enums are marked as `.class enum` and `extends System.Enum`. * `System.Enum` is marked as `.class` and `extends System.ValueType`
That's another lie for our convenience. Bare with me because this is really weird but also kinda cool. When you write `public struct MyCoolType` you are actually defining two classes as far as the runtime is concerned: the value class as we think of it and a separate reference class. This hidden reference class is used to deal with boxing, inheritance from `System.Object` and interfaces. You'll never see called out in the IL code, this is an implementation detail discussed in the CLR specifications. (And to be honest, I only know the superficial details.)
I would chose the last option because you might hit another roadblock soon after. I am not sure about your web-service but how about migration to REST services with stateless authentication? If there aren’t too many dependencies on it. I am not sure I understand what you need but my first gut feeling is that your project needs refactoring.
Unless you are hosting it on a server, the databases are local to the phone. Some services offer SQLite databases but they just are not as popular as other database systems. For further questions on Xamarin, you might want to use the subreddit 'XamarinDevelopers'.
They could be looking to move away from Windows and they want people with Linux experience to help lead the way.
Yep, I do that. It's annoying but it work. 
If they find an employer looking for that then perfect, however that'll be an exception to the norm.
I forgot one, database first. Include a build task that regenerates the EF models from the customer specific database. 
Ive worked on a couple of solutions with multiple schemas and it was a total pain in the arse trying to remember what schema a certain table was in. I hated it. 
I usually use `.OfType&lt;BaseClass&gt;()` for this propose (and also `.ToList()`, if the consumer requires `IList` but not `IEnumerable`). If you don’t mind creating a copy of your list. 
It doesn't have to be that way. If you can't remember which schema something is in then it's in the wrong one. 
This predates nullable&lt;T&gt;.
It's super strange to me that people end up in situations where this is desired. This is like having a List&lt;int&gt; and needing to pass it as IReadOnlyList&lt;long&gt;. Yeah, technically it should work but I never need to do such things.
Nice! Thanks for posting. 
You saying put it in a seperate schrma so i know were its from. Im saying put them in the same schema so i dont have to work out where its from. n.b. the last project had a core schema and then the logging didnt have a schema and then each of the 5 modules had a schema... I would start writing sql, then have to go to the code to work out what schema an object was in then back to sql. Rinse and repeat, hence my hate for the miss use of schemas. While 2 might be managable you can bet your botttom dollar some arse is going to add another when you leave.
Link?
For me it usually happens when I'm developing frameworks. Straight application development rarely has this problem. 
How many tables are in the shared model? If it's less than 8, I'd create an abstract base DbContext with those types as generic type arguments. If more, you can compose them from generic holder classes like this: ``` public abstract class UserStore&lt;TUser, TRole&gt; where TUser : IUser where TRole : IRole { } ``` You can sublass each one or use the one provided with the Core package. You can also put the base config in the base class's OnModelCreating. 
No, although that is a good suggestion! I'll do some demo videos when I get some free time. Until then the project examples are still available, although only the 3D one makes sense by now (if that one even makes any) :)
OMG the cumulative returns chart in Q-studio looks very WealthLab-ish!! Haven't used this wonderful program since Fidelity bought it. Can't wait to try this out.
Do the customers get their own database or is it one database? Hopefully, in my opinion, they each get their own database. In that case, have the custom classes inherit from the base classes and only use the custom class with EF. EF should manage the tables for you at that point.
Can it output and input in separate threads simultaneously? I was struggling with it some time ago.
Yes kind of. It reads key presses, can't actually do a readline(). The key presses do not echo to the screen, so you could technically do a readline function. Might actually implement that!
Yeah, I could see why that would become messy. I do believe with my implementation that would be possible though, since input is not actually collected through the console :) I'll have a look at it tomorrow!
I used KeyAvaliable in endless loop. Would like to peek at your code!
Go ahead! This is why we have open-source ;)
So, I've never tried this for filtering purposes, but i think it's work trying. &amp;#x200B; I noticed in your cshtml your model is IEnumerable&lt;Empire.App.DocumentTracker.Entities.Document&gt;. What you can do is create a ViewModel (FooVM for example purposes) and then add your list to it, as well as an enum with your filter values (call it enum FilterValues). Now you'll need to make sure that you create it and populate it correctly before it's passed to the view. You actually can put all the information in your View Data in there as well (it's usually a better idea). So then in the view you'll have @model FooVM and then where ever you need to put the dropdown list you can put: &lt;select asp-for="(whatever parameter name for your search)" asp-items="@Html.GetEnumSelectList&lt;(Where ever the model is).FilterValues&gt;()" class="form-control"&gt;&lt;/select&gt; That will populate the dropdown list with your enum and you can have it sent to whatever parameter your search action needs.
You could serialize the custom property class for each role to json and store that in a property/column. 
The Repository pattern works for anywhere you need to retrieve/save data. Most commonly that's a database. However, a REST API definitely qualifies as a data store, as least from the perspective of your app. 
Thanks! Missed that I guess. 
At that point just make two classes or re-evaluate your methodology.
Just pushed the code to github. [https://github.com/SharpSeerGroup/IdentityServerExamples](https://github.com/SharpSeerGroup/IdentityServerExamples)
oh, yeah, right. will edit it out, thanks for the reminder
I work for a small, cool .Net based shop. When I started there were 6 of us. There's about 30 now. The .Net service I run serves like 1.5 billion requests per month, over 200 TB worth.
I will try this, thank you
Looks awesome! Any plans to try to work around the 16 color limit?
thank you for taking the time out to rely. I appreciate it
thank you for the advice. will do some more reading on data type. I just started programming recently
Ok thanks :D
The two examples need external files. I was able to download caligrafy.flf, but couldn't work out cube.obj for the other one.
LOL yes, that is me :)
It looks closer now since I decided to change the color back to the green ;)
Yea, that makes sense. 
Nice to speak to you again Glitch! I am an early Wealth Lab user. Quantacula looks great I'm glad you are back in the game and this time with a .net platform. Quantacula.com has a new user!
You can sort of get table per concrete class with EF core, though it's a bit fragile (just avoid having dbset for the abstract class and send each implementation to it's own table).
It would be interesting to see this solved using Wine 🤔
It might make sense to have a single thread dedicated to calling `Console.ReadKey(true)` in an infinite loop - the thread will wait for any key to be pressed, then intercept it. You can then send the input wherever it needs to go from that one thread. Otherwise, with multiple threads asking for input it's impossible to tell which thread gets a key (e.g. `hello` could be sent to two threads as `hlo` and `el`). If you want to write the input keys to the console, store in a StringBuilder or something until you're ready to dump (e.g. after a newline) and then wrap Console.WriteLine for all threads so that each call locks - that way only one thread writes its output at a time.
Yup, been there! Was actually messing with the same solution as you in the beginning, I was also having that empty row issue! Thanks for the kind words, I'm glad I could help out! :)
Please update this thread if you include the missing files. I would like to take it for a spin.
Thanks for joining my new journey Sam! Hope to see you on our fledgling forums, if you have any questions or ideas please post them 🙂
Have you looked at multi tenant sources? https://dzone.com/articles/multi-tenant-api-based-on-swagger-entity-framework-1 http://benfoster.io/blog/aspnet-core-multi-tenancy-data-isolation-with-entity-framework https://oncodedesign.com/data-isolation-and-sharing-in-multitenant-system-part2/ Might have some tips for you or hopefully at least spark an idea :)
If i was on dotnetcore 2.1, then I would totally use it. I may try my hand at using it again, but The [nuget package](https://www.nuget.org/packages/Microsoft.Extensions.Http/) just brings in so many dependencies.
It is absolutely a problem. Disposing an httpclient for every request will very quickly lead to socket exhaustion errors (although i agree, that your mileage may vary depending on the application).
I am glad for you but you have to agree with fact that .Net is used rare in such fields. Most of the startups and well-known giants firms using Java,Python,Ruby, etc
I meant re-using one client is not a problem. One per host name, at most. One is fewer.
its extremely easy to find jobs with C#, it might sound like an unpopular lang to you now but in reality a huge chunk of enterprise infrastructure runs on C#
Thanks for your answers. We have decided to at least upgrade the framework, but we are gonna have further discussion of weather or not we will move to a newer approach (like REST) right now, or if it something we will do next year. &amp;#x200B; Thanks! :) 
&gt; I expect attribute to be null for some nodes, that's why I'm checking for it. But you are not checking if the attribute is null. You're checking if the attributes value is null. `node.Attributes["attribute"]` will be `null` already.
Mind Blown Sorry I'm new to c#. Cheers.
Good approach! Thanks!
Well technically it did have a schema, it's schema was dbo :)
\^\^\^ plus tell the customers to bugger off and stop wanting custom stuff :)
Thank you. So should I also learn database like sql?
[removed]
Give it another couple of months, you will start to 'understand' it and be salivating at the idea of the upcoming [nullable reference types](https://blogs.msdn.microsoft.com/dotnet/2017/11/15/nullable-reference-types-in-csharp/) before you know it.
Hi, can you paste the live template here? And the VS extension? 
I was thinking of using VUE.js as well. But I believe I should have done a rest API instead of MVC solution or am I wrong?
What IDE do you use for your solution? I'm trying to compile with VS2017 but there are some missing files and have to organize them..
Yeah sorry for that.. i also compiled in VS2017, but somewhere along I decided to not post my sln file for some reason. I'll do a cleanup and then publish that one too!
Why would you do that? Isn't it better to use a generic method like so private static void MyMethod&lt;T&gt;(IReadOnlyList&lt;T&gt; enums) where T : Enum
&gt; Use uint32 in F# or uint in C# instead of int. No need to check in either language. ZUint32.MaxValue probably is no valid age either, and you might want to restrict age to &gt;= 18 or something like that. This here is obviously not a real world example. And no, I'm not saying that there is anything C# can do that F# can't. I'm saying that as soon as you use F# for the same stuff as C#, it starts to look quite a lot like a slightly less verbose but way more complicated C#, with 2nd class tooling and a tiny job market, i.e. not a good trade off for most use cases. I suspect that it's pretty great for Quants, Scientists and such who are building complicated mathematical models from heterogeneous data sources mostly by themselves and it seems to have made inroads into that niche, but elsewhere, not so much. 
&gt; private static void MyMethod&lt;T&gt;(IReadOnlyList&lt;T&gt; enums) where T : Enum That's a good point, I missed that using Enum as Generic Constraint has been added recently (in C# 7.3), just read up on it.
Then can I send pull request with sln file? I made them compile well.. without cube.obj. 
Hi, I actually did this. In my code there is SelectedItem="{Binding SelectedCode}" .
Especially at junior level, "years of experience in the exact technology that they use" is overrated, and "aptitude for learning" is underrated.
You can run a Linux on Windows. Get a windows 10 machine, [install WSL](https://docs.microsoft.com/en-us/windows/wsl/install-win10) and then put a linux distro on it. Best of both worlds ;)
Do you new up the itemssource entirely?
Yes, I am doing newing it up. How can I add the new items without new up the observable collection ? Because the ItemsSource is set by a poll to database which retrieves all the items. 
First of all, why are you trying to keep the previous selection if it no longer exists in the dataset you're binding to? Or rather, if an entirely new dataset isn't what you actually wanted then why are you creating an entirely new dataset? It's simple, public ObservableCollection&lt;string&gt; Tests { get; } = new ObservableCollection&lt;string&gt;(); static async void Poll() { foreach(var newtest in await GetMoreTests()) { Tests.Add(newtest); } } &amp;#x200B;
Well, do you actually need to update the combobox? Do the contents of the table change often? If not, then set it’s itemssource once and leave it alone. If it updates frequently, before the update, store a local variable with the item value, then set it as such after the update. 
I have now added an example object monkey.obj instead of cube.obj. check it out!
I have added the obj file now, replaced the cube to make it more interesting. just download the monkey.obj and refer to it in the example code!
I built the Vue stuff in VS Code using the Vue cli. I know there are plugins for VS but I could never really get the IDE as a whole to play nice with Webpack and npm in general. Sorry I'm not much help for your current project!
Thank you for your reply. Come to find out, the previous programmer on this was using a specific JQuery table, and all I really had to do was go to this [page](https://datatables.net/examples/api/multi_filter_select.html) and copy that and put it in a script tag for that page. Also had to put in which `.columns()` I wanted
Removed: Rule 4.
 @Html.DropDownList("**Month**", new SelectList(Enum.GetValues(typeof(Month))), "Current Month", new { @class = "form-control" }) &amp;#x200B; First parameter of the DropDownList html helper method is the property in your model where you want the slection to be stored, so it should properly be monthselect. 
Would have been a good example 10 years ago. Try using MVC, WebForms shouldn't be the way forward for new projects imho.
&gt; &gt; &gt;So that's what I thought, but in the controller, monthselect is always "January" which is the first item. If i pick April, the return will be January. public ActionResult Populate(Compare\_List Model) { //pass month selection string val = Model.monthselect.ToString(); }
I hate to agree because you worded ot like a dick, but you are right.
You'll probably need to elaborate, he'd have made that intuitive jump already if he understood how to apply it. 
I think it's better for the OP to go and research these topics. I find just doing all the work for other gives them bad habits of just posting the question instead of doing the necessary research. So I just prefer to point them in the right direction and let them go.
I'd normally agree with you. But it looks like he understand lists and arrays but hasn't realised the next step of lists of objects containing lists etc. 
Protip: Indent each line of your code with exactly 4 spaces when posting on reddit so the code is easier to read. Secondly, property names do not contain verbs -- by convention, only method names contain verbs. So, instead of `GetCategories`, your property name should simply be `Categories`. Thirdly, if you are only creating private backing fields of your properties because you need to invoke the `PropertyChanged` invent, then there really isn't a built-in solution to avoiding private backing fields. Some tools like PostSharp can modify your code during compilation to automatically apply the "property changed" pattern on properties. PostSharp enables Aspect-Oriented Programming (AOP) by intercepting compilation and automatically implementing some aspect X, usually controlled through the usage of attributes. For example, if using PostSharp, you could automatically implement the "property changed" pattern like this: [NotifyPropertyChanged] public class MyDataSource { public string Name { get; set; } } More info on that can be found [here](http://doc.postsharp.net/inotifypropertychanged-add). If you don't want to use something that intercepts compilation, you can implement something like my [ObservableObject](https://github.com/Bryan-Bennett/Boondoggle/blob/master/System.ComponentModel/ObservableObject.cs) class that provides convenience methods for implementing the "property changed" pattern, though you'll still need private backing fields.
Trying to figure out why this tutorial shows screenshots from VS2012. In any case: don’t start a new project with Web Forms. And don’t start a new architecture that heavily relies on Stored Procedures.
I got all the changes I just see a black console window. 
&gt;ropDownList html helper method is the property in your model where you want the slec In the code you have pasted in the original post, the first parameter of the DropDownList html helper method is "Month" not "monthselect".
Hey there. I found the Rider template here - https://www.spacjer.com/blog/2011/08/19/live-template-for-caliburn-micro-framework/ The Visual Studio one you just get through the VS plugins menu by searching for Caliburn Micro I believe. I don't use VS often and I am at work and don't have VS installed on this pc, so I can't look at the moment but if I remember correctly, it should be pretty easy to find.
&gt; null-conditional operator
I am sorry I am confused so in my html helper user "monthselect" instead of "Month"? I tried and the controller is still returning the first item. "January" @Html.DropDownList("monthselect", new SelectList(Enum.GetValues(typeof(Month))), "Current Month", new { @class = "form-control" })
It takes as much CPU as it can since every time it finished processing the queue entries it starts again. Adding a delay is fine. You could also some kinf of trigger, to only run the background service while the queue has entries.
&gt;Thanks. &gt; &gt; &gt; &gt;Is this a class, object or a property ? I thought public string Comment { get { return this.\_comment; } set { if (this.\_comment != value) { this.\_comment = value; this.OnPropertyChanged("Comment"); } } }
[There is an open issue to add support for this.](https://github.com/dotnet/csharplang/issues/158) It's not allowed because the work hasn't been done to allow it. Expressions were added around 3.0/4.0, and the null coalescing operator was added in C# 6.0. Sometimes, features lag.
Well, ?? works and is a kind of null-conditional operator. But it's also older.
?? is a null-coalescing operator and works.
I'm pretty sure it's just backwards compatibility rather than any conscious design decision. Expressions just don't have any way to express certain syntax features that were added later, and there's no way to version them. For example, there is a `ListInitExpression` that supports both `new List&lt;int&gt; { 1, 2, 3 }` and `new Dictionary&lt;int, string&gt; { { 1, "a" }, { 2, "b" } }`, but it doesn't support the newer dictionary initializer syntax `new Dictionary&lt;int, string&gt; { [1] = "a" }`.
Sorry, null propagation operator.
It may be "kind of" a null-conditional operator, but it's no null-conditional operator. That name refers to only two specific operators.
Why do you think it's backwards compatibility? How would adding support for it be a breaking change? I think the more likely reason is: no one added support for it. And priority for this feature has been low.
Question: if you are using a queue/servicebus, why you use a while(true) approach instead of actually subscribing to the queue and reacting on a new message. QueueClient should have a method like client.RegisterOnReceiveMessage(myMessageHandler);
&gt; How would adding support for it be a breaking change? Technically its not, but libraries that currently interpret expression trees are going to be confused.
C# does not provide exhaustive checks, so there's no way to ensure "all" expressions have been dealt with in those libraries. In some code paths they must throw exceptions for invalid/unsupported expressions. Nothing changes here.
This is considered a bad coding practice: public ObservableCollection&lt;Category&gt; GetCategory { get { return this._getCategory; } set { if (this._getCategory != value) { this._getCategory = value; this.OnPropertyChanged("GetCategory"); } } } Instead you should have public ObservableCollection&lt;Category&gt; GetCategory {get;} = new ObservableCollection&lt;Category&gt;(); Add or remove items from the collection, don't destroy and replace it. That way the UI only has to listen to collection changed events, which ObservableCollection provides automatically.
 &lt;telerik:RadComboBox Grid.Column="2" Grid.Row="0" Text="{Binding Category.Name, Mode=TwoWay}" Margin="0 4 0 4" FontSize="13" IsReadOnly="True" ItemsSource="{Binding GetCategories, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Name" SelectedValue = "{Binding ID}" SelectedValuePath="ID" }" /&gt; 
&gt; ItemsSource="{Binding GetCategories, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Normally an ItemsSource isn't two-way. How does the combo box change the collection?
I wanted to make a console game library that would use Win32 API calls to render a TEXT buffer, but oh boy... this thing is awesome!
Markdown formatted as code: class Foo { private ObservableCollection&lt;Category&gt; _getCategories; private ObservableCollection&lt;Category&gt; _getCategories1; private ObservableCollection&lt;Category&gt; _getCategories2; /* ....... */ public ObservableCollection&lt;Category&gt; GetCategories { get { return this._getCategories; } set { if (this._getCategories != value) { this._getCategories = value; this.OnPropertyChanged("GetCategories"); } } } }
iirc Windows 10 (with min Anniversary Update) can use up to 256 colors in console
I actually don't know, I'm used to propertyChanged event kicks in and updates the UI, but it doesn't do this, cus there's no propertyChanged rather than an object added. If I'm emptying and creating a new observablecollection with the new data it updates fine. 
That doesn't sound right, but data binding is a bit of a black art so I may be missing something.
It has to be a way to do this, I just can't find anything relevant in the internet.
Thank you! Yeah it's pretty messy, wouldn't be surprised if it broke down for some users.. :p
Please leave a more complete issue on the GitHub site! With any errors popping up etc. I have no idea why you're getting this issue.. yet!
Two?
`?.` and `?[]`. https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/null-conditional-operators
Yea, weird. The spec only talks about THE null-conditional operator. https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/expressions#null-conditional-operator
Best advice: do what these other folks are saying. But if you just want a quick fix, use this instead of `Task.Delay`: System.Threading.Thread.Sleep(SLEEP_LENGTH_IN_MS); Call it once you call the result of a task or `Task.Wait`, because what you really want is for the thread to stop using resources for a period of time, not for a parent thread to pause while the child threads continue to churn away.
`string name;` is already invalid if you use it without assigning first. But if you want to use null, just use a nullable string. If you want to return it as non-nullable though, you have to do a null check first.
This works for me View: @model MonthExample.Models.SelectMonthViewModel @{ ViewBag.Title = "Index"; } &lt;h2&gt;Index&lt;/h2&gt; &lt;div&gt; @using (Html.BeginForm()) { &lt;div&gt;@Html.DropDownList("SelectedMonth", Model.SelectableMonths, "Current Month", new { @class = "form-control" })&lt;/div&gt; &lt;button type="submit"&gt;Submit month&lt;/button&gt; } &lt;/div&gt; Controller: &amp;#x200B; public class HomeController : Controller { public ActionResult Index() { return View(new SelectMonthViewModel()); } [HttpPost] public ActionResult Index(SelectMonthViewModel model) { return View("MonthResult", model); } } Model: public class SelectMonthViewModel { public Month SelectedMonth { get; set; } public SelectList SelectableMonths { get { return new SelectList(Enum.GetValues(typeof(Month))); } } } &amp;#x200B;
awesome, thank you so much!!! this has been driving me crazy all day. 
You may need permission on the host server for the folder address within your application. Might want to consider encryption for any sensitive data or credentials at rest also.
&gt; I am concerned that there may be multiple CSimObject instances for a single real-world object. To clarify, do you mean that it's never valid for there to be multiple CSimObject instances of the same type? If that's the case, you may want to use something similar to the factory pattern to ensure that CSimObjects are treated as singletons. public static class CSimFactory { private static ConcurrentDictionary&lt;Type, CSimObject&gt; Instances = new ConcurrentDictionary&lt;Type, CSimObject&gt;(); public static T Get&lt;T&gt;() where T : CSimFactory, new() { return Instances.GetOrAdd(typeof(T), (_) =&gt; new T()); } }
The `IDisposable` interface is designed to be used with the `using` block, which automatically calls `IDisposable.Dispose()` when the block ends.
You can mix vue and mvc + razor to get benefits of both if you do not want to create full fleged single page application. But ultimately you will probably have to make a lot of API requests from vue anyway, and website will load slower.
No, it's quite possible for there to be more than one. It's just that for some objects, there should never be more instances than there are objects in the real world. For example, the database I'm working with contains 71 records in the Inventory table, each representing a coil of steel sheet. But I was seeing that there were 142 instances of the CSimCoil object in my program. I had run into a case in which I was editing a few of them, but there were other CSimCoil objects representing the same coils of steel, and they weren't being changed. That particular bug has been fixed, but I want to make sure there are no similar bugs in the program.
Thank you, but changing how objects are collected is not an option. That would require a major rewrite of the library that manages the CSimObject instances, and I'm only peripherally involved with that library. I'm working on an application that uses that library. 
There's a couple things you could try. But first, understand that C# (and .net in general) is a "managed language": it's designed to handle memory management for you. That, by default, makes it very difficult to do what you're trying to do. Perhaps you should consider moving to an unmanaged language like C++ for this project. So if you read up on the garbage collector, you'll notice that it separates objects into generations. I don't remember the exact rules, but basically \`GC.Collect()\` tells the garbage collector to clear out Generation 0 (the youngest objects). As a side effect, this also moves whatever objects are still "in use" from Generation 0 to Generation 1, so that they don't need to be checked again later. At some point, Generation 1 will also get cleared. My guess is that something about your code is causing your object to get flagged for addition to generation 1 instead of flagged for removal. You might consider a conventions base approach: any time you use a Disposable, always wrap it with either a using block or another Disposable. This way, you're guaranteeing a known time when the object will be destroyed. Messing with when the Dispose method gets called is *way* easier than messing when a destructor gets called. Alternatively, you can use a pool of objects to manage your own memory and just never destroy any of them. Use a public static factory method that "create" and "destroy" the objects on demand. Only, if the object has already been created and another create call gets made before a destroy call, you can throw an exception instead. And when the object is supposed to be "destroyed", you just cache it off so that you can return it next time it needs to be "created". This will only work if you're dealing with a known set of objects: if it's possible that this application will run for a long time and generate thousands of different types of things that are all unknown, then this method would fail. Anyway, long story short, .Net isn't really designed for letting you directly control when the destructor gets called, and it's almost always easier to work around the destructor instead.
\^this. Also bellow you provided the XAML binding expression, there get rid of Mode and UpdateSourceTrigger. You need TwoWay if you want to modify your items in the gui (which is not the case I suppose) The UpdateSourceTrigger is also not needed because ObservableCollection takes care of that
Yea don't bother with the finalized, just have a single dispose method that does everything you need. Then make sure you dispose your objects when you've finished with them.
C++ destructors get called when the object is no longer referenced, and that is determined using unique pointers and shared pointers, which are both implementations of reference counting. Basically the developer has to specifically add code to count how many things are referencing a given object (by specifying copying or moving pointers) You can do exactly the same thing in c# but just like in c++ it doesn't come for free and you will need to manually count references and call your dispose method when the reference counting reaches zero.
. Add something like console.write("i=”+i) inside loop and see what happens during execution. Next, think of whatever is inside square bracket as of selected position in array (like row number in excel). Now you should be able to understand that program is going through "cells" of array one by one and puting there number entered by user. Worth noting is that "new int[100]" creates array of 101 elements - from index 0 to 100. So if you call storage.lenght you will get value 101, not 100 as you might expect. So in case of your example last position of array will remain not filled, as fix you can change &lt; sign to &lt;= or even better enter "i&lt;storage.lenght" instead
Yeah but ask 30 devs what the repository pattern is and see how many tell you that it's a DB access pattern - most of them will. It's a poor name, just like MVC.
Another vote for Hangfire. We use it for jobs just like this and it works great.
I'm pulling a ceiling of 220 FPS using WPF (4 panels rending @ 55fps each) along with image processing on the backend, so WPF is definitely very capable of high performance. What does your CPU use look like? And what does your code look like?
Get rid of this whole approach. Disposable and destructors are not intended for what you're trying to do. If you want to make sure you have a one to one mapping between instances of CSimObject and records in a database, then just only create one object ever for each record and use some kind of cache to look up existing objects instead of creating new ones. (E.g. a `Dictionary&lt;SomeKey, CSimObject&gt;`)
&gt;71 records in the Inventory table &gt;142 instances of the CSimCoil object in my program Looks like you read the table twice. What ORM/database access method are you using? Do you have your own repository or are you using the ORM as the repository? Is the database going to be accessed by more than one instance of your program? If so, how will you update the number of expected objects when other instances write new records to the database? Are you doing any work asynchronously? The dictionary tracking you have is not thread-safe (though to clarify, there is almost certainly a better way to prevent this class of defect than manually tracking object instantiations).
Why is this tagged with NSFL?
We have many big solutions &gt;_&gt; NuGet packages are a great way of sharing code if you're able to write generic enough libraries. Another way of doing it (if you're using git for source control) is to put shared code in submodules or subtrees. One more simple (but less complete) way of converging is to work to make sure project structure of different solutions is as similar as possible; if you're copying and pasting anyway, you might as well paste in a whole project folder with common code rather than copy-pasting snippets here and there.
Meh. Dependency injection lets you exchange parts of code. So the first question is wether you have something that you want to change with other code. Most of the time you don’t. A common thing you want to replace is code you cannot run in unit tests because it uses IO. However what you do want to test is the logic and not the IO, so extract it to IO-less code. The second question you should ask yourself if replacing really works. You have to nail down an Interface that fits for all variants. If you connect a replacement component with the same old interface you might have a lot of work fitting the model of the new component on the model of the old.
+1
Sooo....up a creek without a paddle. Noice. 😂
Agreed. But ask 30 devs to come up with a good name for anything and you'll come up with 30 blank stares. 😋
One thing you can do is have a store forward db table with a flag processed. Then you can create a small web app that just takes whatever you need processed and runs. If you're hosting on Azure this is my recommended approach. I've tried HangFire and had huge bloat in my DB.
Right, that is because after you complete reading the steam you close the connection between the client. To keep it open after the stream ends then put the sshClient disconnect outside of the stream reader. 
Sorry for taking so long to reply, but there were some developments about this part of the program and I wanted to wait on those before I responded and as a result the client wants this feature taken out... I spent a lot of time on this, is this what industry is like? ;\~; &amp;#x200B; And No this is not for work, but my group from class is making this application for a client. 
This, and know that with .net core the nuget package is shared between solutions. They all know where to go to your local nuget cache, so if you want to debug your packages dropping the pdb in there and opening the file through source control you can debug the code. Or if you are really edgy you can replace the dll so you don't have to go through your deployment process. I built a powershell script in the nugetized projects to replace it and drop the pdb post build when I set the configuration to local (created a new one other than debug and release for that purpose).
Holy.. I knew it used DirectX but I never figured that I would need DirectX 9 for it. Installed it and its waaaay better! Thanks!
Good to know that it can perform that well! The culprit was that DirectX 9 was missing! Now its performing like a charm :)
Most of this is spot on, but I'm not so sure about Stored Procedures. I feel like that's still the way to go if you want to get max performance from your SQL. I mean, you can always make an ORM for most use cases and then drop to stored procedures if necessary, but many times ORMs just generate absolute garbage queries. Plus stored procedures are more easily 'hotfixable' than code nuggets, particularly for .NET Web Applications.
Didn't see a single car the entire tiem :(
Submodules are great. 
Yeah, I find them easier to manage than NuGet packages. If you go this route, you can add projects from submodules into your solution that depends on them. If you need to modify the submodule code, you can do so and push from the submodule.
One of the projects I work on has separate repos for each task ( one for the "payload algorithm", a datamanager, etc. With a good bit of shared code between them. I convinced the team lead to use submodules for it and he loves it. 
Yes we will switch to MVC very soon.
If they're using TFS 2017+ or Azure DevOps services, package management is built right in. You can even create build &amp; release pipelines that push nuget packages to the feed. https://docs.microsoft.com/en-us/azure/devops/artifacts/get-started-nuget?view=vsts&amp;tabs=new-nav 
Do you particularly like your work? If not **particularly**, look for another. Why? Because "150 solutions, many of which are never used reeks of a heap of crap ( other things you speak of also reek of crap). Trying to put order will be time-consuming and soul-crushing. Management is likely to try to stop you in attempts to improve the state because features are more important than internal quality. You are likely to make mistakes as well, that won't help your case. ================ Having said that , I have both big and small solutions at my work. **Both are OK.** (Also the company nuget server, we publish a dozen packages for consumption of other teams in the company. But if you're two people, a primitive "share as a package source" is better.) Discussions around whether the big one should be split and whether the small ones should be put together happen regularly, with pro- and counter-arguments for each. In the meantime, both approaches live their merry life. So... bikeshedding. @all: fight me! What is **leaps and bounds more** important is to get a handle of what you need and throw out the rest. Also move copypasta into one place and use it from there. However, copypasta is a bitch: it **will** have small differences left and right, they will be lost or done badly when copypasta is eliminated. And cause bugs. (Which brings me back to: **Run! Run away!**)
Simplest possible thing: on IIS, use HTTPS, require client certificate. Works with WCF and a WebAPI with 0 code involved. Constraint: not for B2C scenarios a la mass-consumer frontend.
Next tutorial you will see it. We will create the lasers of the car and the movement
Mainly one solution with 450 projects and counting. Works fine in VS2017. Kills your machine in VS2015 or lower. A lot of obsolete scattered smaller solutions for before I created the main one. We also have side projects in their own repository/solution. And we share binaries for the moment but plan to use nuget (or similar) for dependencies. Lots of legacy (both code and developers) so hard to have thing move. I wouldn't recommend our current setup for new projects.
For reusable methods we simply use a webapi controlled through Git. Works very nicely for us without having to go through dll hell.
Unfortunately I think there is no good answer to your question. You have, say hundred of thousand of code line, all scattered in different projects, for different clients, using different logic, database, dependencies... What you have is a one billion task problem. I would advice you to take the different projects and try to categorize them in term of business scope and technical scope. Starting from here you can see what is working quite the same way, identify what could be splitted into dependencies. Try to build up a plan to reduce the number of code line. Case by case.
&gt;Should I use collectionview for the combobox and most data I'm displaying? &gt; &gt; &gt; &gt; public ObservableCollection&lt;Category&gt; GetCategory { get { return this.\_getCategory; } set { if (this.\_getCategory != value) { this.\_getCategory = value; this.OnPropertyChanged("GetCategory"); } } } &gt; &gt;private async Task RefreshData() { var updatedCategories = await GetCategoriesAsync(); foreach (var category in updatedCategories) { var categoriesCopy = \_getCategories.FirstOrDefault(\_ =&gt; \_.ID == category.ID); this.GetCategory.Add(category); this.OnPropertyChanged("GetCategory"); CollectionViewSource.GetDefaultView(GetCategory).Refresh(); } &amp;#x200B;
Ok, I manage to get the collection of my data to update without the "glitch" blink effect in the GUI. I just poll new data to the collection and refresh the collection. Is there any way to refresh the GUI for observablecolelction? OnPropertyChanged doesn't seem to catch the changes.
This. I've seen the move from "done through referencing local .dlls." (AKA. a "lib folder") to an internal package source. It's what you need. 
There is Visual Studio Code which is a trimmed back version IIRC. I took a look at it a while back. Released for .NET Core most likely. https://code.visualstudio.com/docs/setup/linux
I’d just upload directly to the website from the client application and open a URL with an identifier for the file. This way you don’t have to interact with Chrome at all. Debugging could just be done with a decorator on the site and a local file on the client. 
&gt; I’d just upload directly to the website from the client application and open a URL with an identifier for the file. This way you don’t have to interact with Chrome at all. I'm afraid I'm not understanding. I'm doing it this way because the source is coming from the flatbed scanner and I can't run the code to do the scan on the website. The upload just inserts to the database... Would you mind going into more detail?
If the REST API is documented in [OpenAPI spec 2.0 or 3.0](https://github.com/OAI/OpenAPI-Specification), you may want to use OpenAPI Generator ([https://openapi-generator.tech](https://openapi-generator.tech)) to generate not only the API clients but also the documentation and server stubs. &amp;#x200B; Recently, we added the 100th generator (C client generator) to the project: [https://twitter.com/oas\_generator/status/1063488038284587008](https://twitter.com/oas_generator/status/1063488038284587008) &amp;#x200B; Disclaimer: I'm the top contributor to OpenAPI Generator
Oh I'm sorry. The way I'm reading your post now makes it seem you're already uploading from the application on the PC. I imagine the way you're spawning the process is causing the environment of Chrome to be passed on to your app. Could you use one of the other methods in this thread to get a path to the %APPDATA% folder, creating your own folder there? https://stackoverflow.com/questions/867485/c-sharp-getting-the-path-of-appdata
`Environment.SpecialFolder.ApplicationData` by itself is just an enum, not the folder path. Try getting the folder path as shown below, and see what happens: Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData), "Roaming\lcyduh\scanner\debug.txt");
`ObjectQuery&lt;T&gt;` constructor (what gets called when you "new" a class up) is expecting a ObjectContext as the second parameter (trying to wrap in a "using" statement is a red herring I think). I don't know what `NatsPosDatabaseEntities` is however, but for this to work it would have to be a subclass of `ObjectContext`, which it obviously isn't. The entire `System.Data.Objects` namespace is some very old technology. It was 'replaced' by a newer `DbContext` concept in Entity Framework 4 (around April 2011 I think). If `NatsPosDatabaseEntities` implements `DbContext` (i.e. something like `public class NatsPosDatabaseEntities : DbContext`) then you can get the `ObjectContext` by doing var objectContext = ((System.Data.Entity.Infrastructure.IObjectContextAdapter)NatsPosDatabaseEntities).ObjectContext; I'll be honest, trying to learn C# database concepts from a 2010 tutorial is probably a really bad way to go. Things have moved on so much since then.
I've used this a couple of times. [https://mahapps.com/](https://mahapps.com/)
I have been using WPF for more than 6 years in dozen of projects and I never ever used ICollectionView once. What is the use case? Why are people using it? Honestly curious.
I am not OP but I've never come across "DynamicData" -- what is it?
https://github.com/RolandPheasant/DynamicData
Why don't you just generate a nuget symbols package? By doing so, you'll be able to step through your code as if the nuget package is a project reference.
Thanks! I'll have a look at it when I get a chance.
This is one I've used http://materialdesigninxaml.net
&gt; When I looked at the solution, I didn't fully grasp it, but was amazed by the brevity of the solution. I feel the first step here is to understand the solution. I'm assuming that, in the version of the solution you've given, you've made a typo, and the "`reverted`" variable is supposed to be "`reversed`"? So here's the idea: I have a number, 12345. Let's create another variable, `reversed`, and put into that variable the value 54321, ie. the original number backwards. Clearly these two numbers are not the same, so it's not a palindrome. But if our original number was 12321, then the `reversed` variable would hold that, backwards, i.e. it would hold `12321`. This time, the two values are the same, so we have a palindrome. &gt; I thought about this way of solving it but couldn't form my thoughts clearly on how to implement it without arrays or `List&lt;int&gt;` Hopefully just by following where we're up to so far, you've now got the idea of how to do that? As for the actual implementation, let's look at the example of 12345 again. It does it in steps, one digit at a time: - reversed = 0, x = 12345 - reversed = 5, x = 1234 - reversed = 54, x = 123 - reversed = 543, x = 12 Etc, etc. At each stage, it multiplies `reversed` by 10 to shift everything along one digit, then adds the next digit on. Then, it divides (integer division, throw away the remainder) x by 10. So, when you said "I thought about this way of solving it but couldn't form my thoughts clearly on how to implement it without arrays or `List&lt;int&gt;`", you were already on the right track, but you just needed to think about a strategy for doing that. And now you've seen this strategy, what you need to do is store it away so you can bring it out if ever you come across any kind of similar problem. (For the record, I'm not sure I'd have come up with this solution either, but what I've just done is understood the solution and then stored it away so I can bring it out later if I need it!)
There should be installation instructions with the link. Right click your project&gt; manage nuget packages. You can search for this there. Then its a matter of changing the xmal mark up in your app.xmal and mainwindow.xmal. 
Thank you! I'll try it out (:
It is a cillwction with changes notifications. You can bind an ICollectionView to controls (for example datagrid) and you can work with the ICollectionView from the ViewModel (adding/deleting items) and changes reflects in the view.
Our policy is to have one solution for "customer order" which contains all projects. For example client app, services, management app, management services etc. (each of these contains multiple projects). And then we have sub-solutions if you want to open for example just client app.
To add: &gt; You can think of a collection view as a layer on top of a binding source collection that allows you to navigate and display the collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself. If the source collection implements the INotifyCollectionChanged interface, the changes that raise the CollectionChanged event are propagated to the views. &gt; Because a view does not change the underlying source collection, a source collection can have multiple views associated with it. By using views, you can display the same data in different ways. For example, you can use two views on a collection of Task objects to show tasks sorted by priority on one part of the page and grouped by area on another part of the page. 
I think it will work as long as you inherit from the base library. Think of these as compiler tricks. They are a short form of the longer initialization process. 
Perhaps [AutoMapper](https://automapper.org/) could be helpful for you.
That’s what it does - like from a database entity to a model or DTO. As long as the property names match (and the data types are reasonably close) it will map the values for you. If the names don’t totally match, you can hand-specify the mapping in its config. 
Ok, like the first mapping will map to the same datatype. After that I would like to map datetype currency to my object which contains the same values and property names. How can I do this? Since you can only specify mapping for one datatype?
Lets say the first mapping will be categories to categories. Categories also contains currency. I want to then map currency into Categories. Could you illustrate how it would look like in code with automapping?
Removed: Rule 7.
Removed: PVS-Studio is permanently blacklisted.
I unfortunately don't, I've only implemented it like twice in Java a few years ago for a class in college. I bet there are a bunch of example projects in different languages on GitHub that you can use. Since it's a design pattern I guess the most important thing is understanding what it means and then you can implement it yourself. 
Also, `\Roaming` isn’t right. `ApplicationData` will already point to that (this is slightly confusing because, starting with Vista, there’s a common `AppData` parent directory).
Edited. Thanks.
Inheritance for existence. Interfaces for actions. `abstract class Animal...` `abstract class Bird : Animal { Wings _wings; }` `class Ostrich : Bird...` `class Eagle : Bird, ICanFly...` Eagles and ostriches are both birds, and all birds have wings, but only eagles can fly. (Under their own power, at least.)
Let’s say you have an address entity and it needs to be converted to an address model. You could map all those properties individually: model.Street1 = entity.Street1; model.Street2 = entity.Street2; model.City = entity.City; Instead you define a mapping, this then becomes: model = entity; All the tedious copying happens for you behind the scenes. 
r/learncsharp
Yeah, probably it's much better there. Thanks! &amp;#x200B;
Hmm... I wonder if there's any way to use this in order to make it easier to create a copy of an immutable object with just one field being altered.
You have it backwards. By using Parallel.ForEach you are making things slower because each thread is fighting over the use of the disk or network. For moving massive amounts of data, you are far better off using one thread with all of the I/O bandwidth dedicated to it. 
Either `file` is empty, or you get an exception. Are the import methods sync or async?
I only write methods in classes or structs. /s
Access? How are you accessing it? I suspect that you may be hitting a dead lock condition by trying to work with it across multiple threads. 
I haven't gotten an exception and nothing in my output. `file` , unless I'm mistaken, should be all the files within the directory (\\\\server\\operation\\) in all sub-directories? &amp;#x200B; I didn't know there was a sync, so everything is async (that I'm threading)
List is a reference type. ListB is a basically a pointer to ListA. So when ListA is cleared so is ListB.
&gt; I expected listB.count to be 1 since when listB was declared, listA had 1 element in it and nothing has changed listB. That's a fair expectation but in C# Lists are references so listB and listA are actually the exact same list behind the scenes. There's tons of info about Value types and Reference types if you want to search for a more detailed answer. The stackoverflow question below might help you get started. https://stackoverflow.com/questions/5057267/what-is-the-difference-between-a-reference-type-and-value-type-in-c
That is what he is saying, yes. :) Could always do a benchmark :)
I did not write the \`ImportAccessTables\` within the `Parallel.ForEach` to hopefully prevent multiple threads from trying to access it at the same time. Would having it in an `await` [`Task.Run`](https://Task.Run)`()` still cause it to be access by multiple threads at the same time? I'm accessing it through a connection string and `OdbcConnection`
&gt; unless I'm mistaken, should be all the files within the directory (\\server\operation\) in all sub-directories? Nope. It won't walk the sub-directories for you. (Though that would be a useful feature)
I smell an F# user, if not yet, then soon! 
Anything like a ListBox or a RadListBox which implements ItemsControl will automatically update when you add items to the collection. I don't have all the information with what you've changed, but I could see you setting the UpdateSourceTrigger to PropertyChanged would be a problem. Remove that from your XAML. 
&gt; should be all the files within the directory (\\server\operation\) in all sub-directories? Uhh... No. The documentation clearly specifies: "in the specified directory". Did you not even debug and see what the `file` array contains? There is an overload that lets you specified to include all sub-directories. https://docs.microsoft.com/en-us/dotnet/api/system.io.directory.getfiles?view=netframework-4.7.2#System_IO_Directory_GetFiles_System_String_System_String_
No no, I understand. I meant a code I had previously before trying to use a parallel ForEach: private async Task DoImportAll(object value) { var Imports = new ImportData.ImportData(); string fLocation = @"\\server\operation\"; string fName = @"DataFile.txt"; string stpText = "DataImport"; var dir = new DirectoryInfo(fLocation); await Task.Run(() =&gt; { foreach(var file in dir.EnumerateFiles(fName, SearchOption.AllDirectories)) { Imports.ImportItAll(file.FullName, stpText); } Imports.ImportAllAccessTables(); }); } &amp;#x200B; \^This is what I was trying to make run faster which is what led me down the `Parallel.ForEach` rabbit hole. It was posted before I referenced it in my comment. My bad :P
Thanks
Processing them in parallel will only make it go faster if the computation on your end is the bottleneck. Judging by `string fLocation = @"\\server\operation\";`, you're pulling these off a network fileshare. If the file transfer itself is the bottleneck, trying to transfer multiple files at once from the same SMB share will just make it even slower. Now, if the files are very big, you may be able to speed things up by using a remote command to zip the files first, but only if you can execute it on the server. Transferring them locally to zip them would be counter-productive. Depending on permissions, you may be able to do it with PowerShell or the equivalent APIs from C#.
I use a RadGridView and RadCombobox. I removed the UpdateSourceTrigger, still doesn't work. 
because the user may sit and work with data object which will be wiped when we got no selection. &amp;#x200B; I'm doing something like you do, but the problem is that it doesn't update the UI. Don't invoke the property change :/(
I'm not sure. It's mostly xaml resources and Usercontrols. I'm not familiar with Telerik, but if you read the instructions for applying the theme it's pretty simple. Might want to start with a blank WPF application to test how to apply the resources from nuget. After you're familiar with how to import the resources, then you could try to apply the same to your telerik template. 
`ItemsSource="{Binding Tests, UpdateSourceTrigger=PropertyChanged}"`
I'm not sure which of mine is entity or model. &amp;#x200B; But I got a model data type which defines the category, and also for currency. Currency is also in category, but since I retrieve currency from DB, I want to write this into the original object. &amp;#x200B; I tried to create mapping &lt;currency, category&gt;(currencyObject) but what I saw is that it wipes all the existing properties values and only fill the currency into the category. How can I fix this? &amp;#x200B; Is it possible to map multiple models? Like including unit and period in addition to currency?
I see you're a person of culture as well
Because the "initializer" syntax sugar actually mutates after construction, you would have to do something like: var newImmutable = new ImmutableBuilder(immutable) { Field = "newValue" }.Build();
Do you notify the UI about the change? If you update values in your model you should raise a property changed event for all changes properties. If you don't the UI won't know the properties have changed and will show old values.
Support for Automapper is done on stack overflow- search for “multi object source and one destination”
I'll give a look into that, thank you!
Or write your own System.Reflection code to loop through the properties and then see if prop1Name = prop2Name and data type = then change value.
How can I notify like if the observable collection get a new item added? Which was through a async task which poll the new change from database? I used the this.OnPropertyChanged("observeablecollection") after I added the item. But it doesn't seem to refresh the GUI.
But when the database poll down the data, my function is iterating through the data and for ID that doesn't already exist, it will do ObserveableCollection.add(item). This is a private void method.
Hi, thanks for reply. &amp;#x200B; Do you have an example?
An observable collection already notifies when items are added or deleted. Can you share some code to show me how you are doing updates?
I don't have the code here atm; &amp;#x200B; But I have like a window to add category, the window itself has a function which insert a category to the SQL database. So what I'm doing is that I add a new category to the SQL database. &amp;#x200B; ViewModel: public CategoryViewmodel() { Async task.run { If (Categories == null ) await Categories = GetCategories(); await RefreshCollection(); }.Task.delay(5000) } Public ObservableCollection&lt;Category&gt; Categories { get { return _categories; } set { _categories = value; return _categories; this.onPropertyChanged("Categories")} } private async task () { var updatedCategories = GetCategories(); // code which compare each item in the observable collection categories. //If ID doesn't exist while looping through the collection. perform add. foreach (updatedCategory in updatedCategories) { // Get corresponding category item from observable collection which match the ID in // the updatedCategories, if ID doesn't exist add updatedCategory to observable collection _categories.add(updatedCategory) this.OnPropertyChanged("Categories") } } My XAML code: &lt;combobox text={binding categorySelected } items source= {Binding Categories, UpdatePropertyTrigger=PropertyChanged}&gt; &amp;#x200B; &amp;#x200B;
Really great work with this, I've been following it and like that you've added a Vue version :)
C++2a is different to C++17? one includes same feature as the other does? do i need to learn to use C++2a?
Thanks I think I understood this. I tried it myself, and I have an object with 6 properties, all had values. Let say that I map another object with 2 properties that is the same, but other values. What happens is that my object with 6 properties gets the values from 2 properties from the other object, but what happen is that the rest of 4 properties is now null, which had value earlier. Do you know how I can fix this? Do you know if this mapper works for WPF and if it looses the data binding ?
I created a very simple hackish gist that add's items to the collection at runtime when a button is clicked in the UI. As you can see it's not necessary to notify the collection when you are adding or removing items from it. Here it is: [https://gist.github.com/InlineAsm/96b630e6c0d85558fc2f20b784ff2fbc](https://gist.github.com/InlineAsm/96b630e6c0d85558fc2f20b784ff2fbc) &amp;#x200B; The only things I can think of what could be wrong with your code: \- I think it is required to add/remove items from the collection on the UI thread. If you do it from an async Task you might end up running on another thread (I'd expect an exception from the observable collection in that case) \- Your binding on the categories has UpdatePropertyTrigger set, I would remove this and use a normal binding {Binding Categories}. Maybe add Mode=OneWay, but that's it for a collection binding.
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/dotnet] [Share C# view models between desktop app (WPF, Avalonia) and web app (Vue, React, KO)](https://www.reddit.com/r/dotnet/comments/a1a5yy/share_c_view_models_between_desktop_app_wpf/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
Yeah, that also works for me. But my issue is when the data is not added from the button in the UI. Like if when another view model is posting a new category to SQL db, and category VM poll the new view model to a var updatedCategory, and then add this item to the observable collection.
Check the two points I mentioned last in your actual code. If you cannot make it work after you fixed them try to post a sample project that reproduces your problem. I'm not sure what else to suggest without seeing your actual code.
If you like videos, I recommend watching this one: [https://www.youtube.com/watch?v=AGNW0jH1sn0&amp;index=30&amp;list=PLAC325451207E3105&amp;t=0s](https://www.youtube.com/watch?v=AGNW0jH1sn0&amp;index=30&amp;list=PLAC325451207E3105&amp;t=0s) &amp;#x200B; I think you will find it to be very helpful.
[valueinjecter](https://github.com/omuleanu/ValueInjecter)
I used to replace the default appearance of controls and the way how the app looks like. But then I’ve realized that your app is a part of the ecosystem. I mean, it usually runs in Windows beside another windows apps, so it would be a kind of good manners to make them in the same style. Remember any program from some motherboard or gpu driver. Aren’t they look ridiculous when they are opened next to other applications? So, I suppose, we should follow the OS design style/guidelines even if we don’t really like them. Because it would be more comfortable for the end user, who uses not only our application. 
Thank you!
The cover image: https://process.filestackapi.com/cache=expiry:max/resize=width:700/compress/L6r1tUluQWm2Qia2zmOs It was just a joke. I guess a bad one.
I prefer my programs dark though. Every app should have a dark version.
What if it doesn't have the same property name? Would it just skip it? :)
Thank you; just contacted the hosting provider. Hopefully will be up again soon.
Hi, In my viewmodels.commands it worked to add to the collection, also delete with updated UI as internal action in the application. However, I tried to add an category with insert query in SQL to table, then my poll updated my ObservableCollection, but it didn't update the UI even though observable collection was updated to contain the item. I then tried to add a new category from my application (the way it worked by adding it from the window) it actually refreshed the item added from the window, but the item added from SQL still don't show somehow... I also tried to scroll and it says sometime, 'An ItemsControl is inconsistent with its items source. See the inner exception for more information.' Then it crashes... The polling and refresh task is async, while the view model.command which just add an item is not async, can this be a problem?
It could work with Angular: [https://github.com/dsuryd/dotNetify/issues/87](https://github.com/dsuryd/dotNetify/issues/87). I'll plan to add an example to the repo.
Yup, had the same issue at work until a colleague pointed out that I need DirectX 9 :) 
Yes, like I already wrote above you should do the manipulation of the observablecollection on the UI thread. If you don't, the UI and collection get out of sync and you get the exception you mentioned above. &amp;#x200B; You can use Application.Current.Dispatcher.Invoke to execute the add operation on the UI thread. See this post for some more information on the dispatcher: [http://dotnetpattern.com/wpf-dispatcher](http://dotnetpattern.com/wpf-dispatcher) &amp;#x200B; &amp;#x200B;
Dude I've seen 2 things in your code. 1 You should be absolutely sure that your collection which you iterate in Parallel.ForEach is thread safe, ether case a bloody mess will be in your database. 2 try to use Bulk insert! Bulk insert let's you insert a datatable straight into database, not exactly like this, but it is way more faster that inserting row per row. Trust me. And something else, why do you need all that stuff of 'await' and etc? Just split the collection and start Tasks, it will work alot faster. KISS =&gt; Keep It Simple Stupid 👍
But does this mean that there is no way to poll the new data to the collection from the database, then refresh the UI without having to add through UI?
Very cool project, I especially appreciate the clear and concise example/sample project with all the comments. 
But if the ostrich is super motivated it might implement `IBelieveICanFly`
What do you need it for? The best way may be entirely dependent on why, and *when*, you need it.
I looked into the .NET core desktop and it looks like they use DirectX. I image that would very hard to convert to cross platform.
I'm pretty sure that's `class RKelly : Animal, IBelieveICanFly...`
This is fantastic! This is the first time I've seen this project, but I'm pretty sure it does everything I've been wanting to do with my c# models for my vue front end. I'll be looking at the code over the next few days. If you need any help, let me know. [My GitHub Profile](https://github.com/SharpSeeEr)
That's supposed to be doable from the XAML side with a `CollectionViewSource` with `GroupDescription`, `SortDescription` and eventually some custom `Behavior&lt;T&gt;`. I understand that internally datagrid-like control might use such layer. My questions is more when do you even need to do it yourself as a developer? I have had complex UI with filtering capabilities but never manipulated that layer myself as I think that it belongs to the view side, so in a proper MVVM pattern the ViewModel should not even know it exists. But of course, that's the ideal world and there might be more complex cases that I just had the chance to never encounter ;)
Pretty much what you said. I was posting from my phone originally. But he also wrote: &gt; Alternatively, you can create a view of your collection in Extensible Application Markup Language (XAML) by using the CollectionViewSource class and then bind your control to that view. The CollectionViewSource class is the XAML representation of the CollectionView class. 
yes, I think this one is the best one available. easy to use and got tons of stuff and workarounds. also, its more of the professional looking one, simple and elegant.
Following
Yes, that is only available with MSVC++. Although the C++/WinRT framework for UWP might work with clang as well.
Do you know if automapping two objects works with propertychanged event=
Look here for some useful information on implementing TrueColor support: https://gist.github.com/XVilka/8346728
In an ideal world, you would use an asymmetric algorithm like ECDSA, and only store the public key on your end, leaving private key security to the user. In this setup, a user can simply sign any calls they wish to make with their private key, and you verify the authenticity of the request on your end. You'd have no secrets to store. But we don't live in an ideal world. The next best solution is to configure [transparent data encryption](https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption?view=sql-server-2017) on the table in which you're storing your keys. Now this is not an ideal solution. A sufficiently motivated attacker who's gained access to your database can still reverse than encryption. But it's way better than nothing.
Thank you for trying to help haha. Yes, in an ideal world everything would be different :\*). I have looked into tranparent data encryption a little bit and I liked what I saw. &amp;#x200B; To clarify some things, I have a db-table where I save a public and a private key (string) for every user. When the user opens a certain page, he gets an instance of a class which does API calls with his personal public / private key - pair. &amp;#x200B; The solution I am currently trying out is using AES in this fassion to encrypt the userdata after it arrives on my server: &amp;#x200B; using (AesManaged myAes = new AesManaged()) { // Encrypt input to byte\[\] // Encode bytearray to base64 //save base64 string into public / private key column in database } &amp;#x200B; When a user requests an instance of the let's call it "API-Caller-Class", the instance is injected with an Options object filled with the decrypted keypairs from the database, this is the only time the keys are exposed and everything runs on my server (my server also does every API call, nothing happens clientside). &amp;#x200B; The keys / IV used by AES are stored in my secrets.json file (while developing) and can (should) be only accessible by me. Can I keep working like this while developing locally / with some friends? Or would you absolutely recommend using TDE even now? I am really a bit of an encryption "noob" :\*)
Have you considered using socket.io instead of signalR, since your backend will be using node js?
Hi, I think you've maybe misunderstood the SignalR architecture. SignalR consists of server-side hubs (which clients create persistent connections to, and receive push data from), and some sort of SignalR client for the client-side part of your application (C#, TypeScript, some-other-language, depending on your front-end). The SignalR client uses e.g. a websocket to connect to the server-side, which is how it can receive server-to-client push messages. In your case, if you want to use ASP.NET Core SignalR in your client-side app, you also need to have an ASP.NET Core app on the server-side that will host the hubs that the SignalR clients will connect to. This doesn't stop you from using node.js to do other parts of your server-side application, but it will probably be more straightforward to use ASP.NET Core for everything, since you can write Web API controllers to handle regular request/response API calls, in addition to hosting your SignalR hubs. Hope this helps!
Its quite good since they have both c# and also javascript library. But performance wise i'm not sure, since the application was for prototype only. Its a chatbot app, the client is web application, the bot is .net console app, they communicate through socket.io.
We use socket.io at work, and have no problems putting it behind an HAProxy lb and using WSS. I'd use it any day over SignalR, honestly, and I'm a C# fanboy. It's just much simpler in my opinion 
Read up on reference types. They are basically a pointer to an object. Classes are reference types so the List is. They are both pointing to the same object. So when change one you change the underlying object they point to. Therefore both are affected. 
I totally forgot about Bulk inserts existing! I'll get it a try! I also don't know how to split a collection. I was using 'await' mainly because it was new to me and I wanted to test it out. To far it's taken a 10min import down to a 3min import. 
Why are you avoiding already established formats? Seems to me like that is a recipe for problems...unless this is for a homework assignment.
An example of how i was imagining, but unsure as to how i would read the information into a usable variable on form loadup etc... &gt;name=John dbname=JohnsFirstDatabase dbport=JohnsFirstDatabasePort dbloc=JohnsFirstDatabaseLoc dbdoc=JohnsFirstDatabaseDocs dbname=JohnsSecondDatabase dbport=JohnsSecondDatabasePort dbloc=JohnsSecondDatabaseLoc dbdoc=JohnsSecondDatabaseDocs But then how would i programmatically recognise a seperate person's block of data? That's the bit i'm struggling with haha!
I mean, I guess you could use S-expressions or prop-lists or something, but I don't know why you wouldn't go with JSON or XML, since there's decent support for both.
Unfortunately they cannot be used in this environment otherwise i'd have gone straight to one of them haha! 
And also i'd like to come up with my own solution just out of curiosity! I have used the above many times before, but if i never try anything else i'll never learn anything new haha! 
https://gist.github.com/jftuga/482be32ad050deb91512839b57642654#file-mping-cs-L98 You have a racing conditon here. The threads are assigning values to the shared variable. In the next line you access the variable. But between assigning and readin the variable another thread could have assigned something else. Don't use a shared variable... Best avoid all shared state at all. https://gist.github.com/jftuga/482be32ad050deb91512839b57642654#file-mping-cs-L92 This is not thread-safe either. Between reading the value, incrementing it and writing it back it could be changed by another thread. Use `Interlocked.Increment`.
The IV is a public value, and is usually prepended to the ciphertext prior to storing the ciphertext. You can store it pretty much wherever. Key storage is a real problem in cryptography, which is something Microsoft makes a bit easier to do securely with TDE. That being said, since you're just developing it locally, you probably don't have a ton of PII or other secret data you need to keep secured. So your solution should work fine. In production, that solution isn't too terrible, but it's not great. It means your biggest liability is a vulnerability allowing arbitrary file read or a user-level compromise of your webserver. Which puts you in a better spot than most
&gt; why changing the c# - [asp.net](https://asp.net/) for a full js framework You can use [asp.net](https://asp.net) for the backend and switch to using Vue/React if you need to for the frontend, but honestly, unless you've reached the limitations of [Razor Syntax](https://haacked.com/archive/2011/01/06/razor-syntax-quick-reference.aspx/) (which I assume is what you are currently using), there is absolutely no point in just switching without a valid reason. &amp;#x200B;
[https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/](https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/serialization/)
&gt; We've been told to renew our language in order to refresh it and to be **aligned with the standards** What standards are they talking about? Internal company standards? Web standards? At a glance, it sounds like they're trying to "synergize a scalable paradigm to be proactive in a disruptive sales driven life cycle (insert more buzzwords here)" /s Can you be more specific what they mean by "standards"?
I obviously don't know all of the nuances of your situation, but it seems to me that a full *stack* swap -- that is, from .NET *anything* to a full Javashit environment -- seems extremely overboard, especially when (IMHO) Blazor is going to be huge when it hits v1.0 production-ready. Now, if they were talking about Javashit for the front-end but use ASP.NET Core on the backend, that'd be a completely reasonable suggestion IMHO. In fact, VS2017 includes several built-in ASP.NET Core web project templates, many of which use Javashit front-end frameworks. Now, I've only ever used Angular and AngularJS as Javashit front-end frameworks of an ASP.NET web app if I wasn't simply using MVC/Razor, so I can't speak to the specifics of react or vue. However, I absolutely *hated* the "mixed" development environment that Angular/AngularJS + ASP.NET uses -- it feels very clunky and I felt I was fighting the development environment itself more often than actually developing features. In full disclosure, I am still a novice in web development (my focus has primarily been desktop + backend like MSSQL, WCF, Winforms/Wpf, etc.). I mention this so you apply the appropriate "weight" to my arguments when contrasting it against the other, potentially more experienced opinions that others suggest. I also hope I accurately understood your question and my response didn't completely avoid answering your concerns. &amp;nbsp; v/r
At this point using a no configuration db like sqlite would be my first choice
Looks like it might be the cookie!! Will see what i can come up with! Cheers. &amp;#x200B;
I still think you need to go with /u/Enlogen's suggestion of the factory pattern. You said it's possible for there to be more than one object of a particular type - but, more to the point, should there ever be more than one object that represents the exact same real-life thing? Should there ever be 2 objects that both represent the same record in the inventory table? I'd guess not. I'd guess that, if two different parts of the system are both working on the same inventory item, they should both work with the same object. The factory pattern can do that. It can keep a dictionary of all the inventory items that are loaded. Then, when you need an inventory item, the factory looks to see if it's already got that one loaded. If it has, it reuses it. Otherwise, it loads it and adds it to its dictionary. Thus, there is no way for the same inventory item to be represented simultaneously by two different objects. This sounds like it's what you really need.
Thank you. That does sound like it would have been a good idea. However, it's not my code (although I do have access to it and can make small changes), and that particular project is too far along to make a major change such as this would be. There's an awful lot in that project that I think was poorly designed.
Title is a bit strange. What’s an “API NuGet Library” as opposed to any other library? An API is something a library has. 
Have you considered using any of the [Concurrent](https://docs.microsoft.com/en-us/dotnet/api/system.collections.concurrent?view=netframework-4.7.2) containers? For example, a ConcurrentBag&lt;ResOBJ&gt; conBag; where the ResOBJ has properties for the data and error condition? Perhaps inside the Parallel.For create a new ResObj, populate it, and then call conBag.Add(ResObj) at your exit points; and then work with the conBag as a normal enumerable object once complete? 
Ok, I understand. I have finished writing this part of my application, here is what I have done: I create an AesService and register it in the servicecollection as a singleton. Once the service is registered, I fetch the main key used for de- and en- cryption from my secrets.json file and set it via a "setter" method in my startup class. They key I use is always the same, but when I encrypt strings for my database, I use a randomly generated IV for EVERY entry and prepend the resulting stream with the 16 byte IV value. When I decrypt my data, I read the IV seperately for every entry and use it to decrypt my data. &amp;#x200B; My pipeline is =&gt; 1) User enters his key in an input field 2) My pagemodel handler (cshtml.cs) takes the data, verifies it and encrypts it. 3) The Model holding the encrypted values is wrote to my database via repository. &amp;#x200B; When I need to fetch the data I get the encrypted base64 strings from the database and decrypt them (only once) right before the API call is made and the HMAC signature is generated. &amp;#x200B; Thank you for your support, I am a junior developer and I get really paranoid working with cryptography :\*). After deploying this app I will try to use the azure key vault. &amp;#x200B; Thank you! Have a nice day everyone reading this!!
You might know what your talking about but I stopped reading when you say “javashit” like a child. 
So I was trying to distinguish between creating an http api on a web server vs creating something that consumes that api in c#. Sorry the wording is not to your liking. 
Was this comment written 10 years ago? Adobe flash update and IE plugin??? WTF? &amp;#x200B; Windows 10 user here. My only annoyance on with windows is mandatory corporate crapware that sucks life out of hardware. MacOS used to be the safe harbor but now mandatory corporate crapware is on MacOS as well. &amp;#x200B;
Should be pretty spot on, good luck
I agree, I would drop SignalR and use sockets.io or something similar.
Is this homework or something? Because it makes absolutely no sense in the real world. 
Would you mind explaining what environment that is? I'm genuinely curious as to what circumstances would preclude you from being able to use what are essentially just strings written to text files.
I tried to do https://automapper.readthedocs.io/en/latest/Getting-started.html But what I see is that it writes non matching variables to null. Maybe I'm doing it wrong?
What I'm doing is that I make a clone of the original object, then automap I want to automap a couple objects which has some similar / identical values to the clone object. In the end I want to differ, and if it returns true, I want to automap this clone back to the original.
Google .net binary serialization
Just configure entity framework to use an another user object that inherits from IdentityUser instead. That user object will give you full control to add additional properties (including navigation properties). In your startup, you just point your identity configuration to your class instead of the base IdentityUser class. [See This](https://docs.microsoft.com/en-us/aspnet/core/security/authentication/customize-identity-model?view=aspnetcore-2.1) Just look for "ApplicationUser" on that page for a good example.
**Thank you so much! it Worked!**
I tried it but for some reason it didn't work.
Weird now it worked... i must have typed something wrong, Thank you!
As I understand it, when you map an object with Automapper, it returns a new instance of the destination object with the mapped values from the source object populated. I have never tried to map to an existing object, and I doubt you can do that out of the box.
Is there a particular reason you are using automapper? While I'm sure there are some scenarios where it is necessary, the vast majority of the time you are better off just manually writing the mapping function than fighting with a library.
Have a look ok GitHub for AgileMapper, I think it can do what you're looking for.
Thanks, I am already doing that! :)
It is obviously conveying my **opinion** of the language. If you disagree, fine, to each their own and it does have its strengths, but considering me a child since I used (and will continue to use) the term "Javashit" is a laughable insult, especially when you are coming off as actually being offended *for Javashit*.
In order to use websockets easily you need to use the same implementation on the client and server. Both socket.io and SignalR provide libraries for both, but they aren't cross compatible (as far as I know). So you have two options: * Use node.js and socket.io. * Use SignalR and Asp.Net Core web api. In both scenarios the 3 clients would send updates to the server, which would then pipe those updates to the web interface. I have used the .net core version of SignalR and have found it very simple to setup and implement. The javascript client is structured in such a way as to be easy to integrate with just about any library/framework.
The mapper.Map() function has a few overrides for specifying the destination object to map into. ``` TDestination Map&lt;TSource, TDestination&gt;(TSource source, TDestination destination); ``` The map process copies all properties in the source object that it can find a destination property or a map definition for. Any other properties in the destination object are left as is. 
what I'm wondering is why don't all the popular operating systems just agree on a common API and then each OS can provide its own implementation of that 🤔 boom now basically everything is multiplatform.
an easy thing you could do to further explain the problem ... take this: i =&gt; { try { // determine if IP address or hostname is the current arg MatchCollection matches = ip_re.Matches(args[i]); if (matches.Count &gt; 0) // ip address given { try { ipaddress = System.Net.IPAddress.Parse(args[i]); } catch (Exception e) { Console.WriteLine("{0}: {1}", args[i], e.Message); errorCount += 1; return; } } else // hostname given { hostEntry = Dns.GetHostEntry(args[i]); if (hostEntry.AddressList.Length == 0) { Console.WriteLine("Error: Unable to resolve {0}", args[i]); errorCount++; return; } ipaddress = hostEntry.AddressList[0]; } bool result = Ping(ipaddress); arrow = (result) ? "" : " &lt;&lt;-------------------"; Console.WriteLine("{0}\t{1}\t{2}\t{3}", args[i], ipaddress.ToString(), result, arrow); if (!result) { errorCount++; return; } } catch (Exception e) { Console.WriteLine("{0}: {1}", args[i], e.Message); errorCount++; return; } } and make it an actual function declaration in the `IcmpPing` class. everything the function doesn't have access to (`ipaddress`, `args`, `errorCount`, `hostEntry` and `arrow`) is shared state (as /u/AngularBeginner mentioned) and has to be used with thread safety in mind. `ipaddress`, `hostEntry` and `arrow` can all be moved inside of the function because they are only used within the scope of the function. this gets rid of you having to worry about thread safety for those. also, it's generally considered better practice to define variables as close to their use as possible. you don't need to do anything special for `args` because nothing is changing it. so this leaves the only thing you now actually need to deal with appropriately: `errorCount`. again, as stated by /u/AngularBeginner, you can just use `Interlocked.Increment` instead of `++` and you should be fine. --- other things of note ... don't do this: try { ipaddress = System.Net.IPAddress.Parse(args[i]); } catch (Exception e) { Console.WriteLine("{0}: {1}", args[i], e.Message); errorCount += 1; return; } use `System.Net.IPAddress.TryParse` instead. it's also considered bad practice to blanket catch all exceptions. and finally, `return (0==errorCount) ? 0 : errorCount;` is just `return errorCount;`.
Windows land has been having issues like that for well over 10 years. Some MS's fault and many not. There are still all kind of nooks and crannies that apps can shove themselves into and make life difficult. The flash example is just what popped into my head as an annoying and relatable example. In the bowels of the registry lurks a lot of undocumented black magic, and admin installed apps have carte blanche to muck with it. Not much has changed on that front since then.
I thought that [socket.io](https://socket.io) automatically has graceful failover modes, where if websockets don't work, it reverts to long polling, which is a http method. Anyway, it never faulted me before
Why? The required behaviour is literally the default of AutoMapper.
Oh, it’s not about my liking, I didn’t mean it like that. Just, it confused me, so it might also confuse others. 
Your original will work as well.
I'm not sure on this one, but this sounds like a similar issue. Might help you figure it out. https://stackoverflow.com/questions/9885601/datarow-fieldtstring-column-throws-invalid-cast-exception
Thanks for the reference! It moved my error down a line :P
&gt;We've been told to renew our language in order to refresh it and to be aligned with the standards Its possible that splitting your stuff up so that you just have an API that serves data to a front end would work for your applications,as the other poster said, it seems like mostly buzzwords (aka bullshit bingo). Ask them to be specific about what standards they mean. 
I see. I tested it with just the destination specified and it indeed overwrote the extra property. Thank you for clarifying the overload alternative :)
Thanks for you other reference as well! I'm not sure I'll be able to grab the right names as this table is created dynamically monthly (so every new month, adds a new column to the table). Unless I make it loop through and add the column headers?
&gt; Where i need your help is there : We've been told to renew our language in order to refresh it and to be aligned with the standards, but no dev were involved in the process, so the fact that they suggested vue and/or react wasn't based on any fact at all. This is a terrible reason to rewrite working, necessary code. The overwhelming majority of "throw it out and rewrite" projects end up in the death of the original company/team. Mozilla? Netscape died. FireFox? Stalled and lost out to Chrome. And those are the *success* stories! Rewriting in a completely different language will take 2 years (trust me). For most of that time, that "great new clean replacement" will be unusable by the customers of the current version. The current version will be neglected, and only receive critical bugfixes. After that 2 years, should the rewrite even finish, you'll end up with a project that is, at best, feature comparable with the original and now 2 years behind on features compared to where it could be (sure hope this wasn't a product with competitors). The only sane way to migrate to a completely new language is to piecemeal break things out into services and implement the services in the new language.
&gt; synergize a scalable paradigm to be proactive in a disruptive sales driven life cycle I will use this in every meeting. I can't wait. &amp;#x200B;
Need some more info. Is the browser running on the same computer as the IIS Express instance? If no, can the site be accessed from the same computer that's running the server (using `localhost`)? Are you using a hostname or IP address to access the server? If it's a hostname, try using the IP - it could be a DNS issue (sysadmins will tell you that it's _always_ a DNS issue, haha).
Ah, yes, I often find those kinds of plans to synergize quite well with the recycling bin.
Maybe ask them to consider "ClearSky - The Cloudless solution" by leveraging in-house resources for unprecedented access-speed to their data by storing it on-premises on dedicated computers we call "Servicers" it will upscale the available workflow with current and future project processes.
&gt; Is there any ressources to help thinking about moving on another language, any requisites before all that ? How to think about the whole picture and not just say "wow react is fast, let's choose react wow i'm so 2019" Estimate how many man-hours have gone into building the current software. (The number of years spent on it, times 52, times 40, times the number of developers on the project.) Multiply that by the cost to the company of one man hour of work. (The average salary of an employee on the project, divided by 52, divided by 40.) Now you have the size of their existing investment in the project. (Expect that this is a very large number, but it's real. An average largeish application costs in the millions of dollars to develop. The last time I had to manage a large scale development project my budget was a million dollars a year PLUS money to maintain all the old software, and they were probably overly conservative with that number.) Point out to them that if they demand you change languages, it will cost *that much* money and take *that much* time to make their wishes come true, and that's just to get it back to where it is already, and you won't even begin to create any new functionality until then, so if they really want you to do this, you want them to sign a written commitment that you've brought with you, which says that they are knowingly abandoning this investment of hours and money in order to make this change they desire, that they know it will take this many years to re-develop the same functionality in the new language, that they know that they can't throw more money or people at the problem to get what they want faster because nine women can't have a baby in one month, and they are okay with the knowledge that some members of the existing programming team will no doubt quit over this and you have written irrevocable approval in advance to hire replacements for them at or up to 50% above their present salaries (because someone who has been with the company for years is cheaper than a new hire at the same skill level). At my last job they had a VB6 legacy application that was a horror show, with a staff of 9 people to maintain it, and they were hiring new people to start all new development in C# and find a way of carefully migrating the functionality out of VP6 into C#. By the time the C# staff had gotten to 9 people, they announced that all C# development would stop, that we'd all learn VB6, and that we'd have to migrate all the new C# software back into VB6. About 2 days went by and the whole C# half of the staff told them "do this and we'll quit." That decision was mysteriously never heard about again. 
This is great feedback. Thank you.
Icon5 property needs to RaisePropertyChanged in it's setter.
I am screaming inside. Everything about this is wrong. But if it goes ahead I look forward to reading the horror stories.
Doing computation in a getter of a property us bad design. You would better off registering an event handler to the CollectionChanged event of the ObservableCollection. Do the computation there and set the property with that value. Consider implementing a base viewmodel class with helper Set() methods that trigger the PropertyChanged event for a given property.
You are not wrong but sometimes simplicity is the best design. PropertyChanged pattern itself calls for logic in the setter: if(_Property != null) { _Property = value; RaisePropertyChanged(); } 
Ok, so Icon5 is in a ViewModel and VM derives from BaseViewModel. BaseViewModel implements INotifyPropertyChanged and uses Fody Weaver to automate triggering Property Changed event. But I think I'll try to handle CollectionChanged event like you said.
When user completes a thing are you adding a row to your collection or setting a property on a row that is already added? If you are not changing your collection handling CollectionChanged won't buy you anything. If you are adding a row you might be better off defining Icon5 on the same object that contains the collection (OR at least make sure your DataContext is correct).
I did not say logic should be forbidden in a setter. I explicitly said "computation".
I finally managed to get something working - in my particular case I didn't seem to need the \[XunitTestCaseDiscoverer\] attribute. There's still some code that we had written to be executed when a test has the particular fact that doesn't seem to be getting run, but that should be a little easier to troubleshoot
I've started to write of few wrappers myself for cryptocurrency exchanges, as you can see on my GitHub page: [https://github.com/RobJohnston](https://github.com/RobJohnston) Before starting I did a review of what others were doing and I agree with you that they are laid out similarly. I assume most of that is because they are solving the same problem. The only advice that I can think of from MS is to use the [Task-based Asynchronous Pattern](https://docs.microsoft.com/en-us/dotnet/standard/asynchronous-programming-patterns/task-based-asynchronous-pattern-tap), as this type of work is async by nature. One difference between my wrappers and *some* others is that I chose not to include a rate limiter or logger. Instead, I tried to keep my class libraries as true to the API docs as possible. I think such add-ons should be in the consuming class, but adding [Trace Switches](https://docs.microsoft.com/en-us/dotnet/framework/debug-trace-profile/trace-switches) would be a good idea.
Have you tried deleting the applicationconfig in the .vs folder? Or editing the IIS Express entry in the JSON file to use a different port?
A quick glance over Fody Weaver and it looks like OnPropertyChanged only gets called when the property's setter is called. Your logic is in the getter. Fody may add the OnPropertyChanged logic to the setter at compile time (im not familiar with it), but the setter is only going to get called if you assign something to Icon5 (i.e "Icon5 = true", etc.). The getter won't get called by itself and even if it did, it wouldn't raise the property changed event.
I can't seem to mark the properties as Static. And do I replace "NameEdit.Namepass" with what you said above?
Also why is this in r/csharp? Looks like VB to me
... Not the same thing? I'm pretty sure I'm using the C# language.
Not the same thing. VB is Visual Basic C# is C Sharp They're somewhat similar but very different languages.
Well screw me. Thanks for the short lesson.
One more piece of advice from MS: Don't use their [JavaScriptSerializer](https://docs.microsoft.com/en-us/dotnet/api/system.web.script.serialization.javascriptserializer?view=netframework-4.7.2) class. &gt;[Json.NET](https://www.newtonsoft.com/json) should be used for serialization and deserialization. Provides serialization and deserialization functionality for AJAX-enabled applications. &amp;#x200B; &amp;#x200B;
An error came up: "Properties cannot be declared 'Static'."
For reference: this is what is would roughly translate into for C# 1. You probably want to only have one instantiated Form1, not two. 2. You may want to camelCase your variables. It's a common practise in programming 3. Note: Properties are not camelCase \*\*Form 1 Code:\*\* &amp;#x200B; public class Form1 { public string AgePass { get; set; } public string NamePass { get; set; } &amp;#x200B; private void btnEdit\_Click(object sender, EventArgs e) { Form2.ShowDialog(); Hide(); } &amp;#x200B; private void Form1\_Load(object sender, EventArgs e) { lblUsername.Text = NamePass; lblUserAge.Text = AgePass; } } &amp;#x200B; public class Form2 { private void btnSave\_Click(object sender, EventArgs e) { // Why are you instantiating two of the same form // and setting different properties on each one? // You probably want both of them referencing the same form. var nameEdit = new Form1(); var ageEdit = new Form1(); &amp;#x200B; nameEdit.NamePass = txtUsername.Text; [nameEdit.Show](https://nameEdit.Show)(); ageEdit.AgePass = txtUserAge.Text; [ageEdit.Show](https://ageEdit.Show)(); Hide(); } &amp;#x200B; private void txtUserAge\_KeyPress(object sender, EventArgs e) { //Not entirely sure what this translates to... if (!Char.IsDigit(e.KeyChar) &amp;&amp; !Char.IsControl(e.KeyChar)) e.Handled = true; } }
My bad, I don't tend to do VB if i can help it. https://stackoverflow.com/questions/1980207/static-shared-in-vb-net-and-c-sharp-visibility
Do you have IIS installed on these boxes in addition to IIS Express? I ran into a similar problem some years back where IIS Express would stall, never responding to http requests regardless of the port number set in the project, if IIS was also installed.
Edit: I just read the post again. You shouldn't be instantiating any new Form1's if there's already one open. If there is already a Form1 and a Form2 open, you need to make a choice here. It's bad form for two forms to try to reference each other. One form needs to be the main place for the properties, the other just updates it. OR Consider making a third class for storing data and have Form2 update that fire an event that Form1 listens for so it knows that the data is updated and needs to refresh any controls referencing that data. This is probably the preferred way. A sort of pseudo-MVC (Model View Controller) architecture. Basically you've hit an annoying problem where you now have to decide whether you want to REALLY learn how to program. You'll either quit, or learn an entirely new way of structuring your code based on this one problem, or find a really bad half-assed hacky solution which isn't great.