Data binding and creating a viewmodel
People like you are why I hate people, the reason you aren't getting this is because it's HARD, you're having a tantrum because you've done the equivalent of pick up a guitar and found out you can't play "eruption" immediately.
no need to be mean i was just looking for some pointers
[first result on google](http://www.asp.net/web-api/overview/web-api-clients/calling-a-web-api-from-a-net-client). i'd try and avoid xaml if at all possible.
You deserve it, you have made no effort and then you come in here asking us to spoonfeed you. It's rude.
ReSharper, always. ReSharper has taught me LINQ like no documentation could
You could use an array of Tuples if you don't have a specific type that relates the data, and there is no key/value connection between the two. http://msdn.microsoft.com/en-us/library/system.tuple(v=vs.110).aspx
Look into string.split method
cool cool. Checking it now. Thanks!
Oh man that's absolutely awesome. Thank you so much, that's a huge help. How would you suggest keeping track of the messages themselves? Should I store them in memory somewhere and then throw them in the database when the conversation ends? Thank you again. 
The `Textbox.Lines` property returns a `string[]` with one line per index.
Damn, that has a lot of features. I may check it out later, but it doesn't solve the problem I was trying to find a solution to (or maybe it solves it *and* the kitchen sink). I decided to roll my own after looking for keyboard shortcuts for Snipping Tool to snap the window and save automatically. Someone pointed to another application that could do it, and then I thought "wait, I can just write my own." So that's what happened. :)
I'm kind of struggling to write it without running into compile errors. Would you kindly give me an example of how its used? I'm a noob, sorry!
Check out the MSDN article for [TextBoxBase.Lines](http://msdn.microsoft.com/en-us/library/system.windows.forms.textboxbase.lines.aspx), it gives you a pretty solid example. If you run into more issues with it, try posting your code so we can see whats going on :)
http://msdn.microsoft.com/en-us/library/system.windows.forms.textboxbase.lines(v=vs.110).aspx
Thanks man :D
&gt; i'd try and avoid xaml if at all possible. do you mind explaining why?
That's a pretty good motive to make your own! I looked at the source, pretty basic but looks like it gets the job done. Good work!
If there was an award for vague, unanswerable questions I would nominate this post. 
Can you be more specific? Is this an application you created already or just source code you have?
in my opinion it's an overly complicated way to do something simple that additionally stops you from easily porting to other OSs. I also generally don't like getting that wrapped up in MS land as they have a habit of heavily re-writing or deprecating large chunks of the .Net framework (like silverlight or the windows workflow foundation) and i have a feeling windows 9 will introduce a *lot* of changes to WPF. this is all just opinion though so do whatever you like.
Open the solution to the application in your IDE and look at the design view of the form.
I'm not sure if this is a joke. The application either shows nothing when you run it with `-noWindow`, or a button when you run without arguments. http://imgur.com/s1Coync
[This should be of interest to you](http://www.dreamincode.net/forums/topic/180436-global-hotkeys/), as I have developed a screen capture application in the past that automatically uploads for you. VineCapture was the name I believe ;)
Thanks, I'll be careful next time. This is already baked into URL unfortunately :/
+1 I used to use ShareX (and its predecessor ZScreen) back when I used Windows. It's fantastic. I still don't know of any other apps that can do exactly what I want (upload via SFTP to year/month subdirectories) so I just use a shell script on Linux and MacOS. 
If you think programing tutorials have "weird computer jargon" then you are trying to skip over fundamentals you need to learn before you can learn to effectively apply programing skill to make complex applications like a game. I have mentored many would-be programmers and this is an extremely common problem - wanting to skip the "boring stuff" to get to the "fun stuff". You might be able to find a tutorial that walks you through the steps to create a "game", but without the fundamentals, you aren't going to be doing much other than learning to copy code, which won't help you. How then, will you add your own unique features? How will you resolve bugs? Learn the core concepts, language, and framework first, THEN learn how to use it to make a game. I know this isn't what you want to hear, and you might even be thinking that I just "don't understand" and that you "probably know enough", but the very fact that you have reached this conclusion indicates that you are probably jumping the gun a bit.
Specifically you could do string. Split (" ", environment.newline) to split every space as a new line. Or whatever char you want to split by... 
Well done. My favorite is http://puush.me/
I came here to mention this as well. I use this daily. 
Making a game is much harder than you imagine, let alone doing it without any previous experience. And I think if you really want to have your idea come to life quickly, perhaps using flash would be a much better choice, as flash is much easier to pickup and play around with. There are also much more tutorials focused towards making games. And just fyi Binding of Issac is made with flash :)
Your question is too vague to answer specifically
Actually, Ubuntu uses whichever filesystem you decide on at install time. That could be ext4, ZFS, Reiser4, XFS, and even Fat32 (some others as well).
You are a poor reflection on your family tarantulus. I suggest you find some remedial social interaction tutorials and follow them. Until then, please refrain from calling other people rude.
It is rude to expect people who have spent years honing their craft to spoonfeed someone who has clearly spent no time or effort at all in trying to figure out the solution to their issue on their own. It is doubly rude to do so while sat in front of the greatest collection of human knowledge known to man. Responding to that rudeness in kind, I feel, is entirely justified.
Skinning it.
Perhaps you could split up your big view into user controls (classes that inherit from UserControl) and compose your big view from these smaller ones.
Haha I hate when that happens, my problem is usually those projects end up for me with more features than the originals lol alas they are hardcoded in and seamless but still there
Look up the MVC (Model View Controller) design pattern. 
You might want to look at a product like Unity or GameMaker Studio. Channel 9 has (or had) a great series of videos on GameMaker. These tools aren't as dependent on experience as a C# or C++ developer. And, an hour long video isn't going to be the answer to anything. It takes 1000 hours to reach base level proficiency and 10,000 to be close to the best.....at everything worthwhile. I'd recommend taking apart and modding existing projects that others have created. Start with tweaking little stuff and work down the chain. 
Azure of course http://www.windowsazure.com/ and https://www.discountasp.net is supposed to be good
AppHarbor is good, and if you have very basic Git skills, the simplest way to deploy: https://appharbor.com/
I use rackspace cloud sites for heavy hitting traffic
Nice. Does this Library work with ElastiCache at all?
Been using [Hyper-V-Mart](http://www.hyper-v-mart.com/) basic VPS for a while now. No complaints.
quick question, is azure free?
SmarterAsp has been working out well for me so far, and it's got a free 60 day trial. Great for testing it out. https://www.smarterasp.net/ And they support WebDeploy! &lt;3
You're sure you're managing the cookies right? Haven't played around with the cookie container, but that might be something... on top of what Paran0idAndr0id said.
Figured I have to post a link, instead of just commenting on people's posts :) I didn't write this, but I use it a lot. Generates real names, etc not Lorem stuff, very good for testing
You need to send a POST string with the login and password. http://stackoverflow.com/questions/21201252/how-to-pass-username-and-password-in-a-string-while-posting-in-http
Logging in and maintaining a session consists of several parts: As /u/Paran0idAndr0id mentioned, you can use Fiddler, or similar tool (Live HTTP Headers for Firefox) to see what kind of data the login form submits to log in Log in by POSTing username/password/other parts of the form: request.Method = "POST"; request.ContentType = "application/x-www-form-urlencoded"; request.ContentLength = postData.Length; var s = request.GetRequestStream(); s.Write(postData, 0, postData.Length); How does the site know you're logged in? It probably stores a session ID in a cookie, so you want to save the cookies you get back and use them for all your future requests: var myCookies = new CookieContainer() request.CookieContainer = myCookies; Another stumbling block may be [CSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) tokens. The form may have additional hidden fields, and the form page may give you the token as a cookie. You can receive those tokens by requesting the login form page first. Store the cookie in your cookie container as well, and the hidden input fields will have to be submitted with the username and password.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Cross-site request forgery**](http://en.wikipedia.org/wiki/Cross-site%20request%20forgery): [](#sfw) --- &gt; &gt;__Cross-site request forgery__, also known as a __one-click attack__ or __session riding__ and abbreviated as __CSRF__ (sometimes pronounced *sea-surf* ) or __XSRF__, is a type of malicious [exploit](http://en.wikipedia.org/wiki/Exploit_(computer_science\)) of a [website](http://en.wikipedia.org/wiki/Website) whereby unauthorized commands are transmitted from a [user](http://en.wikipedia.org/wiki/User_(computing\)) that the website trusts. Unlike [cross-site scripting](http://en.wikipedia.org/wiki/Cross-site_scripting) (XSS), which exploits the trust a user has for a particular site, CSRF exploits the trust that a site has in a user's browser. &gt;==== &gt;[**Image**](http://i.imgur.com/UzxgbpK.png) [^(i)](http://commons.wikimedia.org/wiki/File:NVD-CVE-2007-1332.png) --- ^Interesting: [^HTTP ^cookie](http://en.wikipedia.org/wiki/HTTP_cookie) ^| [^Cross-site ^scripting](http://en.wikipedia.org/wiki/Cross-site_scripting) ^| [^JavaScript](http://en.wikipedia.org/wiki/JavaScript) ^| [^Cross-site ^cooking](http://en.wikipedia.org/wiki/Cross-site_cooking) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cg5b7vx) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cg5b7vx)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
What happens then? Does it just not do anything?
I'm sure I'll get down voted to hell but I have a windows hosting account on godaddy and I like it. $50/year and I got a free domain. Plesk makes all the basic IIS tasks real simple and the web interface is pretty clean. Downsides are: • it's godaddy • it's not a dedicated server • you don't have 100% control over everything like you would as a admin on a server instance Upsides: •cheap •simple to use for most uses (basic apps, configurations, etc) •support is real quick and easy to get a hold of and generally pretty good at what they do 
Features? Is it able to create country-depending names, phone numbers, adresses? E.g. when I say Japan, I also want Japanese names.
I have not tested the effect you describe, but it is a best practice to catch this (feedback from a background thread) with a simple check. As you stated correctly, only the UI (main) thread can access UI elements. However since this is a quite common problem to face, .NET offers just what you need to catch this. You can check whether you are on a background thread by calling InvokeRequired (on the form, in the event handler). So, you now know that you are on the background thread, what are we going to do about that? WinForms allows us to invoke a method on the UI thread (WPF does too, probably). It's really quite simple. Be carefull to return after invoking the required method on the UI thread, otherwise you would still end up with the same error. You would end up with an event handler like so: public void ExportComplete(object sender, RunWorkerCompletedEventArgs e) { if (InvokeRequired) { BeginInvoke(() =&gt; { ExportComplete(sender, e); }); } else { this.ExportProgress.Visible = false; } }
&gt; not being able to modify UI elements did it crash? if not maybe it didnt even execute your ExportComplete function for some reason. put a break point and check it. 
I should have been more clear. It throws an exception: An unhandled exception of type 'System.InvalidOperationException' occurred in System.Windows.Forms.dll Additional information: Cross-thread operation not valid: Control 'ExportProgress' accessed from a thread other than the thread it was created on.
I'm sorry, I should have been more clear. It throws an exception: An unhandled exception of type 'System.InvalidOperationException' occurred in System.Windows.Forms.dll Additional information: Cross-thread operation not valid: Control 'ExportProgress' accessed from a thread other than the thread it was created on.
I really wonder the same thing. It would be really cool if it is able to generate identities with a given country.
jquery mobile is excellent. I would start there.
Which increases the complexity even more On a side note, my friend once asked me if you could install Ubuntu to a NTFS partition. I laughed.
I would start with something smaller and learn some more if I were you.
This. Well, almost this. When you call RunWorkerAsync, the BackgroundWorker captures the current SynchronizationContext. It then uses this when calling the progress and completed events, to ensure they're called on the right thread. If you called RunWorkerAsync on the UI thread, the events will also be executed on the UI thread. If you called RunWorkerAsync on a thread other than the UI thread, the events will be called on any old random thread. **Make sure you're calling RunWorkerAsync on the UI thread!**
So I've decided to go back through some Project Euler problems and try to solve them with a more functional approach. If you guys are interested I have the first 10 up. I'm no functional programming expert, but I feel this is a good way for me to learn. Let me know if you find it useful, and If you'd like updates. Thanks Eldie
Its not that complicated, create a class for a Player. A class for a stadium. Constructor for the player, you set the values randomly. Create a Class for a Team that contains an array, fixed size i guess, if not fixed size, use a List. Add a few players to this array. Create a new random Team and then you have to write a function for the 'Game'. This can be done turnbased or all at once. Its a good starter project, if you keep it simple, once you advance more, you can use a Database to store the infos and use webservices/tcp ip connection to enable Multiplayer 
I am calling RunWorkerAsync from the UI thread. The relevant code: private void Export_Click(object sender, EventArgs e) { if (backgroundWorker1.IsBusy != true) { ExportProgress.Visible = true; backgroundWorker1.RunWorkerAsync(); } } This code runs when you click a button from the Windows Form. This Windows form itself is being generated by another thread, do you think this could possibly be causing an issue? If you want me to be more specific, it's an addin for Excel I'm writing.
Dont name your form Form1 and use .Equals for string equalisations
It is good practice to create all GUI elements on the thread that will drive their message loops. You can sometimes get away with doing otherwise, but if odd thread things happen as a consequence, this is one of the first avenues I start investigating. Also consider reducing the problem to its smallest reproduceable component. Make a simple form with a background worker that does no work and completes, and have the completion handler tweak a UI element. Then add in the way in which the form is being created and shown (with respect to threads), and so on, until you reproduce the problem.
I agree, this project sounds like a lot of fun IMO!!
I'll bookmark this to look at other's people solutions and hopefully learn more about what is supposed to be my main language.
All GUI elements are being generated by, and belong to, the form and run in a single thread. When I get time, I will try stripping it down.
Thank you! I accepted your changes. You even took care of a few that were on my own list. ;)
Awesome. Thank you for sharing. 
Why not F#?
Well I'm just dipping my toes into functional programming, so working with a language I'm fluent in makes more sense to me. I really like F#, and I've been playing with it as well.
MVC isn't some mythical dragon or anything like that. You seem way overqualified for someone who wants to 'learn mvc' in the sense that you should really just be able to jump right into it. If I were to tell you "I know C# but can you give me the steps for how to learn how to write a console app?" you really wouldn't have much to tell me. Create new project, Console app, Go, and just get used to how it works. Same thing with MVC. Just pick a basic task you want to accomplish (Web based) and build a sample MVC project to do it. If you understand how posts work, how basic javascript works, and if you can take an hour or two to watch some videos and do some reading on the basic concepts of how MVC works then you'll be in fine shape to work with it. HOWEVER: You've stated you have no real experience with SQL server - That's a major deficiency in pretty much any job you'll ever have. I'd correct that even before working with MVC. 
Having worked with C# for the past several years, I recently took a new job (4 months ago) which would involve work in ASP.NET MVC. In order to learn it, I started with the predictable route of Googling free tutorials and such, but nothing really made me feel like I actually knew what was going on with some of the "magic" involved in ASP.NET MVC. The best thing I found was over at 3dbuzz.com. They have a fantastic video series on learning MVC: http://www.3dbuzz.com/training/view/comprehensive-aspnet-mvc/details It's paid, but totally worth it. Their video series are all top-notch and the authors are more than willing to communicate with their users if you have any questions. I know that dropping $40 might not feel worth it if you aren't getting paid to use MVC, but I'd take a serious look if I were you. Hope that helps! *Edit*: I have no affiliation with 3dbuzz.com, I'm just a very satisfied customer :)
I think that's where I'm lacking confidence with the lack of database exposure and while I feel pretty good about C# syntax, I don't necessarily feel like I'm good enough with what seem like common .NET classes. I was watching Scott Allen's MVC 4 course on Pluralsight and there was a lot of things it just seemed like I should have been more comfortable with. It was mostly in regards to the database he was setting up. At one point he talking about dependency injection using some 3rd party nuget package for IoC and I had to stop because I just didn't feel comfortable enough with them to know what exactly what was going on. I've breezed over that stuff here and there but assumed it was something meant for something more advanced down the road. So it got me thinking about some of the in-between topics I might need to brush up on so I can thoroughly grasp everything as I go along. Thanks for the reply.
$40 is definitely worth the investment if it's a quality series. I want to make sure I gain a thorough understanding and build a really solid foundation. Anything that hung you up when you started watching that series the first time? Any topics or techniques that you'd recommend being up to speed on?
They keep it rather straightforward as far as their implementation of C# techniques go. They use a bit of LINQ, but nothing too complicated. They also use nHibernate with is an ORM (http://en.wikipedia.org/wiki/Object-relational_mapping) framework for database interaction. You might want to get your head around ORMs, but then again just following along with the tutorial will give you a basic, applied understanding.
#####&amp;#009; ######&amp;#009; ####&amp;#009; [**Object-relational mapping**](http://en.wikipedia.org/wiki/Object-relational%20mapping): [](#sfw) --- &gt; &gt;__Object-relational mapping__ (__ORM__, __O/RM__, and __O/R mapping__) in computer software is a [programming](http://en.wikipedia.org/wiki/Computer_programming) technique for converting data between incompatible [type systems](http://en.wikipedia.org/wiki/Type_system) in [object-oriented](http://en.wikipedia.org/wiki/Object-oriented) programming languages. This creates, in effect, a "virtual [object database](http://en.wikipedia.org/wiki/Object_database)" that can be used from within the programming language. There are both free and commercial packages available that perform object-relational mapping, although some programmers opt to create their own ORM tools. &gt; --- ^Interesting: [^List ^of ^object-relational ^mapping ^software](http://en.wikipedia.org/wiki/List_of_object-relational_mapping_software) ^| [^Comparison ^of ^object-relational ^mapping ^software](http://en.wikipedia.org/wiki/Comparison_of_object-relational_mapping_software) ^| [^Entity ^Framework](http://en.wikipedia.org/wiki/Entity_Framework) ^| [^EntitySpaces](http://en.wikipedia.org/wiki/EntitySpaces) ^Parent ^commenter ^can [^toggle ^NSFW](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot NSFW toggle&amp;message=%2Btoggle-nsfw+cg5wfdv) ^or[](#or) [^delete](http://www.np.reddit.com/message/compose?to=autowikibot&amp;subject=AutoWikibot Deletion&amp;message=%2Bdelete+cg5wfdv)^. ^Will ^also ^delete ^on ^comment ^score ^of ^-1 ^or ^less. ^| [^(FAQs)](http://www.np.reddit.com/r/autowikibot/wiki/index) ^| [^Mods](http://www.np.reddit.com/r/autowikibot/comments/1x013o/for_moderators_switches_commands_and_css/) ^| [^Magic ^Words](http://www.np.reddit.com/r/autowikibot/comments/1ux484/ask_wikibot/)
Guess that makes sense. But it's still funny that you try to write functional code in a procedural language while the functional version is just a step ahead. ;-)
Here's a course you might be interested in: https://www.coursera.org/course/gameprogramming. It doesn't have any prerequisites.
Try [Pex for fun](http://pex4fun.com/) too!
Well the other issue is my job is writing c#, I can probably convince my company to move more towards a functional C# model easier than switching to F# (though maybe in time).
I think that rather than doing it in series at this point, that you should learn MVC in parallel. MVC is more about different paradigms and what they look like in application.
I was watching his other course before. I'm about 7 videos deep in this link and it feels way better so far. Thanks.
[Check out the answers to this question I posted yesterday.](http://www.reddit.com/r/linuxquestions/comments/20nd7o/ways_to_run_scripts_on_linux_machines_from_a/)
some corp networks will just turn off echo on there firewall. dont use ping in your program. 
So, doing some more digging, apparently this is actually a common issue. I need to run the following magic line: System.Threading.SynchronizationContext.SetSynchronizationContext(new WindowsFormsSynchronizationContext()); 
I can understand where you're coming from there, information overload. Try breaking your task down into sub projects. Why not try a simple login and display a page MVC site? Hardcode your login details and put off dealing with a database in this stage. Just get familiar with Views and Controllers and how to post form data from a view to a controller and how to read and respond to the post data sent to that controller and return an appropriate view. That may seem like a simple 2 pager website, but you'll get the core basics from figuring it out. Then try integrating a db and so on. Move a mountain one rock at a time.
Yup! Just sign up as a Member Sponsor. It's $35/month or something and it gets you most of the content on the site, if not all of it!
Since some of the other stuff was mentioned already I won't expand on it, but for the random stuff its very easy... use the [Random Class](http://msdn.microsoft.com/en-us/library/system.random(v=vs.110\).aspx). For the table view, use a List&lt;YourPlayerClass&gt; and then have the columns be whatever properties you want to display (Name, Salary, Skills from YourPlayerClass's Properties)
Unless I misunderstand your question, I'm pretty sure you could simply use a List of the base object to hold them all in one collection: var inventory = new List&lt;basicItem&gt;(); Just make sure to type check when you work with items in the list if you are looking to utilize any of the derived properties.
Thanks for the reply and for taking your time! I'm going to check this out and test it out as i want, thanks alot :) 
Thanks for the quick response!, i don't quite think this would work for my project i'm currently working on though. Thanks anyway :)
Any reason it wouldn't work? Just trying to get an idea in case I have any other approaches you might be able to use... :)
Ok, cool. :) And that syntax is perfectly valid, too. "var" just saves some typing in this case. It's called Implicit Type Declaration. (ref. http://msdn.microsoft.com/en-us/library/bb383973.aspx) I tend to use it for brevity, but it allows for some pretty cool features when working with Generics and Anonymous Types (which are discussed in that link.)
I just graduated with a Bachelor of Computer Science, specifically with experience in Java. I just started a job with C# (very similar to Java). To begin with, you have a great start! Obviously your code could be cleaned up, but I've been working with code for 4 years and I still need to clean up my code, so don't worry about that. Just flesh things out if it helps understanding it as you have. From what you've described about the teaching style, I found the best way to learn to program is just to do it. I had wonderful teachers that simply told us to copy the code they were typing, and we ran them, and it was awesome (computers are magic!). So if it helps, find examples (don't worry about the theories), copy and attempt to run them. Once I could punch keys and run the programs, then I could find out why they did it.
Wow, I'm pretty helpless without intellisense
You could use a item type and cast it to the type you know (e.g. ((Weapon)item).Damage) or just cast it using 'as' keyword to check if it is from that type before using it.
Sorry, no. It's designed specifically for ElasticSearch. ElastiCache's APIs are different.
Just wanted to mention that you should keep in mind that MVC is a design pattern. ASP.NET MVC is Microsoft's implementation. I'd suggest reading about and understanding the pattern. You can do this out-of-band with your language learning. Then once you get to the ASP.NET implementation, I think it will just make a lot more sense. 
I'm using [asphostportal.com](http://asphostportal.com) to host my asp.net site. Their price and feature are good with the solid support. You may also try them
If you have small traffic, you dont need to use their service. If you have high traffic, I believe they are good option. :)
Node is very cool, but it's weak point unfortunately is Javascript. Node is very good at certain types of applications, specifically: high throughput where you're basically just exposing access to data via an API without a massive amount of logic. It's also very good for rapid prototyping and as a scratch pad. What it's not very good at is anything you'd really call business logic, on account of javascripts shortfalls where it comes to OO design (no interfaces, abstract classes, partial classes...) I like to think of Node as another tool in the developers toolbox, less as something that can stand by itself. As a side note, TypeScript or something similar might be better suited - but at that point you might as well use GoLang.
Point 1) For serving static content, I'm sure that IIS handles that and the request is not passed onto ASP.NET. The only valid point to the article is number 2. If you're not a .NET developer and you are skilled in JavaScript then Node.js would be an easy fit. The rest of the points state that Node.js can do what ASP.NET already does.
I'm targeting 4.0. I can send you the whole project, if you want. It's not that big, but it is very shitty. At the very least, with that line, it works, if I take it out, it breaks.
this seems pretty limited in use cases, other than when you have no choice but to use dynamic/anonymous types 
That was the plan. I threw in the abstract/virtual stuff just to have a 'reason' to use a base class as well for example purposes. Definitely a bad idea to use those in the way shown in the code. 
/r/programmerhumor
My coworkers all seem to like the light theme, so when non-technical folks walk by my desk there are many "LOL ALIENSHORE'S HACKING THE FBI MAINFRAME!" jokes
Can someone ELI5?
If it quacks like a duck and walks like a duck, it's good enough to be a duck.
Can someone ELI9?
Interesting side note though, foreach iterations are duck typed, you can iterate through a collection as long as it has a getenumerator method even if it doesn't expressly implement ienumerable. 
If you have an anonymous object (one with no explicitly defined type) that has all of the properties of a type that you have (for instance, `MyObject`), then you may say &gt; Well, can't I just treat the anonymous object like a `MyObject`? That is to say, if the anonymous object looks/acts like a `MyObject` (based on it's properties), then why can't I just *call* it a `MyObject` and use it in all of the places where I could use a `MyObject`? This is 'duck typing'.
I usually think "shit, what have I missed?!"
Azure is excellent, integrates nicely with Visual Studio. You can also get SQL Azure for a couple more dollars (increasing as your db increased). File (blob) storage is very cheap as we'll I'd go Azure, solid iis hosting and learn cloud hosting at the same time.
Custom theme is the only theme. The dark theme makes one suicidal.
Very cool! There have been plenty of times when I wished a sealed 3p class implemented an interface so I could mock it out for testing. (Ahem, HttpRequest) This addresses 2/3 of my "I wish that x supported interfaces": http://www.codingblocks.net/programming/what-if-interfaces/ :)
Spoofing an IP is a little questionable...is there any additional reason why you want to learn this in particular, especially with you being so new to C#.
It's not 'bad' at it, per se. Just different at it. JavaScript is a powerful language, but you have to think differently about it than you do C#.
I know, I'm not saying that the project itself here is the problem, rather that OP should learn some more concepts before starting such a big project.
I'd like to know more about networking and deeper the better. I know if I wanted to create an actual malware, I wouldn't be doing it in C#. But this is the route I feel is the most suitable for me to learn how stuff that interests me, works. If you have better ideas for me to learn just hit me, I am open for that. edit: I have pretty good history with PHP (didn't do anything for many years now tho), so I know basics of programming and following banana arrays in tutorials isn't so appealing if you know what I mean..
Windows does not allow you to use raw sockets anymore as of Win XP SP2 (or 3) and later. This means that all packet headers are generated in the kernel, and you have no way of changing it unless you had a driver of some kind. Even if you DO spoof the IP, your ISP will likely block the outgoing packet. If you really want to IP spoof, your best bet is using mono on a *nix system Also, IP spoofing is useless in the TCP protocol ever since they implemented the random ACK sequence number. 
So it's like [Bing code search](http://visualstudiogallery.msdn.microsoft.com/a1166718-a2d9-4a48-a5fd-504ff4ad1b65) for visual studio 2012?
Finally had a chance to play with the demos. No doubt it's a powerful framework, but it's very opinionated about the overall architecture of any project you may want to make out of it. The demo state machine designers don't do much out of the box. I can't even find a way to add a transition between states. Interesting framework though... Just not enough time to wrap my head around their flavor of DOM and how all the pieces are supposed to fit together.
I like Font Awesome, but the only browser where it really looks good is IE10+ (looking at the [examples](http://fontawesome.io/examples) page) * Chrome (33.0.1750.154) - animation is gittery * Firefox (27.0.1, 28.0) - all of the icons are dither-y/grainy * Safari (5.1.7) - content alignment issues (could just be the sample page, though) * Opera (20.0.1387.77) - animation is gittery
Ok nice info. How in theory my ISP would block the packets? Like do they have a IP range and if the packet coming from is not from that range, it is dropped? Stuff like this interest me so if you have any reads about this point me to it :). And I am mostly using Windows so coding C# stuff myself is bigger than making stuff in Linux but thanks for tip anyway.. Cheers
That's a lot of code. It's typically considered polite to paste a reduced test case that contains only the bare minimum amount of code to demonstrate your problem.
The point is that everything works if i put this: Tile tile1 = new Tile(All the arguments); But it doesn't work when I do it in the same class like this: Tile.NewTile(All the arguments.)
if you could narrow it down to where you think the problem is happening, that would help me help you a ton
Not entirely sure, but here are my best guesses: 1) The modem drops all outgoing packets that don't match the IPs it was assigned 2) The first node or a bigger node (still within ISP network) you hit checks for the source to make sure it matches the assigned range In theory, if you were to spoof packets, and the modem did not block it, you could only do it within the ISP network (such as connecting to another person on the same ISP, living close to you). Another thing to note: Datacenters dont always check the data, so you could easily rent a server, set up a linux distro, and spoof any packet you want (once again, TCP is useless, but you UDP spoofing is quite popular) Your best bet is to probably Google most of these things, as someone somewhere likely asked this same question (not necessarily related to C#, but IP spoofing in general)
This is awesome! I was actually looking at your solutions that didn't include funcional properties and I wanted to point out that your solution to problem 3 isn't actually valid. If you consider the number 600851475145, it only has two factors which are 5 and 120170295029. Both of these numbers are prime, but your algorithm excludes the other factor since it is much greater than the square root of 'number'. EDIT: I applied a "fix" to that situation, but it would still take quite a very long time for some numbers: for (long index = 2; index &lt; bigNum / 2; index++) { if(bigNum % index == 0) { bigFactor = bigNum / index; break; } else { bigFactor = bigNum; } } for (long firstIndex = bigFactor; firstIndex &gt; 0; firstIndex--) { if(isLPF) break; if (bigNum % firstIndex == 0) { for(long secondIndex = (long)Math.Sqrt ((double)firstIndex); secondIndex &gt; 1; secondIndex--) { if(firstIndex % secondIndex == 0) break; if(secondIndex == 2) { Console.WriteLine ("A prime factor of " + bigNum.ToString() + " is " + firstIndex.ToString ()); isLPF = true; break; } } } } In this context, bigNum is the number we're trying to find the largest prime factor for, bigFactor is the largest factor of bigNum which is what the starting point of the first loop will be so it doesn't have to go through 3 billion iterations. firstIndex is your 'i', secondIndex is your 'j', isLPF is to a boolean used to signal when the first prime factor is found as it will always be the largest one. When isLPF is flagged as true, it breaks out of the loop and ends the program. For 600851475145, it finishes almost instantly because it's largest factor IS prime. For 600851475143, it takes ~1 min because it still has a large amount of numbers to go through before it gets to 6857. It's a lot better than the initial 4 hours that it took on your first attempt though.
Oh yeah, agreed. I just think it's a cool solution. :)
The lowest grain you can achieve in .NET is using the Sockets class. However, the actual creation of the packets that go out is handled entirely by the OS at this point. Since you're only a two day beginner at C#, I do recommend you attempt something...simpler than this. If you -really- want to do networking, then I suggest you write an Instant Messenger. I wrote one early on and it was a pretty big challenge getting the handshakes working, at least for me.
bing searches externally, sando searches locally
cool plugin if it just worked properly
&gt;InitializeComponent() That right there is what hooks up all the EventHandlers for a form. The events obviously won't be firing until that is called (which InitializeComponent is called in the constructor of the form). When I get home I'll step into this some more (hopefully). That's just a shot in the dark right now as to why your event handlers aren't firing.
I dont think anyone is going to be able to help you until you clean up the code and simplify it down to something understandable at a quick glance. Also I have never seen someone do this before you might want to look into reading a programming practices book like clean code. if (false == m_Acquiring) things like this public string Name { get { return m_Name; } } can also be changed to the much simpler form public string Name { get; private set; } and why does everything begin with m_?
The if (false == m_acquiring) is done to avoid NullReferenceExceptions. I'm not sure where that practice came from (I think Java), but I hate it. m_ whatever probably came from old Java ways. .NET convention is to use an underscore for private class variables.
a) As long as `m_acquiring` is a bool and not a type with an implicit conversion to bool, it's absolutely impossible for that line to throw a null reference exception if you remove the `false ==`. Even if it is implicitly converted, any sane conversion would just return false for a null value. b) There is not .NET convention for private class variables. Go decompile the BCL, and you will find `m_field` (and `s_field` for static fields), `_field`, and `field` used in roughly equal proportions.
I've programmed in JavaScript longer than C# (from 1996 - 2014). I know the various styles, strengths and pitfalls in the language. I feel comfortable saying that it is a much poorer language for many kinds of applications - essentially anything outside a browser.
There were other places where he was doing something similar to "meow".equals(aString). The only time I've seen that practice is when I first started at the job I'm at, and when I questioned the practice, the explanation I was given is "That's what I was told to do by our .NET guru around here to prevent NullReferenceExceptions" or something similar, and the guy giving the explanation had no .NET experience and was pretty much out of college.
An angular beginner would say that :P
b) There were framework design guidelines published (dating from v1.1 of the framework, IIRC) that promoted the underscore prefix (_field) for private variables. Resharper supports this style. But as you say, Microsoft didn't exactly follow them internally when writing BCL code... It's a decent convention, IMO. But it's likely to come down to a religious argument. :) 
^([Citation Needed]) Every copy of the design guidelines I've ever seen explicitly does not specify a convention for private members. See "Names of Fields" on [this page](http://msdn.microsoft.com/en-us/library/ms229012%28v=vs.110%29.aspx) for example.
Looks like they've decided to punt on the leading underscore. I've only been doing it since 2002 -- when it was a recommended practice, so a while now. :) 
Ah yeah, makes sense. 
Angular beginner, C# expert. D:
Let's assume your Player class looks like this: class Player { public string Name { get; set; } public int HP { get; set; } public int MP { get; set; } public IList&lt;Item&gt; Inventory { get; set; } public Player() { Inventory = new List&lt;Item&gt;(); } public override string ToString() { return string.Format("Name: {0} HP: {1} MP: {2}", Name, HP, MP); } } /u/ccrabb provides an example using `if (item is Type)`, this goes against ideas of [polymorphism](http://en.wikipedia.org/wiki/Subtype_polymorphism) and is a bad practice in a lot of cases. Your interface should define what you want to do with all your items. For example you probably want items to have names, be able to use the item on a player, and be able to see the description of the specific item, for example how much a potion heals. interface Item { string Name { get; } void Use(Player player); string Description { get; } } Let's implement potions, for example Health and Mana potions. The two potions are quite similar so let's make a base class, Potion abstract class Potion : Item { // Potions will recover attributes by a given value public int Strength { get; set; } // The Potion class is not specific enough to implement these yet public abstract string Name { get; } public abstract void Use(Player player); public abstract string Description { get; } } Health potions class HealthPotion : Potion { public override string Name { get { return "Health Potion"; } } public override void Use(Player player) { player.HP += Strength; } public override string Description { get { return string.Format("Recovers {0} HP", Strength); } } } Mana potions class ManaPotion : Potion { public override string Name { get { return "Mana Potion"; } } public override void Use(Player player) { player.MP += Strength; } public override string Description { get { return string.Format("Recovers {0} MP", Strength); } } } Now to try it out var player = new Player() { Name = "Bobby Tables", HP = 10, MP = 11 }; player.Inventory.Add(new HealthPotion() { Strength = 10 }); player.Inventory.Add(new HealthPotion() { Strength = 20 }); player.Inventory.Add(new ManaPotion() { Strength = 15 }); Console.WriteLine("Before using anything:"); Console.WriteLine(player); Console.WriteLine(); foreach (var i in player.Inventory) { Console.WriteLine("Using item! Name: '{0}' Description: '{1}'", i.Name, i.Description); i.Use(player); Console.WriteLine(player); Console.WriteLine(); } &gt; Before using anything: &gt; &gt; Name: Bobby Tables HP: 10 MP: 11 &gt; &gt; &gt; Using item! Name: 'Health Potion' Description: 'Recovers 10 HP' &gt; &gt; Name: Bobby Tables HP: 20 MP: 11 &gt; &gt; &gt; Using item! Name: 'Health Potion' Description: 'Recovers 20 HP' &gt; &gt; Name: Bobby Tables HP: 40 MP: 11 &gt; &gt; &gt; Using item! Name: 'Mana Potion' Description: 'Recovers 15 MP' &gt; &gt; Name: Bobby Tables HP: 40 MP: 26 Now you can implement any other item class that acts upon a player! Want poisons instead of potions? Make the Use function decrement HP! Want an item that will change the player's name to "Sir Douchebag"? Easy! But what about items with toggle effects, such as armor? Do you "Use" armor on a player, or would that require another verb (or two)?
Yes it's possible, especially in form form (heh) . Just make sure that you don't try and develop lots of features at the same time, or it may get complicated.
What are you using to develop? Visual studio? if so, what year?
Ah yes, I think you are right. I was so focused on speeding it up that when it spit out the right answer I quit paying attention. But I'd say I"m pretty close. What I forgot is that if there is a divisor &lt; sqrt(BigNumber) then there is also a divisor &gt; sqrt(BigNumber). With problem 3 that larger number happens to not be prime, but there are others that it could be (like your example). I'll try to update Problem 3 today. Thanks
My first thought is splitting the binding into rendering logic and basic game logic at least. That would follow the S part of SOLID. Injecting the slot values seems weird, it would make sense for it to be constructed empty by default. `ConsoleGrid` should probably encapsulate, not extend `Grid`, so you can split up `Bind&lt;IGridRenderable,IGrid&gt;()` between rendering and logic. Same with the conditions. Tic-tac-toe uses a 2D grid, why are you using a 1D array and doing all the conversion math?
looks cool, thanks for sharing it
Or, just have the app update itself (optionally with the users consent). One of the interesting quirks of Windows is that while you can't delete an executable that's in use - you can rename it's file. * MyApplication.exe renames itself to MyApplication.old.exe * Download a new version of MyApplication.exe * Optional: Do nothing, let the user know that next time they start the application it will be up-to-date. Good for if you're doing updates automatically without asking the user. * Start the new MyApplication.exe and quit * The new one can delete MyApplication.old.exe once it's fully started and happy that the update was OK. Alternatively, have the executable that the user starts not actually be the application itself, but rather a launcher that starts the application for you, and checks in the background for a pending update. If there is one, tell the application via RPC to ask the users permission and exit if given so the update can be performed.
Thanks for checking it out! What's failing for you? We are a small team that is supporting it but it is under active development and we can likely fix any issues you find fairly quickly. 
@thespacebaronmonkey said it well, but it bears repeating: Sando searches your local source code (i.e., the currently open Solution in Visual Studio). It can be configured to search arbitrary folders as well.
I ended up using [OxyPlot](http://www.oxyplot.org/) last time I went looking for chart libraries. It doesn't do INotifyPropertyChanged updates or anything too fancy, but it's super easy to set up.
Doesn't work at all on VS2010. From what I remember it seems like it doesn't recognize that solution is already loaded. I can provide more details when I'll have access if you'd like. I wish you good luck with development :)
Thanks so much for the feedback! It is (or course) supposed to work for VS2010, and I was just able to index and search a CSharp Solution (http://rrrsroguelike.codeplex.com/), but obviously it is still failing in your environment, which is much more important. Please do let me know if you have any additional details. FYI, one option is to look at the logs (see the options button for the relevant folder) and potentially send those to me. Thanks for the well wishes!
looks fine, i think i will test it at work tomorrow
Checkout ninject.extensions.conventions and just scan and bind using default conventions. Should remove most of the code there. Failing that, the kernel supports multiple modules installed into it, so you can split your bindings if you feel the need. Generally, start with strong conventions.
Work. 
Trading Systems
MVC web applications using Angular, EF, BootStrap, jQuery, and Azure!
These days I mainly just use it as a scripting language via LinqPad. Though Python is slowly replacing that.
I have to develop reports in an ERP suite that I just loathe. So I use c# and SQL to prototype my solutions and then I use the ERP'S asinine report IDE to write the final report. 
Everything (Event sourced web APIs)
D3 dead? D3 is huge at the moment, mbostock creator is always writing more documents and tutorials, etc. It has become industry standard. And you are right, it is much better than most other solutions out there for low-level data viz. However, it is hard to use compared to higher level abstractions.
That's a solid ditto for me.
Game Development in Unity and enterprise level ASP.Net MVC apps. 
oh, it looked like there was not an update in a long time and since the new version seems to be completely dependent on silverlight i assumed .... edit: hmmm, was pretty sure silverlight was dead/discontinued. but i seem to have been wrong there too since le last version is just 10 days old. quite embarrassing o_O
Work -&gt; Scientific Computing, traffic demand modelling
There are two D3s there is Dynamic Data Display(D3) the csharp library that is dead and there is D3js(D3) which is a javascript library that is very much alive. OxyPlot is the best free charting library for csharp projects right now in my opinion. 
Keeping track of [every object orbiting earth.](http://comspoc.com/)
Unity and Windows Phone!
Video Games!
Building storefronts for on online game.
Sorry in advance for formatting; I'm on mobile. In addition to blind casting, you can also use two other methods in C# - GetType/typeof/cast and is/as. /u/stefanmielke already pointed this out, so I will simply elaborate. For typeof, you would do something like: if (inventory[0].GetType() == typeof(Potion)) ((Potion)inventory[0]).healingAmount... For is/as, you can do: if (inventory[0] is Potion) (inventory[0] as Potion).healingAmount... is/as is very negligibly faster from what I understand. Of course I'd throw the casted object into a variable so I don't have to keep typing inventory[0]. :)
Just finished a large in-house project for a photography company, starting work on a google drive backup solution.
I just used C# (with ffmpeg) to make a program that will scan old 80's cartoons from YouTube, find commercial breaks, and then reinsert 80's commercials (also from YouTube) back into them at the appropriate times.
I made a custom logger for MSBuild. It sends build statistics to a server that graphs them over time.
What at work?
&gt;How would i then write out the "Healing Amount" when i dont know that specifik item is an potion, for example: Console.WriteLine(Inventory[0].??); There is a better way to do this rather than casting. See below: using System; using System.Collections.Generic; public abstract class BasicItem { public int Id {get;set;} public string Name {get;set;} public abstract int GetPrimaryStat(); public abstract bool HasSecondaryStat(); public abstract int GetSecondaryStat(); } public class Potion : BasicItem { public int HealAmount {get;set;} public int RequiredLevel {get;set;} public Potion() { Id = 0; Name = "Potion"; } public override int GetPrimaryStat() { return HealAmount; } public override bool HasSecondaryStat() { return true; } public override int GetSecondaryStat() { return RequiredLevel; } } class Armor: BasicItem { public int ArmorValue {get;set;} public int Strength {get;set;} public Armor() { Id = 1; Name = "Armor"; } public override int GetPrimaryStat() { return ArmorValue; } public override bool HasSecondaryStat() { return true; } public override int GetSecondaryStat() { return Strength; } } class Weapon : BasicItem { public int Damage{get;set;} public Weapon() { Id = 2; Name = "Weapon"; } public override int GetPrimaryStat() { return Damage; } public override bool HasSecondaryStat() { return false; } public override int GetSecondaryStat() { throw new NotImplementedException(); } } public class Example { public void Main() { var items = new List&lt;BasicItem&gt;(); Weapon w = new Weapon() { Damage = 10 }; Armor a = new Armor() { ArmorValue = 125, Strength = 15 }; Potion p = new Potion() { HealAmount = 10, RequiredLevel = 1 }; items.Add(w); items.Add(a); items.Add(p); foreach(BasicItem i in items) { Console.WriteLine("{0}'s Attributes:",i.Name); Console.WriteLine("\tFirst Attribute: {0}", i.GetPrimaryStat()); if(i.HasSecondaryStat()) { Console.WriteLine("\tSecond Attribute: {0}", i.GetSecondaryStat()); } else { Console.WriteLine("\tThis has no secondary attribute"); } Console.WriteLine(); } } } What this does is means you can take any BasicItem and call those methods on it without having to have a bunch of typing. It will reduce the amount of code you need to have to handle these situations as well as make your code cleaner.
Building a Windows 8 application for a bit college project. Using C# and XAML. My first language was java and I used C# a lot last summer during an internship so I feel comfortable enough with the language.
Absolutely right. I usually throw them in a List&lt;string&gt; like so: List&lt;string&gt; lines = new List&lt;string&gt;(textBox1.Lines); 
For work I do a project that is half ASP/MVC/Entity Framework half a XNA game. I also use a lot of other libraries. Such as EEplus (for programatically generating Excel files) and Infer.NET (Machine learning) For home projects I mostly work on my 2D Monogame engine. I've recently started looking at the Sony ATF library. It's REALLY interesting. I'm trying to find a good starting project for it because it has a bit of a steep learning curve. They have their own DOM and way of doing things. 
Whaat? That is cool as hell. Is there a link?
Working with selenium building page objects for automating web apps my work builds
Working on an overly ambitious senior design project using ASP.Net MVC, Silverlight, .Net Portable Library, and WCF. Might add a Modern App or Windows Phone UI if we have time.
A Softphone and call-center agent desktop application for a top financial institution.
Trading application (wpf with wcf services running over TCP). web services for other groups serving our data (wcf over http). at home in unity3d making a game. in an angularjs application using as a service in a webapi controller.
How are you liking angular? Thinking of switching from knockout (even tho they aren't 100% similar)
Most of the time, work. Ecommerce and account management WCF services. Couple MVC sites as well. Some self-hosted and some in Azure. Out of work, games in Unity! Woo!
For work? Boring business CRUD software. For fun? Experimental image manipulation software^[1](https://github.com/fragmer/PixelSorter/),[2](https://github.com/fragmer/SuperImageEvolver) for making the kind of stuff you'd find on /r/glitch_art. Also game servers^[3](http://sourceforge.net/projects/fcraft/) and tools^[4](https://github.com/fragmer/fNbt) for Minecraft.
Work: healthcare Play: web services for apps
Agree with this wholeheartedly. Not only does it not make you a better programmer, oftentimes it can just confuse you. You will quickly find your eyes glazing over and thinking about anything besides the task at hand. Programming, in my opinion, is an incredibly hands-on experience. I can read and read, but it's only when my fingers type the code that the concept really gets committed. For me, it's like building muscle memory in a sense. The act of doing reinforces what you are learning. The rather immediate gratification also helps reinforce. You type it, compile it, run it, and it clicks. "Wow, I did that!" When I was little, I did a lot of programming on an ancient machine (Commodore 64). I can't tell you how much I learned just by keying in the program listings in Compute's Gazette magazine. As you type every line, you can think about what its purpose is. You can change it and see what it does. Again, it's hands-on - something you can never get by just reading. Don't get me wrong - there's an absolute wealth of information out there to read, digest, and understand. But imagine trying to learn to build a house just by cracking open a book. You need to get your hands dirty. You'll come away an actual programmer. :) Good luck, and have fun!
Which erp?
What do you use for database side?
A lot trading &amp; financial applications from the posts here. Is it easy to get work in the financial industry with c#, wpf experience? Is the pay better than dev work in other sectors?
There is plenty of work to be done in the financial industry and C# WPF is very popular. The pay normally is a bit better but many areas demand high talent. 
Moving from Sybase to Oracle. There is a coherence grid in the middle. 
Listen, I'm going to cut to the chase. I want to see this immediately. 
That's clever. Are you able to grab the playlist for the video or are you detecting another GET midstream?
At work, lots of boring stuff. EVMS suites, GUIs for real-time simulation, and line-of-business stuff. At home, music theory analysis, voice activated home automation, and little tools that I find useful and haven't been able to find an app for.
Work: (Computer) Lab management software. Because I felt like it. Play: Modular IRC bot. Still working on the modular part. Writing the general outline spec for it right now.
Work: Currently at a job that is in no way computer related while I'm in school so nothing there :/ Fun: Some small projects and apps to make some things easier like a drop logger for an online MMO I play.
Writing an XML parser/composer for interacting with a cellular network
Very true, but VS throws a Warning when you use an assignment operator in a conditional expression. So at least it's not completely stupid about it. For instance, bool test = false; if (test = true) { } generates: "Warning : Assignment in conditional expression is always constant; did you mean to use == instead of = ?"
You're thinking of the many instances of "if(null == blah)" in the code. Those are designed to protect against NullReferenceExceptions.
Aye. I have a hardcover copy of "Framework Design Guidelines" from MSP, and it has no mention of member variable naming conventions. Though I've seen the convention used many times in MSDN documentation. I don't remember seeing it recently, though.
Last thing I built was an app that downloads images from reddit. I have a slow Internet connection so when watching porn, it's easier to just download the first x items from every subreddit I enjoy and watch later... Also, my laptop is too shitty for reddpics.com 
At Work: Financial Applications For Fun: A real simple tool to edit ID3 Tags from mp3 files.
Websites without anything fancy, just MVC + EF and some jQuery :)
Game dev in Unity.
For desktop ,web, phone applications
Good idea to use an object oriented language for that. 
For the past couple years, a program which generates a mod for the game Crusader Kings II.
Perso : Web and mobile Work : CRM, Winforms shit, and other boring stuff :)
CRUD. That word perfectly described anything I've ever been paid to do in C#. There's nothing I hate more. On a more personal interest, I've been looking into Unity. Hoping to actually do something useful in the future. As opposed to creating form after form after form.
I'm developing a small language and processor for being able to scan web sites and extract information. 
Why is the one built into the .Net framework not suitable?
Work. Measuring productivity (OEE) for our customers.
No idea what you're using, but I can empathize thanks to Crystal Reports. 
reddit.
SSRS isn't much better :/
It depends of course but I think you can safely estimate around 200 bucks per month for a typical database-driven site. They have a calculator on the page.
I have not done anything with it yet. I honestly didn't think anyone would care that much. I developed it because I do a retro cartoon podcast at cartoonretrocast.com and I wanted to be able to watch the cartoons the same way I did back in the 1980's. It's not user friendly either, it's a console application that is semi-automatic.
We used it to build our risk system, both middle tier and frontend. Provides live P&amp;L within 3 or 4 seconds of market changes using bloomberg.
Game Development
Very cool, will do! &lt;3
You think you're clever, don't you. 
Xamarin. I am developing for Android and iOS with C#, one project for each platform that share the logic code in another project, all in the same solution. I start coding C# because Xamarin, and I am enjoying it, way better than Objective-C and have a few cool features that Java does not have.
Using it for SharePoint 2010 development at the moment.
Work: CRUD apps, lots of data analysis stuff (although I wouldn't classify it as big data as I'm dealing with at most a half million entries at any given time). Home: It changes over time but lately it has been procedurally generated art, applications that build applications (basically Roselyn experiments using machine learning), and apps to help make coding simpler.
Currently using C# with WPF to make a full-screen kiosk solution which plays group fitness videos. It's an entirely closed environment so it's just a big playground for me.
What are your impressions on developing for WP? I want to dabble in app development. I started experimenting with Java on Android because that's what I have currently, but Java is a tough pill to swallow.
Rumour has it Microsoft is in deals to buy xamarin. 
I can't see this as good news, I know I am at a C# subreddit, and everybody here probably loves Microsoft, but in my opinion they have done a lot of bad choices. It is not a company I can trust.
I work with medical software. Usually we create messages for interoperability between systems, reporting of quality measures, dashboards in asp.net. 
I use it for pretty much everything here at work.
Unless they have changed things, or I missed something, my biggest complaint about Windows Phone development is not being able to deploy directly to your phone like I can with Android. Everything has to go into their market first.
It's one of my favorite platforms to work on. The community is really appreciative of devs too, since it's so neglected. 
Really? So if I want to test my latest app iteration, I have to use the WP emulator and can't deploy directly to a WP phone to test?
And I take it you use WP as your personal phone as well?
Yup. Lumia 928. The OS is gorgeous.
Yeah, you have to use the emulator during dev, which I can handle if the emulator is good. But you can't just build something for personal use. Again, that's to the best of my knowledge. I had someone who wanted me to build a personal app for him, and we ended up going with a web app that he has to log into because of this.
Insurance industry. Pushing papers around digitally.
I'm coding a duplicate finder, a windows input recorder (plays back movements you record, something like AutoClickerTyper)
making tiny zombie mansion simulations, then coding reinforcement learning ai's to try to escape them, and graphing their fitness; no seriously, I call it [resident aivel](https://github.com/adrianseeley/zumbeyes)
Interesting home projects. Have you shared any apps that make coding simpler? 
Karaoke softare!
Well if it's ever released publicly I'd love to see it. That sounds so awesome. I'll check out the podcast too, sounds like fun. 
Maintenance tool for embedded equipment for work. It's pretty cool I learned a lot with this project. We are able to draw the shelves with equipment in it and get the equipment's status, stream RTSP flux from the cameras etc. Plus: I gave me a legit excuse to watch movies at work.
Active reports!
Right now I am writing a small program to manage a few different parts of a few different Shopify stores. Shopify has a lot of functionality that you can't really use just with the admin interface. It's designed to make it so you can go to their marketplace and add Apps to your store (many for a fee) to do more advanced stuff. But, they also have something called Private Apps which is a quick way to make desktop apps or services that interact with your store. So I am making an app that manages product options, metafields, and redirects in a way that is more sane than trying to do stuff one at a time through the web interface. C# + RestSharp has made remote eCommerce administration through Shopify and BigCommerce into a dream.
SSRS respects no logic... "Oh I don't care if you see it, that doesn't mean that I'll generate it like that !" I've learned to not get mad at it and just keep trying until I get my stuff right. 
That is a stupidly high rate to just get a website. 
An reason why oracle beats out the other possibilities (I'm thinking of SQL Server of course but others as well)?
I thought it was odd for such a dev focused community. But it really wasn't apparent at the time how to accomplish this. I was actively searching for a way for a number of days.
ATM Machine
Me either until very recently, we are hoping we can use it with LibGDX to port a Windows C# app to a single Java codebase for Android and iOS.
You need a new/modern website, this one looks it's from 1975 and it's a shame because it doen't represent the col work you do, and it should. For the functionality you need, I'd gladly do it for free. Seriously.
Unity, tell me more
A program that will help my high school counselor mom to sort, maintain and arrange the students into majors according to dynamic requirements.
It seems theres a shit load of cooler work offers, why are you still there? (I'm in the science business, C# only for fun so I can't tell fo sho...)
IRC bot. the feels :'(
Loved it while using VS 2010. Uninstalled it when upgraded to VS 2013
It's a well-known cross-platform game engine which uses C# as an option for component scripting. Compiles to basically everything but Linux (Windows, Mac, iPhone, Android, Windows Phone, Xbox, PS4, the list goes on). www.unity3d.com
What MMO if I may know ?
RuneScape.
haha, that's brilliant!
Node.js doesn't do anything for C#. Node.js is a command-line implementation of the JavaScript V8 engine (the same one in the Chrome browser). It let's you run JavaScript outside the browser.
But why? Node isnt better than .net its just cheaper. And you can always use the V8 engine with a .net wrapper and it runs very well.
Absolutely not. Just plug in your WP device via USB, unlock it using your dev account, and deploy whatever you want on it.
Cheaper in what way?
Okay, I'll bite. Like what?
Licensing for tooling and severs when it comes to scaling
Completely new implementation and redesign of a 15yo legacy application done in Delphi. Backend will be done in C# with NHibernate on top of a legacy database (DB design is actually quite good) and Apache Thrift as an interface to the world. First client is angular, bootstrap and all them shenanigans. Additional mobile clients and rich apps are planned in the future. 
Cheaper? You'll sure pay when you need to debug hundreds of anonymous functions in Node!
On the other hand, 340 dependencies makes some of us twitch. That's a ton of interconnected parts that you're writing glue for!
it all works!
&gt; 1. Scalability A moot point. The language of choice and the VM behind it don't determine whether a platform is scalable. &gt; 3. Less config then IIS Possibly the same with Apache or Nginx, and sometimes it can be more. Have you seen some of the Gruntfiles out there? &gt; 4. Runs on more than just Windows So does Mono, Apache, and Nginx. Honestly, I don't like JavaScript. I think the only advantage to Node.js is that it's crazy easy to write almost anything with it. The usual quote is "there's less context switching between the front and backend, so frontend users can work on the backend." To me, that's a scary notion (backend development is entirely different from frontend development), but take that for what it's worth. Node.js also has a large development community and a ton of libraries.
Is that true? I know there are some concept of worker threads, but there's not a 1:1 ratio of worker threads to I/O operations, is there?
Well at some point the hardware handles the I/O, and then interrupts something-rather when it's done. It's been a while since I studied that stuff though.
Yes, of course, but something in your software (on top of the OS) still needs to handle it. It sounds like Windows has a way to ship stuff off to the kernel so you don't need to deal with threads or multiple processes. In Linux, you have to manage your own threads or processes.
Yeah, so I imagine some worker thread (in Windows, I guess) could have multiple sockets or handles or whatever, and, when interrupted, figure out which callback to put back on the event loop. This is a very crude description, sure, but that seems basically how it ought to work.
Well. I live in a small european country. The c# community is small and Microsoft technologies are being only used for line of business software. I have been working for many different companies in different industries and they are all facing the same problems and have similar solutions. Besides that, i have the impression that the fun stuff is being paid worse
If the site is anything like the typical enterprise sites I have seen, $200 is rather high even with all those extras. 
Thank you, you made my weekend. Now I dont have to get drunk with hookers. 
Until it doesn't. ;)
C# and flash, and also unity. Work, making slot games, and card games for promotional sweepstakes, also iPhone android and web. Also used c# asp for revenue reporting sites, 'data pushing services' for servers, and custom server tools ( store has a server and multiple computers, built a c# application to receive wmic commands sent to it remotely and execute them to specific computers on the network (commands like stoping processes, stoping and starting services, and restarting computers) without having to log in to the server via another console app written in c# on our tech supports computers). I use c# mainly
&gt; Possibly the same with Apache or Nginx, and sometimes it can be more. Have you seen some of the Gruntfiles out there? If you're putting node behind IIS, Apache, Nginx, etc. you better have a pretty compelling reason. You almost always write the HTTP server in Node itself. The grunt files are almost never configuring the HTTP server itself. Usually you're configuring things like concatenating scripts, minifying your JS, and watching your filesystem to re-run tests. Grunt files can get out of hand, but luckily there are alternatives - namely Gulp - that are less verbose.
&gt; You almost always write the HTTP server in Node itself. This is a key reason I don't like Node.js for web services. I can live with Nginix running in front of Apache or similar set ups, but running a web-application-as-web-server seems so wrong to me. I wasn't around when websites were written in C, but this can't be too far off from what things were like before CGI existed. I wouldn't put anything in front of Node.js - ever. Regarding the grunt files, I usually see them set up as "headless deployment" scripts. Upload your files somewhere, grunt spins up and downloads things, compiles everything, starts Node.js and your web app, and then monitors Node.js (and your web app). You and I have differing opinions on Gulp and verbosity, but I'll just leave it at that.
Kudos! If you do end up doing this, let me know. I will help. 
You have been able to deploy direct to device since day 1. What the hell are you talking about, you could deploy to winmo 5-6 as well like 10 years ago. 
Well I'm curious what cloud provider has a comparable package for much less money. I'm well aware you could save by hosting it yourself but then you have to have someone to administer it. I'd also point out that deployment is really easy because you can do it all from Visual Studio. I'm thinking more of a Web application than a Web site though (i.e., not consisting mostly of static content). I think a shared "site" instance is fine for the latter.
If we don't loose all good things of Xamarin it would be great! But I am afraid if something became too proprietary, If they abolish Xamarin Studio I would not be able to develop because I will have to use windows. It is just a concern, they can do a good job.
Its in visual studio, the huge dropdown that you would be using for selecting your emulator anyway. Its in the same drop down, it says "device". Also any tutorial will show you how, 15 seconds looking online found more than 5 tutorials make 2 years ago walking though the process.
Video game dev for windows, wp7-8 and xbox.
&gt; I can live with Nginix running in front of Apache or similar set ups, but running a web-application-as-web-server seems so wrong to me. I wasn't around when websites were written in C, but this can't be too far off from what things were like before CGI existed. And that's why frameworks like express.js, koa.js, restify, etc. exist. Would you write a web application with pure C# or do you use a framework like MVC? Node's goal was to provide a low-level API for developers to write upon in the form of small, specific modules (do one thing, and do it well). So yes, it's quite far off from when things were written in C. &gt; I wouldn't put anything in front of Node.js - ever. Good, you shouldn't. &gt; Regarding the grunt files, I usually see them set up as "headless deployment" scripts. Upload your files somewhere, grunt spins up and downloads things, compiles everything, starts Node.js and your web app, and then monitors Node.js (and your web app). I think you might be confusing package.json, Heroku, CI, and gruntfile.js - Grunt doesn't usually "download things". &gt; You and I have differing opinions on Gulp and verbosity, but I'll just leave it at that. I guess you're right, I find the ~100 lines of JavaScript to be way less verbose than the ~500 lines of XML in the Web.config file I use with ASP.NET. ;)
This is the best uow implementation I've seen so far. I modified it a bit for my own project and haven't had any complaints. 
Good thing those black boxes Microsoft provides always work. ;)
It actually doesn't block any threads at all (this is true ~~both of Node and~~ of the native C# async/await IO operations). That's sort of the point of it. There isn't a thread sitting somewhere waiting for IO to come back, it goes all the way down to the hardware level and alerts back when the IO is complete, at which time the main thread can reschedule the event to use the result of that IO. Edit: Balls I might be wrong about node. I thought that when they switched off of libio they dropped the threadpool for io model for the same hardware level interrupts, but that may not be the case.
touché
I never really found a great resource when learning MVVM. I learned mostly by coworkers telling me I was doing it wrong and talking it though with them until I got it. Even now trying to take it a step further with PRISM I find it a tad confusing. Beautiful once it's done, but confusing getting there. My best advice is whenever googling MVVM solutions, trust your instincts. If someone's answer seems convoluted it's probably is wrong. There is a lot of miss information out there. The best two I can suggest are: http://msdn.microsoft.com/en-us/magazine/dd419663.aspx and http://compositewpf.codeplex.com/
Go with the second pattern. The first one is VERY bad. Imagine you later crete a class that extends potion, now that if statement will return false even though logically it is true. 
I'm in unfortunate position where I'm a one-man development team for my organization, so I rely on internet resources to learn. My community college didn't teach C# and I highly doubt my university will. That MSDN link actually looks very promising, I can't believe I didn't come across it before. Thank you.
Be warned, PRISM will make you scratch your head. It isn't really a first step, but I think it is a great end goal.
You may be correct about Node on Windows (I don't really know much about threading in Windows to say one way or the other). I believe it's threads all the way down on Linux.
It's that I don't want my web *server* and web *application* to be the same software, the same thread, or the same process. With node, if a single task from any web request, or a memory fault happens, or something just happens to slow down for some reason, then my entire web server is affected. Second point, I don't want my webserver-and-webapp to now be my webserver-and-webapp-and-buildsystem-and-deployment-system.
I just want to get it. If I have to invest the next month or two into actually being able to reproduce the effect, then so be it. ;) I find a lot of issues in my WPF dealings that could be solved if I knew MVVM, so this investment would have a great return value.
&gt; It's that I don't want my web server and web application to be the same software, the same thread, or the same process. With node, if a single task from any web request, or a memory fault happens, or something just happens to slow down for some reason, then my entire web server is affected. Okay, so with .NET, if a single task from any web request, or a memory fault happens, or something just happens to slow down for some reason, then my entire web application is affected. To the user, it's all the same. &gt; Second point, I don't want my webserver-and-webapp to now be my webserver-and-webapp-and-buildsystem-and-deployment-system. It's not? Grunt != Node != The HTTP module. Just because they're all written in JavaScript doesn't mean they're the same thing. 
Developing on node is very quick and its asynchronous-first model is great for IO bound problems. Having one language on both the backend and frontend is cognitively nice too. Don't miss TypeScript either if you're going to be developing in a team. Since I've learnt to node I left a lot of c# behind. I still turn to c# when algorithmic complexity rises and/or when I'm looking at compute-bound problems - but almost always is it now "in conjunction with" node. 
If/when you want to use the two on the same project, consider the following... 1. Use a queue 2. Use http://tjanczuk.github.io/edge/#/
I feel like you're stuck on the 'single thread' thing. Are you aware of Node.js Cluster?
I am now. I am only stuck on the "single thread" thing because that's been most of the hype surrounding Node.js. Now, if we want to talk multiple processes, why would I choose Node.js as my webserver of choice? After considering that, this still ties your web server and your web application together.
&gt; one-man development team Exactly my issue. No one to bounce code off of and have them tell me, "no, dummy; do it *this* way!"
It's definitely confusing. From what I've seen MVVM is really no different than MVC.
My friend made a MVVM series [(first video)](https://www.youtube.com/watch?v=EpGvqVtSYjs) and has gotten quite a bit of positive feedback. 
I actually watched some of them... he has a clear way of explaining things; however, I stopped watching them after he mentioned that he had no idea what the second pattern was about. It appears that there are two patterns and he didn't know one of them... it made me wonder about credibility. Once I start wondering about credibility, I tend not to listen. I'll have to revisit that video series again with a grain of salt.
I don't know much about MVC pattern either.
It is different. Here is the difference: in MVC the controller mediates between the model and the view, and it does that by directly interacting with the view. That is, the controller has a reference to the view and directly makes it do stuff. In MVVM the view model does not have a reference to the view, and can only interact with it indirectly via bindings, events, and commands. The view model doesn't know what the view is or even if there is one. In fact, there could be multiple. In both paradigms the model is decoupled from the view, view model, and controller, but in MVVM the view model is also decoupled from the view. If you do it right then you should be able to entirely replace the view without changing any code in the view model or model. You can even share the same view model and model with different platforms because it doesn't care what the view looks like or how it was built. MVC doesn't work like that because the controller knows all about the view, and therefore it is tightly coupled to the view. 
If I interpret OP's question with a bit of liberty, Node.js is having an influence on ASP.Net. OWIN is partially influenced by Node.js so hosting ASP.Net applications in any process independently from IIS, is slowly becoming a reality. Right now, thanks to OWIN you can host ASP.Net Web API on any process similar to Node.js. When Helios lands, we'll be able to do the same with ASP.Net MVC.
MVVM is pretty simple: it's just an architectural pattern used to separate your application into layers (view, view model, model) in order to (among other things): * ensure proper separation of concerns * avoid business logic in the code-behind of the view * allow for easy unit testing In terms of implementing the pattern using WPF, **you should use an MVVM framework** that will handle all the boilerplate binding and notification code for you (the frameworks usually also provide other useful features such as IoC containers, window management, message/event services, etc). When I first got started with WPF and MVVM, I used [**MVVM Light**](https://mvvmlight.codeplex.com/) which works pretty well, has lots of resources, and is easy to get started with (documentation is a little scattered though). You could also check out [Caliburn.Micro](http://www.caliburnproject.org/) although I'm not sure I'd recommend it for someone new to MVVM since its philosophy is convention over configuration which can hide a lot of the stuff you need to know when first starting. _____________ After you've got a framework, just build a simple test application to get used to the binding conventions (property/command/etc), creating view models, designing with XAML, etc. ________ Example project: https://apuntanotas.codeplex.com/ Stackoverflow thread: http://stackoverflow.com/questions/1405739/mvvm-tutorial-from-start-to-finish MVVM Light documentation: http://www.galasoft.ch/mvvm/doc/ I quickly put together a really simply project to demonstrate some of MVVM Light's basic features (requires NuGet v2.7 or newer to build): https://dl.dropboxusercontent.com/u/16879946/MvvmLightStarterProject.zip 
Wow thanks for the advice! I actually already made a 'hello world' program. Also some other basic stuff with tutorials. But I don't what you mean with find a project. (Maybe because my poor English). Do have any suggestions for a project? I'm empty at the moment.
Some [resources](http://www.codeproject.com/Articles/724245/But-How-Do-I-Learn-ASP-NET) to help you. ASP.NET is just a platform on which you build and C# is the code behind it.
Nice, thanks!
Learn the syntax, datatypes, structure of a program and usage of Collections. That should keep you busy for a good while. Once you know the basics, start making small examples, like a random number generator. You can then expand it to a random password generator and create a WPF application that saves it to database for example. Use MS-documentation. It's fantastic!
Ok thanks.
What about a program that lets you input a number, and it tells you if it is a prime number or not. A primality test.
That link : http://msdn.microsoft.com/en-us/magazine/dd419663.aspx is the best ressource I ever found about MVVM for WPF. It took me a while to really understand how it worked but the code in the example is the best example I found. But the learning curve is pretty steep. On a slightly unrelated note, I really regret that MS dropped that clean MVVM for the impaired one in Windows 8 apps. 
Good idea.
IMO, the best way to do this sort of wiring is to add a data source, and drag and drop the control onto the form. If nothing else, it will show you how all of the components work together. Go to the Data Sources window (View =&gt; Other Windows =&gt; Data Sources in VS 2013 / Data =&gt; View Data Sources in VS 2010 ... ) Then add a new datasource (use your DB), and then you can drag the dataGridView onto the form, and / or the individual components for individual fields. Then all you have to do is provide the BindingSource (created when you add your first control) with a .DataSource (the DataSet).
As far as I know node.js being single threaded is more of a design decision rather than anything else.
Thank you!
Then you can try solving some of the [Project Euler](https://projecteuler.net/problems) problems. After that you could try building something simple that works with a database, like an address book or a recipe catalogue. You could try building it in WPF first, since WPF is closer to the Windows Phone UI than WinForms.
The asp.net site resources are very good too, like [this for MVC](http://www.asp.net/mvc) or [this for Web API](http://www.asp.net/web-api).
I learned from Learning C# 3.0 and it was really good. It's written for someone like you with very little programming experience and it will hold your hand through different object-oriented concepts and so on. That said, it's a bit out of date (in particular, the last chapters talk about using Linq to SQL and Winforms, which have pretty much been abandoned in favor of newer stuff). I still think it's good enough to make it worth reading, even with the caveat that you're going to want to read some more current stuff afterward to catch up on the newer libraries and C# features.
Do you have Steam?
This is a good starting point since it's very simple, but the danger that you run into if you do down this path (with say, Project Euler) is that you're going to be learning Mathematics using the language as a tool rather than simply learning the language. You'll learn plenty by doing Project Euler-esque problems, but is a Project Euler problem ever going to make you think "I need to learn about abstract classes and inheritance"? Or "I should use those Lambda things I have no idea about to solve this, and that LINQ thing too"? Unless something else is pushing you to look for those aspects of the language, you're not really going to learn the language in much depth by solving those problems. A pretty good list of ideas for projects can be found [here](https://github.com/karan/Projects). It's not specific to any language (though sometimes includes some Python soloutions), it's just a list of things you can make that will actually have you learn new aspects of what language you're using (e.g. Threading, databases, GUIs, net code, etc.). A lot of it may be too advanced for a complete beginner, but there are plenty of nice beginner projects too (see probably the "Text" section).
Thanks for the reply. I have the dataset and datagribview on the form, I'm trying to manipulate the datagrid using other controls on the same form. 
I'm currently learning with [this book](http://shop.oreilly.com/product/0636920027812.do) and it's been really fun and engaging. They have you actually do lots of coding and exercises throughout to keep the new concepts you've learned in your mind while you build on them. I'm just starting the last lab in the book now which is to build a Space Invaders game clone for windows store. Fun stuff!
Yes, why?
Nice, thanks!
Thank you!
Upvoted you as Xamarin was the other option given our current position. Our app is quite performance sensitive (requires stutter free animation) and this did not seem to be happening with Xamarin on our codebase. Numerous parts of GDI+ we rely on were unavailable in Xamarin. The amount of work we would have to do to get a three way cross platform build working was enormous, we use many assemblies not in the [Xamarin support list](http://docs.xamarin.com/guides/ios/under_the_hood/assemblies/) and a in a couple of cases use features that are unavailable in Xamarin's implementation due to them violating the Apple store guidelines. We were already considering a switch to OpenGL to give us shaders, LibGDX abstracts the differences between OpenGL and OpenGL ES on mobile platforms for us, so taking the LibGDX + Java route seemed the path of least resistance combined with a decent open source non-commerical build environment. Many of the points mentioned in [this post](http://www.whitneyland.com/2013/05/why-i-dont-recommend-xamarin-for-mobile-development.html) also do seem to be the case, we think we can share a lot more code on LibGDX. Xamarin's support does seem very good, as you would expect from a commercial product that now has very close ties with Microsoft and may get even closer given [current rumours regarding acquisition](http://www.zdnet.com/is-microsoft-about-to-buy-xamarin-7000027434/) The C# build is also not really optimal for being the mobile runtime, it includes masses of editor code which fragments a part of the code that could be much faster and monolithic on a non-editor runtime version, so we would end up maintaining two versions of the render code anyway. We'll see how it goes over the next few weeks! 
A studen management system with SQL server, EF, MVC, Bootstrap, &amp; jQuery
It's an important design decision. Aside from making more efficient use of threads, it also means that you don't have to lock data in memory ever, which is another operation that is very costly.
I wouldn't suggest the text book route. You will lose interest. Definitely take the suggestion of coming up with a project idea and work through that. Every challenge you encounter you can find help with online. Also, try Pluralsight if you're really serious.
You can add me if you like: hl2mukkel :&gt;
You've just described the c# "async" keyword that does this exact thing, but gives you better control over it.
I do understand how Node works. I use it every day. It's not a bad or good thing. It's something I don't like about the culture of Node. Clicking Publish in VS depends on your project. You can push to Git, and Git will handle your deployment. You can send your code off to a build server, which can then deploy to a web server. You can build locally and then send to a web server. The difference is that you have separate services each responsible for one step in the deployment process.
Try this program: make a transparent clock where the user can change the color and date/time format. It will help you learn about a few different controls as well as familiarizing yourself with properties.
[PluralSight](http://www.pluralsight.com) It's $30/month, but worth the investment if you want to be serious about development. I wish I had heard of it sooner since I learn by following examples rather than reading textbooks. Web applications are a pretty good starting point if you want a project that you can show off. They're easy to deploy since you just load them to a server and you can extend your skills into HTML, JavaScript, ASP.NET Web Forms or MVC. If you're a gamer, you could try to make a web app for your favorite game. A good example is [Warframe Trading](http://wftrading.net/), where players can create an account and post their sale/buy prices for in-game trades and serves as a way for players to easily get a price check on rare items they might want. By doing something like this, you learn how to use Membership systems (SimpleMembership, OAUTH), working with databases (MS SQL Server, T-SQL, ADO.NET/Entity Framework), writing queries to that data (T-SQL, LINQ). You can then branch out in refining your project in the front-end with libraries like jQuery and Bootstrap and spruce up your HTML-writing skills. Basically, what I am saying is that you don't just learn C#. The syntax shouldn't take more than a week or two to learn with exception of some more arcane techniques. You have to learn all the associated frameworks and libraries and see what their capabilities are. Entity and LINQ are good starts.
On the lambda thing: I wanted to make a prime number finder faster and faster, so I kept learning things, then [boom](https://bitbucket.org/SubConcussive/project-euler-repo/src/7dc04e3855ca29aef61b1b692bf2bc8bc0149050/Project%20Euler%20Q041/Primes.cs?at=default) lambda.
I absolutely recommend Bob Tabor's videos too. Having watched that series on Channel 9 I bought a subscription on his site. He explains clearly, at the right pace and has a very watchable style - neither dull nor goofy as some presenters can be.
Yup, but this isn't a language war. C# is awesome. Node is awesome. To the original question, however, I don't think they're awesome together... unless maybe a client is written in one and a server is written in another.
Wow thanks for the info! Im not able to pay $30 a month though.
Thanks.
Ok,thank you!
Ok, thank you!
Hmm, for some odd reason it's not loading for me. I've never had problems with channel 9 before and their other videos are working for me right now. Strange. Normally I would download some of them, but this one gives me 404 error. I sent them an email to see if they know what's up.
I actually ditched Win8 and switched back to 7 prior to diving into WPF. How is it different on 8?
Wow, thanks for the information. I really gonna check it out!
In addition to all of the helpful replies, I would also recommend spending some time to learn about computer science and programming in general.
Ok, thanks!
Added you
Well, they got back to me quickly. Looks like the only that works it hat MP4 high quality link. It's almost 1GB, but with my 100 Mbps it's not a big deal.
As an aside, I'm just going to toss this out there.... why not learn something easier like Python if you're doing it on your own? It'll give you the bases for programming. Basically, you'll learn everything you need about dictionaries, libraries, lists, nodes, classes, types, you name it. You can then carry that experience into other languages. It's just a friendlier language. Don't get me wrong, I love C#, but it could be a bit more intimidating to a new comer... To each is own.
Ok, thanks!
Ok thanks.
It's not quite clear [to me] what you're trying to accomplish. 1. When you click one of the buttons do you want the selected row to go to the next row, or what? 2. If you want to filter the dataset, why not have a BindingList&lt;T&gt; that the DataGridView is bound to, and as the text changes in the textbox, just update that BindingList, and the DataGridView will match the items in that list. I may not be understanding correctly..
Wow, I had some good wtf moments going trough the class. A review in case you're interested: * Why do you have those weird parameter names? * You can't allocate a list with more elements than `int.MaxValue()`, using `Int64` doesn't give you an advantage, just use `int` * Why are you taking a `Int64`, parse it to double, round it and increment it? `return Math.Sqrt(n)` would be sufficient for the upper bound * The default of int is 0, there is no need to initialize your array in the `get_amount` method. What's it for anyways, you don't use it. * #19 and `cnslFunc`? What for? * If you use `int`, the initial list can be created with `var pc = Enumerable.Range(2, total).ToList();` * Why are you using static methods for all but the last one? Your whole class can be replaced by this: class Primes { static public List&lt;int&gt; CalcPrimes(int n){ int cur=0; var list = Enumerable.Range(2, n).ToList(); var max = Math.Sqrt(n); while(cur &lt;= max) { cur = list.First(i =&gt; i &gt; cur); list.RemoveAll(i =&gt; i != cur &amp;&amp; i % cur == 0); } return list; } } But that would be very very slow and memory intensive for larger primes. A great almost one-liner: public List&lt;int&gt; GeneratePrimes(int n) { var r = from i in Enumerable.Range(2, n - 1).AsParallel() where Enumerable.Range(2, (int)Math.Sqrt(i)).All(j =&gt; i % j != 0) select i; return r.ToList(); } This one for example is a much faster method and able to deal with much bigger numbers: public static IEnumerable&lt;long&gt; Primes(this long number) { long sievebound = (number - 1) / 2; // last index of sieve bool[] sieve = new bool[sievebound + 1]; int crosslimit = (int)((Math.Sqrt(number) - 1) / 2); for (int i = 1; i &lt;= crosslimit; i++) { if (!sieve[i]) // 2*i+1 is prime, mark multiples { for (int j = 2 * i * (i + 1); j &lt;= sievebound; j += 2 * i + 1) sieve[j] = true; } } yield return 2; for (int i = 1; i &lt; sievebound; i++) { if (!sieve[i]) yield return 2 * i + 1; } }
Oh, man. Thanks for actually looking at it :) that made my day! I've been working on making my code actually readable (even if just to me, it would be a step up), and looking (actually looking) at this code is an eye opener. So, to answer your (rhetorical) questions: * cnslFunc was from before I refactored it, it was REALLY bad. But I got tired of resetting the console position. * I don't remember what I used get_Amount() for :/ hmmm, I have a lot of worthless functions leftover. * I Googled and looked for the Enumerable.range thing, didn't find it. Thanks! * Because square roots are scary (I'm actually just really lazy at math sometimes) * I didn't know that ints defaulted to 0. Oh! And the weird method parameters and because I was coding too fast for my own good, and didn't really know all that much about best practice. [Also, you are way better than me at prime generation](http://www.reddit.com/r/Python/comments/20x61y/share_the_code_youre_most_proud_of/cg8by2a)
If he replies i'll hit you up.
I wish I could download your brain, good stuff
http://www.codeproject.com/Articles/634146/Background-Thread-Let-me-count-the-ways My preferred method is ThreadPool.QueueUserWorkItem then throwing lambdas in it to execute code, and get back to the UI thread. Let me know if you need some code samples. Also, be careful playing around in different threads, because CrossThreadExceptions are real fun to diagnose and fix.
Free: http://www.microsoftvirtualacademy.com/#?fbid=hQsBLcEeXmy Not free: http://www.pluralsight.com/training/Courses 
Thanks for your comment! I watched the Dependency Injection and Inversion of control, and it was pretty helpful. I'm already sort of doing dependency injection with the MVP design pattern that I'm familiar with. The inversion of Control is a new thing. I guess when I need to use it, I'll know that I'll need to use it. Thanks!
I think you are doing too much with Ninject. Just inject services through the constructor. You shouldn't use it to build up state.
Version 4 of state.cs released; available here https://github.com/steelbreeze/state.cs or here http://state.codeplex.com
for the backend, have you looked at Azure's Mobile Services? It is MUCH more lightweight for common scenarios than MVC/EF... I'm talking about hours of work instead of days. It's based on node.js with some nice integration with capabilities such as push notifications (APNS/WNS/Google'sShit) and an ORM model over Azure storage
The primary difference between DataSet and DataReader is how they are consumed. One can make a distinction between a 'connected model' or a 'disconnected model'. The DataSet essentially creates a local cache of some part of your database, which can then be read/modified/updated locally, and changes can be pushed in batches. Hence 'disconnected'. On the other hand, DataReaders are optimised for 'read-once' data, where it's assumed you'll consume the full result at once and then close the connection. It doesn't attempt to provide a 'local copy' abstraction, so any changes to your state must be pushed to your database as a new transaction. Hence all the work is done while 'connected' to your database. DataSets can be useful if you're writing a thick desktop client that connects to your database, and needs to keep data around for a long time. On the other hand, for server applications that always need to have fresh data, and usually only need particular results for a single request, the DataReader will be more efficient as there's less algorithmic/memory overhead.
msdn, StackOverflow &amp; reddit 
Thank you for the detailed answer! This answered exactly what I needed to know. 
Neat!
Duckduckgo
I started learning c# in January and I also started on a project which just a login that turned into about a 40 hours project sofar and im only 2/3 done.
Definitely StackOverflow. I think you'll end up finding that most of the useful answers that you Google will come from there. 
What did they remove?
I ended up watching the three videos again and... while my code works (I followed along), some of his explanations were fairly vague and techniques were not something that would be done at the final production stage. I don't know... it just wasn't for me. I still feel like I wouldn't be able to recreate some of the commands concepts on my own.
I hear they have this thing called the Google on computers these days... 
I'm looking at the state type pieces now. I was thinking about moving the Grid initialization stuff to the Grid class. However, I wasn't crazy about doing it in the constructor since I require the size to know how big to make it. I guess the "right" answer is to make a factory that takes a size and returns an initialized grid. I could hook up Ninject to use the factory method. Next is the GameStatusConditions...I could do something similar and create a factory for them, and use Ninject to hook it up. That leaves us with the Players, I think that's a valid use of Ninject as the client could potentially decide on other player strategy's rather than Human v Human. Thanks for the feedback!
wow, that's allot of work.
DI is a specific technique in the larger concept of IoC, but practically speaking, if you're doing DI, you're likely doing the IoC you're trying to do. I'm sure this will upset some people, but I'd avoid reading anything Martin Fowler (a lot of people recommend him) has written about either topic at this point - his explanations will confuse the crap out of you if you're still trying to get your head around the basic concepts. Learn to use DI and understand its benefits, then go read his stuff if you want to. 
I agree that Pluralsight is a good place to learn about a variety of topics. I'd disagree that any company that won't buy you a subscription isn't a company worth working for. Corporate subscriptions start at $299 per user per year. It's a nice resource though and if you can afford $49/mo (even for a few months), I'd go with the higher subscription level because you can download the source code that goes along with the video.
Looks good. Any way to remove the dependency on WinForms?
&gt; Dispose() Good advice.
Bears indeed.
Just this week I implemented IDisposable on a class (inherited it from a guy no longer with the company) and got a ~7x speedup in web page rendering time (it had lots of instances in a grid). Code Analysis is your friend. 
It looks like WinForms is only used as a means to get messages. It would be pretty easy to drop the dependency, but you would just be replacing it with winapi calls, so I'm not sure what the point is.
It'd be cleaner for WPF apps... I'm a bit obsessed with reducing the number of dependencies :-)
tell me more about this mystery
Please wrap them in using statements instead. It will automatically handle the Dispose call even if there's an exception thrown.
I write Add-On software for SAP Business one using their API. It's C# code but their conventions are goofy.
SAP Crystal reports are horrid.
Run Code Analysis - look for CA1063 messages. But then -- how do you properly dispose of managed &amp; unmanaged resources and make this alert go away? Look at the bottom part of this: http://msdn.microsoft.com/en-us/library/system.idisposable(v=vs.110).aspx And then run Code Analysis again. What you may find is that the recommendations "bubble up" in your call stack, and that's ok. Eventually you'll stop getting those alerts, and that'll be a good thing. :) 
Visual Studio has a macro capability. You can tell it to run your program off a network share. 
Thanks! Can't believe I've learned something valuable from casually redditing today.
Embed your exe as a resource, extract the resource and write all the bytes to a new file. Execute it via Process and wait for it to end. 
You're right. 2010 was the last version with them. Which... goes to show how often I used them.
I think you forgot to year and fullname.
I have a utility library that's open source: https://www.nuget.org/packages/CraigsUtilityLibrary/3.4.90. That contains most of the lower level stuff (extension methods, etc). But most of the apps I haven't put out there. That said I'm rewriting one of them now, cleaning it up, etc. and going to put it on Github. It's basically a web application that lets you build web applications... Not sure how much interest there will be with it but whatever.
Looks good. Honest question, why didnt you deploy it to Android if you are working with unity (and i understand it's very easy to deploy multipatform)? Windows phone it's kind of a tiny market. Also I'd love to play it!
Should note that the quality of the sourcecode greatly varies by author. I get highly annoyed when the authors don't put in multiple projects with the state of the code after video X. Getting only the finished product makes it harder to follow what is going on.
I figured it out using System; using System.Collections.Generic; using System.Linq; using System.Text; namespace ConsoleApplication1 { class Program { static void Main(string[] args) { float originalfdegrees = 0; //Asks user for temperature Console.Write("Enter temperature (originalfdegrees): "); originalfdegrees = float.Parse(Console.ReadLine()); //calculate far to cel float Outputtemp1 = originalfdegrees - 32; float Outputtemp2 = Outputtemp1 / 9; float Outputtemp3 = Outputtemp2 * 5; //display calculated cel to user Console.WriteLine(Outputtemp3); } } } I don't know if there was a shorter way to calculate this, but it works
First things first. When you are asking for help, especially in the "technical" world, "it is not working" is not a proper description of the issue. Describe your problem, what you did, what you tried and how it is not working. For example "When converting 150°F to °C, I get 135°C instead of 65.56°C". Just by writing this down, it should make you thing "oh wait, is my formula correct ?" and look at it again. I just checked on google, and it is not correct actually : (°F - 32) x 5/9 = °C. See any differences with yours ? That's your issue. On a side note, your first line "float originalfdegrees = 0 - 3000;" sets the value of originalfdegrees to -3000f but you don't use it afterwards.
Just for future reference - this subreddit tends to be more for C# discussion than help. You should use www.stackoverflow.com for further questions, they're really good there.
Yea, for some reason I was thinking that I was setting the range that a person could enter by putting in "0 - 3000" as in, put anywhere from 0 to 3000 into the app. I later changed it to just 0 However I did leave a comment on here, I did figure out how to make it do what it's supposed to. Albeit I don't know if I wrote it in the most efficient way. Thanks for your comment edit:Realized that I could simply write float originalftemp; Without assigning a value to it at all. I didn't know this, lol.
In other news, it's not a good idea to use floats. Double is quite good enough here, and you won't lose accuracy the same way you do with floats. As an exercise, now you've figured out how to convert Fahrenheit to Celsius, convert it back again, as a float. Sooner or later, for a moderately interesting input, you will find your output has become minutely different to what you'd expect. tl;dr floats are a pain; avoid.
Wouldn't that be: float Outputtemp = (originalfdegrees - 32) * 5 / 9; ? Brackets work in programming the same way as in math. First subtract 32 from the input, then multiply by 5, then devide by 9 Just like /u/zebishop said. Although this conflicts with your order above.
Try it this time - so you don't have to have three variables for one input number. 
BIDMAS. The order of precedence for operations. http://www.bbc.co.uk/bitesize/ks3/maths/number/order_operation/revision/2/
FYI, you need to change this a little bit for accuracy. You have a problem known as 'Integer Division'. An example. Open up a new console app and try this: float f = 1 / 2; Console.WriteLine(f); Note the output is not what you would expect? To fix this you need to qualift your numbers as floats (As they are currently integers) like this: float f = 1f / 2f;
&gt; But, Datasets consume more memory, and you have to remember to Dispose() them. There's no reason to call `Dispose` an a `DataSet`. A `DataSet` does not use any unmanaged ressources nor does it do anything (usefull) in its `Dispose` method.
This helps, thanks!
Protip: Double is a float with"double" the precision. It still has precision problems.
Meh, why no video of presentation? :(
Dispose is also used to clean up managed resources. Implementing IDisposable on managed resources (when there's a need) lessens the memory pressure on the system because the GC can find out sooner when to release the memory. 
This is pretty sweet!
Cool project to work on, but how is this different than [Debugger Canvas](http://visualstudiogallery.msdn.microsoft.com/4a979842-b9aa-4adf-bfef-83bd428a0acb)? Also see some other related projects: [Code Canvas vs. Code Bubbles vs. Debugger Canvas](http://blogs.msdn.com/b/kaelr/archive/2012/03/10/code-canvas-vs-code-bubbles-vs-debugger-canvas.aspx) 
Sorry, no videos are recorded at DevDay, but I'll be giving this talk about in Ann Arbor in May (http://www.aadnd.org/)
Debugger Canvas doesn't let you explore code while editing. It's intended for debugging only. Also, it only supports Visual Studio 2010 and is no longer under active development.
How do I give you my money?
Hahaha, you can sign up for updates at http://codeconnect.io and hopefully soon we'll be able to make your dream come true.
I've always had a vision of a future IDE, and this is a step toward that. I know this is going to sound odd on the face, but eventually it would be great for these windows to be in sort of 3D space. Now hear me out. I think in 3D space you have the opportunity to group code in a way that it relates, both in layers that are defined, and in logical groups. You can look at it as a 3D map much like the human body is broken down into organs, but if you zoom out enough, you can understand how all the pieces work with each other. You have made a great tool, and I am a customer when you start taking orders! One small suggestion is to highlight/differentiate a recursion window.
Gah. I'll be impatiently waiting. Also if you're looking for more dev help, sign me up. ;)
We've done a lot of thinking about exactly the problem and solution you've posed. We've even considered what a 3D experience within an Oculus Rift might provide. I haven't got my hands on one yet, but I believe the current resolution is too small for extended work with text. However, I imagine problems like that will be fixed in the future and it's an idea worth exploring. It's definitely an interesting problem to think about. Thanks for your support!
Very cool. Similar to the StackSplorer academic prototype: http://softvis.wordpress.com/2011/11/25/stacksplorer-call-graph-navigation/ 
signed up for updates. this looks neat, would be useful for someone joining a large project.
What Permit said, plus we are investing heavily in user experience. Other projects you've mentioned were technologically advanced, but not quite usable: for example, they required a lot of mouse dragging. We are striving to lay code out on the screen in the best way possible and then offer simple but powerful keyboard navigation.
Except don't. All that will do is subtract 17.777 (i.e. 32*5/9) from your original number. Read other comments about operator precedence and overriding them using parenthesis.
Currently, I'm working on developing a Hospital Information System. Using C# and WPF. Currently using SQL Azure for DB but I'm in the middle of moving everything over to SQL Server 2012 Developer Edition. Some of the features within the HIS that I'll be including haven't been done in the healthcare technology realm, so I'm super excited about it! 
The fact that you recognize a few gaps and want to improve is HUGE. I'd hire you over someone with a bunch of acronyms any day. Reminds me of a great tweet I saw recently: "It's harder to find someone who cares than it is to find someone who codes." https://twitter.com/carlsmith/status/444498321852616705
Now I'm feeling greedy and want this in the few Java projects I play around with! Awesome!
I can't see any point to this post other than to promote your blog. And you're not even providing any information on the blog either - just thanking people for attending a presentation. 
Can this plugin highlight the window of the function that is currently in scope while the code is running? That would be an awesome feature that really would show the flow of the living, breathing code.
How does this work with generics? If I call a method on a interface will it show all the classes that implement that method?
Math.abs() is the issue, since it makes the negatives to positive values. So the above values are equal to values below. Remove Math.Abs() and you should be fine. That however leads to the fact that if you insert a value lower then densitet[0] you will get the result of double.PositiveInfinity and you will need to handle that.
Yeah, as it can't figure out which implementation will be called at runtime as you edit, it simply shows all implementations of the method.
We've considered integrating with Visual Studio's debugger in a number of different ways. One way would be to simulate Visual Studio's debugging experience within our plugin, highlighting the window as each line is executed. We haven't worked on it to a point where we can show anything off, though. 
I'm also interested in how it works with interfaces. There's so much going on with TDD that it would be almost impossible not to have some way of doing this. On one hand it would be cool to see all of the implementations of an interface. On the other hand, if you have more than a few, it might be too much to display on screen.
Does it work with other plugins, like ReSharper?
Yes it does. We've tested with VsVim and ReSharper to make sure you don't have to give up any of the benefits you already have in Visual Studio. Going forward we'll continue to test against more and more plugins.
A zip file? really?
This is awesome! Looking forward to using this :)
&gt; We've tested this with VsVim Huzzah! I just signed up for more info. Can't wait to take it for a test drive.
Any reasonably complex project could have *a lot* of generics implementations. I would suggest you consider a sort of colapsed window view if there are more than say 5 children so it doesn't explode.
https://www.youtube.com/watch?v=SoxGazX_kkw
What is the expected price point?
We expect it to be comparable to Resharper and other Visual Studio extensions. We'll likely have different tiers for personal vs. commercial use. Nothing is set in stone, though.
That's exactly what I was wondering about, thanks! You have a really interesting project on your hands.
No, it will not. / and * have a higher precedence than -, so they'll be calculated first. See here: http://msdn.microsoft.com/en-us/library/aa691323(v=vs.71).aspx / and * have the same precedence, so their order will not be changd. Also it stays, 32\*5/9 or 32/9\*5 is an **integer calculcation**, so the result will never be 17.777. It will be 15.
Identity overall is a very good improvement over previous membership frameworks. It kind of removes the black box of those previous systems, and replaces it with a well put together toolset for manipulating user information and lets you do the rest using linq and entity framework.
I believe that could result in a NullReferenceException if `sender` isn't a Textbox.
That is true however OP stated that he had 15 diffrent textboxes and I am a lazy programmer ;-) 
A better way to handle it would be this: Textbox tb = sender as Textbox; if(tb == null) return; var text = tb.Text; // Other stuff It's only a couple extra lines, and you won't get a NullReferenceException unless `null` is passed in as an argument. 
If I may make a suggestion, and I will make it clear my viewpoint - I'm the type that only ever dabbles in code. This tool looks really good, even for creating code. If you license it free for personal use, paid for commercial use you'll do well - and it will grow in reputation more quickly. People will become addicted to it, (imagine a novice programmer who doesn't know how to code without it) and wont be able to do their job without it - Big enterprise will gladly pony up for it. This is pretty much the same approach Microsoft use with DreamSpark, and it seems to work well for them.
&gt; we are investing heavily in user experience Then you should take more from Code Bubbles.
0. asp.net mvc 1. html5 boilerplate 2. (Twitter) Bootstrap 3. html5shim 4. caniuse.com 5. LESS 6. SASS 7. JSBin 8. JSFiddle 9. MV* Frameworks 10. Modularized JavaScipt 11. JSLint 12. JSHint 13. CoffeeScript 14. TypeScript 15. Underscore.js (and now Lowdash) 16. Moment.js 17. Productivity Power Tools 18. Web Essentials 19. NuGet 20. EF Reverse POCO Generator 21. Indent Guides 22. GhostDoc 23. Resharper 24. OzCode 25. Fiddler 26. Postman 27. Visual Studio’s Unit Test Projects 28. smtp4dev 29. BeyondCompare 30. LinqPad
I would go with the first method. Because it uses less vertical space. If the IF statement or function call are too large and have to be spaced out over multiple lines, I would choose the second method. I only ever used method three if I have to make multiple if statements in a row where each IF statement is the same length to make it look better.
Yes it was.
I would caution you to always use braces, even for the little things. Even professionals make mistakes when not using braces. The Apple SSL vulnerability is such a case. Edit: If vertical space is an issue, you can do this instead and see how you like it: if(myBool) { Foo(); }
The danger of if without braces is coming in and trying to add more to the if body and forgetting to add the braces. That would mean that only the first statement would be executed conditionally and the rest would always be executed. I personally would take safety and being explicit over looking good. However there is a compromise, why not do: if(myBool) { Foo(); } It is the best of both worlds. It is a one liner but it also protects you in the future when you (or somebody else) wants to add on. 
I came to post this exactly. The braces don't cost you anything, use them to protect yourself down the line. If vertical space is **really** an issue, there's this too: `if(myBool) {Foo();}`
Mixing brace style is just as bad (i.e. sometimes same-line, sometimes next line). To me, "really hate the look of" is a weak excuse to start messing around with your syntax consistency.
I think "hate the look of" isn't really a good reason. I've been doing this for close to 20 years and I've learned to use the braces. Quite often when you have that situation, what you can do is turn the whole thing around. I keep seeing things like: Foo Barbazmaticate(Bar babar) { if (babar != null) { ... } return null; } What you should do in these cases instead is do if (babar == null) return null; 
I've been suggested that a lot from ReSharper, but I've been told that jump code is not good, but also been told that it's not that important a guideline as long as goto is avoided. Thoughts?
Exactly this is the reason why that is **extremely bad style**.
Use StyleCop. You'll soon "really hate the look" of the squiggly lines under badly formatted code.
Or if you would need to fill a field based on a statement you could do like: var v = mybool ? Foo() : NotFoo();
I'd rather just use a 'Guard' Guard.ArgumentNotNull(babar, "babar"); Put null into something to return null. Seems rather pointless to me.
Consider it as externalized check for null. Instead of shitting all over the code with checking if it's null before calling the function, you let the one that actually knows if something could be done. Nulls rarely come alone. Guard throws exception, that changes behaviour.
sound advice!
Good on you and your team. Making complicated doo-hicky is a waste of time that leads to nothing for many projects there. Software tools like this are truly useful and have greater potential. Hope you make a modest business with this idea (best case, get bought out by the MS Visual Studios department).
Yes I know its an externalized check for null thats exactly WHY I use the guard. If an external party sends me a null and I don't agree with it, let them know. Thus: ArgumentNullException. That does not change behavior at all, clear communication back across the line "Oh I put a null in here while I shouldn't" Thats how I want the behavior to be. You could naturally agree on returning nulls, that would either mean you somewhere down the line get a nullreference exception OR always check everything for null. And if you always check everything for null, you'd be writing an essay on nullchecks alone. Just to prevent technical errors. If something is null when it never ever should be null, but you still do the null check to not get the exception, how would you properly know it didn't crack? Log it? Check for null and still throw an exception if its null? You don't always want to prevent an exception, its not inherentily bad. 
Always always always always use curly braces and put them on their own line for if, else, while, for, foreach, using, etc. If you think that looks ugly, consider refactoring your code to avoid them. Use conditional operators for assignments and LINQ for collection reads. If your code really needs an operator that can use braces then it likely should use braces as well.
Or if somebody decides to brace it up without recognizing what the statement really does: if (myBool) Foo(); { Bar(); } Syntactically valid, yet doesn't do what it looks like it should at first glance.
Braceless `if`s are fine, just don't put the statement on the next line, creating the illusion of braces where there are none. 
Don't do it, it just leads to so many problems if people aren't paying attention. See Apple: http://www.cnet.com/news/apple-finally-fixes-gotofail-os-x-security-hole/ Also, you can really shoot yourself in the foot in languages like C. https://www.securecoding.cert.org/confluence/display/seccode/PRE10-C.+Wrap+multistatement+macros+in+a+do-while+loop Just get used to adding the braces. 
I'm jealous of Ruby's ability to reverse if's. It solves the annoying brace problem quite elegantly: foo() if mybool foo() unless mybool
Single line is fine as long as you never debug, never refactor and always work on your own code. As soon as you start single stepping through it wondering which code path was taken (especially when the if statement is more complex than a bool) or have a late night cross-eyed code change, you'll wish it was on multiple lines. With braces.
Not only do they change behavior, exceptions are also an extremely expensive tool to notify of failed preconditions. An early return costs nothing, an exception requires a stack walk.
Just tried it out, much better! Thanks
To me that is really hard to read and understand quickly
You are correct. Which explains why I don't put braces around single-line if statements, because I can't recall *ever* having a bug because the braces weren't there.
My thoughts exactly. 
But that's much more readable than with added braces...
This. It looks fine. Honestly, I think it looks *better* due to the lack of vertical space. I don't put braces around single-line if statements unless otherwise enforced by some style guide.
Remember the hot fix that Apple had to push out to iOS and OS X recently that fixed a huge gaping security hole? And got them on the nightly news around the world (in a bad sense)? Root cause was a missing set of braces. 
Formatting got messed up, corrected now. I like it, maybe I'm crazy.
Well, if you're architecting things nicely, you're making the world a better place. The way things are, we put business processes inside code, and there's plenty of managers who don't understand the hidden costs &amp; risks of unmaintainable code. Keep up the good work. There's just a lot of work that needs to be done and not all of it is sexy. And if you're thoughtful, you'll find ways to automate much of your work.
Something like this: private void textBox1_TextChanged(object sender, EventArgs e) { textBox2.Text = convert(textBox1.Text); } public string convert(string input) { char[] values = input.ToCharArray(); string output = ""; foreach (char letter in values) { // Get the integral value of the character. int value = Convert.ToInt32(letter); // Convert the decimal value to a hexadecimal value in string form. output += String.Format("{0:X} ", value); } return output; }
Awesome, you're always a lifesaver, thanks! When I look at this code though, I don't understand where you are specifying that the program look into the textbox for the input and where to return the output. Can you clear up this confusion?
Also I think you understood me wrong. I am trying to convert hexadecimal to decimal and hexadecimal to binary. Is what you have converting hex to decimal?
The point wasn't the conversion, it was how you deal with things during the event handling.
 private void textBox1_TextChanged(object sender, EventArgs e) { textBox2.Text = convert(textBox1.Text); } This function is the event handler for when the text changes in textbox1. It sets the text of textbox2 to the output of the convert() function. We know its the event handler because if we look at the form.designer.cs file we will find a line like this: this.textBox1.TextChanged += new System.EventHandler(this.textBox1_TextChanged); [Also if we look at the event properties of textBox1 you'll see it has a value you textBox1_TextChanged](http://imgur.com/9CWhEzn) You could use a button and use the clicked event to do the same thing with the same line of code: `textBox2.Text = convert(textBox1.Text);`
how did I miss posting this here :P
Whats wrong with making an IRC bot?
https://dl.dropboxusercontent.com/u/9009146/WindowsFormsApplication2.zip
You probably have multiple functions named textBox14_TextChanged
&gt;what I'm really after is the SQL statement LINQ is generating. Do you mind stepping back and explaining more about the context of the situation and the bigger problem that you've chosen to solve in this way?
I understand this sounds crazy. Basically we have a website where the user chooses what to see (from data source, to parameters, aggregation... basically a query builder). Except those "queries" run against a datawarehouse that could take several minutes to generate output, so what do we do? we write our queries in a database and have a service take those tasks, execute the queries, email the user with the results in csv format. In more layman terms: I don't want to compose SQL by concatenating strings because: 1) very error-prone, hard to maintain 2) easy to become spaghetti if we need complex\nested queries
I agree with this statement. Braces for life or do inline if thing==otherThing ? doTrueThing : doFalseThing
Inline if thing==otherThing ? doTrueThing : doFalseThing;
Except that is an assignment operator. boolean a = 1 + 3 == 4 ? true : false;
Sounds like you want the System.Linq.Dynamic stuff if you're wanting to alter the queries for arbitrary conditions at runtime. http://www.nuget.org/packages/System.Linq.Dynamic/ Lets you do things like specify column names as strings for use in Where/OrderBy while still keeping the integrity of the original code. Also if at all possible you should look at switching from LINQ-to-SQL to LINQ-to-Entities (Entity Framework). It can automagically create a model for you from your database so it's pretty trivial to migrate.
Wish they would support MonoDevelop.
I'm pretty sure == is a comparison operator.
that sounds like a good start, thanks! I cannot use Entity because boss doesn't like it (you know how PMs are sometimes) but I had certainly considered it.
WPF isn't really a web UI. You can host a WPF app (XBAP) in the browser (IE + FF only), but it is in fact a WPF app running on the client. 
If you're making a Windows 7 + 8 app, go WPF. It is mature, stable, has excellent development tools and established patterns (MVVM) and frameworks (Caliburn Micro). While the rumors have been that WPF is "dead" (e.g. no future features), there are new rumors that WPF 5 is being actively worked on. Regardless of the future, it is an excellent desktop framework, giving you power and ease that Windows Forms can never match, and tools unmatched by cross-platform UI frameworks. Also given that XAML is very much the present and future of Windows client development, your learning and experience won't be a dead-end. Finally, ignore the WPF detractors who mostly have a hard time with the learning curve. Their issues stem from WPF doing things so differently than the preceding 20+ years of Windows client UI development. They had to unlearn a lot before learning WPF idioms, and this was a significant burden you won't face.
It looks like yes from just the image, but you can use [Snoop](http://snoopwpf.codeplex.com/) to see if you can inspect it. It looks like it is using http://mui.codeplex.com/. Edit: You might also look into the github client for windows, which uses this framework, as well as Caliburn Micro and other good WPF-based libraries.
 int itemsAdded=0 if (someCondition) foreach (item in items) if (item.isSomething) item.add(function); else output('condition False'); 
Nice one, that else goes with the last if.
Even those of us who dislike braces around single-line if statements will put braces around the first if and the foreach, even though they aren't strictly required, in order to maintain readability and disambiguate the else clause. (My personal rule is to *always* add braces around multiple lines, even if it's technically only a single statement. Personally, I would also add braces around the body of the else clause, because IMHO it would look unbalanced when its corresponding if statement has braces. But that's pure style aesthetics. Here's how I would format the above example: int itemsAdded=0 if (someCondition) { foreach (item in items) { if (item.isSomething) item.add(function); } } else { output('condition False'); }
This makes me cry.
Summarizing the results so far, C# is bad practice. So you should switch to F# or Python. People have posted all sorts of potential issues with C# formatting, and ultimately propose that safety trumps a concise layout. 
Maybe I'm misunderstanding you, but WPF almost certainly is "able to use vectors". In fact, most of the visuals are built up from vectors if I remember correctly. That's how it handles animations and scaling so well. Are you referring to a specific kind of vector format like SVG?
This seems like a pretty broad question, so I'll see if I can help you narrow it down some. Reading over what you're trying to do, I see some little questions I can provide some concrete answers to. I'm going to assume that you're using Windows Forms given you mentioning Form1.cs. &gt; Is there a way I can let the user select files? Can I restrict that selection to only Excel workbooks? The component you're looking for is OpenFileDialog. Calling the ShowDialog method on that will display a standard Windows open dialog box. Be sure to check the return value from that method - if it returns DialogResult.Cancel then the user selected Cancel or closed the dialog without selecting a file. Your code should react accordingly. You can set various properties through the designer when you add one to your form to customize the dialog title and other options, but the one you're looking for in order to limit the selection to just Excel Workbooks is [Filter](http://msdn.microsoft.com/en-us/library/system.windows.forms.filedialog.filter.aspx). Here's a starter filter you can use for Excel Workbooks right away: "Excel Workbook|*.xls;*.xlsx" &gt; How should I design my UI? This one's tricky - what exactly do these workbooks contain? Do you need to show a preview of them to the user? Are there always three workbooks or are there sometimes less or more? You should try to pin down your requirements a little more before you start in on this. I have a feeling you're going to need to access the data inside the workbooks at some point too - are you familiar with the Office APIs at all?
Hey thanks for the quick response. Sorry my questions are rather all over the place, since I am just organizing this new toolset in my head. 1. The OpenFileDialog. This seems to be the answer to my question. So I use the Toolbox to put in an OpenFileDialog object. Then, using the properties menu on the right, I set that when the object is clicked on, it will run a method called ShowDialog, which I assume will be automatically generated to open a Windows Explorer menu and allow the user to search? I need to have an encapsulating method that takes the return value of ShowDialog to do whatever it is I need to do with it. For this filter, should I be putting "*|.xls;.xlsx"? 2. My confusion isn't designing the UI specifically. It's the organization of the code behind the UI. Do I put all my functionality in a separate class, and the buttons call the methods from that class, or do I just program the functionality into these auto-generated methods? I guess I want to know more for convention as I guess before trying theoretically both could work. 3. In answer to your question about Office APIs. Not at all, however I downloaded this .dll file from [here](https://code.google.com/p/excellibrary/) and have referenced it into my project and figure that code is easy enough to work with, even without any real documentation. I believe that just by publishing the project the .dll will automatically be included? EDIT: thanks for your informative answer so far, it's helped me clear at least the graphics design question that I have.
Source?
Strangely enough, I found that [this article](http://addyosmani.com/blog/understanding-mvvm-a-guide-for-javascript-developers/) explained MVVM quite well even though it was for use with Knockout.js. The language may be different, but the principles are the same.
http://nakedsecurity.sophos.com/2014/02/24/anatomy-of-a-goto-fail-apples-ssl-bug-explained-plus-an-unofficial-patch/ 
I'm just getting into it and have found Mike Taulty's series of videos for Prism make things much clearer for me (not quite finished the series yet). I had trouble loading the videos on MSDN but there series is on Youtube starting with http://www.youtube.com/watch?v=KTtTW-BmXJg He goes right through from a basic calculator console app building on it step by step splitting it into modules, adding Unity, Prism, etc. and it's really helped my understanding.
 if (foo) Foo(); is not idiomatic and is prone to misinterpretation as other comments show. As a professional C++ dev, at work we use the braces even for simple statements for clarity and for its clear readability.
I think what you're after is this: public Expression&lt;Func&lt;SomeClass, bool&gt;&gt; GetFilter(int foo) { return someClass =&gt; someClass.Foo == foo; } ... .Where(GetFilter(5)) ... The C# compiler can turn lambda expressions into either a delegate instance like Func&lt;SomeClass, bool&gt; or an expression tree like Expression&lt;Func&lt;SomeClass, bool&gt;&gt;, using type inference to decide which one. LINQ to SQL uses the magic of expression trees to examine the expression and turn it into a WHERE clause. For more complex scenarios where you want to dynamically connect predicates with Ands and Ors look into [LinqKit](https://github.com/scottksmith95/LINQKit).
It would be better if they added C#/.NET support to IntelliJ IDEA. Maybe call it IntelliN IDEA 
An editor that automatically indents code certainly helps. I could see that error happening in Notepad, but any slightly more advanced editor will make it pretty obvious that something is wrong.
I do think the consensus on this group is that braces are worth it for safety. I do not wish to claim any particular placement is official. I prefer K&amp;R style bracing too. I don't use it, because the rest of the team has different preferences. I am glad I am getting down votes because people are not on the same page as me. I am sad to the extent that I am getting down votes because I have failed to express myself. It is bad that some code is interpreted one way by humans, and another way to the compiler. It is bad if people must make tradeoffs between readability and safety. In these respects C# is both broken and superseded. 
If it is readable and understandable on one line then go for it. Make sure you add an extra line break between this statement and the next so it is clear that they are not connected. Otherwise wrap it in squiggles.
Are ruby discussions full of problems this has caused? Fear of the unfamiliar? 
With WPF you can make your desktop app look like that. I am making a desktop app and the UI is similar to that but I styled it more after VS/Office 2013. Also I think MS uses wpf to create the UI for Visual Studio. I might be wrong on that though.
Oh ya sorry, I meant SVG, I know when you draw a shape it is full vector, but it's for some reason really difficult just to add a custom vector, or maybe it's easy and I haven't found away (other than using an API)
VS UI is WPF. You can attach Snoop to a running devenv.exe process and inspect the visual tree.
Check out [System.Windows.Shapes](http://msdn.microsoft.com/en-us/library/system.windows.shapes.aspx)
Slightly unrelated, but do youself a favor and name your text boxes differently! textBox1452 is not as clear as decimalTextBox. At least, that is what I think. You can rename your textboxes in the designer. When using winforms (which I guess you are doing), just click on the textbox in the designer and change the "textbox123" name, press enter to confirm. When using WPF, put x:Name="decimalTextBox" in you textbox definition XAML.
I thought it is C# Reddit, but this snippet looks much more like Python.
So you have a view (or form, or webpage, or whatnot), with several textboxes, datepickers, comboboxes and other input controls. Then you want to have LINQ to SQL build the query. Save the query, and have another process execute the query and handle the results? I think it would be easier if you save the "request" the user makes (aka: the various variables of the input controls). Have LINQ to SQL build and run the query (ergo: you need not know what it is) and handle the results.
Simply brilliant. I hope this gets acted out by Anders and Mads at the next con they both attend. :)
&gt; Instead of specifying the library in Implement(), I'd have done it by adding attributes to the original definition. I plan on keeping the possibility of specifying the library in the factory helper functions due to my own original use case for this library ('opengl32' -&gt; 'libgl' on Linux, which must be configures using AppSettings on Mono) but there is absolutely no reason to not allow both. &gt; I'd also get rid of .Implement in a separate class for invocations sake, and have the .Implement() an extension method on all interface types used for it. Then I could do: IMessageBox.Create().MessageBox(args); This is great! Thanks!
Ya
The link is saying the page is not available?
Yeah that was the problem. The error wouldn't go away though, but after I restarted the program it did.
Yeah that would have probably been a good idea. I didn't think it would be a problem cause my application was small at first. Now I have like 20 textboxes lol. 
It's not really anything, just pseudocode to illustrate a point.
Never mind, realized the for loop is adding the output for each character in the values. 
Oh alright that makes sense, I didn't know that's what that convert was doing. Thanks for clearin it up. 
Quite the contraire my friend. Makes me nostalgic
Probably being blocked by something on your end.. it should definitely be there, if I click on it it downloads.
Ah makes sense. I'm at work right now. 
Lol and I want to go back and rename everything, but it all works right now so I'm afraid if I mess with anything, even something as small as name changing, somethings going to break. 
This is pretty damn nifty honestly. Will give it a once over when I get off work.
Could you have a separate class called Common so you could have : using Platform.Invoke.Common; And then under that have namespaces for common DLL's that people use? using Platform.Invoke.Common.Win32 That way you could have the IMessageBox.Create().MessageBox(args); as PhonicUK suggested. I suppose it would be trivial enough for us to implement our own...
My personal favourite: http://www.dotnetperls.com
I think one of the Blend family tools will let you draw things and export as a hunk of XAML, and if there's not an open source/freeware SVG to XAML converter I would be amazed.
Wish you were like the hiring managers around here. I'm getting passed up because I don't know some of these buzz words, but I know what they are, and why I need to learn them. I'm in the same boat as OP it seems.
I have drank the koolaid and am in the cult of pluralsight. It's as good as they say it is. Learning has always been tough for me, finding the right method and such. Most of the videos I've seen on Pluralsight have been just the right balance of theory, explanation, and examples. I've gotten way more out of a couple videos than I have any books so far.
Download was easy and indeed free. Thanks! 
Great stuff.
You use full bracing in the correct format for your organization. You're not doing it for you, because you already understand it. You're doing it for the next guy who comes down and has to modify it.
Any HIMYM fans in the crowd? 'Cus this reminded me of Lily's speech about breaking up Ted and his former GFs ("The front porch").
Found one that works (http://social.msdn.microsoft.com/Forums/en-US/e912bc1f-76ae-478e-83c3-1f7730184d87/c-context-menu-strip-right-click?forum=winforms) Trying to found out how to get which row was select and get all the text in that row, anyone know how?
Should be very simple: 1. Add a ContextMenuStrip to your form, add an option named "Edit", another with a single "-" character in it to denote a line then another named "Delete" 2. Set the "ContextMenuStrip" property of your ListView to the new ContextMenuStrip 3. Right clicking on the ListView will now show your context menu, just add a little code to check and make sure there's a ListViewItem selected and take the first one: if (listView1.SelectedItems.Count &gt; 0) { //load your values to edit or delete your record, depending on which menu item we're doing //access the item via listView1.SelectedItems[0] }
I think you're mixing up the terms quite a bit. Anon types are defined and named at compile time. All they let you do is defer control of the name to the compiler. You could instead make a "class QueryResult" yourself and it will work exactly the same. If you want the Sql statement without running the query, get the command and get its text as described here: http://stackoverflow.com/a/551145/8155 
For first row (John smith), having listView1.SelectedItems[0] shows "ListViewItem: {John}" Can't find anything about editing items with context menu :/
If you're looking to do in-place editing (as in you right click on the text you want to edit in the list view, choose Edit and then get a small text box replacing the text that lets you change it), then it'll take some extra work. The ListView control doesn't support in-place editing except for the very first column, which is more like renaming a file in Explorer when the view is set to Details. There are more than a few third party controls that will do it in-place, or you can simply display a small dialog that allows the user to edit the various text fields and then save the changes back when they click OK.
That all depends whether you want to edit the record 'in' the list view or whether you just want to load the data into your text boxes then save the update. In-place editing is much more involving and would require some custom control work. EDIT: Also, the reason you're getting nothing useful from SelectedItems[0] is that you appear to be just outputting the returned object as a string. Its not a string. Its a ListViewItem.
Thank you.
List&lt;User&gt; usersWithoutPassword = users.FindAll(x =&gt; String.IsNullOrEmpty(x.Password)).ToList(); EDIT: You could also just do: return GetUsersFromDB().FindAll(x =&gt; String.IsNullOrEmpty(x.Password)).ToList(); Another edit: As /u/0xffff1 pointed out below this does not do what OP wanted... disregard. 
Is there a reason you're reusing the User class for both users with passwords and users without passwords? I can only see this becoming a difficult to detect bug later on where some User objects have passwords and others don't and they've been mixed together somehow. That being said, as long as the number of User objects is small and you don't mind taking the allocations hit, you could try return GetUsersFromDB().Select(u =&gt; new User() { Name = u.Name, Nick = u.Nick, Password = string.Empty }).ToList(); That will allocate a new User object for each user returned from GetUsersFromDB but copy over everything except the password. The only downside is that it doubles the number of User objects created (one inside GetUsersFromDB and one inside the Select). It'll also only work if you can freely create User objects.
Well they're parodying the [same scene](https://www.youtube.com/watch?v=9FnO3igOkOk), so...
This looks like it would be quite handy for testing legacy code that invokes a native API. You could simply modify all the calls to use the interface methods instead of statics and find a good place to inject an instance of it. In production you'd use the actual P/Invoke wrapper and in testing you could stub out whatever you want. That being said, for any new code I'd prefer writing the wrapper myself. Most of the time there's an obvious object mapping for a P/Invoke API, especially large portions of Win32 and it tends to involve a series of smaller wrappers with a just a little more intelligence. Does your project include some sort of tool to pre-gen the interface implementations as well? It should be straightforward to write and invaluable for anyone using this in anything significant. Unrelated, but scanning your code introduced me to Code Contracts which I had never heard of before. They look really handy!
Just re-read OP's code... you're correct. Disregard my first post!
Thank you.
I tried Snoop on Dell Backup and Recovery. It was developed using WPF.
The submitters code returns a list of all users, but with the `Password` removed. Your code returns a list of all users who have no password.
Thank you very much for the reply. I am going to start WPF learning as soon as I hit submit on this comment. Once again, thanks a lot. 
Thank you.
JUST realized that right before you posted. Thanks!
You don't need two lists for that, just one is necessary. Since you're modifying the User directly, you could just do something like List&lt;User&gt; users = GetUsersFromDB(); foreach (var u in users) u.Password = ""; return users; Furthermore, there are various LINQ extensions that add a .ForEach(Action) extension method. MS p&amp;p's Unity has one in its ObjectBuilder that I've borrowed, but others exist as well, and it's not hard to just write your own. With one of those, you could end up with something like return GetUsersFromDB().ForEach(u =&gt; u.Password = ""); ... but the real question is ... How are you storing passwords in your database? Please, please don't tell me they're in plain text. And if the passwords are sensitive, they probably shouldn't be returned in a general query anyway. Edit: Oh wait, there's a ForEach on List&lt;T&gt;, isn't there? http://msdn.microsoft.com/en-us/library/bwabdf9z(v=vs.110).aspx That particular incarnation of ForEach returns void, so your method body would look like this, which really isn't that much nicer than a plain foreach. List&lt;User&gt; users = GetUsersFromDB(); users.ForEach(u =&gt; u.Password = ""); return users; 
There is, as you expect. Inkscape does a passable job saving SVG to XAML.
Thanks I'll go check them out!
 For anyone that wants a ForEach, here are two, the second one with index: public static void Each&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T&gt; action) { foreach (T element in source) action(element); } public static void EachWithIndex&lt;T&gt;(this IEnumerable&lt;T&gt; source, Action&lt;T, int&gt; action) { int index = 0; foreach (T element in source) action(element, index++); } 
Start from the source! http://msdn.microsoft.com/en-us/vstudio/hh341490.aspx
That would no doubt be very useful, but it falls a little outside of the scope for this library. I'm planning on releasing this on nuget which would make producing something like that as a separate library trivial though, so thanks for the suggestion!
You've... seen things we people wouldn't believe? 
Thanks, for your answer. I guess its actually a bit better since its more clear with the LINQ foreach. The Code is just a sample, the User class is a lot bigger and of course the passwords are encrypted. 
Actually I have to return all Users from a database over a Webservice. So for security reasons, I don't export them with the password.
I don't see how the fact that the queries run multiple minutes would matter, they have to be run anyway, right? So have your web page dump the request in a "requests" table, with all user inputted values. Have the process that will create the report in the background check this table (or however it now happens, doesn't really matter), gather the request and build the query. There are multiple ways to do this, I have googled 2 for you: http://www.codeproject.com/Tips/582450/Build-Where-Clause-Dynamically-in-Linq This approach will try to abstract away the fact that you are actually just building a where clause in string format. http://stackoverflow.com/questions/1292482/how-do-i-build-up-linq-dynamically This approach is more straightforward, build the string and query away!
This is my favorite book. Easy to understand but deep http://www.amazon.com/5-0-Nutshell-The-Definitive-Reference/dp/1449320104
That's stolen from Perl.
Oh wait, there's more! apparently the issue is that we were using two instances of the same DbContext. Sharing the same instance is showing us the SQL. Tricky.
Yeah I was thinking about in-place editing and knew that would be more difficult, but as at the moment I'm just practising it so was thinking of bringing up a new window and allowing editing there, seems to be much easier. Figured that out while messing around with it after posting, thanks for clearing up
Yeah as I said above to dfrear, wasn't thinking of doing that
No problem. I'd do it one of two ways if I wasn't going to try and do in-place editing: * Upon right clicking and selecting edit I'd re-use the text fields at the top, fill those in with the data from the ListView (based on your ListViewItem you got from SelectedItems[0]) and rename the button to "Save" or something similar. Have the system then do an update on that ListViewItem or database object instead of adding a new item. * Alternatively, have a new form with the same fields again specifically designed for editing. Personally I'd say this was a waste of time when you've already got the fields in-place, you'd need to deal with passing the data between forms and whatnot. 
That's some really great references, thanks
[This is my favorite site for looking up how something works or how to use something in C#](http://www.dotnetperls.com/)
Reason I'm not going to use the fields at the top because I'm eventually going to have a separate window to add more people. I've eventually got it to pass data between forms using events, currently trying to find out how to change the listviewitem because it get's passed into a new method
You want to be looking at the Text and SubItems properties
That's exactly what we ended up doing. What we can do by LINQ only we do like that, for the rest we build LINQ expressions with strings :) yes, we're still concatenating strings but if something fails at least it fails client side without polluting the DB and being exec'ed by the other service, so there's still some advantage there. The only part that needs some dirty string concat is building the parameters list. Thanks ;)
Tell your boss to come up with a solution then. 
Originally Jetbrains planned an IDE but eventually quit talking about it and released R#. 
If you return the IEnumerable&lt;T&gt; source on those, you can get some slightly nicer chaining. You'd still need to cast if you explicitly need an IList&lt;T&gt; though. Here's the first extension method tweaked for that. public static IList&lt;T&gt; Each&lt;T&gt;(this IList&lt;T&gt; source, Action&lt;T&gt; action) { foreach (T element in source) action(element); return source; } That would allow you to do return GetUsersFromDB().Each(u =&gt; u.Password = ""); ... Now for some bonus points... public static IEnumerable&lt;TOut&gt; Each&lt;TIn, TOut&gt;(this IEnumerable&lt;TIn&gt; source, Func&lt;TIn, TOut&gt; transform) { foreach (var element in source) yield return transform(element); } That will get you the same effect, but with lazy iteration. ... which won't help you at all in this particular case, but it's still cooler!
The lazy enumeration variant is pretty cool! thanks.
One should only use value types when value semantics are desired, because [value types don't mean the storage gets allocated on the stack instead of the heap, only that they have value semantics.](http://blogs.msdn.com/b/ericlippert/archive/2010/09/30/the-truth-about-value-types.aspx)
What about desktop development? .net developers are finding themselves in the position, where it's no longer viable to target just Windows. There is gtk in monodevelop, and that's it. QT would be nice, but it is not well supported.
For a great source of videos on C#: http://channel9.msdn.com/search?term=C%23
&gt;C and C++ were also developed to be portable, and I would imagine a large amount of code is portable between all three systems. Negative. Yes, you can compile both, but the API calls that you will (eventually) need to do are most definitely not. The plus to Xamarin is that they essentially map the API calls for us into a more common ground. Yes, the kernels themselves are very different, but this is sitting on top of that, which makes it a bit different. :) (IMHO).
Microsoft released a .net library called OpenXML for handling their newer office file formats (xlsx and docx). I wrote a wrapper around the functionality I needed for excel and it's worked pretty well, and it's really straight forward (except images suck )
Indeed. I don't really disagree with you. I'm looking at this from the kernel &lt;-&gt; userspace point of view, which I don't feel Xamarin could resolve easily or efficiently. Granted, portability at that level is likely difficult to achieve. I've seen some of the mess in PHP regarding that. Anyway, perhaps we'll see Xamarin take that route, but we'll see.
I'll start calling it "cuTie" instead.
one does not simply ask his boss for a solution...
I have a ton of C# code to draw from. I can make a good living from it. Clients used to be happy with desktop apps running just in Windows. But more and more want it to run on other OSs, especially when they are investing in the future. The last thing I want to do is learn c++, and use native gui toolkits. As you say, gtk is meh. Qt is not well supported. Winforms and WPF are not cross platform. Xarmarin have done a great job with mobile, but not with cross platform desktop.
Please elaborate, just saying it is a bad solution is bad advice. 
There's also wxwidgets, but I have no idea how well-supported that is
Xamarin does have a Mac product. Have you tried that by any chance?
If you're looking for a good library to handle parsing through your spreadsheets, check this guy out: [EPPlus](http://epplus.codeplex.com/). License is LGPL
thank you very much! this is exactly what im looking for. the one i have is outdated and while it works just fine will create an error everytime i open a file using 2007 or later. I have two questions regarding this one. License is LGPL. What is the relevance of you telling me this? Sorry, I'm kind of ignorant on this matter. Second question. What I do is I download the dll, and reference it in my project, and when I publish it, it will automatically be included? I hope I am right in this assumption? 
I know, but that's just Mac. I have customers who won't touch Apple products, and I have a few that are getting twitchy about Windows. They don't want to be locked into an OS anymore.
This is the equivalent of { foo() } if (mybool) or THEN foo() IF (mybool) My eyes.
It doesn't look like it's had any love for 3+ years.
pretty cool, thank you!
You're missing the parenthesis needed for Console.ReadLine(). Also, you can omit the if x==2 test as the else test takes care of it. I am no expert; I'm learning C# meself right now. Edit: Also noticed a missing semicolon after Console.ReadLine() Edit: Actually lots of missing semicolons.
Since you're just starting out, let's stick with just one class for now. It'll keep things simple. Instead of breaking your method out into a new class, just leave it inside MainClass - you can either put it before or after Main inside the curly braces after class MainClass. Let's take a closer look at Main, since Main is actually a method itself. public static void Main(string[] args) We'll go bit by bit through this declaration. Since you're just starting out, I won't go into detail on what 'public static' means. *For now just put those before every method.* As you learn more about the language and programming in general you'll come across what these keywords do later. Just consider it boilerplate to make the compiler happy. The next one after that is 'void', which is *the return type of the method.* Every method has a return type, which is the type of object that it returns when the method ends. 'void' is a special type that means "nothing" - notice how Main has no return statements in it. After void, we have Main which is *the name of the method.* This should be pretty self-explanatory. Following that is a series of what looks like variable declarations in parenthesis. These are *the arguments to the method.* Values placed here will be passed into the method for it to use. Inside the code of the method, you can refer to these values as if they were regular variables. So in general, a method inside your MainClass will look like this: public static ReturnType MethodName([ParameterType parameterName, ...]) Where ReturnType is any type (or void!), MethodName is the name of your method, and inside the parenthesis is a comma separated list of variable declarations for the arguments.
 using System; namespace Testingmethods { class MainClass { public static void Main (string[] args) { string x; TOrF trueOrFalse = new TOrF(); // instantiating a copy of TOrF called trueOrFalse Console.WriteLine ("type in 1, meaning true, or 2, meaning false."); x = Console.ReadLine(); Console.WriteLine(trueOrFalse.Parse(x)); // Passing x to trueOrFalse's Parse() method. } } class TOrF { public bool Parse(string y) { // Parse() takes input as y, even though you're calling it x in Main(). if (y == "1") { return true; } else if (y == "2") { return false; } else { return false; } } } }
I know, i wanted more help specifically with methods.
Also with moving your true/false logic into Parse(), we can clean it up a little. All you're really checking for is that x = 1, and everything else (including 2) returns false. public bool Parse(string y) { // Parse() takes input as y, even though you're calling it x in Main(). if (y == "1") { return true; } else { return false; } } 
Thank you for the explanation of the format man
so it would be something like this? I think I am at least getting closer (this is a different one i started to try to make things simpler using System; namespace Testingmethods { class MainClass { public static void Main (string[] args) { first = new MainFight if (first) { Console.WriteLine ( "you win"); } else { Console.WriteLine ("you lose"); } } public static bool Fight () { MainFight(); { string result; Console.WriteLine ("type win or lose"); result =Console.ReadLine(); if (result == "win") { return true; } else { return false; } } } } } 
I do, especially if they insist on doing something s certain way.
okay, i got that to work, thank you so much for the help!
nginx :)
So that's why my friends were so adamantly in favor of C#!
Good, succinct example. I would follow on by mentioning some truly horrendous abuses of inheritance in the base class library, like System.IO.Stream. In general, unless your job is building a framework, you don't want to be using deep inheritance hierarchies. If your job *is* building a framework, then life sucks. Or you enjoy thankless challenges. Designing classes to be inherited by other people you have no communication with is **hard**. There's always someone who's going to nitpick your design choices and have a valid reason why they suck. See also: System.IO.Stream.
You got it, except its even more than that because it handles the false case as well, so you don't have to write the else clause.
&gt;They have to act like the base class. It is now impossible to add an animal that does not speak. What about crickets? They make a noise but they don’t speak. Wasn't that the point? He was noting how when using inheritance, whatever inherits the base class must utilize the base class' implementation. In a language like C#, why would it be any worse to just override the methods? http://www.akadia.com/services/dotnet_polymorphism.html I do understand that in most languages, you can only inherit from one class, unless you use interfaces. --- Here is an awesome answer on Stack Overflow: http://stackoverflow.com/a/53354/2014469 &gt; * Does TypeB want to expose the complete interface (all public methods no less) of TypeA such that TypeB can be used where TypeA is expected? Indicates **Inheritance**. &gt;e.g. A Cessna biplane will expose the complete interface of an airplane, if not more. So that makes it fit to derive from Airplane. &gt; * Does TypeB only want only some/part of the behavior exposed by TypeA? Indicates need for **Composition**. &gt;e.g. A Bird may need only the fly behavior of an Airplane. In this case, it makes sense to extract it out as an interface / class / both and make it a member of both classes. This pretty much shows that both use cases are valid. I don't think the author of this article was trying to say that composition is always the answer over inheritance, but that it's taught too often that extending classes via inheritance is the way to enable good code reuse. It does enable good code reuse, but at the loss of malleability. Like in his example, if you define a method `speak()` in an `Animal` class, and you have an animal that doesn't speak, it isn't possible to *not* have a method of the animal speaking. (Unless you specifically override the original method, even then, the animal might not be speaking, it might be chirping)
https://github.com/mono/xwt
Yes, I read about this sometime ago. I'm not sure what to make of it. I can't see how you could possibly get the very best out of each toolkit, with such an abstraction. But I am willing to be convinced otherwise.
Instead of the massive if/elseif - why are you not just storing the result of getCurrentCulture() and just using that as the condition? There is a lot of unnecessary duplication in the code. It'd be better if it were something like: var culture = getCurrentCulture(); var voice = InstalledVoices.All.FirstOrDefault(v =&gt; v.Language.StartsWith(culture)); if (voice == null) { //No voice for this culture speechSynth.CancelAll(); return; } speechSynth.SetVoice(voice); await speechSynth.SpeakTextAsync(text); 
Cool, thanks.
Is it no longer available?
&amp;&amp; is also a short circuited boolean operator. If the left hand expression is false, the right hand expressions will not be evaluated since the result wouldn't matter.
I seem to recall a language feature (upcoming? Proposed?) to do that null check very concisely. Edit: I shouldn't comment on things before breakfast.
You can use the Monitor class or the simple lock statement. lock { if (myobject != null) myobject.Method(); }
Your assumption is correct only if *myObject* is a local variable.
super handy if you're ever interested in performance (put your fastest checks first) or need to verify a series of assumptions
If you like that style, check out the Maybe project, which implements a friendly maybe monad: http://maybe.codeplex.com/ Personally, I think it makes the code hairier than cleaner, but I wouldn't have a conniption if I saw it in my codebase. (When I see a method called twice, first to check that its output is not null, and then again to use the output, THAT is when I feel compelled to go on a rampage.)
Without looking at the switch it is hard to tell why it does not work. Another approach could be using a Dictionary&lt;char, int&gt; and add the key-digit mappings there, i.e.: map.Add('a', 2); map.Add('b', 2); etc. To get the corresponding digit you just look in the dictionary. **Hint**: upper case chars are different from lower case, and it does make a difference for the Dictionary class (look at the constructor overload that takes a key comparer to learn more).
The switch is as follows: switch (letterToDigit) { case 2: 'a' = return 2; 'b' = return 2; 'c' = return 2; break; case 3: 'd' = return 3; 'e' = return 3; 'f' = return 3; break; case 4: 'g' = return 4; 'h' = return 4; 'i' = return 4; break; case 5: 'j' = return 5; 'k' = return 5; 'l' = return 5; break; case 6: 'm' = return 6; 'n' = return 6; 'o' = return 6; break; case 7: 'p' = return 7; 'q' = return 7; 'r' = return 7; 's' = return 7; break; case 8: 't' = return 8; 'u' = return 8; 'v' = return 8; break; case 9: 'w' = return 9; 'x' = return 9; 'y' = return 9; 'z' = return 9; break; default: returnVal = 0; break; I would do your suggestion, but the assignment requires a switch to do the letter-to-digit portion of the assignment. I'll also include the pseudocode for you to view to see what the Professor is expecting. ProcessInput( ) Method Get 7 characters from the user and store them in the 7 variables that Main() has passed by reference Call ToDigit() for each of the 7 characters If toDigit returns an error code (-1), return an error code (-1) If the first character is 0, return an error code (-1) to Main() If the first three characters are 555, return an error code (-1) If there are no errors, return 0 ToDigit ( ) Method Convert the characters (passed from ProcessInput() by reference) to upper case Use a switch statement to translate characters into their corresponding digits. Write a case statement for each digit and for each valid uppercase letter Write a default case that returns an error code (-1) for invalid letters If there are no invalid letters, return 0 ShowResults ( ) Method Display the Phone Number using the character variables Main() has passed by reference Main() Method Declare 7 char variables Get user input by calling the GetInput() method, passing it the 7 variables by reference Perform the conversion by calling the ProcessInput( ) method, passing it the 7 variables by reference Display an error message or call ShowResults(), depending on the code ProcessInput() returns I'm just really struggling with how to set everything up. It's like my brain switched off after the last few weeks and doesn't want to play nice anymore. I get all of the concepts individually, it's just putting everything together that is really stumping me. Thanks again, -Liz
You can also use the logical operators to get a boolean value. Just as if (isKeyDown &amp;&amp; isKeyFalse) Would get evaluated as a single value like if (true) This var myBool = (isKeyDown &amp;&amp; isKeyFalse); Is just like this var myBool = true;
Not really sure what's going in that switch TBH. Remember that a char is essentially a byte, for example a=97, b=98, c=99 etc. Given the ASCII codes for the letters involved your char to digit switch could look something like: switch (inputChar) { case 97: case 98: case 99: return 2; etc... (sorry, on my phone and cannot format better)
I'll try that. I had also tried to change the "return" in the cases to "returnVal" and that didn't do anything. After I referenced ToDigit in Main about half of the errors went away. Now it's saying that a ";" is expected after each case, but it's already in place. It still also says that ToDigit doesn't exist in the current context? I don't get it. 
I tried your suggestion and all the errors cancelled out, except for the one that says "letterToDigit" does not exist in the current context. I know I have to declare it somewhere (probably in Main after I delcared ToDigit?), but I'm not sure how I should go about doing that either. Sorry, like I said, this whole assignment has me stumped.
Put the switch in a method like this (also, learn how [switch works](http://msdn.microsoft.com/en-us/library/06tc147t.aspx)) private int LetterToDigit(char letterToDigit) { switch (letterToDigit) { Then to convert one of your chars to digit you just call the method: var digit = LetterToChar(x1); There are a million ways how to accomplish this feat super simply, but if that's what you have to use... :)
 static int ConvertLetterToNumber(char inputChar){ switch(inputChar){ case 'a': case 'b': case 'c': return 2; break; ///fill in the rest default: //throw new ArgumentException("Not an expected input character"); return -1; } }
yes it doesn't prevent others, but the object won't be null when you execute the Method
Hey, it's Saturday night and I have a hangover, why not... There's a lot of stuff going on here, so lets break the problem down. Firstly, input. You don't need to worry about capturing characters piece by piece, you can just read the entire entry from the console at once. Strings are **Enumerable** - this means you can read a whole line from the console and access it character by character. So to do this, you'd have code like this: Console.WriteLine("Enter 7 Numbers (0-9) or Letters"); var input = Console.ReadLine() ?? string.Empty; input = input.PadRight(7).Substring(0, 7).ToUpper(); var firstChar = input[0]; // this gets the first character There's a lot of stuff going on there, so just to break it down. We're reading an entire line from the console, and **null coalescing** to string.Empty - what this means, in English, is "get me a line of input, and if that input is null, give me an empty string instead". We're then taking that string, and padding it up to 7 characters long (in case the user doesn't input enough), and then cutting it back down with a substring that grabs the first 7 characters (in case the user inputs too many characters). So the line beginning "input = input.Pad.." basically says "take the line from the console, and make sure it's exactly the right number of characters I'm expecting". This cuts out a lot of the code that you have in your snippet above, simplifying the *intent* of your assignment. The next step would be to think about the inveriant conditions - just a posh way to say "things you don't want to happen or care about" - in your post you mention "it will also output errors for a "0" beginning digit, "555" beginning, and invalid characters such as @$%&amp;- (We insert the -)." So lets do some simple guard checks before we start trying to understand what the user input really is. The first two checks there are nice and simple: if (input.StartsWith("0") || input.StartsWith("555")) { Console.WriteLine("Error found"); return; } What we're doing here is just checking if the input string starts with those characters, and if it does, we're writing an error to the screen and exiting the program. There's no need to do further processing. The invalid character check is slightly different, and there are a couple of approaches. Firstly, if you have a small list of *disallowed* characters, you can just use a simple blacklist and check against that, but if what we're really saying is "we only want so support these specific input characters" then you may aswell have a whitelist and check against that. I'm going to presume that you only want to accept numbers or letters and presume we have a whitelist. The easiest way to have a whitelist of allowed characters is to use a regular expression. Don't panic, they're terse and horrible to read but they're very good at what they do - most people just google them anyway. So I'm going to expand the check above: if (input.StartsWith("0") || input.StartsWith("555") || !new Regex(@"^\w+$").IsMatch(input.Trim())) { Console.WriteLine("Error found"); return; } It's pretty terse, so let me split it out. string inputWithoutTrailingSpaces = input.Trim(); Regex whitelist = new Regex(@"^\w+$"); bool inputOnlyContainsAllowedCharacters = whitelist.IsMatch(inputWithoutTrailingSpaces); if(!inputOnlyContainsAllowedCharacters) { // error message &amp; return } That's it written out longhand, but I'd probably fold it together for conciseness - it doesn't really hinder the readability significantly (though that's just my opionion). So that takes care of all your error conditions in one little block, which is nice, we tend to call these kinds of code blocks guard clauses, as they're a nice way to check for your conditions and exit early when you detect bad user input. (continued in reply)
 Once we have input out of the way, we're going to want to create, as others have said, some kind of map between the letters and numbers on a phone keypad. We have data structures built into C# and the base class library that lets us do this fairly easily. A dictionary is exactly the same as it's namesake it has a key, that you can use to lookup things, and a value. Our dictionary is a mapping from upper case alphabet letters, to the integer that it represents. The dictionary you're looking for looks like this: var keypadMappings = new Dictionary&lt;char, int&gt; { {'A', 2}, {'B', 2}, {'C', 2}, {'D', 3}, {'E', 3}, {'F', 3}, {'G', 4}, {'H', 4}, {'I', 4}, {'J', 5}, {'K', 5}, {'L', 5}, {'M', 6}, {'N', 6}, {'O', 6}, {'P', 7}, {'Q', 7}, {'R', 7}, {'S', 7}, {'T', 8}, {'U', 8}, {'V', 8}, {'W', 9}, {'X', 9}, {'Y', 9}, {'Z', 9} }; You could express the same concept as a very long switch statement, but I'd always prefer to see this kind of thing expressed as a lookup table because it's easier to read. Now, here's the cool thing, because we're expressed the table in this way, and because strings are enumerable and you can grab any character, we can just quickly run the input string (that we know is good) over the lookup table to quickly translate any letters to numbers. Because at the start, we converted the user input to upper case, we can just quickly loop over every character in the input, and if the character exists in out keyboardMappings, we know it's a letter and needs to be translated. var output = string.Empty; // Create an empty string for the output for (var index = 0; index &lt; input.Length; index++) // for every character in the input string { var character = input[index]; // get the character from the input string if (keypadMappings.Keys.Contains(character)) // if out keyboard mappings contains this character (i.e. "if it's a letter") { output += keypadMappings[character]; // add the value that the letter maps to in the mappings dictionary } else { output += character; // otherwise, just add the character, because it's a number already } if (index == 2) // if we're at the third character in, stick in a dash for formatting. { output += "-"; } } It's quite terse, but it shows how you can use a Dictionary and a loop to translate "any occurance of the key in the dictionary to it's value". All you have to do now is print the output string to the screen! [SPOILER WARNING] I ended up with a program that looked like this: using System; using System.Collections.Generic; using System.Linq; using System.Text.RegularExpressions; namespace PhonePadTranslator { public class Program { private static void Main(string[] args) { var input = GetInput(); if (input.StartsWith("0") || input.StartsWith("555") || !new Regex(@"^\w+$").IsMatch(input.Trim())) { Console.WriteLine("Error found"); return; } var output = TranslateInput(input); Console.WriteLine(output); Console.ReadLine(); } private static string GetInput() { Console.WriteLine("Enter 7 Numbers (0-9) or Letters"); var input = Console.ReadLine() ?? string.Empty; return input.PadRight(7).Substring(0, 7).ToUpper(); } private static string TranslateInput(string input) { var keypadMappings = new Dictionary&lt;char, int&gt; { {'A', 2}, {'B', 2}, {'C', 2}, {'D', 3}, {'E', 3}, {'F', 3}, {'G', 4}, {'H', 4}, {'I', 4}, {'J', 5}, {'K', 5}, {'L', 5}, {'M', 6}, {'N', 6}, {'O', 6}, {'P', 7}, {'Q', 7}, {'R', 7}, {'S', 7}, {'T', 8}, {'U', 8}, {'V', 8}, {'W', 9}, {'X', 9}, {'Y', 9}, {'Z', 9} }; var output = string.Empty; for (var index = 0; index &lt; input.Length; index++) { var character = input[index]; if (keypadMappings.Keys.Contains(character)) { output += keypadMappings[character]; } else { output += character; } if (index == 2) { output += "-"; } } return output; } } } There are some considerations here though - given the type of programming task this is, I suspect that whatever course you're on hasn't introduced the concept of dictionaries or generic collections yet, so they're probably expecting a switch statement implementation. That would look something like this (though I've not completed it): private static string TranslateInput(string input) { var output = string.Empty; for (var index = 0; index &lt; input.Length; index++) { var character = input[index]; output += TranslateCharacter(character); if (index == 2) { output += "-"; } } return output; } public static char TranslateCharacter(char singleCharacter) { switch (singleCharacter) { case 'A': return '2'; case 'B': return '2'; // ... other characters mapped here } return singleCharacter; } There are other ways to tighten up the code but it's probably not useful informatiuon. There's a lot in here, including the answer you were looking for, but hopefully this has been more of a "walk through" than just PLZ SEND CODES! For what it's worth, it gets easier! 
Ultimately for more generalised advice: * Write out in plain English what you're trying to do * If you can find a way to "exit early" with guard conditions, you should do it. * Dictionaries are nice ways to summarise "lookup data" - much like a real life dictionary * You don't need to capture characters piece by piece, strings are enumerable and you can access individual characters * Use regular expressions to validate input, along with more simple guard checks.
Maybe/Optional monads really make the most sense in languages that have the functional facilities to make working with them less of a pain in the arse, like pattern matching. Java 8 just added Optional, but working with it is significantly more painful that working with Scala's Option: Java: Optional&lt;Thing&gt; thing = that.maybeGetThing(); if (thing.isPresent) { doSomethingWith(thing.getAddress()); } else { doSomethingElse(); } Scala: that.maybeGetThing() match { case Some(thing) =&gt; doSomethingWith(thing.address) case _ =&gt; doSomethingElse() } You can use some helper objects with unapply methods to do your deep checking on these if desired, and I personally think this is a lot more clear (if not more concise) than the elvis operator. Unfortunately C# nor java have pattern matching, so we are stuck with the elvis operator because monads don't make sense in pure OO languages.
That's simply not true.
This is totally an anti-pattern - VMs should be your last ditch attempt - you negate half the value of a platform as a service, er, service if you use it as an infrastructure as a service provider. I'd be interested in why Azure websites wouldn't be much more suitable, and they start at free.
In that case you likely want: * Game clients are standalone. * A server application which all game clients connect to. * A database where data is saved by the server. * A website which reads from the database. The server would load character data from the database when a client connects, and save character data when it disconnects (and at regular intervals in case the server crashes). You don't want to drive the game through a database, no. The server should control the game and coordinate with the clients, any database should be used for storage of game data for a future load (or for a website to read). That's how I'd build it anyway.
Azure sites can be on a shared instance or a "standard" instance which is your own VM (except totally managed -- you're not actually fucking with the sysadmin details). Anyway in my case I had to use a service because my coworker tied in some dependencies to the RoleEnvironment when working in support for Azure file storage and there wasn't really time to refactor before release, but for next release I'd like to switch.
You have been a great help. Thank you. So instead of making server application, can I make of the clients a host? Would this work?
You could, but how would you insert into a database? You would have to give database insert privileges (whether directly or via a web API) to your game clients, which might do malicious things (or just lie about game status). In what you outlined, it sounds like you would want a consistent view of the world (number of character kills/deaths, what items equipped, whatever) across all players. The only way to ensure it's accurate is to have a central sever that arbitrates and doesn't allow cheating...and inserts the right data into your database. You can allow players to host their own server (or have their game client be the host) but then you either give up the central database or live with the fact that the player could be lying about stats (or whatever you put in that database).
You know... Not to knock anyone else's replies, because they were all really good tips and I tried them all... But you have no idea what you just did for me. I left and went to work and have had one of the most devastating nights, like the whole world has fallen on me (or maybe it's just pregnant hormones and stress). I logged in to find this and have had the pleasure of having a sigh of relief. You completely understand what I was feeling. I was understanding the pseudocode, but I couldn't understand how to translate it into the C# code. I appreciate the time you took to write this out, I really did need a step-by-step walk through for it to click. Thank you (and everyone else) so very, very much. You guys rock, and have turned my tears around to a sigh of relief (something I thought wasn't possible this week).
I just wanted to mention that if you also need to support &lt; Excel 2007, take a look at GemBox.Spreadsheet. I've been using this library for quite a few years with excellent results. There is a free version with some restrictions on the number of rows and sheets per workbook. 
I am also in the "always use braces" camp, for the debugging argument. Also, I like to keep the physical "structure" of the source code the same; by always adding braces, you can ensure that you always have a statement block to add to without worry. 
I agree with this answer. I shudder at the malevolence that could be created through the ability to run embedded EXEs directly from the embedded resource. :)
Rule #1 when creating any multiplayer game: Never trust the client. Case in point for DarkAutumn's "lying about stats" argument: Diablo 2 did this, letting one of the players be the host. what ended up happening is online worlds where the bosses were the only mobs that spawned. If you're just dealing with stats, though, you can implement some form of scorekeeper functionality. For example, when a match ends, you can have every client send their version of the win/loss stats and compare them on the server. That way you can have a decentralized host and still somewhat trust the data. Just be careful what you share with the clients. On any game I own on my PC, I can see every single variable you send me. Memory is not sacred. The only way to keep something hidden from a client is to not send it to them.
As far as I can tell, there are only samples available for download - not the whole book.
look at /u/foamz 's [response](http://www.reddit.com/r/csharp/comments/21o6ce/help_with_a_c_programming_assignment/cgez85t)
I have never developed server applications, so would you be able to help me with basics please? Am I required to rent server space in that case? Do I need to develop server application that all clients will be connecting to and then this application passes information to the server? 
For development, you can run both the server and the client on the same computer (your dev box)
Gosh, so all I needed to do was add a ? within the pattern :P Thanks a lot. Could you explain how the patterns work or supply a link with the explanations? Couldn't find a decent website about these too
[Technically about HTML, but it applies to XML as well](http://stackoverflow.com/a/1732454/1118660). Don't parse XML with Regex, especially in a framework like .NET where there are already multiple XML readers in the BCL.
The way I've generally seen this handled is having Position as a property of Worker and accessing the properties down the chain directly: Worker.Position.ID
I would definitely say that you should make the position an object. There are 2 reasons: 1. You should always model independent of persistance. Putting in a link to the ID would infer your Model would somehow need to call a persistance provider to retrieve a position object, whereas if it is a part of the Worker object, it is available without the Worker object needing to know it's persistance One good thing about persistance ignorance is you can always do something along the lines of (again probably not totally well written code, not using VS) var worker = new Worker() { Position = new Position() { ID = 0; Name = "Bob"}}; or var worker = new Worker() { Position = database.getObject(position.ID) } with the same backing model. This allows you to not have to spend 20 days refactoring when you change from MySQL to SQL Server, or worse decide to use NoSQL 2. Second, may not be your case, I feel it makes it much more readable. For example (bad code, so appologies in advance): Cleaner: Worker.Position.Name Not so much: var temp = getPosition(id).Name PS: I have no idea why the formatting is off or how to fix it
Just use Service Stack json library. It will take care of all embedded objects once you serialize the main class, just make sure you have what you need to serialize as public props. Serialize - public getters, deserialize public setters
I understand how it works but I've only really recently started using C# so just need to read and learn it
Yeah, this is definitely one of those times that you avoid rolling your own so you don't have to beat your face against the parser brick wall. Unless you want to know how it work at a detailed level. In which case, by all means roll your own.
Try this : var doc = new WebClient().DownloadString(url); var xml = new XDocument().Parse(doc).Root; var series = xml.Elements("Series"); foreach (var s in series) { Console.WriteLine(s.Element("SeriesName").Value; } On my phone so this might not be 100 percent but close to it. Edit: Note the difference between Element() and Elements(), Elrment() only gets the first occurance of an element while Elements() make a list of them all. Edit2: Changed DownloadFile() to DownloadString()
[The Art of Unit Testing: with examples in C#](http://www.amazon.com/The-Art-Unit-Testing-examples/dp/1617290890) 
Please note that in .NET usually Pascal Case is used. So you should name your methods `GetPositionID()`, and not `getPositionID()`.
learning how to write testable code (single responsibility, isolatable, observable, controllable) &gt; how to write, name, or organize unit tests
&gt; qsync/await supported And it does even support **qsync**! &gt; This version targets the latest .NET and Entity Framework versions. For &gt;= .NET 4.0 and **&gt;= EF5** If it targets EF5 or later, why does the NuGet package list version **6.1. or later** as dependency?
qsync is the next big thing! I changed the README.md on the github repo. It makes more sense now.
Oh damn, this just made my code shorter by quite a bit haha :D Thanks The second line gave me an error, fixed it by changing it to var xml = XDocument.Parse(doc).Root;
But the EF version part you ignored completely. Good job.
i just bought this. It's pretty new so the information is current. It uses nUnit. Very practical
Very useful, and even though the examples are in C# it is definitely applicable for other languages as well.
See also: http://blog.nebraskacodecamp.com/2014/03/why-are-there-no-female-speakers-at-nebraska-code-camp/ http://www.omaha.com/article/20140328/NEWS/140328691/1685#hansen-with-no-women-speakers-on-agenda-code-camp-learned-hard-way-it-s-not-a-techie-boys-club
Absolutely this. Also having a female speaker just for the sake of having a female speaker is also very discriminatory.
Thanks for your support. If you noticed the period you would understand that those are two separate sentences. I moved them to different lines to try to help you realize that different sentences usually intend on conveying different things. &gt; **This version** targets the latest .NET and Entity Framework versions. *The latest being .NET 4.5.1 and EF 6.1* **NEXT SENTENCE** *(Please take special note of the change in sentence)* &gt; For .NET 4.0 and EF5, check out *LINK TO ANOTHER REPO* I used the &gt;= symbol originally to convey that if you are not on the latest version, use this other repo which targets greater or equal to .NET 4.0 and EF5. Thanks again for your patience and understanding. It really makes this sub-reddit feel like a welcome place to post links to your open-source projects.
This struck me as well. Other conferences/organizations have no trouble getting female speakers for their events via an open call for speakers. The question to be answered is this: when you have an open call for speakers, why aren't you getting a diverse group of speakers submitting topics in the first place? Is there something about the event that's offputting to them? What has the organization done to make a wider range of speakers feel welcomed?
It is a catch-22. Just as affirmative action can be considered racist, this can be considered sexist. It is not a completely bad idea though, as many females still feel excluded in the programming community. It may be painful to some now, but if we can improve inclusiveness it will become a non-issue in the future.
Thanks - would you say this should always be done? I couldn't see this happening, BUT I think our job is all about managing change, and if this is in place already it couldn't hurt and ultimately let me adapt more, right? ..At the end of the day, we'll force the user to have to specify what kind of Position goes in by injecting it through the constructor. Thanks very good.
I like to follow the golden rule "Program to an interface, not an implementation", but of course this should be done only when nessacery. If you dont plan see your program changing in the future to let a position be determined by something other than a Position class, then you are good to go with a concrete implementation.
Thanks. Are you familiar with DI containers such as Castle Windsor or Unity?
Yes. I've done a project using unity as our DI container.
I run a code camp in Boise (this weekend actually), been doing this for 8 years. In all those years, everyone who has submitted a session has gotten to speak. Yes, for the first half of those years, we had no female speakers -- cause none submitted session. Then, a few years back one of the women starting complaining that we were a bunch of misogynists that were keeping women out. Explained the same thing to her, then told he to step up and get us some female speakers. Next year we got one. The next we got 2. Then last year happened, and we doubled the number of female speakers...but half of them were kids -- cause we started going to tech high schools and homeschool groups to get their kids to give talks. This year, we have an entires days worth of material for kids. Moral of my story (and you aren't going to like it): forget about this generation of women programers and thinking better outreach will fix things. Let them come to you. Instead, focus on the next generation.
I won't spoonfeed you, but I'll give you a really good advice: Take a look at the [HtmlAgilityPack](http://htmlagilitypack.codeplex.com/) library. This library makes it very easy to parse HTML.
that is reasonable. what i meant to say is that the hard part of testing - where you will spend your time learning and doing - is allocating, exposing, and naming behaviors. when you've figured out testability, naming and writing the test should take 5 minutes.
It's absoutely sexist. No question. 
Came across this while googling stuff. Found another way to do it, so won't be scraping from IMDb's site
Quotes in HTML sources are a _pain in the ass_ to handle in RegEx in C# for some reason. Anyone know why? I've tried stuff like src=\"(.+(png|jpg|jpeg|gif))\" Before and the quotes never seem to match up for some reason. So I end up resorting to src=(.{1})(.+(png|jpg|jpeg|gif))\1 or something similar.
I think it's worth nothing that there also appears to be another version of this book, The Art of United Testing: with examples in .NET. I'm not sure what the differences would be, perhaps they are the same? The examples seem to be in C#. Edit: It seems every single example is in C#.
That was a powerful demonstration.
Can't this just be achieved by: string.Join(yourDelimeter, collection);
I think you're going to have to give us more context. Are you making a request to a server and want to failover to a different server on an exception? Are you writing a server and want to support some sort of failover internally?
Look into a Windows Failover Cluster.
I was thinking the exact same thing
Yes, second this. Very graceful option that directly communicates with Windows cluster service. Failover and resource maintenance is well handled by the cluster service. If your app is on IIS, "crash" the hosting platform to initiate a failover. If you have a custom service, you can write your own custom resource DLL and initiate a failover. However, from experience I can tell you the API, though rich, is clunky. Also, get a handle on your cluster resources and dependencies, otherwise you can corrupt a node. Ex: IIS dependent application, you can corrupt isapi extensions easily if disk buffer didn't flush
I took a glimpse at the first pages of the book and it seems to be pretty solid, just what I was looking for. Can't thank you enough.
With programming, all things are possible. Not the answer you're probably looking for, but need more details about what you're trying to do. Regardless, the answer is yes.
I am hoping this is an april fools day joke that is just a little early. I especially like the part where they ask how much I would pay for this software $1, $5, $10
In regards database connections it is you can edit your connection string to include a fail over partner. I use something similar in work.
Sorry yes, I was thinking if a .net exception occurs?
Third this! It will do exactly what you want. Not the easiest to setup though.
 private void AddDelimiter_Click(object sender, EventArgs e) { // get the sourceText string sourceText = this.ItemsTextBox.Text; // parse out the lines from the sourceText List&lt;TextLine&gt; lines = TextParser.ParseLines(sourceText); // locals int currentLine = 0; string delimiter = this.DelimiterTextBox.Text; // if there are one or more lines if (ListHelper.HasOneOrMoreItems(lines)) { // Create a StringBuilder StringBuilder sb = new StringBuilder(); // iterate the lines foreach (TextLine line in lines) { // increment the line currentLine++; // append the line sb.Append(line.Text); // if this is not the last line if (currentLine &lt; lines.Count) { // Append the Delimiter sb.Append(delimiter); } } // Set the Del string delimitedItems = sb.ToString(); // copy the results to the clipboard Clipboard.SetText(delimitedItems); // Show a message to the user MessageBoxHelper.ShowMessage("The items have been copied to the clipboard", "Items Copied"); } I like the iterator in the foreach, nice touch.
Check out the source code too.
You can use a try...catch block in order to trap an exception and handle it in a way other than crashing. try { mightThrow(); } catch (ApplicationException ex) { Console.WriteLine("An ApplicationException was thrown!\r\n{0}", ex); } You can chain many catch blocks together if you need to catch different kinds of exceptions, but correct exception handling is a topic too complicated to handle in a reddit comment reply. I suggest you look up try...catch on MSDN to get a better idea how to use it properly.
thanks!
I'm not quite sure what you mean. If you are looking for elements getting added/removed from the dictionary then just write a class that wraps the dictionary and implements INotifyCollectionChanged/INotifyPropertyChanged. If you are looking for the properties of the elements getting changed then unfortunately you're out of luck as far as subscribing once for the dictionary. *However* usually if you're looking for elements getting changed, then there is usually a collection of something that displays those elements. E.g. you have a collection of songs and you're displaying them in a library view (or something). If that is the case, then just implement INotifyPropertyChanged on each of your objects and have each of the items that display it subscribe to notifications for the corresponding object. TL;DR: Just make each of your objects INotifyProperyChanged and listen for their changes.
Ok. I'll start down that path. Thank you very much for your help. 
This is a tool I use outside of Visual Studio, and it is useful for what is described; to take the results of one query and perform an 'In' query in SQL Server. For all of you who make fun of my coding style, this was a simple tool I use at work, if you want to change the way delimiter works it is just source code. Of if you are making fun of he fact that my project asked for a donation, I have 12 open source projects, listed on my web site www.datajuggler.com and since the programs and source code are free I do not feel there is any thing wrong with this. This room is a tough crowd, one would think when you try to give something away most people would say thank you, but I guess manners are a thing from my generation. 
What's popping up an unknown publisher warning? Did you make an installer? A ClickOnce deployment?
If I understood you. You enter "Hello world!!" and want a array with 4 characters each? "Hello world!!" &gt;&gt;&gt; {"Hell", "o wor", "lrd!", "!"} If so, then this could be a *Linqy* solution for it: var str = "Hello world!!"; var groupsOfFour = str.Select((x, i) =&gt; new {Index = i, Value = x}) .GroupBy(x =&gt; x.Index / 4) .Select(x =&gt; string.Join("", x.Select(v =&gt; v.Value))) .ToList();
Yes, given "ABCDEFGH", I want { "ABCD", "BCDE", "CDEF", "DEFG", "EFGH"}.
Using LinqPad: string txt = "Hello world!!"; var result = Enumerable.Range(0,txt.Length-3).Select(i =&gt; txt.Substring(i,4)); result.Dump(); Dumps: Hell ello llo lo w o wo wor worl orld rld! ld!!
http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags To get around using regex, do what AngularBeginner said and use the HtmlAgilityPack. It's a great little library that allows you do treat your HTML resource as a reasonable, decently structured object.
Then it looks like curtis934 has you covered.
Thanks.
you can't get rid of the unknown publisher warning unless you go through the steps to purchase a certificate from a CA such as verisign, or otherwise configure the other people's machines (e.g., through group policy) to trust your self-signed cert (non-trivial). if it's 10 people, and not for money, why worry about the dialog? 
&gt; I can just iterate in a loop and pull out substrings, &gt; Enumerable.Range(0,txt.Length-3) This feels like cheating...
Can you use someone like StartSSL (free signing) to sign an app? Or does it have to be some sort of special certificate that only certain companies do?
It has to be signed by a trusted publisher. You can make your own CA root cert, get users to add that as a trusted publisher, then use the root cert to sign a code signing cert. It's mildly painful and requires your users to trust you enough to add your root cert. It's easier to just buy one from a known commercial CA root but they cost a bunch. In a corporate environment, you can add your root cert via GPO. Google is your friend for how to do all of this.
Would it go away if I used an installer? What about a Clickonce deployment? When they download the file it says "are you sure you want to run this from an unknown publisher"
As far as credits go it would take me about 1 extra yr full time to get a second bachelors in CS, but I would have to pay for it all on loans so that's why I'm not sure if its worth it. 
I think I like this one the best.
When I have to do this, I usually have the server app writing 'events' to a database table. As the client app starts, it initializes with the current datetime, then polls the database to see if any new events have occured, and updates a 'last datetime checked' variable. Given our apps generally talk to SQL servers on-site, response time is in the &lt;1ms range, so 60-100 checks per minute would be possible. Not sure if that's an applicable scenario for you.
looks cost $$. :)
It sounds like you might be considering a MS so that it can open doors for you. While there's nothing wrong with that, you don't really need a Masters degree to be an excellent front-end developer; you can pick up the trade on your own. A quality open-source portfolio should give your work aspirations the boost you seek. By the way, this sub is specific to the C# programming language, and is unrelated to your post. :)
http://zeromq.org Will change your life and do what you want w a few lines of code.
you can develop for HTML5 through a windows like development tool. try VisualWebGui: www.gizmox.com
Get your degree in Business, then apply for a programming position, when I interview people, I just care if they can do the job, a degree in programming doesn't really factor into it for me, I'd prefer an autodidact to an average college drone. They can handle the unexpected better and learn new skills as required. However if I saw they did 3/4 of a degree then dropped out and switched professions entirely it would raise a major red flag for me, personally. 
Alternatively, [rabbitMQ](https://www.rabbitmq.com/) has a nice dotnet library and is pretty much the next fastest to zeroMQ but it has a boatload of features and it's easier to roll out. 
Yes. If your problem is just that, keep track of how much of your desired input you've seen using a finite state machine, and process one character at a time. Use a transition table. If this is part of a bigger parsing problem, then consider using existing parsing libraries.
It depends on how you want to distribute. If you are just doing things in your own network and have extra hardware/VMs available then you can set up a local cert authority that will allow you do avoid the errors as long as you are on your own network. Now if you want to distribute to the world then you must have a cert recognized by a trusted 3rd party. Note that you can individually add any trusted authorities you like however it only prevents the error on your machine. For normal distribution it is best practice to use an authority already installed in windows rather than add a new on. 
What I'm trying to do is very simple, and what I have works very well for now. Mostly wanted to know if what I've done is "wrong".
Honestly, you don't NEED both degrees. The fact that you have one and work exp should be what you need to start working without additional schooling. TBH you have a desirable skillset (I would consider you if your resume passed my desk) when it comes to working with MS technologies as they are often deployed as solutions for business problems. A resource with business knowledge and engineering skills is a boon. If I were you I would just start job hunting as I am not even sure having the second degree will make that much of a difference in the job hunt. In software eng a degree is less important than actual skill and experience which it sounds like you already have. The BA is all you really need. 
If you look a little closer at that Application.Run line, you'll see that it constructs the instance of your form. Generally speaking, I think most people find a Windows Forms app that doesn't just have one "Main Form" that dictates the application lifecycle to be somewhat complicated. Rightly so, as the recommended practice is to create an ApplicationContext class which has far less guidance than the rest of the toolset. Is there something in particular you're looking to do? It might be easier to answer a specific question.
If this is just for debugging purposes, why not just echo the parameterized query and then all the parameter name value pairs? I have a sneaking suspicion that it is difficult to get the full query text for a reason.
I did see that (it takes the new Form as an argument). However, I don't get how you then can reference the form that that function makes. For example, if I wanted to hide the main form, how would I do so? I'm trying to make a login screen and make the main form non visible/changeable... There's probably a better way to do this, but I would also like to have a general understanding of how these forms load/work. I have gotten that the program itself is directly "linked" to the main form (if I make a new instance of the same "main form" and close it, the program continues to run, but if I close the one opened in the Application.Run() method, it doesn't). I'd like to get how the instance of the "main form" is referenced and viewed in the C# code.
Be careful, you might miss your searched position if it starts in the middle of reading the 3 bytes. So if you have something like "MYCODE" you will just miss "CODE" with your solution.
Can you post a snippet of code, there's quite a few ways you could be doing this? Regardless... this post should help you out. You'll probably have to generate it yourself http://stackoverflow.com/questions/265192/get-the-generated-sql-statement-from-a-sqlcommand-object
Here's a very simple example. This is the main method that gets called when I run the program. static void Main() { Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Form1()); } Application.EnableVisualStyles(); does some stuff to set the "the colors, fonts, and other visual elements that form an operating system theme." Application.SetCompatibleTextRenderingDefault(false); does some graphics stuff to render text. The last line that gets called is Application.Run(new Form1()); We are calling the Run() method in the Application class. Run() takes a Form object as a parameter, so we declare a new Form1 object with the Form1() constructor. The Form1() constructor looks like this, notice how it does not have a return value like a method: public Form1() { InitializeComponent(); } Creating a new Form1 object will call the InitializeComponent() method which looks like this: private void InitializeComponent() { System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(Form1)); this.installButton = new System.Windows.Forms.Button(); this.exitButton = new System.Windows.Forms.Button(); this.label1 = new System.Windows.Forms.Label(); this.pictureBox1 = new System.Windows.Forms.PictureBox(); this.installButton.Location = new System.Drawing.Point(31, 327); } This is a truncated version, but you can see that this is where the pieces of the form are actually set up. 
Post edited with code.
 You could so it this way... I don't believe there is a function to output the exact query execution string. string cmd = cmd8.CommandText; cmd = cmd.Replace("@newblah", "'NEWTEXT'"); Console.Write(cmd); This lad wrote a method to do it... http://www.planet-source-code.com/vb/scripts/ShowCode.asp?txtCodeId=7760&amp;lngWId=10
Your approach is fine. If I needed to do this multiple times (comparing a character array to a string) I would probably do something like: public static Boolean IsString(this Char[] array, String s) { if (array.Length != s.Length) return false; for (int i = 0; i &lt; s.Length; i++) if (array[i] != s[i]) return false; return true; } So that I could do: Char[] input = br.ReadChars(size); if (input.IsString("code")) ... 
Some schools offer CS as a two year second degree
You're right, but your example isn't. He would miss the search term if his string was something like "CMYCODE".
such as?
Are the bytes you're reading text? Because if you're only looking at text files, you get a lot more mileage out of classes that know that you're dealing with text. For instance, StreamReader can read individual lines of input and has better string handling capability. Also, which 0 are you looking for - the zero byte, '\\0', or the character zero, '0'? Is the file ever going to exceed ~1MB? Because if it's small, you can just `string fileContents = File.ReadAllText("filename.txt")` and then just deal with the string in memory. (Use .IndexOf("CODE") to find where CODE starts, and then .IndexOf('0' or '\\0') to find the end of the string, and then .Substring() to get from one to the other.)
Parameterized Queries / Prepared Statements don't work like that. There isn't actually a step where the values get substituted in, there are two separate steps: 1) Here is the query, and here is where the parameters will go. 2) Please run that previous query with these parameters: (...) They're basically treated as temporary functions. You can re-run the same query with different values without the performance penalty of having the entire query re-parsed. You can as other have said do a string replace (or use a slightly clever regex replace that can pull on the parameters collection) to get what it would be without a prepare. That'd still suffer from injection issues of course. Alternatively you could just trash the idea of running queries entirely and pick an ORM that you like. Most of them support MySQL.
Your VB6 instincts will work against you here. I say this as someone working C# in a shop full of former VB6 people. Instances of forms are instances of objects just like everything else. If you want to be able to get hold of your main form, you need to cache a reference to it someplace accessible (no different than if you had an object representing some data, or your database layer). You probably also need a better understanding of how WinForms works - Application.Run starts the message pump on the UI thread. If you don't know what that means, don't worry too much yet. What's important is that 1) the Run call doesn't return until your application closes, and 2) the thread that calls Run becomes the UI thread (which is very important when you're doing multi-threaded stuff and want to update the UI). Internal to the workings of Application.Run, it knows which form it was passed and marks that as the main form, and then closes your application when that form closes. Making a new instance of your Form class is like creating a second window, not a new way to talk about the first one. As to how to hide the main form, the answer is: Do so by calling Hide() on it, or setting Visible = false, from the point in code where you want the operation to occur. Consider setting up shop in the Load event handler on your main form, and making your logon window call from there as a modal window (ShowDialog). Alternately, do the logon before calling Application.Run at all, so that you can make your authentication decisions before starting up your application proper. You can still get away with this using ShowDialog, because (more internals stuff) ShowDialog starts a private message pump just for the dialog window, in effect acting like a mini-Application.Run.
 byte[] bytesToLookFor = new byte[] {0,0,0,0}; string fileContents = File.ReadAllText(path, Encoding.ASCII); int start = fileContents.IndexOf(/* "CODE" */ Encoding.ASCII.GetString(bytesToLookFor)); int end = fileContents.IndexOf('\0',start);
Awesome, these both sound like what I'm looking for. Thanks!
Recording a query with parameters baked in for anything other than debugging or logging tells me someone wants to run it. And running a query with parameters baked in sounds like a screaming nightmare of validation, sanitization and security holes. I guess all I can do is wish you the best and strongly urge you to scream and yell at whoever's telling you to do this.
I would recommend using a task scheduling library like Quartz. It will easily scale if this application ever gets new features. http://www.quartz-scheduler.net/
You can use a DispatcherTimer: DispatcherTimer dispatcher = new DispatcherTimer(); dispatcher.Tick += new EventHandler(handler); // Your thread dispatcher.Interval = new TimeSpan(0, x, 0); // Called every x minute dispatcher.Start();
If it's a Windows Service then you can just use a Timer, no need for the DispatcherTimer as there is no UI. Besides this detail, this is the approach I would use.
**Note: I am not a web developer and my experience with MVC is largely via blogposts and anecdotes. I could be completely and totally incorrect.** Unless something has drastically changed in MVC recently, *everything you're writing in C# is running on the server*. The only way this wouldn't be the case is if there's some incredibly clever translation layer that's compiling your C# to JavaScript instead of an assembly.
Both the controller and the view are executed on the server. The only code that will ever be run client side is JavaScript. The model, or view model as you called it (as opposed to a domain model, and not to be confused with a viewmodel in MVVM) is a language shared between the controller and the view. A request comes in, it is routed to a controller, which generates or gets a model, passes that model to a view, the rendering engine creates HTML from the view, and returns an HTML response to the client. TLDR; MVC is entirely server-side.
Imagine it like this... you call a controller selecting the user details method. This method has a view called user details. this view is passed a view model containing the users details. When the controller is called, it fills the view model with information, and passes it to the view. When the view is loaded you can have code in your view to populate the contents of the view model, the users details, onto your page. then the view is displayed. So it's almost like a html page that on load calls an ajax function which returns info from which you can create dom objects and populate your page... kind of, sort of, but not really. :) hope that helps!
This is a great way to imagine it, but is pretty far from reality. There is no AJAX involved unless you choose there to be, views are turned into HTML on the server side before they reach the client.
yup, i was just trying to help him get his head around it.
 public partial class Form1 : Form { const int ROWS = 5; const int COLS = 5; int[,] evaluation = new int[ROWS, COLS]; string[] peerEval; string[] names; public Form1() { InitializeComponent(); } private void Form1_Load(object sender, EventArgs e) { StreamReader names, peerEval; names = File.OpenText("snames.txt"); peerEval = File.OpenText("peerEval.txt"); while (!names.EndOfStream) { listBox1.Items.Add(names.ReadLine()); { // double projectGrade; //projectGrade = double.Parse(textBox1.Text); } } } private void button1_Click(object sender, EventArgs e) {
What exactly is the problem you are having?
I'm not sure how to connect the names in my list box to my 5x5 matrix in my other file. 
If memory serves you need to call Start on the timer for it to actually begin ticking. EDIT: I was thinking of System.Timers.Timer instead! Try a smaller timeout for testing and make sure you keep a reference to your timer somewhere other than a local variable so it doesn't get collected.
Can you reply to comments it making it hard to help you? Based on the code you posted [you are trying to assign StreamReader objects to variables that are declared as string arrays](http://msdn.microsoft.com/en-us/library/vstudio/system.io.file.opentext). You might want to read up on basic File I/O. You use the StreamReader to build your matrix.
As others have said, MVC pages are mostly generated serverside, any client side components are going to be JScript embedded in your page template or included in it. In general the workflow goes like this: * Request for URI is received * Route Config is used to determine the correct controller and method * Controller method is called * Returned View object is used to build context data and map to the stored template(s) that represent the page * Razor processor takes the provided context and page template and generates HTML to return * View is returned to client generally as ASCII text of some sort. What makes things confusing when building an MVC app is when you have both full page functionality as well as sub page dynamic updates like RSS controls or what have you. While doing a dynamic web app with MVC is possible it just gets a bit confusing. As a result Microsoft has introduced [WebAPI](http://www.asp.net/web-api) which allows for the easy creation of RESTful functional endpoints. The general idea is to use this framework in concert with MVC where MVC is responsible for loading and maintaining the UI, templates, etc and WebAPI is used to provide all the core functionality. 
For posterity's sake, here's what I implemented: //main System.Timers.Timer timer = new System.Timers.Timer(); timer.Elapsed += new ElapsedEventHandler(OnEvent); timer.Interval = 300000; timer.Enabled = true; Console.WriteLine("Press \'q\' to quit."); while (Console.Read() != 'q') ; }//end main private static void OnEvent(object source, ElapsedEventArgs e) { callThisFunction(); }
yes, I guess I'm in way over my head. I'll go back and re read my notes. Thanks for the help anyways
Maybe dumb question but why not run it from a scheduled task? That way if it craps out for any reason it will run again automatically on the next interval. 
I am not sure if this is the part you're having problems with, so excuse me if I'm writing about something that is already trivial to you :) &gt; The model's variables can be accessed by both the controller and the view, but I don't really understand where / how this interchange of information is happening, or where the model "lives". Model (or view model) is passed from the action method to the view builder, which runs your view file as a function with parameter: your model. Model stops existing at this point. When you submit a form, html form is passed from the browser to server and model is recreated from the sent data. Less concise version: When you run MVC action, you return data for the view using e.g. return View(viewModel); // or partial or json... When you return from this method, control goes to another part of the stack - view builder. View builder runs compiled View file (like a normal function) and passes the viewModel your action returned. This happens server side. Now, IIS sends compiled html to your browser. If view has a form based on the model (what is typical), you get a html form with fields named, typed and filled in with viewModel's field names* / types and values. When you submit the form, you get list of pairs of strings send by http - name &amp; value. Mapper tries to connect the sent name/values to parameters of your action (e.g. view model) and runs the action with created view model. If this sounds eerie, here's how to get it right: when you open some edit page, look up HTML form and see how are names correlated to your viewModel. When you submit the form, look up browser's developers tools, the network part (or Fiddler) - and inspect the content of a POST query - this is the data the model mapper uses to recreate new model object for a new action run. \* that's actually not true, it all depends on how you build your forms - you may build them using @Html.EditorFor, but you may build them using @Html.Editor (in which you write what name, type and value should the form field have) or just simple html &lt;input type="text" name="item.Name" value="nothinggg" /&gt;.
Let me introduce you to my friend http://stackoverflow.com/
Let me introduce you to my friend http://stackoverflow.com/
Sorry, not going to do your homework for you.
Let me introduce you to my friend http://stackoverflow.com/
Let me introduce you to my friend http://stackoverflow.com/
Let me introduce you to my friend http://stackoverflow.com/
Where do you think I found the aforementioned solution? I frequent the site. Generally they frown upon open-ended questions like this, I figured this was a better place for a more casual discussion on the subject.
I'm not familiar with Project specifically, but I'm no stranger to Office Automation. Have you tried modifying the [Tasks property](http://msdn.microsoft.com/en-us/library/ff865169.aspx) of [Application.Selection](http://msdn.microsoft.com/en-us/library/ff865971.aspx)? Specifically by calling the [Tasks.Add](http://msdn.microsoft.com/en-us/library/ff865929.aspx) method?
Tasks tasks tasks! Here the Token is a private property that lets you control the life of the service, our cmdline app (think ctrl-c). Just implement 'Run'. This should run in a single thread with a few tasks running in said thread if all goes effectively. public virtual void Start( TimeSpan interval) { _token = new CancellationTokenSource(); Task.Factory.StartNew(async () =&gt; { while (!_token.IsCancellationRequested) { await Task.Delay(interval, _token.Token); if (!_token.IsCancellationRequested) Run(); } }, _token.Token); } public void Stop() { _token.Cancel(); }
Didn't think about this, I'll have to fix that. Thanks. :)
Probably should have clarified that's it's not only text, and can be very large files which would be impractical to load into memory. 
I did something similar, where it moves the reader to right after the first occurrence of whatever input I give it. Thank you :)
i'll look into signing
Build it with command line options if you need to. Design it so it does the job and exits. And just use Windows Task Scheduler instead.
There are so many good ways of doing something this simple that are built into the framework, I can't imagine why he would need a third party solution.
I learned the hard way that system timers timer won't gc properly most of the time. I have to have a .Stop() and a .dispose() on them just to be sure. They're my favorite timer for that reason. Windows.forms.timers feel sluggish (good for guithread operations) and threading.timers usually ends up giving me race condition headaches. 
I learned the hard way that using Task Scheduler and a console app was better than writing a .Net windows service. My app (service) was using a 3rd party COM component, which I couldn't get to clean up properly after each cycle. It was a PITA as it would start behaving really strangely and doing strange things from time to time. I couldn't get to the bottom of it. In the end I wrapped the code in a console application and ran it using Task Scheduler. The process died after each cycle, ensuring all items were cleared up properly upon completion. Problem solved. A good writeup on the reasoning for using Task Scheduler can be read here: http://weblogs.asp.net/jgalloway/archive/2005/10/24/428303.aspx 
What would you summarize the major differences between a veiw model with MVVM and a model in MVC? I have started to learn MVVM and really am enjoying it but best practices often escape me. 
So if i use AngularJs with MVC will it be MVVM? Also while i am at it can some one point me to an good example of MVC that use a DAL. And how EF fit in to all this?
I like this solution. However it seems a bit too complicated compared to using a timer (which is used by Task.Delay internally anyway).
Look at using System.Net.Sockets and System.Threading. EDIT: Found a good example here: http://tech.pro/tutorial/704/csharp-tutorial-simple-threaded-tcp-server
Do you actually need server to client? (i.e. event publishing) or are all of your calls initiated by the client (i.e. a standard client server architecture) If the latter, check out the AspNet WebApi- you can get a rest service up and running quite easily with that: http://www.asp.net/web-api If the former, I'm less familiar with what the current best of breed event buses are- maybe someone else can chime in. (But you can always at least use use WCF)
Well the point of my question is to avoid having to work with sockets and threading altogether and have a fully working messaging system that I can just use without reinventing the wheel.
I apologize. I misunderstood the question.
Depending on your application, WCF might just do the trick...
Can you show us the C# code you already tried?
I don't have exactly what I typed, but here is what I was referencing when trying to modify it to match what I needed. [Stack Overflow: How to read value of a registry key C#](http://stackoverflow.com/questions/11727239/find-registry-key-value-and-return-registry-key-value-path) This is as close to what I needed as someone else was trying to do. What I need my code to do is search for an IP Address (172.28.1.253) in a specific Registry Location.. Then if it finds it, to add 2 registry keys to the location; however if it doesn't find it, then it needs to fail and provide an error message telling the user that the script has failed. The difficult part is, each LAN Port has it's own ID and is different on every machine.. So I can't narrow down any farther than "HKLM\System\CurrentControlSet\Services\TcpIp\Parameters\Interfaces" because the next SubKey is always different. Let me know what else I can provide.
I'm not sure what you are trying to do.. Read the registry for keys and trigger updates is it? 
What I need my code to do is search for an IP Address (172.28.1.253) in a specific Registry Location.. Then if it finds it, to add 2 registry keys to the location; however if it doesn't find it, then it needs to fail and provide an error message telling the user that the script has failed. The difficult part is, each LAN Port has it's own ID and is different on every machine.. So I can't narrow down any farther than "HKLM\System\CurrentControlSet\Services\TcpIp\Parameters\Interfaces" because the next SubKey is always different. Let me know what else I can provide.
Oh, I forgot RudyMQ on Nuget and github.
Thanks, here is a sample project for reading and writing registry keys: http://www.codeproject.com/Articles/3389/Read-write-and-delete-from-registry-with-C Perhaps this may help?
Yeah, that is far more helpful than anything else I was able to find. I will look this over and try a few things. Then once I get a few trial scripts wrote, maybe I can post back with something closer to what I need if I can't get it worked out. Thank you. 
Do sure, seems like an interesting project!
Why do you need it in a c# console application? I'd convert it to a powershell script.
I guess the best way to describe it would be like this: When you make a c# .net console application you're making an application, it has to be compiled and then runs. With powershell you're basically making a .net script that runs similar to a batch file. No compilation needed and the end result isn't an executable. It's just a script, similar to the batch file but you can use all the same .net runtimes, references, libraries, etc You can even make forms and whatnot with powershell so its really pretty "power"-ful =P
The `TCPNoDelay` and `TcpAckFrequency` ? If you want to enable/disable that, the easiest way is using the [`TcpClient.NoDelay`](http://msdn.microsoft.com/en-us/library/vstudio/system.net.sockets.tcpclient.nodelay) property: tcp = new TcpClient(ip, port); tcp.NoDelay = true; C# gives you many tools to do that job more easily, a 1:1 translation probably is much harder than using those. What exactly do you want to do with that specific interface? You might be interested in the [`NetworkInterface`](http://msdn.microsoft.com/en-us/library/System.Net.NetworkInformation.NetworkInterface.aspx) class 
Your batch file in powershell: (No idea if it really works but it would look something like this) regupdate.ps1: try { if ((Get-ItemProperty "HKLM:\System\CurrentControlSet\Services\TcpIp\Parameters").Interfaces -eq "172.28.1.253") { New-ItemProperty "HKLM:\System\CurrentControlSet\Services\TcpIp\Parameters\" -Name "TCPNoDelay " -Value 1 -PropertyType "DWord" New-ItemProperty "HKLM:\System\CurrentControlSet\Services\TcpIp\Parameters\" -Name "TcpAckFrequency " -Value 1 -PropertyType "DWord" } } catch { "Registry Update Failed" }
Do you know a way to build an "installer" of sorts that runs once and sets up windows task scheduler to execute another application on a set interval?
I'm going to try this out and see what happens. I started looking up powershell and it looks awesome. 
So judging by your code it seems you at least have a gist of how to create variables and use some basic controls functionality. You know how many students you will have and you know what order the data will be in based on what you've written above. stud 1 [1.0,0.8,0.9,1.0,0.6] stud 2 [0.2,0.9,0.5,0.6,0.7] stud 3 [0.5,1.0,1.0,1.5,0.9] stud 4 [0.9,0.9,0.9,1.0,1.0] stud 5 [1.0,0.9,1.0,0.8,0.9] Each of these section have been separated by a space, I've merely outlined them with square brackets for easier visibility. That means you will first want to split it up into sections for each student so you can differentiate which mark belongs to which student. Look up what a "delimiter" is if you don't know. It's the key to do this. A regular array essentially has 1 ROW and you can change the amount of COLUMNs. An array with a length of 4 looks like this: [][][][] A 2D array can have more than just one dimension. It can have ROWs and COLUMNs; hence it being called a **2** Dimensional Array. An array with a length of 4 and a height* of 2 looks like this: [][][][] [][][][] Looking at this you should be able to understand how you might be able to sort student data in it in a logical sense. **The process flow for what you've written:** * Open student evaluation data file * Read information from file; if it's greater than 1.0, make it 1.0. * Put read data into the 2 Dimensional array in a way that makes sense * Close data file when read is complete * Calculate each students average evaluation while ignoring the evaluation that gave for themselves * Calculate project grade 
Well that killed that pretty quick. Our PC image is set to permanently disable running any kind of .ps1 files.. I can't even debug them in the PowerShell Editor.. PowerShell might need to be a personal project for outside of work haha. Thanks for showing that to me, I never knew that existed. 
If a 1:1 translation is going to be too difficult, I will try to explain better what I trying to do exactly and see if maybe you might know a better way to do this. I'll bullet list these in order of how I need to do this: * First I need to search the registry for IP Address: '172.28.1.253' under the following subkey: 'HKLM\System\CurrentControlSet\Services\TcpIp\Parameters\Interfaces' * If that IP Address is found under any of the listed interfaces I want to add 2 registry values to disable the Nagle Algorithm: TCPNoDelay /t REG_DWORD /D 1 and TcpAckFrequency /t REG_DWORD /D 1 * However if the IP Address is not found it needs to fail and say why it failed * Inside my Batch File I have a catch of: 'REG QUERY HKLM\System\CurrentControlSet\Services\TcpIp\Parameters\Interfaces /v /f TcpAckFrequency /s /e' because each of our workstations have several interfaces and they are always differently identified in the registry for some reason, so my 'Reg Add' always has 1 or 2 fails even if it succeeds, so I had to remove the error handler and add a catch instead. * The rest of the code just sends it off to windows update or the error message at the bottom which is the same as the error I posted in the Original PasteBin.
If you run the script on startup/login through GPO it should still run it. The execution policy is bypassed. You can also run it like this to bypass the policy powershell.exe -File script.ps1 -ExecutionPolicy ByPass
Have a look at http://zeromq.org It doesn't do SSL last time I looked, so in these days of NSA it's a no go for me, although I think they are addressing it.
Use a message queue system. MSMQ from Microsoft, or even Apache has a brain-dead-simple (and free) system with .NET managed implementation, the Active MQ. If you need to queue messaging between remote systems/services/apps, look to a message-queue system. You can send serialized objects, xml, json, plain text, or what have you. It's really quite simple and handy as hell once you get familiar with it.
I'll have to try this, probably with a simple file move command before I mess with the registry with this.. Haha.
When it comes to non-standard communications in .NET WCF is considered the best practice. The templates that are in the IDE may leave you thinking WCF is just SOAP XML however it is actually a message format and protocol neutral communications interface for everything from in memory calls to calls to other components an ocean away. One of the nice things is that when using WCF you get a lot of extra options that make troubleshooting these types of things easier such as the ability to arbitrarily change up message format and protocol makes higher level testing and validation MUCH easier. EDIT: Usual reminder, this is a programming sub, if you do not agree, discuss do not down vote, downvoting does nothing to help the conversation or expand knowledge. Besides as a developer you should be able to back up your ideas and if you cannot then don't waste time clicking that down arrow since you clearly lack the time to form a cogent argument. 
Yeah, without details, I'd suggest looking at WCF first. If you need bi-directional messaging (i.e. Client sends messages to server, server also sends messages to client), look at the dual bindings and callback contracts.
[RegistryUtilities.cs](http://paste.ubuntu.com/7200258/) [example code](http://paste.ubuntu.com/7200260/) I wish I could give credit where credit is due for RegistryUtilities.cs, I can't remember where I came across that.
It was the bindings that set them apart all along! Thank you for an awesome response. 
WCF. It's packed with features, and can be used for everything from simple IPC to large, enterprise level services with a variety of ways to host, bind, and configure your services. There is a little bit of a learning curve, but a simple WCF client / service can be set up in minutes, and you can spend years learning advanced ways to manage it. In my work, I use WCF for large enterprise level applications in a variety of ways, hosting in IIS (WAS) and windows services, both over net.tcp and wsHttp. After more than 5 years I haven't run into a case of "I can't do that with WCF" or "that's too complicated in WCF" The one real bane of WCF is the configuration system and the documentation (or lack thereof) for many of the more advanced configuration tricks. Fortunately, you can do most if not all of the configuration programatically if you like.
Wouldn't this line start your email sync program? EmailSync.Program.EmailSyncMain(new string[0]);
#1) I echo /asampson suggestion about breaking out classes (although there are a number of situations which come to mind readily to keep a shallow nest). 1 Class = 1 File, but **not** separate projects. #2) It really depends on the application and who you are. If I'm expecting a lot of visual effects for a prototype (e.g. - webapp) to an executive, then GUI first, functionality second. If it is anything else, I like to define classes with a barebones of methods/attributes as abstractions then work as needed. Get a rudimentary start and then go from there. Either way, the lesser aspect is always in the back of my mind. Also, explain the logic (using comments is fine) before writing code, especially since you're starting to program. This helps with a frame of reference and you can always double check that your logic is nice. &gt;The parameter is the winner of the race. If the dog won, return the amount bet. Otherwise, return the negative of the amount bet My comment block would look like: //If (Winner = DogID) // return Bet //Else // return (-1 * Bet) You might also give some thought to trying out [codingbat](codingbat.com) for some logic practice (Java is similar enough to C# at this level). Debugging, use breakpoints. Don't write everything out to debugger with a Debug.WriteLine(...). Perhaps enter/exit to trace execution flow and a stubborn issue.
First of all, I suggest you update your phrasing. It's not a C# "script" since this word describes an uncompiled series of steps that the processor parses at runtime (javascript, vbscript are two famous examples). C# is compiled code that then executes within threads running on a process. When you compile (build) a Windows Forms application in Visual Studio, you are actually taking advantage of a process which automatically bundles your code up into a executable. This EXE is located in the bin/debug folder in the filesystem of the project. When you run it, it spins up the windows forms framework to run your code. While this is running it is executing on its own process, and all of this is basically handled for you for free (i.e. without you caring). I tell you all this to answer the question "how do I execute some c# code somewhere". The answer to this is another question: Which process do you want to execute your code? This is a function of what you want your application to do. For lightweight applications on the same machine, it's usually easiest to run it on the same process, either within the calling thread, or by spinning up a new one. You would add your target project as a reference and call it like you would any other class. Again for the same machine, if you want the code to continue running once your .exe is complete, you might choose to look into building a windows service. This is a different framework, which runs on its own process. You would then have to deal with how you want to make your calls to and from the service. Finally, if you wanted to make the call on a different machine, I'd be looking at building the service as a WCF, WebAPI, or SignalR server, which can all be built on an IIS server. Those are three major design options, so its good to plan it out now first. GOOD LUCK! 
Its not fully clear what these "scripts" are. C# is not a scripting language and cant be run on the fly like that. It is possible to run on the fly, but the C# code needs to be compiled first. If you already have the source code, it wouldnt make much sense to go that route which would be more complicated. A better way is to do what you seem to have done already, include the other code base(s) into your project. If it makes sense, you can compile those into their own class library (.dll) and use them that way. The EmailSync snippet you gave is most likely made to be run from its own executable. The static void EmailSyncMain(string[] args) would be the entry point to that executable. The args parameter represents the parameters passed in on the command line to the executable (e.g. EmailSync.exe -arg1 -arg2). You can see what that function is doing, and emulate it in your buttonRunSync_Click handler. Alternatively you could compile EmailSync into its own executable, and use Process.Start to run it in its own process.
You have opened a can-o-worms, testing is fantastic to learn and can save you time and make you a better developer but be prepared to change how you think about your program to make things testable. First when it comes to talking about testing you need to know which kind of testing you are talking about as they each have their own challenges and areas of concern: **Unit Testing** Unit testing is the most commonly referered to term for testing code, ironically it is also the one that is most often perverted. A unit test is a test of a single atomic unit of your application. In general this should be a single class. This idea is that you can pull that class out in isolation and run its functionality without the rest of your program. Many folks have trouble designing application classes that are so tightly encapsulated and thus end up perverting the pattern and moving into integration or functional test territory (which I will talk about later). Unit tests is achieved with a framework like NUnit or MSTest and is most often done directly in the IDE with a project named after the library you are testing. So if you have a project called MyStuff.MyApp then your test project will be called MyStuff.MyApp.Tests this project will contain all the test classes. Test classes re-create various behavior scenarios and have an assertion API to ensure that the outcome of various calls is as expected. In general like the project the test class is named after the class it is testing and the methods of the test class are typically each a specific condition test such as running a method or other behavior (like event firing). To simplify unit level testing it is highly recommended to use a object mocking framework like Moq or Mocks so that you do not need to hand write test versions of your implementation classes. **Integration Testing** Integration and/or functional testing is done in the same way as unit tests but rather than atomically testing a related set of classes are loaded and their behavior between each other is validated. **Behavior Testing** This is top level testing of the full system to ensure it meets the top level goals of the system. Normally executed with something like Fitnesse or Cucumber though a fixture class that provides access to your runtime. For the application you are looking to test here I would say unit tests and integration tests are all that is really needed. As far as how to design your application I will encourage you to look up and read about design patterns and the concept of encapsulation as starting points and be hard on yourself to figure out the "right" way of designing things. With regard to making sure all your classes are unit testable and by extension are portable and can easily be integration and behavior tested here are some simple rules you can follow when building your application: * No concrete types. Do not hard-code dependencies like you have between Bet and Guy, use interfaces instead, this makes mocking and porting code 1000x easier * Abstract away all integrations and data access. This means do not implement access to a data store or some service directly in your application, rather have a testable classes designed to do the integration with data or another system. Have them based on interfaces that a can be used by the rest of your app. Repository, proxy and adapter patterns are popular here. * Limit use of "new" keyword in classes - it seems odd but calling new creates a hard dependency to a concrete type. Of course if we never call new without something like a DI container then our code never runs so rather than eliminate the use of the keyword try to limit your use of it to absolute minimum. This rule only applies types within your own codebase. Types exposed by 3rd party or .NET core API's can be created with new at any time. Best of luck.
For the applications I write that need to run occasionally in this sort of fashion, what I typically do is have the program only do it's thing if supplied with a command-line argument. If it is not given an argument, it will launch a configuration window that will configure it's options. Then it will use the Task Scheduler Managed Wrapper here: http://taskscheduler.codeplex.com/ to create and manage it's Scheduled Task item and apply those options. 
What are you having problems with? You start by registering (so you can keep track of your progress) then begin doing the problems. 
Good idea. Thanks
Apache License 2.0.
Dat null propagation doe...mmm, its an ugly syntax but its going to save me from typing out so many conditional statements.
Yes, null propagation is so amazingly awesome, I can hardly contain myself. I need that syntax now. :)
Are you skipping ahead in the book by any chance? I felt that it leads smoothly from one project to the next. If this one is too complex, you can always scale back a bit. Though it may feel like cheating to you, there is the author's answer a few pages later coded with only concepts that have been covered in the book so far. I've peeked a couple times to get the larger projects on course. The way I debugged the racetrack project was to build it incrementally. I didn't leave any functionality out that wouldn't allow the program to run. For example, when setting up the bet amounts and saving them to each Guy object, I would use the debug tool to see the value of each one to make sure it was set right. Then once I had that down, I moved on to displaying that information on the form the way the book requests it. Then I tested that and moved on to the logic that prevents a Guy from placing multiple bets and so on. Basically, I took it step by step and made sure each one worked and built on that. That approach won't work for much more complex programs but for the projects in Head First I think it's an excellent way for a beginner to navigate through.
If it needs to run more then every 10 minutes, i agree. Configuration yes, maintenance, no shouldn't need to touch it.
Help you how? What are you having difficulty with?
I'm not a MySQL guy, but when using MSSQL, I would start a profiler trace and capture the final SQL there. There might be something similar available in your toolbox?
Just curious, how would you improve/make less ugly the syntax for it?
I think they are a new feature for C#6 and didn't exist before. **EDIT: I didn't mean auto properties are new I mean the initialize syntax.**
Wow, these all look amazing. * Auto-Property Initializer, this should have been there a looong time ago. * Using Static member, YES please. * Dictionary Initializers, finally... but it looks a bit cumbersome. * Declaration expressions, goddamn these will be nice to have. * Null Propagation - This is the crowning feature for me, cannot wait to use this. * String interpolation - If this does happen I'd share a similar excitement to the null propagation stuff. Nothing convention shattering like LINQ or Generics, but who cares, quality of life improvements count for a hell of a lot when you work with a language day in and day out. 
Sometimes all you can do is present the best solution you can think of, and then build what you're told. :-)
Long time Windows forms programmer here just thinking about getting started with WPF. Could you give an example of some of these features that Windows forms could never match?
Auto properties is old news.
Dictionary initializers: I thought this already worked?... var dict = new Dictionary&lt;string, string&gt; { { "foo", "bar" }, { "test", "bar" } };
Upvote for an utterly awesome idea. Please build and release. Now. :)
The guy can't call a class. Baby steps here..
This is a great idea! Any intention of sharing this very useful tool? Feel free to PM me. 
What is the one constant in development? Change. That is why maintenence should almost always be a consideration.
Boss said "this LINQ stuff is too complicated" (he programmed maybe a week in his life). So we're bulding SQL by concatenating strings now. Fun.
Thank you for the introduction to RestSharp!
Former EHR dev here, would love to hear more about your new initiatives! Please feel free to PM if you are in the mood to share ideas. Thank you!
if someone knew a way to do it they'd get so many kudos they wouldn't be able to walk without bumping into kudos.
You think that's bad? Can you imagine the VB.NET implementation of it? Judging by the Lambda syntax implementation in VB.NET I'm thinking along the lines of: obj1 IfThisIsNotNothingThenGoToTheNextThingyPleaseOrReturnNothing obj2
My guess would be that the Initializer you're referring to is actually just the [Collection Initializer](http://stackoverflow.com/questions/2495791/custom-collection-initializers) being used with two parameters, as seen [here](http://stackoverflow.com/questions/9570245/create-dictionary-style-collection-initializer-on-custom-class). It calls the respective Add method repeatedly. When I think of actual *Dictionary Initializers*, I imagine them to consecutively invoke the appropriate indexer, which would be kind of a different thing, especially when thinking of custom collections - or other classes exposing a custom indexer. Just a guess, though. Edit: My comment might actually be wrong, see [here](http://www.reddit.com/r/csharp/comments/225g4b/microsoft_open_sources_c_compiler/cgjt36y)
You cannot apply the indexer to a non-exisiting item in the dictionary (it throws KeyNotFoundException) so it would have to use the Add method anyway. But it probably does call Add(KeyValuePair&lt;string, string&gt;) but what advantage would specific syntax (I would say complex as well) do that the old collection initializers don't? I don't see a use case for this that is not already covered.
So what does this actually mean? What are the benefits of this?
I am almost positive it's syntactic sugar for indexed objects like dictionaries, I.e. testDict["x"] would be functionally identical to testDict.$x I have no idea if you'll be able to use either style for any indexed object, but I would bet you will be able to.
&gt; I have no idea if you'll be able to use either style for any indexed object, but I would bet you will be able to. So I'd be able to write int val = myList.$15; instead of int val = myList[15]; ? That would be terrible. Also, what would I do with multi-parameter indexers? Or with indexer parameters without literal representation? I really hope there's more to it.
The compiled it with the previous compiler. But now that its pretty functional, they are compiling it with itsself. Source: http://vimeo.com/84677184
Where does this leave the Mono project? I'm curious to know what will happen with that now that the actual source for the original compiler is readily available.
You'll drive yourself nuts trying to unit test across the object - relational mismatch. LINQ queries against your mock context returning a collection will use the LINQ to Objects provider, not the LINQ to Entities provider. So what you are really testing is that your LINQ expression is valid for a real object graph, but your repository doesn't have a real object graph. In your repository you are writing an SQL query using LINQ as the DSL, and not all LINQ expressions valid for an object graph can be translated from LINQ into valid SQL. End result is that it's possible to have code for which the unit tests happily pass but you run the same query on a real context and you get runtime exceptions. Not a happy thought. One way around it is to initialize test data to an in-memory database and test your database access that way. Check on [Effort](http://effort.codeplex.com/) as a possible solution. I haven't tried every possible avenue of abstraction to avoid just using a database, but I think it's always going to come back to the fundamental idea that we are really just writing strongly typed SQL and no matter how we rearrange our object world data access still has to enter the relational one, and there isn't a way we can fake a relational database engine. 
Ok, thank you =).
You have a great point in the fact that different LINQ providers are used in the testing context and the live context. However I would still argue that some false positives i unit test suite is a better scenario than no unit test at all... I will look into Effort to see if I can get something working with an in memory DB. I don't feel particularly optimistic though. I have had so much trouble getting similar solutions working i the past, but I will give it a try.
Other than less nested curly brackets I don't see any particular benefit either.
I imagine that they'd integrate it into mono itself. I recall mono actually had its own compiler-as-a-service module planned at one point. Roslyn seems more flexible, however, so I'd guess that Roslyn will replace it going forward.
*Nothing. VB.NET using something as concise as Null? That's crazy talk.
A colon? A = Foo:Bar:value;
The only way I can think of is: ?myCustomer.Orders[2].Address?.ZipCode or something alone those lines where you would wrap the potential null exception between two question marks instead of one question mark for each piece. I am kidding about it being ugly... I'll take that over its equivalent conditional statements. Now, for education time, in the example from OP, he does this: customer?.Orders?[5]?.$price Why is there a $ before price? I'm not familiar with that syntax. 
I proposed it in a response above yours. Am I walkin' in kudosville?
Looks cleaner, but I guess from a semantics point of view it's not obvious what it does.
This is the better solution imho
Is that good or bad or neither?
&gt; You cannot apply the indexer to a non-exisiting item in the dictionary (it throws KeyNotFoundException) so it would have to use the Add method anyway. Eh? That's only true for a get, not a set. var dict = new Dictionary&lt;string, string&gt;(); dict["foo"] = "bar"; will work just fine.
https://tldrlegal.com/license/apache-license-2.0-(apache-2.0)
If you aren't even sure which language you are going to use, then this is probably too complicated of a task for now. I would start much smaller. Write a phone app that allows you to move through a few pages that don't do much. Then connect a page to a data source and pull some data.Then add features one at a time until you have what you want. By the time you get there, you will have a much clearer understanding of what you need to know (to be clear, I'm not saying don't do it.. I'm saying do it a small step at a time). 
who even uses "this"?
&gt; If you aren't even sure which language you are going to use, then this is probably too complicated of a task for now. Still counts. You clearly lack the experience.
 Ok, usually in order to get help you need to show what you have done in order to resolve this exercise. Then people will point you in the right direction. EDIT: I removed the resolution after I was reminded what a disservice that was. Paste something you've done, then I'm willing to help. 
Well, I for one, approve.
I've had a similar experience where I was able to do all the projects up until this one. I've taken some time off so maybe I can try going back a chapter or two and redoing things. I'm just getting really frustrated at this point, I was doing okay with c# and I played around with some other languages just to see what they're like. Now it's a few months later and I can't even figure out a basic problem in a book for beginners. I don't know maybe this stuff just isn't for me it feels like it makes sense to everyone else but nothings clicking when I look at it.
 var subject = "From: " + customer?.Address?.Town?.Name ?? "Unknown"; // official var subject = "From: " + customer.`Address.`Town.`Name ?? "Unknown"; var subject = "From: " + customer.~Address.~Town.~Name ?? "Unknown"; var subject = "From: " + customer.?Address.?Town.?Name ?? "Unknown"; var subject = "From: " + customer.!Address.!Town.!Name ?? "Unknown"; var subject = "From: " + customer.:Address.:Town.:Name ?? "Unknown"; var subject = "From: " + customer..Address..Town..Name ?? "Unknown"; var subject = "From: " + customer.?.Address.?.Town.?.Name ?? "Unknown"; var subject = "From: " + customer`Address`Town`Name ?? "Unknown"; var subject = "From: " + customer!Address!Town!Name ?? "Unknown"; var subject = "From: " + customer:Address:Town:Name ?? "Unknown"; I like the second more I think.
So... WITH customer WITH orders(5) On Nothing Resume Next WITH price On Nothing Resume Next 'what was I doing again? END WITH END WITH END WITH
Declaration Expressions and Null Propogation... want! Gimme nowz!
The error message is very clear. You're accessing a null reference, meaning: One of your values is null. Check it. Is e null? Is e.Link null? Is e.Link.LinkData null? First check what is null, then figure out WHY it is null - or better check why you think it shouldn't be null.
Link: http://james.newtonking.com/json
Take a look at the SignalR tutorial here... http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20
I appreciate your comments and understand what you're saying. I was just unsure what languages I could even use for the backend, but it looks like someone provided a link to a tutorial related to my question, so I'll take a look at that.
Thank you!
Wow, I hope this gets fully developed and can eventually be used for all desktop apps, x86 and x64. I wonder how the performance will compare to JIT.
Ahh, I didn't look close enough at the Add method before I linked it. Yeah, that wouldn't work. Given that there's no Cells collection, I think you might be forced to enumerate every single cell. The Project object model looks positively anemic compared to Word/Excel/Outlook. 
That's my point. Who has x,y as DMs instead of _x, _y?
Lots of static analyzers and linters will warn you about that kind of usage.
...did you mean "word" cloud?
It's my favorite license. It allows you to use it without copyleft. GPL is worst license ever because you can't use it in commercial closed source software. Apache allows you that.
I may not understand your question correctly, so let me offer up a code snippet of how I believe one would accomplish what you're looking for. We can iterate on it if I missed the mark. edit: formatting class Point(int myX, int myY) { public int X { get; set; } = myX; public int Y { get; set; } = myY; public int Z { get; set; } = 0; public Point(int x, int y, int z) : this(x, y) { Z = z; } }
Sorry, maybe this is really simple but could you possibly outline how i would go about doing that? thanks for your response.
I'm right there with you. I see "this" used everyday in this way and it bugs the living s*** out of me. Use the underscore as a prefix for DMs, people. 
Yeah, the term is "word cloud", not "world cloud".
This plus Roslyn and c#6 really shows that MS gets it when it comes to language development. I'm looking forward to writing native apps on all devices and platforms in c# one day.
I've never even heard of those but I'll watch them all today (day off) and see where it takes me. Thanks for the encouraging words I really needed them today.
Manually "parsing" JSON? I know he's a noob, but teaching him silly things will do him a disservice. He should learn to do this correctly, including disposing his streams and deserializing the response. @OP - You need to "deserialize" your response from the server, which is in the JSON format. There are many ways to do this, including a serializer built into the framework, and some popular third party ones like Newtonsoft and ServiceStack. This is a very very common thing to do, and it's pretty easy - a hell of a lot easier than trying to write your own "parser". Do some Googling on deserializing JSON web responses.
This would not be legal, in the current implementation the token following the ".$" operator must be a legal name for a property.
Don't do people's homework for them. You are doing them a great disservice. People learn programming through discovery, not copy pasting. All that teaches them to be is a copy paste from Google programer, and we don't need any more of those guys skating by day to day in the real world of professional software engineering.
Not sure what to think. I'm in the process of switching over to node.js for every day stuff, but I'll definitely still be using C# for CPU heavy stuff and this could be a good thing.
Make a class that has high, low, avg, and whatever else you want in it (using the same names) Since you're using .net, you can go to the package manager console, and do "Install-Package Newtonsoft.Json" then using that library it's easy peasy. WhateverYouNamedThatClass theClass = JsonConvert.DesrializeObject&lt;WhateverYouNamedThatClass&gt;(responseFromServer);
&gt; var subject = "From: " + customer.!Address.!Town.!Name ?? "Unknown"; I kinda like this one. Sorta syntacically similar to if (!something) 
You are right, I'll remove that
If you use StyleCop, you use this constantly. I find it helps pick out members without requiring prefixes.
I've decided to throw my hat in with NewtonSoft. Web API uses it, seems to work well with everything I've thrown at it so far.
its a style thing, it is also required in some cases when a class is part of an inheritance chain and you want to ensure the right method/value/etc gets called.
Nothing probably comes from the Haskell Maybe monad that inspired it
Indeed ...
Does it include a debugger and a full-screen editor of some sort? It doesn't have to be a full IDE, but those two are kind of important.
Remember any time you have data look for a parser before writing your own. As clever as you think you might be there are often hidden details in successfully parsing a particular format, leave that work to people who have had them time to deal with it. You use their API and get your goals achieved without caring about how the data got into your object instance. 
because the built in one is very very slow, especially as the data set gets larger. Look at the bottom of this page: http://james.newtonking.com/json Edit: I have a few thousand row data set on a current project, and the built in serializer takes many seconds to serialize, and newtonsoft.json is basically instant.
I just want some help.
I recognize that you are probably new to programming, but the best way is to just dive right in. Start up a new console project with VS2013 Express and just start at problem 1. Syntax/API questions can usually be answered via a quick google/stackoverflow query. You should be able to get through about problem 10 using just pure determination and some googling. Resist the urge to look at others' solutions.
Paste Special as a POCO or use http://json2csharp.com/ Use that as an Entity Framework code-first data model object and auto generate your migration.
I very much agree with this assessment. What's wrong with writing tests against a DB installation meant specifically for testing?
It's not the worst license, it's just different. I'd say the Apache 2 license is way better in this case, but there is nothing wrong with having a library under the GPL. It can help make the free library better. 
Resharper told me not to. 
Wow. What an awesome site. I like
One day? You can do this *now*. Microsoft announced Universal Windows Apps at build as well. One code base, all Microsoft devices. Want iOS and Android? Use Xamarin.
These are notes from the C# language design team discussing various proposed new features of C#. Also, additional features mentioned here like binary literals and nameof operator. https://roslyn.codeplex.com/wikipage?title=Language%20Feature%20Status&amp;referringTitle=Documentation
Problem is that GPL dramatically limits amount of potential users. GPL was good at the beginning of open source movement, when there was not enough open source software and tool to encourage programmers to contribute to open source needed. That tool was GPL, no one could use open source without contributing to it. Now, when open source is a big movement with a critical mass of software and a lot of people support it, tools like GPL are not needed. 