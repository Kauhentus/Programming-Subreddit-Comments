i like it because of the cross-platform versions, I can use the same application with the same UI on windows, or on OSX.
There is also this proposal using a `::` operator: https://github.com/dotnet/roslyn/issues/5444 var fn = string::Trim; would be shorthand for: Func&lt;string, string&gt; fn = i =&gt; i.Trim(); similarly: users.Select(::Age).ToList(); would be equivalent to: users.Select(User::Age).ToList(); and: Func&lt;User, int&gt; age = user =&gt; user.Age; users.Select(age).ToList();
That potentially breaks existing code. There you are creating a variable called `fn` that contains the value of the static property `Trim` on the class `string`. Some new syntax would unfortunately be necessary to represent this.
in python django it would be just (Age)
Very much so. I'd like it to be just a control, or whatever, that you drop into the main page of the application and a one line entry in the web.config file to point it at the server. 
That's true. That always bugged me about java as well. But his complaint was writing them. Carpal tunnel. Not that it was really ugly. 
`::` is already a token in C# to signify the global namespace and `&amp;` is obviously a bitwise operator. I don't like re-using existing tokens for entirely different functions.
he seems to like it.
Some other languages (e.g. Scala) use _ for this kind of thing. So you could have: users.Select(_.Age) I think that's pretty readable, though _ is a valid symbol name, so could be a problem.
Homework?
I'll answer you with a question. Use it to go through your code in mind: What is the value of count?
Is that actually a problem? When I run the following in LINQPad: void Main() { var inst = new MyClass(); MyClass.MyNumber.Dump(); inst.MyNumber().Dump(); } class MyClass { public int MyNumber() { return 1; } public static int MyNumber { get { return 1; } } } I get "CS0102 The type 'UserQuery.MyClass' already contains a definition for 'MyNumber'" It seems like if a static property exists on a class, then an instance method cannot also exist. Thus, no potential for breaking existing code. Please feel free to explain if my understanding is incorrect, however.
It's not an illusion! Breakpoints with conditions get checked every time the line is walked. If you have them in loops, depending on the conditional, you can incur some significant costs. Best just to keep this list clean.
Even better, in Scala, you can use it for multi-argument functions and each usage of the underscore will be a different argument. Example: // Instead of users.sortBy((a, b) =&gt; a &gt; b) // use: users.sortBy(_ &gt; _)
Why? Your example uses more characters than the actual c# implementation
Any chance you can copy and paste your prompt? Yours is a bit confusing.
AutoCompare handles cycles for example when you have a structure that lets you do Parent.Child.Parent, it will compare the parent and the child only once. (I think that's what you meant) I'm always happy to hear about new use cases that I could add support for, don't hesitate if you have other concerns or ideas! 
That's exactly what I meant, yeah. A lot of libraries just throw an exception or overflow the stack in that scenario.
In theory you are supposed to use `Contract.Assume` now. In practice I think most people have given up on code contracts. 
Thanks, that got me there. I still have some work to do, but this is a great start!
You're probably decoding UTF-16 (2 byte per char) data as ASCII (1 byte per char).
Are you reading the file with the right encoding?
Select the line with the error. On the left of the line, next to where you can set breakpoints, an icon will appear. Click the icon, and one of the menu options is related to supressing the warning. It adds an attribute for you that suppresses that particular warning.
Please read my post, suppressing is not an approach I want to take
Could you use [NotNull] on the methods to be explicit about how they work? Usually once you start going down the route of letting R# know about one method you go down a rabit hole marking everything that interacts with it the same way
Whatever was used to serialize it. If I'm dealing with third party schemas I use the XmlSerializer, or do it by hand.
Nope, I wasn't. Another comment here basically gave me the answer, but thanks for helping me to start off on the right track!
Again; this has nothing to do with your [Chrome](https://en.wikipedia.org/wiki/Graphical_user_interface#User_interface_and_interaction_design) (not the browser; the GUI (elements), usually referred to as 'theme'). If there's a difference in size then you may want to check the scaling options ([Pre Win8](http://i.imgur.com/e5u1g6x.jpg) / [Win8 and later](http://i.imgur.com/B5XpEWS.png))
It looks like the difference between Aero and Aero Basic. If that's the case, then I recommend that you don't bother trying to detect it. Aside from the window chrome (the title bar and borders, etc.), there shouldn't be any material difference in the window metrics. If you *are* seeing big differences in the way that window contents are displayed between the two systems, your next step is to check what [DPI](http://www.sevenforums.com/tutorials/443-dpi-display-size-settings-change.html) the systems are running. If they're different, you may want to look into making your application DPI-aware.
My teacher is Indian who speaks little English. He is extremely hard to understand. 
I made it increase count when it entered the while loop and where in my math line I switched code back out for day. 
Thanks for the help :)
&gt;unlock dev device before compile That's only necessary for running it on the phone and literally only takes a minute or so and only has to be done once in three months or so iirc.
I failed a Java test today for that reason alone. Spent 45 minutes fucking around to make "Red" == "Red" return true, I was sure of the fact that every language I ever worked with supported == to compare, that Java would do the same, until I tried .equals and everything worked like a charm... Java mannnn.... I lost a few good years of my life today...
Xamarin.Forms is actually a commercial Xamarin product, but it also has a community built around it that builds on the functionality.
Nobody cares about comment karma.
are you able to make any assumptions? has the image been resized or is it strictly a rectangular subset of a larger image
&gt; Clearly, what the article is missing is a pic of Darth Vader humping a dead cat. FTFY, standards are changing these days.
Maybe you should link to part 1 so we have some context? 
I thought the hosting APIs just let you fine tune when the GC happens. For example, you can turn off the GC and ask for an event that indicates memory is running low. When that happens you remove the server from the load balancer, run the GC, the add it back in. That way no one sees the pauses.
For the most part I usually use a Notebook at a pencil, but If i'm doing UML diagrams I use a program called NClass which is amazing. Database schema I just use SQL Studio Management Studio
A big ole whiteboard. Once its properly designed I'll take a picture. If others are using it, it goes into Visio, otherwise I just refer to the image.
Love balsamiq!! 
Pen and paper.
in .Net the .ToList(); is not needed (unless you were to want to reuse the resulting output multiple times and wanted efficient processing) In Java you need the .collect(Collectors.toList()); because stream is not an Enumerable or anything useful so you have to map it back. So most examples comparing the two show the .ToList() because that's closer to what the java is doing, even though in most .Net implementations you would not do it. 
Quick review: - Player.cs, 12: This is an anti-pattern. Use `Layz&lt;T&gt;` instead, of you really require this behavior. But it's easier to just initialize a readonly static field for the `Random` instance. The cleanest approach would be to retrieve the `Random` instance in the constructor, so this code is testable. - Player.cs, 16: Common naming convention in C# is to name properties as PascalCase (first letter upper case). - Player.cs, 18: Why this constructor overload? I see no added value. - Player.cs, 21: You're always using `Dictionary&lt;int, string&gt;` everywhere for a deck. Why not create a custom `Deck` data structure which derives from or encapsulates `Dictionary&lt;int, string&gt;`? - Player.cs, 27: Your method argument `playerDeck` is named the same as the local property `playerDeck`. This is very bad code smell. Why do you even pass the deck, when you have it locally already? And the comment says "both players", but here I just see one player. - Player.cs, 35: Why is this method in a `Player`? This should be somewhere outside the `Player` class. A `Player` should just "know" his own deck - never the others person deck. This could be something related to a `GameLogic` class? - GameEngine.cs, 8: Common naming convention in C# is to name methods in PascalCase. - GameEngine.cs, 10: What do these Magic Numbers mean? `8`, `9`? (https://de.wikipedia.org/wiki/The_Magic_Numbers) - What happens if an invalid string is passed? - GameEngine.cs, 11: `value` is a language keyword and should be avoided as an identifier. - GameEngine.cs, 27: The exception in the default branch of the switch does not really correlate to the value of the switch. There is no exception message which would make the error any more obvious. - GameEnginecs, 34: This kind of if-else block is code smell. `playerDeck.Count == 0` is already an expression that results in a bool. You can just write `return playerDeck.Count == 0` and scrap the if-else completely. - Default.aspx.cs: This file is a mess. No clear structure... - Default.aspx.cs, 9: You should not avoid access modifier. It is best practice to be as expressive as possible, and this includes always writing the access modifier (even if it is the default one). - Default.aspx.cs, 9: In another file you used the prefix `_` for fields, here not. - Default.aspx.cs, 9: Add some empty lines! This is all so stuffed! - You never check your input arguments for sanity. It is good practice to enforce preconditions. https://en.wikipedia.org/wiki/Precondition - You have no documentation at all, besides a few comments. Start adding proper documentation now, you will thank yourself later! - You have no unit tests at all. Start writing unit tests now, you will thank yourself later! Overall a good start. Keep it up and never stop improving yourself. 
No, you can write your own .NET memory allocator if you so wish, via the _IHostMemoryManager_ interface: https://msdn.microsoft.com/en-us/library/ms164513%28v=vs.110%29.aspx Here is an example: http://community.bartdesmet.net/blogs/bart/archive/2005/07/24/2984.aspx 
Performance is pretty neat I would say. This is also a solution being done at Java shops that target High Performance Trading.
Interesting. Thank you for that.
I don't. I have list of features I want to implement. Then I pick one that I think is most important and implement it. I make sure to refactor my code as much as possible and write automated tests to make sure everything works. I try to follow best design practices (SOLID primarily). All of this will result in my design and architecture evolving into something that fits perfectly the application I'm programming.
The best part of the Telerik NativeScript offering is the Visual Studio integration, as well as cloud builds for those not owning a Mac. It's not free, but it is priced for everyone (39$ per month) - specifically designed to include the indie developer and the next generation of Larry's and Sergey's. Telerik also just released Screen Builder, which is a visual tool for scaffolding NativeScript applications. Mobile dev should not be hard or expensive. It should be fun. That's why NativeScript is open source. So everyone can hack on it. Disclaimer: I work for Telerik
Thank you kind sir. Works a charm. However I did have to convert the videos to .wmv to play them smoothly, but that's a small price to pay.
I've done this multiple times now and it feels completely stupid. How often do people really switch out their ORM and not do a rewrite? In my experiences that's never.
Entity Framework is an implementation of the repository pattern.
A few years ago I was working on a calculation system that used time series data, think array of struct of a double and DateTime. These were crunched against other time series data structures. It became quite interesting to see the impact on the GC, frankly I felt like I was always fighting it. Naive first version of CLRArray with say 2520 elements of that struct had a terrible allocation cost but didn't upset the stop the world mark everything in gen 2 phase. Using a bunch of segmented arrays of these structs soon did start to upset said GC gen 2 marks. In the end I ended up with my own simple manager class that allocated some huge arrays at start up (something like 80% of the physical RAM) and provided simple loading api and then get iterators for them. Often the needs of the project run country to what the GC likes.
Unfortunately, GDI+ is really slow, especially with things like drawing text. Considering you are doing a genetic algorithm, you should already be doing heavy multi-threading generating new generations. You could possibly use [Lock Bits](https://msdn.microsoft.com/en-us/library/ms229672\(v=vs.90\).aspx) and work on the raw pixel bytes. You can also do this multi-threaded if you can split the drawing up into subregions. In conjunction with lock bits, you could use a more compact [PixelFormat](https://msdn.microsoft.com/en-us/library/system.drawing.imaging.pixelformat\(v=vs.110\).aspx) if you only use a limited number of colors. 
I don't see how "select" makes any sense: In SQL it makes kind of sense, since it selects columns. It still doesn't really make sense, since it can also transform data. In LINQ it almost always transforms or maps data. "Where" is fine, I guess, although I prefer filter myself (having a formal CS education, maybe that's why).
Are you forced to use the method? Otherwise, when you instance the array use { } to set values. 
&gt; I thought this might be a shortcut than browsing websites or reading textbooks for advice. Just a bit of advice, these two things are probably the most important skills you can develop as a programming student, and some would say a programmer.
So further multithreading is my only hope? That's disappointing. I was looking at XNA/Monogame to see if DirectX has some GPU-accelerated means of drawing to a bitmap, but all I found was people with similar issues of slow 2D drawing. I haven't messed with that section of code recently, but I am already using Lock Bits to multithread the evaluation process. Each thread runs a simple loop of checking random pixels on a section of the two images and measuring RGB similarity. the problem I ran into there was that there is no way to read a pixel on a Bitmap without locking it, which meant only one thread could run at a time. This was my final project so in a rush I just copied the Bitmaps 8 times over and gave each thread their own, but that's obviously not the most efficient. I suppose I'll have to rewrite the evaluating and rendering methods completely. At least this time I know about the Parallel class!
5 minutes to write a script as opposed to recreating the application from scratch in another IDE anyway, consuming a fuck-ton more RAM and having an EXE 10 times the size? I love C#, but sometimes a script is the better option when Microsoft screws you. Then there was my idea for a webcam redirect. Awesome there's a Windows API specifically for that called DirectPlay.. oh wait, we *removed it for Win7 also!* MUAHAHAHAHA! *Fuck C# programmers* - Microsoft, probably
Your solution followed the best practice of making your long lived objects last forever. Provided you didn't cycle out those storage objects the GC will work properly. It sounds like the naive attempt played better into the GC's hands. Gen0 collections are *very fast* and don't require any degree of pausing in order to collect. If you can target that collection for most of your objects you'll rarely see serious GC pause issues.
I remember the author addressing this. Do you disagree with his arguments? If so, could you elaborate why? Because those seemed to have merit.
Ah, that would do it. Was it not worth the time to try and break them down? Or maybe restructure your program to use pools for the few larger objects?
It's *never* because there's no return on investment. Last time we had this discussion was over some great desire to provide an abstraction around Log4Net. Did a code review... they were using a logger in like 6 places and only 2 of them were logging at a level that would show up in the production environment, and neither of them gave enough information to understand what the hell actually happened. 
I guess it is "too outlandish" for the mainstream
Yes, however we need to do a "any opbject" transparently. SOmetimes I store "PersonalAccount", other times "SocialNeuralNode". What objects are needed is not known in our case (the only requirement is that they dont have unmanaged pointers/resources/hndls)
that is one of our use cases. we store much social connection data in a "session". Also we store session state in-ram with background disk copies. See NFX.ApplicationModel.Volatile -thats for volatile processes(processes that may restart)
Interesting! Sounds like you did put a lot of effort into trying to squeeze what you could out of the GC. I've only done serious performance analysis on one project so far in my career, so digging through everything like that hasn't come up yet. It's always interesting to hear about the evolution of other people's projects, thanks!
Interesting, I would have thought gen0 pressure would simply trigger repeated Gen0 collections. Sounds like you had a large number of objects intending to be gen0 being promoted when they shouldn't be. Fascinating! Thank you for the response.
You haven't specified the height and width for any of the rectangles, and only one was given a location. So basically, you're drawing a bunch of 0 x 0 rectangles.
I am the most idiot of idiots sometimes, thank you very much :P Now I will go figure out why relocating the third rectangle doesn't work.
Yes. It is pretty linear. You can also increase the "segment" size to 2 Gb, in order not to allocate to many large arrays. It does have an advantage: the database would give you domain object mismatch (i.e. one can not store "MySpecificChildParentCustomerCarObject" in db directly), whereas Pile can 
It probably did work but just rendered as a 0 x 0 like the others, making it non-visible. Edit: I can't remember when paint events get fired, but after initializing the rectangles, you may need to add a call to canvas.Invalidate() to force the redraw.
Like what ????
Can you show me the `populate` method's params? 
That abstraction is supposed to get rid of duplicated query logic and the author said he disliked extension method on DbSet due to it returning IQueryable. You can always just call .ToList() in the extension and make it return IEnumerable. Extension methods (or factory methods) on DbSet are a totally valid way to get rid of code duplication. The other case in point is he wants to decouple the application from the persistence framework. It does not matter whether you add this useless abstraction on top of the DbSet/DbContext, you are always going to need to rewrite something (or most of it).
Damn ,I didn't make a restore pt that time .
Pencil and Paper. For simple project management, https://waffle.io/
A ping or a simple http request for a known document (index.html at the root, etc) should work. A super simple example: try { using (var client = new WebClient()) { client.OpenRead("http://www.google.com"); return true; } catch (WebException) { return false; }
Yea, weirdo stuff like that bothers me. JUST USE IT DAMMIT! Anyway, so 3rd company I did the repository thing for we skipped the abstraction layer and just used the stuff directly. Created our own generator to spit out everything like we wanted it and called it good. I'm not against wrappers, helpers and extensions to make working with libraries for a particular use case easier, but completely abstracting them is a giant waste of time unless you know your project is going to be around for 10-15+ years and go through many technology changes. In all the mostly business software shops I've worked at it's always been determined that giant refactors are worth the time vs tried to build our own framework/abstractions 'just in case'. YAGNI FTW.
I'm not the guy you were responding to, but I have some thoughts. Query logic shouldn't always be consolidated. If I have a method Add which adds two numbers, the use case is to add two numbers. If I have 10 callers I shouldn't have 10 implementations of Add, I should have one. It's only one use case. If I have three different views that populate with a list of customers, one on a Billing view, one on Shipping, and one on a Reviews view, I don't have one use case I have three. This is true even if for the moment the LINQ expression to retrieve each one is identical. While you should never solve the same problem twice, you can't necessarily claim that two problems are the same because at the moment they have the same answer. If they are fundamentally different things changing independently of each other for their own individual reasons entangling them is a mistake. When you start seeing LoadWithInvoice, LoadWithAddress, LoadWithReviews, LoadWithInvoiceAndReviews, LoadWithInvoiceAndReviewsAndAddress.. all that's done is abstract away the expressive power of your tool behind a fragile, clumsy, and more restrictive interface. As to decoupling your application from the ORM.. it really doesn't and it's the textbook definition of YAGNI. You're essentially building an adapter between the Application and the ORM, so if you do ever need to change the ORM (you won't) you have to rewrite the adapter anyway which is as much or more work than not having an adapter in the first place. That's especially true when you consider the time you spend initially building and troubleshooting any errors in your wrapper, which is sure to be leaky as all abstractions are. 
I'm not 100% sure when the GC if ever would close a stream you forgot to close. But it surely wouldn't be immediately which means you have memory that hasn't been deallocated floating around. This isn't great. It could also mean that a database or a file handle is still alive making another call, or process trying to access it fail. Also if you're working with things like excel, you won't close that properly so there's loads of reasons to ensure you properly implement IDisposable.
Well im in 1st year of computer science and we started out with C#. I just need to learn the basic principles and some instances of a expression i didn't understand, thus why i asked for a general definition
Accurate.
The GC will call the finalizers when the objects get garbage collected. However, *when* they will be garbage collected is unpredictable. Usually it happens relatively soon, but it depends on the memory pressure and the GC that's being used. During normal operations it's unlikely that an object will never be finalized, but technically there is no guarantee that the GC gets around to it before the application is closed.
You can play around with various properties of the `Graphics` object, including InterpolationMode, SmoothingMode, CompositingQuality and TextRenderingHint (depending on which drawing methods you're using) to make drawing cheaper. That'll also affect the image quality, of course.
[Here](http://lmgtfy.com/?q=c%23+array) is a good resource.
My book says that f.Text is an expression aswell as new Form(). I don't get that, i can't see the value here
Believe you me, googling questions you have for programming will be the absolute fastest way to obtain an answer for your problems. If you have a beginner level question I guarantee you with almost 100% certainty that any question you might have about fundamentals has been asked at-least 2-3 different ways before you and so many answers exist and are far more easy to obtain on your own. Regards, 
pretty sure you cannot tell a binding type to use a default converter. You need to pass the converter to each binding you want it used in. This is also what anyone sane would prefer so you do not have values randomly being converted without any easy way of telling where it is occurring. edit: if you really want to do this you need to override the default type converter for the object type you want to bind. Here is an example of someone overriding the bool converter. http://stackoverflow.com/questions/19018307/how-to-override-net-type-converters
&gt; YAGNI You Aren't Going to Need It. https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it
This past year I developed an application using the Repository Pattern in MVC - Web API2 . I did it because I read on the web that I should and I just didn't know better. I asked this new guy at work if I should use the pattern and he said no. I asked what I should do instead. He said I should do nothing until he could put together a training session on his recommendation. He wouldn't even tell me the name of the pattern. That was in like January of this year. In April I had most of the project done with the Repository Pattern. Due to budget cuts he's not here anymore. He might come back but who knows. Maybe he'll do that training then. ;-) After the first couple of weeks of development I got a good idea of how the pattern worked. Eventually, it felt so silly. An abstraction from an abstraction so I could maybe someday put in a different abstraction. I came to the conclusion that EF is close enough to a Repository pattern all by itself that I don't need to construct my own on top of it. Throw in some helper classes and do the work in the Controller and I'm set. At least that's what I think would happen. &lt;sad snicker&gt;
You should dispose everything that implements IDisposable. Nothing else is disposable. [This article](https://msdn.microsoft.com/en-us/library/b1yfkh5e.aspx) has the best Dos and Don'ts for implementing IDisposable.
I would argue extension method's are better, your common code can work with more than just the base type. I wrote an example [here](http://flukus.github.io/2015/07/09/2015_07_09-Interfaces-for-Data/). Second and third example.
[AngleSharp](https://github.com/AngleSharp/AngleSharp) is very nice. However, it doesn't support arbitrary XML validation right now, if that's important to you.
I don't know about /u/canthros, but my team is currently using a mix of VS 2013 and 2015, and the project(s) are on framework 4.5. Because of this, we can't use any of the new stuff in C#6 because the developers on 2013 would't be able to compile it. I'll give the new framework a few more months to work kinks out, and then start pushing code changes with a team email saying "you should really upgrade now".
C#6 is usable with .NET 2.0
He addresses this, and yet he wraps a repository with yet another useless repository and calls it "done right". I call bullshit.
He gives clear, good reasons why he does this. That's the point, it's not that it's redundant, he has clear reasons why. 
Yes, but the RyuJIT bugs were causing problems with .Net 4.6 also affected .Net 4.5 *if* you install .Net 4.6 on the same machine, which is delaying upgrading at my current employer.
Serious question. Most of the time, the services and crap that I have to instantiate like this just uses a default constructor. Is there any reason I should use DI for those things?
i was really hoping for declaration expressions :(
&gt; I'm watching the video right now and 5mins in, he actually addresses this specifically. The video is worth watching. He mostly glosses over it though. The argument is basically that because there is shared common code then a repository is needed. There are other, and I would argue much better, way of sharing this commonality without a repository.
#Implementing IDisposable: Let's start with this: You are "in control" of the lifetime of an object if something returns it to you (perhaps you construct it; perhaps you call a factory method) and it should leave scope when the class you are writing does. You should implement IDisposable when you are in control of the lifetime of an object and: * the object represents an unmanaged resource * the object is a type that implements IDisposable * the object is a type that does not implement IDisposable but you may get an instance of a subtype that does * the object represents a scarce managed resource that it is important to free access to There is a specific pattern to use when implementing IDisposable: https://msdn.microsoft.com/en-us/library/b1yfkh5e.aspx #Using IDisposable: It is **safest** to dispose of stuff all over the place. Any time you cannot be absolutely certain the type that will be instantiated in your scope and fall out of use outside your scope does not implement `IDisposable`, it is safer vs memory leaks to attempt to dispose of it. You should always dispose of stuff that you know is `IDisposable` (StreamReader for example), but it never hurts to do it in places where you think stuff could be. So if you are writing some base class in a library and in your base method you call a virtual method that returns an object that is not sealed, it doesn't hurt to dispose of that object: public class Shape { public void Move(Place to) { var mover = GetMover(); using (mover as IDisposable) { mover.Move(to); } } public virtual IMover GetMover() { return new ManagedMover(); } } The implications of that thought sucks (I've been bitten by this more than once now). Good C# code that doesn't have memory leaks is either so full of using statements that it is choking on them or littered with sealed classes and almost none of it is polymorphic. 
Brand new to C#, but would love to be a part of this for pure educational purposes. Can I get an add on slack?
Good luck getting this code reviewed and into production. But yes, your course material is beneath you.
&gt; So I've seen a lot of "disposable patterns" and the MSDN pages or IDisposable and Finalize Use the Microsoft implementation, not the ones you see around on the internet. Those are either wrong, or applicable only in certain narrow special cases. Something that can help identify what needs disposing is the Code Analysis feature of Visual Studio. Pay close attention to these messages: - CA2000: Dispose objects before losing scope - CA1603: Implement IDisposable correctly - CA2213: Disposable fields should be disposed - CA2202: Do not dispose objects multiple times (this one can be ignored once you have assured yourself you aren't doing this) 
yes, but as long as you're using Visual Studio 2015, you can target the .NET Framework 4.5/4.5.1/4.5.2 and still use the C# 6 language features The new language features are not^1 dependant on the .NET 4.6 runtime, as long as you can compile on VS2015 with the new Roslyn compiler 1. http://stackoverflow.com/a/28921749/28659
How do you go about mocking then?
You don't necessarily have to.
Autofac 4 will have DNX support. The built in container should work for basic scenarios but anything fancier they will recommend a third party container. 
Yes, but everyone basically wants to do the same thing and we have the collective resources to do that one thing right once to make it easy for everyone. Yet it hasn't happened.
You can not install .NET 4.5 and .NET 4.6 on the same machine. .NET 4.6 is an in-place upgrade for .NET 4.5 - same as it was for .NET 4.0.
Hilarious. Well, it's a waste of resources (generally) to install old versions od Visual Studio. Exceptions are .NET Compact 3.5 and WinPhone stuff. But for C# targeting regular.NET Framework 2.0 and up installing old versions of VS is counter productive.
Just because you've removed specific functions named Load* doesn't mean you've removed need for that logic. So instead of being named, it should be inline, unnamed and just somewhere where it was needed at the time? I'm just trying to understand. Yes it's a problem that repositories get "generic" sounding loaders/getters first and those tend to explode first to get some specific little additional things for different use cases. In my experience the answer to that has been to have a repo per "sufficiently different" use case. Mostly the same with the basic generics/core functionality, but specific loaders get reimplemented based on what that use case needs. For the record, changing ORM is not going to happen, even DB under ORM is extremely unlikely; especially so in _successfull_ projects. My main concern with keeping ORM behind repo is to keep data access/storage separate and relatively easily auditable. When new access restriction hit entities, access to those can be easily found and modified to heed those. Searching direct accesses to entities from ORM all over the code is not fun.
And then tell us why they are 1000x better than Repository around Repository pattern.
Can you please write automated test for this? Thank you.
Isn't this a bit soon?
99% of the time you don't need to call the Dispose method. The main advantage of the IDisposable interface is that you can use the **using** keyword. using(var o = new MyDisposableObject()) { //... } This way the Dispose method is called automatically and you can control what happens with your object when you start using it (constructor) and what happens when you stop using it (Dispose). It's like a sandwich :). Always try to use the using(...) {...} block for IDisposable classes. The Dispose method practically has nothing to do with freeing up memory.
How? Can you explain more?
Put each sentence on a new line in a text file. My mom drove me to school fifteen minutes late on Tuesday. The girl wore her hair in two braids, tied with two blue bows. The mouse was so hungry he ran across the kitchen floor without even looking for humans. The tape got stuck on my lips so I couldn't talk anymore. The door slammed down on my hand and I screamed like a little baby. My shoes are blue with yellow stripes and green stars on the front. The mailbox was bent and broken and looked like someone had knocked it over on purpose. I was so thirsty I couldn't wait to get a drink of water. I found a gold coin on the playground after school today. The chocolate chip cookies smelled so good that I ate one without asking. Then dump that text file to an array. string[] sentenceReadAll = System.IO.File.ReadAllLines(@"H:\Desktop\slist.txt"); Using Random(), to generate a random number between (First sentence -&gt; Length.of.Array (10 sentences)) Console.WriteLine(string.Format("{0}",sentenceReadAll[rnd.Next(1, sentenceReadAll.Length)])); Code for console application static int Main(string[] args) { Random rnd = new Random(); // random number generator string[] sentenceReadAll = System.IO.File.ReadAllLines(@"H:\Desktop\slist.txt"); string c; // get user input Console.WriteLine("Enter (r) for random or (c) to exit: "); c = Console.ReadLine(); Console.Clear(); switch (c) { case "r": Console.WriteLine(string.Format("{0}",sentenceReadAll[rnd.Next(1,sentenceReadAll.Length)])); Console.ReadKey(); return Main(args); // return to main case "c": // exit break; default: Console.WriteLine("Wrong key input, try again!"); // wrong key press Console.ReadKey(); return Main(args); // return to main } return 0; // exit app }
&gt; thanks this one helped me the most
Other's here have mentioned, extension method's can handle much of it. Another way would be the command/query pattern, which I find achieves nearly all of the goals of a repository in a much better way.
take a look at https://msdn.microsoft.com/en-us/library/system.numerics%28v=vs.111%29.aspx
then the return type should be uint8_t, char isn't always 1 byte 
I've looked at SharpDX before, but never really did much. Thanks for the tip.
More context please.
Yes, that's true, but you don't have to do anything with the memory, it's done by the library. That's what I meant by *practically* (I couldn't find a better word)
Great, kid! Don't get cocky
An e-mail response I got from a coworker when I asked a similar question: "It can require some careful thought about the lifetime of the object, and its resources. * If disposable is to be created and disposed within a single method call, it should be handled with a using statement that begins as late as possible and ends as early as possible (minimizing the amount of time the resource is held open.) That includes things like file handles and SQL statement handles. * If a disposable is created and stored by its parent object and needs to remain available for the lifetime of its parent object, then the parent should itself be a disposable, and should dispose the object in its own Dispose() method. Database connections may be handled this way, although connection pooling makes it cheap to create and dispose new ones as needed. The SerialPort in the fooDriver should be handled this way, assuming that it’s desirable for the fooDriver to have an exclusive lock on the port. * If a disposable is passed in by a caller, it should be left alone. The caller may want it back, and it would be terribly impolite to throw it away instead. The fooDriver itself should be treated this way – it’s the property of its creator, probably the top-level class of the program, and should normally remain intact until the termination of the program. * If a disposable is created within and then passed out of a method call, it becomes the caller’s responsibility to handle it. Calling a factory method is conceptually the same as the creating the object directly, and follows the same rules as above. As for actually implementing Dispose: * Dispose any sub-disposables owned (created and stored, not just borrowed from an external caller!) by your object. In almost every case, this is the only thing you’ll have to worry about. * If you’re holding open any unmanaged resources, clean them up. A .NET driver will normally encapsulate this by implementing IDisposable, but if you’re working with unmanaged DLLs, you may have to do some of this yourself. * Don’t worry about finalizers unless you’re holding onto unmanaged resources. If you are, consider: * Do they absolutely need to be cleaned up earlier than the end of the program? If so, you may have a candidate for a finalizer, but be warned that there are no guarantees on when or if it will actually be run. * Does the code absolutely have to be run, even if the program is already shutting down? If this is the case, even a finalizer won’t save you, because again, it may never be run. Better to just consistently see the consequences of not calling Dispose than to have it work fine every time except once or twice when the finalizer doesn’t get called. * So basically, don’t worry about finalizers. Hope that helps." In addition, dispose of anything that has the Dispose() method, using the guidelines above until you know enough to break them.
New feature hype!
5/3 is equal to 1 with a remainder of 2. Modulo (the % operator) gives you the remainder of a division.
5/3=1 5%3=2 2.0/3.0=.6666667
Ah, the first line explains what I was after, I think I'm on the right track now, thank you!
 namespace ListOfBlocks { public partial class Form1 : Form { // Declare amount of enemies int amountEnemies = 10; // Make the list to put the enemies in List&lt;Rectangle&gt; rectangleList = new List&lt;Rectangle&gt;(); Random location = new Random(); public Form1() { InitializeComponent(); // For the amount of enemies make new rectangles to append to the list // Append all rectangles to the list for (int i = 0; i &lt; amountEnemies; i++) { Rectangle enemy = new Rectangle(40*i,40*i,25,25); rectangleList.Add(enemy); } Rectangle thirdEnemy = rectangleList[2]; thirdEnemy.Location = new Point(600, 600); rectangleList[2] = thirdEnemy; } private void canvas_Paint(object sender, PaintEventArgs e) { // Draw each rectangle for (int i = 0; i &lt; amountEnemies; i++) { e.Graphics.DrawRectangle(Pens.Red, rectangleList[i]); } } } } 
How does this differ from the built in .NET Version object?
False. Garbage collection takes out non referenced (or dereferenced) objects. Calling dispose is just a way to do it sooner if you happen to be creating a large number of objects or need something disposed of quickly.
While the built in System.Version just consists of four 32-bit integers, [SemVer](http://semver.org/) can be a lot more complicated, `1.0.0-beta+exp.sha.5114f85` is a valid SemVer string. Comparison differs between SemVer and the system type too. And since SemVer is semantic, there's lots of possibilities for utility methods too.
The object will always be collected if it lacks any references, *but OS/native resources it may have allocated (which require a finalizer to be deallocated/freed) will persist until it has been - which may be far in the future*. Further, depending on how they're implemented, its possible that such resources may *never* be deallocated, resulting in memory leaks and other resource depletion. This is not optimal! Dispose does this job earlier - as soon as they aren't needed anymore. This is particularly helpful for the case of OS-limited resources, e.g. file handles, open sockets, etc.
Do you think all developers sit on their ass for a year after releasing a new version of their code? C# 6 has been released. They're moving on.
Dispose is used to semi-deterministically (only if called) clean up unmanaged resources. This primarily includes file handles and sockets. If you don't dispose, your file handle or socket stays open longer than it needs to, until the garbage collector realizes the disposable object has no references, decides to free it, realizes it has a finalizer, puts it into the finalization queue, finalizer thread dequeues it, finalizer closes the file handle or socket. If you call dispose, the file handle or socket is closed immediately, and the finalizer is suppressed so when the garbage collector finds no references to your object, it can immediately free that object. When a class implements IDisposable it is expressing that it has unmanaged resources (or it contains fields which themselves are IDisposable) that want to be freed when you are done with them, not when the finalizer gets around to it. There are no memory leaks in any of these scenarios. The only way you could leak memory with managed objects would be to hoard references to a very long lived collection accidentally (which isn't technically a leak since you have references to those objects) or to pin managed objects and never free them (which is generally only done for unmanaged interop, calling a C DLL).
&gt; SemVer also means that (as long as you're using it properly), you can determine whether two versions are compatible (which this library can do via its SemanticVersion.CompatibleWith) method. Ah, that's fantastic!
Calling dispose doesn't necessarilly make any difference with respect to GC.
Well, not all of its features are.
Yes, so after installing 4.6 your 4.5.2 or below programs can change behavior, if Microsoft messed up, which they did in the past with some of the in-place upgrades.
This might help: https://msdn.microsoft.com/en-us/library/hh304368.aspx
There's some detail on compatibility in the [Remarks section for the `CompatibleWith` method][1]. [1]: https://github.com/McSherry/libSemVer.NET/blob/1.0.0/docs/McSherry.SemanticVersioning/SemanticVersion/CompatibleWith(SemanticVersion).md#remarks
It would be helpful if you posted the exact error message you're getting.
Thanks for the tips, but I'd still like a few opinions or tips on how to code certain parts. Mostly whether I should use a class or struct
You probably want a struct. It might be worth your time to go googling for things like BigRational or BigDecimal in C#, though. There is already a BigDecimal implementation available via nuget, for instance.
Circular reference? I say that because I had a similar problem with XML and improperly defined classes. In your case, it might be the 'Category' thing. (I forgets its name) I think I fixed it using XMLIgnore
Dispose is just a convention. It does not affect the GC just because the method is called Dispose.
Your best bet if using IDisposable (if you aren't keeping a persistent instance of the IDisposable object) is to declare it within a 'using' block. This is often done with Database connections, as you won't necessarily want to keep the connection open. Once the program is out of the using block, .NET will call Dispose on the object automatically
perhaps they were talking about reactjs.net, but that works fine with MVC 5. Maybe they were talking about ASP.NET 5, but reactjs.net has supported that since March which I think is pretty solid. But I suspect whoever said it just saw that jsx files didn't have intellisense in Visual Studio and got confused
Yeah. Please post some source code and provide some more context :).
the issue above was a management concern over "wrinkle in the new framework", which was an issue with ryujit, the JIT compiler, used at runtime dev != production, you can develop on your code with VS2015 and C# 6 language features, target .NET 4.5, deploy to production which only has .NET 4.5 installed, and everything is fine As long as you leave .NET 4.6 off of your deployment environment, its fine
Thank you for the question. I made a new one because I needed semantic version handling for some projects, it's a fairly simple task, and because the other few I looked at didn't do things in a way I liked/thought was good. Going down the first few ones written in C# in your link: - [\#1][1] - No capability for custom pre-release identifiers (it seems to only allow a predefined set: `DevelopmentStage` enum, etc), it doesn't look like it compares them properly, and the strings its `ToString` method produces aren't correct. - [\#2][2] - It doesn't seem to support having both pre-release identifiers and build metadata, doesn't seem to have documentation, doesn't compare properly (no factoring in pre-release identifiers), and doesn't validate pre-release identifiers properly (e.g. allows leading zeroes). - [\#3][3] - There isn't anything there. It's empty. - [\#4][4] - Doesn't look like it's a library for handling semantic versions. [1]: https://gist.github.com/yadyn/959467 [2]: https://github.com/cyberzed/SemanticVersioning/blob/master/src/Sleddog.SemanticVersioning/SemanticVersion.cs [3]: https://github.com/mtian/SemanticVersioning [4]: https://github.com/mcgin/SemanticVersionEnforcer
Great I can remove some links :) Thank you for the input.
Ok, sorry. I thought this might be something less specific as in; 'yea, async/await does not do well in BackgroundWorkers unless...." So, I have a function that creates a collection of MenuItems ([this is the app](http://www.blissgig.com/default.aspx?id=21)) based on local file structure. Sometimes the load can take some time in case of a network drive having to spin up. For the past 12 months this has not been any issue. In the past few days I have been integrating YouTube into the app. Their calls use await (understandably) so my MenuCreate function is now async. The local folders/files are still all fine. However, while waiting for one of the await calls the .RunWorkerCompleted function is called. I have several outputs to track when something fires and what is bizarre is the Finally{} is called AFTER that function has already run. I get the "YT 3.5" output, then I get an output from the "MenuLoad()" function and then the "YT 4" output. Hopefully that clarifies. Code is as follows, trimmed to avoid being annoying workerMenuCreation = new BackgroundWorker(); workerMenuCreation.DoWork += (obj, e) =&gt; MenusCreate(LoadType); workerMenuCreation.RunWorkerCompleted += MenuLoad; workerMenuCreation.WorkerReportsProgress = false; workerMenuCreation.WorkerSupportsCancellation = true; workerMenuCreation.RunWorkerAsync(); private async void MenusCreate(string LoadType) { ClientSecrets googleSecrets = new ClientSecrets(); googleSecrets.ClientId = GoogleClientId; googleSecrets.ClientSecret = GoogleClientSecret; UserCredential credential = await GoogleWebAuthorizationBroker.AuthorizeAsync( googleSecrets, new[] { YouTubeService.Scope.Youtube }, "user", CancellationToken.None, new FileDataStore(this.GetType().ToString()) ); Console.WriteLine("Menus Create YT 2; " + DateTime.Now.Minute + " " + DateTime.Now.Second + " " + DateTime.Now.Millisecond); var youtubeService = new YouTubeService(new BaseClientService.Initializer() { HttpClientInitializer = credential, ApplicationName = this.GetType().ToString() }); Console.WriteLine("Menus Create YT 3; " + DateTime.Now.Minute + " " + DateTime.Now.Second + " " + DateTime.Now.Millisecond); var channelsListRequest = youtubeService.Channels.List("contentDetails"); channelsListRequest.Mine = true; Console.WriteLine("Menus Create YT 3.5; " + DateTime.Now.Minute + " " + DateTime.Now.Second + " " + DateTime.Now.Millisecond); var channelsListResponse = await channelsListRequest.ExecuteAsync(); Console.WriteLine("Menus Create YT 4; " + DateTime.Now.Minute + " " + DateTime.Now.Second + " " + DateTime.Now.Millisecond); ..... more code... finally { Console.WriteLine("finally; " + DateTime.Now.Minute + " " + DateTime.Now.Second + " " + DateTime.Now.Millisecond); } } 
For a method to be awaited, it must not only be marked `async` but also return a `Task` and be awaited by the caller. If it's `async void`, it will be executed asynchronously, but the caller cannot await its result and it returns immediately after the first `await`. You can't change this in this instance because you have no control over the method signature and the BackgroundWorker does not support awaiting its event handlers.
But please tell me you did come across division with remainders. 
Yeah, it's been a long time since I last did it though so most of it was way out of my head, this was quite a good refresher
I did not know that.... thank you very much.
Yup, I looked into it. Looks nice. I used BigInteger once on a previous project, while working with 256bit encryption keys. The precision of it is nice but (stupid example): sqrt(2) with BigDecimal takes up a huge amount of space if you don't limit it. (took up 0.5kb 0_o for 1 number) And also, programming this is more of a challenge I set myself. So even if it's useless, I'll make it anyway :)
You cannot declare an array size within a struct, UNLESS it is a fixed size. Per [MSDN Fixed Size Buffers](https://msdn.microsoft.com/en-us/library/zycewsya.aspx). Example of how to populate an array within a structure struct SimpleStructure { public int simpleInteger; public string simpleString; public int[] simpleArray; // No declared size. Must be fixed for declaration } private void button2_Click(object sender, EventArgs e) { SimpleStructure s = new SimpleStructure(); // Create Structure object s.simpleArray = new int[3]; // Declare size outside of structure for (int i = 0; i &lt; 3; i++) // Fill's the array with 0,1,2 { s.simpleArray[i] = i; output.Text += s.simpleArray[i] + "\n"; // show every element in the array in textbox } } You could use a multi-dimensional array within your struct. You will see that the multi-dimensional array is not declared within struct, but during the press of the button private void button2_Click(object sender, EventArgs e) { SimpleStructure s = new SimpleStructure(); // Create Structure object s.simpleArray = new string[4,3]; // Think in terms of x/y or rows/columns. 4 rows, 3 Columns /* y y y x [0][1][2] - [0,0] = Mark [0,1] = Anderson [0,2] = 1 x [1][x][x] - [1,0] = Ardhendu [1,1] = Behera [1,2] = 2 x [2][x][x] - [2,0] = Tom [2,1] = Jones [2,2] = 3 x [3][x][x] - [3,0] = Ewan [3,1] = Evans [3,2] = 4 */ s.simpleArray[0, 0] = "Mark"; s.simpleArray[0, 1] = "Anderson"; s.simpleArray[0, 2] = "1"; s.simpleArray[1, 0] = "Ardhendu"; s.simpleArray[1, 1] = "Behera"; s.simpleArray[1, 2] = "2"; s.simpleArray[2, 0] = "Tom"; s.simpleArray[2, 1] = "Jones"; s.simpleArray[2, 2] = "3"; s.simpleArray[3, 0] = "Ewan"; s.simpleArray[3, 1] = "Evans"; s.simpleArray[3, 2] = "4"; foreach(string str in s.simpleArray) // Get all string in multi-dim array, within struct { output.Text += str + Environment.NewLine; // show results in multi-dim array } } This will display the result: Mark Anderson 1 Ardhendu Behera 2 Tom Jones 3 Ewan Evans 4 Now there is also a way to create multiple Arrays of Struct by creating a new object, which might be what you're actually looking for namespace @struct { class Program { public struct SimpleInfoStructure // Create struct { public string firstName; public string lastName; public int value; public void getValues(string f, string l, int v) // get values to store in struct { firstName = f; lastName = l; value = v; } public void showinfo() // show results in console { Console.WriteLine("First : {0}", firstName); Console.WriteLine("Last : {0}", lastName); Console.WriteLine("Value : {0}", value); Console.WriteLine(); } } static void Main(string[] args) { // create multiple structural objects, not really arrays SimpleInfoStructure info1 = new SimpleInfoStructure(); SimpleInfoStructure info2 = new SimpleInfoStructure(); SimpleInfoStructure info3 = new SimpleInfoStructure(); SimpleInfoStructure info4 = new SimpleInfoStructure(); // fill each object will its own info info1.getValues("Mark", "Anderson", 1); info2.getValues("Ardhendu", "Behera", 2); info3.getValues("Tom", "Jones", 3); info4.getValues("Ewan", "Evan", 4); // show results of each object in window info1.showinfo(); info2.showinfo(); info3.showinfo(); info4.showinfo(); Console.ReadKey(); } } } Will show us these results First : Mark Last : Anderson Value : 1 First : Ardhendu Last : Behera Value : 2 First : Tom Last : Jones Value : 3 First : Ewan Last : Evan Value : 4
ok, it seems I have to ask another piece of this. If I understand you correctly the function needs to be like this private async Task&lt;bool&gt; MenusCreate(string LoadType) { //... do work.... //at the end return true; } Then this would be called like; bool b = MenusCreate("YouTube"); The problem is that I need to call this function with a BackgroundWorker's .DoWork So, after a quick 15 min search, and no answer how to integrate this I thought; "let me bother /u/tweq again, after all I'm already annoying." workerMenuCreation = new BackgroundWorker(); workerMenuCreation.DoWork += (obj, e) =&gt; MenusCreate(LoadType); workerMenuCreation.RunWorkerCompleted += MenuLoad; workerMenuCreation.WorkerReportsProgress = false; workerMenuCreation.WorkerSupportsCancellation = true; workerMenuCreation.RunWorkerAsync(); 
But jsx files DO have intellisense in VS2015.
that GetDiscountStrategyForCustomerType really makes me cringe. I try to solve this using Autofac's auto-factories but I'm curious how others have solved this problem.
You need to await the menu create method, or get the result of the task... bool b = await MenusCreate("YouTube"); or bool b = MenusCreate("YouTube").Result; Unless i'm missing something!
It's Gauche but... cmdIns.Parameters.AddWithValue("@CrockName", ds.Tables[0].Rows[i].ItemArray[1].ToString()); becomes cmdIns.Parameters.AddWithValue("@CrockName", ds.Tables[0].Rows[i]["CrockerName"].ToString()); Figured I would save someone else the effort. 
Windows forms won't redraw while the main thread is blocked unless you explicitly ask it to refresh. public Something() { InitializeComponent(); DoCountdown(5); } private void DoCountdown(int seconds) { CountdownText.Show(); for(int i = seconds; i &gt;=0; i++) { CountdownText.Text = String.Format("Wait {0} seconds", i); this.Refresh(); System.Threading.Thread.Sleep(1000); } System.Threading.Thread.Sleep(500); CountdownText.Hide(); }
Added in that missing semi. This shouldn't really happen in the constructor, but instead be called on the Form's Load event.
The form still doesn't seem to be appearing I've tried to fix it myself but I still can't get it to work
 workerMenuCreation.DoWork += async (obj, e) =&gt; { await MenusCreate(LoadType); } I believe that is what you're looking for.
Basically: My friend was helping me before and he had to leave. I came onto this subreddit looking for help. I said I was new to C# like very, very new. I started today. Someone gave me this script to fix my problem. I want some text to start at 5, Countdown to 0 and then hide. This doesn't do that, so I want to know how to make that
You still haven't said what the problem is. What it IS doing that is incorrect. That being said, I already gave you an answer. There's a fundamental flaw in your for loop, look into that for loop syntax. You also shouldn't be doing this from the constructor. Look into using an event to run your logic after the form loads or is shown. This is much, much simpler than it might sound.
When I run that code through the debugger I can see that the CountdownText.Text does actually count down. It takes exactly 5 seconds for the form to appear on my screen which makes me think that the loop fully executes and then is painted on the screen. The repaint isn't working. You can always use a timer for tasks like this. [See this answer on stackoverflow](http://stackoverflow.com/a/5606372/112397) 
Why do you make a new post, instead of just waiting for a response in your other post? https://www.reddit.com/r/csharp/comments/3p22gk/im_incredibly_new_at_c/ The first answer you got there is partially correct. Your issue is that you're blocking the main-thread with your `Thread.Sleep()`. The form won't redraw when the main thread is blocked. Your `Refresh()` call won't help there. Try Googling on how to avoid blocking the main thread.
I wrote a quick project called [WriteMe](https://github.com/aloisdg/WriteMe/tree/develop) to write README.md file for me. I am lazy sometimes. I am looking to add it to Yeoman.
Why the extra types, can't you just use a `Func&lt;decimal, decimal&gt;`?
Hi! I'm Mosh, the author of this video. Thanks everyone for sharing your views. I need to clarify a few things that have been misunderstood. 1- I'm neither an advocate of the repository, nor am I against it. If you watch the video carefully, at minute 9 - 10, I clearly explain that you don't necessarily need the repository pattern in every single project. I'm a big believer of simplicity and I clearly outline that in my video. 2- My intention from this video is to show the proper implementation of the repository pattern that clearly solves the problem it is designed for. Many implement the repository pattern by declaring interfaces that return IQueryable, which is no different from using a DbSet in the first place. This is like lipstick on the pig, and adds no values. Some of the arguments in the comments refer to "repository around repository" and I totally agree on this. Plus, a repository should not have a Save or Update method, because sometimes you need to work with multiple repositories in one transaction. Then, which one should be responsible for completing the unit of work and persisting objects? That's why the Save method belongs to the unit of work. 3- It is true that O/RMs or even the underlying DBMSes do not change often. But you shouldn't use repository pattern mainly to address this issue. Instead, think of "separation of concerns". Querying logic, eager loading, joining, etc belong to the data access layer, and when you bring this stuff into your services or presentation layers, you're polluting them with concerns that belong somewhere else. The end result is: fat services or fat controllers. And more importantly, when you look at your unit tests, they look even worse. Perhaps, that's when you should stop for a second, and see if repository pattern can be a solution. Again, the repository pattern is not needed for every project. But when it is needed, it should be implemented the right way to get the right value out of it. 
True. Also, why using attributes/reflection instead of a simple dictionary?
Use await Task.Delay(1000) instead of a timer that was recommended. Cleaner code, thread-safe.
What he said. When you use async/await and you await a task inside an async method, that method returns immediately. If you need the result you must return a Task&lt;T&gt; where T is the type of the result you are expecting. You can also return just Task (where no result is returned, but you can still find out when it's complete), or void, which won't return anything obviously, so you can't know when the task is complete. 
I'm failing to see how that's testable. You're not using `IRepository` anywhere. Everything's static. In addition, you've come up with a scheme where the code *using* the repository decides whether it wants to talk to Mongo, Postres, etc. This means that if you want to switch out the repository implementation, every bit of code which uses the repository has to be changed. The standard way of doing this is to avoid static altogether. Have your `IRepository`, `MongoRepository : IRepository` and `PostgresRepository : IRepository` as before. However, use [Dependency Injection](https://en.wikipedia.org/wiki/Dependency_injection) to inject the repository to where it's needed. For example... public class FooService { private readonly IRepository repository; public FooService(IRepository repository) { this.repository = repository; } public async Task&lt;IEnumerable&lt;Bar&gt;&gt; GetSomeBarsAsync() { // ... var bars = await this.repository.FindManyAsync(...); // ... } } Now `FooService` has no idea what sort of `IRepository` it's using. It's up to the thing that instantiates `FooService` to decide whether a `MongoRepository` or `PostgresRepository` is used. Indeed, you can inject a `MockRepository` here to perform your testing. Repeat this pattern with the thing that creates `FooService`: the `IRepository` implementation to be used is passed in from somewhere else. Eventually you reach a single point at the topmost level of your application which instantiates either a `MongoRepository` or `PostgresRepository` instance: this is the point where you decide what sort of `IRepository` to use. Make sense?
You can't update a label's text from another thread. Do something like this string newText = String.Format("Wait {0} Seconds", i); if(this.CountdownText.InvokeRequired) { this.CountdownText.BeginInvoke((MethodInvoker) delegate() {this.CountdownText.Text = newText;}); } else { this.CountdownText.Text = newText; } 
I'm building a Madden Ultimate Team pack simulator as a way to learn MVC: [MUT Watch](http://mutwatch.com)
I'm afraid I don't know of anything off the top of my head, but I'm sure there will be plenty out there. The point of unit tests is that they can be run very quickly, and very frequently. After every little change you make, you'll run the test suite and see if you've broken anything. You'll write tests for every bug you fix, both so that you can be sure you've fixed it, and to make sure you don't break it again in the future. If you have to go and edit a ton of code before you can run your tests, that defeats the point: it slows you down by several thousand times (meaning you never actually want to run the tests because it's a pain in the arse), and it means you're not testing your actual code: you're testing your modifications to make the code testable.
I found what I was looking for. The term is template matching. I decided to use the OpenCVSharp wrapper, which can be found at: https://github.com/shimat/opencvsharp
One major point of unit testing is to *isolate* the code that you want to test. Usually you accomplish that by making it dependent on interfaces rather than concrete implementations. Interfaces can be *mocked*. Any code that uses `Repository&lt;MongoRepository&gt;.Connect()` can't be tested in isolation because it will run the Mongo implementation and try to contact a database. 
I have no idea where you got this idea but it is hilarious.
To the sidebar
SELECT in SQL can also transform data. It's really the only place in SQL where you can transform data at all. I guess GROUP BY might fall under that category as well, but I'm not really sure how to classify that. I might be blurring the lines between USQL and SQL though, because I've worked fairly extensively with something like USQL lately.
If you'd like a great book on unit testing to read that also has C# examples, check out [The Art of Unit Testing] (http://artofunittesting.com) by Roy Osherove.
http://dasjestyr.github.io/swifttailer/ A lightweight log tailer with some practical options
It's because you're not returning to the main gui loop which is the only place the gui gets updated. Can't use Thread.Sleep in GUIs. Look up timers or use async/await with Task.Delay instead. 
Some of the localization stuff looks fucking awesome. I can't wait to try it out on a sample project.
In appdata there is a folder where vs will saves Design-stuff. Delete that folder. That forces vs to recompile your code. Fixed those problems every time for me
Dont use absolute positioning 
Critique is a verb and it can mostly be used interchangably and still make sense. However to criticize is to critique in a negative or disapproving way, and critique usually means that someone is looking for advice or that they've done something and they're not too sure about it and carries with it a much more positive tone. 
I don't think it's really Visual Studio you want to learn. It's C# that you want to learn. Visual Studio is just a suite of programs that are used to edit and run the programs you write (along with many other tasks related to programming). Although it's not strictly necessary, it's the simplest tool to get started with and the only one you'd need at first. An actual C# starting point is: https://channel9.msdn.com/Series/C-Fundamentals-for-Absolute-Beginners (from the sidebar)
**critique** *verb* 1. evaluate (a theory or practice) in a detailed and analytical way.
HTTP 204 is NOT an error. It means your request succeeded but there is no content in the reply.
Thanks for the Video, It was really helpful till about 22:00. They take the datatemplate for the items out of the Listview and move it to a Usercontrol. I tried doing that but they reference the usercontrol with &lt;views:ListToDoItemUserControl&gt; I can follow along to that point, but when I try to do "&lt;views:" it just doesn't exist. This video is not only 2 months old but it doesn't even match up with what I have and I am not sure what to search to get the missing references. Also This Listview thing if really bugging me, is there a good tutorial for using a ListView. There is no spacing between columns meaning whenever one ends the other begins. I want it to look neater and they don't match the headers. [Here is a screenshot](http://imgur.com/DmTVAep) I pretty much want to emulate a DataGrid(sorting and all), which unfortunately is not available in a UWA.
But would it slow things down if I used the code that required that using statement, for example LINQ? Would it be faster if I simply used SqlCommands for example?
Actual system call generated by LINQ and SqlCommands could differ so much it's apple and orange. It's possible to have simple SqlCommands call versus bloated LINQ, but then it's the programmer's fault, not LINQ nor SqlCommands inherent behavior. A fairer comparison will be trying to do trigonometric calculation without calling Math. In such case, Math could end up faster by virtue of being optimized and living in GAC
No. Using directives are syntactic sugar for controlling scope and are in lined by the compiler. For example Math.Round(4.5) will be processed to System.Math.Round(4.5) by the compiler. The directive itself does not compile down to anything in MSIL.
The only thing it will slow down is your IDE due to the intellisense having to load the references for the included directives. Its one of the reasons Resharper constantly wants to remove unnecessary includes and using directives.
My initial reaction was no! But actually, knowing that you need to connect to the database, execute the query and deal with the results is quite useful. I personally wouldn't get too bogged down with ADO.net and focus more on on ORM like Entity Framework -which deals with connecting and executing queries and returns standard .net objects.
I think it is now outdated for the average programmer that doesnt need to know the depths of entity framework.
It can be broken up over a few days. October's challenge runs from October 22 - 27. There is plenty of time to solve it.
I would just like to piggyback on this (if you don't mind OP). I finished the Bob Tabor Absolute Beginners series too and made some small projects. Any help on what to learn next? I really enjoyed the way Bob Tabor teaches, but as far as I know he doesn't have a path of courses to take after this? I have just about the same goals as OP.
I've really enjoyed [this](https://www.youtube.com/watch?v=bFdP3_TF7Ks) series by Bob Tabor. He's a really good teacher imo.
Now you're asking a different question. Just having a using declaration makes no difference. Using two different methods to do the same thing is entirely dependant on the two methods you're using and the thing you're doing. However ultimately, you're dangerously close to v[iolating one of the principles of being a good developer](http://c2.com/cgi/wiki?PrematureOptimization). 
I would personally recommend learning ASP.NET MVC (not webforms), out of all of the available Microsoft technologies, this one is the one which allowed me to understand not only how to make web apps, but also how to generally design code well (Services, MVC pattern, Dependency Injection etc). Look for tutorials online, there should be plenty. Two general programming books I would recommend are The Pragmatic Programmer and Heads Up - Design Patterns. Also, I eventually went through Microsoft Certification which was hard but well worth the effort. I think even attempting this will look good to prospective employers. I am self taught and 6 years on have done really well (and have been very lucky). The thing I put this down to was learning the fundamentals of design (OOP, Design Patterns) to try to understand how it all goes together along with doing my own mini-projects to understand how things work on a practical level. Finally, C# is an awesome language, very practical and getting better all the time.
I know forums were used lol.
Pluralsite.com is a good resource.
Thanks guys that solved it! The full code is over the character limit, but if anyone is interested I can provide it.
So if I replaced my LINQ code with SqlCommand code does that mean I'd be guilty of premature optimisation?
Only if you're doing it for performance reasons (and this assumes that the SqlCommand is slower).
If the only reason you're doing it is for presumed performance/resource use gains, then yes. There could be architectural reasons to do that b the if your just guessing that it will work better, you run a good chance of increasing complexity and wasting your time on something that was never a problem in the first place. The Golden rule for optimizing code is to base your decisions on concrete metrics. Generally just get it working first and then identify any performance issues, if you even have them. 
 Why don't you just import the necessary DLL's using nuget? https://www.nuget.org/packages/System.Data.SQLite/ 
https://www.nuget.org/packages/System.Data.SQLite/ Use Nuget to import it into your solution. using System.Data.SQLite; namespace db_thing { class Program { static void Main(string[] args) { SQLiteConnection connection = new SQLiteConnection("Data Source=filename.db;Version=3;"); connection.Open(); // Do query stuff connection.Close(); } } } 
 As previously said, 204 is not an error but an empty success response. Also, I would recommend you try JSON.Net library for serializing objects to JSON and vice versa. Much simpler and even the defacto standard I think. Further more I would recommend you try the never HttpClient class which is part of the framework and tailored for communicating with REST services. 
So if you just want to use a library that is in another directory, you can configure additional paths for .net to probe when searching for the library by using the probing path setting in your .config file. https://msdn.microsoft.com/en-us/library/823z9h8w(v=vs.110).aspx
Since you are making universals, it installs the app and runs it normally. That's how it was in W8 too. You can just uninstall it and when you go to run it again, it'll reinstall it.
you can utilize the [DbProviderFactories](https://msdn.microsoft.com/en-us/library/system.data.common.dbproviderfactories) class to instantiate a sqlite connection. This can be used for other providers which implement the interfaces in system.data.common. The provider can be 'registered' in app.config/web.config so that way dbproviderfactories can be invoked to instantiate the provider.
https://gist.github.com/ Is a nice place to share code. :)
That's an easy one. Yes, you should. EF is built on top of ADO and even if you use only EF for the rest of your life you will still benefit from understanding the internals.
I'm guessing that there is a reference you are missing, you are correct on that. I honestly didn't really read your full post prior. Sorry. References can be added to to project multiple ways, but I'm not sure what refences you are missing as I don't know what you are using. If you know what references you should have then you can add them by right clicking on the project in the solution window and go to properties, from there you can see references tab. That is where you can add and remove them.
All dependencies are compiled and included (could be used by reflection or something), but at runtime they are only loaded on demand.
Thanks. Looks like I'm missing the reference to Microsoft.Reporting.WebForms. I'm having difficulty finding the assembly. I see the DLL in the GAC. I've installed ReportViewer.exe and am now looking at SQL Server Reporting Services as one forum suggested the assembly will not appear if reporting services is not installed.
&gt; However to criticize is to critique in a negative or disapproving way Well then, not in danish (although some people due tend to think that).
Please don't put connection strings in files. The move away from files to environment variables is because 1. People can't get config transformations right 2. People put secrets in files 3. People don't encrypt the files 4. People write bad code that serves up config files 5. People put their config on github Search guthib for repos with azure deployment secrets in. It's depressing. Please don't use files for connection strings, usernames, passwords, for anything other than simple config which contains no secreats.
Well, since you're developing a game you have the benefit of an event loop you can utilize. Just maintain a running counter for each mousePoint within the event loop, and when you hit your threshhold, toss the mousePoint. It might be easier if you use a Dictionary rather than a list to store the points, so you can easily reference the counter. Something like: Dictionary&lt;MousePoint, int&gt; mousePoints = new Dictionary&lt;MousePoint, int&gt;(); mousePoints.Add(mousepoint1, 0); mousePoints.Add(mousepoint2, 5); ... Then in your event loop, update each mousePoints timer and if you've breached the TTL, kill the object. //within event loop foreach(MousePoint mp in mousePoints.Keys){ mousePoints[mp] = mousePoints[mp]++; if(mousePoints[mp] &gt;= MOUSE_POINT_TTL){ mousePoints.Remove(mp); } } 
What all have you learned from that current book? That would help me develop a plan for you.
And that's only for development secrets. Production secrets should be in environment variables, preferably those for the user profile your code is running under and not global ones.
check and see if the copy local property of the reference is set to true. 
The issue is C# wasn't intended for the low level stuff you are looking at. I highly recommend taking a look at C++ if you are getting lost in outdated documentation. 
Oh by far. The quotes were more of my attitude towards the policy. We really need to switch to an orm but that is a tale for a different day...
You are using the wrong tool for the job. You can hammer a nail in with a monkey wrench, but it's easier if you use a hammer. If you want to code low level and use pointers, use C++. 
I was just looking and even the MSDN [unsafe code tutorial](https://msdn.microsoft.com/en-us/library/aa288474%28v=vs.71%29.aspx) in C# states: &gt; "The use of pointers is rarely required in C#, but there are some situations that require them." Your example is clearly one of those situations. I had no idea securing strings could be such an ordeal, thanks for sharing the article. *Edit: I just remembered I used them in a project where performance was critical. I was drawing to my own memory buffer (byte array) in a 8-bit color format and was performing pointer data copies to draw image segments into the buffer. Just another example of a situation where they might be used.*
There are reasons to use pointers in C# (the BCL uses them extensively) but it should never be you goto approach. I don't agree that C++ necessarily is a better tool for this. It's not like C raw pointers are especially better suited, but C++ has unique_ptr and shared_ptr but if he require these he should seriously reconsider why he's using pointers in the first place. For reading or writing data at arbitray memory locations C# pointers are fine.
Does this work with 64-bit applications? As far as I know AMD64 does not use protected memory, so would this be applicable at all? IntPtr proc_min_address = sys_info.minimumApplicationAddress; IntPtr proc_max_address = sys_info.maximumApplicationAddress; edit: this is from the second link. edit: not that it really matters. I'm just curious as I haven't really done much work with this kind of cross process memory.
I think SecureString generally adds way more hassle than it's worth. If someone has access to the machine in a way where reading memory locations pose a security threat, then there are waaaay simpler ways to get the users password than snooping around in process memory. I bet you could actually simply ask for it with a pop-up dialog.
Why is C# the wrong tool for the job? What can you achieve in C++ in this particular use case that you cannot with C#'s pointers? In this case the application will never own the pointers; it's simply used to marshal data from one application to another. How exactly does C++ perform this task better?
My understanding is that each application receives its own private address space by the OS as part of memory management, and that those values in SYSTEM_INFO are relevant to both 32-bit and 64-bit architectures because they essentially defines the range of the private address space and where it begins and ends. So I believe they differ based on architecture but are still very applicable. *Edit: I'll just quickly add that the values you mention change based on whether you use GetSystemInfo within a 32-bit application or a 64-bit application:* *32-Bit Values: Minimum: 65536, Maximum: 2147418111 (2.1Gb)* *64-Bit Values: Minimum: 65536, Maximum: 8796092956671 (Around 8.8TB)* 
Quick C# pointer tutorial Pointers take this form: Type* ptr; Where type is any *blittable type*. Blittable type generally means value type where all members are also blittable. This means they can be byte, sbyte, short, ushort, char, int, uint, long, ulong, decimal, float, double and any struct that matches the description of blittable. Notice that type inference is not supported by pointers: var *ptr = (...) This is not a legal expression. You have type type out the pointer type. Pointers can take an address of a local variable, or a member of a structure that is a local variable. this is done using the ampersand unary operator. Note that this is *not* the same as the bitwise or logical binary operator '&amp;' since it is used in another context. int foo; int *bar = &amp;foo; Bar will now be a pointer to the address of foo. One advantage of pointers is that the can be cast to different pointers. float foo; int *bar = (int*)&amp;foo; You can dereference a pointer (i.e. read or write to it) using the pointer derefence unary operator asterisk. This is *not* the same as the multiplication binary operator '*'. int foo = 100; int *bar = &amp;foo; int readBar = *bar; This means that `readBar` will now contain the value read from the pointer `bar`. Assigning to the dereferenced pointer will store a value at the location pointer to. int foo = 100; int *bar = &amp;foo; *foo = 200; This will overwrite the value at `foo` with the new value `200`. Pointers also support pointer arithmetic. The rules for pointer arithmetic can become somewhat complex to wrap in complex expressions so use it with some caution. int* ptr = stackalloc int[200]; *ptr++ = 50; This code will write 50 to index 0 of the ptr block and *then* increment the pointer by the size of int (which is 4). Similarily `ptr += 1` will increment it by the same amount. So `(ptr + 5)` will yield a new pointer that is increased by `sizeof(*ptr) * 5` not `ptr + 5`. There is also another derefence operator for pointer which is the postfix indexing operator: ptr[5] = 200; This is essentially the same as writing `*(ptr + 5) = 200;` Pointers can usually not be used together with generics sadly, because there is no way to indicate that a blittable type is required by a generic type argument in the CLR. You can force it through using the Marshal class however.
It's worthwhile to note that C++/CLI exists as well, if you need to write some low-level code that can interop with C#.
I would recommend that you also learn some SQL. When you finally understand how to properly manipulate data, you'll find that you need to save it somewhere. SQL servers are generally where that happens for websites, SQLite databases are where that happens for mobile devices. 
That hurts my eyes. For reading so called "out-of-process" memory I find https://github.com/ZenLulz/MemorySharp as my first option.
You know, I bet everyone could use the same post title "[HELP]", and we'd have one long list of that title down the page. Please try to write a *descriptive* title. Also, please post more details about the problem, like, what did you try? What errors are you getting? Show us the code.
The Namespace you are looking for is System.IO The File class specifically. &gt; ^^Thats ^^all ^^the ^^help ^^i'll ^^give
**Where** are you stuck? What did you try so far? Did you break down the task into smaller parts, e.g. read content of file, parse ints? You said you tried guides from Google - which ones? Where were you stuck with that guide? What did you try to solve this problem? Show some effort when asking for help.
.NET protects memory and doesn't allow direct access to memory unless you wrap everything in unsafe tags. C++ doesn't have any restrictions on direct access to memory. If the APIs you are working with only have C style dlls, may as well use C. 
I had to use pointers as well when dealing with 1 bit per pixel tiffs. The System.Drawing really prefers to work with 8 bit and above. If you edit a 1bpp image it will up convert it to 32 bpp by default. As of .NET 3.5 there was no way to convert the back down without using the SetPixel method, which was intolerably slow. Converting an image that was 8.5" by 11" using SetPixel took over a minute. Converting it by writing directly to memory took 10 milliseconds. 
If you use unsafe blocks you can't sign your assembly with a full trust digital certificate. If you want to use pointers in C# knock yourself out. It's no skin of my ass. But C# was intended to use pointers as a last resort, so don't act surprised when the documentation is sparse. 
Getting a BBC Micro to use it's serial port to talk to a 08086 PC and use it to download applications for school use. I did this as part of my computer studies coursework.
&gt; You ask for advice No, I didn't. I'm not OP. &gt; You've stated yourself that you have 5 months of experience. I did no such thing. I've worked with C# for many years. I made [Platform.Invoke](https://github.com/GeirGrusom/PlatformInvoker) which is kinda relevant to this since it is used to interface .NET with native code. &gt; u/umilmi81 is correct. No he is not. Replacing C# with C++ for this has absolutely no benefit. edit: also, are you and /u/umulmi81 the same person since you both mistook me for OP?
kudos to /u/rogeralsing for making it. ([his post](https://redd.it/3pb9w7) in /r/dotnet)
Python (but only to learn how to make a if/else and a while). I really learn how to develop with C on Unix.
[BRIEF ANSWER CONTAINING SOME SCOLDING FOR YOUR TITLE, PROBABLY WRONG/INEFFICIENT ANSWER, ENDED WITH A "REGARDS,"]
&gt; If you use unsafe blocks you can't sign your assembly with a full trust digital certificate. Which is not really an issue with an application like the one OP is making. &gt; If you want to use pointers in C# knock yourself out. I don't! I have never used pointers in a professional application. I'm saying that for OP's use case it is completely pointless to suggest using C++ instead because it will add nothing except suffering. &gt; But C# was intended to use pointers as a last resort, so don't act surprised when the documentation is sparse. Surprised? What the hell are you talking about? I'm not OP. I wrote [this](https://www.reddit.com/r/csharp/comments/3pakvy/using_pointers_in_c_a_few_questions/cw4wk4y) post. I also work with both C# and C++ daily, and suggesting that an application like this should be written in C++ purely because it required pointers is ridiculous.
Method Block highlighting and Visual Studio 2013/2015 customization extension: https://visualstudiogallery.msdn.microsoft.com/91cb9cc4-13a3-41fe-a3fe-545786a0ceab That's my weekend project. I mentioned it before in September. Since then I've updated it a few times, increasing performance, reducing the size of the library and I've added a few new customization options based on feedback. LGT 2015 version. A version for 2013 is also available on that page.
A Dungeons &amp; Dragons random encounter generator
This. If you don't want to use EF, just go with Dapper. Lightning fast performance and development.
[IntelliDebugger for Visual Studio](http://intelliegg.com/) is an extension of MS VS that simplifies code debugging. I started the project as a weekend project. Now it becomes my main project :) It allows quickly finds any object’s field by its name or value in debug session, save and compare variables, break when an exception thrown *only* from code of Solution. The current version supports C# and C++ languages. I'll release support VS 2015 soon. I would be grateful if you could try it and [write me](http://intelliegg.com/support.html) your feedback. 
A program in VB to generate my bindings for QuakeWorld!
i tried copying some tic tac toe implementation in basic out of a book when i was 7 or something. it didn't work. when i was 10 or so i started actually learning how to code somewhat and i did that by making stupid things like punters and chat scrollers for aol in visual basic. the best projects are things that you will actually use that make your life better in some way.
Interesting concept. Craptacular name, basically impossible to search for.
Meteor Rendering Engine, a real-time 3D graphics engine. On [Github](https://github.com/ccajas1/) and [Codeplex](http://http://meteor.codeplex.com/) This started out as a coding exercise with the XNA framework and then evolved into something bigger over one and a half years. (I have last updated it about a year ago). XNA is outdated now so I would like to eventually port it to MonoGame.
I whittled a wooden frame and some beads for my first abacus. The string was tricky, it was true catgut (RIP Finklesworth). I was 1.751 years old. I know this because, it was just a few hours after celebrating my 1.75 year old birth marker. We had an exotic flan and chortled at that lowly pedestrian some of you know as Mr. Potato Head.
A [robowar](https://en.wikipedia.org/wiki/RoboWar) robot. It ran towards a target and shot a high-energy pellet at point blank. Also my first use of trigonometry. I was 14 at the time.
Text based game à la DrugWars for me and my classmates on TI-83 calculators in 1996
It's definitely feasible and you can hook it up to a self-hosted ASP.NET Web API (runs a server on localhost) and static HTML/JS/CSS resources using a SPA library like Angular to connect to your Web API services. It's extremely fast and easy to develop for. The only downside is the large number of dependency files Chrome requires, wish there was an easy way to package it all up into a single DLL.
Creating an ecommerce website (ASP, vbscript, SQL) for a company. All I knew was HTML. It was just me (this was before stack overflow and google were a thing) but everything turned out well. I learned a lot and it set me on my way. 
BBC Micro when I was like 10 years old. I wrote a magic 8 ball program that had nothing nice to say to you whatsoever. Then we used to try to understand the code of any games that weren't written in assembler, look for %lives and change it to FF and sell copies around school. :D
[Relevant](https://www.youtube.com/watch?v=Xe1a1wHxTyo)
I don't think you can really get around the fact that you're needing to join these tables. I'm also curious what others' approaches to this would be, since it seems like it'd be a common problem.
First Windows Phone Apps (NoDo time) was a dice roller :)
I started programming at work with 0 experience. I still am not very good but I started by automating some reports that are run daily so that the code would do it. I think it's cool but some might call it simple. 
I would think so too. I think it might be because most of the people working with the data might not mind having id numbers rather than names, but I'm not sure. I don't really know anyone I can ask because the only other developer I know is my mentor type guy, who told me to do it this way. It is strange though. They have all id numbers in each table for specific things (in actuality, my page is for log files), then another table that is only for converting the ids of various fields to names, then some others that I need for random other bits. Thanks!
Hello world
I really couldn't tell you haha. I thought the same thing but I don't really know anything about database management at all let alone what motivated the layout they have so I won't question it too much. The problem with searching what is currently paginated is that I think people will usually be searching across the entire dataset rather than just on those ~250 entries, so I don't see a way I can cut down on the number of entries to search/sort besides the filtering I already have set up. I think I might just have to see if I can get those tables merged or something like you were saying. It might be a hassle getting someone do it but that's by far the simplest and fastest solution I think. Thanks!
Pass search parameters via AJAX POST to web service which queries your database. Look up jQuery DataTables
Specifically to the search point, any search will change the data set you're working with so you can almost always safely reload the data grid and go back to page 1
Mine was a TI-83 plus program too! It did synthetic division.
Ha that's what I'm doing. I've already extended the class to pass in what I need, and I have filtering down already from dropdown menus. That isn't the problem. For that, I just pass in the search terms as comma separated values, split them on the controller into arrays, and just do filtering like: query = query.where(x =&gt; filterArray.Contains(x.employee) or something. That works fine because I actually made it so that rather than having a text input based search, there is a dropdown list that allows multiple selections, and it send back the actual id numbers rather than names to the server. That same trick doesn't work for sorting, though. You can't sort by id numbers because then the actual names won't be in alphabetical order. Doing raw text searching also doesn't work if the user only types in part of a field
A VB.NET WinForms calculator when I was around 10.
At this point you need to join the different tables together. This means that your Employee is not a direct data model, and you need entities to represent the employee and name lookup. ----------------- Entities class EmployeeEntity { public int id {get;set;} public string location {get;set;} ... } public class EmployeeNameLookupEntity { public int employeeId {get;set;} public string name {get;set;} } --------------- Models public class Employee { public int id {get;set;} public string name {get;set;} public string location {get;set;} ... } ----------------- "Builders" static class EmployeeBuilder { public static Employee Build( EmployeeEntity entity, EmployeeNameLookupEntity nameEntity ) { return new Employee { id = entity.id, location = entity.location, ... name = nameEntity.name }; } } ----------------- Query ( from employee in context.Employees join name in context.EmployeeNames on employee.id equals name.employeeId select new { employee, name } ).Skip(0) .Take(25) .ToArray() // this "realizes" the query - runs it and turns it into an array .Select( x =&gt; EmployeeBuilder.Build( x.employee, x.name ) ) -------------- Of course, if the names are not actually in the database AT ALL, and just in the dictionary, then change the query to look like this: context.Employees .Skip(0) .Take(25) .ToArray() // realize the query BEFORE linking the employee name .Select( employee =&gt; new Employee { id = employee.id, location = employee.location, name = names[ employee.id ], ... })
I wrote a GUI using Visual Basic to track the killers.
Sort it in-memory?
Obviously I don't know your full situation but it seems that this would be MUCH better suited to a SQL query. SQL will be far faster, but I can't really give you more unless I understand the database schema.
Any Language: A runescape fletching bot script using Powerbot API when I was like 14. Ya damn right I got 99 fletching from that shit. C#: First fully functional program that I finished was a clipboard item-saver in WPF. 
first project ever, fudging around with qbasic to try to recreate some 2 player local multiplayer tank game, with very limited success. first project that actually got somewhere, text-based roguelike dungeon crawler.
I've found that ORMs slow down development far too much to justify their existence.
I have and I failed just last week. Then I proceed to use some kind of a bulk import tool probably running on ADO. :D
&gt; end up bringing the total time to be ridiculously high, like 30 seconds. That means you don't have proper indexes on your database tables. 
It depends.
Me too haha. Just learning the basics.
From your perspective and programmatically how will these buttons differ from each other? As to say, when these buttons are generated how will your program be able to distinguish between them? Will the buttons have some sort of text that the program can use to distinguish which respective button it is and then by extension the behavior of the button? If so, you can use a switch statement to determine what behaviors you want the button to do. I'm sure there are better solutions but that is the first thing I can think of. Hope I answered your question or jogged your brain a bit :).
WinForms controls have a Tag property. You can set it to any object. What you can do is attach the screen, for which the button is responsible, to the button via the Tag, then create a single click handler, which you will attach to each button, that will check which button generated the event (sender parameter) and retrieve the screen from its Tag property. I am on the mobile right now, so I cannot write any code, but I will give you an example one once I get access to a full machine. EDIT: Here's the code: private void Form1_Load(object sender, EventArgs e) { Point btnTopLeft = new Point(15, 15); foreach (var screen in Screen.AllScreens) { Button btn = new Button(); btn.Text = screen.DeviceName; btn.Size = new Size(100, 23); btn.Location = btnTopLeft; // set tag and add event handler btn.Tag = screen; btn.Click += Btn_Click; this.Controls.Add(btn); btnTopLeft.Offset(0, btn.Height + 7); } } private void Btn_Click(object sender, EventArgs e) { if (sender == null || !(sender is Button)) return; var btn = (Button)sender; if (btn.Tag == null || !(btn.Tag is Screen)) return; var screen = (Screen)btn.Tag; // do something with the screen here MessageBox.Show(this, string.Format("{0}, {1}x{2} at {3}x{4}, {5}bpp", screen.DeviceName, screen.Bounds.Width, screen.Bounds.Height, screen.Bounds.Left, screen.Bounds.Top, screen.BitsPerPixel)); }
I will add that you will probably not be doing "unit tests" since you are treating the code as, as you say, a black box. The purpose of unit testing is to make sure each unit of a system is tested independently. Often time this requires refactoring the code itself to ensure testability, and it doesn't sound like that's what you're after. (That's more a job for the developers already in the code.) What you ARE looking for, it sounds like, is integration testing. You want to treat a whole system, not just a unit, as a black box. People can and will argue semantics of unit vs integration tests, but I think if you make this distinction you'll have an easier time when finding tutorials and examples. For example, while you can often leverage unit testing frameworks to do integration testing, you can usually find a better integration test suite for your specific application, e.g. websites, apis, applications, etc.
Excellent C# book btw or at least i think so. I'm not sure how deep in the weeds you will be from a QA point of view but if it is writing actual test code i would suggest looking up videos of a guy called Roy Osherove on youtube. Very entertaining (dry) and i formative. A lot of his stuff is around process and building better teams but there are actual test writing sessions were he explains what he is doing and his reasonings. Sometimes its easy to have all the right tools but still not know what your next step is and his videos definitely helped me get my thought process right
I'd learn Selenium, it's a good framework for integration testing, can teach you c# or another language, and make you more marketable as a qa engineer. NUnit is really unit tests and those are designed by the developers as a way to test the small pieces of the system. As qa you'd want to stay focused on the integration testing if you want to do automated tests.
I made a crude graphing program that would take any of a number of hard-coded equations and graph them on an X-Y coordinate system. This was done in QBasic (which came with MSDos).
I took a quick look at Selenium and it seems to be targetting browsers most of all. Our application is a desktop application so I'm not sure if it applies.
What you're looking for is programatically assigning events to a control. In your case it would be, inside the foreach loop, btn.OnClick += [insert event handler here] As others have said, you need to be able to distinguish between the buttons inside your handler, in order to provide different behaviour. You have multiple methods of accomplishing this. One of them is assigning an ID to each button (or just reading the text property of the button) example: private void Form1_Load(object sender, EventArgs e) { Point btnTopLeft = new Point(15, 15); foreach (Screen screen in Screen.AllScreens) { Button btn = new Button(); btn.Text = screen.DeviceName; btn.Size = new Size(100, 23); btn.Location = btnTopLeft; this.Controls.Add(btn); btnTopLeft.Offset(0, btn.Height + 7); //this is where you assign the event to your buttons. You can either do a static event (recommended) //or go the lambda (anonymous methods) route and create a new anonymous function for each button btn.Click += new EventHandler(btn_Click); } } //this method should be auto-created for you by Visual Studio once you try assigning the handler inside the foreach loop void btn_Click(object sender, EventArgs e) { Button btn = (Button) sender; if (btn.Text == "Screen1") { //this is where you differentiate between your buttons using whatever logic you deem fit. } }
checkout smartbear or ranorex they do native applications
What if I want to sell copies of the app to other people with Windows?
Sounds more like a legal issue rather than a technical one. End of life for a product doesn't mean you're no longer allowed to distribute it.
By "test the software over the GUI" do you mean simulating clicks, looking for UI changes, etc? If so, that's definitely squarely in the integrations testing realm, though they may be using a "unit test" framework to run them, which is fine. Good luck, by the way, on your way to developer! I've worked with several people who have taken the same path you are on.
Let me link you to someone that helped me tremendously understanding the MVVM framework. Make sure to upvote him as his links and sources were very good for a beginner such as myself: https://www.reddit.com/r/csharp/comments/3olfcc/beyond_frustrated_diving_into_mvvm_architecture/cvyeh0p Regards, 
A workaround would be to login in your browser and extract the cookie manually and add the cookie to your HTTP-request in your code. The cookie being the auth-cookie /u/outcomehazy is talking about
Both options are perfectly fine. It makes no difference.
Legal issues are for the lawyer, not for the internet.
I wasn't asking about legal issues, just technical ones.
Ok thank you very much
I was asking about the technical issues of still using SQL Server CE instead of using SQLite when it comes to selling copies of an app.
Try youtube, MSDN, Lynda, Pluralsight, all great resources.
Most of them expire sooner or later.
&gt;"sell copies" is not a technical thing. It is if what you make doesn't work on other people's versions of Windows.
Upvote just because you're doing unit tests.
A great site to get into writing algorithms for small programs and problem solving is [codeabbey.com](http://www.codeabbey.com/). You sign up and get points as you solve the problems. You get to see other's answers after you complete yours, too. Do you can see how others have solved the same thing. Kinda cool. edit: made it a link.
WPF or WinForms?
Using a gui is no big deal really.. All I ever do is commit, push, and pull. I've never really had to use any of the advanced commands.
Pro-tip when starting out programming or in computer science in general, google everything because your question has been asked and answered already. 
That's exactly right. It sounds like you've seen a lot of the same things I've seen. &lt;shudders&gt;
SQLite is fine to migrate to but what about just switching to express? Is it available for the platform you're working on?
NUnit is still maintained. MSTest is not.
MSTest is not UnitTestFramework. UnitTestFramework is still supported.
Take care to avoid blog posts about "unit testing". They tend to be rather extremist with stupid rules like "Thou shall never have more than one assertion per test" or "Never test the database". Learning how to write tests that hit databases and external services will make you much, much more valuable as a QA engineer. I especially like CRUD tests that follow this pattern: 1. Create a record 2. Read the record 3. Update the record 4. Read the record again 5. Delete the record This basic pattern is great because it doesn't assume your database is in a known state. Since you are always creating a new in step 1, you can run it over and over again without fear of contaminating your environment.
This is for a WPF app. So it's already pretty windows exclusive. But I can see that being a defining thing for other apps. Is that really the only difference? 
[removed]
More or less. NUnit is also open source, which means you can extend it to support more sophisticated needs if necessary.
NUnit/xUnit are definitely faster than MS Test. One project has over 1000 tests and was originally done in MS Test. It took several minutes to compile and run the tests. (You could go get a glass of water and come back before it was finished.) A couple years ago we converted it all to NUnit and suddenly we could run all the tests in a little over a minute. A nice boost in productivity.
I do (a), but I do make sure to edit the gitignore before the first commit. &gt; Is using the Github GUI looked down upon? Should I use command line or is it not really a big deal? I use the GUI and have had to resort to the command line only once. I'm a one man shop, though, so my workflow is very simple.
Do you know of anyone actively working on this?
You seem like you have already made up your mind on this one and are just looking for people to validate that decision.
Dude. I came here for help understanding the difference. Obviously I didn't know shit. That's why I came here for help. You're the one who came out the gate telling me I'm what's wrong with this community and not actually answering my question. I didn't come here for a debate about microsoft vs open source. I came here to learn the differences between the UnitTestingFramework microsoft supplies and nunit.
Better this and better that isn't answering the question. You phoned the comment in. Next time explain what makes it better like /u/Canthros did and don't open with "You're what's wrong with the community." 
I've just started a podcast where I'm walking through building a Smart Mirror using WPF+MVVM for a Raspberry Pi running Windows 10. I'm trying to make it accessible to beginners, so your feedback is most welcome and I'll take it under consideration for future episodes. https://www.reddit.com/r/csharp/comments/3pin7u/new_podcast_for_beginners_building_a_smart_mirror/
There is an open source framework similar to WPF that is being written, I cannot remember the name and I'm on mobile. It was posted to this sub though 
DB Crud tests are the foundational reason for DB integration testing.
Oh yeah I couldn't remember if the it was supposed to be the same or just similar, my bad 
Oh hey this sort of answers my previous question. So, nevermind! Ish.
You sound paranoid and upset at everything. Definitely a Microsoft employee. 
In Programming we're all beginners, no worries. Usually google has the answer far quicker than can be obtained here! Plus isn't it satisfying to find out and resolve a problem on your own? Feelsgood.jpg
Holy shit, you are awesome.
Create a windows form application in c# with visual studio. This application will allow you to enter int32 in a list with a button “Add” and the associated textbox to enter numbers. The list will be displayed in a textbox (see week3). You will create two additional textboxes, the first textbox will display all the odd numbers in the list, and the second textbox will display all the prime numbers in the list.  Create a function to find odd numbers in a list.  Create a function to determine if a number is a prime number.  Create a function that returns a list of prime numbers, with a list of numbers give as input. This is the task and I know how to figure out how it's odd and prime, I just really need a help with the method to update the textboxes. I understand I have to make another list for odd numbers and another one for prime. Although whenever I update the odd list it still adds numbers that aren't odd into it. This is my Display method for the original list with all the numbers private void DisplayList() { string str_out = ""; foreach (int n in l) // n represents current element in list { str_out += n + "\r\n"; } txt_output.Text = str_out; lb_count.Text = "Count=" + l.Count; //Updates labels lb_capacity.Text = "Capacity=" + l.Capacity; }
 List&lt;int&gt; listA = new List&lt;int&gt;() { 1, 5, 22, 36, 87, 42, 59, 101 }; List&lt;int&gt; listB = listA.Where(x =&gt; x % 2 != 0).ToList();
[removed]
Your tirade across multiple threads is extremely detrimental to the integrity of the community. Outbursts like this have a chilling effect and turn away newcomers. It's not healthy for us as a community to just accept people like you waging war over a simple disagreement. It's important for people to raise their voices and point out how unacceptable this sort of behavior is. That's why I'm commenting. There's absolutely no need for this level of hostility. 
This is using 3 TextBox's: UserInput EvenNumbers OddNumbers private void AddValue_Click(object sender, EventArgs e) { int userValue = 0; if (int.TryParse(UserInput.Text.Trim(), out userValue)) { if (userValue % 2 == 0) EvenNumbers.Text += "," + userValue.ToString(); else OddNumbers.Text += "," + userValue.ToString(); } }
[removed]
It's not your original post I take issue with although it was more accusatory than it had to be. I agree OP overreacted, but they remained fairly civil while you've been attacking anyone and everyone who's responded to you. You're also putting a lot of words in my mouth and insinuating a whole lot of malice on my part where there is none. I'm simply trying to point out the damage this sort of hostility can do. I never made any sort of generalizations as you seem to claim. But that's my piece done. Just trying to keep the peace is all. 
Got it now thanks very much ! now I can move onto the stacks also thanks everyone else ! 
A) I'm not stalking your comments. I'm reading new comments in the thread I created. B) I already said in another thread that the features pointed out by /u/Canthros were helpful in convincing me to incorporate nunit into my project.
One of my favorite NUnit features that is not directly supported in MSTest yet (as far as I know?): `TestCase`. (There are some hacky workarounds, such as looping over an array inside your test and executing another method, but that doesn't let you do things like expected exceptions, test remaining cases when one fails, etc.) `TestCase` basically lets you create a parameterized test method that is executed for each "case" that you decorate it with. These can be pretty complex, depending what you want. [TestCase(1, 2, ExpectedResult = 0.5)] [TestCase(2, 2, ExpectedResult = 1)] [TestCase(2, 0, ExpectedException=typeof(DivideByZeroException))] [TestCase(1.5432, 232.55, Ignore = true, IgnoreReason = "I don't care about this test")] public decimal TestDivision(decimal numerator, decimal denominator) { return numerator / denominator; } 
I have to agree with see_sharp_dotnet. This is a very simple, straight-forward OOP assignment that should be completed in under half an hour if you're over achieving. I'm sorry to have to sound so mean here, but the only psychological feeling you should have is fear. If you've gotten this far and need reddit moral support for entry-level assignments.
Did you configure MS Test to run the tests in parallel? That's not the default, but it makes a huge difference.
Lol. Yeah I guess it is a little clickbaity. I thought the article was interesting though.
There's a nice video series of unit testing in c# here. https://www.youtube.com/playlist?list=PL0C32F89E8BBB5368
Is there a setting that you can stay away from all my threads? That'd be neat. 
[removed]
That's the 2nd time you told me you were leaving and you broke your word. I'm starting to think I can't trust you :(
Thank you! This is project 2 and project 1 was very basic. I know it won't take long for me to get the hang of it but C# and Visual Studio are both still pretty new so a plan like that is just what I need.
Thanks so much man
What is the purpose of the database. Roughly how much do you store in it?
PluralSight Eg. http://www.pluralsight.com/courses/becoming-dotnet-developer 
Hey that link doesn't seem to work for me. Regardless, I would love to hear podcast that gives an into to what Windows 10 on Raspi looks like.
 &gt;I AM dealing with a 12 year old. Probably not even a sexy one. WTF?
What is this framework? 
What is this framework? 
As /u/sircmpwn mentioned, MSTest locks you into Visual Studio. Up until recently, I preferred MSTest because it felt more native too - then I tried to compile and run my tests under Mono so I could do builds with travis-ci. Surprise! MSTest isn't supported. I switched to xUnit and it works fine on both platforms now. I won't go back ever, now that I've found parameterized testing! (NUnit and xUnit do it similarly)
&gt;Is SQL Express an option for you? No. I need an embedded database.
I've tested it with about 50,000 records. The choice of database is not set in stone, so I can change to SQLite if I have to.
Interesting point about the test order. I try to write the setup method to completely reset the state to a baseline before each test but I can definitely see that extra layer of protection being a bonus.
&gt; And I don't think community projects are inherently better No one does, most are pretty bad. The ones that rise to the top though are usually better than what MS produces.
I'm a SQA manager and have been in Win app, webdev, PlayStation game dev, and MySql db development in the past 20 years. This is an admirable goal. Others have already mentioned that it seems like you are using the term 'unit test' differently than expected. I'm going to suggest something related but not directly at C# and testing. Quality Metrics and Analysis The strength of automation is to either do something repetitively or quickly with reasonable confidence that it will be done as specified. This is a great way to assure that something definable and not-too-amorphous gets checked over and over and over and over..... And as you build your automation test suite (whatever that may be...), you'll have to opportunity to collect a lot of information on behavior of both your application, the development process, and individual contributors. Basically, you'll start seeing where the bug densities are, when they will appear most commonly, and who is responsible for the errors. You'll see performance differences when important code or connection routines are altered, some of which affect the user experience in positive or negative ways. All of these data points... passes/fails.... performance times.... counts of issues per logical area of the software, for every single one of your actual test passes, should be logged. You can start logging why and how these issues are addressed which will give you a good body of knowledge to offer in arguments, customer service, and future designers. If are you are fluent in C# then it should take you very little time to familiarize yourself with how to setup a simple database and add that code to each call/response. You can use something like log4net to assist with logging information or write your own routines. In any case, you can use these skills as a future whitebox or unit test engineer to build better automated debugging systems and reporting systems. A vast amount of automation is not just poking something to receive a response automatically. It also includes measuring and doing something with the trending data over time. 
I'd go with SQLite, I've used it for several hundred thousand records with no problem. 
How about this? https://www.youtube.com/watch?v=hbsbpJZGpsg&amp;feature=youtu.be&amp;list=PLZ5u4lk6kBGZwA0gmCWUAmJqD-luX1p_P Do you get 404 or video unavailable?
I can't speak to whether the certificate conveys positive experience to a prospective employer, but I'd say they look good from the point of view that you're eager and capable of self growth. 
Driving shared mutable state out of your class designs will prevent many of those elusive bugs from being created in the first place. There can be a valid reason for shared objects/shared state in tests (I'm thinking of integration tests), but it's fairly vanishing.
I can run NUnit on my continuous integration server without installing visual studio. That's all the reason I need.
There is a free one out now that's similar to xamarin but the name escapes me.
Chris Hansen says I should stay away from that part of the internet. 
https://github.com/Perspex/Perspex
https://github.com/Perspex/Perspex
Thanks, but that would be inappropriate for the app I'm working on. It needs to be an embedded database, where the user needs an automated install.
&gt;I'd go with SQLite, I've used it for several hundred thousand records with no problem. Thanks. I tried installing SQLite NuGet package into Visual Studio last night just to see what it would be like. From what little I saw it wouldn't too frightening to change to SQLite. Of course I don't know what the gotchas would be if I actually did that with the code I have have.
"Integration testing" is one name for it, another is "acceptance testing". You'll find better information when googling for these terms instead of unit testing. There are several .NET libraries that can help you write these kinds of tests, including [StoryQ](http://storyq.codeplex.com/) and [SpecFlow](http://www.specflow.org/).
It is better to get away from testing through the UI and test a level down towards the core business logic if possible. The code has to be written in a way that allows this however.
If the developers are using Microsoft's Visual Studio and writing "Coded UI Tests", then [Microsoft Test Professional](https://www.visualstudio.com/en-us/products/visual-studio-test-professional-with-msdn-vs.aspx#) may be more appropriate for your development environment. You can then record actions on your desktop, and handoff the generated script to the development team (or augment yourself if you are willing to learn how to script). Also, the terms you should be using are either "Integration Tests", or "UI Tests". The term "unit test" is more of a deductive logical proof (like a mathematical proof) that developers write for their code; it isn't really related to what you are researching. 
Scope, scope, scope - declare your function higher in your hierarchy
If I declare it earlier and initialize there will it work?
[removed]
I do not think it has been updated in three years or so which makes me feel like its pretty dead
Curly braces introduce a new variable scope (visibility region). What you're doing is the equivalent of: { Blal enemy1 = new Blal(); } &lt;-- enemy1 gets freed here enemy1.DoSomething(); When you leave the region with the braces, enemy1 goes away and gets marked for garbage collection. So trying to invoke a method on it will fail because it no longer exists. 
List&lt;T&gt; is probably my #1 collection class go to, with Dictionary&lt;T,K&gt; not far behind.
You can probably grab the download link of the file, which will most likely be hosted on their FTP. You can then create a GET request with the network credentials to download the file.
List&lt;T&gt; + Linq = unlimited power
I had to implement claims based security from scratch a few months back because my former employer refused to allow us to use Identity framework... I was a bit confused about this as well but ultimately it turns out to be rather simple. A claims are a list of properties related to the current logged in entity. Once an entity is authenticated the claims are generated and given to the entity. A claim itself is simply an object that has the following properties: name, value, issuer, type, claims Examples of claims are anything that describes that entity. Like User Name, Email address, permission sets, groups, roles memberships, etc... I made the mistake of overthinking it, but they are simple objects...
Can someone tell me where ObservableCollection fits into all of this?
It's the same as List but it also has events that are being called when something is changed. It's useful for data binding in WPF-like frameworks.
He completely overlooked Collection&lt;T&gt;, the recommended base class for any custom collection class. https://msdn.microsoft.com/en-us/library/ms132397(v=vs.110).aspx
Pretty straightforward, thanks.
In addition to that, they've also published a [tool](https://github.com/dotnet/codeformatter/tree/master/src/XUnitConverter) for converting existing MS Test based tests to xUnit. 
&gt; Just curious because at first glance it seems they are VERY similar in functionality. My boss recommended nunit but I typically want to stay with Microsoft when I can because it generally feels more native to the .NET framework. Yea. Totally fits your alliteration of "dying to use". But hey, I am not the one being an internet troll. You must have quite the sad little life. 
Yeah. I'm using claims with an SSO that is based around groups (which I think of as roles) but it's rather easy to just create a "group" claim with the name of the group as the value.
Says the guy who keeps responding and arguing some irrationally angry viewpoint.
It is Have 42 upvotes /u/changetip
/u/KaseyKasem, DrGarbinsky wants to send you a tip for 42 upvotes (15,426 bits/$4.20). Follow me to **[collect it](https://www.changetip.com/collect/907003)**. -- [^^what ^^is ^^ChangeTip?](https://www.reddit.com/r/changetip/wiki/tipping-on-reddit)
I would recommend placing them into a GUI container and then loop through the child controls of said container. You can for each through the list of child controls. I use winforms at work not WPF so I would not be able to tell you the property name for child controls but you should be able to easily find it via msdn on whichever container you choose.
Not sure what you really need, but [Sql Server Express LocalDB](https://msdn.microsoft.com/en-us/library/hh510202%28v=sql.120%29.aspx) is the version for stand alone applications. I don't know what you mean when you say embedded, but it might be worth looking at that version of express.
I'm going to stress one more time that what you are looking for is basically job for a developer. So you want to stop being a QA and start being a developer. If you really want to stay a QA, then I would recommend looking at BDD and SpecFlow ( http://www.specflow.org/ ). The idea of SpecFlow is to write tests in business-friendly manner. You would first communicate with customer or product owner and create tests using a Gherkin language ( https://github.com/cucumber/cucumber/wiki/Gherkin ), which is readable for both business and non-programmers. Then, you would collaborate with developers to create bindings from those tests to actual code. But of course, this requires developers to make code actually testable. Which is quite rare, especially if you are already doing UI testing. 
Some data type conversions were weird but then again, I haven't used it in some time. Good luck! 
A quick question for anyone experienced in building similar reports: what should I use if I need to specify an exact layout of a document, for something like, say, mailing labels, without relying on third party software like MS Office? I want it to be embedded in my client-side app.
Listen, there is a course on Lynda.com I did last year - it is a solid weeks worth but WILL absolutely help you get upto speed with the foundations of C#. It's a really easy course with lessons lasting 7 - 8 minutes. The course is called C# Essentials - check it out. I was in a similar situation to you last year. This course really gave me the confidence to realise that C# wasn't as bad as I thought.
Well i cant disagree, that is a much more complete and nicer wrapper around the win32 api, but for a beginner it's a lot of code to follow to try and understand how it's working. But what i posted does give you an understanding of how you call the win32 API to read from a process's memory.
In my experience, you rarely need custom collections like that. Most often it's easier to simply wrap whatever internal collection you have in a `ReadOnlyCollection&lt;T&gt;` or `ReadOnlyDictionary&lt;K, V&gt;` and return it. These recommendations are not always up to date, either.
Indeed, and this is not how it's currently done in our company. I've got to learn the basics first, start playing with different ways of doing things, and eventually I would get access to the source code to start testing at a lower level in collaboration with the developers.
Thanks!
Nice! Checking them out right now.
Yes, as stated in a different comment, this is something WPF-like but *not* a reimplementation of WPF (which is not a criticism, either, just an important distinction).
I remember making a "guess the number" game on my TI-84p in TI-BASIC in 5th grade. I think I've spent more time on that calculator than any other programming language/IDE.
&gt; So do you think that means there's something besides the DataSource/DataSet that's not being disposed? Yes. Since you *are* disposing that dataset, there has to be something else.
Its funny, I always avoided the Dictionary collection because it confused me, but his explanation of it made it so clear. Good read.
Roadmap from last year, and there were some improvements in 4.6 http://blogs.msdn.com/b/dotnet/archive/2014/11/12/the-roadmap-for-wpf.aspx https://channel9.msdn.com/Events/dotnetConf/2015/WPF-in-46-and-beyond 
Yeah so it might look like I'm pulling data down then analyzing it client-side from my cruddy example, but in reality the client requests data, then the server is bundling the filtering, sorting, and paging into one query, which LINQ takes care of. There are definitely people who can beat out the linq to sql compiler but I don't think I am one of them lol. Good news though, yesterday my manager and i indexed the tables I need and he told me I actually don't need sorting or true searching (just filtering by a dropdown) so now the page is screaming fast :) One other thing, I think usually the compiled c# into MSIL is usually getting executed by the .net runtime (a virtual machine), kind of like java being compiled to byte code to run on the jvm, just to be pedantic haha. That post pretty much covers why we are using linq rather than sql. The only people working on this site really are me and my coworker (that's government for you I guess), and i kust started so hes really the only big guy doing anything on it. I love linq though; I already had to learn html, javascript, and c# from nothing. Sql doesnt look too bad, i learned super basic queries for checkijg out the database but still, Linq is pretty much a godsend to me lol.
Sure it'd at least show you're not bullshitting your cv, totally.
I didn't ask about MSTest. I Asked about UnitTestingFramework. MSTest died two versions of Visual Studio ago. It was replaced by VSTest which still runs the UnitTestingFramework.
Is dequeue() on a Queue O(1)?
But what if I wanted enemy1 to be a different kind of enemy? I am inputting a string with the type of enemy I want to create, so if I want enemy1 to be something else I want to make enemy1 be a different type of object. If I just add a default so that all cases initialize enemy1 to something with a .attack method will that work?
One thing that he doesn't cover is if removing an item from a dictionary, in the beginning or middle, is equally as costly as with a list? edit: these are .NET collections though, not just c#, correct?
(•_•) It looks like they forgot about ( •_•)&gt;⌐■-■ Server collections&lt;T&gt; (⌐■_■)
This is where you go down the inheritance rabbit hole. You have each enemy inherit from a base class ("EnemyBase") and then the outer block of code becomes: EnemyBase enemy1; switch (enemy1Type) { case "Blal": { enemy1 = new Blal(); break; } } enemy1.attack(player1); The attack method would be virtual, overriden on each specify enemy type to do it's custom attack. Caution: Go too far with this, and you'll go mad. 
The `()` is redundant and can be omitted. Also, you might want to name your variable ;)
&gt; edit: these are .NET collections though, not just c#, correct? Yes
Ooops. Naming variables can be important. In my defense, I typed this without glasses on so I didn't actually get to READ it. The () being redundant, does that actually stop compilation or does it still run? I figured you need it for any parameters that are required. List&lt;Shrek&gt; VariableName = new List&lt;Shrek&gt;(Parameter){initializers}; sort of deal.
Alright, i looked up the info on base classes and I think I got it now. Thanks for the help.
Sorry, perhaps beginner was the wrong choice of words. I've been at it five months and have actually spent some of that time editing the MemorySharp to my own wants/needs. So I'm pretty familiar with pinvoke/msdn documentation on win32 api. &amp;nbsp; Here is my so called 'out of process/in process' duo version of MemorySharp(which originally supported only out of process) that may be of interest - https://github.com/lolp1/MemorySharp 
I don't think I've ever used queue. But I have used stack recently in a winforms application to keep track of whether a control is allowed to refresh preventing wasteful refreshes. Eg. If you're processing something and don't want form controls updating push onto the stack and when you're done pop. If you're a control and there are items on the stack then no need to do any sorts of upating or processing.
Oooh, shiny. I didn't know NUnit could do inline declarative unit testing like that.
Yep, it's a great way to deduplicate things.
If you're using VS, simply mouse over the word var and it tells you the type. I don't need to know the types of things explicitly because I can intuit what it is from the context. "idNumber" is munging some sort of pseudo type information, "Number" with your variable that has name "id". It should be called "id" and depending on context you probably already know whether it's a string or an int or a guid, and if you need to change the way your system works - e.g. to change your keys from ints to guids - then you can do it without worrying about the variable declarations, and stick to worrying about the usages of the behaviours of the type (but why would anyone be calling methods on int and guid keys, in this example, anyway?)
Maybe this? https://msdn.microsoft.com/en-us/library/system.net.httpwebresponse.cookies(v=vs.110).aspx
Keep in mind those recommendations assume that you are shipping libraries with strong backwards compatibility promises. So they aren't outdated, they just don't happen to apply to you.
If you're newing something up why not use `var`? It's still perfectly clear what the type is. Edit: Do not want to start a flame war just an honest question. I just think it looks cleaner not to have the type twice within a few keystrokes.
/r/learnprogramming would be a good next stop. Also, you really need to check out the default keyword for switch statements.
I think that's exactly what's happening. There's really no better motivator than Shia Labeouf. There was more help from this post than I expected and a classmate saw me staying after class yesterday so he stayed behind too to help me get a little caught up. I think I'll be able to make considerable progress today.
Thank you for responding, With your help, I managed to sort out the serial port 1 issue, i looked at my device manager (sorry i should have said i was using windows) and it was COM1 at 9600 bit rate. I used a local variable for a serial port called serialPort1 in every function that required it to reference. Although a new problem appeared, i can run the program although when i seem use button1 function or button3 function, it crashes. It says there is something wrong with anything with "command" in it. I feel that i should change the code to something along the lines of (http://pastebin.com/b4uzcJ9n). This will declare serialPort1 in each function, although when i try and open the serial port with "serialPort1.Open();" it says "access to COM1 denied" I'm not sure how many times i have to open the port, or if i just have to declare it once ? Would you have any idea from where to continue ? Thanks you so much for all your help already. 
From [MSDN](https://msdn.microsoft.com/en-us/library/kabs04ac%28v=vs.110%29.aspx): &gt; This method approaches an O(1) operation.
I shouldn't have to hover my mouse though, you should just tell me. You knew it was an int when you wrote that loop, so why did you go out of your way to not tell me that? 
I know what default is, I just didn't include it in what I posted.
Would you mind listing some real world examples of when they are used? I often find myself just wrapping a List&lt;T&gt; or Dictionary&lt;K, V&gt; with some custom functionality to get where I want. I just can't seem to grasp the concept about them, I feel like they seem to advanced for the code I usually write.
Thanks for the tip! How much is the subscription?
Its $39 a month or $400 if you sign up for a whole year, they also do team accounts. They also have video courses and conference talks, and I just learned they now have an iOS and Android app as well. I think it is totally worth it, you can get a free trial of a week or two. Only thing I wish is that I could read it on my Kindle, but Amazon would never allow that :/
I can't get the cookies with this method without being logged in. I have the credentials, but I am a noob and dont know how to input them into an application with C#
Blackwasp.co.uk.
I took a Choose-Your-Own-Adventure book I wrote when I was a bit younger and encoded it into a text-based program in MS-DOS batch. Shortly thereafter, I translated it into QBasic.
It's good for desktop apps, but of course, useless on the web.
Sets are pretty useful. The order listed is pretty much the order of how much I use those things. I haven't had too many occasions to use a Queue or Stack (but it does come up).
Ok, so the LINQ to SQL provider is generating some sql. That's been established. Do you trust it? I don't :x If I were in your shoes, I'd write out a simple query with some joins to do the same lookups and operations you need, and run it on the server, maybe even analyze its performance. I'd bet it wouldn't require anything close to 30 seconds of processing time, and if it does, those tables were not well designed (maybe there's room for improvement).
The same will be true for any language that compiles to MSIL. So this will mean C#, VB.NET, F#, C++/CLI, IronPython, etc.
c# headfirst book @ headfirstlabs.com or http://www.learnvisualstudio.net/home-2/ are both good for learning basics and a bit more.
Queues are my go-to for threads passing data.
&gt;Instead of having SQL code in your program (which is just text) you can use C# instead, which is syntax- and type checked at compile time. SQL is so simple, I have no problems with syntax or type checking. &gt;Instead of receiving weakly typed data you have to manually convert and parse, you automatically get strongly typed deserialized objects. I cast anonymous types in C# frequently anyways. Adding a cast here isn't costing me anything. &gt;The database is explorable via Intellisense, which makes dealing with unknown or new databases easier. I have SQLS Management Studio running in parallel, which is a lot better than Visual Studio's equivalent. &gt;You can have multiple LINQ to SQL providers, which allows you to use same database logic for multiple (incompatible) databases (with e.g linq2db). SQL Server has the capability of porting in data from external databases, which I've never really had to do anyways. I could even write SQL to work with multiple platforms with precision, server-side, where database stuff is supposed to happen. &gt;No SQL -&gt; No SQL injection exploits, ever. Just don't write SQL on the front end, and where security is a concern, don't generate it dynamically. There isn't actually "no SQL," when LINQ is generating the SQL. Granted, it's a bit of a black box to me, but the exploit which is most dangerous is the exploit I can't see. I feel much more secure with my tightly controlled stored procedures. In hindsight I think it could be useful for compact databases running on the same machine as the software. Working with something like SQLS CE could require a lot of SQL written into the front end, unless you're using something like LINQ to SQL.
I eat carrots so I can C sharp. Also working on side projects. Even if they're never finished, I usually need to look up new concepts as I do it.
Mmmmm clickbait titles. Delicious. 1. I rarely ever use `Stack&lt;&gt;` - not that I don't know how or don't understand, I just don't need it. 2. I rarely ever use `Queue&lt;&gt;` - same reasons. 3. There is a difference between `IEnumerable&lt;&gt;`, `ICollection&lt;&gt;`, `array`, and `IList&lt;&gt;` which really is important to know, but he doesn't actually get into. In general: * Use `IEnumerable&lt;&gt;` for your set if you don't need to access anything by index, don't allow modifications to the set, and are OK with potentially re-enumerating through the set several times. * Use an `array` if you need to provide the ability to access by index but don't allow the set to be modified. * Use `ICollection&lt;&gt;` if you expect items to be added or removed from the set, but don't need to access anything by index. * Use `IList&lt;&gt;` if you expect items to be added or removed from the set and you expect items to be referenced by index. Most often I see programmers using `List&lt;&gt;` because it's short to type, but usually what they want is actually `IEnumerable&lt;&gt;` or an `array`.
Another difference is that almost nobody will ever have to deal with IEnumerator or its generic version.
He said, "totally".
Yup. It comes up very frequently that I want a collection of unique elements and that I want to check that something is a member of some collection of elements. I'm not sure if I use Lists, Dictionaries, or Sets more, they are all pretty important.
&gt; "`IEnumerable` is not designed for the foreach block" Yes. Yes it is...
&gt; removing an item from a dictionary, in the beginning or middle, is equally as costly as with a list? Position in a Dictionary is a meaningless concept on the surface, and is fixed (an item's index will not change) in implementation. The size of the array, that Dictionary uses internally, is fixed (unless it needs to be increased, when you will have reallocation), and adding / removing items to it is simply assigning and nullifying items in that Array to a given index. The problem with adding / removing items in a List&lt;T&gt; any point other than the head, is that all items after that position will have to be 'pushed' one index up in its internal array. As the position an item is in a dictionary is set by its key (GetHashKey() % array.Length) does not changed, items will never have to 'shift' their position in the internal array.
What do you mean "use" IEnumerable? You can't call new IEnumerable&lt;int&gt;(), it's an interface, which is implemented by all of the types OP writes about. 
I probably use Lists the most, but only as they are the most generic. For anything that requires more than a glorified array, I almost always use a Dictionary unless the requirement calls for set style operations (usually intersect or difference)
Got it. So I need to track that down, possibly with a profiler if I can figure out how to find it in there.
They also say that it's just a syntax "convenience" if you follow the link to "Implicitly Type Local Variables"... but I disagree. As I said to somebody else: It's not that I don't think people should ever use it, it's that I think people use it too freely. 'var' is not an excuse to never use types ever again. What I see a lot are things like: var blah = TestBlahForBlurb(); what the hell is "blah"? The only way to know is to look at the return type of "TestBlahForBlurb"... but that's extra work, and although it's easy work, I think it's shitty that the original developer cut corners to make his job easier while simultaneously making everybody elses job more difficult. If you know that blah is bool, why not just declare it as a boolean? The code is cleaner, easier to read, and you save everybody else that has to read your code in the future the extra time and hassle of having to figure out what blah is.
I've never ever had to use Stacks or Queues. List is god.
Not intentionally, but now that you mention it.
Pro tip: When enumerating a generic enumerable by using a while loop, please ensure you dispose the enumerator, as it implements IDisposable. This is why enumerating an enumerable via a foreach is preferred. It is syntactic sugar for a while loop within a try..finally block, and disposing (if necessary) the enumerator.
IEnumerators are how coroutines are done in Unity.
You can also return `IReadOnlyCollection&lt;T&gt;` and `IReadOnlyDictionary&lt;K, V&gt;` if you don't have to fear api consumers casting your return value into a mutable interface.
&gt; When enumerating a generic enumerable When using any `IDisposable` you should make sure to dispose (preferably with a `using` scope). Also true if your non-generic enumerator is disposable.
Yep. Think of Stack&lt;T&gt; (very similar to queue) as a List&lt;T&gt; (array-backed list). When you push, you append to the list at `internalArray[size] = val; size++`. When you pop, you take off the last element in the list, and nothing needs to be shifted: `size--; temp = internalArray[size]; internalArray[size] = null; return temp`. Queue&lt;T&gt; is similar but implemented via a circular array.
I think your code describes a stack though.
IEnumerable (non generic) GetEnumerator returns an IEnumerator (non generic), which does not extend IDisposable. However the generic IEnumerable&lt;T&gt;.GetEnumerator returns an IEnumerator&lt;T&gt;, which does extend IDisposable. I don't know how or why you'd like to dispose an object that doesn't implement IDisposable in the case of the IEnumerable/ IEnumerator iterator pattern. All I was suggesting is that it is preferential to use the foreach keyword rather than enumerating via a while loop because of the syntactic sugar that the foreach provides. Edited to make more sense.
You should never use `array` or `List&lt;&gt;` on a public interface. The caller shouldn't care about the difference. Your non-private method parameters, return values and properties should use whichever of these is least restrictive: * `IEnumerable&lt;&gt;` if you need to enumerate * `ICollection&lt;&gt;` to serialize (`CopyTo` an array) * `IList&lt;&gt;` if you need to index, modify, add or remove and check if the list contains something. You are supposed to check `.IsFixedSize` prior to adding or removing and `.IsReadOnly` before modifying as well. In addition you are supposed to use `IEnumerable&lt;&gt;` and safely cast to `ICollection&lt;&gt;` for access to `Count`. https://msdn.microsoft.com/en-us/library/dn169389%28v=vs.110%29.aspx 
Return or accept as a parameter. Of course your implementation can't be an interface
You will need to reverse engineer their login process. The easiest way to do that, that I cant think of, is to use Fiddler (http://www.telerik.com/fiddler) to see what key/values are being posted and what the responses are. Fiddler allows you to see the RAW HTTP headers so you can see what exactly is going on.
Isn't that just because it pre-dates Task&lt;T&gt; and async/await?
That's what CCR did: http://www.infoq.com/news/2008/12/CCR http://www.infoq.com/articles/Using-CCR
Agree. But for a list it should mention that the capacity starts from 4 by default - if there are 20 items to be added it has to allocate new array and copy data three times. And also mention BinarySearch.
I haven't used this class at all, but it seems to me after looking at the documentation that you would want to subscribe to the message and progressChanged events of the class and look for the correct message that says when it is done.
You know so much, yet you don't know how to make paragraphs...
It absolutely is needed. Do you never write documentation?
&gt; IEnumerable (non generic) GetEnumerator returns an IEnumerator (non generic), which does not extend IDisposable. Of course it doesn't, but that doesn't mean that the enumerator does not implement `IDisposable`. This can be solved fairly easily: (enumerator as IDisposable)?.Dispose();
Yup, it's pretty much compiler-exclusive structural typing :)
Glad it helped :) About the "access to COM1 denied", you can´t use the serial port like that unless you close it every time. Serial/COM ports can only be "opened" once and cannot be opened by multiple programs at the same time (it's not your case but it's something you should be aware of). So there must always be a call to Close() before calliing Open() again. What you should do is put to code to create and open the serial console in the form constructor and then simply call the serialPort1 methods that your event handlers need. This way, although it's a good practise, you don't need to Close() the serial port because it will be closed for you when the program terminates. You can use sometihng like this: private SerialPort serialPort1 = new SerialPort("COM1", 9600); public Form1() { InitializeComponent(); serialPort1.Open(); } Then on your button click event you can just use (notice that there is no call to new SerialPort()": private void button3_Click(object sender, EventArgs e) { string command = "s " + Convert.ToString(numericUpDown1.Value) + " " + Convert.ToString(numericUpDown2.Value); Debug_window.AppendText(command + Environment.NewLine); serialPort1.WriteLine(command); Debug_window.AppendText("Reading reply" + Environment.NewLine); int status = get_reply(); }
Try this public static class Launcher { private static string pathName = @"C:\TestExe\Hello\Hello\bin\Release\"; private static string fileName = "Hello.exe"; public static void RunExecutable() { ProcessStartInfo proc = new ProcessStartInfo { UseShellExecute = false, FileName = Path.Combine(pathName, fileName) }; Process.Start(proc); } }
Ensure the MODI dependencies are somewhere accessible by your COM assembly. Normally the same directory as the COM assembly itself.
Have a look online for a tool called pdftotext. It's a command line tool that uses ghost script to do OCR. You could use that from your application rather than reinventing the wheel
Bugs.
Thanks for your answer. Is there a way to do this through Visual Studio, or do I just select all the library files and paste them in the same folder as the built DLL? I tried pasting them in the same folder as the DLL, but doesn't look like anything has changed. 
A lot of refactoring.
&gt; xpand your references and locate the DLL. Click on the DLL then go to properties. There should be a "Copy Local" option Thanks, I selected MODI under references and set Copy Local to true (I needed to set Embed Interop Types to false in order to do this). Unfortunately, I still have the exact same issue. Any other suggestions? I'm about ready to throw in the towel on this. 
Wow, you must be some sort of genius I only seem to be able to add "unintended features" 
most recently a program that connects to an sql server reporting instance and deletes all scheduled reports/jobs that have already run and will not run in the future. worthwhile because the fools who set it up previously didn't set up anything to remove old jobs, resulting in a reporting server with ~30,000 dead jobs listed in sql agent.
Could I get some help with that? Can I PM you the link i am trying to log into? The credential inputs i have found online don't seem to be working for me.
I would first find out if the site offers some kind of an API to do what you need. Failing that, then go with /u/IWentToTheWoods advice. Way easier than writing code to locate and fish through browser cookie stores.
It is not! I will try this - thanks. update: Still nothing. I tried regsvr32, but got errors. The dll is Interop.MODI.dll and I read that you're supposed to use regasm for interop dlls. I ran regasm in the 32 and 64 .Net Framework folders. I checked the .NET version of the Interop.MODI.dll and made sure to use the matching folders. I registered the file path of the MODI reference as shown in the Visual Studio solution explorer. I didn't add any extra bits to the command like /codebase or /tlb (should I have?). It appeared as though the registrations were successful. I rebooted the machine and tried again - but same problem.
Here is a good tutorial on how to profile .net memory usage http://blogs.msdn.com/b/dotnet/archive/2013/04/04/net-memory-allocation-profiling-with-visual-studio-2012.aspx
The console apps *were* my code. Quite a few of them had unit tests. So did the ORM library.
For telecom: Log readers, script generators, a time-tracking tool that no-one ever used. Elsewhere: Plugins for Kerbal Space Program, but those only count part way I think :).
StreamReader has no default constructor. You must at least pass a Stream to read from. https://msdn.microsoft.com/en-us/library/system.io.streamreader(v=vs.110).aspx
The breakdown of this is: 1. Send POST request to site.com/login.php with name and password in the reqest data. 2. Get response and pull the session data / cookies from it. 3. Use the response from #2 and generate a new request for your CSV. Here are relevant links: send post request: https://msdn.microsoft.com/en-us/library/debx8sh9(v=vs.110).aspx get response from post request http://stackoverflow.com/questions/3079567/c-sharp-get-cookies-from-server-response-provided-on-data-post complete code of someone else doing something similar http://stackoverflow.com/questions/31129578/using-cookie-aware-webclient theres more than enough code in there to get your started. to say "nothing comes up" means you didn't look hard enough or are looking for the wrong thing. This took 5 minutes. Now the part where you need to know which data to send and receive is tricky, and that I certainly wont fault you if that would take longer (I make extensions, its a mess). You can monitor the requests through your browsers dev menu. chrome is Ctrl Shift J. Open up the network tab, login, and look for the request and response data for form data that was submitted.
Look up System.Xml.Linq
Really like your posts dude
This is perfect man you rock.
Those count, totally What kind of mods? Don't tell me it's the one with all the fancy jets and autopilot and stuff
Yea, I realized this after a little more testing. I was running it against a DB that was empty, so it was finishing so fast I thought it must be async.
Oh jeez. Can we include incomplete projects? * A game framework built on top of XNA (~~I forgot the name, damn it~~ It's called XGame). It used a stack-based screen system that also supported multi-layered screens (so you could have, say, menus appear on top of other menus) that also supported input pass-through if you wanted input to fall through to other screens. It also did resource cache management. Which was kind of helpful and did improve some performance. * Venture - A simple mobile game that had huge focus on story, randomly generated, sprawling levels of exploration, and 2D graphics. Motivation left me after MonoGame left me thoroughly annoyed and I didn't want to learn Unity's 2D system at the time. * ReBirth - A PC-based game demo I built in college to test out bullet-hell like scenarios. * PtaSheet - I'm on my third iteration of this piece of software. It's a Pokemon: Tabletop Adventures management program for handling your Pokemon sheets. It doesn't handle the trainer sheet (because that is a whole different level of complexity). WPF w/ SQLite for the data storage. Initial version used WinForms with a ton of XML files. * SQLMagic - A shitty SQL wrapper that I quickly dropped once I discovered the magic of Dapper. I honestly spent 5 hours on it before my friend was like, "Dude, Dapper does this and more but like 500x better". * ShinyGTS/DTS/GDS - A spoofing system for Pokemon Diamond, Pearl, Platinum, HG, SS, Black, and White that exploited the Global Trade System and allowed you to send back whatever you wanted. I got pretty far on this program but the Nintendo shutdown the servers which was really annoying since a lot of random handshakes happened (that I did pass-throughs on because nope.avi; don't want to re-implement an entire stack). My most successful program to date. I met a few individuals IRL that actually used it and saw the (messy) code for it. * RattleSnake - A really basic wrapper layer around TcpClient &amp; TcpServer. I think this was actually in VB.NET first. * Phoenix - A better version of RattleSnake. I ended up building a very basic Instant Messenger (with IRC-like group chats and commands). It was a fun learning experience! * Avalanche - A Windows Service that supported dynamically starting and stopping "snowballs". These "snowballs" are simple tasks with one or more schedules attached to them and Avalanche supported spinning up multiples of these snowballs and disposing of them. Future iterations were going to use AppDomain level isolation of the snowballs so if they spiraled out of control, Avalanche could safely destroy the AppDomain. However, research into Inter-Process communication led to me becoming demotivated. However, nowadays, I'd most likely have a much better time (because I'm more skilled at what I do). That's all I can think of currently. If I can remember something else, I'll expand this list some. EDIT 1: Ah-ha! I remembered a few (even have the source code still for these in particular): * ASQS - Asynchronous Queue System. It was basically an implementation of doing multiple downloads asynchronously (before async-await was even thought of). Kind of neat. I think it used, like, WebClient or something and used the BeginAsync() and EndAsync() calls to handle all that work. I really can't remember, sadly. But I can always rip the code out and look at it again. * Tool # - I used to be really big on Halo: Custom Edition mod development. But there's a little program called "tool" that really freaking sucks to use. It's command-line driven, and is difficult to always get the parameters correct. So I wrote Tool #. It was a GUI wrapper with a neat UI (inspired by Guerlla [I think that's how it was spelled], which was another Halo: Custom Edition tool) to allow multiple tasks to be run simultaneously. I didn't get very far with it because the UI became very hard to maintain (WinForms) and I got busy with real life. * Simple Menu System - I had a few friends that make games in RPG Maker, and, they needed a way to bundle games together and allow them to be launched and navigated via a menu system. So I wrote a WinForms menu system that used XML (or was it INI?) configuration files that allows nearly all aspects of the forms and menu system to be configurable. I actually got this program feature complete and mostly stable, but again, life got in the way and I had to drop the program. EDIT 2: I went spelunking through an old laptop of mine. I found the source code for the game framework (XGame) and Venture (which was built on XGame). :D
[nope.avi](http://gfycat.com/MellowConsciousAsianwaterbuffalo) --- ^(*Feedback welcome at /r/image_linker_bot* | )[^(Disable)](https://www.reddit.com/message/compose/?to=image_linker_bot&amp;subject=Ignore%20request&amp;message=ignore%20me)^( with "ignore me" via reply or PM) 
Nah, nothing like that. I made Kerbanomics, and now I'm contributing toward its successor BROKE. A few small ones here and there that have been superseded by actual features now.
Install Fiddler. Capture a trace of you logging in to the website in the browser. Replicate the HTTP requests exactly as you see them in the trace using HttpWebRequest. You should see the necessary login cookies set in the response to the authentication request. Attach them to the request to download the file and you should be good to go.
I see the confusion, it has CancellationToken because sometimes it's a long running task and even running out-of-your-process. 
I've been having the same problem with the calendar web forms tool. My only solution was to build by own calendar - I spent a good month searching for an answer.
Oh in this case it is mid lesson, so this portion isn't actually supposed to, I was under the impression it was until I realized my mistake. There was more coded added that did work out though, so in the end, yes.
Well, it did highlight after running, and there is a code analyzer in the references, but this is the option box for VS 2015 : http://i.imgur.com/BNuam1s.png I couldn't actually find this particular check box but I only poked around a bit. It's probably in VS 2013 which I also have, but I figured I would bring this to your attention if someone else runs into the issue you described.
Likely using SqlBulkCopy, its not on top of ado!
Number 8 is a **horrible** advice and should fail every code review.
Could you please explain a bit more :) It's the 4th most up-voted feature in this thread: http://stackoverflow.com/a/74482/4347240
It's just an alias for the file, not a real type alias. And it hides the actual problem: Using a data structure like this. You should wrap it in a custom type instead. It just obscures the code, instead of improving it. I see the type `MyAlias` in the code.. Then I start looking for it. But wait, it does not exist? Oh fuck, it's just a stupid alias in this local file.
1. Make sure *all* your COM DLLs are registered. 2. Verify the architecture of your DLLs are all x86. Since your working with legacy COM objects, more than likely they are x86. 3. Make sure to reboot after the DLLs have been registered. 4. If it's still not working, then create a simple console application that will call the COM DLL that you are having problems with. It may be just a bad COM DLL your dealing with. 5. If you made it this far and still having issues. I would either unregister what you have registered and verify there isn't any [entries within the register](http://stackoverflow.com/questions/1813774/unregister-dll-using-regsvr32). Maybe multiple COM DLLs of the same kind are registered causing conflict. Another option would be to find a *clean* PC and install your application on. *Trouble shooting COM DLLs is a pain in the ass, it takes awhile...*
'For more information on lambdas, consult the internet'
It's *not* horrible advice, it's just one of his pet peeves. Don't overdo it, but it's fine if used sparingly.
I'll give that a shot, thanks.
There are way too many cases where it is appropriate to make a statement either way, in my opinion.
String interpolation compiles to a `string.Format()` call so there's little difference in that regard. It's a lot easier to read a format if it has the values interpolated rather than "{0}" or "{1}" though. Additionally: you get intellisense while inside the `{}` brackets so it types fluently as well. As to the null-conditional operator: it avoids a lot of null checking, particularly in extensive LINQ queries. A lot of the changes that came with C# 6 are syntactic sugar but once you get going with them you'll notice they make quite the improvement. Property initializers, read-only property assignments from the constructor, expression-bodied members and more are also nice additions!
&gt;These features is Subject/verb agreement
Oh man I need to update to C# 6 asap
&gt; These features is Thanks, I fixed it! :-)
Why on earth should you wrap a type instead aliasing it when no extra functionality is needed?? That just seems way overcomplicated for the sake of saving typing and screen space.
To play devils advocate for #5, it could make writing sub optimal code easier. I don't know how common this is in standard off the shelf loggers but, I had once created an async logger which would take the parameters, put them into a queue, and then string.Format and Log on another dedicated thread. So in a case where we were concatenating and printing a lot, several times, this allowed us to spend less time per iteration in logging and more time on the scenario. With this new formatting being so succinct, I can totally imagine someone writing something like Logger.Info($"values={x},{y},{z}, etc..."); Which would totally defeat half the purpose of making it async. That said, premature optimization is the root of all evil and all, so, I'm definitely going to use it. 
It can still get messy declaring long generic types in methods and anonymous functions, and in other places that I'm not thinking of, where you can't use vars, so this could help. At least, that's where I've used it once or twice.
Because your type's contract needs to be explicit and unambiguous. This is the same reason that C and C++ allow creating typedef aliases (such as size_t being an aliased unsigned integer): making expectations, contracts, and context explicit. I'm okay with the generic aliasing in C# as long as the aliased type is just for convenience and doesn't escape file scope, but not otherwise, because it will make code visibly ambiguous and hard to understand when you use an aliased type in one file and the real type elsewhere to refer to the same thing.
I did that too, only I was 19 and I got it to work and played it till I was bored, and I didn't have a disk or tape drive to store the program on I lost it all when I turned it off. Hours and hours typing that code in, all those data statements that didn't mean squat to me and I just typed them in, all to be lost.
 Dictionary&lt;string, Dictionary&lt;string, List&lt;string&gt;&gt;&gt; Take this (modified) example type. How do I know whether the inner dictionary is related to the outer one? If it is, it may be more clear to call it a `Matrix&lt;List&lt;string&gt;&gt;` where the matrix indices are strings. Additionally, if the dicts truly represent a matrix, each sub-dict must contain the exact same keys. That requirement isn't clear with a `Dictionary&lt;Dictionary&lt;&gt;&gt;` but is with `Matrix&lt;&gt;`.
Number 5 is missing a ", making the rest of the syntax highlighting look wonky :)
I would definitely prefer to specify that same element multiple times rather than having to look it up at random places in the argument list but that's subjective. 
C#'s `using` alias is limited to file scope, as opposed to true type aliases (like C/C++'s typedef aliases). The `using` alias is mostly equivalent to the aliased type at compile time so it can't be used for specialization, whereas C/C++'s typedef alias, for all intents and purposes, creates a new type identical to but distinct from the original type, so it can be used for compile-time enforcement of type contracts.
Part of the post data is a generated publickey and it takes an encrypted password that is done in a subprocess. You know How I can get around that?
I still struggle to wrap my head around yield. I feel like I sort of understand it, but I never look at a problem and think, "I should use yield to solve this"
What are lambdas? Are they anything like baby sheep?
A number of the examples I saw did not pass the proc object to Process.Start().
Thanks!
public static Dictionary&lt;Int32, dynamic&gt; GetDictionary&lt;T&gt;(List&lt;T&gt; list)
But to respond to your question with another question: if you don't know what type of object is being passed in, since T could be anything, what aspect of the unknown type do you plan to use for the key in your dictionary of dynamics? Generally speaking it feels like you're taking in a List&lt;T&gt; and want to return a Dictionary&lt;int, T&gt;, which would be a valid method.. public static Dictionary&lt;Int32, T&gt; GetDictionary&lt;T&gt;(IList&lt;T&gt; list) so would returning dynamic (though I don't understand the case where it's useful) public static Dictionary&lt;Int32, dynamic&gt; GetDictionary&lt;T&gt;(IList&lt;T&gt; list) in either case, you need the &lt;T&gt; on the method name itself, not just the parameter.
In other words, only alias private fields whose long type you're worried about confusing people.
First app had to be the classic 'Hello World'. My first project however was a Skype chat bot. It sits in group chats and responds to commands defined by the user.
I have not looked at using Linq for this. Will take a look. The reason I'm using dynamic is because I found it in an example and it worked. Will try the Linq above. Thanks,
I had a lambda wool coat, once. It didn't look like much, but it was very functional.
No. Just don't use aliases like this.
Can you replicate the request and response that performs that process before making the auth request?
You had the right instinct to look into generics you just hadn't quite pieced together exactly what you wanted. As I mentioned above, you can use linq to get a dictionary of any type you can build. If you follow that method you're looking at using IDictionary&lt;int, UserTypeDataModel&gt; lookupDictionary = userTypeList.ToDictionary(k =&gt; k.LegacyId, v =&gt; v); This syntax can be a little confusing if you're not used to linq, but it works very similarly under the covers to what you coded yourself. But if you want to continue with your previous approach, you really need something common between your objects and you can achieve that with either a base class, or interface. In particular, whatever object you want to deal with needs to have a GenericTypeId property. public interface IDataModel { int GenericTypeId { get; set; } } Then you add that to all your datamodel classes. After that's done you can create your method with generics... public static Dictionary&lt;Int32, T&gt; GetDictionary&lt;T&gt;(IList&lt;T&gt; list) where T : IDataModel This will let you pass in any List of objects that implement IDataModel, and create a dictionary from them. (Note here that you can actually be even more generic and pass in an IEnumerable&lt;T&gt; instead of a List&lt;T&gt; or IList&lt;T&gt; since you're not really using any of the List members.) 
This is kinda what I did ... see the UPDATE section in my main post. Thanks!
Firs time I've seen the using statement like this!
Does something like this make more sense? [DataContract] public class UserTypeDataModel : IGenericList { [DataMember(Name = "UserTypeId")] public Int32 GenericTypeId { get; set; } [DataMember(Name = "UserTypeName")] public string GenericTypeName { get; set; } [DataMember(Name = "LegacyId ")] public Int32? GenericLegacyId { get; set; } } And any non-common properties I just add below. 
&gt; public static Dictionary&lt;Int32, List&lt;IGenericList&gt;&gt; GetDictionary&lt;IGenericList&gt;(List&lt;IGenericList&gt; lookupList) This isn't quite right. You want to be generic, but constrained. :) Right now you're using a specific type name, you just want a generic placeholder. "T" is a defacto standard, but it can be about anything you want. "TIn" and "TOut" are also used in some scenarios. public static Dictionary&lt;Int32, T&gt; GetDictionary&lt;T&gt;(IList&lt;T&gt; list) where T : IGenericList But keep in mind that nothing about your interface is listy. So IGenericDataModel is probably a better interface name. You need to also make your actual datamodel classes implement that interface, and I can't confirm if you've done that part or not. Once you've update this, you won't need... &gt; v =&gt; (IGenericList)v and can just do v =&gt; v since the type constraint will guarantee that the values in your list implement the interface no cast will be needed.
Regarding your edit/second question, it's because you are redefining a new generic type `IGenericList` instead of using the existing `IGenericList` interface (I know, WTF? WTF did I just say, right?) Change: public static Dictionary&lt;Int32, List&lt;IGenericList&gt;&gt; GetDictionary&lt;IGenericList&gt;(List&lt;IGenericList&gt; lookupList) to: public static Dictionary&lt;Int32, List&lt;IGenericList&gt;&gt; GetDictionary(List&lt;IGenericList&gt; lookupList) Notice the subtle change of `GetDictionary&lt;IGenericList&gt;(...)` to `GetDictionary(...)` Technically, what you're doing is creating a new generic type named "IGenericList", just like you would if you named it "T" instead. It would be the equivalent of writing this: public static Dictionary&lt;Int32, List&lt;T&gt;&gt; GetDictionary&lt;T&gt;(List&lt;T&gt; lookupList) { Dictionary&lt;Int32, List&lt;T&gt;&gt; dataList = new Dictionary&lt;int, List&lt;T&gt;&gt;(); var dict = lookupList .ToDictionary( k =&gt; k.GenericTypeId, v =&gt; (T)v ); return dataList; } So you can see here how accessing `k.GenericTypeId` makes no sense for the type `T` (which has no defined members because it's generic without constraints). EDIT: C# allows you to define a new generic type locally for the method (or class) even if it shares the name of an existing type. While you could argue this shouldn't be permitted, I think it's allowed to avoid breaking changes. Imagine you're using `T` everywhere then you import a 3rd party library which defines a `T` class. Because of a 3rd party library, all your code breaks (or worse, still compiles but has a completely different meaning now). EDITx2: Take a look at /u/Contagion21's [answer here](https://www.reddit.com/r/csharp/comments/3pxh82/passing_a_generic_list_as_a_parameter_to_a_method/cwad4fh). I think their fix is more relevant to your usage.
I guess part of my disagreement is that you're saying people "should" use them. And I would disagree - you *should not* use them! Sometimes you will be *forced* to use them but they're an undesirable workaround, not a recommendation. Important to know and important to use sparingly.
MSDN will be your friend: https://msdn.microsoft.com/en-us/library/z1zx9t92.aspx
Thank you. I'm going through it as the thread goes and am finding it very solid and well structured, although a little verbose, but might be enough. The only thing I am missing so far is instructions for working with OSX/Vim.
There is an extension called VsVim which adds Vim key bindings to VS. I have never used it but might be perfect for you.
What's the proper usage?
All you need is [here](https://github.com/dotnet/roslyn/wiki/New-Language-Features-in-C%23-6) and if you have enough rep on StackOverflow there's [this answer](http://stackoverflow.com/a/22881736) by Eric Lippert himself
Thanks for explaining how to name an interface ... don't think I've ever read about that ... probably why I always have trouble.
&gt; As an aside, I've often wanted a strongly-typed typedef in C# that wouldn't implicitly (only explicitly) cast to its underlying type. I.e., so that I can keep different units of measurement (meters vs kilograms) separate. For this you can define semantic types (often also called value types). Basically you take your base type (e.g. int) and wrap it in a struct. A brief implementation could look like this: public struct Meter : IEquatable&lt;Meter&gt;, IComparable&lt;Meter&gt; { public static readonly Meter Null = default(Meter); public Meter(int value) { Value = value; } public int Value { get; } public override int GetHashCode() =&gt; Value.GetHashCode(); public override string ToString() =&gt; $"{Value}m"; public override bool Equals(object obj) { if (obj == null || obj.GetType() != typeof(Meter)) return false; return Equals((Meter)obj); } public bool Equals(Meter other) =&gt; Value == other.Value; public static bool operator ==(Meter fst, Meter snd) =&gt; fst.Equals(snd); public static bool operator !=(Meter fst, Meter snd) =&gt; !(fst == snd); public int CompareTo(Meter other) =&gt; Value.CompareTo(other); public static explicit operator int(Meter meter) =&gt; meter.Value; } Now you could also declare a struct for Kilometers and add implicit conversions between those two. It is unfortunately a lot of boilerplate - but usually it's well worth it. With something like code templates you can reduce the required effort heavily.
Yes, I really prefer the command line and the text editor, using VIM is much more efficient than mouse etc.
I'd argue Test test = new Test { Barcode = dr.readString("barcode"), productCode = dr.readString("productcode"), weight = dt.readDouble("weight"), height = dt.readDouble("height"), .... }; is more readable and less risk of an error than Test test = new Test( dr.readString("barcode"), dr.readString("productcode"), dt.readDouble("weight"), dt.readDouble("height"), .... ); I am not sure there is much difference in code written 
General idea is that server performs the following endless loop: - get some data from a client, - perform some logic depending on what you've got, - and then notify clients. For example: - user types a message, - server receives it and plainly transfers it to chat participants. Or something like Quake: - user shoots from something like railgun, - server checks position of other players, - those who are hit, have some health loss, - those who have zero health, are declared as dead, - all clients are notified about frag made. Technologies you would want to use (I put some top-google links here, but probably you'd find some better tutorials for these topic): - [Duplex WCF communication](http://www.codeproject.com/Articles/660479/Duplex-Service-in-WCF) - [Two-way remoting] (http://www.codeproject.com/Articles/13847/Two-way-Remoting-with-Callbacks-and-Events-Explain) - [Old good tcp-ip](http://www.codeproject.com/Articles/12893/TCP-IP-Chat-Application-Using-C) First two are abstractions over tcp/ip. Disadvantage of tcp/ip is that you should come up with your own protocol (i.e. pack all your commands and data into some binary form). With WCF or Remoting you pass objects and serialization is performed behind the scene. If you're sure of yourself, I'd suggest using tcp/ip as it is a foundation for everything else, but it can be harder for beginner. 
I can't find where it is taking my initial password and doing something with that. I am new with fiddler still. Looks like I'll have to dig deeper into it and see what all i can get.
I have a coworker who uses viemu with much praise. Visual Studio is one of the best IDEs available and it sure would be a waste not to take advantage of it. http://www.viemu.com/ 
It seems like you might not realize that C# supports named parameters? I would write it like this: Test test = new Test( barcode: dr.readString("barcode"), productCode: dr.readString("productcode"), weight: dt.readDouble("weight"), height: dt.readDouble("height"), .... );
As far as the proposal goes, looks exactly what I'm looking for. Maybe it is big just because it couldn't be made shorter? I'll take a look, thank you.
Wait, I see there is a Visual Studio version available for OSX. So why are people asking me to download a VM? Is there anything wrong with the OSX version?
I prefer immutable objects, too, but POCOs are handy, and the .NET framework, littered with objects with mutable properties, already exists.
Sure, if you're consuming code that only really offers an initializer syntax, go ahead. But I think it's better to design for ctors and use them wherever possible.
I am aware of them - just having spent a lot of time programming in Pascal they look more like variable definitions to me, so I tend not to use them. If an object's constructor has a lot of parameters, where named parameters are needed, and it has validation rules around them it would start ring warning in my mind that something is too complex and I would seriously be considering whether I should be delegating the creating object to a factory class. If the object is just a data holder which needs little, if any, validation needed then I see nothing to justify your justifications "Ctors are strictly better than initializers for everything but EF/LINQ". Sometimes we worry far too much about protecting code from later re-factoring/use by another "idiot coder" and making sure it can cope with such things. 
You'll want to find out what IDE your office uses I like Visual Studio, but then I have been using on version or another since VB2.0 so my view is skewed that way. In an case, you might have to use what they give you. 
There is the Omnisharp project which has a plugin for Vim that will take VIM up a notch for editing C# - https://github.com/OmniSharp/omnisharp-vim. There is also Visual Studio Code which will run just fine on OS X but might be more of an IDE than you are looking for. A lot of the cross platform stuff is going to be geared towards ASP.NET 5 so I'd focus on that if you are looking to learn. Here's some guides on that - http://docs.asp.net/en/latest/getting-started/installing-on-mac.html. Here's another guide for creating a console app http://docs.asp.net/en/latest/dnx/console.html
&gt;I see nothing to justify your justifications "Ctors are strictly better than initializers for everything but EF/LINQ". I'm basically just repeating what I said earlier but: A ctor (with named parameters - which I would also recommend using everywhere) gives you all the clarity of an intializer AND preserves your ability to add new required parameters or do future validation (i.e. validation you can't currently anticipate). Plus it also encourages you to think immutably which is, itself, a good thing in my experience. A ctor provides all these advantages and has no downsides for the caller (except the EF/LINQ), hence "strictly" better. &gt;Sometimes we worry far too much about protecting code from later re-factoring/use by another "idiot coder" and making sure it can cope with such things. Hehe, that "idiot coder" is myself! It makes my life a LOT easier to be able to add a required parameter and create a temporary build break - it ensures I *cannot* accidentally forget to update a caller. But I don't *have* to do that, either - I can add something as optional if I want to. Initializers *cannot* enforce anything, plus you're sacrificing the ability to do that unanticipated validation in the future. I'm not just speaking theoretically - I realized all this after finding places in our code base where somebody had forgotten to update an initializer list. They aren't idiots - initializers just make it really hard to ensure you're doing the right thing and they provide no real benefit for that cost.
How is that not a type error? If (+)'s type is something like ` (Num a) =&gt; a → a → a` then can't take 2 bytes and return an int, right?
Unless you're working with actual multidimensional data (e.g. a 3d grid, which arguably warrants T[,,]) you should avoid nesting collections within collections. Tl;dr: Leads to nested curlies, violates SRP, weak maintainability and testability. For example, if you have a Dictionary&lt;string, Dictionary&lt;string, string&gt;&gt; in a reporting system, where `dict.First().Key`represents a report's name/category and `dict.First().Value` represents a collection of key/value pairs, you probably should instead have Dictionary&lt;ReportCategory, Report&gt;. This goes into the whole "your methods should be simple" thing. Methods with a billion nested curlies aren't simple. It also goes into the Single Responsibility Principle and maintainability - if you ever have to pass the collection around (e.g. you're delegating work) you now have the Dict&lt;K1, Dict&lt;K2, V&gt;&gt; at two places. Regarding SRP: It makes your class responsible for the representation of that data as well. Oh yeah, and if you ever need to add a new property to your Report entry, have fun refactoring all your code.
Yep, exactly. 
This is what I'm trying foreach (KeyValuePair&lt;Vector3, float&gt; entry in newPoint) { entry.Value += 1.0f * Time.deltaTime; } and I get **System.Collections.Generic.KeyValuePair&lt;UnityEngine.Vector3,float&gt;.Value' is inaccessible due to its protection level**
I use object initializers everywhere. They are badass and far cleaner than setting the properties individually. Never had an maintaining it. In fact, constructors are far more work and more messy. I highly disagree with your comment.
Left out a few good ones: var property initializers: `public DateTime Created { get; set; } = DateTime.Now;` Readonly properties lamdas: `public string FullName =&gt; $"{LastName}, {FirstName}";` - Why? Bc this doesn't initialize the variable until called, whereas `public string FullName = $"{LastName}, {FirstName}";` initializes when the class does. So while a simple string like this isn't a big deal, initiating unused fields is a waste of resources. Language Extensions are incredibly useful: public static class StringExtensions { public static string Between(this string src, string findfrom, string findto) { int start = src.IndexOf(findfrom); int to = src.IndexOf(findto, start + findfrom.Length); if (start &lt; 0 || to &lt; 0) return ""; string s = src.Substring( start + findfrom.Length, to - start - findfrom.Length); return s; } } Html Extensions in MVC public static bool HasPermission(this HtmlHelper html, string module, Level level) =&gt; html.HasPermission((Module)Enum.Parse(typeof(Module), module, true), level); used as: `@Html.HasPermission(Module.Dashboard, Level.One)` 
Endianness has to do with the way we organize primitive integers, not the ordering within a struct. If you have one codebase with `struct Point { int x, y; }` that isn't going to have to be coded as `struct Point {int y, x; }` on another computer with a different endianness.
I'm not quite sure I get how this stuff works (Í haven't actually gotten it to work yet). A dictionary has a key and a value, is the key used to identify which item in the dictionary it is?
It's more a case of rolling the team to a new vs.
http://stackoverflow.com/questions/941584/byte-byte-int-why As far as I can see, nobody is absolutely sure on why it isn't supported. 
OR you can use F#, where they're called Units and easy to make :) This is one feature I'd like to have in C#.
Theoretically, this string interpolation feature could be very efficient. Since the compiler knows ahead of time exactly what you're combining, it could make optimizations to save allocations. Take for example: log($"Value for {nameof(myInt)} is {myInt}.") The compiler could recognize that by allocating the string with an extra 14(?) characters, it can write the formatted string to that location, copy the rest of the string to the first unused spot, then just null terminate the last character and adjust the length appropriately. This then eliminates the second and third allocations completely. The compiler almost certainly isn't doing this, but it theoretically could.
They implemented it like this, because that's how it is working in C and C++, and they wanted to attract C developers.
Do you disagree with my functional points? Can you articulate that disagreement? What do you mean when you say ctors are "messy"? If we disregard the EF/LINQ/anonymous types issue (where you have to use an initializer), there is no objective advantage to initializers. You might prefer the syntax or prefer writing two fewer lines of code per property, but you are demonstrably sacrificing optionality for those preferences (I disregard lines of code as an objective advantage because I don't see minimizing lines as an inherent good - I will always choose the design I think is clearer or safer over the one with fewer lines of code, so lines of code is not an objective dimension). And to that I would say that everybody can like what they like but you shouldn't act like something is superior simply because you like it more. For example, I don't actually like the ctor syntax more, but I believe strongly that it's a superior functional option.
&gt; Why? Bc this doesn't initialize the variable until called, whereas `public string FullName = $"{LastName}, {FirstName}";` initializes when the class does. First of all, this isn't readonly... it's get-only. Moreover, it doesn't *"initialize the variable until called"*, there is no variable. It executes the expression each time you call it and returns the result. It's syntactic sugar on a regular get-only property, it's the same as this: public string FullName { get { return $"{LastName}, {FirstName}"; } } &gt; So while a simple string like this isn't a big deal, initiating unused fields is a waste of resources. This kind of property uses **a lot** more resources as it allocates a new string (and performs string interpolation) each time it's called.
Keep in mind that a lot of the features in this post didn't make it in to C# 6.0 (e.g. Indexed member access)
Var should only be used in the circumstances it was designed for - where the return type of a LINQ expression is unknown. Don't use it elsewhere, it's lazy.
When you use something like this, then you need to be very aware of the lazy-evaluation. Especially when you do "safe-programming" and check your input parameters. Let's extend the method you posted by a argument check: IEnumerable&lt;string&gt; ReadByLine(TextReader reader) { if (reader == null) throw new ArgumentNullException(nameof(reader)); string line; while ((line = reader.ReadLine()) != null) { yield return line; } } When you call this method now: var lines = ReadByLine(null); Will this throw an exception? The answer is **no**, it will not. Even when you append multiple calls to it, it will still not throw an exception: var lines = ReadByLine(null).Where(x =&gt; x != null).Select(x =&gt; new {}); It will throw an exception when **enumerating** this collection. This is usually unexpected behavior. If you pass invalid input parameters to a method, you'd normally expect it to fail right away. The better pattern is to make the yielding method private, and wrap it in a public method that will check the parameters for validity. This is also how .NET does it. IEnumerable&lt;string&gt; ReadByLine(TextReader reader) { if (reader == null) throw new ArgumentNullException(nameof(reader)); return ReadByLineInternal(reader); } private IEnumerable&lt;string&gt; ReadByLineInternal(TextReader reader) { string line; while ((line = reader.ReadLine()) != null) { yield return line; } }
I use it everywhere. "Designed for"? You can be sure there are people on the design team that also use it everywhere. What you call lazy is for me not wasting my time. 
Right, if you're pinning memory in an unsafe context and order is important to you, the LayoutAttributes are useful. 
I agree with this letter. I was really excited about being able to learn mobile development with familiar technology, but Xamarin is simply not affordable for me as a student. Microsoft's offerings and Android Studio are simply better options.
What do you mean "unable to type any code without it"?
Not unable, just severely disabled. The same reason you wouldn't stand having to type code on your phone's keyboard is the reason I couldn't write code on non-modal editors.
Hello again! I got it to work, although I'm getting this error: http://pastebin.com/tVEs15X7 Is that something to be concerned with?
That's getting thrown because the internals of the dictionary class are having trouble verifying the integrity of the collection since you're modifying it. But since you're only changing values, and your code is working, I would just keep an eye on it but not worry about it. That's probably bad advice, but you get what you pay for :)
there is a rather good vim plugin for visual studio. haven't used it myself, but there is a podcast about it here http://hanselminutes.com/364/vsvim-visual-studio-and-vim-with-jared-parsons 
/u/Daerkannon is right when he says there's some confusion here. Are you saying that people dislike Javascript because it's client-side or they're just dislike Javascript? If it's the language itself, well, it's not strongly typed and that can be frightening to some people (and preferred for others). I think that's one of the main issues people have, as the rules for conversion are [very loosely defined in places](https://www.destroyallsoftware.com/talks/wat). However, I'd like to focus on the idea of client-side processing. A lot of people don't like this for several reasons, such as the fact that the client cannot be trusted. You have to validate every bit of data coming back from the client, so one argument is why let the client do anything at all? It can also be slow, because clients are slow and then there's security implications. I personally don't accept any of the above reasons myself, there's a middle-ground to be met.
The biggest complaints by far are the ridiculous coercion and equality semantics. But JS also has a number of other things that can be annoying. The OOP system is really flawed. Function binding is a strange construct that can lead to serious confusion. I don't know the complaints well enough but I know there's a lot like those
So instead of writing two lines of code to let the compiler do that for you, you're writing two lines of code to catch it at runtime. This is the opposite of fail fast and it's the same amount of work spread out in more places.
Wow, thanks a lot! I'll take a look to all of those :)
Couldn't agree more. Especially with c# 6 primary constructors and expression bodies properties I can't see a good reason to ever use object initializers over a constructor Edit: apparently primary constructors were removed, that just means member variables would have to be declared for each property. Immutability is still well worth the extra typing 
C# 6 doesn't have primary constructors. 
Yikes.
1. Get a book. 2. Read the book. 3. Practice. 4. Practice. 5. Practice. Videos like that are generally not a good way to learn the basics of a language. The videos will skip over a lot of important details.
I'd disagree - if I am going to add an extra parameter to the object, I will have searched the code base to understand the impact, if there are so many places where I need to make the change that I need something to stop it compiling to ensure I get them all I'd start worrying about how I am going to get valid values for it in all those places (it sounds/feels wrong for a data object to me). The reality is the objects I would use property initializers on would only be created in one (or maybe two places close together) so missing a property isn't something I'd be worried about
if I needed to force Immutability in those cases then I'd have an interface that only has gets
Sometimes you simply have a lot of places where something is used or somebody adds a place you never anticipated (so you didn't think to search for it). You can say it "feels wrong" but it's often a reality of an ever-growing team and code base. Like I said earlier, using initializers usually works out in the end. The smaller your team and code base, the less it really matters. But initializers do limit your options and can lead to bugs that ctors can catch. It's OK to *like* initializers more but don't mistake that like for them being a better option. They're a workable option that can come back to bite you in ways ctors do not.
&gt; (so you didn't think to search for it) Which is why you right mouse click and select "find all references" &gt; They're a workable option that can come back to bite you in ways ctors do not. And constructors will bite you in other ways (e.g. throwing an error because new parameter is null where it wasn't needed) - the thing that bites hardest is coders and teams with poor discipline and I have yet to see anything that cures that. We aren't going to agree - so I'll leave it
Thanks for the answer. I will follow your advice. Can you recommend me a good book? 
it sounds like you are trying to use the compiler to force discipline on the coder - I doubt that will be successful 
Holy crap I didn't think of this. Will try it and report back! 
Not sure what you mean by discipline? The programmer doesn't have to even think about how to construct the object, the compiler enforces how to do it. This eliminates accidental mistakes such as forgetting to set a field. If your object requires certain fields to be set before it should be used, then the constructor should enforce this, that's its purpose. I haven't really heard your reasoning for not doing this. I've given one good reason, compile time enforcement that the object is fully constructed. What is the benefit of using an object initializer? 
JavaScript's history will tell you a lot: back in the day, when the web was developing, "real programmers" avoided web programming. As a consequence of this, web languages have suffered from some pretty unfortunate design flaws that they're only now shaking off. Some JS issues: * Weak typing is less popular with hard-core programmers * JS lacks proper OOP designs like class definitions * Debugging in-browser used to be a major pain * Consistency is still lacking in JS -- treatment of objects is seemingly random (see equality checking), naming conventions aren't universal, browser versions supporting leads to things like obj.delete() vs obj['delete'](), inconsistent functional programming implementation... the list is enormous. 
Like most people are saying, just dive in. I have a bunch of books on various programming topics, and while I do use them for reference, and I look up videos and tutorials online constantly for a specific thing, I learned the vast majority of what I know of programming by just finding a project I wanted to do and just jumping in head-first. I do what I know, and when I run into something I don't know, then I go look up that topic. I find that I remember what I learned better if I immediately apply it to a project.
MediaElement takes a URL. Have you tried that?
&gt;why do you need to make the IOS app and Droid App different projects ? The simple answer is that a Xamarin solution will actually have 3 separate projects (or 4 if you include WinPhone). * iOS * Android * Core/Shared Your core project is a straightforward .NET implementation which is able to be shared between the two platforms by virtue of the fact that it leverages the mono runtime on each OS. The two platform specific projects are for the most part the UI layer, which are separate because you're essentially writing against the native APIs of iOS and Android, using the C# bindings provided by Xamarin. Xamarin also launched Xamarin.Forms last year that is more limited in terms of being able to achieve fine grained control over the UI, but provides an abstraction layer for all 3 main mobile frameworks that allows you to share nearly 100% of your code on simple projects. There are other options, but none are C#. The closest in terms of technical similarity to Xamarin is probably RoboVM (Java based) which was acquired by Xamarin just a few days ago. Other non-C# cross-platform frameworks include Titanium (HTML5), React Native (Javascript), Cordova (the open-source version of PhoneGap). **Edit**: Since I seem to be the first person to have answered here, can I make an appeal that we for once actually discuss the technology instead of turning this into yet another rant about pricing. Yes, we're well aware that Xamarin isn't cheap - it's a topic that has been done to death on this site in the past couple of weeks. But this is /r/csharp and it would be nice to actually have a discussion about software development for a change.
yes I have, and I should have mentioned that, sorry. I have tried a number of active urls, and I can even get this one to play... for about 3 seconds. The url does the same thing when placed in WMP (as it should) However, that url in VLC works fine. Could be an issue with the WMP engine. 
Code really fast. If something gets in your way turn. -Charles De Mar
Here's a free digital one I found on this subreddit a while back: http://www.robmiles.com/c-yellow-book/ Here's the book I had to get for my C# university class: http://www.amazon.com/gp/product/0133440575?psc=1&amp;redirect=true&amp;ref_=oh_aui_detailpage_o03_s00 (ISBN-13: 978-0133440577) I'm not superb with reading technical books, but this one was pretty nice and even had occasional notes about performance notes and other noteworthy topics.
An event is just a collection of two methods (add and remove), like a property. They are most certainly derived to subclasses. The problem is the (usually) underlying delegate field, which would normally be private. 
"Call" an event? You wouldn't be able to fire it, no, since events can't do that (while delegates can). The compiler creates a hidden delegate for each event, but that's only accessible in the class that defines the event. 
+1 for deitel&amp;deitel
This is the one I recommend: Microsoft Visual C# 2013 Step by Step (Step by Step Developer) https://www.amazon.com/dp/073568183X/
How can i add the .cs file to the new solution
Sart with an empty solution and then add your .cs file. [MSDN documentation for this](https://msdn.microsoft.com/en-us/library/zfzh36t7.aspx)
I am. Yes.
No, it says play and runs the debugger
To be honest, I never watch anything from thenewboston, and there are some programming subreddits that will actually advise you not to watch him. I tried to learn from him a long time ago, but he just tells you what to do, nothing about why or how. You will learn how to copy and paste code, not really the reason things work the way they do. Just my experience. 
You might not have created a C# project then. Unless you've altered your configuration, the debug button says "Start" or if it is a web-based project it might say the name of an internet browser (e.g. Google Chrome or Internet Explorer).
You really shouldn't be posting your homework on the web.
+1 for SQLite, it's really simple. 
Can I also suggest Nativescript (JavaScript). I've been using it for work recently and its a little rough round the edges but the experience on device is much smoother than cordova. 
Learning C# right now. I am worried that I eventually have to switch to that Win10-garbage-os. I only wish MS would actually die.
 Func&lt;Sheep, Sheep, Sheep&gt; procreate = (mom, dad) =&gt; mom + dad;
The symbol looks like play, but it doesn't *say* play. Let's call it "start" instead. 
With some of the coders I have worked with - I don't see how a ctor would help, but never mind I think we will have to agree to disagree 
I've been using C# on and off for about a year, so I have some experience and would be able to help you with beginner problems and concepts. If you have Steam, shoot me a pm and I will add you.
Feel free to shoot questions my way as well. I work at MSFT mostly with C# and C++ these days.
I'd be keen to be a buddy, been doing beginner stuff myself but would be cool to have someone to talk to about it. I'll be getting back into it next week once my final project is done. Pm if you're interested.
&gt; Location location = new Location(1, "Home", "This is your house."); This is the way you create the location variable. Why? Because: &gt; public Location(int id, string name, string description) You have to set it when you create it. IF you don't intend to change the values, so it's fixed, I suggest using struct Location instead of class, so it's more simple for the processor to handle, since you are making a game. it's the same for the class as a struct, but in struct you cannot change the values.
You're welcome :D Once in a lifetime I can help with my knowledge :P
Thank you for this :)
RemObjects C# does this too (http://remobjects.com/hydrogene)
I'm a university student that has used c# for a while. If you ever want some help, to do a group project, or want some individual project ideas I'd be more than happy to help!
Currently I'm enrolled as a CS student. I would (someday) like to work at Microsoft, too :) C#, C++ and ofc JavaScript are my tech choice. At this time, I'm * Strong in C# * Mediocore in JS * Weak in C++. I'd like to improve my C++ skills but honestly most applications can be done much easier with C#+JS (+little C++). Embedded is mostly C and a ton of open source projects are written in C, too. It's hard to justify C++ for a real use in your **side projects**. I've looked at the C++ cross-platform mobile development and finally found something where I can use that language. **Can you recommend building mobile apps with C++?**
I don't know how active it is because no one has asked me for mentorship for a long time on there, but www.perunity.com exists for this purpose.
Not the top-level commenter, but if you want to build a Direct3D app for Windows Phone, using C++ is not only recommended, it's *mandated*. That said, Android is less inviting. In fact, it should be noted that using C++ with the Android NDK will probably just make more work for the same result. As for iOS, one can use C++ for the calculative parts of one's app. UI elements are strictly coded with Objective-C, but other than that, go wild - http://stackoverflow.com/questions/8759573/utilizing-c-in-ios-and-mac-os-x-applications
You've probably got it figured out from the other replies, but, just to make sure. In the line: Location location = new Location(); you're actually creating a variable, and not a property. The variable name is "location" (the second word in the line), and its datatype (what it's going to hold in it) is a Location object (which is declared by the first word in the line - "Location"). The "new Location()" part is what actually creates an "instance" of the Location class - the object whose datatype is "Location". You want to leave Location as a class, and not change it to a struct, since you're going to expand on the Location class in later lessons. The Location class will have more properties to hold the monster at the location, the quest available there, etc. FYI: I'm the author of that tutorial. If you have any other questions, feel free to leave a comment on the website. I see all the comments, and can usually reply in a day.
Haven't used kendo other than a brief tutorial but wasn't overly keen on it. Nativescript is totally worth trying out tho the documentation leaves something to be desired 
What v6? Are you talking about C# 6? The latest .NET framework is 4.6.
Heh, sorry. I will say that after about two or three months of working through the book, I had a pretty decent fundamental understanding of C#.NET and OOP - as a matter of fact, I could have probably written a good variety of simple applications both web and desktop based. It's a brilliant book.
Welcome. I am a developer with 20 years exp starting with VB 2.0. Before that I was just creating database applications. There is SO much to learn, in any language let alone all the libraries that exist. Not to scare you, just to let you know so you don't stress when you feel; "I don't know anything". And you will have those moments, or at least I still do. ...maybe it's just me. Anyway, feel free to ask here, many help me (ref: new libraries) and we'll all do our best. I too am self taught, and it can be a BITCH. So there will be things that each person misses, or does not know. Even with all my years there is new stuff I don't know about or old stuff I forgot. I often recommend to people who are self taught to think of projects, apps that you want to have. This way you have an incentive to complete the app, as well as something when you are done. This also gets the new developer to think about project specs, timelines and learning the language. It becomes part of your pattern, as that is often what development is. Hope thats helpful and not a detraction. After all these years I still really enjoy doing what I am doing
Just pick a pocket reference book.
Yes, the latest version of C# (or v5) and preferably any version of the framework above 4.5 since MS just announced they're dropping support in the near future. Sorry if I was not clear. 
We're not going to do your home work for you. What have you tried? What are you stuck on specifically?
i just need guide lines what to do. 
I'm surprised that Euler's 61st is part of a C# exam, my instinct is to go brute-force - which isn't particularly elegant. Saying that, these have been done thousands of times before, I'll give you a few hints: There are only 97 four-digit triangular numbers and for the other cases the amount is lower, the lowest being octagonal numbers with only 41 four-digit numbers. There are a total of 357 numbers to keep track of. When finding the number series, do yourself a favour. Avoid lots of nested for-loops, and make the search a recursive function. I don't think it would be cheating to do so, so here is the code to generate an octagonal number - you would use it here with the applied conditions of less than 10000 and more than 999: number = n * (3 * n - 2); Hopefully you can work out the rest of the generation switch from there, the algorithm for searching for your series is the hardest part.
&gt; If a vendor just added a new parameter (i.e. changed their API without sufficient warning etc.) that broke my applications then I'd be re-evaluating my relationship with them. No, you would release a new version, and anyone who upgraded would be forced to update their code accordingly. You can't enforce this with object initialisers. &gt; If you are talking multiple projects using the same core I'd expect all developers working on project to beware of such and pay special attention. That might work for one class. When you have tens or even hundreds, you cannot expect users of your code to pay 'special attention' to all of them. 
What is the scope of your app? Is it a game? Is it a thin skin on top of a database? Is it something that gives you a map or something? If your application won't be making use of extensive platform-specific stuff like fingerprint reading or require phenomenal performance then you might be able to build it using Apache Cordova. https://www.visualstudio.com/en-us/features/cordova-vs.aspx The idea with Cordova is to write your program targeting HTML + JS with whatever backend language you want (C# is one of them). You then simply use the tools with Cordova to spit out an application for the environment you want to run in. It won't be as good as a truely native app, but the very popular [Untappd](https://untappd.com/) uses the same technology. It can be done.
I wasn't sure about this myself, so I decided to research a reasonable answer! For clarity, lets assume: class Animal { } class Dog : Animal { } class Cat : Animal { } Covariance allows you to do: IEnumerable&lt;Animal&gt; animalList = new List&lt;Dog&gt;(); This is valid because `IEnumerable&lt;out T&gt;` only has methods that *return* it's type parameter. So it's ok if `IEnumerable&lt;Animal&gt;` returns a `Dog`, or indeed a `Cat`. But `IEnumerable&lt;Dog&gt;` can't return an `Animal` (because it might be a `Cat`). Contravariance: Action&lt;Animal&gt; animalAction = (Animal a) =&gt; a.ToString(); Action&lt;Cat&gt; catAction = animalAction; In this case, `Action&lt;in T&gt;` can only *receive* its type parameter. `Action&lt;Animal&gt;` can be given a `Cat` or a `Dog` as its parameter. However, `Action&lt;Cat&gt;` cannot be given an `Animal` (because it might be a `Dog`). Before .NET 4.0, declarations like the ones above were not possible.
You may accept that sort of behaviour from a software vendor - I would be very unhappy if they just did it out of the blue as it strikes me of poor planning and execution on their part and would make me suspicious of their coding ability. Try millions of classes and I'd agree with you - but tens or hundreds in a area/project that they know is core to other projects then they just need to know if in x - check other projects (I'd always expect automated tests to picking these issues up)
 &gt;You may accept that sort of behaviour from a software vendor - I would be very unhappy if they just did it out of the blue as it strikes me of poor planning and execution on their part and would make me suspicious of their coding ability. What, releasing a new version with breaking changes? Nothing wrong with that. Semver has that as basically the first principle. &gt;Try millions of classes and I'd agree with you - but tens or hundreds in a area/project that they know is core to other projects then they just need to know if in x - check other projects (I'd always expect automated tests to picking these issues up) Putting aside the fact that a test is woefully inferior to a compiler check, how would you even write that test? It would have to be a test covering the client code, and there's no way that test can predict when a new required property is going to be added. The overwhelming majority of dev teams can't even stick to a coding style or comment their code - expecting them to be vigilant about using thousands of your badly-designed classes is wishful thinking at best. 
So far (and I just glanced through the table of contents as well), it seems to me the book is all desktop based apps. Am I missing something or did you use another resource for learning to write web based apps? 
Not exactly. I had some limited understanding of how tool objects worked from the desktop examples in the book, but it took a little while examining CSS to put them where I wanted. Other than that, I had the concept of events down inasmuch as "Double click to propagate a new event" lies. StackOverflow was also a massive help, as well as w3schools and dotnetperls, amongst other sites. There *is* a touch of XAML guidance in the first chapter, but nothing too in depth.
I second this. Phone Gap works pretty well, which correct me if I am wrong is more or less Apache Cordova. OP could build the 'backend' api in C# and the front end in html5. And I'm pretty sure that html5 code would work on iOS, Android and Windows Phone/Universal apps. The performance is fine for most crud apps. I'm not sure the performance is there for a game (but you'd probably want to do games in Unity anyway.)
After you get used to IntelliSense it is way faster than vim, because vim doesnt know anything about the context.
Thanks a lot for your reply! You seem to only discuss variance in the context of generic type parameters. Let me ask you this: is the following covariance? var name = "John"; object o = name;
&gt;Now I know this is really a $100 a month feature. I'm a bit confused by this statement. How did you go from $25 a month to $100? At most, if you're planning to develop for Android, WinPhone and iOS, you're looking at $50. A few people have recommended Cordova/Phonegap. Well, it's entirely up to you, but since you specifically mentioned performance trade-offs, you're going to find it much more of an issue with any HTML5 based cross-platform framework. If you can cope with the "wrapped website on a phone" approach though, it might work for you. On the topic of performance, [these benchmarks are fairly decent](https://medium.com/@harrycheung/mobile-app-performance-redux-e512be94f976#.nmleitesi). They were developed by a former Google engineer, and all the source is open and on github, so they've been pretty well peer reviewed. Xamarin comes out pretty well on Android (i.e. faster even than Java). Of course, these are only benchmarks and your experience may vary, but I think at the very least it shows that you're not going to see a massive difference between C# and Java. You also didn't mention why you're looking at WinPhone and Android, but not iOS. Generally iOS is considered the most lucrative of the 3 platforms for even a minor hit. Almost everyone I know in the industry reports higher earnings from their iOS apps than other platforms - particularly Android which has a bit of a "free" culture around it. Obviously, Xamarin comes at a cost, but to be brutally honest, you mentioned you're looking to try to sustain yourself from these apps. If $25 a month in costs is too much expenditure for your business to work, I'd look for a new idea.
Sorry I wasn't clear earlier. I'm writing from my phone today. 1) I don't currently own a Mac. It is my understanding that a Mac is required to compile native iPhone code. I would like to prove the value of my apps before investing in a mac. 2) It is my in understanding that you cannot compile Windows Phone applications with Xamarin Studio. You don't get the Xamarin VS plugin unless you are on the $100 a month plan. However I do think I could create a portable library project in Xamarin studio and share that code with a VS universal app. 3) I don't want to waste time and money investing in the Xamarin suite if the benefits/results aren't worth it. I am a bit surprised their pricing is structured the way it is but this may be due to my own ignorance. 4) Overall I want to see if I have an aptitude for app design/implementation. I'm sure there are a million good ideas out there but have a feeling execution is key. SO if it's better to just learn native Android I'll put the time in but I think I could get out the door quicker with all c#.
Thanks for the great info. Do you know if camera and GPS access is allowed via this route?
Thanks- I checked and it seems to be based on data points tracked. Base level includes a set number of data points (x millions, depending on the service level you pay for) and then it's a couple of dollars per million if you go over the limit. Pretty decent if you're careful not to trace useless things.
Maybe for C#, indeed.
A C# based option would also be Remobjects C#. I've only used it briefly, and it requires different native UIs for each platform.
Nice! I worked on a PhoneGap project about a year ago - actually, I really kinda liked it. The performance was fine for the text CRUD app I was working on. It was actually a fairly sophisticated app too. I saw something about Cordova in a recent install of VS 2015, in fact I think I even installed it. Haven't played around with it yet (probably will soon). That's a good move if MS is throwing weight behind it. Its a decent idea (using html5 as the "front end" for all mobile apps). in /r/windowsphone there was some discussion about Mint dropping Windows Phone support in favor of emphasizing iOS and Android support. It seems to me that it would be a good move for Mint to focus on their website code and use that with Cordova for a cross-mobile-platform app.
It's good that you want to learn, and generally learning the latest is the best thing to do, but really don't get so hung up on the latest. Just learn c#. There is no c# 6, but there is a MVC 6, which isn't officially out yet. The changes between MVC 5 and 6 are supposed to be large, but like you said, if you're working with government contractors, often they'll be several iterations behind, most likely because their clients don't have approval to install the latest framework. Get a trial on a pluralsight course, try out their c# classes. Learn LINQ and generics.
&gt; There is no c# 6 wut
If you know C++, another approach would be to use it for the business logic, then make use of C++/CX on Windows, Objective-C++ on iOS and Java on Android for the view. Adopting a MVVM approach. Wrapper generators like Djiini from Dropbox help reduce the JNI pain on Android. 
Thanks for the recommendation. I have 0 errors now, but now I just need it to do one more thing. How would I got about getting that "Move There" button to execute the location change?
Use an MVVM framework such as MvvMCross. Create 2 solutions, one in VS and one in XS. In the VS solution, include your shared class library, and windows projects. In the XS solution, include the shared library and the xamarin projects. Do as much testing and dev in VS, using the Windows app for testing. Flip into XS only when you need to work on xamarin stuff. Still a pain, but less painful than doing it all in XS.
I use xamarin for 2 1/2 years now. My team builds large enterprise in house apps with it, so nothing i can show off here, but i can share my experience: We use our Code Base to target 4 scenarios: * iOS App * Android App * Windows Desktop (WPF) App * MacOS App We are transitioning the Windows Desktop App soon to a Windows universal App (when our main customers make the jump to windows 10) Performance on Android: * Equal to Java Performance on iOS: * almost equal to objective C code ( thx to AOT compilation and LLVM) There is a large lerning overhead to overcome when you use Xamarin. You have to know your target platform API and then you have to know how Xamarin exposes it to C#. The names and everything is the same, but some concepts work differently under c# than under java/objective c -&gt; no 1:1 mapping When we started Xamarin Forms was still very unstable, so we wrote our UI Code 4 times and bind that to our ViewModels and Controllers in the platform independent part. This is a lot of work, but we think it was worth it, because this way we really learned the different APIs and we have a 100 percent control of how everything looks. Our Android App is 100% clean material design, and the iOS app also follows the iOS design guide lines... Would i recommend using Xamarin to you? Only if you plan to use more than one platform, or plan to do so in the future, or if you want to avoid Java/ObjectiveC/Swift so hard that you are willing to pay for it. 
thank you for that lead, they have a TON of courses of information!
Thank you! 
Thank you for the advice and encouragement. I actually decided to start programming after much waiting because there has been a project I've had in mind for years. I finally want to get my hands on it and to start creating it, but I feel like there's just so much I still don't know. A few people have told me that there will always be things I don't know with programming and that even veterans still learn new things constantly.So that makes me feel a lot better. I need to stop waiting until I know it all and just take my first steps and learn what is needed as I go.
I think I should differentiate here between learning "programming" and "c#". I had some *very* limited experience in other languages, and a basic conceptual understanding of what meant what, but started properly getting to grips with c# around 20 months ago. What you may notice is that when you use Visual Studio, if you use a deprecated method it will tell you, and give you the updated method too. Otherwise, it's probably OK to assume that what you're doing is still up to par.
I definitely want to make a career out of it. And actually I want to get involved with international work. I don't know much about investments, but something that would allow me to make some large scale software is my dream.
Sounds great. Reach out if you ever want to chat or go over something. 
I'll help you. I'm in the UK but feel free to drop me a PM. It's good to chat about this kind of stuff. I'm a developer with 20 years experience
He changed his article. Before he suggested to use aliases for long types, e.g. using MyIncompetentType = Dictionary&lt;string, Dictionary&lt;string, List&lt;string&gt;&gt;&gt;;
You're welcome. Beware any developer that thinks they know it all about any subject... they don't. We'll be here when you need us
As far as I'm aware, Xamarin is only really designed to encompass C#. I've heard of limited success with SWIG, the Android NDK and similar, but in reality it becomes more of a maintenance headache once the overall build is live. There are C# wrappers, and there are ways to expose the C API, but you're generally going to make life more difficult for yourself, and make learning more difficult as well (Even if you try PInvoke). My suggestion would be to avoid C++ on Android at first, and then (once you have some experience) begin to learn how to port from one language t'other. This way, you'll also better understand the similarities and differences between languages, and maybe develop a certain appreciation for what language to use where (I still struggle on that one). Direct3D is a great place to start, assuming you have confidence and time, and you may have some rewarding UI to play around with afterwards.
By all means do so, but proceed with caution. Not all books are equal, and not all books have the same structure. You may confuse yourself at first, assuming you don't yet completely understand both concepts in a parallel workflow scenario.
Repeating here for top-levelness: Variance in this case means how the subtyping relationship between `Foo&lt;A&gt;` and `Foo&lt;B&gt;` *varies* with the subtyping relationship of `A` and `B`. *Co*variance means they go the same way, *contra*variance that they go opposite ways. So, in covariance: A : B implies Foo&lt;A&gt; : Foo&lt;B&gt; And in contravariance A : B implies Foo&lt;B&gt; : Foo&lt;A&gt; While /u/Thornsten's explanation is fine, I believe this more clearly illustrates why they are called that way (co and contra).
FWIW, I'm on there so feel free to contact me.
Very concise and well-explained. This needs more upvotes :)
Using fiddler, I see that a website i am trying to emulate a login for encrypts a password using this JSON response data it runs for generating a key. {"result":{"keyId":"USUj6dysjdhVEDnnyxASu2JYVoiZRIcp","key":{"n":"bb43ef33c5c2b978585def274215442b5d2564b3ee052c0d94f43b7dd4c689f091c8aff7cd590df785ab101e55a93a5721648272eddd6b4a8284c02dfa6470c15b319ea09f747ab62359b02bed1f11bdd0631c96f92a266ad52a6261fc99410a515325c8cd0bb2653ccf08e2501cecad1d37eb6beb8670ca8d2b7b606e5573bb","e":"10001"}}} After that it sends this post to Log in {"method":"login","params":{"username":"testuser","encryptedPassword":"908e6cdf9c4866b1ef838b7e58679f70ba30aea9bb66ab5fab9ffacc6f82cd1f2aa146969b5f7e89dd2b23ee86894672561d928f14abb69f1b9c9b8e5b72c29ec97e1059f4b0ffd03decd0717334a3f05a68c08032cc504e03a2761efb0b1b6a045d6cebbb99c04a1d0d9e3b5136f243f3353d917b7d5d8f53c32ac83d1368b8","keyId":"USUj6dysjdhVEDnnyxASu2JYVoiZRIcp"}} My question is, knowing the keys, how can i encrypt the password the same way they do to log into the site? In this case, the password is "testpass"
Yeah, I ended up finding some video reference guides for what I was trying to do. Thanks!
Hi. I already know C#, I'm just out of touch with recent additions to the language. The last "new" thing I learned in C# *was* LINQ. I have no idea when to use **dynamic** or how to use **async/await**, for example.
The javascript is in https://basrv-ky.hchb.com/vizportalLibs.js?btcay9gfh7s3jtt9 // Export RSA encryption function. // text: string to encrypt // key: RSA public key; should have two hex string properties, "n" and "e". rsa.encrypt = function(text, key) { var rsakey = new RSAKey(); rsakey.setPublic(key.n, key.e); return rsakey.encrypt(text); };
The javascript is in https://basrv-ky.hchb.com/vizportalLibs.js?btcay9gfh7s3jtt9 // Export RSA encryption function. // text: string to encrypt // key: RSA public key; should have two hex string properties, "n" and "e". rsa.encrypt = function(text, key) { var rsakey = new RSAKey(); rsakey.setPublic(key.n, key.e); return rsakey.encrypt(text); };
also here https://basrv-ky.hchb.com/vizportalLibs.js?btcay9gfh7s3jtt9
Ah, since it's a client-side script you'll need to replicate the encryption in your program. Google for "RSA encryption C#".
You didn't really state your problem, and there's not a lot of information here to go on. I could help but not with what little you've given. 
Okay, what extra details do you need? I'm very new to C# only started 6 weeks ago 
Why are you rounding in the first place?
Everything I find is about generating a key on the fly. I get errors when trying to supplement my own key for some reason. I'll dig around in hopes of finding something I guess, lol.
&gt; violates SRP Whenever I hear that phrase I automatically assume that the speaker can't actually support his argument. Your example is sound, especially when dealing with a public API, but its hard to take seriously when you say that it is an SRP violation.
Ugh. You could just as easily write: public class MyLessIncompetentType : Dictionary&lt;string, Dictionary&lt;string, List&lt;string&gt;&gt;&gt; {} 
No. Lots of nice-to-haves, but no game changers like LINQ or async/await. This was a polishing year as they work out the kinks in the new compilers. Any major changes were pushed back to C# 7.
I take it you don't build a lot of frameworks. I almost never use `yield` for application code, but it comes in handy when I'm building low-level libraries. For example, I've got a deserializer that works through a list, lazily creating objects from the source data.
We might see it in C# 7.
only the oprand needs to be zero checked? Also double has a lower relative accuracy , should be using decimal always when additions/sums are in play.
I think the easiest way to get into something like this is looking though the open issues of a project and attempting to fix some bugs. Codeplex has a page where people are requesting assistance: http://www.codeplex.com/site/search/openings Or take a look at trending GitHub projects and help resolve some of the current issues: https://github.com/trending?l=csharp&amp;since=monthly 
Whats wrong with plain old HTML .. that said: https://sunfire.codeplex.com/ is a good piece of kit!
file:///C:/Users/Skip2Th3End/Desktop/Uni%20Work/Programming%201/
I realise that the article is from 2011 when var was still reasonably new to C#, but does anybody still seriously question the use of var over explicit typing? I have used var exclusively, except in the IFoo foo = new Foo(); scenario, for years without finding it causes any issues in terms of code readability or maintenance. Even the interface scenario feels a little contrived because I so rarely new any object up, preferring to use IoC/DI or factories over new. The main place explicit variable type declaration for interfaces still crops up is with regards to collections where I will often specify IEnumerable&lt;T&gt; or IList&lt;T&gt; instead of List&lt;T&gt; as the type, but then obviously have to use a List&lt;T&gt;! I think the ubiquitous use of ReSharper in the industry has kind of killed this debate. I mean, for a lot of devs the fact that ReSharper says use var means they use var. in my team I now just let ReSharper take care of simple coding standards such as variable naming rules and, yes, use of var and etc, whilst the coding standards we do have specified deal with issues at a slightly higher level such as application of patterns and preferred coding constructs for different scenarios.
You linked to a file on your hard disk. No one but you can access that. 
&gt; but does anybody still seriously question the use of var over explicit typing? All the time. It's quite annoying.
Well, I'm currently working on [this](http://github.com/Banane9/FriendMapper)... Contact me if you want to know more :)
Cheers mate
&gt; You can add the new ctor with new parameters. You just have to leave the old ctor in place (and I would mark it deprecated). Then the new parameters were not required and there's no reason to not leave the old constrictor. 
You *can't* add new *required* properties if you need to retain backwards compatibility. Ctors allow you to retain backwards compatibility OR add new required parameters, at your discretion. But initializers do not allow new parameters to break compatibility when you WANT them to break it.
how do i find which file it is though?
&gt; how do i find which file it is though? 
Yup. My current roadblock is our ops team updating the Jenkins slave.
Is choice2 null? 
1. Don't do this with single files, if you want to transport it via google drive then zip the whole project directory. 2. You probably should be using source control instead of google drive. 3. If you're learning .net, don't bother learning webforms unless there is a very specific reason to do so. It's a dead end technology.
https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=http://memberfiles.freewebs.com/02/83/78118302/documents/McGraw.Hill.CSharp.4.0.The.Complete.Reference.Apr.2010.pdf&amp;ved=0CBsQFjAAahUKEwjauajh1eHIAhVR8GMKHTlMDHk&amp;usg=AFQjCNH5kkuAWFkSamw73kEoj6cEdHRIuA&amp;sig2=q7uTYlFOUCKa7u99dq34xQ
A little old but has all the basic Info for free 
Just make a cute little website for your dota2 clan. 
Try math in primary school.
Coming from a VB background, where this works as expected, I was rather surprised by this behavior.
Thanks for the link. I have my windows form reacting to button presses on the board now which is progress. I am having difficulty at the moment in keep a check box set as true after you have pressed the button though. 
I've never understood domain frameworks for the middle tier in .Net or Java - the language and runtime are all there to help you make objects that describe your domain. Putting another framework in doesn't take away the work. Not to mention the "domain objects" are really just DTOs in this example...
&gt; So there is literally no reason I can see not to prefer it Preferences can be subjective, but I definitely *can* think of reasons not to prefer it (like not being able to easily see what type a variable has). That doesn't bother me, though.
&gt; C# var simply compiles to a static type He knows that it does, and so does Eric Lippert :)
You seriously need to learn how to google basic stuff. Or read a book on introductionary programming.
How about what the problem is? You never say that. Read your own post, it doesn't make sense as it is.
You didn't state it *at all*. Instead of sending files, just *state the problem.*
x = x + y; x = x - y; But if you need to ask this question you should probably find a beginner's book/tutorial and get some solid basics down before continuing.
&gt; I realise that the article is from 2011 when var was still reasonably new to C#, but does anybody still seriously question the use of var over explicit typing? I work at a place where some of our code gets code-reviewed by Microsoft. This crap about using var is in there each time.
Ok, I've checked all of this just now, since when I started learning WPF I found out my knowledge on events and delegates is really lackluster. Now I'm back on track, and I want to ask you regarding this tutorial. Should I go through the whole tutorial or just the WPF part since I know a bit about c# basics and I'm not up for web developing?
I wouldn't get out of bed for that money - just saying! From your abysmal response, neither would most people who match the skills listed. You may need to go to your FD and tell him that a decent developer doesn't come about after a six-week correspondence course. Gaining real-world experience takes years and there is an expectation of reward. The developer you describe deserves to be paid more than the guy who drives the bus that takes him to work. It is a candidate's market at the moment and you look rather cheap. Sorry
Well for staters, all I get is a bunch of crap and hardly any info on the job in my phone, and clicking view doesn't work. However, from the little I can see, you're only going to find crap programmers with 0 experience offering that salary. Programmers aren't cheap.
Thanks for the straight up response. It's good feedback so no need to apologise! What salary would you expect if you were to apply out of curiosity?
Interesting! Didn't try checking it on my phone, maybe it's Totaljobs being poor which is killing it for us. Here's the job advert: This is an exciting opportunity to work as part of a dedicated software development team for an established, dynamic and very successful software company operating in a social, informal and lively open-plan environment. A suitable candidate will have either a relevant degree (Computer Science, Software Engineering, etc.) or applicable work experience. **What the role involves:** The company’s core range of commercial software products include a wide variety of interfaces to external applications and databases. Your role will be to develop and maintain APIs into a range of in-house and third party software. These will include payment gateway integration, mailing applications &amp; accounts packages. You will be working using a range of tools, languages and environments and will be working directly with other software developers in the team. You will play an integral part in developing our core product range and delivering specialised bespoke projects to high profile clients and businesses. **What Rushcliff are offering:** Up to £30k dependent on experience. An excellent opportunity to develop new and existing skills. Fast career progression with competitive annual salary reviews. Full internal training on existing software products. **About Rushcliff Ltd:** Creators and suppliers of the UK’s leading software package to private healthcare clinics - used by more than 10,000 practitioners and staff across 3,000 clinics in the UK and abroad. A small dynamic software development company, currently with 14 employees. Bright, spacious working environment located close to Burton on Trent town centre with full kitchen and games facilities. **The candidate must:** * Be bright, enthusiastic and ambitious with a passion for coding and self-development. * Have good literacy, numeracy and articulation skills. * Have a good, professional email and telephone manner. * Be able to work as part of a small team and liaise with other internal departments. * Have the following essential skills: * Good experience working with a variety of external APIs. * Good C# knowledge. * Good database knowledge including MS SQL Server and MySQL. * Knowledge of Web APIs and associated data handling. * Good general working knowledge of Microsoft Windows™ and Microsoft Office products. **Other beneficial skills:** * VB, VFP, PHP, AJAX, Javascript, front-end development (HTML, CSS) Email all correspondence to careers@rushcliff.com
Do you have a question...?
Enlighten me. Edit: I realized this came off as snarky. But I'm genuinely curious the good use cases for as and is? My reasons for avoiding them is that they can lead to more tightly coupled code in which a client class has to know about possible implementations of dependencies. Serializing entities into well defined types is a good case where I think "as" has to be used.
&gt; maybe it's Totaljobs being poor which is killing it for us. I'm from Canada, and the link you posted (in fact, most jobs I try to view on that site) are all redirecting to http://www.totaljobs.com/?inhse=internationalipredirect I assume it's because I'm not in the UK, but perhaps it's also redirecting some UK-based viewers as well.
You couldn't afford me :D More seriously, it looks like a "3-5 years' experience and some natural talent" profile and that's going to start at ~£38Kpa if the region is not exactly booming, (much) more if you're in a tech hot zone or unlucky enough to be in London. good luck
Good for you for ignorning agents. In 25 years in IT I have **NEVER** met a single one that had a clue. Not one. (really) I cannot see the listing, I am in NYC if that helps. 
Salary is way too low. Pop the job spec into PayScale and see what people are offering for that level of experience in your area.
And im sitting here programming for 36k usd a year. Hahaha but this area thats somewhat average i guess. Also its not c# but another language
&gt; Be bright, enthusiastic and ambitious with a passion for coding and self-development. &gt; Have good literacy, numeracy and articulation skills. &gt; Have a good, professional email and telephone manner. First, get rid of those 3 requirements because you aren't paying enough. &gt; Good experience working with a variety of external APIs You need to put examples down, which APIs, specifically? An API call is a simple thing, so if you have something more involved in mind, you should put it there and then you can ask your candidates more detailed questions about it. &gt; Good C# knowledge. &gt; Good database knowledge including MS SQL Server and MySQL. I imagine you'll have some phone screen that details this out more? Maybe you need to have one of your senior developers write the job requirement... 
I want to chime in and say I cannot view the listing. Also, in usd that salary is near the starting salary for entry level developers here in Charlotte, North Carolina.
very interesting... how can i help.. pm me
Im actually planning on moving to florida and finding a new job. No complaints about my current position tho. 34k for fress out of college with good benefits. Location is mobile alabama.
I think this should stay. If I interviewed someone that was completely unwilling to work in other languages from time to time, it's an instant denial.
Same here from US.
Thanks, I can do that. Resharper is way too expensive for just learning c$
Orlando-ish area, need to find a decent programming job, atleast same pay I'm making now. Kinda tough though
Just as a quick note, if you are enrolled in any educational institution, you can get it for free. Resharpers find-everything implementation is really hard to beat :)
I was making $20/hr as an hourly employee in my first programming job while I was still going to school. My next job paid $85k/yr, but it was after three years. I guess that sounds ok, but only for entry level.
Just FYI that's a browser link to a file on YOUR machine. If I click that link it would try to access the file on MY machine. You should go to http://pastebin.com/ to paste code to share. Be sure to select C# for the Syntax Highlighting. Then share the link.
I'm sorry to say that it is. However, there are lots of 'Cost of living' considerations as well. For instance in my area a 3 bed 2 bath home will cost $300k. So maybe that factors in heavily as well?
That's one of the first ones I tried, lol. I tried using some that allows me to put in a public key for the encryption. The issue I am having is that I need to run the encryption the same way that javascript does in order to get the same encrypted password to make another POST request to the site. I am given the public key data n=xxxxxxxxxxxxxxx, e = 10001. still not sure what i do with e and n to make the public key in the examples i cam across in my searches.
Before You jump, You should strongly look at cost of living differences between Mobile, AL and Orlando, FL. You will likely need signficantly higher pay in Orlando to maintain your style of living. Just a heads-up. Based on a quick google, you will likely need an extra ~14% pay (so $42k) to maintain your standard of living in * Orlando, FL: http://www.bestplaces.net/cost_of_living/city/alabama/mobile * Mobile, AL: http://www.bestplaces.net/cost_of_living/city/florida/orlando My suggestion would be to shoot for $55k+.
I've looked into a lot of the apartments, my current style of living has me saving ~1k a month, I'm not aiming to hard at maintaining my style of living, just surviving. Thats with spending gas for a 120 mile round trip to work, as I actually live in Mississippi. Mostly just want to get out of this state, as there is NO tech jobs here haha. Thanks for the advice though.
Cannot help you but, is it Programmering 1? Good luck. :)
Thanks for the answer tec! I managed to make it check if the numbers were between 1 and 25 now, although only so that it places a 0 instead of the faulty input. How do i prompt a reenter? 
It is indeed :) Thanks!
do the add to table 1 but run in a transaction. that way if it fails both 1 and 2 will roll back.
C# 6.0 is still pretty new, there aren't a ton of books out yet. [Here](http://www.amazon.com/Essential-6-0-Addison-Wesley-Microsoft-Technology/dp/0134141040/ref=sr_1_4?s=books&amp;ie=UTF8&amp;qid=1445964223&amp;sr=1-4) is one co-authored by Eric Lippert, who is a C# bad-ass. I haven't read it, but it's an option. Another option would be to go through some of the C# 6 stuff on [Lippert's blog](http://ericlippert.com/category/csharp/) and/or [Jon Skeet's blog](http://codeblog.jonskeet.uk/2014/12/08/c-6-in-action/). That might give you a taste for what things you actually need to spend some time on to really understand (like async/await was for me) and stuff that is syntactic sugar that you'll understand right away.
I would probably fit your requirements: 2:1 CompSci degree from a top 10 uni, 4 years professional experience mainly in c# and front end technologies. I'm on £50K 
You can wrap a `do while` loop around your `while` loop. Also you can use a flag for the bounds check so you don't have to do the same check twice. do while loop to get input if number is not in bounds let user know while number is not in bounds 
sorry but what do you mean by 'run in a transaction'? 
I understand what you mean. I'm not entirely confident in myself as a developer yet. I've been full time QA forever, and putting myself through a certification program on the side for about a year. It sounds awesome to get some experience though.
Cost of living is a major factor, sure. But 3 bed 1 bath apartment (houses aren't thing in Russia) is about $100K in my area so it does not really scale. To put that into further perspective, $100k is about what I've totally earned throughout my 9.5 year carrier, give or take some.
Here the website of the library in that big file. http://www-cs-students.stanford.edu/~tjw/jsbn/
This is the difficulty of working for a small business whereby everyone gets involved in other things at some point or another.
So £30k GBP is what, around $42k / $45k USD over there?
Where are you from? I would say your estimations sound about right, however we can happily go on less experience and talent if you're the right person. We want to work with good people, not the super-awesome coders that have high levels of eccentricity that nobody can gel with. Everything can be taught.
Yea, I'm sure it wasn't your call but you're going to have a tough time getting anyone in that's worth a crap at that salary range. Unfortunately, the demand for devs far outweighs the supply, which gives us pretty good power to say, pay me X. I've been in the industry full time for about 7 years and make about triple that. When I came out of college with a year of full time experience, I was started at 50k a year (USD) and that was on the very low end of the national average. I just happened to live in a low cost of living area of the country. I really think you'll need to offer more, or you're not going to get many bites. Just an honest opinion from someone who works in the field. 
What's your locality? it seems to all come down to this. I wouldn't say that's unrealistic for the Burton / Derby area, but saying that it does vary a lot.
I need the Linq import as I'm using Linq elsewhere in the class. It compiles on my coworker's machine, which is really confusing. Why would it try to use the Linq version though? ~~Last time I checked a string isn't an IEnumerable&lt;char&gt;.~~ Edit: Learning new things every day.
If I opted to move again my gf would castrate me! I'm finally in a job I enjoy and learning fun things so I might have to pass :)
Is your app trying to use a mapped network drive, or a direct UNC path? (ex. \\server\folder). Beyond running VS as admin, you should also include the requirement in your app manifest. 
Thank you for seeing through my weird description and giving me an answer. I'll check them all out. Much appreciated.
Why declare consts then not use them?
Here is a code snippet that will iterate through the appsettings section of a web.config file and append it to a label on a web page. https://gist.github.com/anonymous/58f1c650c6dff1ed72e2
Haha good catch. I didn't even realize it.
You need to be paying around £40k. Put the specific skills you need at the top. Would you consider a remote worker?
Thanks, this will help me get started.
What benefit does this give over running unit tests with NCrunch and showing the values I'm working with using Oz-Code?
Nothing to be sorry about, mate. Most of us (I'm excluding self-employed programmers) are getting whatever job market offers. So relax and enjoy :)
&gt; a 3 bed 2 bath home will cost $300k Man, every time I hear about housing outside my little Vancouver bubble, my mind shatters a little. $300k would barely buy you a (small) 1 bedroom flat here (if you're lucky), never mind a standalone house. If you moved out into the "satellite" cities in MetroVan, $300k might get you a large 1 bedroom flat.
As people have said, you aren't stating the problem. When you run your code, are you getting an error? Is the result not coming out correct? What should be happening and what IS happening?
Ignoring the salary for a minute, as others have already mentioned it. I would probably skip over this job just because PHP is mentioned in the beneficial skills list. PHP is considered by most developers to be a terrible language and given the choice I'd rather not have to use it. There is enough choice in the job market where live that I can afford to be picky and ignore job offerings that use things I don't like.
a css file is basically just a giant string. But is this css file being generated by the program? Or is it a css file you've pre-built and just want to include? Or are you actually putting the css code inside the epub text like embedded css?
The CSS file is something I've already built and I just want to include it inside the epub file. Right now I've got a StringBuilder that creates the CSS string and then a method that creates a file from that string. I was just wondering if there was a better way to go about this.
&gt;sql server reporting instance Just out of curiousity, was there a reason it couldn't be done entirely inside sql as a scheduled job? I'm not familiar with sql server reporting tools, which is why I ask.
I live in Lancaster and am on a relatively low £35k. Looking at the population, Lancs has 47k people and b-o-t has 67k. I don't know what house prices and other factors are like down where you are, but I got a 4 bed house in a nice area for £155k. You probably do need to revise the salary. I'd also check out salaries in nearby Derby, since people are probably willing to make a small commute I'd the salary increase is enough.
Are you just reading the css file and then writing it to the epub? Areyou just doing something like this? string cssfile = File.ReadAllText(myCSSFile); File.WriteAllText(CSSTarget); Not sure how you mean you're creating the css string. Are you doing it by reading line by line? It's unclear how you're generating the epub file too.
You are correct.
Seriously...
Be aware that Florida has the "Sunshine Tax". Beaches and sunshine are considered to be part of your compensation package. 
Yes I literally said that in my post, I was wondering what the rationale behind this decision is. 
Being a software developer based Derby myself I'm pretty sure I've seen your ads a few times over the past year (there can't be that many .NET shops in Burton!) and the salary has always made me skip past them - an upper limit of £30k starting salary rules out anyone with more than a couple of years experience imo. On another note, I'd remove "Good general working knowledge of Microsoft Windows™ and Microsoft Office products." - it makes it look like you copy and pasted the job spec from an advert for an admin assistant :P
https://msdn.microsoft.com/en-us/library/system.io.filesystemeventargs(v=vs.110).aspx From the MSDN, you can reference the FullPath or Name properties from the FileSystemEventArgs object on the event. An if statement could be used to filter out actions by the file extension. private static void OnChanged(object source, FileSystemEventArgs e) { if (e.FullPath.EndsWith(".tmp")) { // Handle .tmp file } else { // Handle other files } } 
That *is* the rationale. The right-hand side of the expression has no concept of the explicit type you're giving it. The logic for making it double is performed before the compiler gets to the left-hand side. 
You could just add the bounds checking to the conditions of the existing while loop and expand upon the error message. int number; while (!int.TryParse(Console.ReadLine(), out number) || number &lt; LOWER || number &gt; UPPER) Console.WriteLine(string.Format("You may only enter numbers between {0}-{1}", LOWER, UPPER)); newArray[i] = number; 
Thanks. I'll try that when I get home.
To compare the contents of two arrays as you described, check out [IEnumerable.Intersect()](https://msdn.microsoft.com/en-us/library/vstudio/bb460136\(v=vs.100\).aspx) var array1 = new [] { 1, 2, 3 }; var array2 = new [] { 2, 3, 4 }; var matches = array1.Intersect(array2).ToArray(); // Would result in the same object as: // var matches = new [] { 2, 3 };
System.transactions using(var tran = new Transaction()) { try... tran.commit() catch... tran.rollback() } Code entered by hand via iPhone from memory your mileage may very... 
It always annoyed me that strings are char enumerables, and I think it's a design mistake (and so do some from Microsoft). Well, can't take it out now. In Swift it used to be the case, but they switched to str.characters as the enumerable property instead.
Okay so, I was using the equation in a WriteLine, which means it look something similar to this - Console.WriteLine("calc01 + " plus " + calc02 " is equal to " + calc01 + calc02"); when I should've added parentheses here - Console.WriteLine(calc01 + " plus " + calc02 " is equal to " + (calc01 + calc02)); I did not realize this.
This might just be me but this seems waaaay too gimmicky for 99$ a year. Most projects that can justify this heavy of a budget are also too complicated for this plugin to be of any help.
Late as I may be to the party, I would make something clear: The advert sounds like a job I, a "programmer" with less than two years *self taught* experience, could breeze through. Additionally (and this may be a bone of contention with some), I'd remove any mention of software environments - unless you're strictly limited to what IDE your dev can use. I stick to the IDE I know, or I use an open source one that is similar in look and feel. I've met quite a few people who are very set in their ways, but are indispensable because of their affinity with their profession. Of course, that can also be a negative, but it's no good missing out on a brilliant developer simply because you cannot adapt to each other. One other point that, skimming over the comments, seems to have been missed: Make your salary figure negotiable, and make it obvious that it is so. You will almost certainly encounter negotiation, and I would view it as a positive rather than a "Oh Christ we're spending more money" moment. A developer who also has the professional skill to negotiate may well prove valuable, *especially* in a smaller team such as yours.
Ok, so what I'm understanding is that in my method to turn an array of numbers in a matrix into a string, the char[] OutBuffer will be the final string I create?
What makes you think that this plugin can't help with big codebases? Are the introductory videos too simple? I invite you to download a trial and see for yourself how this plugin performs.
And that is how pair programming works. :D
see I have this signature: void CreateAStringFromMatrix(int[] Matrix, int NumRows, int NumColumns, ref char[] OutBuffer) { } and thats all I'm given, and I need to make a string from the given matrix, sorted in a clockwise fashion. I have the general idea down, but this is probably the hardest thing I've dealt with in my few years of self teaching 
so if I code it all like it was set up like that, but in the end added the return OutBuffer, it would output correctly?
Awesome. Now that that's out of my head I can try to wrap it around the rest of it xD Thanks!
Feel free to ask questions on the points you are still confused about!
oh i thought you mean't the method being called...like; public void CallMe(string name, int phoneNumber) { // code } being called; CallMe("John", 30148229104); prints with reflection; Method:CallMe Parameter Name: name Parameter Value: John Parameter Name: phoneNumber Parameter Value: 30148229104 Something like that? 
Just had a re-read and thought I'd add some more feedback. I've been **really** picky this time. There is no mention of what you use other than C#. Is it .NET MVC, ASP.NET WebForms, WinForms, WPF or Silverlight? That is a pretty important thing to leave out. It should be in the list of required skills. I mean, I guess it could be none of the above if your product is just an API that does nothing else, but that seems unlikely since you also mention front end development later on. The "open-plan environment" in the first paragraph is a turn-off. This might sound good to a recruiter or sales person, but it is a developers worst nightmare. This says to me "you will be in the same room as the sales people, who are on the phone at least 50% of the time" Generally a developer wants to be in a small quiet room with as few people as possible. I don't expect my own office by any means, but a separate room just for developers is a *very* good thing. In fact, the whole first paragraph is just buzz-word central. Delete it. We want cold hard facts. The first thing on the listing should be required skills, followed by desired skills. Those are the most important things in the ad, they shouldn't be hidden away at the bottom. You are telling us about your full kitchen and games facilities before you even tell us what skills we need for the job! The three bullet points under the heading "What the role involves" don't actually tell you anything about what you will be doing other than "you will be a software developer" I would cut those lines too. Try to strive for as few words as possible instead of as many words as possible, it isn't an English essay. Mentioning that a candidate must have a good telephone manner indicates they will need to be on the phone to customers. If the role requires that, I would expect a larger salary than the market average for putting myself through that. Other developers I know are even more fussy than me and would not take the job even if it was £50k but you had to speak on the phone to customers. You could probably cut that line down to just "Have a good, professional manner" This line "Good general working knowledge of Microsoft Windows™ and Microsoft Office products." It should go without saying that someone in this industry already has these skills without listing them, so this makes me think that I will need to play part time technical support to people who have to paste a jpeg into a word document because they don't know how to print it out otherwise. I would include javascript and AJAX in your front end development parenthesis. Well, that turned out to be a lot longer than I expected. I tried to be as pessimistic and picky as I could, so it probably isn't as bad as I made it out to be. It should give you some areas to work on though.
Yes. Precisely. Sadly i don't think you can use reflection that way at runtime.
You can get the name of the calling member with the System.Runtime.CompilerServices.CallerMemberNameAttribute on a passed in optional string parameter.
To be a little more detailed, the expression is tokenized and parsed without regard for the context of use. In fact, at the point it is decided that it is a double literal expression, the compiler doesn't even "know" that the expression will be used in that assignment operation.
Just to be clear, 100 dollars an hour in the Midwest? 200k a year?
Heck I just looked up how to create a calculator in visual studio. It introduces the C# language and it also gets you started with Visual Studio. I ended up ditching C# for Python but making that calculator made my day and I programmed a lot after that. 
It would be good to provide examples and explanation for why someone would use this. Remote Procedure Calls and other flavors of remoting are built into .NET, so what advantages does this offer?
I was thinking exactly that, but Josh's reply does make some sense. I think Alive kinda slots in between a unit test failing when being run by NCrunch and us manually debugging and looking at the runtime values with Oz-code. It feels like it's closing the feedback loop even tighter, but I need to actually play around with it a bit more.
Thanks for the thoughtful reply. If you feel like it could be improved or you run into any problems, we're always eager to hear suggestions at: http://github.com/CodeConnect/AliveFeedback/
Note/warning for all: **This library is under the GNU GENERAL PUBLIC LICENSE. You can only use it in open-source projects!**
It was great. I have a good time to time. I have a good time to time. I have a good time to time. I have a good day. I have a good time to time. I have a good time to time and I am going out of the best. I have a good day
I smell a nasty little troll...
I don't know that's the case, I was on £26K in my first job out of uni. £30K for 4 years experience is about what you'd be on as a teacher and generally software developers make more money than teachers (my wife's a teacher).
Jamie King has a whole load of playlists on his [youtube channel](https://www.youtube.com/user/1kingja/playlists?view=1&amp;flow=grid&amp;sort=da). [This playlist](https://www.youtube.com/playlist?list=PLF932FF551E0ADD16) covers the basics and from there you can pick and choose whatever you want. There is also the [C# yellow book](http://www.robmiles.com/c-yellow-book/) available for free which a lot of people find quite useful
&gt; How another AppDomain in the same process will help you with StackOverflowException? I don't produce those. Ever. Using a library like this for such a case is just fixing the symptoms instead of the cause. Fix the code - don't work around bugs. &gt; It will not help you to run your code under different user either. That is a good point. But then I'd argue that the task you need to run under another user should be a separate program and project anyway, with a clear interface. With the way you do it (and with AppDomains too) you'd need to serialize the arguments, which has plenty of limitations which the developer is not easily aware of. You should better promote your points on why to use this library.
Wow, then I presume your code is so perfect that you don't need to test it ever. So you never had a bug which crashed whole unittest plan.
That's because you don't know what's NP-complete task. As I see hardest questions here are like "how to check number is between two other" And "I don't need it" is not constructive criticism.
I don't consider it required, because I indeed never had the case. If you have a point (like this NP-complete task), then you should just bring it up and explain it instead of getting so defensive. But even then you can probably just define a max-depth and prevent an exception. And I gave more feedback than just this point. Again: &gt; Instead of feeling attacked (which is not the case) you should reason with the arguments and try to better express your points.
We've discussed it but we're really looking to get people in. A few of us are pro-remote though so it's not that it won't happen, but just not yet.
Instead of all those overloads for passing arguments to the method to be invoked, couldn't you use expressions instead? public Task&lt;R&gt; Start&lt;R&gt;(Expression&lt;Func&lt;R&gt;&gt; call) In that case the invoker could write manager.Start(() =&gt; TestFunction(15, "Foobar")) May be some work however.
Thanks for the feedback. I think we'll work on that part of the job spec alongside reviewing the salary. :)
Slightly perhaps, but in any case, could I ask - what front end tech do you use alongside your C# development as I can pass this back to HR.
I wouldn't want to move either. In fact I would be scared of what might happen by just leaving the house.
We'd be looking at around £150k to £190k for a nice 3 bed house around here. Add another 60k on for a better catchment area for schools/hospitals, big driveway, etc. We have one dude journey in from Birmingham everyday, another used to comute from Stoke on Trent, a couple from Derby, etc.
I thought Leeds was a bit of a goldmine for tech jobs? Must be mistaken. It does seem that the range does go from 22k to 55k based on experience and the nature of the job, excluding London salaries.
This is brilliant feedback. I will be showing HR this. Personally, I tend to agree with most of what you have said. I think we have mentioned some items which really aren't there to be focused on - telephone usage will be minimal for instance, it would only to speak to other developers in other companies at a push - Saying that, 2 of our devs don't even have a phone... 
Cheers :) We wouldn't consider a remote worker at the minute, but definitely an option for the future.
I only recently heard of the Joel test score and I've been working in IT and web/software development for what, 14 years now. Great link. I think we'll be putting a revised version on SO.
Obviously standard HTML, CSS, JS. but in terms of tooling: React and AngularJS are the primary frameworks with jQuery and Lodash as utility libraries. Also done some data visualisation with D3js. That said I wouldn't blindly add them to your job spec add unless you actually use them. 
PHP isn't really as bad as all that, but in comparison to C# it is like getting out of a nice new Mercedes S class and into a Ford KA. Given a job where I might be required to drive the KA a few times a month I'd be less than happy about it. I'm based in Lancashire.
Oh another small thing: My first point about MVC/WPF etc. That is important enough to put in the title of the ad. When I'm looking for a job my search string is normally "C# MVC" and the location. I imagine other devs are the same, and your ad might not even appear in my search results if it doesn't have that in it.
ugh. not out of the box nor would I recommend doing this. but if you want to get crazy Fody's MethodDecorator might fit the bill - https://github.com/Fody/MethodDecorator
It may seem cliché but trial and error is the best way. I recommend watching a few videos on how to make certain applications, such as a web browser, calculator etc, and go from there. Mess around, play with new controls and try to get them to work. 
I would if it has tfs support :(
Why do you think its a design mistake? I often iterate over strings and find this Feature pretty useful
May i ask why you want to use VS Code? And not VS itself? 
Only use it sometimes for ASP.NET 5 stuff, I find Atom+Omnisharp to be better though.
I use [git-tf](https://gittf.codeplex.com/). It works on linux and osx.
.NET and web frontend
Make sure the text encoding is set correctly. I once edited a bash script in VS code and it wouldn't run on my linux box. Turns out it was saved in ASCII.
attributes aren't "executed" when a method runs though.their constructor will execute on a GetCustomAttributes() function call but that's about it. 
Yes, you can do this using aspect oriented programming. Essentially, you need a tool like PostSharp that will look for your attributes at build time and weave in the necessary code. Take a look at this http://www.codeproject.com/Articles/337564/Aspect-Oriented-Programming-Using-Csharp-and-PostS
Odd choice, that. With UTF being pretty much omnipresent now, you'd think it's be set to that encoding by default. 
[Microsoft Virtual Academy](https://www.microsoftvirtualacademy.com/en-US/training-courses/c-fundamentals-for-absolute-beginners-8295) has a really good introduction to C# and object oriented programming. 
Because you'd rather drive a smart car than a Ferrari because it weighs less....
It is useful to enumerate a string but semantically, a string is not something that you see and think "oh hey that is a group of characters that we need to do operations on individually." It would have been better to have a method of the string class that returns an IEnumerable&lt;char&gt; imo. 
Evidently not.
If you decorate the method with an attribute, you could create a generic proxy to handle the business of detecting the method and printing the name and parameters in a generic fashion. None of that's great for performance, though. See [RealProxy on MSDN](https://msdn.microsoft.com/en-us/library/system.runtime.remoting.proxies.realproxy%28v=vs.110%29.aspx) for information.
I'd rather drive a hybrid than a Ferrari, actually. Although I'd still prefer a Tesla over either. 
i tried it out hoping it would be something light-weight that would load up quickly. essentially, i was hoping it'd replace notepad++ for minor code changes or viewing files. it didn't meet any of those requirements. so, i still use notepad++ and visual studio.
The reasons that stand out to me are that it probably breaks encapsulation, and turning it into a property, later, is a breaking change: a property is actually some syntactic sugar around an accessor and/or mutator, but a field is just a variable.
When you say "anonymous properties" I assume you mean "auto properties.) The [general idea](http://www.stylecop.com/docs/SA1401.html) is that fields expose the internal workings of your class, where properties do not. Mostly it means refactoring a class is easier down the line. When you first create the class, you may be fine with an outside consumer setting "something" to any value including null, but if later on you need to disallow null, you would want to put that restriction within the property setter. Or perhaps you decide that only the class itself should be able to set that value and you want to have a public string something { get; private set; } Those are all minor refactors when dealing with properties because the class itself controls how it's choosing to expose values to consumers. Another example is a change in underlying datatype. Imagine you have a class that stores the value of an item as public float CostDollars { get; private set; } and that works fine forever until (for some contrived reason) you need to start storing the underlying cost in Euros. You don't want to change the meaning of the existing field, so you create a new field and modify the existing one... public float CostEuros { get; private set; } public float CostDollars { get { return this.CostEuros * EURO_TO_DOLLAR_CONVERSION_RATE }} Consumers of the the class don't know and don't care about the underlying data, but you were able to refactor easily by [only extending](https://en.wikipedia.org/wiki/Open/closed_principle) the class structure. 
Wrap it in a debug preprocessor and it's all good.
Ya, sadly I need a solution for mono because I am using unity 3d
ok, this is mostly for refactoring purposes. I do find it ugly that I see { get; set; } all over the place.
First, you own this code. So changing it doesn't do anything much but if someone else is calling your code by assembly. It has to be recompile. As the user above say, this is just a syntactic sugar. Under the hood it is not the same. One important thing to keep in mind is, setting a field can't fail(throw an exception) as there is no logic on setting it. So the user will expect no exception, while a property can.
Omnisharp is built into VSCode. But extensions aren't in yet. Well beyond color themes and language support in the form of textmate specifications. Unless I missed something in the notes, which is very possible. Basically there are a couple of things that I can do in Atom at the moment that I can't quite automate in VS Code yet in a nice manner. Once extensions are there, I'm guessing it will be a week and the parts that I find annoying will have solutions... Or I'll just build them myself. One or the other.
&gt; How would changing a public field to a public anonymous property break anything? * If a 3rd party is consuming your library, a change from field to property (or vice versa) requires a recompile of their code. They can't simply replace the DLL in their precompiled project. * If there is any reflection code, that will break (looking up fields vs properties) * Fields can have `out` and `ref` keywords used with them, properties cannot. Therefore if anyone was using those with your field, switching to a property will be a breaking change. EDIT: Also, another instance might be if your class field is a `struct` and someone is modifying a value in that value-type. Switching to a property will result in a compile time error. See: http://stackoverflow.com/questions/3729873/problem-with-struct-and-property-in-c-sharp
Additionally, properties are actually methods under the hood, which can change their behavior when accessed/invoked under a closure (e.g. inside a lambda expression). I've gotten bitten by this a couple times when someone changed a property to a field or vice versa without telling anyone.
Because the Omnisharp version bundled with VS Code is old and doesn't (yet) support the features that are shipped with the version bundled with the Atom Omnisharp plugin.
Smart cars run on Linux.
I do appreciate your kind offer of assistance but I think I will need to be doing this myself. Not only the task, but learning LDAP and AD. See, we've got these nice old SOAP web services and moving our code into this millennium is a task I've undertaken. I'm going to add WCF functionality. If the gods allow I shall also add Web API. -- Removed long complaint session about our crappy code and work environment. -- I'm going to update some libraries, add unit and integration tests, logging, dependency inject, and also merge a branch back into the service(s). A problem I have been having is getting the code I have to work against this public LDAP server: http://www.forumsys.com/tutorials/integration-how-to/ldap/online-ldap-test-server/ I just need to slog through that. TL;DR: It's a little existing mess I'm working on and I'll have to learn this stuff anyway.
So does monodevelop.
FileSystemWatcher is generally disliked (but tolerated) since it's very unreliable when it comes to a large number of frequent directory changes. There is no guarantee that any particular event will be fired. Many people prefer to just poll the filesystem instead.
OK. Can you provide links to using polling? Can polling be used to detect file creation, deletion, renaming plus copy/cut and paste? Thanks.
What's really needed is a guide to setup a test AD. I've been doing an integration project lately and haven't found an alternative to debugging in a live environment.
OK, found a post I did on the subject but don't have a response from yet. Here is the source of the information stuff thing: http://www.forumsys.com/tutorials/integration-how-to/ldap/online-ldap-test-server/ I’ve inherited some existing C# code that attempts to retrieve user information from an LDAP server. It’s in production and working as is but I need to make some changes.. Long story short, I can’t test against our production LDAP servers and am attempting to use this one for test/dev. Connection information is kept in an XML config file. The below entry is the one I’m attempting use to do that: ldapserver identifier=”TEST” servername=”ldap.forumsys.com” port=”389″ binddn=”cn=read-only-admin,dc=example,dc=com” bindpw=”password” secure=”false” path=”ou=scientists” I’m not getting anything back. The trapped exception is: {“A protocol error occurred.”} These are the three commands where the action happens. It’s failing on the third. LdapConnection conn = getLdapConnection(server); SearchRequest search = new SearchRequest(server.Path, searchFilter, System.DirectoryServices.Protocols.SearchScope.Subtree, null); SearchResponse searchResponse = (SearchResponse)conn.SendRequest(search); The value of the searchFilter is “(uid=tesla)” with the quotes. I’ve tried the path value as an empty string “” and “ou=scientists,dc=example,dc=com” with the same results. I’m in Visual Studio 2013 using the WCF Test Client to pass in the search values. I’m pretty sure I’m not configuring something correctly. Can you see any problems with this?
Yeah, sorry -- I was confused. I was thinking of a situation where a local variable was assigned the value of a property and then used in a closure, and then that code was replaced with using the property inside the closure directly.
Polling is very "dumb" in that you basically ListDir, compare timestamps with the last time you checked, and see which files are new/deleted then act on it. I think someone has put together a reusable class here: http://stackoverflow.com/questions/22767413/filesystemwatcher-events-raising-twice-despite-taking-measures-against-it/22768610#22768610
&gt; It will not help you to run your code under different user either. Could you not use Impersonation to run blocks of code under different user credentials? &gt;How another AppDomain in the same process will help you with StackOverflowException? It won't. But how many real-world scenarios risk throwing a StackOverflowException? I've only had that risk a handful of times (recursive token evaluation can be quite fun) but even then, this approach seems like taking a sledgehammer to a walnut. I'm not trying to completely disregard your work. I'm attempting to be constructive [as you have asked](https://www.reddit.com/r/csharp/comments/3qin2m/have_you_ever_dreamed_of_running_method_in/cwfisbz). But if you really want feedback: * Not everybody here is out to get you or call your work crap. Chill. * You are going to have people speak against what you have created and talk about other alternatives. That's where you have to sell your library (not sell as in monetary gain, but, explain the pro's and con's of their alternative way versus yours). * Thirdly. Attacking someone's knowledge (or lack thereof) over a topic that you yourself have NO idea that they may or may not know is completely asinine and does nothing for you.
Ouch. Thanks for the heads up. I hadn't gotten to the license portion yet.
Monodevelop is not a Ferrari. Sublime Text + Omnisharp may be a Ferrari. Or a Tesla.
With { get; set;} you can fine tune the access permissions and also perform extra work such as validation. With a simple field you are exposing the variable to the outside world as is, which is sometimes not what you want. I prefer properties for public things because it helps differentiate from my internal fields.
*Programming WPF* by Chris Sells has a chapter on graphics. You can buy an old, but still valid, copy on Amazon for dirt cheap.
What's killing it for me: VB, VFP, PHP I wouldn't apply for a job if there is the remotest chance of having to work on those things. Having that in the description implies that you have legacy software that needs to be maintained, which is not a situation that I'm willing to risk copping. But also, low-ish pay and maintaining Apis? It just sounds really boring. 
I've been re-learning C++ (and by extension, learning C++/CLI for the first time) and decided this was the first project I wanted to do with it. I've had an enum extension library that I've used for quite some time which was basically a hobbled together implementation done over time, but I hated the hoops and inefficiencies I had to jump through to constrain it to the types I was aiming at. C# lacks the ability to declare an "enum" constraint. C++/CLI and MSIL do not. C# can consume a generic with that kind of constraint, it just can't create one. There are options, such as Unconstrained Melody by Jon Skeet that work around this issue in C#, but I wanted to do it without the patch as a post-build step requirement. And I wanted something that would interest me and be useful to me that I could write in C++/CLI. Any feedback (particularly from anyone who is better skilled in C++/CLI than I am) is very appreciated!
Failing to call that initializer will make everything throw null ref's. Super bad. Check for null in each method or make the Sharp instance the result of a lambda expression for static immutability. Using an IOC container? Dependency inject that shit. 
Here's my feedback: The readme is way too verbose. I'd rather see a short (2-3 sentences) blurb on what the project is, how to install it, and examples on using it. Everything else should be in a wiki. A huge wall of text with no real-world usage examples is discouraging for people trying to figure out if your project is worthwhile.
Thanks - I thought about that but it was just easier to do it as one big brain dump (it's a weekend project so time was limited), but I agree with your point - I'll move all but the terribly important stuff to the Wiki.
You'll want to delete/ignore the ipch folder/file in your git repo.
A static class shouldn't require the user to initialize it, at that point, just make it a normal object you create. As for IOC and dependency injection, that was just me complaining about using a static class as it doesn't help the unit testing process of things that utilize the class. You can't mock a static class call. https://en.m.wikipedia.org/wiki/Dependency_injection
No, you're missing the point entirely. The public interface of a type is a contract promising that a type will behave a certain way. The interface is made up of public methods and properties (syntax sugar for methods that provide an abstraction on top of internal state). They allow the consumers of your class to rely on the promises your public interface makes, without having to care about the object's internal state. This makes it possible to provide *multiple implementations* of an interface, which is useful for providing a consistent public model of behavior with very different concrete mechanisms (such as a database access interface with support for different database vendors; new container types that enable optimization for application-specific criteria; and interprocess communication mechanisms that abstract away the transport mechanism).
Well in this case being initialized is not really an option. The lib is already for more-advanced users, and already provides an object class. The reason I am interested in wrapping a static class with it is it reduces a lot of bloat and issues with memory reading the way the lib does, imo. Instead of these: 1. "SomeManager.MemorySharp.Read&lt;T&gt;(address)". 2. "MemorySharp.Instance.Read&lt;T&gt;(address)". You get: 1. Memory.Read&lt;T&gt;(address) Considering the lib has dozens of methods used very frequently when actually using the lib, this very quickly saves 100's even 1000's of lines of code.
At the very least I was scanning for some example code. Don't delete what you've already put if you don't want, but it would be nice to see in under 5 seconds what your package allows me to do that I couldn't do before!
I really wanted to disagree with you because object initializers are great, but you've sold me. It isn't "lack of discipline" to let the compiler alert me to missing required properties. It's taking the potential for human error out of the equation, for myself and anyone using my code.
Love the idea. Is there a NuGet package?
Whoops, glossed right over that.
&gt; The reasons that stand out to me are that it probably breaks encapsulation How? &gt; and turning it into a property, later, is a breaking change Well, only a binary breaking change. For example, at my work we compile all the sources together each time, so that's not an issue for us. 
Good point - I had previously had the generated help file there but removed it since it gets modified every build. I'll pull the longer ramblings out and add some sample method calls. I wrote the original content of the readme.md at around 1:00 AM on Sunday so not much time was spent ensuring the right content was there. ;) It's all XML-doc'd and I gave it a few tests to make sure the NuGet package deployed in a way that intellisense in Visual Studio picked it all up as well. I had a few minutes before starting work today so I added in those code samples. If you get a second, let me know if those code samples were in line with what you were expecting.
Thanks, yeah, I saw that yesterday and meant to take that out. For those wondering (like I was) - that's a folder generated at build for the precompiled headers. It's something you wouldn't see in a C# project (that's the language I normally write in and what was my target audience for the library).
Eh, I didn't try to claim how impactful the breaking changes are or how likely they would break someone's code base or application. Especially since /u/mycall didn't provide _any_ context as to their usage, these scenarios may be completely inapplicable or very impactful. Some people write libraries for public consumption, or even internal enterprise use. Some people use reflection in their own codebase (for reasons), or for inspecting the _public_ interface of a library (with no intent to muck about internal implementation details). (EDIT: Though, I agree that unless your library is designed around people running reflection on it, I don't think reflection is a scenario one should be concerned with supporting.)
Glad to here that as I saw fody also have things for ICommand that looks promising. Guess I will continue on this route then, thanks!
The real question should be... When you have this: private string something; Why not change it to this? private string something { get; set; } The answer I guess is two-fold: 1. Performance. 2. Less to type/read. Sometimes I wish that auto-implemented properties had a nicer syntax so that people would be more inclined to use them. But fields existed in C# from the beginning so they got the best syntax. Auto-implemented properties came later. 
Lousy time of day for me to be thinking, but: * a public writable field exposes a portion of class's state in a way that offers consuming code full control over it. Encapsulation may not be the right word/concept. * it becomes a breaking change for code in the same assembly any time the field was being passed as out or ref parameter to a method, too. In practice, an auto-property is a little more future-proof for anything that's going to be exposed outside the scope of the current class (so, anything that's not private, really, but especially anything public or protected), and the performance difference versus a raw field should be negligible in the vast majority of situations. Also seems like it would be worth pointing out that this is a topic that has been hashed out pretty thoroughly elsewhere.
I'd rather that .NET provided some way to do AOP itself; but for now we have to use PostSharp or Fody. I think that byteweavers like these are just another tool in the toolbox, they can be abused like any other tool but used well I think they're pretty great. I've used AOP techniques in the past and I think they have a real benefit when done well.
&gt; I'd rather that .NET provided some way to do AOP itself This is coming with ASP.NET 5.
You can put private or internal in front of either or both to reduce access from default public.
If you're going to learn Wpf, i'd use learn and use the MVVM practice too. Also testing (unit, integration, etc) might be a decent thing to use and learn. Designing code that is testable normally makes it easier to maintain as well.
Never expected a response like this. Thank you so much for taking the time, its enormously appreciated and kinda proves the validity of this as an exercise! Theres a lot you've mentioned that I'm yet to come across, so cheers for that as well.
It takes some analysis to workout if the code you right falls within the functions remit, but it makes things a lot simpler. Personally I make sure I namespace everything correctly too. Navigating a big project without proper namespacing is a real pain.
I generally use attributes and extensions for enum metadata public enum Module { [Description("Accounts and Users")] [Code("U")] Users = 1, [Description("Payments")] [Code("P")] Payments = 2 } and then extension methods and helpers to get the values back out that end up having calls like var description = Module.Users.GetDescription(); var module = CodeAttribute.Find&lt;Module&gt;("P"); So I get the (mostly) type-safe value from enums, and all of the metadata I could need from the attributes, and I don't need to explicitly iterate through lists to lookup information. Obviously, this is only true for lookup data. Anything that needs to be dynamic would be implemented through a standard collection.
I find ORMs makes project development much simpler - learn linq well and actually the result compares to writing the sql yourself in my opinion.
Oh thank you! Didn't know that :)
Either [Dapper](https://github.com/StackExchange/dapper-dot-net), [PetaPoco](https://github.com/toptensoftware/petapoco) or [Massive](https://github.com/FransBouma/Massive) are the ones usually recommended. There may be others out there too. You should research Micro ORMs for .NET and pick one. They are basically the building blocks for you to make your own ORM. 
That's exactly what I had in mind. PS that's super cool! Thanks for sharing this, its a neat project.
Can you elaborate?
Depends on how complicated your schema is. For most databases, the time it takes to walk through an EF tutorial should be more than offset by the time savings from not writing boilerplate code.
Holy smokes, that's super cool, I had no idea. Thanks for sharing. Finally AOP will be possible as a first class citizen. I see what you mean about the MSIL, might be worthwhile to get an addon that can convert to C# (I haven't used one in a long time, not sure if they're out there). Can probably take a look at the code in ILSpy thought right?
Thanks man, I can't tell you how much I appreciate that. I think most of the pushback I'm getting is from people who think I'm trying to force my *opinion* on them, but I think I'm making an objective argument for ctors (and I'm willing to hear an objective counter-argument, but I don't see one yet). And the truth is that I actually like the initializer *syntax* more - if I didn't lose optionality with initializers, I would be on the same boat with many others.
I'm sure they mean LINQ to Entities.
Here is a really good course specifically designed for your needs: They use C# for code, not VB. [WPF for the Visual Basic Developer - Part 1](https://app.pluralsight.com/library/courses/wpf-vb-programmer-pt1/table-of-contents) [WPF for the Visual Basic Developer - Part 2](https://app.pluralsight.com/library/courses/wpf-vb-programmer-pt2/table-of-contents)
Dapper is my goto for data access beyond straight rote crud now. Highly recommend it to OP.
I don't really know the context of why you are doing this, but I have a alternative if you are doing it for simplicity and if you expect that the machine on which you are running this already has word. Word already has the capability of opening a pdf and saving it as a word file. So what you can do is just call the Word API's to just launch and run word invisibly and just save the file. I had to do it once for a powershell application I was writing and it was around 15 lines of code. I admit, it's not as clean to doing it using the link you provided but it did the job. 
Note that I specifically said "SQL Server Express with Tools" as this will be the version you want to download to get the management studio and engine all at once.
I'm assuming that the GetComponent definition doesn't match how you're trying to invoke it.
I'm not sure what you mean by anonymous property. What I'm seeing is a basic auto property. They're used to provide a level of encapsulation that can be easily expanded to provide validation at a more granular level. Example, instead of having to implement some pattern at a class level, you can validate first and foremost without too much additonal overhead. public string MyProperty {get; set{//..validation; throw exception;}} which is better than public string MyProperty; MyProperty = ""; bool pass = myClass.Validate(MyProperty); if (!pass) { //throw exception; } It also allows you to set more than one element of class state via a single property set. You can set multiple private stores quickly in a single property set call. I'm not exactly sure if anyone does this, but it could be potentially beneficial depending on design concerns. I wouldn't consider implementing auto properties as premature optimization, as it's essentially best practices.
`^` is the XOR operator (and only works on integers and booleans, not decimals), it has nothing to do with exponentiation. You need to use `Math.Exp` *instead of* `^`.
I just changed everything to private static double Mortgage(long p, double r, short t, double n) { n = n * (-1)*t; return p * (r / n) / 1 - Math.Pow((1 + r / n), n); } with no error returned. Will try to run the code now.
I'll respond later tonight. I'll provide greater detail then. Thank you for answering.