&gt;How do people learn about building game engines in C# then, from college? They learn C#. Then they learn about game engines in general. Then both knowledges are combined. There's not much point in writing game engines tutorials for a specific language. The used language is an implementation detail.
I bounce between a few languages and Linux has the best support so I do all my development, including .NET, in a WSL Ubuntu environment on Windows. VS Code remote is amazing with it.
The thread was never about “UWP apps in general”.
AngularJS, VueJS and a little Node on Visual Studio Code under Ubuntu chiming in, but that's not really OP's question, is it :)
The topic includes “Windows development”, which I take to mean desktop apps. They use .NET on the server side, sure.
It's possible, haven't needed to do it in a long time. This [SO post](https://stackoverflow.com/questions/1410127/c-sharp-test-if-user-has-write-access-to-a-folder) might get you pointed in A direction. Best of luck!
&gt;Also, have you thought of abusing git diff or other version controls for this? A 2gb file sounds very much like a binary file, and tools like git diff are very bad for binary files.
absolutely agree, and what makes it annoying as a newbie is that coding something is essentially looking up how one thing is done, then cobbling it together with how something else is done that you also had to look up. in the end it works and you programmed something but it "feels" vastly different to programming in other languages.
I don't purely because of circumstance currently, I very easily could with no difficulty though.
I do dotnet core in Linux. I wouldn't go as far as to say that it is my main dotnet environment (because it's not), but I try to challenge myself so that I won't need VS holding my hands in everything. I still use VS Code though, but coming from Visual Studio, it still lacks a lot (mostly, it's the little things). &amp;#x200B; More precise, I want to become more fluid in dotnet CLI which this environment practically forces me to.
You mentioned below that there isn't much data. I've done a ton of different things in this area. If you can create pipe delimited text files, or formatted files of nearly any kind, you can then super easily read them into classes *or* datatables using the excellent and free [CsvHelper](https://joshclose.github.io/CsvHelper/). Someone mentioned [LiteDB](https://www.litedb.org/). I've used that too - in fact I have it in production right now. It's easier to deal with the more expanded data types (in my opinion) than SqlLite. If you need to update, change, manipulate the data and not just read it in, that's a good bet and very fast and lightweight. You could just create Excel files and use EPPlus as a poor man's database - you can read and write from it - but I think that it's a pretty heavy footprint for just referencing files. I think it also depends on how often the data is updated, and by who. If it's end users and they can be reasonably relied upon not to mess up an Excel file, then that might be easiest for (them). If it's just you - I'd go with the .csv or LiteDB approach. Finally, don't forget that if someone has Microsoft Access that's a super easy way to easily maintain data and have a lot of power to manipulate the data using OleDB in .Net. Best of luck!
What are the killer features in VS that are keeping you?
Most people use Windows for .NET, not so much because of the framework, but because of Visual Studio. It admittedly took me a while to finally make the break to Linux 100% because of losing Visual Studio, but it was not near as difficult as I anticipated it to be. JetBrains has helped ease the transition with top-tier IDEs, including a very good .NET/C# IDE.
Losing Visual Studio is kinda like breaking up with a girl you love, but you know is not good for you. It is extremely difficult, and there is some pain, but eventually you move on and realize there are other's that can make you just as happy.
This already exists. https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/ref
I do, but I only really do hobby projects. Mono, mono game, vscode and .net core work well for me.
May I suggest taking a look here: [https://github.com/quozd/awesome-dotnet#scheduling](https://github.com/quozd/awesome-dotnet#scheduling) &amp;#x200B; It would seem you have two different problems here - the first is scheduling a notification, and the second is trying to figure out when a new schedule is added, deleted or modified. [Hangfire.io](https://Hangfire.io) seems to be perhaps a good bet in this area. May I suggest Redis as the back-end - you can run it easily in containers, on WSL, etc. - I've had excellent luck with it. Hangfire supports SQL Server too if you happen to have that available. Best of luck!
Some of our apps are deployed exclusively to linux (thanks to me), but no, I don't use it as a dev environment.
Woo! Does 'ref' go before 'this' or after?
At my work we create our microservices in .net core and then containerize them in Linux containers
What is your experience with rider so far? I just downloaded it today and still getting used to it. Any tips or advice for someone who just transitioned from VS? I love intelliJ though so I am hoping I love rider as well.
Yeah, this. There has to be someway to differentiate if you are intending to pass a value type as a reference or value, and this is what `ref` is for. Being an extension method or not does not change this, it is simply syntatic sugar, and existing rules must apply. It would also not be good to hide the use of a `ref`, as this would cause unexpected behavior.
Yes. Currently working on various projects in C# (and many other languages) on Ubuntu. I use VS Code with OmniSharp extension. I have to use Linux because of the shell and most of our apps run inside docker containers hence it's much easier just working in a Linux environment. I miss Visual Studio though.
Try my site [here - tornado design](http://tornadodesign.co.uk/?Content=Training) :-)
I’ve tried VS for Mac and Rider, the former just doesn’t have the functionality and is incredibly flaky. The latter is fine and is more of a preference thing. I’ve not tried VS Code fully, but I’m pretty sure I’d rather use the real deal than a lite text editor.
That makes sense. I suppose, in the context of an extension method with a void return type, the only outcome is to modify the value it's called on though?
I know one senior who do that
[removed]
Try it out?
Literally I've spent the last 3 years in my career building Excel VSTO and Visio VSTO applications. There really isnt anything out there to learn it. What other people have said, learn how to do it in VBA first then move to C#. There is plenty of resources out there for VBA excel applications. All the method and object names are the same between them. It was a lot harder to learn Visio than excel since there are more resources out there. But I could say I'm a Visio wiz now, but not many people would care for that on a resume haha.
How are you finding the experience?
JetBrains Rider on Fedora. This IDE has little to no difference to Visual Studio. It did take some configuration to get it perfect, but that's a one time thing.
Unity is a pretty successful game engine, which I would say is C#. At some point, you’re calling into something like DirectX, which is native, but you can do most of your work in C#.
I personally love it. It was a bit different at first, but have since gotten used the differences between it and Visual Studio. My transition was pretty easy, as it I was using ReSharper with Visual Studio, and was also using JetBrains IDEs for other languages, so was used to how they do things, and general design flow and layout of the IDE suite. I started with using all the Visual Studio colors and keymaps, but have since adopted the Rider schemes, as I did find that it was pretty intuitive once you break from old habits (learning new key-bindings is always painful at first). I would not say it is more powerful than Visual Studio, because its not, but for 99% of everything you will ever need, it is. There are currently some features missing, such as T4 templates, etc. that are missing, but their release cycle is much faster being a smaller project, and it receives major feature updates every couple months (i.e. added form designer a few months ago, T4 templates coming very soon, etc.). At first, you will have the obvious "this isn't Visual Studio" foreign feel, but it is temporary. I found that simply starting a project, and focusing on the code, and discovering new features on an as-needed basis made it rather painless. Take this point as you will: Now that I am used to it, I am uncertain if I ever switched back to Windows if I would re-adopt Visual Studio as my full-time .NET IDE, or stick with Rider as my primary. For some projects I might, but for typical .NET Core/Standard back-end library stuff, it is more than enough, and definitely a more responsive UI with less resource usage.
Well..I defined a struct with the Timespan : `dataView[index] = stopwatch_gpu.Elapsed;` And passing a struct (ArrayView) to GPU : `gpu.LoadAutoGroupedStreamKernel&lt;Index, ArrayView&lt;TimeSpan&gt;&gt;(test_for_loop_gpu);`
I know some people. Rider works great! Else visual studio code
It works well as 'ref this', thank you! Including ref is nice and clear too. I've been told very different things regarding performance... some people say 'the compiler will catch things like that, so write purely for readability' and other people say 'dont do x, y or z, it's bad for performance'. I have a very hard time telling which applies and when.
Not the OP but: I use macOS at home and work with VS Code and Emacs + Omnisharp. At work I also have a parallels VM with Visual Sudio if I \_really\_ need it. It's rare for me to boot that up these days though. Usually only for some of our older projects that haven't been ported to .NET Core yet. Roslyn + Omnisharp from VS Code / Emacs is great. I don't think there's anything I \_miss\_ from all-up Visual Studio.
Especially these days
Typically yes, that would be true (at least for well-designed code), but that is not a rule. There is no rule stating that I can add extension method to `int` like this: ``` pubic static void Exit(this int exitCode) =&gt; Environment.Exit(exitCode); ``` Yes, that is objectively stupid code, but it is valid. I am a believer in "properly" using the return values or void in keeping with whether a method is pure or not, but it is not a rule that is enforced, as it only makes sense to do in certain contexts and on certain types. I get what you are saying, it is a handy behavior, but the use of `ref` helps gives clarity to what it is doing. I could foresee all sorts of hidden "gotchas" with any implementation that took a value type as a reference in any non-obvious way.
Switched to Ubuntu a couple months ago on personal laptop. Great experience, and JetBrains Rider is a lovely tool which i would recommend. Yesterday got my first real job as programmer. My Work Windows PC broke while updating on the first day.
&gt;the majorly of developers use C++ js java c#? &gt;C# is only good for private and small projects because (your words) "it isn't popular", thus it implies that it isnt good for large projects? Oo
That's fair. Using 'ref this' turned out to do exactly what I'm thinking anyway, while being transparent like that, so it's a win-win. It only works for structs, though...
Classes should work without the use of `ref`, they are already references.
Hi Manitcor! I really really appreciate for your answer. But the link that you gave me was an article I have already searched for. That post is about get list of &lt;Security tab&gt;'s list, not for &lt;Sharing tab&gt;.
That's true, things that are already reference types work as expected without ref, I tried it on a byte[].
Then how do you explain variable-length types, such as arrays or strings. The compiler cannot know how big those get. Sure, the stack pointer gets pushed around, but that is what I mean. It only moves it around once and not in every iteration
Yeah, I've made a switch to ubuntu around 2 months ago, and I don't plan to go back to windows any time soon. Rider is an excellent alternative for VS when it comes to .NET Core development and using docker is much more pleasant on Linux.
I'm using Fedora on my desktop with Rider for C# and VS Code for the rest.
this sounds awfully like management trying to invent something that already exists, but with a simple, small change, like embed a buisness chat or something like that into it.
So even if I only know C# and my boss only has told me to focus on C# (not a mention of VBA), you'd still suggest me to start with VBA? If that's so then I'll do that. Does NS VSTO ring a bell to you? My boss specifically mentioned NS VSTO but he's not a programmer and I didn't find anything by Googling
Using pop_os to learn c#. Using VScode with omnisharp, been pretty good so far.
&gt; Again, combining projects is not a big bang rewrite. It doesn’t require a rewrite at all. But in many cases it just increases our compile time. Look, we have enough good and experienced people on this, we are proceeding nicely. I don’t feel like elaborating our entire source code layout and strategy on reddit. And all this “nothing is stopping you” is really naive, IMO. Nothing is stopping us except hours in the day.
Lol screw happiness, I have work to do. Get me productive.
out of curiosity, are there benefits to using c# over f# for functional .NET programming outside of the fact that you don't need to learn a new language?
No, but F# isn’t always an option.
Yeah they write a blog post about this, omitting, how we basically bullied folks from FxCop repo to release a 2019 version of vsix extension.
I'm curious about your powershell that runs a container from the registry. I wonder if that's not actually what's happening. Could you link that and we can investigate from there?
This. For some reason, VS Code is amazingly comfortable, for me, to use with almost any other language, but VS still calls to me when I’m doing anything non-trivial in .net. I keep hoping that, as I transition more from Framework to Core, my “muscle memory” will shift, but it hasn’t, yet.
C# In Depth 4th Edition - save that one for later. It is a great book though, once you are familiar with all the terms and mechanics it will explain WHY they exist and were implemented in this way. Also I started like you and now see myself abandoning learning language and even platform in benefit of learning patterns and methodologies. Because knowledge of which collection to use where (for example) doesn't help you, when you need to build something from scratch. So after you finish 2-3 books on C# and maybe 1-2 on .NET - you should read about patterns, SOLID, testing, etc
Yes, I use rider/vscode on Manjaro.
https://docs.microsoft.com/en-us/visualstudio/ide/managing-references-in-a-project https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/namespaces/
All these types are allocated on the heap. The stack only contains a pointer to them and it is a fixed size. Technically the stackalloc expression allows putting these types on the stack. I have not checked how it works internally and what limitations it includes but the general case is as I described.
Not currently, but I've used Nancy on Fedora quite a bit.
The reason is that omnisharp is still unstable, sometimes you lose intellisense, sometimes you lose tests, other time you need something from debugging and it's not there... Even syntax highlighting is limited because of regex based highlighting.
I have it [referenced](https://i.imgur.com/SFs9OcI.png) but no luck getting rid of the red squiggly I added in "using Grades2;" and it was able to find it, was just wondering if doing it that was is poor practice?
For purely web stuff I totally agree. Though VS makes things easier if you will consider Windows Offtop: Why do I have starcraft flashbacks from "docker swarm"
I try now and then. (VS Code or VSMac on macOS.) Some of it is nice. Faster, more lightweight (especially VS Code). If you know the package name, `dotnet add package Foo` is somehow a much better experience than the sluggish VS NuGet GUI. But. It also feels… empty? I’m sure this is in part just having used VS for a decade and knowing where stuff is, but I keep running into things VS does a certain way (or does out of the box *at all*) that both Mac options do poorly, not without an extension, or at all. Mostly, I keep going back to the familiar, slow, but ultimately decent environment.
I have 4 developers in my company. We are all Mac users and code predominantly in .NET Core.
Low res screens is not the best way to share code. Try copying the code and paste it. Just remember to indent it with 4 spaces to format it.
Rider is the answer :)
You are in a situation where your architecture is affecting your ability to actually write code. You are in a situation where compile times in dotnet are actually a problem. That's actually terrifying because dotnet compilation is stupidly fast. You think that small projects are helping that, but they aren't. If you're getting 10x throughput on a parallel compile you're compiling things that don't need to be compiled at all. How much are you paying in developer hardware? How big is your build server? What is all of that costing you? In time, in hardware, in licenses? In developer turn over? A thousand assemblies in a dotnet application, compiled every time you build is insane, and it's not a particularly difficult thing to fix. Splitting stuff that's isolated out of the solution and combinining projects that are related together is relatively cheap and relatively easy. When you eventually have to move this thing to dotnet core, how in the hell are you going to do it? Hours in a day is a pretty shitty reason to keep doing something expensive and dumb. If you work somewhere where you can't get a small amount of time to fix a huge problem you need a new job. Present what you need to do and why you need to do it to management, you'll save money and increase productivity for effectively nothing. From what I can see you've fallen into a trap where you can't make significant small changes because you're focused on making huge, expensive ones. I don't know your code base, but it sounds nuts, and it sounds like you know that it's nuts. Maybe whoever designed this thing was so horrifically incompetent that functionality is so poorly divided that you can't split your application up, but it seems unlikely.
Thank you, will do in future.
Funny enough I've used Autofac but forgotten everything about it. &amp;#x200B; Personally I moved to core and use the built in DI and dont need interfaces. Using the in memory context for your tests gets you away from having to interface the datalayer. &amp;#x200B; That said if you have a few hundred injected classes you either have a huge project and it's going to hurt. Or you've gone too fine grained which is pretty damn common. e.g. You have an order service and an order line service.
Has anyone found that .net core on macOS is a little buggy and weird?
Reading isn't to much of a good learning resource for me. But I will be getting clean code at some point as far as reading material goes. You need to know high level math or simple math for C#? I took an intro to programming class and learned a little about those. And thankyou for the advice! :D
The negative to this is that they obfuscate your code somewhat, so good for existing classes like String but doing it on your own classes needs to be carefully considered and weighed. e.g. if you do it to your entities you might want to read up on the anemic domain model and decide if its the right path to go down. &amp;#x200B; That said I use extension methods heavily in tests so I don't polute the business layer with 'test code' setup / teardown stuff.
I am begining to think folders should be structured by functionality instead of function. e.g. Orders folder should contain the OrderService, Order and OrderLine. As opposed to the Services folder containing the OrderService and the Orders and OrderLine sitting in Entities folder. Because what happens when you have a few Builders or Factories? Do they go in their own folders? The functionality for a single 'area' in the application end up getting spread around everywhere.
I do, it works as well as VS code on windows. Pretty well
Xenko is an open source C# engine. At a glance, it seems pretty advanced. [You can see the source code here.](https://github.com/xenko3d/xenko)
Spam. Rule violation.
Checksum? That requires reading the entire file, which is a waste of time.
&gt; I can run the docker image directly from the registry without creating an actual container. It will still create an actual container. &gt; Does anyone know if its possible to call the "docker run" command from my web app (.Net Core 3) so it triggers the image to run directly and generate the required file? Sure you can. If you have the Docker CLI installed, you can use the `Process` class to invoke it. Alternatively you can attempt to use the poorly supported `Docket.DotNet` library that Microsoft stopped caring about. In both cases you do need to actually have a Docker daemon running to execute your command.
Okay, I was a bit hasty with my answer. What I meant is - it all boils down to a few factors: - If the 'file check routine' is only called like once an hour or even less often then you shouldn't be worried about it's performance at all. - If you don't want to later show 'The differences are at {line}:{chunk}' then checking filesizes and if identical - generating checksums and comparing them will SHOULD be faster than byte-by-byte comparison.
AFAIK Unity is coded in C++ and it uses C# for scripting.
Why? You can create libraries with F# and include them in your C# application without any problem. As far as I know, F# is available even the community edition of the VS.
Omnisharp has been a bit crashy for me (although, thinking about it, it’s been very stable recently...), otherwise really enjoy the development experience on OSX with VS Code.
I have basically zero clue about the intricacies of Windows ACLs, so this comes with a big disclaimer that I was just poking around in the source of [`DirectorySecurity`](https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.directorysecurity) until I found something that seemed to give the right results for a test share I created, and haven't otherwise tested or verified this at all. The .NET Framework already has extensive support for ACLs in the `System.Security.AccessControl` namespace, and various types of ACLs are supported, but there is no direct support for network share ACLs that I could find. However, as far as I can tell the only thing that needs to be done is to pass [`ResourceType.LMShare`](https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol.resourcetype) to the underlying API. The only way to do that is to inherit from `NativeObjectSecurity`, which also requires inheriting from `AccessRule` and `AuditRule`. All the implementations need to do is pass down the parameters to the base classes, so there isn't anything complicated going on in this code: public class NetworkShareSecurity : NativeObjectSecurity { public override Type AccessRightType =&gt; typeof(FileSystemRights); public override Type AccessRuleType =&gt; typeof(NetworkShareAccessRule); public override Type AuditRuleType =&gt; typeof(NetworkShareAuditRule); public NetworkShareSecurity(string name, AccessControlSections includeSections) : base(true, ResourceType.LMShare, name, includeSections, null, null) { } public NetworkShareSecurity(string name) : this(name, AccessControlSections.Access | AccessControlSections.Owner | AccessControlSections.Group) { } public override AccessRule AccessRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type) =&gt; new NetworkShareAccessRule(identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type); public override AuditRule AuditRuleFactory(IdentityReference identityReference, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags flags) =&gt; new NetworkShareAuditRule(identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags); } public class NetworkShareAccessRule : AccessRule { public NetworkShareAccessRule(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AccessControlType type) : base(identity, accessMask, isInherited, inheritanceFlags, propagationFlags, type) { } public FileSystemRights FileSystemRights =&gt; (FileSystemRights)AccessMask; } public class NetworkShareAuditRule : AuditRule { public NetworkShareAuditRule(IdentityReference identity, int accessMask, bool isInherited, InheritanceFlags inheritanceFlags, PropagationFlags propagationFlags, AuditFlags auditFlags) : base(identity, accessMask, isInherited, inheritanceFlags, propagationFlags, auditFlags) { } public FileSystemRights FileSystemRights =&gt; (FileSystemRights)AccessMask; } Example use: var acl = new NetworkShareSecurity("ShareName"); // can be either the name of a share on the current system or a UNC path foreach (NetworkShareAccessRule rule in acl.GetAccessRules(true, true, typeof(NTAccount))) Console.WriteLine($"{rule.IdentityReference} {rule.AccessControlType} {rule.FileSystemRights}"); For details on how to use and interpret these see the [`AccessControl` docs](https://docs.microsoft.com/en-us/dotnet/api/system.security.accesscontrol).
I'm curious why nobody uses `(n &amp; 1) == 0` anymore to test if a number even? This should be much faster than a division...
Integrating F# to an existing project may not be feasible for infinite number of reasons: corporate policy, complicated build environment, learning cost, missing tooling, one off need for functional work, simple unwillingness of the rest of the team etc etc.
It's cheaper to read entire file to memory and generate something out of it rather than running byte by byte comparison. Just like it's cheaper to do: A = 1+2+3+1+2+4+5+6 = 24 B = 1+3+3+1+3+4+6+6 = 27 A == B Rather than comparing every number that amounts to 24.
Yeah, running Kubuntu and do all my C# dev in VS Code. I miss VS but the dotnet cli isn't too bad.
That is correct. Unity is a C++ game engine. C# is used for scripting, and slowly more and more functions on top of it are added using C#. But underneath it all, still C++.
I do. Windows is genuinely awful. Rider on Fedora for me. Rider is far better imo than VS is anyways, so nothing lost there.
What? What does a desktop have to do with the OS?
Rider on Fedora
No because .NET Core still doesn't have a story regarding Forms, WPF and UWP. Also VS Studio enterprise tooling for debugging including GPGPU and mixed languages (.NET / C++), architecture diagrams and database integration is the best.
Structure your learning by creating a robust project. &amp;#x200B; Use Microsoft's .NET documentation and [ASP.net](https://ASP.net) tutorials to guide you. &amp;#x200B; This video has in depth advice on building your project using .NET and C# &amp;#x200B; [https://youtu.be/oC483DTjRXU](https://youtu.be/oC483DTjRXU)
Well im not going to give any examples for this. But simply this, what kind of question is this? It shouldnt even been to be asked.
Got 1 min before train arrives at station: - StackOverflow number of questions and answers; - Number of public github repositories in C#; - Usage of c# frameworks (.net core repository for example); - Number of LinkedIn/Glassdoor/etc c#/dotnet job openings; - Freaking Microsoft stock growth :P
No, UWP uses AOT compilation to native code, there is no VM. .NET Native is what you want to read about here.
&gt; Learning the base libraries is what takes the time. Yep yep. I had one newcomer struggle with what to use: they would search and find something in the framework that seemed applicable, and start using it, only to be told "oh no, don't use that, it was replaced with this years ago".
You're getting the whole notion of how any civilized discussion should work completely upside down. So you have a theory that C# is dying - care to show any evidence that proves it?
Mono AOT compiler is planned to be part of .NET Core 5, because it has seen more deployments into production (iOS, PS4, Switch, Wii) than .NET Native (UWP only).
Have you ever used VS Community? If so, how does VS Code work for compiled .NET projects and apps? I've not really used VS Code but I was under the impression it was just a glorified text editor, rather than a full IDE.
ASP.NET Core has gone away from using exceptions as a response in actions. You should instead make your action return a IActionResult and return for example BadRequest()
5 years in, windows updates are the bane of my life as a windows dev..
Rider/Mono on Redhat enterprise Linux 7. Since I also use Jetbrains CLion and Pycharm, Rider was the obvious choice. Personally I don't care much for VS.
as a relatively new guy in the field, i prefer doing terminal applications which largely don't care what .net type you use (most recent is better, prefer regular .net or core3.0), or if i need a gui i'll default to winforms on .NET 4.x for the simple ui designer. last i checked the winforms designer on .net core projects wasn't great.
Sounds like you want to write a clickbait article with no actual knowledge about your subject.
My goal is to follow a few tutorials, maybe do some practice C# exercises, maybe build a couple small stuff. Then put 100% focus into a decent project and fully complete it. I don't want to fall in the trap of watching tutorial after tutorial. Thanks for the video, saved it for later. Shouldn't I be focusing on Net.core or whatever over .Net? Or am I missing something. That's what I've been hearing people say here to just focus on core instead.
Yes, but the Mono *framework* is planned to be EOL by then. The Mono in .NET 5 will use .NET Core’s base class libraries. (That’s the plan, anyway. The two have been converging for a while, so it may just happen.)
Readability and disregard for microoptimizations
In the standard, there are instance and virtual methods, which are called on objects, and static methods which are not.
That's great to hear! I've used Code on and off to write scripts, but it's been a year or so since I've tried it out for C#. At the time the support seemed lacking _just enough_ to slow me down; I'll have to find a way to give it another try.
It's a human problem. You're trading pragmatics for maintainability. If you introduce another language into your team, you either need a dedicated resource or have to train everyone. The first approach creates fragmentation, the second- it's going to take a long time to bring everyone up to speed. If you're lucky enough to have someone who knows both, it's a timebomb before: oh shit, that f# dude just handed in his resume; oh shit we have to train our new engineer twice.
They are one off checks. I don't have the ability to store pre-hashed values on the remote server.
This doesn't exactly have a straightforward answer. The runtime itself is C++. The various toolchains are probably C/C++. The core of the editor is C++, but most of the UI is done with C#. However, a bunch of their libraries that handle functionality like animations, networking, and sound are C#. Underneath all that, eventually, you get to a C/C++ layer, but there's enough C# that I count it as a C# game engine.
It's readable for me, because I learnt it that way. I can somehow understand the point about the disregard for microoptimizations, but something like tests for a number being even/odd is usually used in a hot path where such an optimization becomes extremely important. I don't like using `n % 2`, because `n` might be a non-integer type, which might cause unpredictable results when `n` is the result of a computation. `n &amp; 1` for non-integer types simply doesn't compile.
I do, VSCode and Arch linux. Its absolutely wonderful.
I have been developing on Windows for most of my career. However since ~2002, My wife and I have been Windows free at home. I only use Windows for work, which I get issues a work only laptop. At home, all of my computers have some form of Linux and FreeBSD. My primary laptop has Debian 9 with dotnet core 2.1 and always the latest Visual Studio Code. I do develop on my primary laptop. Only recently, I had to purchase laptops with Windows 10 on them for both of my children because of their school requirements. It was the first time in about 12 years that I bought a computer with Windows pre-installed.
No
Which one supports the most devices, and which one has the most features though?
Fair enough.
I am not sure why you are getting downvoted here. But I get that certain corporate requirements or other complexities force people to need to use certain tooling. Vendor lock-in is still a big problem in some places.
Also recommend: Paul Louthy's [Language-ext](https://github.com/louthy/language-ext).
No. But I prefer C# in .NET Core 2 in Linux over python for tasking/automation anyday. PROTIP: Check out Rider from JetBrains
Yes, but Mono is more than just the libraries.
he probably finds using Windows easier as VS is so much more powerful than (I think) anything else and is only avaliable on windows AFAIK
Yes, but for .NET Standard, only the libraries are relevant. If there is no difference between .NET 5's (née .NET Core) and Mono's available base class libraries at that point, then that's one further consumer of .NET Standard that's become obsolete (much like .NET Framework has with .NET Standard 2.1). That would basically leave just .NET 5, UWP, and Unity.
u/Enlogen thank you so much for the clarification. That makes sense as to why it can't access it. I used the following C# class: which is used by the JSON deserializer to instantiate the data in: namespace weatherApp { public class WeatherData { public class Coord { public double lon { get; set; } public double lat { get; set; } } public class Weather { public int id { get; set; } public string main { get; set; } public string description { get; set; } public string icon { get; set; } } public class Main { public double temp { get; set; } public int pressure { get; set; } public int humidity { get; set; } public double temp_min { get; set; } public double temp_max { get; set; } } How would I define these outside the class and still have them be able to be read in from the JSON?
u/progcodeprogrock thanks. I'm -very- new to C# and the way it treats classes is a rather steep learning curve for me.
Removed: Rule 1, Rule 4, Rule 6.
[It looks like you want to write a clickbait article with no actual knowledge about your subject. Would you like help?](https://images2.minutemediacdn.com/image/upload/c_crop,h_699,w_1243,x_128,y_0/f_auto,q_auto,w_1100/v1554999078/shape/mentalfloss/504767-Microsoft_0.jpg)
One of us, one of us!
If you click on the links on that page you posted, there will be a nav at the left. On the bottom, there will be a link "Download as PDF".
I know about that but it doesn't download every page which means I have to manually go to a page in every category and download the PDF. If there's no other way I'll do that but it would be better if they were all in the same PDF. Thank you for your helping!
What is the project .NET framework being used for the two projects? If you right-click on the project "Grades.Test" and "Grades2" and choose "Properties". In the "Application" tab under "Target framework", what frameworks are set? Are they the same framework for both projects? https://i.imgur.com/3d6bvKr.jpg
I do. Not proffesionally (in work still visual studio on Windows), but in home .net core + rider. Always.
I've worked with Xamarin Forms and ASP .NET Core on a Mac for nearly 7 years now. It's been a bumpy road but every time I try to use Xamarin from a Windows machine it's worse.
&gt; Personally I moved to core and use the built in DI and dont need interfaces. Using the in memory context for your tests gets you away from having to interface the datalayer. This is something I'm looking into but there's a bigger world than ASP .NET Core. While MS has recently made those layers available for other application types, they haven't built an application framework for, say, Xamarin Forms that makes it transparent. Deep within your DI code is code similar to what I've outlined: a little bit of code runs to determine the controller that corresponds to a route. A little bit of reflection runs to determine the action that should be executed. Then a little bit of reflection is used to instantiate that controller's object graph. I get that you don't have to make an interface or other abstraction around a `DbContext`, but that's not really "eliminating interfaces". MS designed the framework to depend on an abstract class, and you implement that class. Abstract classes and interfaces are similar enough to be congruent here. And I'm really not sold that the interfaces harm me. I haven't seen a strong argument against having them.
CoreCLR and .NET. Native are being dropped in favour of Mono's AOT compiler and linker for native and WebAssembly code generation in what concerns .NET 5 AOT.
even better, if that excel sheet isn't too complex, export it to CSV and handle it from there. EPPlus has some pretty large overhead.
obviously .net core 3.0 supports most devices (since it's the CORE project), but as yet, regular .net still has more features and if you want to use winform for your gui it's better in regular .net a terminal application in .net core 3.0 will run on a lot of devices though.
I have been contemplating this for a bit now. With the rpi out, it seems like a waste to not try making a new home office for $55, hehehege.
what's inside your method with your for loop is what you're trying to execute on the GPU, stopwatch is not an object that is available on the GPU but you're referencing it in the code you're trying to execute on the GPU, that doesn't work
No high level math necessary unless your particular area of interest requires it. Simple math is always useful for programming.
Not free as with Vs community though?
Hey, I'm sorry, I couldn't really get yours to work... I'm not entirely sure why not. But I remembered I had used some code from Microsoft's documentation to update a label with the DateTime every second, so I repurposed that. Is there any inherit problem with doing so? (Below is my code) &amp;#x200B; // DispatcherTimer setup System.Windows.Threading.DispatcherTimer dispatcherTimer = new System.Windows.Threading.DispatcherTimer(); dispatcherTimer.Tick += new EventHandler(dispatcherTimer_Tick); // One minute dispatcherTimer.Interval = new TimeSpan(0,1,0); dispatcherTimer.Start(); // System.Windows.Threading.DispatcherTimer.Tick handler // // Updates the current seconds display and calls // InvalidateRequerySuggested on the CommandManager to force // the Command to raise the CanExecuteChanged event. void dispatcherTimer_Tick(object sender, EventArgs e) { // Updating the Label which displays the current second StreamWriter repeatLogEntry = new StreamWriter(@"ServerLog.txt", append: true); foreach (KeyValuePair&lt;string, string&gt; server in ServerDictionary) { string dataRow = string.Format("{0,-30}{1,-20}{2,-25}{3,-40}", DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss.fff"), server.Value, server.Key, PingDeviceForLog(server.Value)); repeatLogEntry.WriteLine(dataRow); } repeatLogEntry.WriteLine(""); repeatLogEntry.Close(); // Forcing the CommandManager to raise the RequerySuggested event CommandManager.InvalidateRequerySuggested();
It's easiest to think of a class as a blueprint to create an object. The class defines what data and functionality is available on an object of that type. When you have an object of type Main, that object has the properties "temp", "pressure", "humidity", etc. Every object of type Main can have its own data without affecting any other object of type Main. In this example: Main mainObject = new Main(); "mainObject" is an instance, or object, of type Main. Behind the scenes, your JSON library is calling new to create the objects for you.
About a year ago I ditched Windows for my day job. I switched to arch Linux and the jet-brains all product bundle. I love rider and I think datagrip is a good replacement for Sql management studio. There are 2 programs that I used on a regular base (linqpad &amp; fiddler) that I didn't find a decent replacement for (I tried some alternatives but none seem to come close)
Thanks. Looks exactly what I need.
Thanks a lot. Now I know in which way I need to solve my problem.
Your WeatherData class would hold properties of the different classes you defined inside it: namespace weatherApp { public class WeatherData { public Coord Coord { get; set; } public Weather Weather { get; set; } public Main Main { get; set; } } public class Coord { public double lon { get; set; } public double lat { get; set; } } public class Weather { public int id { get; set; } public string main { get; set; } public string description { get; set; } public string icon { get; set; } } public class Main { public double temp { get; set; } public int pressure { get; set; } public int humidity { get; set; } public double temp_min { get; set; } public double temp_max { get; set; } } } I hope this helps.
To be frank, they are an extra layer of bullshit. If an interface doesnt actually serve a purpose its just obfuscation and one extra click while im trying to work out what the code does... Not much else i can add. Take this response with a grain of salt, its just an opinion, we will never work on the same code base.
I've run into problems like this a few times. Try cleaning the solution and restarting visual studio. I know it sounds dumb, but it has weirdly worked for me. Also can you post the code from the gradebook class, might be you just need to correct a constructor.
&gt; and one extra click while im trying to work out what the code does... Mitigation: when the interface and implementation are in the same file in that case, it's not an extra click. And good IDEs have a "go to implementation" that shows you a picker when there are choices. ;) I'd work in a code base that did anything differently, I just don't find this one significantly challenging compared to the *last* codebase which used a "only use interfaces when needed" convention.
The $ must be a trigger for this sub.
Actually that seems to be the better choice for an wpf application. I just would give it a try.
Thanks. I'm a bit stuck in my old ways and still use WinForms :)
There are dozens of us!
Not really Linux, but i switched from Windows and VS to macOS and Rider and have never looked back since, even if i would go back to Windows i would still prefer Rider.
Debugging a .NET application on linux is a horrible experience. Especially large applications. Rider's debugger slows the application down by magnitudes, and VSCode is not really an option for large complex projects. Not only that, but profiling sadly. Hard to match either the jetBrains or built in Visual Studio profilers (neither of which are not available on linux)
As a long-time VS user, you hit the nail on the head.
// FILE 1 public class Handle public List&lt;DesiredType&gt; Music(Music[] musicData) And calling it looks really nice: Handle.Music(musicData) I would do the same (or something similar) with file2 too.
When the interface could be deleted and the code works the same, do your mental gymnastics, but its fucking YAGNI...
`TimeSpan` is a struct, though?
I wonder if anyone has tried out Cpanel/WHM with .NET core support(nexus core). How good is it, and is it ready for production?
Ok that's fine then, but stopwatch is an object and you can't call start/stop methods from the GPU.
Thanks for the feedback. I will look into using the Process class.
 PS C:\docker&gt; docker run &lt;CONTAINERNAME@REGISTRY&gt; Unable to find image 'CONTAINERNAME@REGISTRY' locally 1809: Pulling from CONTAINERNAME 29c2f229a128: Already exists 5d724aeeb884: Already exists 60682405dd89: Already exists 3b9cd0202583: Already exists d6b50c78a0be: Already exists 554eeb01287a: Already exists 11fae8ca3d91: Already exists 900b56814f57: Pull complete a05e3a4fde95: Pull complete 1db94e1e9690: Pull complete 6f688c2af2f0: Pull complete 6a38f243f0a9: Pull complete d5cab4b95ecd: Pull complete Digest: sha256:ff818a6d82c89b7a060fc352a00f0d8b6b5f075d9152bd7823094b259e585dcc Status: Downloaded newer image for &lt;CONTAINERNAME@REGISTRY&gt; CONTAINERNAME 0.9.19197.4 Copyright © 2019 @MYCOMPANY ERROR(S): No verb selected.
Stop saying that!
/u/Daomephsta is correct and /u/WhyCantIGetAGoodName is correct if you wanted to know the name of the dot operator. You may also be looking for the technique commonly referred to as *method chaining*, but that usually involves 2 or more method invocations for a single line of code like `someString.ToUpper().Trim();`.
Fair points. As for me, I've learned that a number is even if `num mod 2 = 0` all the way from school.
I've made a GPU accelerated mandelbrot rendered in WPF with a similar library. Lookup mmizzle9 in github, its my mandelbrot project and it's in the wpf solution. There's also a cpu renderer.
I'm currently developing asp.net+react on dotnet core 2.2 on Linux. Dev machine is Fedora 30, self-contained packages are deployed on RHEL 7. Using vscode, which is *okay*. I miss advanced features of vi (and the vi-like plugin didn't do it for me), but have been dealing with it as the breakpoint and inspection support in vscode is handy. I don't really miss anything from Windows/VS, because last time I used either was .net 1.1 on VS 2005 at a previous job (in 2009...). vscode seems to provide everything I expected. FWIW, I've been mostly Linux-only at work for about 10 years (4GL/bash/etc and a bit of PHP which is being killed this summer thanks to dotnet). Windows-based dotnet was never a consideration.
Personally I'm just against yearly licensed software instead of version licensed software. Nothing cargo culty about it, I'm just a fan of purchasing the rights to something once.
It's working :) I have one more question, I hope you don't mind me tacking it on. Bit of a stupid question but the keywords (public, private, static etc) confuse me a little. &amp;#x200B; I have my timers and stuff all working but that is all created / initialised in the MainWindow class... Including two dictionaries I created to store info about the servers. &amp;#x200B; Outside the class I have some methods and I want to call one of those methods using items the dictionary as parameters, but it doesn't allow me to do so. I thought perhaps if I made those dictionaries 'Public', or possibly referred to them as MainWindow.Dict... but it seems not. Can you point me in the right direction? &amp;#x200B; I want to access ServerIPDict and ServerTextBlockDict inside my method BtnPingAll\_Click. If I put the same code inside MainWindow() it works, and I can call method PingDeviceUpdateTextBlock from inside MainWindow() as well... &amp;#x200B; &gt;namespace NameSpace &gt; &gt;{ &gt; &gt; &gt; &gt; public partial class MainWindow : Window &gt; &gt; { &gt; &gt; &gt; &gt; public MainWindow() &gt; &gt; { &gt; &gt; InitializeComponent(); &gt; &gt; Dictionary&lt;string, string&gt; ServerIPDict = new Dictionary&lt;string, string&gt;() &gt; &gt; { &gt; &gt; {// Stuff} &gt; &gt; }; &gt; &gt; Dictionary&lt;string, TextBlock&gt; ServerTextBlockDict = new Dictionary&lt;string, TextBlock&gt;() &gt; &gt; { &gt; &gt; {// Stuff} &gt; &gt; }; &gt; &gt; // Stuff &gt; &gt; } // public MainWindow() &gt; &gt; &gt; &gt; private void BtnPingAll\_Click(object sender, RoutedEventArgs e) &gt; &gt; { &gt; &gt; foreach (KeyValuePair&lt;string, string&gt; server in ServerIPDict) &gt; &gt; { &gt; &gt; PingDeviceUpdateTextBlock(server.Value, ServerTextBlockDict\[server.Key\]); &gt; &gt; } &gt; &gt; } &gt; &gt; &gt; &gt; &gt; &gt; public string PingDeviceUpdateTextBlock(string serverIP, TextBlock txtBlock) &gt; &gt; { &gt; &gt; // Stuff &gt; &gt; } &gt; &gt; &gt; &gt; &gt; &gt; } // public partial class MainWindow : Window &gt; &gt;} // namespace NameSpace
I could if I had room for Linux on my Boot Drive (I do use Linux as my main OS on my laptop tho). I use rider on my laptop
Relates: what's the difference b/t a method call &amp; method invocation?
with all the extensions, it has way more features than a text editor (e.g. it has debugging), but it has less features than I would expect from an IDE (e.g. it doesn't have any database management extension at the moment) personally I count it as an IDE, but if you want to count it as a glorified text editor, that's also fine
At the bottom there's a link to the docs' GitHub repository. I think you can clone it and generate the website offline using DocFX.
Ditto on omnisharp. It feels like it breaks every other week. I'm useless without my intellisense!
While I can see how all those methods are related, I think they should probably be split up into different classes. I see `MusicProcessor`, `PictureProcessor`, `AnimalProcessor`, etc. Another more general class may handle the opening of files or connections and pass the result on to the specific processor/handler. If you don't know what to name your class, you don't really know what it is.
You can look at Microsoft itself, they don't have big projects written in C#. Unless you looking to claim Windows, Office, OneDrive, etc. are written in C# (they actually written in C++), they do have some APIs written in C# but the meat of the code is mostly written in C++ and other mix and match of language and APIs. Is pretty much the general concensus of Windows Development.
If you run `docker container ls --all` I suspect you would see the container. So you cannot run a container directly in the repository. You would have to run it on a machine with the docker tooling installed.
So, let me see if I understand this correctly. This thing takes a viewmodel and generates a view for it automatically? That sounds pretty neat!
I am referring the web service and calling it using BasicHttpsBinding
OP wants insight on Windows Development from third-party developers, not from Microsoft. Was a nice try though.
I think i know the problem. You cant access these from an other class because MainWindow isn't a static class. You need to have the mainwindow instance and that could be done using Application.Current.MainWindow or creating a static instance property in your mainwindow.
I use rider for C# and then I have mono set up as my compiler in the project structure. I switch between arch and mint frequently depending on the situation.
Method invocation.
Thank you! This is what I was looking for
Good lord, you are correct. Thank you this is all coming together now.
I couldn't watch this video, the way this guy talks just gets under my skin. He sounds like a mix between Bill Lumbergh and any stereotypical brogrammer. If I close my eyes I can only imagine him coming into my office, finding the closest chair to put his leg up and talking at me for hours on end. It doesn't help that he speaks in a very monotone way (Not sure how, but I think he traps all of the character inside of his body and only lets his tones our via his extremely aggressive hand movements). Lastly, come on Coder Foundry. You run a coding bootcamp but you use squarespace to drag and drop create your terribly average looking website!
So, what would the class name be for File1 and 2? And for example the class names and methods name? :)
Here's how I see it with respect to YAGNI. This is my process, I'm going to talk about it as if I were reviewing your code in my codebase. You disagree and what you're saying is how you'd review my code in your codebase. The part where we see eye-to-eye is if I were actually working in your codebase, I'd figure out how to follow your particular dogma because it's usually less important to bicker about the architecture than to implement features. I'd only stamp my foot if I felt you were making a grave error, but this particular squabble's not grave even when I contrive a worst-case. But in terms of my practices: If "getting in the same file" doesn't narrow it down enough there's an SRP violation. The less things the interface does the more useful being in its file becomes. I've worked in projects where the interfaces did 3+ things and it's certainly more useful to be able to go straight to the right method in those. 1) VS can do that and 2) You don't need that feature if there's only one method. Second, I test everything. If A depends on B, then at some point along the line B is doing something that needs to be mocked, probably because it relies on C and D and it's easier to mock one thing than two. I used to start with no interface, then extract the interface once I needed to mock the type. What I discovered was I ended up needing that interface 90% of the time. On that team, I had plenty of coworkers who never did that. My code had 90%+ coverage and a very low defect rate. Their code had entire releases dedicated to fixing their bugs. You see the YAGNI as the 90% case, but I'm finding it to be the 10% case. At some point in the thread you mentioned maybe I have too many layers, that's a valid assertion. But the bit of code I'm working on is pretty volatile right now and already 2 months in we're discussing changing the low layers. I "overdesigned" it because I learned over the past few years what the warning signs look like and when I need to protect myself from change. We are in completely different contexts and domains. I think you might need to open your eyes to the chance that the practices you follow won't work well in my domain and vice versa. Based on your attitude, you're right. I'd never make a hiring decision to work with you if you believe it's appropriate to tell your peers to "wake up" when you've otherwise done a decent job explaining your view.
Nothing
I still use windows (company policy) but I switched to 100% rider in may/june last year, before that I was using about 50/50 for at least 6 months. Rider is imho superior even on windows. It lacks some features (bloat) that VS has, but its rarely anything I need and it makes up for it in speed. Once or twice I have opened VS when I needed some feature in the debugger that isnt available in rider (yet), but Im not kidding when I say that its like once or twice in over an entire year. Rider is great. :)
I think some example code would be helpful here.
Didn’t know that. What’s the problem and what do folks use for binaries?
That exception is useless on its own. It's a wrapper exception used when C# is calling some delegate on your behalf and that delegate fails. The gist is, "I was trying to do A, but to get there I needed to use some code that does B. That code failed, but I have no way to explain why." The `InnerException` property of that exception has the exception that was thrown by the other code (the "target of invocation"). It's possible THAT is also just one wrapper around the underlying cause. If an exception has a non-null `InnerException` property, you need to chase that until you find one that has null. That is the real problem, and every other exception just shows you where in the chain it was called. So find that and see if that exception doesn't help you.
XD I had to make the webcall Async
Yes! Different classes in their own separate files! music, pictures, animals, and food would all get their own classes, and potentially yet another one for the common functionality, like GenerateDataTable. Most importantly, if you aren't sure of what the names should be now, wait until you have fleshed out the code more and see what the class actually *does*, and derive the class name from that. Think of a class as a thing. For the name think about what it is when it is instantiated - when you have created an object. What is it? What does it do? * Does it just pull music information from an api? MusicRetriever * Does it convert music information into a DesiredType? MusicConverter * Does it handle received Picture information? PictureHandler Keep your classes small - don't try to do too much. Don't be afraid to split some functionality out into another class, and don't be afraid to combine two classes into one.
When I try that the class works fine but I end up with the error: Newtonsoft.Json.JsonSerializationException: Cannot deserialize the current JSON array because the type requires a JSON object.
Dang. Uh...probably wanna go with the size-&gt;checksum-&gt;byte-for-byte route or size-&gt;byte-for-byte-&gt;checksum, whichever others more I’m know can prove is faster. What types of files are they?
Add one more! I used to do c# on windows in Visual Studio, after these comments I’m sold!
Yes, it generates the view and the app. You just write C# inside a library that has no dependency on WPF. This process is done by running a single command and results in one .exe file that you can share (thanks to Fody Costura).
I am 50/50 Debian/Windows. Have some .NET Framework to do so can't go full Linux (yet).
Are you trying to get multiple instances of WeatherData? If that's the case you should deserialize to List&lt;WeatherData&gt; instead of to WeatherData. If the outermost characters of the json are [] then you need to deserialize to a collection; if the outermost characters of the json are {} then you need to deserialize to an object.
In .net framework, we used something along the essence of database compare by redgate. They dropped support for it so we started using database projects.. stored schema and deployment was quite easy since it will write all the t SQL scripts automatically. Don't know if this might apply to you.
I prefer Rider regardless of OS, so a gentle intro might be to try it in Windows first. Getting the compiler working on Linux can be a bit finicky (but I did it so it can't be that hard).
To add to that, if you want something database independent.. you might need a repo pattern with IOC containers. Might be tricky to deploy in this case. Might need to write scripts for each of the targeted database types.
I used Elementary OS with VScode for some time
I use OSX and VS Code and code mainly in dot.net and js
.
C# cannot run SSIS packages directly. Those packages require a runtime that is its own stand alone program. The SQL Server agent is a superior scheduler for running SSIS packages and stored procs. I suggest writing custom SSIS components in C# if you want a project. Then call those components from a package. You will learn alot about c# and SSIS.
Sure: read the sidebar
Thank you very much for the insight! I will start my research with custom SSIS components.
pretty dang neat, I like the use of attributes. Good work, I might use to make quick tools I would normally just make into a console app.
I’ve got to go straight to compiling, no Microsoft Windows in my house.
If the jitter doesn't emit (n &amp; 1) for (n % 2) I want my money back.
You should have "ICsvHandler" interface on each object So you would have `class MusicImport&lt;DesiredType&gt; : IDataImporter&lt;DesiredType&gt; {` And the interface would look like, interface IDataImporter&lt;T&gt; { ICollection&lt;T&gt; FromCsv(string filePath) } Admittedly, idk why you are passing an array to a data import method. Arrays are of static length, but CSV's can be of any length. Then you can create a single method that returns the correct data importer based on the file or folder name or whatever other stuff you have going on.
Not the OP either, I run a Win10 VM. If it's .NET Core web/mvc, then I just use Rider / GitKraken / Azure Data Studio on the macOS side. If it's older .NET Framework, I use the Win10 VM and use all the same tools (but SPSS instead of Azure Data Studio).
 
Look up Azure functions / WebJobs. I believe AWS Lambda is similar.
Lookup Try Dotnet. Supposed to be the .net equivalent of Jupyter notebook.
Also over the day I realized I could set it up in a sort of compromise. It wouldn't be hard to write a method that tells AutoFac to register "any public concrete type". I could *follow it up* with the current methods and get convention-based registration of types with interfaces. That way I wouldn't *have* to define an interface. (Autofac lets you re-register a type, and later registrations replace earlier ones, which is useful here and a danger if you aren't thinking about it.)
I don't think the rpi is going to have the power you'd want for a workstation
Do a mobile app in Xamarin Forms.
Holy crap, that's awesome. I should give this a whirl and see what I can get it to do.
I somewhat agree. I wouldn't say you need Calculus to program most of the time, but an understanding of Algebraic concepts and Geometric concepts (graphics programming) are great skills to have. Computers understand numbers, so it helps if you do too. Let's say that you are making a Server-Client architecture and you want to send a text message from the Server to the Client. The Server has to turn the text: "Hello" to bytes (serialization) to be sent over a TCP connection (networking/internet). It helps to know how to use an array of bytes (byte\[\] in C#) and how it's necessary.
Yes. Because most problems are best solved by a mix of paradigms, not one or the other.
OP wants to know Microsoft's stance on whether all Windows programming should default to .NET.
That's another issue with such a big framework. You have to leave so much outdated shit in there for backwards comparability. Like all the collections that existed before generics.
The only thing close I know is on MacOS, there is an app called Dash that can download what it calls "docsets" for offline browsing. I'm unaware of any similar efforts on Windows.
Glad you like it. In case you find something missing (attributes etc.) that goes with the project's philosophy, I'm open to suggestions.
I compared for loops on my machine... the GPU was significantly slower for whatever reason. Not that I really know what I'm doing when it comes to gpu, but it's just a for loop... (milliseconds) gpu : 747 cpu : 61
Same here, I've been going strong with a Macbook Pro + Rider for over a year now. I've shipped three fairly major projects. Rider is wonderful and it's getting better and better every release.
I think it's only $140 your first year. It's honestly worth much much more.
I use it with VS Code on Elementary OS. Good experience so far!
Have any examples? It's been wonderful to work with for me. I've had zero issues to be quite honest.
How are your email firewall rules set up in proofpoint? You may need to whitelist the Azure Functions outgoing IP range for your function https://docs.microsoft.com/en-us/azure/azure-functions/ip-addresses
They're the same thing, but the .NET reflection APIs use '[Invoke](https://docs.microsoft.com/en-us/dotnet/api/system.reflection.methodbase.invoke?view=netframework-4.8)' in their names.
You can't directly call methods on a COM object - it has to be through the COM interface. What you want to do is generate an interop library from the COM type library. An interop library is an automatically generated C# library that bridges the gap between the CLR and the native Windows world where the COM library lives. See the article [How to: Generate Interop Assemblies from Type Libraries](https://docs.microsoft.com/en-us/dotnet/framework/interop/how-to-generate-interop-assemblies-from-type-libraries) and google "generate COM interop" for more info and possible examples.
Developing enterprise applications in Fedora with vscode and happy with my life. Actually I think its better to work with .Netcore on Linux.
Removed: Rule 4.
You know if you are using .NET 3.5, you can just click a button and all your projects are now .NET 4.7.2 right? Maybe you have to update some web.configs or install something. No problem. If you've got a 5 million line solution in .NET Framework and want to move to .NET Core... well... it's a bit more work don't you think?
One I can think of which maybe isn’t dotnets fault is reading a pfx formatted x509 certificate with no passphrase (or maybe empty passphrase) doesn’t work. I think it’s an issue with the apple crypto libraries that dotnet uses on macOS though.
I'm using .NET Core on my Linux VPS (AlpineLinux). But I'm using Docker and .NET Core image to host it. Working flawlessly so far. Once you get the hang of it, super easy setup and upgrades.
As a side note C# has some weird terminology that is different from other languages (Method instead of function) In C++ these are known as member functions
Using double for position instead of two integers is quite funny, never seen something like this. But it does not look like a right solution here. Great project, GUI generators is an interesting topic. Thanks for sharing!
Yep that was basically my suggestion also
Without knowing the answer, if you check the IL you can probably see what happens (which might give you answer faster than waiting for reddit reply)
Cool. I worked with a company a while back that did this with a custom XML schema. The idea was good but I wasn't fond on the approach, (the XSD basically mapped to UI components and it would use reflection to build a view). However, I always wished it would emit an assembly, nodes/attributes would gaurentee interfaces and the more complicated logic could be extended in code and not written in abstract syntax by a BA. Not to mention the benefit of having the assembly compiled for production. I digress. Good work, ill check it out fully when I'm not on my mobile.
Slick! Nice job. Would be cool to see if your program could use an interface to ingest data from PowerShell too
Also thanks. I use Fody a bit. Didn't know about costura!
Doing this is beneficial when the generic type parameter is a value type, in which case you save the boxing allocation and the JIT generates unique, non-virtual code for each type. However, for reference types only a single reusable version with virtual calls is compiled. .NET Core is heavily investing in optimizing devirtualization, but I don't think this has changed yet.
My reply was not for you...
&gt; like you can access to some functions call in the web console? I don’t understand this part of the question - what is your goal?
This is a matter for the JIT, not the C# compiler. The IL isn't any help here, the compiler always emits `callvirt` for instance methods anyway.
What are you trying to achieve specifically?
.NET must generate different code for every value type in generics so DoThing will definitely be different. AFAIK .NET Framework doesn't devirtualize calls (I may wrong here), .NET Core definitely tries to inline calls so I guess it can devirtualize them (or will be able in near future).
I am having one problem with getting things working. I load up the project and the package manager is giving me this error: The "=" operator is missing after a named argument. At E:\VS2019Projects\MechaViewTestbed\packages\MechaView.MahApps.0.0.151\tools\MechaView.psm1:30 char:30 + [Parameter(Mandatory) &lt;&lt;&lt;&lt; ] + CategoryInfo : ParserError: (:) [], ParentContainsErrorRecordException + FullyQualifiedErrorId : MissingEqualsInNamedArgument Import-Module : The specified module 'E:\VS2019Projects\MechaViewTestbed\packages\MechaView.MahApps.0.0.151\tools\MechaView.psm1' was not loaded because no valid module file was found in any module directory. At E:\VS2019Projects\MechaViewTestbed\packages\MechaView.MahApps.0.0.151\tools\init.ps1:4 char:14 + import-module &lt;&lt;&lt;&lt; (join-path $toolsPath "MechaView.psm1") + CategoryInfo : ResourceUnavailable: (E:\VS2019Projec...\MechaView.psm1:String) [Import-Module], FileNotFoundException + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand
It looks like you are using quite an old version of powershell (I think 2 or 3). See it by running `$psversiontable` in the Package Manager Console.
Yup, PS version 2. You'd think VS 2019 would come rolled with a newer version of PowerShell...
In the past when doing something like this, we just used a Fields property which was a Dictionary&lt;string, object&gt; and added type information when serializing/deserializing. Believe this is the [property in JSON.net](https://www.newtonsoft.com/json/help/html/SerializeTypeNameHandling.htm).
Originally they were separated, but since every attribute suddenly required at least two property initializers because of this, I tried to come up with something else. Before this variant, I tried two single letter properties, like `C = 0, R = 2`, but the entire attribute was much worse readable.
Watch this NDC conference video [Patterns for high performance csharp](https://www.youtube.com/watch?v=4yALYEINbyI). You'll want to make a sealed class that has a generic T type where the type constraints are the interface and a struct. \`sealed class MyClass&lt;TDoer&gt; where TDoer : IDoer, struct\`
I am part of a company of arround 20 ppl, all predominantly c# devs. All of us use Mac. Visual Studio for Mac is good enough, but Rider is the tool most of us are using. I’ve been using vim+omnisharp in the last 6 months and it is quite fun and productive, but you need to switch to vs to debug :(.
I believe you're referring to [`[JsonExtensionData]`](https://www.newtonsoft.com/json/help/html/T_Newtonsoft_Json_JsonExtensionDataAttribute.htm)?
Large zip files
Well, the idea behind the project is to do only simple things that don't require UI customization. Maybe there's space for some kind of a middle step, but I think I'd rather move to Caliburn.Micro or so. Just to be clear, Fody Costura only puts the assemblies together, the view is generated via a virtual proxy with Castle Core.
I downloaded DocFX and followed the first tutorial on their website ([https://dotnet.github.io/docfx/tutorial/walkthrough/walkthrough\_create\_a\_docfx\_project.html](https://dotnet.github.io/docfx/tutorial/walkthrough/walkthrough_create_a_docfx_project.html)) but at step 5 I tried adding the documents from [https://github.com/dotnet/docs](https://github.com/dotnet/docs) but it gives me the following error: [https://pastebin.com/BdP4YRBs](https://pastebin.com/BdP4YRBs) and then a lot of warnings [https://pastebin.com/FgQPq78H](https://pastebin.com/FgQPq78H) (these are from an older attempt but they are always the same). Is this not the right way to do it or am I supposed to add other files in the articles folder?
I'm going to use this to make a GUI to hack into the mainframe.
From what I recall you can run ssis packages from. The command line so you could write C# code to construct the command and fire it, and then monitor the output and check the return code. And having googled it, the management libraries also allow you to run a package(admittedly from the catalog) https://www.risual.com/2014/07/07/executing-ssis-catalog-packages-programmatically-with-c/
I do. What do you want to know?
.NET Core can already devirtualize stupid stuff like: IThingDoer x = new Widget(); x.Do(); //virtual call, but obviously doesn't need to be When combined with inlining this can cover more scenarios.
That would be awesome for internal tools where I don't care about the look of the UI.
Do take a look a Costura's updated license. I'm not sure what exactly are the new terms, but they are kind of weird.
I'm pretty good with doing basic math quickly in my head but haven't taken anything significant in a while. I'd probably be ok, thanks.
Compare the process id?
Thanks for the heads up. The license says MIT, and I think the change for Fody was only related to the bug reports being deleted for non-supporters.
This looks so similar to a project I was working in a few months ago! We went the way of keeping a library of models. If you find a better way I'd appreciate it if you let me know!
So you don't want a full data layer / ORM management tool, but EF doesn't do enough... Idk how to help you
Yes, I believe so. The way we did it was having a dynamic object property this that could be used with a string for a property name as an indexer. A dynamic property we named This which is basically just an IDictionary&lt;string, object&gt; You have Keys as a collection of strings, and values as a collection of Values for above, then you can check on each property if Keys contains the property and return the value. You can add custom fields as properties of This, then you're sending the key value pairs to the document instead of the actual class. The properties defined in the class were required properties, and then any added properties, you would check if they had a value to see if they are apart of that instance of the class. This is really hard to explain without looking at the code, I might try and make a blog or something about it but I'm not sure. This also may be completely the wrong way to go, but it's the way we took when working with CosmosDB and so far it's worked wonders.
That is exactly what we need! Thanks also /u/Pejo37. public class Person { [JsonProperty("fullName")] public string FullName { get; set; } [JsonExtensionData(ReadData = true, WriteData = true)] public Dictionary&lt;string, dynamic&gt; CustomFields { get; set; } } public class Address { [JsonProperty("fullAddress")] public string FullAddress { get; set; } [JsonExtensionData(ReadData = true, WriteData = true)] public Dictionary&lt;string, dynamic&gt; CustomFields { get; set; } } When I deserialize json it throws all the extra fields by key and value into "CustomFields" property and maintains them when serializing back. This solves our problem perfectly.
I made a response to a comment in another top-level comment and found exactly what we needed with the \[JsonExtensionData\] attribute in Newtonsoft's JSON library.
Check out FluentMigrator. Might do what you need. https://github.com/fluentmigrator/fluentmigrator
The ports are blocked to prevent spam users. I forgot the article that shows what ports they allow but if you use the outlook.office.com. Port 5xx it’s allowed, or any ssl enabled with auth.
Clean up that code! Look at the warnings! baseALL isn't even used and my spidy senses always light up when I see move and find (MoveToElement, FindElement)
I'm just guessing here, but could "bases" be being lazy-evaluated? In other words, it goes back to the source each time you try to move to the next element (which happens under the covers in the "foreach"). If you want to force it to instantiate the results (i.e. not lazy evaluate) you could add ToList() to the line where you initialize "bases". That should make it fetch all matches into the "bases" list and prevent the list from changing as you iterate through it.' Also, minor thing but you don't need the "i" variable since you're not using it. I assume it's a leftover from an earlier incarnation of this code.
Yes it is sloppy. I usually clean it up when I am done but will do so now.
You are right about the "i". I removed it and will look into adding a ToList(). Thank you for the help!
Lol, sorry had a few vodkas last night. As I previously mentioned the inmemory database seems to get rid of 1/2 of the need for interfaces.
Hmm I like this train of thought. I'll see what I can do. Thank you friend!
I haven't looked at the codebase but wasn't one constructor with optional parameters an option?
Well, shit, that would have made it easier. Thanks for that
[Bitmap.LockBits](https://docs.microsoft.com/en-us/dotnet/api/system.drawing.bitmap.lockbits) massively increases performance compared to `SetPixel` or other methods. Unlike the other methods you're working with raw bytes instead of `Color` or `Brush` objects, however. Reading data in bigger chunks with `Stream.Read` will likely also improve noticably performance compared to thousands of individual `ReadByte` calls. Reading one line at a time (4096*4 bytes) should be fine.
It depends on whether T is a struct or a class. If it is a struct, yes, they will be resolved to definite non virtual calls. If it is a class, it won't, as it participates in reference sharing. This is where one function is generated for all generics where T is a class. Because it's shared, the call must stay virtual
How long does it take to just set every pixel on a 4096x4096 square to the same color? It's important to identify which parts of the code are taking the most time. You could try to parallelize with locks around the graphics objects using Parallel.For, but that's probably not justified until it's clear how much of the processing time comes from reading the file and how much comes from setting 16.7 million pixels.
To be fair you can just as easily do a `dotnet add` in the command line in Windows and/or in VS.
Is something like this feasible? https://stackoverflow.com/questions/35581274/diff-files-inside-of-zip-without-extracting-it Well, same concept but over the network? Compare individual archived file names and sizes to each other, then the checksums?
As a worst case you can always start ssis packages from a call to sql. Just a side thought.
&gt; Lol, sorry had a few vodkas last night. I hope you're apologizing because you didn't save any for me.
This is like a cheat code to a game
You can create a web app to call the console, which means you can call your console app to run with whatever commands you want(args). You can also do something like Process.Start(filepath) in a web project(put it in a using wrapper -&gt; using (Process myProcess = new Process()) ).
Is there any guidance you could provide me? A link perhaps? I'm still trying to work through it.
I'm suggesting changing list = Driver.FindElements(By.XPath("//*[@stroke = '#9a0d80']")); to list = Driver.FindElements(By.XPath("//*[@stroke = '#9a0d80']")).ToList(); Like I say, I don't know if this will work, but it's something to try.
Yup, definitely looks like it is setting the pixels causing the issue. At home on beefier PC, original program takes 13 seconds, new one just setting the pixels takes 12. Thanks for the heads up. At least now I know what direction to research.
Alongside all the useful functors there was recently an addition of an automated With function generator. In short the following class: [With] public partial class Name : Record&lt;Name&gt; { public readonly IEnumerable&lt;string&gt; GivenNames; public readonly string Surname; public readonly Title Title; public Name( IEnumerable&lt;string&gt; givenNames, string surname, Title title) { GivenNames = givenNames; Surname = surname; Title = title; } } Will automatically have a `With()` method generated, so this is all the code you need for a class that's immutable and has structural equality (that's what Record&lt;T&gt; is for). For those who have never delved into the functional world, you can do something like `var marriedName= maidenName.With(Title: "Mrs", Surname: "Smith");` Given names would be carried over into the new record, when your working with immutable types this is a huge time saver.
No idea what NS stands for. VSTOis visual studio tools for office, don't know of any office product that is NS. Technically you don't have to learn VBA, basically when you have a question on how to do something like reference a cell, change it's value, or whatever, serach for that in VBA, then follow the same thing in c#.
Anything like this for win forms?
Zeal. It’s called Zeal for Windows and it uses the same docsets that Dash provides.
Your best bet for this type of thing really might be a game engine. At the end of the day it's just a tool to deploy dynamic 3D videos to the screen, there's really no difference. Video game engines will also have the tools to dynamically load and change scenes based on context to match with song transitions in a music video, or any cues that you want to set. Most of the tools for video to make Pixar-style animation are going to expect you to render scenes and animations frame-by-frame to do highly accurate ray-traced lighting. They aren't often made for real-time editing or manipulation whereas the game engine is going to let you modify objects dynamically albeit with somewhat lower quality rasterization lighting. The Unity Engine already has 3D primitives like spheres and cubes that can be easily manipulated with C# code, and the same for light sources and object collision. You can easily import any other models you want as the game engines will already support industry-standard model formats. Unreal is another good choice but it's C++ instead of C#
Yeah I was thinking maybe a game engine would be the way to go. I’ll check out Unity. I know it can do cool graphics stuff, just need to see how to pipe it into an mp4 at high speeds and host it on a server.
Could you do it the same way Twitch streamers do with OBS studio? I know it has recording capabilities, it defaults to .flv but I'm pretty sure it supports recording directly to .mp4 as well, and you should be able to host a private RTMP server that provides encoding to different quality settings.
Another issue popped up. It seems that it can't find MSBuild even though its in my path. I tried to put it where it expects it (C:/Program Files (x86)/Visual Studio/MSBuild/Current/Bin), but it still complains. I can run MSBuild straight from a normal command line, but have no dice when start-app calls it.
Not too familiar with that but it’s a screen recorder? If I’m understanding, that probably wouldn’t work because the rendering will be done on a server running multiple renders at a time.
1. Does for structs 2. Does if it inlines (which it won't for interfaces) 3. Does if you wrap the class in a concrete struct wrapper (not generic) e.g. class MyClass : IThingDoer { public void DoThing(IThingDoer doer) { doer.Do(); } } struct MyClassWrapper : IThingDoer { private MyClass _myclass; MyClassWrapper(MyClass myclass) { _myclass = myclass; } public void DoThing(IThingDoer doer) =&gt; _myclass.DoThing(); } Then DoThing(new MyClassWrapper(myclass)); The struct wrapper will evaporate when its Jitted; but cause the generic call to be specialized and devirtualize.
It doesn't capture the screen, it captures a window. You could theoretically run multiple streams from the same server by running multiple instances of OBS, each capturing a different Windows.
I’ve been using [this site by Scott Lilly](https://scottlilly.com/learn-c-by-building-a-simple-rpg-index/) to learn how to make a text-based RPG with C# in Visual Studio. A lot of it is basically refresher stuff for anyone in intermediate programming classes, but you might learn some aspects that you didn’t go over in class.
Ah I see, yeah that could work. Does sound pretty resource intensive, but I don't see that there's a straightforward way to export an mp4 from Unity so might have to do something like that.
Haven't had to do anything with Stream yet, still reading the bytes the same, but using LockBits took me down to about 2 seconds load time!!! Thanks so much for the help!
Mac here...
&gt; I don't like using n % 2, because n might be a non-integer type If you don't know what type a variable is, you have bigger problems to worry about.
You should totally stick with Atom. I just used my abacus to count up the extra time you would spend and frustration you would have and it was minimal.
Its two seconds of googling... C# get share permissions The stack Overflow article that sounds just like your question, has an answer. That answer is WMI via System.Management namespace.
I had something like this years ago. While I didn’t take the time to implement migrations, it was extremely handy for troubleshooting purposes. What I used was the sql management assemblies. They can be a pain to work with as they ship as part of sql server and bot .net. But they support multiple versions. You can do anything with these guys. Script objects, tables, sp, functions, views. You name it. What i had sone was capture a golden database. And wrote the schema to an xml file. Then when services needed too they could play it back against another database and find missing objects of modified objects.
We have a similar engine that was developed in-house for nightly processing needs. Just this year I upgraded it to handle sequential tasks. There are some workflows where you really don’t care what order things are executed in, and they aren’t dependent on each other. We’re able to fire them all off and the execution of the workflow wont continue until all children are completed.
On x64, .NET Framework 4.7.1+ will do some devirtualization; those releases share jit technology with .Net Core 2.x.
I’ll definitely look at the video later today. If for nothing else then at least to understand why the generic class has to be sealed and not TDoer itself. I’d expect sealed classes to be better at avoiding virtualisation than unsealed ones.
In the past I have used JObject for extra data without an associated class for (de)serialization https://www.newtonsoft.com/json/help/html/LINQtoJSON.htm
Just Windows here.
Replacing `ReadByte` with `Read` should help as well.
U can do if its not n then continue, otherwise break
You can just do While(userInput != n || userInput != y){ //get user input }
No luck. Same issue. Thank you though
No luck. Same issue. Thank you though
What you are trying to do is determine whether to restart or end the program right?
And also to catch if the user inputs an invalid response to question of restarting the program. Having it restart or exit is already working well.
That’s what the while loop would do. If the userInput isn’t what you are looking for then you just prompt the user for the input again. Or is that not what you want to do?
So if I do what you're suggesting, if the user inputs that they want to restart the program then it will use the continue command to restart the entire program. If they type in some nonsense, I cant use the continue command again or else it will restart the entire program instead of just prompting them for the question of whether or not they want the program to restart.
Almost sounds like your talking about recursion. https://en.m.wikipedia.org/wiki/Recursion_(computer_science) Used to do things like navigate a directory structure where you don’t know how many directories may be present.
I would agree, this is our next lesson actually so I'm kind of out of luck in the mean time.
String userInput = “”; while (userInput != y || userInput != n){ userInput = [ask the user for input] } If (userInput == n) break; If (userInput == y) continue;
I don’t think this is recursion just sounds like he has one big whole loop controlling everything. Not the best practice but it’s hard to do much more when you are a beginner
I’ve hired two people with c# only skills. Actually one of them never heard of it before but met all my criteria. (Both straight from university) Really all depends on where you live and what the companies want.
U can always learn on urself
I'm learning it in 5 hours, but I figured out a way to fix my issue here. I'll post in another comment then update the flair. Thank you for the help
Do you care if they type in anything besides a "y" to go again? `// your interesting program here` `if (Console.ReadKey().ToLower() == "y")` `RunMyInterestingProgram();` `// user didn't type a "y", so just end`
I tend to agree, sounds like this is simply a problem stemming from poor design/structure.
So I figured it out thanks to a suggestion of another while loop. How I did this was by creating a while loop that inside of it had the prompt for the user, the string usrResponse. And if they said they wanted to restart the program, I had it break the while loop. Now, outside of the while loop exists a continue command, so this breaks it from the current while loop and then restarts the while loop that encapsulates the entire main method. This works because the else if statement that handles the no response just ends the program using system.environment.exit(0);. Then the final part to the fix... since the prompt for the repeat program is now in it's own separate while loop, I can handle any exceptions to the y/n answers by using continue as this will only restart the while loop that contains the prompt for the y/n answer. If someone else stumbles on this issue as well, I hope this helps!
I do, I actually just figured out an answer and posted it as a comment below. I'm about to update the flair.
It seems it fails to find it in the path, nice catch. The standard path where it searches is `%ProgramFiles(x86)%\Microsoft Visual Studio\{{int}}\*\MSBuild\Current\Bin`, so please put it there in the meanwhile. What is the original path on your machine?
Did you add a reference to the **Grades2** project into **Grades.Tests**? 1. Under the **Grades.Tests** project, right click **References**, then select **Add Reference.** The **Reference Manager** dialog box opens. 2. Make sure **Projects** is selected, then CHECK the checkbox next to **Grades2**. 3. Click **OK**. If the red squiggleys don't go away, select **Build Solution** from the **Build** menu. Check the **Errors** tab at the bottom of the IDE for details.
www.dice.com
ohhh. I see the issue. The red squiggleys go away when you added \`using Grades2;\`, right? The reason you need that is because of namespaces are different. The book version uses a single namespace of \`Grades\`, so it's the program is able to resolve it in the author's version. However, you have two namespaces in your solution: \`Grades\` (for your tests) and \`Grades2\` (for your gradebook app). Since they're different, you have to explicitly indicate \`using Grades2;\` at the top. You could test this by creating a new test project called \`Grades2.Tests\` and creating your ReferenceTypeTests.cs file there -- it should not require the using statement as you would be referencing classes in the same namespace.
That may work, but it would require a different attribute just for position. Currently, there's an attribute hierarchy where each one derives from `Element`, so you only need to specify one attribute. I'll give this a though.
I mean, C# has mechanisms for mapping native libraries. You can use `DllImport` and map all the functions you need. I don't know if you need this level of sophistication, but I'm working on a [series of posts](https://dev.to/thebuzzsaw/building-a-better-library-loader-in-c-part-1-1446) going over more advanced DLL loading.
[removed]
Right now I have a fromCsv for each entity, but the class is named CsvHelper, should I rename it to something else? Because with DataImporter, I think it could also include fetching these csvfiles.
So GenerateDatatable should be in a common folder which with a file and class called DataTableFactory.cs? Does it handle the picture information, do you mean the class method that calls on the converter and retriever methods?
I usually wrap the main program in a while loop and at the end call a method that only returns when input is in the correct format. static void Main(string[] args) { while (true) { // your code here if (!GetBool("Run again?")) break; } } public static bool GetBool(string msg) { Console.Write(msg); while (true) { var input = Console.ReadLine().Trim().ToUpper(); switch (input) { case "YES": case "Y": case "TRUE": return true; case "NO": case "N": case "FALSE": return false; } Console.WriteLine("Invalid input"); Console.Write(msg); } } Hope this helps
We hire people right out of college all the time. We also hire summer interns every year. Programmers are in short supply and there's serious competition for the best new talent. What part of the world are you in? And when you say you have skills, do you have formal training? How long have you been coding? Do you have a portfolio of your work (for example, on github)?
Just pray that you never have to serialise/deserialise to anything other than JSON.
Not the individual who suggested, but I highly recommend downloading OBS and just having a look at it even if it doesn't suit your needs. It is such an amazing piece of software. It's good to have it at the back of the mind for other implementations. You will be pleasantly surprised at all of the features it has. Takes only a few seconds to setup an input from an application.
Yes, like restarting the app, calling on fetch data for 7 days etc.
Yes, like restarting the app, calling on fetch data for 7 days etc.
Yes, that would be exactly what I want. But what technology do I use to achieve this? MY console is in .net core.
I once tried to write a library in F# and use it in C#, making the library surface natural to ordinal C# code was not that easy. Unless you write fat glue code to look like “ordinary C#”, which is totally unnatural to F#, in F#, it feels like using a plain old C lirary in C++. I anyway tried to write glue code in some degree, but gave up in the end, because such glue code tended to have nearly equal lines to code it wraps so that it looked overkill to me.
No
Actually I figured it out, but this was very similar to the solution i found! Thanks!
I think what you are looking for is a way to deploy your application on the web so you can call it's functions. That's not possible with the console app, however you can extract the logic and put it in a Web Api and then deploy that one. Search for. NET core web api, there are plenty of guides. Good luck!
&gt;Programmers are in short supply Is this really the case? just wondering because I've seen many posts regarding people having a hard time finding a job in this field
There are multiple ways you can do exception handling in aspnet core, lookup custom exception middleware.
I turned on all Exceptions in VS, but that seemed to be a little overkill
Thank you for your response. I am currently learning C# on my own and attending college for a CS degree. At this point, I am very new to the field but looking for ideas on the job market hence this query. Since you are an employer, I would love to know more about your firm, where you are based and what you look for specifically when hiring C# coders.
+1 for this tutorial, especially for going from forms to WPF.
Location makes a big difference, and so does your ability. In general, programmers have about half the unemployment rate of the general population. People tend to overestimate their ability. The percentage of people who come in to interview and either can't code at all or can't even do FizzBuzz is staggering. I'd say if someone is having difficulty finding a job, they need to look in a different place (not a lot of opportunities in Farmville, Ohio), evaluate their interview skills, or find where they are deficient with their coding skills and brush up.
yeah sorry, just saw epplus and immediately got ptsd flashback to that app i have running that will routinely crash if the user touches it during those first 1+ minutes while it loads the data from this monster excel file. maybe i should go back and take another crack at turning that into an async load...
But let's say if I got a webapplication, can I use it to call on the console application functions?
Perfect for creating simple cool keygens! How about theming? I.ve seen the screenshots and it seems you're using some kind of metro design library (Mahapps?). Is this what we get out of the box and can it be changed bto default theme or something else??
We have offices in Boston, Phoenix, San Francisco and Seattle.... And Europe, I suppose? Though I'm not sure we do any direct hires in Europe. I vaguely remember us having a Belfast office. I might be making that up, though. We have a pretty rigorous interview process and it has changed since I got hired on, so I'm not familiar with anything but the technical side of things. You'd be asked general technical questions, but if you're right out of college or an intern, the questions would be relative to your experience level. Then, we usually give coding challenges. When taking these coding challenges, it is CRITICAL that you talk thru your thought process. There is one challenge we give that even we couldn't solve because it requires advanced math, but what's important is how you work through the challenge. Since you're in college now, give some thought about what kind of work you'd like to be doing. You may need to learn Javascript, CSS and HTML if you want to do web work, or you might have to learn SQL/Pig/Hive if you want to work closer to the Big Data side of things. Cloud computing is pretty important, so you may want to read up on Amazon Web Services or Google Cloud Platform so you're at least familiar with the concepts. Also, Google Firebase is an AWESOME tool for learning, so get in on that action while it's available. Culture is a big deal as well. Be happy and confident during the interview. Ask good questions about the company and what your role would be. Stuff like that. I'll send you a DM with more details.
Old habits. I developed in C in the early ninetees and the compilers weren't as good as todays. No function inlining, lots of macros. Many things are much better today.
No. Extract the code you have in the console application (all the functions) and put them in the Web Api. Deploy the web api to the web and then you can create a console application (or any other clients ex web site) if you would like to call the Web api. &amp;#x200B; You
Just renamed Grades.Tests to Grades2.Tests, changed the namespace and boom. Solved! Thank you.
I'm on the phone now but you can Google "Copy Always solution explorer". There is your answer.
It's not free, correct. But JetBrains offers flexible ways to get their products. If you are a student or contribute to open source, they might go as far as giving it to you for free.
I'm really interested in this. It's also great to see some proper content being discussed in here for a change...
I looked at this. It's pretty much the same as EF migrations. At first glance it didn't have the ability to interrogate the existing database in order to upgrade it. Am I wrong about that?
I havent read files so large that it takes too long to read, but I’ve noticed a significant delay when writing some files. I have a hypothesis the perf hit could be in part by the encryption of the xlsx. The biggest performance gain for me was when I moved all xlsx I/O with EPPlus to happen on local harddrive instead of network drive.
That makes no sense. I'm not asking for an ORM.
It's roughly along the lines of what I'm talking about. Redgate allows you to compare the schema of two databases and create scripts to upgrade one database. But I need a C# framework.
Thanks! I'll check it out.
 BaseClass bc = new SubClass() does three things. 1) `new SubClass()` creates an instance of the SubClass-Type in memory. 2) `BaseClass bc` declares a variable of type BaseClass that is named bc. 3) `=` assigned the object to the variable, which means that the content of the variable bc will be set to the memory location of the newly created object.
Database projects. Vs has a built in schema compare.
Schema compare isn't what I'm looking for. I'm looking for a c# schema that can be exported and then imported on a different platform.
Ebay
Dacpac maybe?
I have also been looking for something along these lines, my first thought was a small text RPG to work on, so this is ideal for my first attempt at an actual "real" app. Thanks for sharing!
Lol never heard of FizzBuzz before and I'm 8 years in this field
So the main functions and logic of the app will exist in a seperate peoject that targets dotnet core or dotnet standard. Then you create a separate web project thst calls the 1st projects functions. Then create another seperate console app that does the same.
So, you're replacing a poorly architected brokering system with yet another poorly architected one instead of using readily available and proven solutions? 😊 If I were you I would develop all new applications with something like RabbitMQ then provide a means for the legacy systems to communicate with new ones via an interface. As you replace the old system, gradually move to the new RabbitMQ (or whatever) backbone.
Well you can provide arguments to both an Azure Function/AWS Lambda Function. But you can’t control when they start, restart. They start when they are invoked, and they stop when all invocations of them are finished. They are meant for one offs and bill-by-usage.
I was just thinking about doing something like this this morning. I've been a C# dev for about 10 years now but have zero imaging experience.
Also, this assignment performs an implicit up-cast, which is checked by the compiler (and JIT compiler) and doesn't result in any work/machine code instructions.
But that's an interface call, not a virtual call. Interface calls are even more expensive (require searching some kind of data structure) than virtual calls (have a fixed location with the indirection). But yeah, those can be "deinterfaced", whatever, as well sometimes.
It's not exactly the same thing due to the casting and 2 variables but it will have the same result. You could also just not cast it at all and the compiler will understand that 'sc' is of type 'BaseClass' and will allow it. Not sure if it can optimize the casting though.
Buy the exam reference book and practice test and learn the material. Don't rely on the dumps
As /u/perucs_ suggests, add the CSV file to your project (inside whatever folder it needs to be in within the solution), then right click the file, go to Properties, and select \`Copy If Newer\` (or \`Copy Always\` if need be). When you build it will appear in the output directory, retaining the folder structure.
How are you calling these methods and objects?
Could you put out sample code that demonstrates what your program does?
C:\Program Files (x86)\MSBuild\14.0\Bin I'll try copying it to where you said and report back.
I have used both in the past; I agree that stateful tokens don't buy you much in your scenario. For stateless, I did the following (for my very specific use case!): Refresh the token on every API call and build authorization into the token using claims. Expiry is short (a few minutes) and use a heartbeat service to keep it fresh when you're not hitting the API a lot.
The concepts here are session ids, vs session token. A session id is just a large id that is the key to some row in your login state database. Users give you their session id, you validate its state from the db, you process their request. Every request has to talk to the db (through your auth service) to figure out what the session id means. A session token (aka bearer token, or sometimes just "token" ) is not encrypted necessarily, but a piece of data that is signed by your authentication service. If you use asymmetric signatures, then your auth service could sign it with the auth services private key, and every other service could validate it with the auth services public key. You can encrypt them if you're worried about the contents being private, but encryption is not the same as signing. Jwt is a session token design. Session ids must be a very large amount of bits. Some say 128 bits, some say 256 bits. They must be large so that they cannot be guessed, because they operate like passwords - if you can guess one, you have access. ... Bearer tokens can have claims inside of them. When your auth service completes the user auth, it can look up what roles your user has been assigned to, and then stuff those roles in the bearer token it sends to the user. When you later get a request and validate the bearer token the user gave you, you'll find out what roles they've been assigned and can then use that for permissions checks. No db access needed. FYI some folks that use bearer tokens use two (.. or more) tken types - refresh tokens, and access tokens. When you login in, your auth eervice generates a refresh token that is tied to the database. The client uses the refresh token to obtain an access token, which it then uses for normal requests. The access token is a normal bearer token, but with a short lifespan, say an hour or 5 minutes. When the client wants to get a new access token, they send the refresh token to the auth service, it checks the database to see if the user/login is still valid, and generates a new access token for the user. The refresh token is validated against the db every time it's used, but it's only used on a time interval you configure. The access token is a normal bearer token that is validated through only cryptographic signature, no database, but is valid for only short periods of time. The refresh token is only used to talk to the auth service, limiting its exposure and chances of being keaked/stolen. The access token is hed with every other service, is used more frequently, and thus has higher risk of being leaked /stolen, but lives for a shorter amount of time. This is what oauth 2 does, for instance.
Ah I think you're right. A follow-up question is why you don't know the state of your schema. If the schema is managed by migrations then you're good right? Back to your original question, I think there's a RedGate tool that does what you want, but it's a commercial licence. Can't remember what is called though.
Ask and ye shall receive. &amp;#x200B; [https://vceplus.com/exam-70-483/](https://vceplus.com/exam-70-483/)
Depends on where you live as a lot of people suggested, but, most common C# jobs here are in the are of; Junior Back-end developer (communication between front-end client &amp; database), Junior Web Developer (youll need a bit of HTML/CSS but with a couple of MVC courses youll do fine) and there are a lot of Micro-services companies here where you will be hired to do a simple task like converting excel sheets to data using [ASP.NET](https://ASP.NET) Core
 I find it to be quite cumbersome to manually place those calls around event handlers. I'd do some metaprogramming karate, but I'm not as experienced with it in C#.
I'm interested, I hopped on the Discord :D
&gt; What could be done to avoid the burden of having to go through the code and placing those calls in the handlers? **Theoretically** you could replace the default task scheduler, and hack something in there... Definitely not something you want. Alternatively you could use an IL weaver tool (Fody, PostSharp) to automatically wrap method bodies with additional code. IMO the cleanest approach would be: Add those calls. Don't rely on magic.
Maybe it’s cheaper, maybe not. You’re performing the same number of steps as far as data access in both cases, and additional steps to calculate a checksum in the checksum case. I’d say it’s generally not cheaper, but more expensive.
This. Sometimes the best way to do something is to just do it.
Look into courses by Mosh Hamedani. He is a really good lecturer, I personally learned a lot from his courses
It's a simple programming challenge. List all the numbers from 1 to x. If the number is a multiple of 3, write fizz, if it's a multiple of 5, write buzz, if it's a multiple of both write FizzBuzz. It's a pretty common challenge, but if you haven't done a lot of interviewing, there's no reason you'd have heard of it. It's not like it's useful in the real world 😉
WCF was specifically written for this type of issue. You can create custom bindings that handle the translation. Basically your code shouldn't care that you are talking to a REST, XML, or Binary service. The underlying layer handles the translation via the Binding. https://docs.microsoft.com/en-us/dotnet/framework/wcf/extending/extending-bindings However, WCF isn't in .net Core. See this article, as it maybe soon, or partially or something??? https://www.dotnetfoundation.org/blog/2019/06/07/welcoming-core-wcf-to-the-net-foundation If you went this way, once you move off the crappy custom message broker, you just change your WCF binding in a config file to point to a new binding such as MSMQ or something else. Another alternative you create a new service, that acts as a middleware to your message broker. Communicate with the middleware that communicates with the message broker until you are ready to replace them with something more modern.
An interface method is still considered a virtual call, in the general sense with the associated V-Table lookup. And as a virtual call, there is no inlining, which in turn prevents other performance optimizations. What is doesn't have is the "Virtual dispatch" shortcut. Confusing terminology I know, but I didn't invent it. For anyone who wants the details... http://web.archive.org/web/20150515023057/https://msdn.microsoft.com/en-us/magazine/cc163791.aspx
(This is an MVVM-focused solution but could be adapted to just about any pattern. What changes is the "glue" between your code and UI.) The way I handle this is to have a class that represents a "task completion". [This is a good example.](https://github.com/StephenCleary/AsyncEx/wiki/NotifyTaskCompletion). The idea is it's a ViewModel for a task. It has a `bool` property that indicates if it's completed. So let's say my View has a button that, when clicked, starts a process that should display some loading UI. My VM would look something like this pseudocode: public class ExampleViewModel : ViewModelBase { public NotifyTaskCompletion TheProcess { get; set; } public Command StartProcess { get; } private void ExecuteStartProcess() { TheProcess = NotifyTaskCompletion.Create(_dependency.DoThingAsync()); } } My XAML will be configured that the laoding UI's behavior is controlled by the `IsCompleted` property of the task completion. So when I click the button, it will automatically trigger that UI to appear. If I have several asynchronous processes that might require the display, I instead make an `IsBusy` property on the VM that's tied to the various completion states. A helper like this could also help manage that state: private async Task BeBusyWhileExecuting(Task child) { IsBusy = true; try { await child; } finally { IsBusy = false; } } It's the base form/ViewModel's job to provide services to show/hide a laoding indicator. It's the *derived* form/ViewModels' job to use those services when needed. There's not a good way to make the base form aware of all of the needs its derived types might have. Any approach ends up coupling derived class knowledge into some other type.
I'd second this, and I'd also like to note that he has a subscription on his website for $15/mo that allows you to take ~8 of his C# courses (As quite a few other courses). https://codewithmosh.com/ Is there a reason, however, that you're going to work two hours early to code? Do you not have access to a computer at home?
The generic class is sealed so that calls like `var x = new MyClass&lt;Doer&gt;(); x.DoThing();` would be devirtualized. And`TDoer` is constrained to `struct`, so it's already sealed.
a lot of companies like to play quiz show about things most programmers don't actually need to know to do their job on a daily basis and pretend like that's a good way to screen candidates, then cry when too few people pass their garbage tests and pretend there's a lack of people instead of rethinking their hiring process. If you're hiring people to create websites or corporate middleware tools they don't need to know how to recreate sort algorithms from scratch.
that's kind of the problem with it, it doesn't test what people actually do in their job every day so it's just screening for people who like logic games not people who can write software. yes, it's simple, but I don't really think it tells you much about how well someone will do the job.
It helps weed it candidates that can't code at all. It's an initial test for beginner candidates and a last chance for people failing tougher challenges.
I mean that would be great if it was just used in screening entry level candidates, but it's also used to exclude mid-career people who haven't been in a CS class in so long they don't remember half the trivia asked in those kinds of interviews that isn't directly related to their daily job.
I startet with an chess game with wpf. Later then a match 4, a ship sink in the console and with java and now my own candy crush clone with unity.
Vouch for this currently using Mosh’s first c# course now he will teach you the concepts then give you examples of how he writes the code and after a few lectures will give you about 5 exercises to code yourself
Interface calls are done via [virtual stub dispatch](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/virtual-stub-dispatch.md) which caches the likely interface call target. So for "monomorphic" interface call sites, overhead is similar to virtual calls. Devirtualization applies to interface calls too, though it is not nearly as effective (~5% of interface sites, vs ~20% of virtual sites). The whole point of interfaces is to hide implementations, so there are usually fewer clues for the jit as to the actual types involved. We have some ambitions of effectively hoisting the top level caching done by VSD into jitted code to unblock inlining (see eg [guarded devirtualization](https://github.com/dotnet/coreclr/blob/master/Documentation/design-docs/GuardedDevirtualization.md). The mechanical parts are largely implemented but the heuristics driving it still need work.
I'm interested. Never had a use for image manipulation but would really like to get to grips with git.
That's not really what I mean. Those are more specifications of the applications and behaviors you want it to exhibit. Restarting the app - Why would it ever need to be restarted? Calling on fetch data for 7 days - I have almost no idea what this means. Are you saying that you need to have a way to call the application in such a way that it can retrieve a dataset that covers the last 7 days? This sounds like an xy problem. You have a local solution that does what you need to, however you are looking for a way to offload what you are doing remotely into a web based solution.
Thank you very much for you answer, but i'm not interested on grinding WoW gold (cause i can't). Constant black outs in my zone don't allow me to do that
I have 0 knowledge of coding whatsoever, i just started reading some books weeks ago!
Yes! my goal is exactly this. I need to learn how to use Unity!! How did you know?
I'm stuck in WinForms also at the moment and I was thinking the same thing. I just haven't learned WPF yet but maybe this can actually be a learning experience
&gt; An interface method is still considered a “virtual call”, in the general sense with the associated V-Table lookup. Well they are dispatched differently. They don’t use V-table lookups, or rather they have an additional indirection first. But they are obviously very related.
I'm on my own on this, actually. I'm learning just by myself, and i'm guessing thats the hard part
Check out asp.net MVC tutorials by kudvenkat. He is the best .net tutor hands down. He has tutorials for everything from c# to jQuery to everything you need to become a full stack developer.
Didn't you write something about Unity? If Unity is your goal start learning C# with unity directly. Not all of C# will be necessary in Unity and a lot of what you need to know is Unity specific. Dive right in!
I personally benefited from Kevin Dockx's course on C# RESTful APi's. They are available on Pluralsight (which has a 10 day trial). Would recommend looking into that. He goes over a lot of basics like lists, enumeration, if-else, generics and then all the way to writing API's, MVC, HateOaS et.al.
Functionally, it's the same. It might result in slightly different IL but that's sort of a moot advanced consideration. Imagine I have Apples and Oranges. They are both Fruit. Imagine I have a seriously scary boss who will kill me if I put an Apple in a box that says Oranges, or an Orange in a box that says Apples. But my farm has both trees and sometimes I have to deal with both. I want a box that I can mix my things in but I don't want my boss to kill me. So I'll use boxes that say Fruit on them. Both Apples and Oranges are Fruit, so I can put either one in that box without being killed. Later, if I care to separate them, I can get an Apple box and pull out just the Apples. But as long as I just want to work with Fruit, that Fruit box is fine. That's how your code's working. The variable is declared to be BaseClass, and you're assigning SubClass to it. The object in memory is still a SubClass, but you've put it in a box for "BaseClass or any of its derived types". You could also choose to make a variable of type SubClass, then assign that value to a variable of type BaseClass. Variables are just boxes with type labels on them.
Use the Whack Whack Terminal extension.
It looks like the OP is using windows forms, not WPF - however, I'm looking in to WPF at the moment for a new role and this looked really interesting, so have an up-doot :)
Well a basic loop + modulo calculation should never be an issue if you are looking for a programming job. They don't tell you " implement FizzBuzz", they give you a task in a similar way that /u/ppardee just did and tell you to implement it.
Same, I'm going to hop on the discord and see what I can see.
I'm speaking more about the quiz show interview format in general, not so much the fizzbuzz exercise itself.
https://www.tiobe.com/tiobe-index/ The numbers are there. In my experience, C# isn't going anywhere. From my POV, Java is more "out of fashion" than C#. If you know what you're doing I think it will not be hard to find jobs in either for a long time to come.
10 year .NET dev here. I've not heard of a single "enterprise" moving from .NET to java. If anything you'll hear about people moving to node but not java. MS is moving the .NET ecosystem in the direction of most open source ecosystems, Oracle is doing the opposite with java.
Well I'm going to use Stack Overflow's 2018 developer survey as the basis for saying he's talking out of his ass. Posting it here for you to see for yourself. &amp;#x200B; [https://insights.stackoverflow.com/survey/2018](https://insights.stackoverflow.com/survey/2018) &amp;#x200B; As you can see from reading it 45.4% of professional developers said they used Java and 35.3% said C#. Interestingly if you go further down and look at frameworks Spring gets only 17.8% while .NET Core gets 27.2%. I wouldn't focus too much on the exact numbers here as this is far from a good survey, but it does tell me a few things: &amp;#x200B; 1) Java developers are far from united behind Spring as a framework while C# is a bit more cohesive in their adoption of .NET Core. 2) Both are established in the industry and both will continue to be used for quite a while. Your career is not going to die going with one, both or neither.
Okay good for you.
At some point this question wasn't trivia yet. It's was just a test to see if you can use basic coding skills to solve a new problem. This is part of the job. The fact it became trivia just means it became less effective at weeding.
The only thing he said that has some truth is the employability part, but how true that is depends on where you're looking for a job. Some places will have more Java jobs while some will have more .NET jobs. If you remove location from that equation, then Java probably would come out ahead of C#, but that doesn't mean C# is obsolete or "out of fashion" by any means.
It's not hard to translate MVVM junk to WinForms. The main "problem" is WinForms doesn't have data binding. But you have all the tools you need to do it. It's just a bunch of fancy sugar over tedious INotifyPropertyChanged handling. So like, the way to make WinForms handle the previous example would be for the base class to do something like this with some imaginary helper methods: private bool _isBusy; public bool IsBusy { get { return _isBusy; } set { if (value != _isBusy) { SetProperty(ref _isBusy, value); } } } protected Task BeBusyWhileExecuting(Task work) { ... } I'd favor that over directly using NotifyTaskCompletion because this is what it'd look like directly using that, and it'd make me barf: private NotifyTaskCompletion _theProcess; public NotifyTaskCompletion TheProcess { get { return _theProcess; } set { if (value != _theProcess) { if (_theProcess != null) { _theProcess.PropertyChanged -= WhenProcessPropertyChanges; } _theProcess = value; _theProcess.PropertyChanged += WhenProcessPropertyChanges; RaisePropertyChanged(); } } } private void ExecuteStartProcess() { ShowLoadingUi(); TheProcess = new NotifyTaskCompletion(...); } private void WhenProcessPropertyChanges(object sender, PropertyChangedEventArgs e) { if (e.PropertyName == nameof(NotifyTaskCompletion.IsCompleted)) { if (TheProcess.IsCompleted) { HideLoadingUi(); } else { ShowLoadingUi(); } } } Basically, the form has to watch for when its task changes, handle that task's property change event, and when the `IsCompleted` property changes do the right thing with the loading UI. It's a lot of tedium but it's not impossible, and helper methods can be made to deal with it.
If you want something a little more general, and you've already got a handle on how the language (and framework) work in a general sense, then I'd highly recommend [Effective C#](https://www.amazon.com/Effective-Covers-Content-Update-Program/dp/0672337878) by Bill Wagner. It really helped me understand some of the idiosyncrasies of both C# and .NET in general, as well as some features I'd never before discovered. It'll really help you make anything you'd create more stable, legible, and maintainable.
Mosh is very much a "I'll show you HOW to do this" kind of instructor, not "I'll explain in depth WHY this fits in the grand scheme of things". Go to Pluralsight courses under Scott Allen or Shawn Wildermuth for instructors that emphasize why in addition to how to do things.
No.
Is there ANY 101 courses for C#-Unity that i should look on? I'm guessing this is a matter of looking for all sources possible, as well as understanding at my own
No.
This issue happens every single time I start my program in the console and I'm just wondering if this can be fixed. I'm sorry if I'm explaining this problem very poorly, but any help would be greatly appreciated!
Not built into VS directly, at least not without an extension. VS Code has an integrated terminal, if you ever use that editor/ide.
No.
&gt; So, you're replacing a poorly architected brokering system with yet another poorly architected one instead of using readily available and proven solutions? I am not even replacing the actual broker, just the client-side API we use to talk to it. We aren't allowed to change the actual broker service in any manner and that includes replacing it with a ready-made solution, regardless of the rate at which it gets replaced. We've argued our points but to no avail -- the uppers simply don't want and/or see the need to replace it.
Yes
I mean , no
Hey guys if your curious about what you can do to contribute feel free to ask in the discord, or I've posted some suggestions as issues in the github
This covers a lot of it [https://youtu.be/X5rZqQbf0hM](https://youtu.be/X5rZqQbf0hM)
That was not clear in your original post, but my recommendation still stands. Build a bridge between RabbitMQ and your legacy broker, and get the new clients to use the RabbitMQ API. Don't waste time modifying the legacy client API as you would need it only in the bridge between RabbitMQ and the broker.
Removed: Rule 6.
It’s because of your avast antivirus software. When you run your code it does some sort of initial scan, closes that window, and then it actually runs. I’m sure there’s a setting in avast to stop that from happening but I’ve never looked.
That’s why it says “Avast cybercapture” in the top left.
[removed]
I don't understand the downvotes. By your own admission, for complex work Visual Studio is often required.
JWT tokens can have claims inside of them so you won't need to query the DB for every request (that's slow). When a user logs in, the server generates two tokens, access token witch is short lived (5 to 30 minutes maybe) and a refresh token which is long lived (1 to 4 weeks maybe). JWT tokens will be signed with a key and only the auth server should have that key. Anyone can read the claims inside a token. The information part of the token will be hashed (with that key) and attached to the token itself, so any attempt to change the claims will result in an invalid hash, which server will detect it. This is different from encrypting the token which makes it completely unreadable Server assigns a user to the refresh token and stores it in DB. Now once someone has these two tokens they can keep refreshing their tokens and be logged in. By removing the refresh token from DB user will have to log in again after their access token expires. So in case of a breach or hack or banning, who ever has the tokens can still use the access token till it's valid but they cannot refresh it. That's why these access tokens are short lived. This can be improved by storing the access tokens (or just unique part of it) in an in-memory DB (although expensive). On every request server checks if the access token is still in memory and by removing it, no one can use it anymore although the token itself is still valid.
I saw it break three times on a colleague's computer, but on my computer acquired at the same time in 2015, I have never had a single problem. /shrug
&gt;Is there a way around or is anybody familiar with ILGPU? This has nothing to do with ILGPU, it's a compiler error that would happen with any function with the 'struct' generic type restriction. Array is a reference type, not a value type, so if LoadAutoGroupedStreamKernel&lt;T1, T2, T3&gt;() has the the restriction 'where T2 : struct' then you can't use an array as the type. What you can do is define a struct that includes a reference to the array you want: public struct CameraSpacePoints { CameraSpacePoint[] Values; CameraSpacePoints(int depthWidth, int depthHeight) { Values = new CameraSpacePoint[depthWidth * depthHeight]; } } ... public static CameraSpacePoints cameraSpacePoints ... cameraSpacePoints = new CameraSpacePoints(depthWidth, depthHeight); kernel = gpu.LoadAutoGroupedStreamKernel&lt;Index, CameraSpacePoints, ArrayView&lt;float&gt;&gt;(TO_GPU);
LOL
I haven't spoken to anyone that is considering moving java. Core is fully matured and the cross platform eco system is coming together great. Where I am it's mostly .net jobs but that'll vary. So imho he's talking total nonsense.
I code in Visual studio and Vim, and run a Linux-based build system. This guarantees compatibility.
Excellent, I'm pretty busy with the semester nearing its end but if I find time I'll definitely ask. If not sooner, I'll definitely be free between semesters early next month.
You might have console.readkey instead of console.readline. Consider adding a Console.ReadLine() at the end of your program or adding a breakpoint at the end of your main method
Show us a bit of code, and we can spot it a bit easier.
Also please be sure to actually post your code, not a screenshot. It's hard to help you otherwise.
It's really great, but I find myself still using Win+R -&gt; cmd since Ctrl+Tab is no way near as easy to use in VSCode. P.S. Does anyone know an extension to make VSCode navigable via keyboard?
I'm making a calculator.
Keyboard shortcuts are already there...I'm not sure what you mean.
&gt;VSCode navigable via keyboard Depends on what you mean; you already have full control over the keybinds.
Let me give you a little hint: Post your code.
package manager console is just a wrapper for powershell, if it helps
Sounds similar to my older project. https://gitlab.com/wilcoforr/ImageProcessing I used unsafe code to speed up the process. Bitmap SetPixel() GetPixel() is rather slow This is the class that does the majority of the work for the few algorithms I implemented: https://gitlab.com/wilcoforr/ImageProcessing/blob/master/ImageProcessor.cs Here is a free book on image manipulation algorithms in C (not C#), but you can translate the idea into C# code for manipulating a 32bit "pixel" of ARGB: http://adaptiveart.eecs.umich.edu/2011/wp-content/uploads/2011/09/The-pocket-handbook-of-image-processing-algorithms-in-C.pdf
This is because of your antivirus. Avast has something called cybercapture, which will hold the program in quarantine until it checks through. Then, it opens the program again. You can try turning it off in avast settings.
It's your Avast antivirus
Post the code!
The Unity course I linked starts from zero with C#. Try it and get a separate C# course if you need it later. 33 hours of video is a lot to digest.
Could you explain what's that CamelHumps that you miss in vanilla VS? Do i understand right, that it's simply abreviation IntelliSense?
This is what I am using as well. It's strange we've never got the developer command prompt integrated into the IDE.
I didn't know it was a full PowerShell and not just for the package manager. TIL.
Ctrl+Shift+C to open a console in your project directory
Really appreciate the thorough explanation! Thanks! I opted for only storing the ID in the token and then checking the permissions in the database, because storing all the permissions in the token would be quite complex in my scenario, as a user can have different permissions in different groups and those permissions are dynamic, as their roles can change and they can join/leave groups on the fly as well, sort of like Slack and Discord. Would you agree that using a session ID (stateful) would make sense in my case compared to using a session token (stateless), as I'm hitting the database anyway? Could I use a JWT token as my session ID in the database or would that be bad practice for some reason?
Use vim ;)
The code looks fine, like others have mentioned its most likely your antivirus. Also since you are new here a small tip how to write a string that includes a variable (a more compact way): Console.WriteLine("A lot of people wonder why " + characterName + " doesn't like his life"); can be written as Console.WriteLine($"A lot of people wonder why {characterName} doesn't like his life");
Thank you! I figured that would be the problem. Also thank you for the tip! I forgot to change the most depressing line of code I've ever written
Thank you! I was able to fix the issue by disabling the Avast Cybercapture setting!
Let's say I have a line of code - `public class SuperCoolWidgetFactory : IWidgetFactory {` - and my cursor right before the initial `S` in `SuperCoolWidgetFactory`. Then I press Ctrl+Right Arrow on my keyboard. Without CamelHumps, my cursor jumps to right before the `:` - completely over the whole word `SuperCoolWidgetFactory `. With CamelHumps, my cursor jumps to between `r` and `C`, then to between `l` and `W`, then to between `t` and `F`, then past the word `SuperCoolWidgetFactory `, right before the `:`. There are a number of VS extensions that also provide this behavior. Some of those extensions also provide other, but partially overlapping sets, useful behavior. In those cases, the extensions will tend to clash and interfere with each other. Even with a single extension, most of them break sporadically (and fairly often) - they just stop working. They also by and large only work in the editor window, and only with some languages. ReSharper's CamelHumps works pretty much everywhere in VS (new file dialog would be an exception).
Since this thread is already discussing VS views; isn't it strange that Visual Studio doesn't have a dedicated view, or at least an extension providing a view for plotting like in R? I've tried to find something similar but I can't. &amp;#x200B; With all the different "Charting" and "DataVisualization" libraries floating around I would've expected at least one of the built-in ones to have some sort of Display() or Plot() method that publishes the data in the same way TraceLogger does, so if there are any PlotListeners, in this scenario the "Visual Studio Plot View", it would grab the data and display it.
Yes, I don't have a computer at home.
Ugh, shitty AV with bad heuristics designed to pass VirusTotal more than anything are a developers' bane. Last company, I once got an email asking me if I knew about "WindowsApplication32.exe". Their backend scanners had decided a test application I threw together was a trojan, and if I hadn't responded they were going to remote-wipe my machine to deal with the "threat". I haven't had a virus on my personal machines since Windows Defender launched. I've had nothing but problems on machines with Avast, AVG, Symantec, BitDefender, and Kapersky. A coworker spent 2 weeks debugging build issues that turned out "the corporate AV views some of the intermediate build files as viruses and deletes them, so it's not possible to complete a build."
Yup, avast can be real bad sometimes. I still use it just in case along with malwarebytes, but you really don’t have to these days.
Console.readkey()
I'm a bot, *bleep*, *bloop*. Someone has linked to this thread from another place on reddit: - [/r/c_programming] [Could you help me ?](https://www.reddit.com/r/C_Programming/comments/ceytsb/could_you_help_me/) &amp;nbsp;*^(If you follow any of the above links, please respect the rules of reddit and don't vote in the other threads.) ^\([Info](/r/TotesMessenger) ^/ ^[Contact](/message/compose?to=/r/TotesMessenger))*
I think I see your point, if you've a chat-room like thing, then permissions could change quickly, if, say, you get upgraded to a moderator. If you have to talk to a database every request anyway, then a session-id style system is a reasonable solution. It means that you have a single point of failure (the database), but you already had that so you don't really care. I guess I'm coming at it from a microservices perspective where you try to keep the system as stateless as possible for scalability and simplicity reasons. There are ways to keep a bearer-token style system if you wanted; when you are notified of a permissions change, you immediately use your refresh token to ask the auth service for new access token. It re-evaluates your roles and builds a new access token for you, which you then use for every request from that point on. &gt; Could I use a JWT token as my session ID in the database or would that be bad practice for some reason? JWTs are bearer tokens, and are generally meant to securely carry claims from auth service to client to data service. If you have no claims (because your services talk between themselves to find out what the client can do), then there's really no point in using bearer tokens. Instead, you should just use a session id: - User logs into your authentication service. - Authentication service generates a long session id, and stores it in the database along with the user's login information (username, login expiration time, login-validity). - You return the session id to the user. - User later makes a request, and provides the session ID in the request. - The data service that gets the session ID, and then gets the session information for that ID from the database (perhaps by asking the auth service). - The data service gets the session information and then knows which user the request is for, what permissions they have, etc. - The data service processes the request.
Awesome glad I could help! Now I know how to turn it off as well haha
Ug, this happens to me with our Norton crap at work sometimes. So annoying.
That's funny, because our C# devs keep telling me Java is out of fashion.
Yeah, I think there is an option in avast it turn it off at least.
Yea, our sysadmin has to go in a whitelist our local source control repository location.
EF migrations for example mostly work. However, there can be issues with it. For example, if someone accidentally renames an existing column or changes the data type, the migration is dead in the water. Migrations rely on changes to be applied in a sequence without disruption. While this is sometimes possible, every single team I've ever worked with has messed this up. As mentioned, Redgate is roughly along the lines of what I'm asking for, but firstly I'm looking for a c# framework and the tool needs to be able to export to database independent metadata format that can be imported on another computer.
At a quick glance dacpac looks pretty close. However, I think it's SQL server specific. Is that right? The file format might be ok but what I'm looking for is a c# framework that could interpret the file and then create an sqlite database for example on iOS or Android. It would need to read the file on the device and convert the schema to sqlite specific creation scripts.
/r/csharp Mods can we have Mosh in the sidebar as a paid source to learn C# from a good teacher?
https://www.youtube.com/user/kudvenkat/videos
Just to give you some background, I have written this framework in the past. There was a process for capturing the schema in SQL server and then exporting it to XML . Then on the other side it can be picked up on the phone and rendered to sqlite. it's not rocket science. I just can't use my old framework because it's proprietary.
Oh my god, that shit irritates me 🤣 I'll happen to start a new uwp app or something on a separate directory than normal and then what, I have cyber capture stealing 30 seconds or so of my life 😆
Yup. Happens every time.
I heard Java's moving to Kotlin/Scala l0l
You can use Ctrl-' to go straight to the terminal
Do you mean you want to intercept this situation to block the UI yourself by showing a loading panel?
Well... talk about recent.
I was told jQuery is dead; confirm/deny?
Kudos for not giving up, man. The patience/perseverance to work through little things like this is probably the number one skill set required for this life. Also, as other have said - always post your code!
There's the C# Interactive Console (View &gt; Other Windows &gt; C# Interactive). You can run basic C# commands and even define and use methods and such.
&gt;You can encrypt them if you're worried about the contents being private, but encryption is not the same as signing. &amp;#x200B; It's not, but a digital signature in this case is being done via asymmetric encryption. Just because the key is public doesn't mean the message was not encrypted. The alternative would be a symmetric signing where only the server can validate, or a "private" public key only certain parties (such as other micro services) have access to. &amp;#x200B; All of them involve encryption!
Why would you want to add more overhead when you already have a perfectly functional solution in place? A session will not be better than JWT specially if you want to expose a public API down the road. Unless you're paid by the hour and want to screw over your customer, there's nothing to gain here. At best it'll be just as functional.
I have not had problems quite that bad, but corporate security does screw with my projects. Apart from the issues with AV and corporate IT being unwilling to add our publish locations to trusted zone, the firewall screws with various integrations I have with cloud services. It's a man in the middle firewall, and in addition to hijacking the SSL session, it will sometimes strip security/auth information out of the web requests for unknown reasons, making it impossible to authenticate. Another fun one is when they randomly disable various protocols at the OS level via group policy--without telling anyone. I so enjoy playing debug wars against meddling network engineers who should ideally be working *with* me. /s
You can expire tokens easily with JWT. Every token is dated, you simply expire any token older than x after a password reset.
Just uninstall all that crap and use Windows defender built into windows 10. And if your going to open fishy stuff, do it in a vm.
I'm relatively new to C# as well, I just recently built my first app. I am proficient in MySQL and I have a decent beginner level understanding of Visual C# (I really like WinForms) but if you want to stay in contact, I have learned so much over the past few months that I feel like I could have learned a thousand times quicker if I had somebody to talk to more often, It would be cool to be in contact with another beginner while we both learn And I may be able to help you as well. What I have noticed however, the C# Community here on Reddit is so extremely helpful and friendly It will blow your mind. I had an issue that I was stuck on for months and as soon as I posted to read it, I had a half dozen people offer to help me and they were all completely serious. It really inspired me to want to be the same way if I can. Either way, good luck and I hope your as happy that you chose .Net as I am. It was one of those decisions that took probably two years before I fully committed to it and now I can't recommend it enough.
Yeah, I guess I could, but I don’t want to dela with opening a vm, I’m sacred I’ll screw something up. I don’t have any experience with it.
That's why I love working in vms. Isolated from host os with 100% control.
Windows defender is fine if you're not the type to fall for spam mail.
I use PopOS with JetBrains Rider for C# at work.
True, it actually does a lot better job than some people credit it for. I’m not the type to fall for that stuff, and I know it makes sense only to use that, but I want to take an extra layer of precaution. Plus it stores my passwords and stuff away form my browser.
Windows defender offers 99.6% protection against zero-day malware attacks. It's right up there with just about every antivirus. And Microsoft is constantly releasing new definitions for it.
You can: public class Foo : IFoo { public readonly object Bar; object IFoo.Bar =&gt; bar; }
Pardon the self-promotion, but I am building a 2D engine from scratch in C# and am documenting my journey. I explain some of my rationale [here](https://dev.to/thebuzzsaw/why-i-am-writing-a-custom-engine-5b38). This is not my first engine, and I am writing posts based on things I had to learn/overcome that were undocumented or difficult to discover on the open Internet. Gimme a follow to see future posts. Good luck on your endeavor. :)
A very minor, very opinion based comment: The banner at the bottom (Developer etc..) should be in a Help &gt; About menu or tab. &amp;#x200B; Depending if you want to have it open source. Paste a github link, no one would mind. If you want it to be closed source however. Rule 6 applies for a bit i think. Advertising the release of a tool you made is generally not appreciated (unless you link the source or so)
Apparently so! And for anyone who thinks I'm being rude consider, I get to use Windows at work for free and stay relevant with that technology. Why would I spend my own money for Windows, or Office 365, MSDN, etc. at home when I don't need them at home? I'd rather buy a few nice dinners. It's not that I hate Microsoft. They just don't have compelling offers for me, a home user with modest needs, at a good price point. I pay for Zorin Ultimate and still save money.
Try adding Console.ReadLine(); In the last line of your code.
Another topic of discussion, how different is Spring to any other web framework? As someone who's never used it and reading through i notice: * Beans look god awful compared to .Net DI solutions but the core concepts are the same. * Otherwise looking at an MVC controller example it's fairly similar. * It looks like you need a robe and wizard hat to work with spring, that's where experience is required and i'm remembering why i dropped Java. Aside from the HR people who don't know any better after a brief look i would gladly work with a competent Spring dev to in ASP.Net Core.
There are bad interview questions, but some of them really test your fundamental understanding of the language. Something a lot of people get wrong is what is the default access level for a class? Some may consider that trivia, and I'd say if you consider that trivia, you're a low- to mid-level programmer because that means you've never been burned by forgetting to make a class public instead of the default, which is internal. It may also hint that you don't understand the distinction between internal and public. A series of these "trivia" questions is a good gauge of actual experience as long as the interviewer uses it that way instead of "what do you remember from college?" For the coding challenges, I don't even care if you can complete them. I am looking for HOW you do them. What is your process? Do you communicate your where you're having trouble or are you going to pretend like you've got this? How do you structure your code? Do the language features you're using make sense in the context?
That's why it's a virtual machine, if you screw it up, delete it and use a clean copy of the VM image.
You know, I should try it one day. If it goes well, I’ll consider deleting Avast. If my poor mobile i5 can handle it that is, but I think it’ll do fine.
Don't disable the whole service just add an exception to your repos folder that you use for making your own projects.
Took a quick look at your blurring code. I suggest reading up on kernels and convolution here https://en.m.wikipedia.org/wiki/Kernel_(image_processing) If you write a simple method to convolve an image and kernel, then you can do all sorts of things by just changing the coefficients of the kernel. You can do blur, sharpen, edge detect, etc
After you resolve this issue, please change to the dark theme
Why VS and not vscode? AFAIK people are moving away from VS
I'm not a VS Code power user, so let me know if there's a way to do this. I come from Emacs, where you literally never touch a mouse. You can quickly swap between open panes (terminal to text buffer to command window) and quickly navigate and reorder open buffers with pretty simple keybinds. Is there a fast way to jump to a specific buffer (tab) or move the cursor between open panes in VScode?
You have a passion for it, obviously. You need to nurture that, it usually really pays for itself to invest in little loves like this, especially programming. I really hope you can get a computer and the ability to foster this on your own time and in your own way. If you don't mind my asking, is there a reason that you do not have one? Finance, environment, location?
I've tried doing that, but the exception doesn't seem to do anything for me. The Cybercapture console still comes up and runs the program twice, unless I didn't do something right
I'm going to add this as an issue. Thanks for the tip.
Break that bad boy up into some nugets and microservices, you madman.
For the sake of professional debugging. C# projects are still being created and managed in VS
Except for one project all my C# code seems to run and debug fine in vs code
That’s why I said for the sake of professional development. Most companies still use VS
Yes. This has happened to me plenty of times. Usually, it gets too complicated to continue. Either you find a way to reign in the complexity to make it manageable again, or you suffer through it trying to get to the end. But it doesn't sound like you want to continue with this project. That's ok too. Abandon ship. No shame. Put another project on the pyre.
Windows servers don’t need websphere. Do the math$$$.
You really have to decide if the time required to finish it will be worth the payoff. Are you wanting to make money from it? Will it be open source (lots of options here if that's the case), etc. I usually reach this point on large projects about 80% of the way through... I have a deep think on the matter for a few days. Sometimes I continue, sometimes I ditch it. Another thing to keep in mind is the last 20% is more work than the first 80%... You've got bug fixing, usability tests, promotion, etc. It's all very stressful/boring, so the project really has to be ringing some bells for you to slug through it.
This is very good advice. Breaking it up will keep the project manageable and less intimidating. Ensure you setup unit tests for each service, it will give you confidence.
That's strange. Every company I worked for let us choose ours. We have a mix of vs, vs code, jetbrains/rider
You can run .net core natively on Linux without paying anything for licenses. I think your biggest hurdle is going to be getting the DevOps guys on board with your plan. So yeah, you just need to install .net core on a Linux server and you are good. Go deploy and have fun! Performance is also a nice added benefit on these. Message me if you have more questions :)
Remember that .net is free and open source btw
Cost it out. Develop a matrix complete with all the languages, licenses, expenditures, cost of upkeep, etc. Add on to that the cost of retraining from Java to C#. Determine how many applications you have and then determine how each costs under the current environment and then how much it would cost under the new environment. I'm sure there's more, but I'm not fully awake to think coherently. This will help you determine realistically the cost/benefit of migrating from Java to C#. I did something similar when we merged 3 teams into a new department and had to reduce the amount of software we had out there. I was able to show how to reduce our footprint from 366 to about 150 software apps while eliminating redundancy. Upper management loved it and we used that road map for our new department. It took me a couple months to lay it out, but in the end, it made things more manageable. And this was with a crew of sub-par developers. Once you've outlined it you can then present it to management and tell them how they can save money. If that's successful, you should be in line for a greater promotion.
Maybe we can be sympathetic if you actually explain the problems you've had.
&gt; Granted, it’s a massive schema How big? 1000s of tables?
&gt; The developers who can code both C# and Java are about 3x as productive in C# as Java (C# is a wonderful language) Oof this struck home. I landed a position as a Java dev earlier this year - coming from C# it's been a lot of fun, but a lot of hard work. Java is so incredibly messy. I hope Microsoft doesn't abandon .NET like Oracle has Java.
!RemindMe 3 days
I will be messaging you on [**2019-07-22 05:42:42 UTC**](http://www.wolframalpha.com/input/?i=2019-07-22%2005:42:42%20UTC%20To%20Local%20Time) to remind you of [**this link**](https://np.reddit.com/r/csharp/comments/cf380e/am_i_the_only_person_who_cant_get_ef_to_behave/eu71i0l/) [**CLICK THIS LINK**](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5Bhttps%3A%2F%2Fwww.reddit.com%2Fr%2Fcsharp%2Fcomments%2Fcf380e%2Fam_i_the_only_person_who_cant_get_ef_to_behave%2Feu71i0l%2F%5D%0A%0ARemindMe%21%202019-07-22%2005%3A42%3A42) to send a PM to also be reminded and to reduce spam. ^(Parent commenter can ) [^(delete this message to hide from others.)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Delete%20Comment&amp;message=Delete%21%20cf380e) ***** |[^(Info)](https://np.reddit.com/r/RemindMeBot/comments/c5l9ie/remindmebot_info_v20/)|[^(Custom)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=Reminder&amp;message=%5BLink%20or%20message%20inside%20square%20brackets%5D%0A%0ARemindMe%21%20Time%20period%20here)|[^(Your Reminders)](https://np.reddit.com/message/compose/?to=RemindMeBot&amp;subject=List%20Of%20Reminders&amp;message=MyReminders%21)|[^(Feedback)](https://np.reddit.com/message/compose/?to=Watchful1&amp;subject=Feedback)| |-|-|-|-|
[removed]
Oracle rescued Java when no one else cared for Sun, made several releases since Java 6, made the research VM Maxime into a real product GraalVM, has made AOT compilation available for free (a feature previously only available on commercial JDKs), is bringing value types into the JVM, and is responsible for 90% of all OpenJDK work and language innovation. Plenty of languages would like to be abandoned like that.
Don't kid yourself. They hang on to Java because of the moolah it brings in, that's about it. Java is pretty much community driven, any and all tooling that exists around the language isn't provided by Oracle, the end result is a fractured mess with at least half a dozen tools that all do the same thing with varying degrees of success. It's a pretty huge contrast to the .NET ecosystem which has Microsoft's full support. Don't get me wrong. I genuinely like Java, the community is fantastic. I just wish Oracle was out of the picture.
&gt; Breaking it up will keep the project manageable and less intimidating. Breaking it up into microservices will make it less manageable.
If your company is small to moderately sized and you follow conventions and patterns, it shouldn't be much of a problem. A lot of the growing pains with EF is understanding how your company should use it and why. Code first vs database first is one big step. Knowing how different types of junction tables must be setup for ef to generate models the right way if you're doing database first is another pain point. Then a lot of people struggle with the Includes linq method and how it's used with entity.
&gt;I am thinking of how we could use .NET Core, or some kind of Java inter-op Web services are your friend. You could consider building .net core RESTful web services that java can call and vice versa. &gt;without worrying about MS licensing costs, since we're not going to be using Windows server hosts? Don't forget to factor in MSDN licences. Visual Studio is a great IDE and worth paying for. If you are going to use Azure Devops for deployments, don't forget licencing for that. But do yourself a favour, use Octopus Deploy :) . If your ops guys are uncooperative... consider your options.. :) While you're there, look at the serverless stuff ("Azure Functions") - for some stuff you won't even need linux servers at all :)
But yeah, many large scale projects dump entity framework because they grow out of using simple crud apps and have to evolve. Entity can be made a bit more flexible, but it's primarily for crud apps. In an enterprise environment, it may make less sense to use EF when you start identifying candidates to move to table storage, etc.
Pretty cool! I will check this out for an internal tool!
Can you elaborate?
You now additionally have to deal with latency, multiple deployments, versioning, communication between the services. And most importantly: You need to have clear domain boundaries. I don't think he has that yet. I agree with breaking it up, but to projects, not microservices.
I see. Thank you.
Uninstall avast, you don't actually need an antivirus. Windows already has its own installed.
Finance. My current salary is not enough. Thanks for the help.
I've had Avast before, that shit is useless. It said a trojan was found at `C:\Program Files (x86)\Steam\Steam.exe`, I'm just sitting here like, "Thank you for trashing Steam's update ya bitch." It also did it a couple of times with Subnautica. And it did NOT like Visual Studio trying to compile any code. Get that shit uninstalled ASAP, nay, wipe, and reinstall Windows, because I've noticed it likes to scatter it's files across the system and even in the `Windows` directory. Microsoft Windows Defender does a good job as it is, and if you are really paranoid about security, just run things in a VM, or hell, just use Linux.
To answer a completely different question... have you considered Kotlin ???? its a very c# type language (better in some ways) which compiles to target the JVM and is totally interopable with Java libs...
Thank you very much, you got me heading in the right direction. I ran into an entirely new problem unfortunately, I've made a post here https://www.reddit.com/r/csharp/comments/cf4qee/invalidcastexception_when_using_com_interface/?
You need to add the repos folder to your scan exceptions list
Split it into multiple data contexts, one for each 'area'?
Yeah exactly. They have their advantages and use cases but not all projects will play nice. Breaking up into projects is always a good idea though.
Performing such a big shift and no thoughts on lifting to cloud ? Be careful to implementing expensive new infrastructure related stuff specific for your legacy servers that sooner or later will be lifted to cloud, plan for it now maybe ?
1) If you don't have one, build a proper CI pipeline. Commit code to Git, have the build server get it, build it, run tests and if it's all ok make it available to deploy to ANY environment (see below). 2) Have several dev environments. 3) Change how the app works so it can be deployed to any environment. 4) Discover Docker. Have the CI pipeline build a deployable docker image targetting Linux, using .NET Core and Kestrel (Web server, is it still called Kestrel? I can never remember). 5) Use Docker to debug locally 6) Beat your sysadmins until the agree to deploy a complete docker image. Ideally your CI should be able to deploy to production, but there should be controls so that only your sysadmins can actually do it after sign off. 7) Use multiple docker images with a proxy to scale out.
upload it, to github ;) and you can share the source code, anyone who is interested can download and compile it
always nice to have a docker container, this means you can basically "publish" this thing everyhwere. So first: 1. get the whole thing running on docker 2. done
If the DevOps people refuse to improve their processes then they're not doing DevOps. I hate teams like that.
Here is the SO Link: [https://stackoverflow.com/questions/6227892/reading-share-permissions-in-c-sharp](https://stackoverflow.com/questions/6227892/reading-share-permissions-in-c-sharp)
have you tried =&gt; [https://github.com/dotnet/docs/releases](https://github.com/dotnet/docs/releases) ?
I'm particulary sure that explainingthe syntax doesn't help at all for him to understand the logic behind inheritance.
I try to figure it out. &amp;#x200B; So you have logically two entry point? That can be solved by two do..while: do { do { condition = ... }while(condition) }while(run) In here, if condition is true, you will jump to the latter "entry point" aka the start of the inner loop, if the condition is false, you will exit the inner loop, but the outer loop will jump you back to the first "entry point" aka the start of the outer loop as long as the `run` boolean is true.
Another part of the reason OP wants to move to C# was to break dependency on IBM.
true - i was concentrating on more productive developers in a more modern language without all the boiler plate that Java brings....
A "kinda" easy solution I can think of is make a webstream that relays the output of your console application, and make a webpage with a JavaScript code that connects to this stream and constantly fetch the data + displays it on your page.
Change data type, generate migration, generate SQL, apply sql
Run your servers and .NET core on Linux. That part will be free, but you will still need Visual Studio licences, a licence for github or other source control system, build servers, a deploy pipeline, Ops people, Devs aren't cheap, etc. As other have said, look into cloud, look into containers. &gt; Our Ops people only know how to run and deploy to WebSphere Hire new ops people?
I'm thinking about C# as web and personally hosting it on Linux
I am assuming that a project when complete is something like an .exe and some .dlls? Set up an automated process that includes some specific stages. I will list some examples. Building the project in release rather than debug. Keeping only the minimum amount of items wanted (such as by deleting the extra unneeded files like debug symbols or app.configs if you don't use them, or copying the wanted files to a new directory). Obfuscating the assemblies if it is commercial software, or to shrink the final files (I recommend Obfuscar). Creating an installer (the recommendation most give for dotnet stuff is using the [Wix Toolset](https://wixtoolset.org/), rather than the deprecated Microsoft installer projects).
`dotnet publish --configuration Release -r linux-x64`
FYI, here's the talk Abstract Building cross-platform native UIs with one shared codebase was once just a dream. With Xamarin.Forms, this dream is now a reality. Xamarin.Forms allows you to build a native UI for three platforms with one shared C# codebase. Simply put, if you know C# then you already know how to build iOS, Android, and Windows Phone apps. Leverage the .NET Framework to build out your shared business logic including integration with web services and Azure Mobile Services and then build out your shared UI in C# or XAML. Xamarin.Forms also features a built-in two-way data binding, dependency service to help you implement platform-specific code, an advanced cross-platform animation system, support for custom controls, and lots of other powerful features to help you build the best apps possible in the least amount of time. During this session, we will cover the Xamarin platform and the brand new Xamarin.Forms library to share even more code across iOS, Android, and Windows Phone. Moreover, we will really focus on the code with several live coding adventures throughout the entire session. When you leave you will have the knowledge to create your first iOS, Android, and Windows Phone mobile apps in C# with Xamarin and Xamarin.Forms.
Really depends where you are in the world and where you are in the country. I have heard of a lot of large companies in cities in the USA taking on people straight out of college and offering things like internships. I am from the UK and can only speak about that with much authority. Within the UK there was a big drive for companies to take on apprentices which means there is a lot of pretty good entry level jobs in which skills with C# are wanted or will be taught, with the government subsidising all or most of the training. I started on an apprenticeship with bad grades from secondary school, with a small company in south London and from there got taught basically everything .NET I know. For reference I would recommend anyone wanting to find out to look around an apprenticeship agencies site for job openings to get more info, as there is a lot out there.
I still use EF code first and I've never had any issues. I maintain a couple of projects that do DB first, and they use MySql, and holy shit, yes, I feel your pain. Even something as simple as adding a field can be a nightmare, the edmx files often don't open, the mysql connector and drivers are very often buggy, and they have to be upgraded in sync. 9 times out of 10 I find myself creating a brand new, empty project, generating an whole new edmx file with the changes I want, and then dumping all of this generated code into the existing project. EF code first has been *much* better in my experience, very easy, edmx + mysql is janky as sin.
A little bit more details would be needed, is it one or more applications? If you would like to have a windows installer, check [https://wixtoolset.org/](https://wixtoolset.org/) for example, I have used it to create installers.
Maybe i‘m wrong but nobody responds, so i just try to help. Java and C# are entirely OOP, there is no way to have a method without an class. You could maybe say you want a static class, so you dont need an object to use the methods but overall C# is 100% OOP. As an opposit example python has the ability to have methods without an class. (I think, i‘m not sure) So: no its not bad to have a class that is a collection of methods and nothing else, its the only common way to handle it. Sometimes its even better to separate the logic from the information.
If you want an msi, as others have said, use wix. Docker is also a good way. Whatever you do, make like easy on yourself and setup a proper build server (i use Jenkins, which is free and can run in a docker container for easy of setup if you want). Make the build server build the entire project, kicking out the msi or the docker image as required. Then, once you have it all working, new releases can be done with a coouple of clicks, rather than manually running all the wix commands. Wix is a bit messy (lots of XML) but its the least evil option out there that I have found. Its not that much work for a simple 'dump files into program files' installer. Make sure you use the file harvester to build the included files, rather than manually build the XML
It's because of the light theme
Oh my god, I just found it. I've apparently added the config file incorrectly, so all my edits weren't being saved correctly! &amp;#x200B; Whelp, for anyone looking, this code is how you can log to separate files with log4net
I would not know how to do large projects without EF.
It's not being casted at all. They share the same methods at the same offset, so casting isn't really needed
Yes you can do that, afaik that's for example how the Standard math Module is implemented (it's a class). But other than that: I think it's a horrible idea and not what a class should be used for. But it may be the only way to do it in C#
 I'm sure you will have learnt a bunch of new things doing this. There are no failures in software development... just learning experiences. As long as you dont give up. I've been programming for 30+ years. Some days I cant be bothered. Other days I cant get enough. I've been working alone and unpaid for nearly 2 years on my current project. I'm sure it will work out and be valuable, but if I have to give up and start something else then so be it. Keep it fun and maintain the passion. Variety is the key. Life is too short to be stuck doing things you hate.
It's quite common to have a class that is just a collection of methods, and other classes that are containers of data with very little to no logic. Classes with only methods are typically called services, modules, or strategies, and tend to hold only references to other modules that they depend on to do their work, such as repositories.
Getting a grip on EF is hard because there are a lot of hidden gotchas. You're not alone. The more you discover about EF, the less you feel comfortable using it. But alas, it is a part of a .Net dev's life. In my experience, EF should not *be* your application's model layer. Your model layer should sit between EF and your application. By using the model layer as a buffer, you regain control of things like datatypes, decorations, and how and when your app pulls data. EF is a hose-beast. Don't let the hose-beast spray crap all over your projects. Keep it in its own separate project, where it can regenerate files without creating an uncontrollable dumpster fire. This abstraction also makes unit testing and DI manageable. It also puts data loading back under your control in a concrete way. There's a little extra overhead, and a little extra effort involved. However, if you were concerned about efficiency, *you would not be using EF.* Using EF is about pleasing an audit team. Keeping that buffer model layer lets you still please the audit team without fully marrying into the brain-damage.
Then you would be enjoying maintenance contracts for Java 6 deployments instead of all language and VM improvements of the last 10 years. The community provides zero contributions to 99% of all JEPs, beyond feedback.
There's nothing wrong with killing projects and moving on. If your hearts not in it, it'll feel like a chore and that will be obvious, too. Take a break, freshen your mind, find something that excites and inspires you to work on it when the itch is there!
That's what I'm wondering. The only time I've had a problem with it was when I worked with a single table that had literally over 4000 columns. Would take about half an hour to refresh the scheme.
I think you may be underestimating the effort and overestimating the benefit of such a big platform change. I'm also more productive in C# than Java, but not so much that it is worth rewriting a legacy project. Moldy code that mostly works is often better than fresh code with lots of new, unfound bugs. If you are feeling some pain in your current stack, you might want to invest in mitigating that pain first. Perhaps automate the creation of new dev environments, use virtualization, etc.
First time it happened to me was when I was creating a math model, it got so big that I got lost in it for quite a while and it was just piling more new things and services up with more interest from pharmaceutical companies and others. That was horrendous but also my first big project so I got into it without too much experience with larger projects. Other than that it happenes to me everytime I make a new game so I got used to it because I quickly learned to divide everything in your project into smaller pieces and have some service to compile it together for you. Now I have files for every class, every little thing I can. So as conclusion I strongly advice creating some very solid file structure I'd say with a bit of exaggeration that it saves lives. ;-).
\+1 for sharing the solution :)
inno setup is also one possiblity, if you like to learn pascal [http://www.jrsoftware.org/isinfo.php](http://www.jrsoftware.org/isinfo.php)
The sound engineer needs to go on a course.
When I have problems with my EF and code first it’s a nightmare sometimes. Just [reset migrations](https://weblog.west-wind.com/posts/2016/Jan/13/Resetting-Entity-Framework-Migrations-to-a-clean-Slate) state to initial and voila. All problems gone!!
It's not *dead* but it is steadily becoming less ubiquitous due to improvements in JavaScript and the prevalence of SPA frameworks like Angular and React.
Thank you, friend, I will upload the source and share it soon.
Thanks friend, I will
I would identify discrete areas of functionality within the legacy code base and start building out a micro service architecture. you can use any technology you want for each micro service. and the communications transport between doesn't have to be HTTP. This way you can get more and more of the legacy code migrated to a new platform and it's less risky than trying to rewrite the whole thing at once.
It depends. If you are doing OOP then some consider it bad practise. Otherwise it is totally fine, and just a normal way of grouping together related code. (Which would just be called functions then, and not methods)
You need a static class to house the function but c# has "functions as a first class citizen" so while C# is OOP first I feel it's wrong to call it 100% OOP and it's part of what makes C# so much better to work with than say Java.
Ive used something similar. If the methods didn't depend on anything else I also made them all static, like a Utility class. I think the Console class is like that, mostly static methods. Mine probably wasn't an ideal, but it served it's purpose and it worked...and it still does. Design patterns are great and all, but I hate that feeling of forcing things into a pattern...feels unnatural like Im putting a square block into round hole just so I can say its a "abstract builder factory fly weight whatever". I'd rather be able to say it works. If I need to refactor later on, that too will feel natural like "aahhh it's a square block after all, this is perfect for the square hole" ... usually works out better that way, for me at least. No point in being fancy. During the initial phases of a project, I keep everything simple knowing it will mostly likely change later on. Does it work? Can I change it later without breaking everything? That's what I worry about not "hey, what pattern can I force all this code into". It's less stressful that way too. Programming can be frustrating all by itself; it doesn't need my help.
C# is not restricted to OOP. You can follow any paradigm you want. It is totally normal to have static classes with static functions. It is just not OOP. OOP is not the only way to do things in C# or in .NET To say that C# is 100% this or that is not accurate, the language itself has a bias towards OOP, but it allows for other ways of thinking also.
Here come the people that think their big CRUD app is 'large scale' to downvote you for truth.
You and most other people that don't hate EF. Ignorance isn't good rationale for design decisions.
In your instance please try and stick to trying to keep methods in their respective classes and learning OOP principles, being able to keep a clean separation of concerns is incredibly important. There's nothing wrong with static classes but if your just starting out it's a great way to end up with spaghetti code that's poorly structured,if the behaviour is linked to an object try and keep it together until you feel comfortable working in an OOP mindset.
Well Java apps don’t need WebSphere either to be fair. There are free and open source solutions that work just fine.
I wish it was that easy. Instead my compatriots believe that a separate model layer is wasted effort. That you can do just fine with code first database using EF. Then when they can't make even a modestly complex thing work, they bring me in. I'm not allowed to replace the 100 table EF system but need to make the SQL better. On my last project, I had full responsibility for the service layer and everything past it. Dapper is great. Wrote a series of classes to automate the SQL generation and have full control over performance and changing the schema is trivial. So much better.
It happens to me every project, after 5-6 months I'm just tired of it, and my motivation goes down the hole.
We use teamcity to build and push to docker hub. Then just pull that where we need it. It's so awesome.
 &gt;So yeah, you just need to install .net core on a Linux server You don't even really need to do that with self contained deployments. https://docs.microsoft.com/en-us/dotnet/core/deploying/#self-contained-deployments-scd
I created a mobile app project in .Net Framework 4.7 with Xamarin, ASP.NET MVC and WEBAPI back in October before I knew about .Net core. I was brand new to the concepts involved and there are huge, glaring mistakes that I can't go back and fix.. I basically wrote a brand new, legacy system that we have to maintain until I can migrate the damn thing. Opening VS is basically a shameful reminder of past mistakes.
I like to put the code on github and set it to build master directly to my azure web app. But at work I would rather use something like jenkins.
Just run it in Azure
I think they were referring to any method must reside within a class, whether it be static or not, unlike in a functional language like C where functions simply reside in the global namespace, and not called with a receiver. This functionality can be psuedo-duplicated with static usings obviously, but that is merely syntatic sugar, and results in the same IL as if were called with the receiver. I could be wrong, but that's how I interpreted what they were saying.
lol'ed at "finished developing my software"
The purpose of design patterns is not to enforce a specific structure, but to give you a toolkit of solutions that are known to work, and names that let you discuss the implementation with others in a common language. It's worth considering patterns early because you'll find code easier to refactor when structured well - trying to retro-fit patterns later never works as well as you hope.
Yep. You want to make sure the methods are closely related so you don’t end up with A Class That Does Everything. If something doesn’t fit conceptually, create a new class for it.
You finished with you'd rather be doing other projects. You have to ask yourself, would you rather be doing other projects because you find those other projects more interesting or because you think they would be easier? Either answer is fine, just be honest with yourself. If you decide you want to continue with this project, either full or part time, as others have said, you gotta break it up into manageable pieces. As someone that suffers from analysis paralysis far more often than I care to admit, if you don't break it down you'll just overwhelm yourself, which it sounds a bit like you're doing based on your post.
can someone please explain to me what serverless means in this particular scenario? is it a buzzword?
I don't know the shortcuts for all of the panes, but I do know a few. If you only have one document open, Ctrl-1 will focus it. If you've got a split screen, Ctrl-2 is the second panel. If you've got a three-way split, Ctrl-3 is the third panel. Ctrl-` (backquote) will open the console if it's closed, otherwise it will focus it. I don't know how to jump between multiple consoles.
This depends on the target market and type of application. If it is a consumer downloadable product for non-devs then it doesn't make sense to use docker as it would require more pre-requisites and a much larger download.
I find EF to be good until a mistake is made, then it is a pain in the ass to fix that mistake.
&gt; they need to be re-written (code from ~2006) That is not sufficient reason to rewrite them. Are you sure refreshing them with a large-scale refactoring approach isn't sufficient? Migrate away from WebSphere to break your IBM dependency. Are you sure TomEE or WildFly cannot fulfill your needs? Or even something even more barebones like plain Jetty? Upgrade Java. Java 8 brings lots of productivity improvements with lambdas and streams. Consider writing new modules in Kotlin. Fix your build and deployment process. Don't have complex local environments, have the projects come with easy-to-setup local environments that are created as part of the build process. Use Docker or VM images if you have to. Set up Continuous Integration; Ops people are not *supposed* to build anything (although they should be partly the ones setting up the CI - may not be an option in your corporate culture). A push to the repository should trigger a process that yields a deployable EAR or even a Docker image at the end. Consider the cost of doing all this, compared to a *complete rewrite* and retraining. C# is good, but is it really that good?
That would be an interesting add-on to make. I'd guess it doesn't already exist because most of the languages it supports are very general-purpose, where as R is dedicated to data processing.
&gt;Oracle rescued Java ... and is responsible for 90% of all OpenJDK work and language innovation. ...and is suing anyone who made other Java software according to Sun's policy of "go ahead, it's free", thus ensuring the death of the language.
You're not providing many details. It's fairly easy to change a datatype, you change it, add a migration and update the database.
Simple is good, and for small projects you should keep it simple. For larger projects that are going to change you really need to implement patterns early. Part of the point of patterns is to design a structure that can easily be changed in the future. There might be a little bit of a learning curve, but it will save you time. A recent example for me, our company is looking to upgrade our product from 5th gen to 6th gen. This means changes to code. My partner didn't want to do anything because it was still the early stages, and things were likely to change. They insisted the work be done, so I did the work instead. Knowing things are likely to change I took that into consideration when deciding how to implement the changes. If I had just kept it simple and straightforward there wouldn't have been any flexibility, and you would basically have to rewrite everything if anything changed. Instead because I used a pattern (chain of responsibility) when they did change their mind the only changes that need to happen is a reordering of the chain. If I had coded it the way most of that application is coded there would have been a bunch of if..else.. statements in 5 different methods in 3 different classes that all needed to change. Because I took the time to implement a pattern, what would have been a difficult change became a super easy change.
What is your target audience? Is it a consumer GUI application? A game? A CLI tool? A webservice?
I agree, a change in C# that I would like to see is adding the ability to just add functions to a namespace without the need for a class. The Math class is a perfect example where the proper means of "abstraction" is a function instead of a class. I'm not sure how IL handles static classes and methods, but I'm sure the most simple implementation of this could be done by just putting those functions into a static class at compile time.
You could take a look at the library that superpower is based on: [Sprache](https://github.com/sprache/Sprache). I think I looked at Sprache a few years ago, but determined it was overkill for the simple parsing needs I had at the time, so I have no hands-on experience to relate to you.
I loved EF6, but haven't had as much fun with EF Core. I began a new job a few months ago and most of the databases in use here had tables that didn't use silly things like primary keys and foreign keys \*smirk\*. I turned to Dapper and haven't bothered with EF since.
Asp.net Core is built on EF
Have you ever studied patterns?
I did look at Sprache a little. However I was equally as lost haha. I would like to really make my user input streamlined so I am looking to do a lot of work with text parsing specifically which is why I am going with these libraries. Without them I feel my code would end up being pretty obnoxious to say the least.
I was too defeated to do anything beyond rant last night when I made this post. I'm going to give it another go and document what I run into. What I'm trying to do should be very, very easy, so I admit, I might just be dumb.
Have you considered open sourcing this? I would definitely love to take a look at the code and maybe even contribute.
Please see [https://github.com/leaderanalytics/AdaptiveClient](https://github.com/leaderanalytics/AdaptiveClient) and [https://github.com/leaderanalytics/AdaptiveClient.EntityFramework](AdaptiveClient.EntityFramework). I maintain several enterprise apps that use these libraries and they work very well. Use the ServiceManifest pattern as shown in the EF libraray if you have many (hundreds) of services that are interdependent. [https://github.com/leaderanalytics/AdaptiveClient.EntityFramework.Zamagon](Fully functional demo here).
I detect this is going to get ugly but: I've been working with Xamarin Forms since 1.0. It was almost unusable in 1.0, somewhat usable in 2.0, and 3.0 is where I feel like it started becoming viable. I haven't had a lot of time to spend with 4.0, but my life has gone from "daily horrors" to "occasional wtfs". I don't think we're going to see Yelp or Facebook switch to XF. It's immediately apparent MS isn't widely using it. But I think XF is a best fit for "enterprise mobile apps", much like VB6 was a really good fit for a niche kind of app people were paid to use. Can you write those apps as web apps usable by a tablet? Sure. Can you use Flutter or some other framework? Sure. Could you write them native? Sure. But a lot of companies need an app, don't have a lot of room in their budget, and have C# developers on-hand. That's the niche Xamarin Forms fills the best. For some reason people hate on it for that. (The "it could be a web app" comment is dubious, too. All of my apps interact with hardware via BT and need to be robust offline. I can do "offline" with SPAs and various web APIs, but as of yet I can't use web APIs to communicate via BT. I'd have to be using a web-to-native framework and, well, Xamarin is a framework! Keep in mind there are plenty of domains that require native libraries and web can't fill those needs yet.)
we're all done here boys. Delete the source.
Do you use Integration Bus or whatever it is called atm? If you do - it supports .NET nodes, albeit quite restrictively. So you can start by rewriting you legacy code node per node. WebSphere runs on C++, so it doesn't care whether your code is in Java/.NET/Python/PHP.... If you want to get rid of WebSphere altogether (and I would support you in that) - you will need to write your own web services/ message queues/ whatever you use it for. It is a huge task and I would suggest to divide it in smaller ones.
Well I started with Code first, had to learn DB First - and I won't come back anytime soon. I don't trust this thing to build any tables, indices or relations for me
This is a yes and no question, there are some philosophies that disagree. It is **not** OK to make what we call "God classes". These are classes that have a lot of methods and do many different things. Think about a class that has methods for parsing JSON, methods for calculating sales tax, methods for performing Google searches, etc. Don't write these. Nobody agrees they're a good idea. There is an **argument** to be made for classes that have "a lot of" methods so long as those methods have a logically related purpose. Maybe you have like, 10 types in your program that get serialized to a custom file format. You might make a class that has 10 methods, one for deserializing each kind of file. The argument here is it's not confusing that "the type related to deserialization" has all of the deserialization methods. There is a different argument to be made that classes should only have a very small number of methods that do one thing, and it's preferable to have many classes that do similar things and share their core code via dependencies. This tends to be a little easier to test and is a more flexible architecture in a very large project. I prefer to keep my classes smaller than 3 methods when I can. But I tend to work only on "large projects" that require a lot of flexibility. There's nothing wrong in general with having more methods in a class *if* those methods represent something cohesive. And, especially when you're starting out, focus more on "making things work" first. You can take a working project, clone it, then play with, "How could I change the architecture?" But if the project doesn't work, having more complicated architecture only makes it harder to deduce why. (That's part of why we favor very small classes in very large projects: the smaller the class the easier it is to prove it works, and the more classes you can prove work as designed the easier it is to find the wrong ones.)
What I would be working with would be about 3 methods, all of which are related things to the class. I have been trying to stick to the one sentence rule for my classes
What? I work on plenty of ASP.NET Core services that don't even have a persistence layer.
WUT? Please read more. Ef is ONE of a possible orm solutions that can be easily used with DI in [asp.net](https://asp.net) core solutions. It is not the best, not even close.
No, it is suing Google for building Android J^++. If Google wanted to fork Java they could have bought Sun, instead of hoping it would sink with no one else buying its assets. Plenty of companies have been shipping alternative JVMs since early 2000's, without any kind of issues with either Sun or Oracle. https://en.m.wikipedia.org/wiki/List_of_Java_virtual_machines Their secret? Playing by the rules with no hidden agenda. https://youtu.be/ZYw3X4RZv6Y
It’s in a team services repo right now and I might make it public on GitHub but at the same time the code is mess because I wrote this program when I was much less experienced at coding. Part of why I don’t like working on it anymore is how much there is to improve.
&gt; the agency can't be bothered to buy IntelliJ licenses, VM tools, or any other tools. Man, if I were you I'll start looking for another job with a company that really takes care of the ones that are basically making them the product they sell, that agency sounds like a wasteland to me, sorry about this and is maybe unrelated.
Thank you, the tipp was very helpful ! Generally, is there a way around to use other external methods on GPU? For example, to check whether a value in my CameraSpacePoints is infinity, I would like to use `System.Single.IsNegativeInfinity(Value)`
&gt; I'm sure there's a nice way to say that. Pretend I said it that way. Maybe I can add a bit onto what you said: * Make sure your models (DTO's) match your tables exactly. Don't put code in your DTO's! * Make sure your DbContext matches your database schema exactly. Don't try to split it up or get cute. Your DbContext is an in-memory representation of your database and the two should match exactly. * Use projections (denormalized DTO's) in the PRESENTATION layer.
If you have a class that consists entirely of methods, either make it all static or a service Singleton.
Tbh, obscuring does little today with the class, of deobfscurers out there. It's a nice touch but will cost the potential hacker but an hour or so
I would consider a Microservice approach where you slowly pick apart the existing application into smaller bits and write those in C#, deploying into containers running in a separate environment. The developers will be able to do most of this through configuration changes and right-click deployments through Visual Studio. This will allow the existing mold to exist, while be freshened and migrated when required. &amp;#x200B; As for the DevOps crew, it may be time for them to move on, because they're not doing DevOps, they're just saying 'No'.
I don't always code, but when I do, there's always a static class TOOLS.
I've used an extension called reverse Poco generator, it just reads your db schema and makes your dto objects. It's got a lot of configuration built in and just uses a t4 template to generate your models. It can also make enums from db tables with Id/name
I heard about it. But we have all our classes created already. And I know enough to figure out how to create more. And I write configs for them myself
At that point you could write custom db mappings with the fluent API manually if you wanted. Or is that what you're doing already?
It is exactly what I'm doing.
If you haven’t used web sphere, it’s by far the worst platform I’ve ever developed in. I’d say this is fairly worth it.
I used to feel this way. For me the best approach is to spend enough time on one feature that I'm confident it won't need to change aside occasional tweaks (hindsight refractors). For instance, ill write a bunch of code for X namespace. I'll keep adding, refactoring and tweaking as the project grows, but eventually it becomes less volatile. Eventually I can trust X,Y namespaces are more or less complete, well defined, covered by tests and unlikely to change. Now my problem is only Z namespace. Replace namespace with class, class library, project, solution, package as appropriate. The idea is your code should be well defined and tested to the point you only need to focus on the task at hand. You shouldn't be concerned with the brickwork when tiling a roof. Trust the job before you was completed to a high standard and build on it.
Go with squirrel for windows. Easy deployment and app updates.
Is choosing EF a design decision? I think of it as an implementation detail.
Well as I learned I realized the better ways to do things and would apply that to old code until I was burnt out. The biggest problem was that I went in with little experience and had to make up for it later
&gt; To expand on your point on the painfulness, you can do anything in C# that you could in F# mmm... no
Only .net core, not .net framework, but if you are developing anything new you should target core anyway.
&gt; single table that had literally over 4000 columns. Lol. Was there a rational reason for this?
&gt;without worrying about MS licensing costs, since we're not going to be using Windows server hosts? IF by this you mean Azure then I would recommend at least pricing it for what you need. I'm not DevOps but I have worked with Linux centOs servers professionally and am reasonably anti MS, but Azure hosting is easy as can be, and if you have a bunch of people who are going to have fill in the gaps of a dept that basically refuse to do their job, it might help speed everything up, especially with dot net core. I have to use Azure at work, wasn't my 1st choice, but I can't complain.
Do a pilot project. See how much effort it requires. As an alternative to Java you may consider Kotlin which is JVM language that borrows a lot from C#.
What about "Module" or "Library" classes, instead of "God" classes . Is a design pattern in Object Oriented Languages ?
Unfortunately it's not a full terminal implementation, any application trying to use VT100 escape sequences for color or positioning will output garbage.
Is a JsonConverter the same approach to solve the problem where the below json strings cannot be deserialized into the Parent object? json 1 {"Parent": {"Child": {"Name" : "Tom"} } } json 2 {"Parent": {"Child":[ {"Name" : "Tom"}, {"Name" : "Lisa"}] } } Model: public class Parent { List&lt;Child&gt; Children { get; set; } } public class Child { public string Name { get; set; } }
Why should he learn functional programming only after knowing OOP?
I laughed way too hard at this while debugging a 20+ year old legacy application.
IL already supports global functions.
Ok, you saying that C is functional might have triggered me a tiny bit. C is not functional, it's imperative. Haskell is functional.
If you are not sure if the project will remain small never assume it will. Recently I had to make a Windows service very similar to one who was created without design paterns and poor object oriented design in general. I took the oportunity to redesign the architecture applying some well known patterns, even though this meant I couldn't reuse as much code, and it's surprising how many problems disappeared. On the other hand the old service now it's hard to refactor and most of the code can't be unit tested, which makes it harder. Applying the patterns early really hasn't been a lot of work and definitely easier than refactoring the existing service.
&gt;For example, to check whether a value in my CameraSpacePoints is infinity, I would like to use &gt;System.Single.IsNegativeInfinity(Value) I think ILGPU provides XMath for this sort of thing: https://github.com/m4rs-mt/ILGPU/blob/master/Src/ILGPU/XMath.cs
Before you rewrite apps for the reasons you mentioned, please read up on the cost of rewriting apps for the sake of rewriting them. [https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/](https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/) Adapting a new language for new projects is fine, rewriting projects because you don't like the language is a massive waste of time. Java doesn't have all the conveniences of .NET/C#, but it's not a bad language. I can't really think of any language that would be worthy of rewriting entire projects.
But but but ... It worked locally on my machine.
Hey thanks for sharing this. I made something similar to your project ([https://github.com/RobinKa/netprints](https://github.com/RobinKa/netprints)). Just like you I also had (and still have) the feeling that it gets more and more complex. Initially it was very simple and only supported static functions without type parameters. I added more and more features of C# to it but it feels like there are always missing features and it gets more and more complex so refactoring etc. was important. I haven't updated it in a few months but wanted to keep going since it seems useful to have a visual programming language that is as powerful as a "real" language. Perhaps you are up for collaborating?
In general, it's a code smell, more of an anti-pattern than a pattern. Some exceptions exist. The `System.Math` class is fine. So is `System.Convert`. The thing about code smells is not all strong smells are bad. When there is a smell, you need to ask if it's justified. In the cases above, the downsides usually associated with large classes are adequately addressed. If you and your team agree your class doesn't stink, and it's not causing you to fail to meet your obligations, then it doesn't matter what the internet thinks about it.
People tend to avoid it in new projects, so quite dead.
As somebody who is maintaining code from 2006 I can say it is a good reason to consider a rewrite. At that age the code will have had so many tweaks and changes that it is likely to be a maintenance nightmare. Unless you have had good practice in from the start, and has been followed pretty religiously it will be a mess. And I have yet to work anywhere that has managed to keep a codebase that old manageable.
The data access layer is probably the most important technical design decision you will make.
Sure I will most likely make it open source soon and people can contribute if they want, I will check out your project soon
Are you using edmx files, or are you doing code-first files? I find it a lot easier to work with code-first (even if the database already exists), edmx files are really frustrating to me. But I might be in the minority.
InstallShield is still available in Visual Studio. It's old but it does the job quickly and simply.
code first DB? Is the ID col on that table designated as an auto-incrementing field?
This is Code First, yes. And I guess I am not sure how to, or how to not set auto-increment in the field. When I set up the enums, I had them set to 0 - x depending how what is in the dropdown box
I didnt find any good documentation on XCB, whats the name of its dll, im really new to making a wrapper.
It looks like on the form you are sending the ID's but on the controller you are binding everything but the ID's, so you aren't binding anything.
Coming in .net 5 is interop with Java and Objective C on all platforms and Swift on select platforms. https://dev.to/turnerj/the-newly-announced-future-of-net-unifying-all-the-things-4nio
It's the unreachable eden
We use Azure DevOps for build and deployment and it's fine for our needs. What's better about octopus?
There was a reason, but certainly not a rational one. We allowed customers to store whatever data they wanted about these specific records, and instead of having a table with name-value pairs that could be tied to the records, or someone like that, the original developers used sparse columns. So every time a customer would add a piece of data that they wanted to track, the system would look to see if the column existed, and then create it if it didn't.
Do you have any examples of this switch statement? I'm interested because, there are quite performant policy-based alternatives too.
Make your key field an int, remember that enums are just lists of numbers, they should be stored as ints as well and you should set values on your enums so you dont confuse the multiple types. Also it would be a great idea to get the to tools and learn how to open and review your database directly as it is a big part of troubleshooting any issues you have.
I'm going to preface this by saying I'm not sure large switch statements are necessarily a problem (but I haven't seen your code so it may be more messy than I'm imagining). Have you considered using [system.web.routing](https://docs.microsoft.com/en-us/dotnet/api/system.web.routing?view=netframework-4.8)? It would probably take a lot of work, but done right you could essentially split your validation rules into 'controllers' (probably not actually the MVC Controller class but an equivalent type) and have the routing library do the work of looking up methods based on urls.
And it's full of extension methods for strings and ints, and, ... ;-)
Let me take a look at this, thank you for your help
If your problem space is solvable with regular expressions, you should probably use [System.Text.RegularExpressions](https://docs.microsoft.com/en-us/dotnet/api/system.text.regularexpressions.regex?view=netframework-4.8). Regular expressions aren't suited for all text processing tasks, but they're extremely general purpose and extremely common, so learning Regex-style text processing is a good investment.
In your mapping profile you can just do something like this: CreateMap&lt;ReqObj, ResObj&gt;() .ForMember(x =&gt; x.BillInfo, src =&gt; src.MapFrom(y =&gt; new BillInfo(y.billingAcct, billTypeCode )) &amp;#x200B; You just need to new up a BillInfo how you normally would. Via parameter body or a constructor or something.
One thing I'd suggest is that if it's not the **number** of cases in the switch statement, but the **length** of the code in the cases, you should be refactoring the logic in each case into a function, so the switch can be read on one screen without scrolling. Another thing to look for is duplicated code in each of the cases, like this: case 1: if(user.IsLoggedIn) { doSomething(); doSomethingElse(); else { redirect() } case 2: if (user.IsLoggedIn) { doTheOtherStuff(); else { redirect() } you should pull that if/else out before the switch. If it's truly the number of cases that is making it hard to read or not performant, I'd probably need to see the code to suggest anything else.
Reduce your font size. The switch statement is smaller. (I'm IT Manager now so I have to think this way)
I worked on a team where everything was object oriented design to the max. They considered switch statements to be a code smell. Even if statements to some extent. The standard approach to replacing a switch statement was to create a base class and derived classes for each case. Put the logic in an overwritten method. Basically, this is using method dispatching to decide what code to run.
Why not create a validation interface (IValidator) that has a single method "YourImprovemntSuggestionType Validate(YourObjectType objectToValidate)". You can then create a class for each type of validation case and implement the Validate() method in each to perform it's own unique validation. Then your main class will only need to create a collection of IValidator objects (or even better get them through a factory) and call Validate() on them all. This will keep the main class from ever needing major code changes (none at all if you use a factory) and you can very easily add new validations to the system. Hope this helps, if you would like to read up more on this type of pattern look up the state pattern.
WCF on .Net Core... Please, can we kill those old monsters? Next thing someone will cry to port Remoting to Core... We are trying everything to get rid of legacy stuff like wcf, winforms, activex and vb6 but it seems that in every team, company and community there is bunch of old farts that can't be bothered to learn something from this century. Do you still drive Model T?
I think others have described it here, but look up the Factory Method pattern. I think it's exactly what you need.
The ole "fuck it, we'll do it live" pattern. I know that one all too well.
&gt; Visual Studio licences VS Code is free and sufficient for business use. &gt; a licence for github Hosting private repos is actually pretty easy. &gt; build servers, a deploy pipeline, Ops people, Devs aren't cheap, etc etc. This can be done in very lightweight ways. If the product is big, it will automagically justify those extra costs anyway.
https://code.visualstudio.com/docs/getstarted/keybindings
Further to this, if you need the result of the operation, you can create an extra method e.g. bool CanValidate and then do a SingleOrDefault on the collection and throw an exception when more than one satisfies the condition.
UGGGHHH!
Wix for the installer.
I think EF for "large" projects (enterprise) is asking for trouble. Once you reach a certain point in scale or need something more complicated than a simple query or a single join, you are wading into territory where you absolutely should have explicit control over the SQL. I know some folks are SQL and [ADO.NET](https://ADO.NET) averse, but the time you spent spinning your wheels you could have typed out that really boring boiler plate code for a query that you fully understood. I can't speak for everyone, but I recall when EF first came out, it seemed to imply a utopia of having EF abstract away the SQL and never have to worry about what is going on in the database. That implied promise can only take you so far. The pitfall in this thinking is that EF is some kind of silver bullet. It will eventually reach a point where it will fail you even if you are wary of what is going on under the hood. There is really no substitute for a well designed database with proper constraints and indexing and carefully crafted queries. If you're using EF to avoid SQL as a principle (whether you can't be bothered to learn it or are averse to [ADO.NET](https://ADO.NET) boiler plate code), you're making a mistake. If you're using EF to generate small applications quickly, then it's going to help you rather hurt you. It's just not suitable in all situations and you have to ask yourself why you're using and what it gains you in the short and long term. My 2 cents. I know this probably won't help you, but I feel it needs to be said.
You can make use of pattern matching.
bro i cant access BillInfo directly its in Billrec, any idea how to access it inside billrec?
switch(instance) { case var age when (age &lt; 7): break; case var age when (age &gt;= 7): break; }
I'm a little confused I guess. Are you converting your JSON to a C# class, then trying to map that class to the other one. Or are you trying to map one JSON payload to another JSON payload without deserializing it first? Your example isn't very clear, can we see how you are mapping everything else right now?
The choice of ORM is just an implementation detail of the design, though. Can you explain exactly how picking, say, Dapper or even raw SQL over EF would impact the system design of a modern web application?
thanks bro for all your help, what am doing :- 1. create an object for the form body of the request of the api 2. create an object for the response of the api 3. map this request obj model to res obj model 4. why? so that i dont intialize some of the response obj model values its automatically gets values from the request object if any thing don't get it please tell me i can tell you more or show u the code , &amp;#x200B; also so sorry for the confusion am noob in c# and noob in english \^\^
I had issues back in the day when I didn't recompile the project when generating new migrations. I also ran into issues when working with another developer in another branch that also had migrations. Now that I understand the rules and know what it can and can't do, I don't see any other way to write code.
Most typical refactoring advice, [such as this](https://refactoring.guru/smells/switch-statements), will be along the lines of making it more object-oriented in an effort to completely eliminate the switch statements, like the aforementioned command pattern. The most recent features regarding switch statements are pattern matching and [switch expressions](https://devblogs.microsoft.com/dotnet/do-more-with-patterns-in-c-8-0/) (in C# 8).
What kind of privacy and security restrictions do you have?
Internal or external? Inside the app I haven't set up any sort of security yet. I'm mostly creating a proof of concept at the moment. Externally, we have firewall restrictions and AV restrictions. However, we can make necessary modifications where needed. While just using the Named Pipe Streams, I haven't hit any issues.
screw all that, use reflection to convert Ienumerable&lt;T&gt; to datatable. Then use a simple orm to insert. public static DataTable CreateDataTable&lt;T&gt;(this IEnumerable&lt;T&gt; items) where T : class { var type = typeof(T); var properties = type.GetProperties(); var dataTable = new DataTable(); var columns = properties .Select(y =&gt; new DataColumn(y.Name, Nullable.GetUnderlyingType(y.PropertyType) ?? y.PropertyType)) .ToArray(); dataTable.Columns.AddRange(columns); foreach (var entity in items) { var values = new object[properties.Length]; for (var i = 0; i &lt; properties.Length; i++) { values[i] = properties[i].GetValue(entity); } dataTable.Rows.Add(values); } return dataTable; }
Take a look at [https://github.com/qmfrederik/remoteviewing](https://github.com/qmfrederik/remoteviewing) I haven't used it myself but I'd love to know where you end up.
Yes I know of RegEx and have used it in the past for different applications. However in this case I feel that that RegEx required would be a little extensive and I don't necessarily want to make some conglomeration of a RegEx statement and never be able to maintain it moving forward with new features.
I think he meant security requirements around this project specifically — like, he may be able to provide a solution but it may not be a very secure solution. I don’t know what the answer is to your problem but I saved the thread to follow along! I’ll do some research on my own and see if I can come up with anything.
Oh, quite right. Since the workstations won't have Internet access, we don't need much security. Privacy isn't a concern. But we don't want the listening port to be a security error. While I've been waiting for replies, I've been coding away. as /u/JarrettV pointed out, remoteviewing is available. I copied their example client/server and got it to run. It only used 4% cpu usage, so it's good in that regard. Secondly, VNC has it's own built in authentication system, so that might be useful as well. Since I have a client/server working, I'm going to attempt to somehow bake it into the mix.
This is a good answer my friend, we recently used ef core on a few new projects and afterwards I started to ask what are we actually using it for. The migrations are a pain to run in a ci/cd environment so we switched over to fluentmigrations. Now the initial db scripts and migrations are handled by a another library. I'm basically using it to map SQL data to objects, will seriously consider switch to something like dapper
We're just a few more layers of indirection away from a maintainable system, I swear.
Theres nothing wrong with one class being collection of methods only, especially for absolute beginners since to understand the core concepts of OOP takes time. However, it is indeed a bad practice in general, since what you are doing isnt really OOP at all, but procedural programming in disguise. In the early stage it is fine to experiment and learn the syntax of an OO language this way, but at some point you will have to get rid of this habit. Procedural Programming is for amateurs, its good and only good for absolute beginners to learn basic programming concepts. In a perfect script/program, everything is an object. You cant be perfect, but you can approach as close as you can.
that seems a very taxing way of doing it
I have not used this before for replacing switch statements but I was building some automation software and dealing with a shit ton of ifs. It was messy, hard to read, and hard to maintain. I found this design patterns called Rules Design Pattern and it greatly helped me with testing and maintainability. Check it out: https://www.codeproject.com/Articles/1065902/Rules-Design-Pattern-in-Automation-Testing
VLC does have the ability to capture and steam the desktop (no audio though). However it wouldn't be my first choice for a remote viewing protocol, something like VNC would indeed be a better tool for the job.
Extract each block of code that handles a case into a function, and create a dictionary that has the cases as keys and the corresponding functions as values.
I’d be wary of the people just tossing around “containers containers containers”. It might be out of scope/way overkill if you’re just trying to distribute an exe.
Who uses Windows Phone?
if your looking for something powerful use Antlr, https://www.antlr.org/ it has multiple runtimes for alot of different languages. Im currently using it as my parser for a compiler im writing. Its used all over the industry (I know twitter for sure relies on it heavily) and has good support and documentation.
WTF... surely a strategy pattern would be better and still "OO"?
Hey, my twin! I sure do like my C# 2.0 no-Linq and ADO.NET filled legacy app!
Cheers for this advise, I feel like this is the answer I was looking for. I've been spending ages trying to do this properly and I feel like I should just get the task done so I can continue learning. I'm currently a software engineer so I'm spending my spare time learning programming so that I'll be more useful. I was thinking of getting some books like clean code etc, do you think that it'd be good to read through that as well as my C# book at the same time?
In my research I had seen it. I don't know much about it but I will look into it. I thought this new Library SuperPower was there to make Antlr easier and more powerful. Thanks gives me another branch to explore.
if/else if
No audio was needed. It was basically just going to be used as a verification tool.
It might be the case that powerpoint restricts non-addin registration of those events. You may need to create an add-in that forwards the events.
Can you elaborate more on your last project for me? I'm currently using dapper and just have a basic repository layer that wraps my sql statements. I thought I wanted to try out EF before finding this thread. What you describe sounds like a middle ground between how I am doing things and how EF is but I'm not sure I understand how you are doing it / what you mean? Or am I misunderstanding?
Thank you very much. I will also look for other ways. Im guessing videos, online tutorials, and books should do the trick
Just bought the EBook. Hopefully its a move in the right direction. If not I can always fall back on one of these other libraries if I need to.
Dad joke meets IT joke. Highly underrated.
😱
&gt; Dispatching using a dictionary or the command pattern seem like popular solutions That's fine for a flat decision tree, but that's not how you describe your situation. &gt; It provides validation for all sessions related to our API. The extension has what are effectively nested switch statements for matching different URLs and other criteria, and then provides suggestions I might build it like a state machine, a directed acyclic graph leading to a terminal state. I imagine you'd have a few main types of decision checks (match host, match path part, etc.) that could be parameterized and implemented as classes.
Dictionary of lambdas
Why would you skip any entries? Just take myArray.Min().
I need it to avoid values under any values less than 1. I should've pointed that out. My bad
You could also do this in just one iteration over the array with a loop. int minimum = int.MaxValue; foreach(int i in myArray) { if(i &lt; 1) continue; if(i &lt; minimum) minimum = i; }
int minVal = array.Where(x =&gt; 1).Min();
Just don't give up if it all seems daunting at first. Remember that people spend years and even decades mastering programming. Practice and study, always focusing on what you feel you lack to reach the next step of proficiency.
Then you should be able to accomplish what you want by opening the "screen://" URL in libvlc. See: https://stackoverflow.com/questions/16186401/libvlc-stream-part-of-screen
Try to get the streaming working in the vlc program first to make sure it is doing what you.want. If that works you can implement it with libvlc.
The strategy pattern
Try c++ heavy on the 3rd party controls from companies that have since gone out of business 😕 I finally got a new project using honest to God 21st century coding!
I drive what customers are willing to pay for.
Strategy pattern + abstract factory is a good option and it works since like 80s
GridView1.GridView2.Button.IsEnabled ?
&gt; VS Code is free and sufficient for business use. Disagree. Might be technically true but not true in practice. It will damage the productivity of 90% of .NET devs you can hire.
Anyone care to explain the downvotes? I've used this to great effect if there are more than a few case statements and each case statement is very long. Switch statements are effectively reduced to: Thing thing = ThingFactory.create(case); String thingName = thing.do(); And then the interface and implementing classes look like: interface IThing { void do(); } public class AThing : Thing { public String do() { return "A"; } } public class BThing : Thing { public String do() { return "B"; } } and the factory looks like: public class ThingFactory { Dictionary&lt;String, Thing&gt; map = new Dictionary&lt;String, Thing&gt;(); public ThingFactory() { map.Add('case1', new ThingA()); map.Add('case2', new ThingB()); //add any number of cases here } public Thing create(String case) { Thing result; if(dict.TryGetValue(case, out result)) { return result; } // you can return a default Thing here if need be; return null; } } &amp;#x200B; It's much more scalable to add a class that is separately unit-testable than adding another case statement or a method that is called in the case statement. This blows up the number of lines in the class. I've refactored multiple thousand line files this way. This is all situational though. For 5 short cases, it might not be worth it. For 25, it is super helpful.
I did see that. You’ll have to forgive me, but it’s not a part of the libvlcsharp wrapper. At least I didn’t see it. If I’m right that it’s not, would that mess with any of the objects that I have made with the wrapper?
I am so blind...Thank you. If you allow, just one more question : `public struct My_CameraSpacePoints` `{` `public static CameraSpacePoint[] my_pos_values;` `public My_CameraSpacePoints(CameraSpacePoint[] Pos_values)` `{` `if (!(Pos_values is null))` `{` `my_pos_values = new CameraSpacePoint[Pos_values.Length];` `Pos_values.CopyTo(my_pos_values.ToArray(), 0);` `}` `else` `{` `my_pos_values = new CameraSpacePoint[0];` `}` `}` `}` As you told me, I defined a struct `My_CameraSpacePoints` that includes a reference to the array I want `CameraSpacePoint[] Pos_values.` Somehow the very first frame of kinect is always null, so `my_pos_values` is defined as `my_pos_values = new CameraSpacePoint[0];` Then at this line `kernel = gpu.LoadAutoGroupedStreamKernel&lt;Index,int, My_CameraSpacePoints, ArrayView&lt;int&gt;&gt;(TO_GPU);` an unhandled exception occurres : &amp;#x200B; *Cannot load from the static field 'Microsoft.Kinect.CameraSpacePoint\[\] my\_pos\_values' since it is not read only*
&gt; and never have to worry about what is going on in the database. Well, of course you have to be mindful of your code, no matter if you are writing SQL, LINQ, or pig latin. EF is not a free pass for being lazy even though it saves you a lot of work. &gt; It will eventually reach a point where it will fail you even if you are wary of what is going on under the hood. That is simply not true if you are even remotely trying to write a SOLID n-tier app. I am currently working on an app with ~1400 tables. EF works great! &gt; There is really no substitute for a well designed database with proper constraints and indexing and carefully crafted queries. Of course - that is a different issue. &gt; If you're using EF to avoid SQL as a principle (whether you can't be bothered to learn it or are averse to ADO.NET boiler plate code), you're making a mistake. With all respect for the points you have made, I believe this advice to be the exact opposite of what should be done. The larger your app, the more you want to move your business logic into managed code where it is strongly typed and can be refactored and reused. This is the major selling point of EF!
I like this idea, i did run into an issue though. How do you save the value outside of the for loop? I'm not calling on it from another method.
Wait.... I could just create another method with this strictly in it.... I'm dumb.... you rock... thank you!!
It is true in practice. I use it at work. Anything else you would like to be wrong about?
can you post code?
I'm not sure what you mean... what's not part of the wrapper?
 foreach (XmlNode n in root.SelectNodes("//*")) { if (n is XmlElement e) { e.SetAttribute("id", $"{i++}"); } } Your selector is wrong, if you want *every* element (and there are no 'ExtractionWorkBookInfo' elements), select //*. To add or set an attribute on an XmlElement, use SetAttribute. To check that the node is an element, you can use the `is` operator.
I see! Thank you for rephrasing. Let's give this a try...
There are several different variables, not just one. :(
Personally I would just write some code to do that. I wouldn't try and hack AutoMapper into doing it.
Even Jimmy Boghart (the creator of automapper) suggests this for complex mappings.
I was able to display my own screen. Just a tip for everyone else: Don't leave the window settings to "Fullscreen". You'll probably be confused that it actually is working and you're looking at a stream of your desktop. Now to get the network stream up. Almost there!
Folks on coding forums being rude for no reason
You have something to add?
This is a corporate environment and the software is strictly limited to internal employees. Two are CLI and one is a GUI that supplements, or more specifically, "configures" the CLI apps. The CLI apps are to be used as scheduled tasks, running automatically at any given time of day that's specified by the end user.
I'm an IT Analyst, and that joke wins the internet.
Explain.
Do min then max.
My brain just exploded.
Look up the Replace Conditional With Polymorphism refactoring.
I have 5 elements in my array, each of them is a different variable.
Yeah well he would wouldn't he. I personally don't like it. I feel it's starts to become just as complicated as just doing it manually. And if those models change it can be a nightmare.
Is this wpf or winforms?
It is not true in practice because if I use it at work I will be at 50% productivity. It doesn't matter if some developers do not lose productivity it matters if any developers will lose productivity
This doesn't make sense. Post the code where you create the array and add variables to it please
I feel like you might not understand what where(x=&gt;x&gt;1) is doing. In English this means filter down the array to all elements that are greater than 1. In more technical terms it passes each element in the array into the lambda function x&gt;1 and returns each element that evaluated to true in a new array
I consider the system design to include the software architecture, maybe you don't. The problem I and a lot of other people have with ORMs is that it tightly couples your persistence layer with your code. This is great for small apps, especially starting out, but as the software gets older, more complex, and experiences more entropy, it starts to get in your way in the worst ways. With this tight coupling you lose a lot of control, and as a system ages and databases start to experience performance problems due to scale, control is what you need. From a system design perspective, the choice to not use an ORM helps mitigate coupling and makes things like query tuning easier. It leaves the door open to more easily migrate parts of the persistence layer to other data stores. It may seem like a trivial implementation detail starting out but it becomes a big deal later.
OK. Please tell me what these features are that dictate so much of your productivity. What domain do you work in? I'm genuinely curious. I can certainly believe that specific use cases lean heavily on advanced VS features, but you threw the 90% figure out there. VS Code has plenty of tools.
Only that given the choice i'd prefer Visual Studio or Rider over VScode for full time back end work
I have full VS available to me and still prefer VS Code most of the time. What features exclusive to VS do you depend on day to day?
Everything left of the assignment operator is only the description of the identifier (variable), not the data in memory. The variable is the developer's interface to access this part of memory. Ignoring implicit operators here, by making the variable a baseclass type you're simply giving yourself a constrained access to that part of memory, it doesn't change the data in memory.
tl;dr make it public readonly instead of public static, you'll still be able to change the contents of the array. So defining my_pos_values as static means that it's shared between every instance of My_CameraSpacePoints, and it gets reinitialized every time you construct a new My_CameraSpacePoints (meaning old My_CameraSpacePoints instances will have their my_pos_values changed to match the new instance whenever you make a new one). Unless you know for sure that's the behavior you want (seems unlikely on a struct), you should change it from public static to public readonly. Readonly on a collection type (like Array) means you can alter the elements in the collection, but you can't change the reference to point to an entirely different collection, you can only assign to it in the constructor. It seems likely that the readonly requirement has something to do with ensuring references remain synchronized between the cpu and gpu but I haven't done much work with GPUs and that's speculation on my part.
Thank you for the explanation. I was guessing this is what it did, but you confirmed it. I really appreciate it. So after updating the code, this did not work. I have an error say the sequence contains no elements.
What happens when you step through it in the debugger? Is your code even being called?
If I DM'ed you a picture of the code, would you mind taking a look at it? That would be incredibly kind of you.
Have you tried coding standing up?
&gt; Published on Feb 24, 2016 A few people still, at the time
Please post your code.
OOD is a Golden hammer.
DataTable is good for table valued parameters on SQL (note you need a user defined table type), but that’s not what’s happening here. I have to think a TVP is faster.
 public static void HandleConsWords(string word) { int wordLength = word.Length; int Avowel = word.IndexOf('a'); int Evowel = word.IndexOf('e'); int Ivowel = word.IndexOf('i'); int Ovowel = word.IndexOf('o'); int Uvowel = word.IndexOf('u'); int[] vowelPlaceArray = {Avowel, Evowel, Ivowel, Ovowel, Uvowel}; int minVal = vowelPlaceArray.Where(x =&gt; x&lt;1).Min(); Console.WriteLine(minVal); string consonantCluster = word.Substring(1, minVal); string letterFollowing1stVowel = word.Substring(minVal, wordLength); Console.WriteLine($"{letterFollowing1stVowel}" + $"-{consonantCluster}ay"); }
Just posted it in another comment.
&amp;#x200B; `&lt;asp:UpdatePanel ID="hiddenValuesPanel" runat="server" UpdateMode="Conditional"&gt;` `&lt;ContentTemplate&gt;` `&lt;div class="table-wrapper"&gt;` `/* GRID1 */` `&lt;asp:GridView ID="gvMiCartera" runat="server"/&gt;` `&lt;RowStyle CssClass="RowStyle"/&gt;` `&lt;AlternatingRowStyle CssClass="AlterRowStyle" /&gt;` `&lt;PagerSettings Position="Bottom" PageButtonCount="8" /&gt;` `&lt;PagerStyle CssClass="PagerStyle" HorizontalAlign="Center" VerticalAlign="Middle" /&gt;` `&lt;Columns&gt;` `&lt;asp:TemplateField ItemStyle-Width="1px"&gt;` `&lt;ItemTemplate&gt;` `&lt;span id="collapserows" class="row-collapser"&gt;&lt;i class="icon-add-circle"&gt;&lt;/i&gt;&lt;i class="icon-remove-circle"&gt;&lt;/i&gt;&lt;/span&gt;` `&lt;asp:Panel ID="pnlOrders" runat="server" Style="display: none"&gt;` `/* GRID2 */` `&lt;asp:GridView ID="gvOrders" runat="server"&gt;` `&lt;Columns&gt;` `&lt;asp:TemplateField HeaderText="Pagar" ItemStyle-CssClass="chkpago-item"&gt;` `&lt;ItemTemplate&gt;` `&lt;asp:CheckBox ID="chkSeleccion" runat="server" OnCheckedChanged="chkSeleccion_CheckedChanged1" AutoPostBack="true"/&gt;` `&lt;/ItemTemplate&gt;` `&lt;FooterTemplate&gt;` `/* How i can enable this button when the check box is checked */` `&lt;asp:Button ID="btnPagarPolizas" runat="server" ControlStyle-CssClass="btn btn-default btn-xs misClientesPagar" Text="Pagar" Enabled=false OnClick="btnPagarPolizas_Click"/&gt;` `&lt;/FooterTemplate&gt;` `&lt;/asp:TemplateField&gt;` `&lt;/Columns&gt;` `&lt;FooterStyle CssClass="FooterStyle"/&gt;` `&lt;/asp:GridView&gt;` `&lt;/asp:Panel&gt;` `&lt;/ItemTemplate&gt;` `&lt;/asp:TemplateField&gt;` `/* Fields for grid 1*/` `&lt;/Columns&gt;` `&lt;FooterStyle CssClass="FooterStyle" /&gt;` `&lt;/asp:GridView&gt;` `&lt;/div&gt;` `&lt;/ContentTemplate&gt;` `&lt;/asp:UpdatePanel&gt;`
Webforms. You can help me with the code above Thanks?
No :/
So to add to this, my minVal variable is NOT ignoring the -1's that are being sent to the array.
I think min will fail on an empty collection. There's nothing for it to return.
The 90% figure is based on the fact that pretty much every .NET dev has a lot of experience with VS. I know a bunch of shortcuts and where a bunch of things are in the menus. I spent years learning these. Now as to specific features I might be wrong because I have not spent much time with VSC but I am a heavy user of the debugger complete with conditional breakpoints, immediate window and watch window. Are these things available in VSC?
Does the class implement the interface?
&gt; Are these things available in VSC? Yes. Those are the exact things I was going to mention in terms of covering "99% of needs", too. VS Code has those features. Speaking of which, it's nice having those features in Linux finally.
&gt; I consider the system design to include the software architecture, maybe you don't. Huh? Aren't architecture and design talking about the same thing in software? I'm asking you how, specifically, you think the choice of ORM impacts the architecture. Like a concrete example of application structure and how it would change. Use a simple Todo list app or whatever. &gt; The problem I and a lot of other people have with ORMs is that it tightly couples your persistence layer with your code. No it doesn't. By the time the data hits the domain later it should have no idea where it came from. Your data access layer should depend on your domain layer and implement the data access interfaces defined there. Then your domain can't possibly be couple to your data access. Again, can you show a concrete example of what you're claiming?
read up on the docs: https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.process.start?view=netframework-4.8
so here it is updated, now my issue is in the line string letterFollowing1stVowel = word.Substring(minVal, wordLength);
the error: System.ArgumentOutOfRangeException: 'Index and length must refer to a location within the string. Parameter name: length' &amp;#x200B; \- So with words like "dog" the program runs fine, but with words like "bread" it throws the error.
Do you intend to ignore the first value if its the first character in the string?
If it's more then one value, then just replace .Min() with .ToArray(), example: var numbers = new int[] { -1,-2,-3,-4,1,2,3,4,5,6 }; var result = numbers.Where(x =&gt; x &gt; 1).ToArray(); Console.WriteLine(string.Join(",", result)); Should produce: 2,3,4,5,6
index starts at 0, length counts the first letter as 1, so your upper bound for the array is length-1
substring's second argument is length, the count of characters after the starting point to add, so minval + length is going to be out of bounds &amp;#x200B; make your second argument for the substring wordlenth - minval
You would be correct. It's an English to piglatin converter
dude, if you want help from people that are giving you their free time, cater to them. paste your code, indented in a comment where there is context for it.
Thanks for your input.
That worked! I didnt realize that's how sub string worked! Thanks!
You can also just pass it one argument, the start index, and it will go to the end.
Maybe someday you'll get the chance to work on a complex enough system to figure it out on your own.
Oh crap, I defaulted to a wpf mindset. My apologies
Not to be rude but I can't figure out if you're stupid or trolling. &gt; Like a concrete example of application structure and how it would change It would use an ORM, instead of not not using an ORM. Pretty big architectural change. &gt; Then your domain can't possibly be coupled to your data access. How do you consider this decoupled when changing domain objects require a database migration? Have you honestly never worked with a system where the application domain and database schema weren't 1:1?
Man... I know it is a demo but please consider putting in the "using { ... }" block to establish a proper code etiquette
 ? , crazy 5 e
That's really cool man
Lasagna code is the new spaghetti.
Yeah, this is the Uncle Bob way of doing things - if you have to use a switch, do it exactly once when you assign the object a type. Then every object just implements whatever functionality you switched into previously.
We'll solve it with microservices.
You have to, even if the solution is something dumb that you missed. There's nothing more frustrating than searching for ages and finally finding a thread that matches everything you need and the op's like "solved it k thanx bye" without sharing, drives me nuts
If I remember correctly, the picker object has a method to get a stream from the chosen file. Are you using that, or are you taking the name given to you and opening it by hand?
It's open source so you can just get the Java or .Net libraries and see what you can do.
I love it and have used it for many projects. But it is just a tool and doesn’t fit every situation.
FileName = "javaw" needs to be the complete path to the file AND the name. So it should be FileName = "C:\[PathsToFile]\[FileName].exe”. Hope this helps!
Are you trying to open after you've restarted the app and without using the file picker? Because you need to add the file to the `StorageApplicationPermissions.FutureAccessList`. Can you also post the code you have after you select the file?
Sure, the principle is the same. `JsonConverter` receives raw JSON tokens and returns an object, so it can deserialize whatever you want it to. Here's a simple implementation that serializes either an array or a single value into a `List&lt;T&gt;`: public class SingleOrMultipleValueConverter&lt;T&gt; : JsonConverter { public override bool CanRead =&gt; true; public override bool CanWrite =&gt; false; public override bool CanConvert(Type objectType) =&gt; false; public override void WriteJson(JsonWriter writer, object value, JsonSerializer serializer) =&gt; throw new NotSupportedException(); public override object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer) { switch (reader.TokenType) { case JsonToken.StartArray: return serializer.Deserialize&lt;List&lt;T&gt;&gt;(reader); default: return new List&lt;T&gt;(1) { serializer.Deserialize&lt;T&gt;(reader) }; } } } Usage: public class Parent { [JsonProperty("Child"), JsonConverter(typeof(SingleOrMultipleValueConverter&lt;Child&gt;))] public List&lt;Child&gt; Children { get; set; } }
Not sure. It may have to do with C# being a multi-paradigm language, so you have people of different mind-sets who use the language in very different ways. Superficially that could be 'I dont understand the value of your approach.' or 'I do it differently and my way is better.' People talk about 'code smells' but they do that in context of a particular paradigm. In fact the notion of a code smell is inherent to framing the code in terms of a paradigm its declared to fit into. But there are a vast number of different coding paradigms, which to me indicates that the smell is not just in actual 'bad code' but in personal attitudes to how things should be shaped in the problem/solution domain.
Well there you go, it is already supported.
Take the time to learn how to properly architect software in general. Learning C# rules and syntax is cool and all but once you have a firm grasp of software design principles, design patterns and general coding paradigms you'll create better, more efficient, more maintainable software and you'll be able to pick up other languages fairly easily.
So, do you mean buy a computer science textbook?
Maybe. Or read online and practice. It all depends on what type of developer you want to be. I have for example seen many excellent web developers that cannot tell me what a prime number is. Basic math theory is essential for certain types of programming (games, AI, data analytics etc) but it isn't a hard requirement for building most web apps. If you want to be versatile I'd suggest you spend time learning these things. Math theory, how memory works, concurrency and parallelism etc. These concepts will help you tremendously no matter which language you choose to use. Think of it like story writing. Writing a great story is language agnostic. Whether you write it in French, English or Spanish, knowing how to structure the essay, knowing how to appeal to emotion, knowing when and how to introduce characters etc are critical. That may be an oversimplified analogy but it works.
Assuming Windows 10, [DXGI Desktop Duplication](https://docs.microsoft.com/en-us/windows/win32/direct3ddxgi/desktop-dup-api) is an option. It's all accessible in C# via [SharpDX](http://sharpdx.org/). I've managed to capture 3440x1440@75fps pretty reliably (though that's on an Nvidia 2080 TI). Even pulling the frames off the video card to a Bitmap and piping them to ffmpeg to create video works pretty well (though not at 75fps). I haven't gotten to the point of optimizing it much yet. I'll be aiming at nvenc and seeing if I can get that going from C# but you could look into Intel Quick Sync ([ffmpeg acceleration](https://trac.ffmpeg.org/wiki/HWAccelIntro) and [VAAPI](https://trac.ffmpeg.org/wiki/Hardware/VAAPI)) for similar acceleration. For the SharpDX stuff, you'll at least need the DXGI, Direct3D9 and Direct2D1 nuget packages (I have D3D10, 11 and 12 too but I'm not sure if they're needed for all cases). Good luck!
&gt; Then you would be enjoying maintenance contracts for Java 6 deployments instead of all language and VM improvements of the last 10 years. Thanks, that's more or less what I work with. Except the vast majority of our applications are on Java 1.4 &gt; Where is Microsoft's contribution to cross platform GUI, WCF on .NET Core, EF6 visual designer, F# VS tooling on par with C#, VB.NET and C++ .NET/UWP dialects? Really? Likely on its way. Don't forget that Java is 23 years old. .NET Core is 3 years old. They're still implementing all the basics. On the other hand, where are any of these equivalents from Oracle? Does Oracle develop a functional-oriented version of Java? No, we have Kotlin which is by Jetbrains. Where is *any* sort of language tooling, much less IDE that's provided by Oracle? Zilch. It doesn't exist.
Cool, thanks!
Cool, thanks!
Those AI related ones look way harder than the simpler concepts (depending on how far you take the idea). You've kinda got a list with apps that are a 3 difficulty and others that are a 9
IIRC you need to give permissions to your app to be able to open a specific file... forget exactly what needs to be done though, check here: https://docs.microsoft.com/en-us/windows/uwp/files/file-access-permissions#accessing-additional-locations
To elaborate on this, Automapper is designed for flattening. As in, from larger, rich object =&gt; simple, dumb, DTO subset. Part of this is that the DTO fields should match pretty well with the source- as in, you don’t need to use ForMember much. If you need to use ForMember for most of your fields, Automapper is not buying you anything except unnecessary complexity. Automapper is great though if your architecture matches the tool’s designed use.
I was just going to suggest collaboration. It might just motivate you.
Xmltolinq or xslt are both better suited to this requirement than loops.
It's true that rewrites need to be done with extreme care, but Joel is not a good source of opinions for a lot of things.
&gt; C# is good, but is it really that good? Compared to Java? Absolutely.
.NET Framework is open source.
Some of your options seem a little overdone. I think people are sick of social media and trending news. I feel like I see a million different template for those type of projects a day. It would most likely be difficult for you guys to come up with your own flavor considering everyone under the sun has been done in that realm of app development. But the Music streaming/downloading, Medical bot and Interior design app seem like absolutely brilliant ideas! Are any of you knowledgeable in Deep learning/Machine Learning or Python?
We were all like that when we first got started, beginners want to see a few lines of code that works immediately on screen/browser, rather than class design diagrams that you cant see how it works in action. Procedural programming is easier for prototyping and kickstarting. At some point however, you will be writing more complex programs, and this is when you will see the benefits of OOP. The power of OOP lies in the OOD(design), it has a lot to do with organizing your application. You need to understand the problem you are trying to solve, and try to model it with objects interacting with each other. The ability to identify objects in your system is important, and will take time to get used to. If you come from a procedural background, it wont hurt to start with just collection of static methods in a class. You can then go back to modify this class and refactor your code. Do you find some of these methods logically related to each other? Then move out the unrelated methods to another class, and keep the related methods only. This way your class become smaller and more compact, it will be easier to design and maintain. Do they frequently make use of the same one or set of parameters? At this point you will begin moving these common parameters into class instance fields, and they will be passed to the class constructor. Then change your static methods to instance methods, remove the common parameters from your method signature, and replace them by instance fields. Bingo, you now have an actual class done in OOP. Do this a few times and eventually, you will be able to design your classes before you write them out, and you will make another push to the transition of OO thinking. The best you can do is to practice, and with time you will come to understand why there are such things called 'best practices for class design'.
What is cloud presentation?
Take your time to really understand the basics. For instance, learn how to decide among seemingly identical methods to accomplish a task. Once you have an expert level of understanding, like how things are stored in memory, which operations are faster at performing which tasks, etc.. It will save you a lot of headache in the future when learning new concepts. Also, don't underestimate design patterns and architecture. When I first started programming, I never understood why more experienced developers would always take some seemingly overly complicated and abstract way to accomplish something simple. You will eventually learn how important good architecture is just as important as it is to just making it functional and efficient.
Seconding what /u/SamuelFolks said, I'd definitely focus on design patterns and striving for elegance. Obviously the further along you get, you'll pick up your own style and it all becomes less about syntax and more about engineering/architecture and overall design. It probably isn't the BEST "for dummies" reference, but I found [https://sourcemaking.com/](https://sourcemaking.com/) to be a good place to go to when I need to look something up regarding a design pattern. But the author does a good job IMO of breaking things down into concepts that are good for beginners IMO. His books are not that expensive too. His most recent one talks about design patterns and SOLID which I highly recommend. Again, YMMV, but I think its a decent place to start.
Definitely can agree on the thing about not understanding that stuff at first. But eventually a light bulb goes off and you realize how much generics, interfaces, composition and all that other stuff can be your best friends at making things more maintainable and overall more robust.
As long as you use the file or folder picker you will have permissions for the files/folders that the user picks.
:)
I wanna know too
"Use a Factory" is, without elaboration, so vague an answer as to be a non sequitur. It's a little like answering a request for an alternate means of commuting to work with "you should use a road!"
https://www.youtube.com/playlist?list=PLLWMQd6PeGY3ob0Ga6vn1czFZfW6e-FLr I would absolutely recommend watching this series by Tim Corey (IamTimCorey)
The array is initialized with all zeros, and double incrementing i within the loop and in the `for` statement is skipping every other value
Text book example of where to use the strategy pattern: https://www.tutorialspoint.com/design_pattern/strategy_pattern Refactor logic inside switch statement to be separate concrete classes that inherit from the same interface, as shown in example above. E.g everything inside your switch statement would move inside the `doOperation()` call.
So we'll have ravioli code instead?
Want to call out testing and releasing software as critical to understanding as well. Building testable stuff that can be safely deployed is so much more valuable than knowing an optimal solution to the knapsack problem.
Welp, now you've gone inspired me to write a novel...
Ah, that makes sense. Thank you for such a fast response on such a trivial question.
Thanks!
It's also important to note that items\[i\] = i++; is the same as items\[i\] = i; i = i + 1; The increment of i happens after the value of i is captured in both the array index and value assignment.
Great answer, I believe people really should focus more on the basics instead of just learning "the next hot language/framework/library", in the end, it's all about the 0 and 1. To OP people on github does an Amazing thing called "awesome type_what_you_want" like if you wanna stuff about CS (Computer Science) "awesome CS" will give you this link: https://github.com/ossu/computer-science/blob/dev/README.md Awesome Math this one: https://github.com/rossant/awesome-math/blob/master/README.md Awesome .NET: https://github.com/quozd/awesome-dotnet/blob/master/README.md After learning this just realized how great open source is. Hope you enjoy 😉
Ehh. Yes it is. See here https://dotnetfiddle.net/ZrHo5q For the word "hello" it prints out 1. So it's definitely filtering out the -1s
You need to start learning to *read the documentation* on these things. Min, where, substring etc. Then you will know how they work.
Find someone who can give you feedback on the code you write. (I'm happy to volunteer!) Try to build a series of more and more complex programs to solve specific problems, or to entertain yourself. (For example, write a console app that reads through some files and does some simple data analysis, then something harder like a console app that lets you play checkers or chess, then maybe something that stores things in a database, then a web service, then a website that uses the web service...) Make sure you spend a little bit of time every day coding. Getting a familiarity with and understanding of the syntax is the most important thing to start. Once you have that, you can learn more in depth about architecture and algorithms and ither advanced topics.
Coding is 10% happy path and remaining is how best to handle error scenarios. Anyone code for happy path!!
 Brilliant. Thanks.
Bonus tip. Instead of i&lt; 10 try i&lt; myArray.length. it's a good habit to be in for dealing with arrays
This. Simple crud apps on one side, 3d rendering, machine learning etc. on the other side. I would say build a simple idea well and if it ultimately too easy, you can add more functionality to enrich it. Otherwise you end up with a hotdog and not hotdog situation.
Some awesome responses here so don't wanna Me Too, but if I could recommend _anything_ in this space it would be to read "Headfirst: Design Patterns" and "Dependency Injection in .net". Both of these books are massive enablers for folks wanting to get "serious" in .net, and I've seen many grads and career changers use them to elevate their learning super quickly :)
You can also put the project "on hold" until you are excited to work on it again. Forcing yourself you to keep working on it will lead you to hate the project, so pause before it gets that far!
In my opinion, arrays are a bit of a legacy concept and you should use List instead.
Hey, I'd encourage you not to fall into the trap of "I'll open source it when..." because for many projects that day never happens. It only takes a few minutes to push the code to GitHub with a license. Cleaning up code can happen before you announce the project on Twitter/Reddit :) Nowadays I default to starting new projects in a public repo so I never have to worry about when to open source it.
&gt; I have full VS available to me and still prefer VS Code most of the time And therefor anyone else who has a different preference is wrong and needs to be beaten down? Shit like that is why the internet sucks.
I think you misunderstood... the creator suggests hand-rolling the mapping in cases like this rather than using automapper.
However, OP is still learning the language and will encounter arrays in practically every application they ever work on, so it's important to understand the fundamentals. There are circumstances where arrays will provide better performance than lists (and vice versa) so it's more of a "pick right tool for the job" on my view, that is if you are handling a lot of data and want optimized code.
Using Regions also fixes horrible code.
Nothing happens. FileName = @"C:\\Program Files\\Java\\jre1.8.0\_221\\bin\\javaw.exe",
Post it on this subreddit if it's C#! Write a blogpost about an interesting part of the implementation and post that around on Twitter/Reddit. These things take time to gain momentum. There's no guarantee of success. Success itself is also not entirely related to the quality of the repo itself; there's quite a bit of luck involved. Most importantly just keep writing code. GitHub stars aren't everyhing.
Ah my bad. Yeah completely agree.
A comment I wrote for someone else which might be useful for you too - https://www.reddit.com/r/csharp/comments/cd8yg3/fresh_graduate_but_cant_code_applied_for_a/etsl5d1/
I haven't done webforms in a very long time sorry. Best of luck with getting an answer.
Nice. Thanks heaps for that
Awesome. Thanks so much
Cheers. Glad to be here. Thanks
All good my friend, holler if you want any other guidance!
Which repository is that?
Lovely. Very kind. I just might take you up on that. Cheers
Awesome. Have saved to a new coding bookmarks folder. Cheers
Thanks so much to all your great comments. Very much appreciated. Great to know there is a friendly community. Cheers :)
No. If you have a fixed size it will almost always be better to use an array. A list just wraps an array essentially. And dynamically resizes it when full, this adds overhead.
It's also the same as: items[i] = i; i += 1; You're welcome.
And often `IReadonlyCollection&lt;T&gt;`. Prefer immutability over mutability.
Thanks mate, I just might do that. Cheers
Or since he's intiliazing in the same scope as the for, why not use a const.
Dude is just getting to grips to incrementing in a for loop. Hold your horses. Enumerables will come with time...
This works for anyone who wants to become more efficient with computers: learn and utilize shortcuts. Not just for the programs you use, but also for the OS you’re running on. If a keyboard shortcut exists for a given action, it’s almost always way faster than using the mouse to perform the action.
the value 10 is a singleton and not repeated throughout the code (once he switches to array.length) and as such using it as a constant is redundant as you gain no reusability by doing so.
Then you need some kind of installer that is suggested in other comments. Also there is a new installer format from Microsoft that is released recently, it might be of use. [MSIX](https://docs.microsoft.com/en-us/windows/msix/overview)
I'm just expressing that there are other way to do things to a beginner. And if you want to get nit picky about using the constant being redundant, you should be aware that a constant expression is less IL than a property access.
Read Clean Code by R. C. Martin
I do agree with you that List&lt;T&gt; is infinitely more valuable for a C# programmer than an array, especially as you move away from writing code that does a lot of loops and use the .NET/Core frameworks as well as LINQ instead which will tremendously speed up your development. that said, this dude is doing beginner level loops and telling him to use list instead is really the opposite of helpful.
Or a dictionary for faster access, o wait, you could just use an array ;) :)
Yes, leaving out the repo from your "do you like my repo?" post is a classic error :)
my point was more along the lines of that we already have the length in a variable (myArray). defining it again by moving the length to a constant just means duplicating the work. &amp;#x200B; i.e array\[10\] vs const int arrayLength = 10 array\[arrayLength\] you have literally increased your code by more than twice the length which would be worth it if we reuse arrayLength, but while we could we can just reference array.length instead which fulfills the same purpose. I am a huge proponent of the total elimination of magic strings and numbers and always have a const class for strings and numbers in my projects, especially as it makes it easy to localise your code. but in the case of singletons it doesn't really matter.
I would recommend to start with SOLID principles. This is really fundamental set of advices that can be applied not just to software development but literally to anything. This stuff was described in context of software development so this is a hint how to search. You may already know those things with different names. And you may even apply those approaches in your daily life already. Just check it out and try to understand it once again as this condensed list.
Nonono, you need a ConcurrentBag or a Queue to make sure the newbie won't have any chance to understand what the hell is going on.
Awesome. I studied political science in school, but self taught and worked my way to an architecture role and stint as CTO before stepping back into development. Some of the best devs I’ve known have been former finance folks, engineers, or even no formal schooling. I don’t think formal training is nearly as important as ability to learn, for most IT roles (if you’re building the flight system for Boeing, please stay in school, though). There are lots of great resources that have been thrown out, but you need to figure out how you learn. I used to read a lot and would go through at least one book a month (recommend Manning or Apress). The last few years (since I started needing reading glasses), I’ve begun to prefer something like Pluralsight. I also read a number of blogs on a daily basis (Scott Hanselman, Robert Martin, Steve Smith, Mark Seaman, among others). The last couple months, I’ve even gotten into podcasts. Not all those “work” for everyone, and modes can change. Figure out your own way to get info, but those are some ideas. What core principles do you need to know? I recommend folks get comfortable with SOLID (https://en.m.wikipedia.org/wiki/SOLID), especially single responsibility and dependency inversion. Why? Most of the other key principles flow through them in some manner. Discipline wise, take the time to learn TDD. Why? Not (just) because you get tests, but because it pushes you to structure your code better (meaning easier to maintain). It’s not a perfect Venn, but well written code is usually testable and testable code is usually well written. Also, it will follow SOLID. Object oriented isn’t the end of the road. It’s also not in opposition to functional programming. C# has aspects of both, which is why it’s my favorite language. FP can use some wild terms, but it’s worth not dismissing. Also, don’t be dogmatic OOP and FP aren’t good in and of themselves. They are means to an end (better code structure). Don’t violate principles without knowing why (they exist for a reason), but don’t take purists too seriously. Have a personal, side project. I’ve almost always been tinkering with a D&amp;D character manager going. It’s never gotten done because we’ll switch games or take a break, have kids, lose my source code, new edition, whatever. But, it’s been an invaluable tool for me to try new coding techniques.
FWIW ++i will increment the integer PRIOR to assignment. In your case you don't want to edit the iterator (its generally a terrible idea anyway) so you probably want the line to be: items[i] = i+1;
I'm not too sure myself actually, one of my friends suggested it, he said it was basically PowerPoint but just... On the cloud.
We all have knowledge in Python, up to the point of Web scraping. There's one guy that said he started learning Machine Learning with Python so we'll see, but if he's lying(which he probably is) we'll take time to study on it and learn how to integrate it with a C# mobile app... if possible. And even I'm trying to go towards the more simpler apps. The medical bot would need AI and the interior designer would need both AI and AR! So I really don't wanna take those ones, on the other hand, the simpler projects have been done before and we'd have to compete when it's on the market. It's a tough decision
It's true. But what I'm most worried about with the simple apps is that they've been done before, there would be competition and we'd need to find/add features to win over customers
You're incrementing i twice in each pass of the loop, causing you to skip elements of the array. &amp;#x200B; Try this and see the difference: int p = 25; int[] items = new int[10]; for (int i = 0; i &lt; 10; i++) { items[i] = p++; } for (int i = 0; i &lt; 10; i++) { Console.WriteLine(items[i]); }
ah ok, probably what I remember doing was trying to just bring in a specific file instead of using the file picker. My bad! Thanks for the clarification
I did this, the technical language is something I'm getting used to still.
If you have knowledge of Python then you can definitely code deep learning models. Look into Google's Tensorflow. You could pump out CNNs by the afternoon. It is very simple. They are very difficult apps indeed and would require good team work, and a team lead keeping on top of everything (a SCRUM type thing would be needed). Even if you didn't win with a goddamn AR app, then you could definitely leverage it for a good developer job.
&gt;&lt;asp:CheckBox ID="chkSeleccion" runat="server" OnCheckedChanged="chkSeleccion\_CheckedChanged1" AutoPostBack="true"/&gt; &gt; &gt;&lt;/ItemTemplate&gt; &gt; &gt;&lt;FooterTemplate&gt; &gt; &gt;/\* How i can enable this button when the check box is checked \*/ &gt; &gt;&lt;asp:Button ID="btnPagarPolizas" runat="server" ControlStyle-CssClass="btn btn-default btn-xs misClientesPagar" Text="Pagar" Enabled=false OnClick="btnPagarPolizas\_Click"/&gt; I don't know much about webforms but I guess that in WPF you can add Enabled = chkSeleccion.IsChecked ?
Post some formatted code.
That's very encouraging, and it helps that there are ways to integrate it on the mobile devices. If we end up choosing one of those I'll make sure to tackle it full throttle. I'll keep you posted
I'm offended by this comment.
Definitely! I'd be glad to help, feel free to message me.
Check out Apache Guacamole and see if it’d meet your needs.
Not really. Computer science textbooks are about theories and math. "Can we solve this problem given infinite CPU and time? What about with less? What's the lower bound?" etc. CS classes tend to focus on very small projects. My final CSIII lab was on a scale I'd be expected to finish myself in 2-3 weeks solo, and having group members just made it more complicated. That's just not a big enough scale to talk about architecture. A software engineering textbook *might* help, but I find academia horribly dated. When I took software engineering classes in the mid-2000s we discussed waterfall and spiral methodologies, along with a few project management acronyms designed by IBM and others in the 70s and 80s. Agile and Scrum weren't new, but weren't in the books. Where I learned what the industry was doing was at the co-op and internship positions I took. The industry taught me. Sort of. I still had to buy books. Lots of them were as bad as my college textbooks. So what's really meant is to buy a book like one of the following, that teaches architecture and good practices to people who don't know what they are: * *Working Effectively with Legacy Code* * *Agile Patterns, Principles, and Practices in C#* * *Clean Code* * *The Art of Unit Testing*
Never said that. I merely pointed out the false notion that VS is required to have a productive team.
Think about if if you really want to do C# (try a few very different languages and their respective domains before comitting to learning C# in and out)(examples would be a dynamic language like python, a functional one like haskell, a imperative one like C, some webstuff with JS etc. you get what I mean :) ). &amp;#x200B; Other than that: I find books great for learning new languages and you should try to come up with realistic projects you want to do and can challenge yourself with
Thank you for continuing the argument, bro.
Technically, not really. The increment of `i` happens in time *before* being used in the array index or value assignment (it's just that that original value has been saved in a temporary location and used for that assignment). It's more equivalent to something like: int index = i; // save array index from left side of assignment int temp = i; // save original value of i i = temp + 1; // set i to saved value + 1 items[index] = temp; // set array element at saved index to saved value In this particular case, where `i` is a local variable, it usually doesn't matter much. But it does make a difference in some cases (e.g. if `i` can be written by multiple threads).